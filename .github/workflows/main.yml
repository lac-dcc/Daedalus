name: Build and Test Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout your own repo
      - uses: actions/checkout@v4

      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git build-essential cmake ninja-build

      # Always clone llvm-project repo (needed even if build is cached)
      - name: Clone LLVM Project
        run: |
          git clone --depth 100 -b merge-functions-pass https://github.com/Casperento/llvm-project.git llvm-project

      # Cache the LLVM *build* directory
      - name: Cache LLVM 17 build
        id: cache-llvm-17-build
        uses: actions/cache@v4
        with:
          path: llvm-project/build
          key: llvm-17-build-${{ runner.os }}-${{ hashFiles('llvm-project/llvm/CMakeLists.txt') }}
          restore-keys: |
            llvm-17-build-${{ runner.os }}-

      # Only build LLVM if the cache was not hit
      - name: Build LLVM 17
        if: steps.cache-llvm-17-build.outputs.cache-hit != 'true'
        run: |
          mkdir -p llvm-project/build
          cmake -G Ninja \
            -DLLVM_ENABLE_PROJECTS='clang;compiler-rt;lld' \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_TARGETS_TO_BUILD=X86 \
            -DLLVM_ENABLE_ASSERTIONS=On \
            -S llvm-project/llvm \
            -B llvm-project/build
          cmake --build llvm-project/build

      # Force build save
      - name: Save LLVM build
        if: always()
        uses: actions/cache/save@v4
        with:
          path: llvm-project/build
          key: llvm-17-build-${{ runner.os }}-${{ hashFiles('llvm-project/llvm/CMakeLists.txt') }}

      # Add LLVM to PATH
      - name: Add LLVM to PATH
        run: echo "${{ github.workspace }}/llvm-project/build/bin" >> $GITHUB_PATH

      # Debug Environment
      - name: Debug environment
        run: |
          uname -a
          clang --version
          llvm-config --version

      # Build your own project (Daedalus)
      - name: Build Daedalus
        run: |
          mkdir -p build
          cmake -G Ninja \
            -DLLVM_DIR=${{ github.workspace }}/llvm-project/build/lib/cmake/llvm \
            -S . -B build
          cmake --build build

      # Run tests
      - name: Run tests with ctest
        run: ctest --rerun-failed --output-on-failure --test-dir build
