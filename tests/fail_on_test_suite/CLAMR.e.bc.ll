; ModuleID = '/src/llvm-test-suite/build/MultiSource/Benchmarks/DOE-ProxyApps-C++/CLAMR/CLAMR.e.bc'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { ptr }
%struct.timeval = type { i64, i64 }
%class.MallocPlus = type { %"class.std::map", %"class.std::map" }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, malloc_plus_memory_entry *>>, std::less<std::__cxx11::basic_string<char>>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"class.std::ios_base::Init" }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, ptr, ptr, ptr }
%"class.std::basic_ostream.69" = type { ptr, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", ptr, i8, i8, ptr, ptr, ptr, ptr }
%"class.std::ios_base" = type { ptr, i64, i64, i32, i32, i32, ptr, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, ptr, %"struct.std::__cxx11::basic_string<char>::_Alloc_hider" }
%"struct.std::ios_base::_Words" = type { ptr, i64 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%struct.TBounds = type { %struct.TVector, %struct.TVector }
%struct.TVector = type { double, double }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%union.anon = type { i64, [8 x i8] }
%"struct.std::_Deque_iterator" = type { ptr, ptr, ptr, ptr }
%"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data" = type { ptr, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"class.PP::Word" = type { %"class.std::__cxx11::basic_string", i32, i8, i8, i32, i32, %"class.std::__cxx11::basic_string", i32, i32, %"class.std::__cxx11::basic_string", ptr }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], ptr, i8, [7 x i8], ptr, ptr, ptr, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ ptr, i32 }>
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [168 x i8] }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node" = type { ptr, ptr }
%"struct.std::pair.28" = type { %"class.std::__cxx11::basic_string", %"class.PP::Variable" }
%"class.PP::Variable" = type { %"class.std::__cxx11::basic_string", %"class.std::vector", i32, i32, i32, %"class.std::vector", i8, i8, %"class.std::__cxx11::basic_string" }
%"class.std::__cxx11::basic_stringstream" = type { %"class.std::basic_iostream.base", %"class.std::__cxx11::basic_stringbuf", %"class.std::basic_ios" }
%"class.std::basic_iostream.base" = type { %"struct.std::ios_base::_Words", %"struct.std::__cxx11::basic_string<char>::_Alloc_hider" }
%"class.std::__cxx11::basic_stringbuf" = type { %"class.std::basic_streambuf", i32, %"class.std::__cxx11::basic_string" }
%"class.std::basic_streambuf" = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, %"struct.std::__cxx11::basic_string<char>::_Alloc_hider" }
%"class.std::basic_istream" = type { ptr, i64, %"class.std::basic_ios" }
%"struct.std::_Bvector_base<std::allocator<bool>>::_Bvector_impl_data" = type { %"struct.std::_Bit_iterator", %"struct.std::_Bit_iterator", ptr }
%"struct.std::_Bit_iterator" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::basic_filebuf" = type { %"class.std::basic_streambuf", %union.pthread_mutex_t, %"class.std::__basic_file", i32, %struct.__mbstate_t, %struct.__mbstate_t, %struct.__mbstate_t, ptr, i64, i8, i8, i8, i8, ptr, ptr, i8, ptr, ptr, i64, ptr, ptr }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node" }
%"class.std::__basic_file" = type <{ ptr, i8, [7 x i8] }>
%struct.__mbstate_t = type { i32, %union.anon.12 }
%union.anon.12 = type { i32 }
%"class.PP::Comm" = type { i32, i32, i32, i32 }
%"class.PP::Function" = type { %"class.std::__cxx11::basic_string", i8, i32, %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string" }
%struct.TKDTree = type { %struct.TBounds, i32, i32, ptr, i8, i32, ptr, ptr }
%"struct.std::pair.9" = type { %"class.std::__cxx11::basic_string", ptr }
%struct.malloc_plus_memory_entry = type { ptr, i64, ptr, i64, i64, i32, ptr }
%"struct.std::_Rb_tree_node.28" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.29" }
%"struct.__gnu_cxx::__aligned_membuf.29" = type { [40 x i8] }
%"struct.std::_Rb_tree_node.29" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.27" }
%"struct.__gnu_cxx::__aligned_membuf.27" = type { [16 x i8] }
%"class.PP::PowerParser" = type <{ %"class.std::basic_ofstream", ptr, ptr, %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::deque.12", i32, [4 x i8], %"class.std::map", %"class.std::map", %"class.std::map", %"class.std::deque.12", %"class.std::deque.12", ptr, %"class.std::deque.12", i32, [4 x i8], %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream", i32, [4 x i8], %"class.std::__cxx11::basic_string", %"class.std::deque.12", %"class.std::deque.12", i32, [4 x i8], %"class.std::deque.12", %"class.std::deque.12", i32, [4 x i8], %"class.std::deque.12", %"class.std::deque.12", i32, [4 x i8] }>
%"class.std::basic_ofstream" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", %"class.std::basic_filebuf", %"class.std::basic_ios" }
%"class.std::deque.12" = type { %"class.std::_Deque_base.13" }
%"class.std::_Deque_base.13" = type { %"struct.std::_Deque_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Deque_impl" }
%"struct.std::_Deque_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Deque_impl" = type { %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data" }
%"class.PP::Cmd.113" = type { i32, i32, %"class.std::__cxx11::basic_string", ptr, %"class.std::__cxx11::basic_string", ptr, ptr, %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::deque.12", %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", %"class.std::vector", %"class.std::vector", %"class.std::vector.63", %"class.std::vector.63" }
%"class.std::vector.63" = type { %"struct.std::_Bvector_base.112" }
%"struct.std::_Bvector_base.112" = type { %"struct.std::_Bvector_base<std::allocator<bool>>::_Bvector_impl.111" }
%"struct.std::_Bvector_base<std::allocator<bool>>::_Bvector_impl.111" = type { %"struct.std::_Bvector_base<std::allocator<bool>>::_Bvector_impl_data" }
%"class.PP::Whenthen" = type { %"class.std::deque.12", %"class.std::deque.12", %"class.std::deque.12", %"class.std::deque.12", %"class.std::deque.12", %"class.std::deque.12", %"class.std::deque.12", i8, i8, i32 }
%"class.PP::Restartblock" = type { %"class.std::deque.12", %"class.std::deque.12", %"class.std::deque.12", %"class.std::deque.12", %"class.std::deque.12", %"class.std::deque.12", i32, %"class.std::__cxx11::basic_string" }
%"struct.std::pair.85" = type { %"class.std::__cxx11::basic_string", %"class.PP::Function" }
%"struct.std::_Rb_tree_node.123" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.122" }
%"struct.__gnu_cxx::__aligned_membuf.122" = type { [136 x i8] }
%class.Mesh = type { i32, %class.MallocPlus, %class.MallocPlus, [24 x double], [24 x i64], [4 x i32], [4 x i32], i8, i8, i32, i32, i32, i32, i32, ptr, ptr, float, double, i32, %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", ptr, %struct.TKDTree, %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, %"class.std::vector", ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", i32, i32, %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector", %"class.std::vector" }
%class.State = type { %class.MallocPlus, %class.MallocPlus, ptr, ptr, ptr, ptr, [9 x double], [9 x i64] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timeval, %struct.timeval, %struct.timeval, [3 x i64] }
%class.Crux = type { i32, i32, i32 }
%struct.genmalloc_memory_entry = type { ptr, i64, %"struct.std::__cxx11::basic_string<char>::_Alloc_hider" }
%"class.std::__cxx11::list" = type { %"class.std::__cxx11::_List_base" }
%"class.std::__cxx11::_List_base" = type { %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl" }
%"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl" = type { %"struct.std::__detail::_List_node_header" }
%"struct.std::__detail::_List_node_header" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", i64 }
%"struct.std::_List_node" = type <{ %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", %"struct.__gnu_cxx::__aligned_membuf.351", [4 x i8] }>
%"struct.__gnu_cxx::__aligned_membuf.351" = type { [4 x i8] }
%"struct.std::__detail::_Scratch_list" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node" }

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev = comdat any

$_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_ = comdat any

$_ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_ = comdat any

$_ZNSt15__new_allocatorIiE8allocateEmPKv = comdat any

$_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS7_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_ = comdat any

$_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_Lb1EEEOS_IT_T0_E = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSI_PSt13_Rb_tree_nodeISA_E = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev = comdat any

$_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEEE7destroyISB_EEvPT_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_ = comdat any

$_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_Lb1EEEOT_OT0_ = comdat any

$_ZN2PP8VariableC2ERKS0_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_ = comdat any

$_ZNSt6vectorIiSaIiEEC2ERKS1_ = comdat any

$_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv = comdat any

$_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_ = comdat any

$_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev = comdat any

$_ZN2PP8VariableD2Ev = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_ = comdat any

$_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv = comdat any

$_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_ = comdat any

$_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_ = comdat any

$_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc = comdat any

$_ZNSt15__new_allocatorIdE8allocateEmPKv = comdat any

$_ZNSt15__new_allocatorIPbE8allocateEmPKv = comdat any

$_ZNSt15__new_allocatorIPiE8allocateEmPKv = comdat any

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_ = comdat any

$_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entrySt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_ = comdat any

$_ZNSt3mapIPvP24malloc_plus_memory_entrySt4lessIS0_ESaISt4pairIKS0_S2_EEE6insertIS5_IS0_S2_EEENSt9enable_ifIXsr16is_constructibleIS7_T_EE5valueES5_ISt17_Rb_tree_iteratorIS7_EbEE4typeEOSD_ = comdat any

$_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE22_M_emplace_hint_uniqueIJS1_IS0_S4_EEEESt17_Rb_tree_iteratorIS5_ESt23_Rb_tree_const_iteratorIS5_EDpOT_ = comdat any

$_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS2_ = comdat any

$_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E = comdat any

$_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE24_M_get_insert_unique_posERS2_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS7_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_ = comdat any

$_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entryEC2IS5_S8_Lb1EEEOS_IT_T0_E = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSI_PSt13_Rb_tree_nodeISA_E = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_ = comdat any

$_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS5_E = comdat any

$_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EEC2ERKSB_ = comdat any

$_ZNSt6vectorIiSaIiEE6resizeEm = comdat any

$_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev = comdat any

$_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE4findERS7_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISA_E = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_emplace_uniqueIJS6_IPKcS9_EEEES6_ISt17_Rb_tree_iteratorISA_EbEDpOT_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeIJS6_IPKcS9_EEEEvPSt13_Rb_tree_nodeISA_EDpOT_ = comdat any

$_ZNSt6vectorIiSaIiEE17_M_default_appendEm = comdat any

$_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ERKSB_RT0_ = comdat any

$_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ESG_PSt18_Rb_tree_node_baseRT0_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E = comdat any

$_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEED2Ev = comdat any

$_ZNSt11_Deque_baseIbSaIbEED2Ev = comdat any

$_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev = comdat any

$_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev = comdat any

$_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EED2Ev = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E = comdat any

$_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEEE7destroyISB_EEvPT_ = comdat any

$_ZNSt5dequeIN2PP3CmdESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_ = comdat any

$_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EED2Ev = comdat any

$_ZN2PP3CmdD2Ev = comdat any

$_ZNSt5dequeIN2PP8WhenthenESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_ = comdat any

$_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EED2Ev = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPN2PP8WhenthenEEEvT_S5_ = comdat any

$_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_ = comdat any

$_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EED2Ev = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPN2PP12RestartblockEEEvT_S5_ = comdat any

$_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_ = comdat any

$_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_ = comdat any

$_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_ = comdat any

$_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev = comdat any

$_ZN2PP8FunctionD2Ev = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_ = comdat any

$_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_S8_Lb1EEEOS_IT_T0_E = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSI_PSt13_Rb_tree_nodeISA_E = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIbSaIbEE15_M_create_nodesEPPbS3_ = comdat any

$_ZNSt15__new_allocatorIPN2PP12RestartblockEE8allocateEmPKv = comdat any

$_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE15_M_create_nodesEPPS1_S5_ = comdat any

$_ZNSt15__new_allocatorIPN2PP8WhenthenEE8allocateEmPKv = comdat any

$_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE15_M_create_nodesEPPS1_S5_ = comdat any

$_ZNSt15__new_allocatorIPN2PP3CmdEE8allocateEmPKv = comdat any

$_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE15_M_create_nodesEPPS1_S5_ = comdat any

$_ZNSt15__new_allocatorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv = comdat any

$_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_create_nodesEPPS5_S9_ = comdat any

$_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5clearEv = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE5clearEv = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE5clearEv = comdat any

$_ZNSt5dequeIN2PP3CmdESaIS1_EE5clearEv = comdat any

$_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv = comdat any

$_ZNSt5dequeIN2PP12RestartblockESaIS1_EE5clearEv = comdat any

$_ZNSt5dequeIN2PP12RestartblockESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E = comdat any

$_ZNSt5dequeIN2PP8WhenthenESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E = comdat any

$_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E = comdat any

$_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E = comdat any

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_ = comdat any

$_ZN10MallocPlusD2Ev = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKS0_ = comdat any

$_ZN4MeshD2Ev = comdat any

$_ZN5StateD2Ev = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EEC2ERKSG_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ERKSG_RT0_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ESL_PSt18_Rb_tree_node_baseRT0_ = comdat any

$_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeIJRKSA_EEEvPSt13_Rb_tree_nodeISA_EDpOT_ = comdat any

$_ZNSt6vectorIdSaIdEE6resizeEm = comdat any

$_ZNSt6vectorIdSaIdEE17_M_default_appendEm = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt6vectorIdSaIdEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE6resizeEmRKi = comdat any

$_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi = comdat any

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_ = comdat any

$_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_ = comdat any

$_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_ = comdat any

$_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_S9_T0_ = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_ = comdat any

$_ZNSt7__cxx114listIiSaIiEE4sortEv = comdat any

$_ZNSt7__cxx114listIiSaIiEE6uniqueEv = comdat any

$_ZNSt8__detail13_Scratch_list5mergeINS0_8_Ptr_cmpISt14_List_iteratorIiEvEEEEvRNS_15_List_node_baseET_ = comdat any

$_ZNSt6vectorIdSaIdEED2Ev = comdat any

@llvm.global_ctors = appending global [11 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_Cmd.cc, ptr null }, { i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_Function.cc, ptr null }, { i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_Parser_math.cc, ptr null }, { i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_Parser_utils.cc, ptr null }, { i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_PowerParser.cc, ptr null }, { i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_Restartblock.cc, ptr null }, { i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_Variable.cc, ptr null }, { i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_Whenthen.cc, ptr null }, { i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_Word.cc, ptr null }, { i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_clamr_cpuonly.cpp, ptr null }, { i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_input.cpp, ptr null }]
@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@.str.222 = private unnamed_addr constant [55 x i8] c"%s: __pos (which is %zu) > this->size() (which is %zu)\00", align 1
@.str.224 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@.str.225 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@.str.226 = private unnamed_addr constant [22 x i8] c"basic_string::replace\00", align 1
@.str.228 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@_ZStL8__ioinit.2 = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@_Z15it_save_by_nameB5cxx11 = internal global %"struct.std::__cxx11::basic_string<char>::_Alloc_hider" zeroinitializer, align 8
@.str.10 = private unnamed_addr constant [50 x i8] c"basic_string: construction from null is not valid\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@_ZStL8__ioinit.5 = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@_ZStL8__ioinit.7 = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@_ZStL8__ioinit.9 = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.123 = private unnamed_addr constant [13 x i8] c"$huge_double\00", align 1
@.str.124 = private unnamed_addr constant [19 x i8] c"largest double/2.0\00", align 1
@.str.125 = private unnamed_addr constant [12 x i8] c"$huge_float\00", align 1
@.str.126 = private unnamed_addr constant [14 x i8] c"largest float\00", align 1
@.str.127 = private unnamed_addr constant [10 x i8] c"$huge_int\00", align 1
@.str.128 = private unnamed_addr constant [16 x i8] c"largest integer\00", align 1
@.str.129 = private unnamed_addr constant [13 x i8] c"$tiny_double\00", align 1
@.str.130 = private unnamed_addr constant [15 x i8] c"tiniest double\00", align 1
@.str.131 = private unnamed_addr constant [12 x i8] c"$tiny_float\00", align 1
@.str.132 = private unnamed_addr constant [14 x i8] c"tiniest float\00", align 1
@.str.133 = private unnamed_addr constant [10 x i8] c"$tiny_int\00", align 1
@.str.134 = private unnamed_addr constant [16 x i8] c"tiniest integer\00", align 1
@.str.135 = private unnamed_addr constant [12 x i8] c"$ncores_tot\00", align 1
@.str.136 = private unnamed_addr constant [22 x i8] c"total number of cores\00", align 1
@.str.137 = private unnamed_addr constant [5 x i8] c"acos\00", align 1
@.str.138 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.139 = private unnamed_addr constant [32 x i8] c"arccosine, radians, arg -1 to 1\00", align 1
@.str.140 = private unnamed_addr constant [5 x i8] c"asin\00", align 1
@.str.141 = private unnamed_addr constant [30 x i8] c"arcsine, radians, arg -1 to 1\00", align 1
@.str.142 = private unnamed_addr constant [5 x i8] c"atan\00", align 1
@.str.143 = private unnamed_addr constant [28 x i8] c"arctangent, returns radians\00", align 1
@.str.144 = private unnamed_addr constant [5 x i8] c"ceil\00", align 1
@.str.145 = private unnamed_addr constant [31 x i8] c"round up (smallest int >= arg)\00", align 1
@.str.146 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str.147 = private unnamed_addr constant [23 x i8] c"cosine, arg in radians\00", align 1
@.str.148 = private unnamed_addr constant [5 x i8] c"cosh\00", align 1
@.str.149 = private unnamed_addr constant [18 x i8] c"hyperbolic cosine\00", align 1
@.str.150 = private unnamed_addr constant [4 x i8] c"exp\00", align 1
@.str.151 = private unnamed_addr constant [12 x i8] c"exponential\00", align 1
@.str.152 = private unnamed_addr constant [5 x i8] c"fabs\00", align 1
@.str.153 = private unnamed_addr constant [25 x i8] c"absolute value of a real\00", align 1
@.str.154 = private unnamed_addr constant [6 x i8] c"floor\00", align 1
@.str.155 = private unnamed_addr constant [32 x i8] c"round down (largest int <= arg)\00", align 1
@.str.156 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.157 = private unnamed_addr constant [21 x i8] c"log to base e, arg>0\00", align 1
@.str.158 = private unnamed_addr constant [6 x i8] c"log10\00", align 1
@.str.159 = private unnamed_addr constant [22 x i8] c"log to base 10, arg>0\00", align 1
@.str.160 = private unnamed_addr constant [4 x i8] c"sin\00", align 1
@.str.161 = private unnamed_addr constant [21 x i8] c"sine, arg in radians\00", align 1
@.str.162 = private unnamed_addr constant [5 x i8] c"sinh\00", align 1
@.str.163 = private unnamed_addr constant [16 x i8] c"hyperbolic sine\00", align 1
@.str.164 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str.165 = private unnamed_addr constant [23 x i8] c"square root (arg >= 0)\00", align 1
@.str.166 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str.167 = private unnamed_addr constant [24 x i8] c"tangent, arg in radians\00", align 1
@.str.168 = private unnamed_addr constant [5 x i8] c"tanh\00", align 1
@.str.169 = private unnamed_addr constant [19 x i8] c"hyperbolic tangent\00", align 1
@.str.170 = private unnamed_addr constant [6 x i8] c"atan2\00", align 1
@.str.171 = private unnamed_addr constant [19 x i8] c"arctangent, 2 args\00", align 1
@.str.172 = private unnamed_addr constant [5 x i8] c"fmod\00", align 1
@.str.173 = private unnamed_addr constant [23 x i8] c"remainder of arg1/arg2\00", align 1
@.str.174 = private unnamed_addr constant [4 x i8] c"pow\00", align 1
@.str.175 = private unnamed_addr constant [26 x i8] c"arg1 raised to arg2 power\00", align 1
@.str.176 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.177 = private unnamed_addr constant [31 x i8] c"return the greater of two args\00", align 1
@.str.178 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.179 = private unnamed_addr constant [30 x i8] c"return the lesser of two args\00", align 1
@.str.180 = private unnamed_addr constant [7 x i8] c"strlen\00", align 1
@.str.181 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.182 = private unnamed_addr constant [23 x i8] c"number of chars in arg\00", align 1
@.str.183 = private unnamed_addr constant [7 x i8] c"strcat\00", align 1
@.str.184 = private unnamed_addr constant [24 x i8] c"concatenate two strings\00", align 1
@.str.185 = private unnamed_addr constant [9 x i8] c"strerase\00", align 1
@.str.186 = private unnamed_addr constant [24 x i8] c"erase chars from string\00", align 1
@.str.187 = private unnamed_addr constant [10 x i8] c"strinsert\00", align 1
@.str.188 = private unnamed_addr constant [25 x i8] c"insert chars into string\00", align 1
@.str.189 = private unnamed_addr constant [10 x i8] c"strsubstr\00", align 1
@.str.190 = private unnamed_addr constant [15 x i8] c"get sub string\00", align 1
@.str.191 = private unnamed_addr constant [8 x i8] c"strtrim\00", align 1
@.str.192 = private unnamed_addr constant [27 x i8] c"remove trailing whitespace\00", align 1
@.str.193 = private unnamed_addr constant [8 x i8] c"defined\00", align 1
@.str.194 = private unnamed_addr constant [8 x i8] c"logical\00", align 1
@.str.195 = private unnamed_addr constant [29 x i8] c"is a variable defined or not\00", align 1
@_ZTVSt14basic_ofstreamIcSt11char_traitsIcEE = external unnamed_addr constant { [5 x ptr], [5 x ptr] }, align 8
@_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE = external unnamed_addr constant [4 x ptr], align 8
@_ZTVSt13basic_filebufIcSt11char_traitsIcEE = external unnamed_addr constant { [16 x ptr] }, align 8
@_ZStL8__ioinit.11 = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@_ZStL8__ioinit.13 = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@_ZStL8__ioinit.17 = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@_ZStL8__ioinit.19 = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE = external unnamed_addr constant { [5 x ptr], [5 x ptr], [5 x ptr] }, align 8
@_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE = external unnamed_addr constant [10 x ptr], align 8
@_ZTVSt9basic_iosIcSt11char_traitsIcEE = external unnamed_addr constant { [4 x ptr] }, align 8
@_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE = external unnamed_addr constant { [16 x ptr] }, align 8
@_ZTVSt15basic_streambufIcSt11char_traitsIcEE = external unnamed_addr constant { [16 x ptr] }, align 8
@set_graphics_cell_coordinates = internal global ptr @set_graphics_cell_coordinates_double, align 8
@set_graphics_cell_data = internal global ptr @set_graphics_cell_data_double, align 8
@numpe = internal global i32 0, align 4
@ndim = internal global i32 2, align 4
@total_sim_time_log = internal global [25 x i8] c"total_execution_time.log\00", align 16
@total_exec = internal global %struct.timeval zeroinitializer, align 8
@_ZL5parse = internal unnamed_addr global ptr null, align 8
@_ZL4crux = internal unnamed_addr global ptr null, align 8
@_ZL11circ_radius = internal unnamed_addr global double 0.000000e+00, align 8
@_ZL4mesh = internal unnamed_addr global ptr null, align 8
@_ZL5state = internal unnamed_addr global ptr null, align 8
@_ZL19next_graphics_cycle = internal unnamed_addr global i32 0, align 4
@_ZL13next_cp_cycle = internal unnamed_addr global i32 0, align 4
@.str.28 = private unnamed_addr constant [45 x i8] c"Mass of initialized cells equal to %14.12lg\0A\00", align 1
@_ZL13H_sum_initial = internal unnamed_addr global double 0.000000e+00, align 8
@_ZL6ncycle = internal unnamed_addr global i32 0, align 4
@.str.1 = private unnamed_addr constant [69 x i8] c"Iteration %3d timestep %lf Sim Time %lf cells %ld Mass Sum %14.12lg\0A\00", align 1
@_ZL6deltaT = internal unnamed_addr global double 0.000000e+00, align 8
@_ZL7simTime = internal unnamed_addr global double 0.000000e+00, align 8
@.str.2 = private unnamed_addr constant [79 x i8] c"Iteration   0 timestep      n/a Sim Time      0.0 cells %ld Mass Sum %14.12lg\0A\00", align 1
@_ZL10tstart_cpu = internal global %struct.timeval zeroinitializer, align 8
@_ZL9view_mode = internal unnamed_addr global i1 false, align 4
@_ZL17cpu_time_graphics = internal unnamed_addr global double 0.000000e+00, align 8
@_ZL6tstart = internal global %struct.timeval zeroinitializer, align 8
@_ZL2it = internal unnamed_addr global i32 0, align 4
@_ZZ7do_calcE16rollback_attempt = internal unnamed_addr global i32 0, align 4
@_ZZ7do_calcE18total_program_time = internal unnamed_addr global double 0.000000e+00, align 8
@_ZL15tstart_partmeas = internal global %struct.timeval zeroinitializer, align 8
@_ZL17cpu_time_partmeas = internal unnamed_addr global double 0.000000e+00, align 8
@_ZL14cpu_time_calcs = internal unnamed_addr global double 0.000000e+00, align 8
@.str.3 = private unnamed_addr constant [23 x i8] c"Got a NAN on cycle %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [95 x i8] c"Mass difference outside of acceptable range on cycle %d percent_mass_diff %lg upper limit %lg\0A\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.7 = private unnamed_addr constant [71 x i8] c"The total execution time of the program before failure was %g seconds\0A\00", align 1
@.str.9 = private unnamed_addr constant [41 x i8] c"Rolling simulation back to to ncycle %d\0A\00", align 1
@.str.11.29 = private unnamed_addr constant [89 x i8] c"Iteration %3d timestep %lf Sim Time %lf cells %ld Mass Sum %14.12lg Mass Change %12.6lg\0A\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"CPU:  rezone frequency                \09 %8.4f\09percent\0A\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"CPU:  calc neigh frequency            \09 %8.4f\09percent\0A\00", align 1
@.str.14 = private unnamed_addr constant [48 x i8] c"CPU:  refine_smooth_iter per rezone   \09 %8.4f\09\0A\00", align 1
@.str.15 = private unnamed_addr constant [56 x i8] c"The total execution time of the program was %g seconds\0A\00", align 1
@clamr_bootstrap_memory = internal global %class.MallocPlus zeroinitializer, align 8
@.str.16 = private unnamed_addr constant [19 x i8] c"bootstrap_int_vals\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"bootstrap_double_vals\00", align 1
@.str.18 = private unnamed_addr constant [84 x i8] c"CRUX version mismatch for clamr data, version on file is %d, version in code is %d\0A\00", align 1
@.str.20.30 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@str = private unnamed_addr constant [29 x i8] c"failure.log has been created\00", align 1
@str.21 = private unnamed_addr constant [39 x i8] c"Rolling simulation back to to ncycle 0\00", align 1
@str.22 = private unnamed_addr constant [66 x i8] c"Can not recover from error from back up files. Killing program...\00", align 1
@do_crux_timing = internal global i8 0, align 1
@checkpoint_directory = internal global [18 x i8] c"checkpoint_output\00", align 16
@cp_num = internal global i32 0, align 4
@rs_num = internal global i32 0, align 4
@crux_data = internal global ptr null, align 8
@crux_data_size = internal global ptr null, align 8
@crux_time_fp = internal global ptr null, align 8
@tcheckpoint_time = internal global %struct.timeval zeroinitializer, align 8
@trestore_time = internal global %struct.timeval zeroinitializer, align 8
@checkpoint_timing_count = internal global i32 0, align 4
@checkpoint_timing_sum = internal global float 0.000000e+00, align 4
@checkpoint_timing_size = internal global float 0.000000e+00, align 4
@rollback_attempt = internal global i32 0, align 4
@store_fp = internal global ptr null, align 8
@restore_fp = internal global ptr null, align 8
@.str.31 = private unnamed_addr constant [19 x i8] c"%s/crux_timing.log\00", align 1
@.str.1.32 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.2.33 = private unnamed_addr constant [67 x i8] c"CRUX checkpointing time averaged %f msec, bandwidth %f Mbytes/sec\0A\00", align 1
@.str.3.38 = private unnamed_addr constant [18 x i8] c"%s/backup%05d.crx\00", align 1
@.str.4.39 = private unnamed_addr constant [15 x i8] c"backup%05d.crx\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"Could not write %s at iteration %d\0A\00", align 1
@.str.6.40 = private unnamed_addr constant [17 x i8] c"%s/backup%1d.crx\00", align 1
@.str.7.44 = private unnamed_addr constant [45 x i8] c"Total time for checkpointing was %g seconds\0A\00", align 1
@restore_type = internal global i32 0, align 4
@.str.8 = private unnamed_addr constant [39 x i8] c"ERROR in restore checkpoint for %s %s\0A\00", align 1
@.str.10.50 = private unnamed_addr constant [37 x i8] c"  Restoring state from disk file %s\0A\00", align 1
@.str.12.52 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.13.53 = private unnamed_addr constant [32 x i8] c"Could not open restart file %s\0A\00", align 1
@.str.14.54 = private unnamed_addr constant [68 x i8] c"Restoring state from memory rollback number %d rollback_counter %d\0A\00", align 1
@.str.15.55 = private unnamed_addr constant [16 x i8] c"%s/backup%d.crx\00", align 1
@.str.16.56 = private unnamed_addr constant [55 x i8] c"Restoring state from disk file %s rollback_counter %d\0A\00", align 1
@.str.17.57 = private unnamed_addr constant [32 x i8] c"Could not open restore file %s\0A\00", align 1
@.str.18.41 = private unnamed_addr constant [64 x i8] c"Warning: number of elements read %d is not equal to request %d\0A\00", align 1
@.str.19 = private unnamed_addr constant [66 x i8] c"Warning: number of elements read %lu is not equal to request %lu\0A\00", align 1
@.str.20.60 = private unnamed_addr constant [39 x i8] c"Total time for restore was %g seconds\0A\00", align 1
@.str.21 = private unnamed_addr constant [43 x i8] c"Total time for rollback %d was %g seconds\0A\00", align 1
@str.49 = private unnamed_addr constant [68 x i8] c"\0A  ================================================================\00", align 1
@str.22.51 = private unnamed_addr constant [68 x i8] c"  ================================================================\0A\00", align 1
@genmalloc_memory_head = internal global %"struct.std::__cxx11::basic_string<char>::_Alloc_hider" zeroinitializer, align 8
@genmalloc_memory_item = internal global ptr null, align 8
@next = internal unnamed_addr global i32 0, align 4
@table = internal unnamed_addr global [344 x i32] zeroinitializer, align 16
@.str.71 = private unnamed_addr constant [16 x i8] c"graphics_output\00", align 1
@graphics_directory = internal global ptr @.str.71, align 8
@graphics_ymax = internal unnamed_addr global float 0.000000e+00, align 4
@graphics_ymin = internal unnamed_addr global float 0.000000e+00, align 4
@graphics_xmax = internal unnamed_addr global float 0.000000e+00, align 4
@graphics_xmin = internal unnamed_addr global float 0.000000e+00, align 4
@xconversion = internal unnamed_addr global double 0.000000e+00, align 8
@yconversion = internal unnamed_addr global double 0.000000e+00, align 8
@data_type = internal unnamed_addr global i1 false, align 4
@data_double = internal unnamed_addr global ptr null, align 8
@data_float = internal unnamed_addr global ptr null, align 8
@graphics_proc = internal unnamed_addr global ptr null, align 8
@x_double = internal unnamed_addr global ptr null, align 8
@dx_double = internal unnamed_addr global ptr null, align 8
@y_double = internal unnamed_addr global ptr null, align 8
@dy_double = internal unnamed_addr global ptr null, align 8
@x_float = internal unnamed_addr global ptr null, align 8
@dx_float = internal unnamed_addr global ptr null, align 8
@y_float = internal unnamed_addr global ptr null, align 8
@dy_float = internal unnamed_addr global ptr null, align 8
@graphics_view_mode = internal unnamed_addr global i32 0, align 4
@graphics_mysize = internal unnamed_addr global i32 0, align 4
@.str.1.88 = private unnamed_addr constant [22 x i8] c"%s/graph%dcp%05d.data\00", align 1
@.str.2.89 = private unnamed_addr constant [23 x i8] c"%s/outline%dcp%05d.lin\00", align 1
@.str.3.90 = private unnamed_addr constant [18 x i8] c"%s/graph%05d.data\00", align 1
@.str.4.91 = private unnamed_addr constant [19 x i8] c"%s/outline%05d.lin\00", align 1
@.str.5.92 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.6.93 = private unnamed_addr constant [8 x i8] c"%d,%lf\0A\00", align 1
@.str.7.94 = private unnamed_addr constant [16 x i8] c"%d,%d,%d,%d,%d\0A\00", align 1
@.str.8.95 = private unnamed_addr constant [13 x i8] c"%d,%d,%d,%d\0A\00", align 1
@iteration = internal unnamed_addr global i32 0, align 4
@.str.9.96 = private unnamed_addr constant [36 x i8] c"Could not create %s in DrawSqaures\0A\00", align 1
@.str.10.97 = private unnamed_addr constant [41 x i8] c"Could not open %s in DisplayStateToFile\0A\00", align 1
@hash_method = internal unnamed_addr global i32 0, align 4
@hashtablesize = internal unnamed_addr global i32 0, align 4
@hash_ncells = internal unnamed_addr global i32 0, align 4
@write_hash_collisions = internal unnamed_addr global i32 0, align 4
@read_hash_collisions = internal unnamed_addr global i32 0, align 4
@hash_queries = internal unnamed_addr global i32 0, align 4
@hash_report_level = internal unnamed_addr global i32 2, align 4
@hash_stride = internal unnamed_addr global i32 0, align 4
@.str.100 = private unnamed_addr constant [119 x i8] c"DEBUG hash_method %d hash_mem_ratio %f hash_mem_factor %f mem_opt_factor %f perfect_hash_size %u compact_hash_size %u\0A\00", align 1
@.str.1.101 = private unnamed_addr constant [83 x i8] c"DEBUG do_compact_hash %d hash_method %d perfect_hash_size %u compact_hash_size %u\0A\00", align 1
@AA = internal unnamed_addr global i64 0, align 8
@BB = internal unnamed_addr global i64 0, align 8
@.str.2.102 = private unnamed_addr constant [23 x i8] c"Factors AA %lu BB %lu\0A\00", align 1
@.str.3.103 = private unnamed_addr constant [75 x i8] c"/src/llvm-test-suite/MultiSource/Benchmarks/DOE-ProxyApps-C++/CLAMR/hash.c\00", align 1
@.str.4.104 = private unnamed_addr constant [83 x i8] c"Hash table size %u perfect hash table size %u memory savings %d by percentage %lf\0A\00", align 1
@.str.5.105 = private unnamed_addr constant [74 x i8] c"%d: cell %d hashloc is %d hash[2*hashloc] = %d hashkey %lu ii %lu jj %lu\0A\00", align 1
@.str.7.106 = private unnamed_addr constant [66 x i8] c"%d: hashloc is %d hash[2*hashloc] = %d hashkey %lu ii %lu jj %lu\0A\00", align 1
@write_hash_collisions_runsum = internal unnamed_addr global double 0.000000e+00, align 8
@write_hash_collisions_count = internal unnamed_addr global i32 0, align 4
@.str.8.107 = private unnamed_addr constant [80 x i8] c"Write hash collision report -- collisions per cell %lf, collisions %d cells %d\0A\00", align 1
@read_hash_collisions_runsum = internal unnamed_addr global double 0.000000e+00, align 8
@read_hash_collisions_count = internal unnamed_addr global i32 0, align 4
@.str.9.108 = private unnamed_addr constant [79 x i8] c"Read hash collision report -- collisions per cell %lf, collisions %d cells %d\0A\00", align 1
@.str.10.109 = private unnamed_addr constant [28 x i8] c"hash table size  bytes %ld\0A\00", align 1
@.str.11.110 = private unnamed_addr constant [71 x i8] c"Final hash collision report -- write/read collisions per cell %lf/%lf\0A\00", align 1
@str.24 = private unnamed_addr constant [39 x i8] c"Error -- too many read hash collisions\00", align 1
@hsfc2d.init = internal unnamed_addr global i1 false, align 4
@hsfc2d.gray_inv = internal unnamed_addr global [4 x i8] zeroinitializer, align 1
@_ZStL8__ioinit.112 = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@progName = internal global [12 x i8] zeroinitializer, align 1
@progVers = internal global [8 x i8] zeroinitializer, align 1
@_ZSt4cout = external global %"class.std::basic_ostream.69", align 8
@.str.113 = private unnamed_addr constant [68 x i8] c"CLAMR is an experimental adaptive mesh refinement code for the GPU.\00", align 1
@.str.1.114 = private unnamed_addr constant [9 x i8] c"Usage:  \00", align 1
@.str.2.115 = private unnamed_addr constant [14 x i8] c" [options]...\00", align 1
@.str.3.116 = private unnamed_addr constant [78 x i8] c"  -b <B>            Number of rollback images, disk or in memory (default 2);\00", align 1
@.str.4.117 = private unnamed_addr constant [62 x i8] c"  -c <C>            Checkpoint to disk at interval specified;\00", align 1
@.str.5.118 = private unnamed_addr constant [64 x i8] c"  -C <C>            Checkpoint to memory at interval specified;\00", align 1
@.str.6.119 = private unnamed_addr constant [37 x i8] c"  -d                turn on LTTRACE;\00", align 1
@.str.7.120 = private unnamed_addr constant [66 x i8] c"  -D                turn on dynamic load balancing using LTTRACE;\00", align 1
@.str.8.121 = private unnamed_addr constant [63 x i8] c"  -e <E>            force hash_method, ie linear, quadratic...\00", align 1
@.str.9.122 = private unnamed_addr constant [16 x i8] c"      \22perfect\22\00", align 1
@.str.10.123 = private unnamed_addr constant [15 x i8] c"      \22linear\22\00", align 1
@.str.11.124 = private unnamed_addr constant [18 x i8] c"      \22quadratic\22\00", align 1
@.str.12.125 = private unnamed_addr constant [19 x i8] c"      \22prime_jump\22\00", align 1
@.str.13.126 = private unnamed_addr constant [50 x i8] c"  -f                face-based finite difference;\00", align 1
@.str.14.127 = private unnamed_addr constant [92 x i8] c"  -g <g>            specify I step between saving graphics information for post processing;\00", align 1
@.str.15.128 = private unnamed_addr constant [68 x i8] c"  -G <G>            specify graphics file type for post processing;\00", align 1
@.str.16.129 = private unnamed_addr constant [12 x i8] c"      \22bmp\22\00", align 1
@.str.17.130 = private unnamed_addr constant [12 x i8] c"      \22gif\22\00", align 1
@.str.18.131 = private unnamed_addr constant [13 x i8] c"      \22jpeg\22\00", align 1
@.str.19.132 = private unnamed_addr constant [13 x i8] c"      \22mpeg\22\00", align 1
@.str.20.133 = private unnamed_addr constant [12 x i8] c"      \22pdf\22\00", align 1
@.str.21.134 = private unnamed_addr constant [12 x i8] c"      \22png\22\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"      \22svg\22\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"      \22data\22\00", align 1
@.str.24 = private unnamed_addr constant [47 x i8] c"  -h                display this help message;\00", align 1
@.str.25 = private unnamed_addr constant [58 x i8] c"  -i <I>            specify I steps between output files;\00", align 1
@.str.26 = private unnamed_addr constant [42 x i8] c"  -l <l>            max number of levels;\00", align 1
@.str.27 = private unnamed_addr constant [111 x i8] c"  -M <M>            memory optimization factor 1.0 <= M <=100.0 (default 1.0 -- represents 1/20 perfect hash);\00", align 1
@.str.28.135 = private unnamed_addr constant [52 x i8] c"  -m <m>            specify partition measure type;\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"      \22with_duplicates\22\00", align 1
@.str.30 = private unnamed_addr constant [27 x i8] c"      \22without_duplicates\22\00", align 1
@.str.31.136 = private unnamed_addr constant [48 x i8] c"  -N <n>            specify calc neighbor type;\00", align 1
@.str.32 = private unnamed_addr constant [19 x i8] c"      \22hash_table\22\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"      \22kdtree\22\00", align 1
@.str.34 = private unnamed_addr constant [59 x i8] c"  -n <N>            specify coarse grid resolution of NxN;\00", align 1
@.str.35 = private unnamed_addr constant [39 x i8] c"  -o                turn off outlines;\00", align 1
@.str.36 = private unnamed_addr constant [45 x i8] c"  -P <P>            specify initial order P;\00", align 1
@.str.37 = private unnamed_addr constant [23 x i8] c"      \22original_order\22\00", align 1
@.str.38 = private unnamed_addr constant [21 x i8] c"      \22hilbert_sort\22\00", align 1
@.str.39 = private unnamed_addr constant [26 x i8] c"      \22hilbert_partition\22\00", align 1
@.str.40 = private unnamed_addr constant [16 x i8] c"      \22z_order\22\00", align 1
@.str.41 = private unnamed_addr constant [52 x i8] c"  -p <p>            specify ordering P every cycle;\00", align 1
@.str.42 = private unnamed_addr constant [22 x i8] c"      \22local_hilbert\22\00", align 1
@.str.43 = private unnamed_addr constant [20 x i8] c"      \22local_fixed\22\00", align 1
@.str.44 = private unnamed_addr constant [33 x i8] c"  -q                turn on quo;\00", align 1
@.str.45 = private unnamed_addr constant [79 x i8] c"  -r                regular sum instead of enhanced precision sum (Kahan sum);\00", align 1
@.str.46 = private unnamed_addr constant [71 x i8] c"  -R                restart simulation from the backup file specified;\00", align 1
@.str.47 = private unnamed_addr constant [58 x i8] c"  -s <s>            specify space-filling curve method S;\00", align 1
@.str.48 = private unnamed_addr constant [73 x i8] c"  -S                write out double precision data as single precision;\00", align 1
@.str.49 = private unnamed_addr constant [38 x i8] c"  -T                execute with TVD;\00", align 1
@.str.50 = private unnamed_addr constant [49 x i8] c"  -t <t>            specify T time steps to run;\00", align 1
@.str.51 = private unnamed_addr constant [92 x i8] c"  -u                allowed percentage of difference between total mass between iterations.\00", align 1
@.str.52 = private unnamed_addr constant [69 x i8] c"                    the default value for this parameter is 2.6e-13;\00", align 1
@.str.53 = private unnamed_addr constant [40 x i8] c"  -V                use verbose output;\00", align 1
@.str.54 = private unnamed_addr constant [49 x i8] c"  -v                display version information.\00", align 1
@.str.55 = private unnamed_addr constant [54 x i8] c"  -z                force recalculation of neighbors.\00", align 1
@.str.56 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"clamr\00", align 1
@verbose = internal global i8 0, align 1
@outline = internal global i8 0, align 1
@crux_type = internal global i32 0, align 4
@face_based = internal global i8 0, align 1
@restart = internal global i8 0, align 1
@restart_file = internal global ptr null, align 8
@outputInterval = internal global i32 0, align 4
@nx = internal global i32 0, align 4
@ny = internal global i32 0, align 4
@niter = internal global i32 0, align 4
@choose_hash_method = internal global i32 0, align 4
@graphic_outputInterval = internal global i32 0, align 4
@graphics_type = internal global i32 0, align 4
@checkpoint_outputInterval = internal global i32 0, align 4
@num_of_rollback_states = internal global i32 0, align 4
@levmx = internal global i32 0, align 4
@mem_opt_factor = internal global float 0.000000e+00, align 4
@upper_mass_diff_percentage = internal global double 0.000000e+00, align 8
@enhanced_precision_sum = internal global i32 0, align 4
@.str.58 = private unnamed_addr constant [5 x i8] c" ,.-\00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c" ,\00", align 1
@.str.62 = private unnamed_addr constant [8 x i8] c"perfect\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"linear\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"quadratic\00", align 1
@.str.65 = private unnamed_addr constant [11 x i8] c"prime_jump\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.68 = private unnamed_addr constant [47 x i8] c"Unrecognized option for graphics file type %s\0A\00", align 1
@.str.69 = private unnamed_addr constant [21 x i8] c"no_partition_measure\00", align 1
@.str.70 = private unnamed_addr constant [16 x i8] c"with_duplicates\00", align 1
@.str.71.140 = private unnamed_addr constant [19 x i8] c"without_duplicates\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"cvalue\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"cstarvalue\00", align 1
@.str.74 = private unnamed_addr constant [11 x i8] c"hash_table\00", align 1
@.str.75 = private unnamed_addr constant [7 x i8] c"kdtree\00", align 1
@.str.76 = private unnamed_addr constant [15 x i8] c"original_order\00", align 1
@.str.77 = private unnamed_addr constant [13 x i8] c"hilbert_sort\00", align 1
@.str.78 = private unnamed_addr constant [18 x i8] c"hilbert_partition\00", align 1
@.str.79 = private unnamed_addr constant [8 x i8] c"z_order\00", align 1
@.str.80 = private unnamed_addr constant [14 x i8] c"local_hilbert\00", align 1
@.str.81 = private unnamed_addr constant [12 x i8] c"local_fixed\00", align 1
@.str.82 = private unnamed_addr constant [12 x i8] c"regular_sum\00", align 1
@.str.83 = private unnamed_addr constant [10 x i8] c"kahan_sum\00", align 1
@.str.84 = private unnamed_addr constant [28 x i8] c"Error with sum argument %s\0A\00", align 1
@.str.85 = private unnamed_addr constant [41 x i8] c"Error -- restart file %s does not exist\0A\00", align 1
@.str.86 = private unnamed_addr constant [29 x i8] c"\E2\9A\A0 Unknown input parameter \00", align 1
@str.139 = private unnamed_addr constant [61 x i8] c"backup number must be at least 1, setting to default value 2\00", align 1
@do_stencil_warning = internal global i32 0, align 4
@calc_neighbor_type = internal global i32 0, align 4
@dynamic_load_balance_on = internal global i8 0, align 1
@neighbor_remap = internal global i8 0, align 1
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save = internal global %"class.std::vector" zeroinitializer, align 8
@_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save = internal global i64 0, align 8
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells = internal unnamed_addr global i32 0, align 4
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old = internal global ptr null, align 8
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old = internal global ptr null, align 8
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old = internal global ptr null, align 8
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE6new_ic = internal global %"class.std::vector" zeroinitializer, align 8
@_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE6new_ic = internal global i64 0, align 8
@.str.33.152 = private unnamed_addr constant [6 x i8] c"i_old\00", align 1
@.str.34.153 = private unnamed_addr constant [6 x i8] c"j_old\00", align 1
@.str.35.154 = private unnamed_addr constant [10 x i8] c"level_old\00", align 1
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order = internal global %"class.std::vector" zeroinitializer, align 8
@_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order = internal global i64 0, align 8
@.str.36.155 = private unnamed_addr constant [18 x i8] c"state_temp_double\00", align 1
@.str.37.156 = private unnamed_addr constant [17 x i8] c"state_temp_float\00", align 1
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nlft_old = internal global ptr null, align 8
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nrht_old = internal global ptr null, align 8
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nbot_old = internal global ptr null, align 8
@_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8ntop_old = internal global ptr null, align 8
@.str.38.159 = private unnamed_addr constant [9 x i8] c"nlft_old\00", align 1
@.str.39.160 = private unnamed_addr constant [9 x i8] c"nrht_old\00", align 1
@.str.40.161 = private unnamed_addr constant [9 x i8] c"nbot_old\00", align 1
@.str.41.162 = private unnamed_addr constant [9 x i8] c"ntop_old\00", align 1
@_ZZN4Mesh14calc_neighborsEiE9nlft_size = internal unnamed_addr global i32 0, align 4
@.str.42.164 = private unnamed_addr constant [5 x i8] c"nlft\00", align 1
@.str.43.165 = private unnamed_addr constant [5 x i8] c"nrht\00", align 1
@.str.44.166 = private unnamed_addr constant [5 x i8] c"nbot\00", align 1
@.str.45.167 = private unnamed_addr constant [5 x i8] c"ntop\00", align 1
@write_hash = internal global ptr null, align 8
@read_hash = internal global ptr null, align 8
@_ZZN4Mesh20calc_neighbors_localEvE4hash = internal unnamed_addr global ptr null, align 8
@_ZZN4Mesh20calc_neighbors_localEvE8imaxcalc = internal unnamed_addr global i32 0, align 4
@_ZZN4Mesh20calc_neighbors_localEvE8jmaxcalc = internal unnamed_addr global i32 0, align 4
@.str.47.177 = private unnamed_addr constant [21 x i8] c"hash table size %ld\0A\00", align 1
@.str.49.170 = private unnamed_addr constant [9 x i8] c"celltype\00", align 1
@.str.50.141 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.51.142 = private unnamed_addr constant [2 x i8] c"j\00", align 1
@.str.52.143 = private unnamed_addr constant [6 x i8] c"level\00", align 1
@.str.75.180 = private unnamed_addr constant [11 x i8] c"          \00", align 1
@_ZL21mesh_timer_descriptor = internal unnamed_addr constant [24 x ptr] [ptr @.str.113.182, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123.183, ptr @.str.124.184, ptr @.str.125.185, ptr @.str.126.186, ptr @.str.127.187, ptr @.str.128.188, ptr @.str.129.189, ptr @.str.130.190, ptr @.str.131.191, ptr @.str.132.192, ptr @.str.133.193, ptr @.str.134.194, ptr @.str.135.195, ptr @.str.136.196], align 16
@.str.79.178 = private unnamed_addr constant [4 x i8] c"%s\09\00", align 1
@.str.80.179 = private unnamed_addr constant [11 x i8] c"%.*s%8.4f\09\00", align 1
@.str.82.181 = private unnamed_addr constant [51 x i8] c"%.*s%8.4f\09%.*s%8.4f\09%.*s%8.4f   %s min/median/max\0A\00", align 1
@.str.87 = private unnamed_addr constant [8 x i8] c"storage\00", align 1
@.str.88 = private unnamed_addr constant [19 x i8] c"mesh_int_dist_vals\00", align 1
@.str.89 = private unnamed_addr constant [14 x i8] c"mesh_int_vals\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"mesh_double_vals\00", align 1
@.str.91 = private unnamed_addr constant [18 x i8] c"mesh_cpu_counters\00", align 1
@.str.92 = private unnamed_addr constant [18 x i8] c"mesh_gpu_counters\00", align 1
@.str.93 = private unnamed_addr constant [16 x i8] c"mesh_cpu_timers\00", align 1
@.str.94 = private unnamed_addr constant [16 x i8] c"mesh_gpu_timers\00", align 1
@.str.95 = private unnamed_addr constant [83 x i8] c"CRUX version mismatch for mesh data, version on file is %d, version in code is %d\0A\00", align 1
@.str.96 = private unnamed_addr constant [7 x i8] c"ncells\00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c"ncells_ghost\00", align 1
@.str.98 = private unnamed_addr constant [20 x i8] c"offtile_local_count\00", align 1
@__const._ZN4Mesh18restore_checkpointEP4Crux.int_dist_vals_descriptor = private unnamed_addr constant [3 x ptr] [ptr @.str.96, ptr @.str.97, ptr @.str.98], align 16
@.str.99 = private unnamed_addr constant [18 x i8] c"CRUX_MESH_VERSION\00", align 1
@.str.100.201 = private unnamed_addr constant [5 x i8] c"ndim\00", align 1
@.str.101 = private unnamed_addr constant [6 x i8] c"levmx\00", align 1
@__const._ZN4Mesh18restore_checkpointEP4Crux.int_vals_descriptor = private unnamed_addr constant [3 x ptr] [ptr @.str.99, ptr @.str.100.201, ptr @.str.101], align 16
@.str.103 = private unnamed_addr constant [17 x i8] c"       %-30s %d\0A\00", align 1
@.str.105 = private unnamed_addr constant [20 x i8] c"offtile_ratio_local\00", align 1
@.str.107 = private unnamed_addr constant [18 x i8] c"       %-30s %lf\0A\00", align 1
@_ZL23mesh_counter_descriptor = internal unnamed_addr constant [4 x ptr] [ptr @.str.137.197, ptr @.str.138.198, ptr @.str.139.199, ptr @.str.140.200], align 16
@.str.112 = private unnamed_addr constant [19 x i8] c"       %-30s %lld\0A\00", align 1
@.str.113.182 = private unnamed_addr constant [21 x i8] c"mesh_timer_count_BCs\00", align 1
@.str.114 = private unnamed_addr constant [26 x i8] c"mesh_timer_calc_neighbors\00", align 1
@.str.115 = private unnamed_addr constant [22 x i8] c"mesh_timer_hash_setup\00", align 1
@.str.116 = private unnamed_addr constant [22 x i8] c"mesh_timer_hash_query\00", align 1
@.str.117 = private unnamed_addr constant [25 x i8] c"mesh_timer_find_boundary\00", align 1
@.str.118 = private unnamed_addr constant [22 x i8] c"mesh_timer_push_setup\00", align 1
@.str.119 = private unnamed_addr constant [25 x i8] c"mesh_timer_push_boundary\00", align 1
@.str.120 = private unnamed_addr constant [22 x i8] c"mesh_timer_local_list\00", align 1
@.str.121 = private unnamed_addr constant [18 x i8] c"mesh_timer_layer1\00", align 1
@.str.122 = private unnamed_addr constant [18 x i8] c"mesh_timer_layer2\00", align 1
@.str.123.183 = private unnamed_addr constant [22 x i8] c"mesh_timer_layer_list\00", align 1
@.str.124.184 = private unnamed_addr constant [26 x i8] c"mesh_timer_copy_mesh_data\00", align 1
@.str.125.185 = private unnamed_addr constant [27 x i8] c"mesh_timer_fill_mesh_ghost\00", align 1
@.str.126.186 = private unnamed_addr constant [28 x i8] c"mesh_timer_fill_neigh_ghost\00", align 1
@.str.127.187 = private unnamed_addr constant [28 x i8] c"mesh_timer_set_corner_neigh\00", align 1
@.str.128.188 = private unnamed_addr constant [24 x i8] c"mesh_timer_neigh_adjust\00", align 1
@.str.129.189 = private unnamed_addr constant [22 x i8] c"mesh_timer_setup_comm\00", align 1
@.str.130.190 = private unnamed_addr constant [24 x i8] c"mesh_timer_kdtree_setup\00", align 1
@.str.131.191 = private unnamed_addr constant [24 x i8] c"mesh_timer_kdtree_query\00", align 1
@.str.132.192 = private unnamed_addr constant [25 x i8] c"mesh_timer_refine_smooth\00", align 1
@.str.133.193 = private unnamed_addr constant [22 x i8] c"mesh_timer_rezone_all\00", align 1
@.str.134.194 = private unnamed_addr constant [21 x i8] c"mesh_timer_partition\00", align 1
@.str.135.195 = private unnamed_addr constant [36 x i8] c"mesh_timer_calc_spatial_coordinates\00", align 1
@.str.136.196 = private unnamed_addr constant [24 x i8] c"mesh_timer_load_balance\00", align 1
@.str.137.197 = private unnamed_addr constant [20 x i8] c"mesh_counter_rezone\00", align 1
@.str.138.198 = private unnamed_addr constant [27 x i8] c"mesh_counter_refine_smooth\00", align 1
@.str.139.199 = private unnamed_addr constant [24 x i8] c"mesh_counter_calc_neigh\00", align 1
@.str.140.200 = private unnamed_addr constant [26 x i8] c"mesh_counter_load_balance\00", align 1
@.str.141.148 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.142.149 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@.str.144.163 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@str.146 = private unnamed_addr constant [31 x i8] c"Nonlocal case for the stencil.\00", align 1
@str.147 = private unnamed_addr constant [38 x i8] c"Using k-D tree to calculate neighbors\00", align 1
@str.148 = private unnamed_addr constant [41 x i8] c"Using hash tables to calculate neighbors\00", align 1
@str.151 = private unnamed_addr constant [40 x i8] c"       === Restored mesh gpu timers ===\00", align 1
@str.153 = private unnamed_addr constant [40 x i8] c"       === Restored mesh cpu timers ===\00", align 1
@str.155 = private unnamed_addr constant [42 x i8] c"       === Restored mesh cpu counters ===\00", align 1
@str.157 = private unnamed_addr constant [42 x i8] c"       === Restored mesh gpu counters ===\00", align 1
@str.159 = private unnamed_addr constant [41 x i8] c"       === Restored mesh double_vals ===\00", align 1
@str.160 = private unnamed_addr constant [43 x i8] c"       === Restored mesh int_dist_vals ===\00", align 1
@str.162 = private unnamed_addr constant [38 x i8] c"       === Restored mesh int_vals ===\00", align 1
@measure_type = internal global i32 0, align 4
@meas_count = internal global i32 0, align 4
@meas_sum_average = internal global double 0.000000e+00, align 8
@_ZZN4Mesh17partition_measureEvE13offtile_ratio = internal unnamed_addr global double 0.000000e+00, align 8
@.str.1.213 = private unnamed_addr constant [39 x i8] c"Average surface area to volume ratio  \00", align 1
@.str.2.214 = private unnamed_addr constant [16 x i8] c"with duplicates\00", align 1
@.str.3.215 = private unnamed_addr constant [19 x i8] c"without duplicates\00", align 1
@.str.4.216 = private unnamed_addr constant [35 x i8] c"Partition Quality Avg C value     \00", align 1
@.str.5.217 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6.218 = private unnamed_addr constant [36 x i8] c"Partition Quality Avg C* value     \00", align 1
@.str.7.219 = private unnamed_addr constant [38 x i8] c"The MPI surface area to volume ratio \00", align 1
@initial_order = internal global i32 0, align 4
@.str.8.227 = private unnamed_addr constant [24 x i8] c"Initial order is naive.\00", align 1
@.str.9.228 = private unnamed_addr constant [31 x i8] c"Initial order is Hilbert sort.\00", align 1
@.str.10.229 = private unnamed_addr constant [37 x i8] c"Initial order is Hilbert partitionr.\00", align 1
@.str.11.230 = private unnamed_addr constant [26 x i8] c"Initial order is Z order.\00", align 1
@cycle_reorder = internal global i32 0, align 4
@.str.12.223 = private unnamed_addr constant [21 x i8] c"   No cycle reorder.\00", align 1
@.str.13.224 = private unnamed_addr constant [34 x i8] c"   Cycle reorder is Hilbert sort.\00", align 1
@.str.14.225 = private unnamed_addr constant [39 x i8] c"   Cycle reorder is Hilbert partition.\00", align 1
@.str.15.226 = private unnamed_addr constant [29 x i8] c"   Cycle reorder is Z order.\00", align 1
@localStencil = internal global i8 0, align 1
@str.212 = private unnamed_addr constant [21 x i8] c"No Partition Measure\00", align 1
@str.21.222 = private unnamed_addr constant [24 x i8] c"   Local Stencil is on.\00", align 1
@switch.table._ZN4Mesh20print_partition_typeEv = private unnamed_addr constant [4 x ptr] [ptr @.str.8.227, ptr @.str.9.228, ptr @.str.10.229, ptr @.str.11.230], align 8
@switch.table._ZN4Mesh20print_partition_typeEv.22 = private unnamed_addr constant [4 x ptr] [ptr @.str.12.223, ptr @.str.13.224, ptr @.str.14.225, ptr @.str.15.226], align 8
@str.4 = private unnamed_addr constant [52 x i8] c"Error -- S7_Datatype not supported in S7_Index_Sort\00", align 1
@save_ncells = internal global i32 0, align 4
@.str.237 = private unnamed_addr constant [2 x i8] c"H\00", align 1
@.str.1.238 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@.str.2.239 = private unnamed_addr constant [2 x i8] c"V\00", align 1
@_ZZN5State12set_timestepEddE9mindeltaT = internal unnamed_addr global double 0.000000e+00, align 8
@_ZZN5State22calc_finite_differenceEdE5H_new = internal unnamed_addr global ptr null, align 8
@_ZZN5State22calc_finite_differenceEdE5U_new = internal unnamed_addr global ptr null, align 8
@_ZZN5State22calc_finite_differenceEdE5V_new = internal unnamed_addr global ptr null, align 8
@.str.3.256 = private unnamed_addr constant [6 x i8] c"H_new\00", align 1
@.str.4.257 = private unnamed_addr constant [6 x i8] c"U_new\00", align 1
@.str.5.258 = private unnamed_addr constant [6 x i8] c"V_new\00", align 1
@_ZZN5State32calc_finite_difference_via_facesEdE2Hx = internal global %"class.std::vector" zeroinitializer, align 8
@_ZGVZN5State32calc_finite_difference_via_facesEdE2Hx = internal global i64 0, align 8
@__dso_handle = external hidden global i8
@_ZZN5State32calc_finite_difference_via_facesEdE2Ux = internal global %"class.std::vector" zeroinitializer, align 8
@_ZGVZN5State32calc_finite_difference_via_facesEdE2Ux = internal global i64 0, align 8
@_ZZN5State32calc_finite_difference_via_facesEdE2Vx = internal global %"class.std::vector" zeroinitializer, align 8
@_ZGVZN5State32calc_finite_difference_via_facesEdE2Vx = internal global i64 0, align 8
@_ZZN5State32calc_finite_difference_via_facesEdE2Hy = internal global %"class.std::vector" zeroinitializer, align 8
@_ZGVZN5State32calc_finite_difference_via_facesEdE2Hy = internal global i64 0, align 8
@_ZZN5State32calc_finite_difference_via_facesEdE2Uy = internal global %"class.std::vector" zeroinitializer, align 8
@_ZGVZN5State32calc_finite_difference_via_facesEdE2Uy = internal global i64 0, align 8
@_ZZN5State32calc_finite_difference_via_facesEdE2Vy = internal global %"class.std::vector" zeroinitializer, align 8
@_ZGVZN5State32calc_finite_difference_via_facesEdE2Vy = internal global i64 0, align 8
@_ZZN5State32calc_finite_difference_via_facesEdE5H_new = internal unnamed_addr global ptr null, align 8
@_ZZN5State32calc_finite_difference_via_facesEdE5U_new = internal unnamed_addr global ptr null, align 8
@_ZZN5State32calc_finite_difference_via_facesEdE5V_new = internal unnamed_addr global ptr null, align 8
@_ZL22state_timer_descriptor = internal unnamed_addr constant [9 x ptr] [ptr @.str.49.279, ptr @.str.50.280, ptr @.str.51.281, ptr @.str.52.282, ptr @.str.53.283, ptr @.str.54.284, ptr @.str.55.285, ptr @.str.56.286, ptr @.str.57.287], align 16
@.str.19.290 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.20.297 = private unnamed_addr constant [63 x i8] c"%d:   index global  i     j     lev   nlft  nrht  nbot  ntop \0A\00", align 1
@.str.21.298 = private unnamed_addr constant [50 x i8] c"%d: %6d  %6d %4d  %4d   %4d  %4d  %4d  %4d  %4d \0A\00", align 1
@.str.22.299 = private unnamed_addr constant [58 x i8] c"%d:  index     H        U         V      i     j     lev\0A\00", align 1
@.str.23.300 = private unnamed_addr constant [38 x i8] c"%d: %6d %lf %lf %lf %4d  %4d   %4d  \0A\00", align 1
@.str.24.271 = private unnamed_addr constant [15 x i8] c"state_int_vals\00", align 1
@.str.25.272 = private unnamed_addr constant [17 x i8] c"state_cpu_timers\00", align 1
@.str.26.273 = private unnamed_addr constant [17 x i8] c"state_gpu_timers\00", align 1
@.str.27.276 = private unnamed_addr constant [8 x i8] c"storage\00", align 1
@.str.28.277 = private unnamed_addr constant [84 x i8] c"CRUX version mismatch for state data, version on file is %d, version in code is %d\0A\00", align 1
@.str.31.278 = private unnamed_addr constant [18 x i8] c"       %-30s %lg\0A\00", align 1
@.str.33.293 = private unnamed_addr constant [38 x i8] c"Iteration = %d\09\09Simuation Time = %lf\0A\00", align 1
@.str.34.294 = private unnamed_addr constant [46 x i8] c"mesh->ncells = %lu\09\09mesh->ncells_ghost = %lu\0A\00", align 1
@.str.36.295 = private unnamed_addr constant [50 x i8] c"Initial Mass: %14.12lg\09\09Iteration Mass: %14.12lg\0A\00", align 1
@.str.37.296 = private unnamed_addr constant [65 x i8] c"Mass Difference: %12.6lg\09\09Mass Difference Percentage: %12.6lg%%\0A\00", align 1
@__const._ZN5State17print_failure_logEiddddb.filename = private unnamed_addr constant [12 x i8] c"failure.log\00", align 1
@.str.43.291 = private unnamed_addr constant [50 x i8] c"Failed because of nan for H_sum was equal to NAN\0A\00", align 1
@.str.44.292 = private unnamed_addr constant [66 x i8] c"Failed because mass difference is outside of accepted percentage\0A\00", align 1
@.str.45.303 = private unnamed_addr constant [15 x i8] c"rollback%d.log\00", align 1
@.str.46.304 = private unnamed_addr constant [56 x i8] c"Rolling back because of nan for H_sum was equal to NAN\0A\00", align 1
@.str.47.305 = private unnamed_addr constant [72 x i8] c"Rolling back because mass difference is outside of accepted percentage\0A\00", align 1
@.str.48.306 = private unnamed_addr constant [59 x i8] c"Rollback attempt %d of %d ---> Number of attempts left:%d\0A\00", align 1
@.str.49.279 = private unnamed_addr constant [22 x i8] c"state_timer_apply_BCs\00", align 1
@.str.50.280 = private unnamed_addr constant [25 x i8] c"state_timer_set_timestep\00", align 1
@.str.51.281 = private unnamed_addr constant [30 x i8] c"state_timer_finite_difference\00", align 1
@.str.52.282 = private unnamed_addr constant [29 x i8] c"state_timer_refine_potential\00", align 1
@.str.53.283 = private unnamed_addr constant [22 x i8] c"state_timer_calc_mpot\00", align 1
@.str.54.284 = private unnamed_addr constant [23 x i8] c"state_timer_rezone_all\00", align 1
@.str.55.285 = private unnamed_addr constant [21 x i8] c"state_timer_mass_sum\00", align 1
@.str.56.286 = private unnamed_addr constant [17 x i8] c"state_timer_read\00", align 1
@.str.57.287 = private unnamed_addr constant [18 x i8] c"state_timer_write\00", align 1
@str.61 = private unnamed_addr constant [41 x i8] c"       === Restored state cpu timers ===\00", align 1

@_ZN2PP4CommC1Ev = internal unnamed_addr alias void (ptr), ptr @_ZN2PP4CommC2Ev
@_ZN2PP4CommD1Ev = internal unnamed_addr alias void (ptr), ptr @_ZN2PP4CommD2Ev
@_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_ = internal unnamed_addr alias void (ptr, ptr, i1, i32, ptr, ptr), ptr @_ZN2PP8FunctionC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_
@_ZN2PP11PowerParserC1Ev = internal unnamed_addr alias void (ptr), ptr @_ZN2PP11PowerParserC2Ev
@_ZN2PP11PowerParserD1Ev = internal unnamed_addr alias void (ptr), ptr @_ZN2PP11PowerParserD2Ev
@_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_ = internal unnamed_addr alias void (ptr, ptr, ptr, i1, ptr), ptr @_ZN2PP8VariableC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_
@_ZN2PP4WordC1EdiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE = internal unnamed_addr alias void (ptr, double, i32, i32, ptr, ptr), ptr @_ZN2PP4WordC2EdiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE
@_ZN2PP4WordC1EiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE = internal unnamed_addr alias void (ptr, i32, i32, i32, ptr, ptr), ptr @_ZN2PP4WordC2EiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE
@_ZN2PP4WordD1Ev = internal unnamed_addr alias void (ptr), ptr @_ZN2PP4WordD2Ev
@_ZN4CruxC1Eiib = internal unnamed_addr alias void (ptr, i32, i32, i1), ptr @_ZN4CruxC2Eiib
@_ZN4CruxD1Ev = internal unnamed_addr alias void (ptr), ptr @_ZN4CruxD2Ev
@_ZN4MeshC1Eiiiiddiii = internal unnamed_addr alias void (ptr, i32, i32, i32, i32, double, double, i32, i32, i32), ptr @_ZN4MeshC2Eiiiiddiii
@_ZN5StateC1EP4Mesh = internal unnamed_addr alias void (ptr, ptr), ptr @_ZN5StateC2EP4Mesh

; Function Attrs: mustprogress nofree nosync nounwind optsize willreturn memory(argmem: readwrite) uwtable
define internal void @Bounds_Copy(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) #0 {
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %1, ptr noundef nonnull align 1 dereferenceable(32) %0, i64 32, i1 false)
  ret void
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: write) uwtable
define internal void @Bounds_Infinite(ptr nocapture noundef writeonly %0) #2 {
  store <2 x double> <double 1.000000e+64, double 1.000000e+64>, ptr %0, align 8, !tbaa !7
  %2 = getelementptr inbounds %struct.TBounds, ptr %0, i64 0, i32 1
  store <2 x double> <double -1.000000e+64, double -1.000000e+64>, ptr %2, align 8, !tbaa !7
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: readwrite) uwtable
define internal void @Bounds_AddBounds(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) #3 {
  %3 = load <2 x double>, ptr %0, align 8, !tbaa !7
  %4 = load <2 x double>, ptr %1, align 8, !tbaa !7
  %5 = fcmp olt <2 x double> %3, %4
  %6 = select <2 x i1> %5, <2 x double> %3, <2 x double> %4
  store <2 x double> %6, ptr %0, align 8, !tbaa !7
  %7 = getelementptr inbounds %struct.TBounds, ptr %0, i64 0, i32 1
  %8 = getelementptr inbounds %struct.TBounds, ptr %1, i64 0, i32 1
  %9 = load <2 x double>, ptr %7, align 8, !tbaa !7
  %10 = load <2 x double>, ptr %8, align 8, !tbaa !7
  %11 = fcmp ogt <2 x double> %9, %10
  %12 = select <2 x i1> %11, <2 x double> %9, <2 x double> %10
  store <2 x double> %12, ptr %7, align 8, !tbaa !7
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: read) uwtable
define internal zeroext i1 @Bounds_IsOverlappingBounds(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #4 {
  %3 = getelementptr inbounds %struct.TBounds, ptr %1, i64 0, i32 1
  %4 = load double, ptr %3, align 8, !tbaa !11
  %5 = load double, ptr %0, align 8, !tbaa !14
  %6 = fcmp olt double %4, %5
  br i1 %6, label %25, label %7

7:                                                ; preds = %2
  %8 = load double, ptr %1, align 8, !tbaa !14
  %9 = getelementptr inbounds %struct.TBounds, ptr %0, i64 0, i32 1
  %10 = load double, ptr %9, align 8, !tbaa !11
  %11 = fcmp ogt double %8, %10
  br i1 %11, label %25, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.TBounds, ptr %1, i64 0, i32 1, i32 1
  %14 = load double, ptr %13, align 8, !tbaa !15
  %15 = getelementptr inbounds %struct.TVector, ptr %0, i64 0, i32 1
  %16 = load double, ptr %15, align 8, !tbaa !16
  %17 = fcmp olt double %14, %16
  br i1 %17, label %25, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.TVector, ptr %1, i64 0, i32 1
  %20 = load double, ptr %19, align 8, !tbaa !16
  %21 = getelementptr inbounds %struct.TBounds, ptr %0, i64 0, i32 1, i32 1
  %22 = load double, ptr %21, align 8, !tbaa !15
  %23 = fcmp ogt double %20, %22
  br i1 %23, label %25, label %24

24:                                               ; preds = %18
  br label %25

25:                                               ; preds = %24, %18, %12, %7, %2
  %26 = phi i1 [ true, %24 ], [ false, %7 ], [ false, %2 ], [ false, %18 ], [ false, %12 ]
  ret i1 %26
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal double @Bounds_WidthAxis(ptr nocapture noundef readonly %0, i32 noundef %1) #5 {
  switch i32 %1, label %14 [
    i32 0, label %3
    i32 1, label %5
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.TBounds, ptr %0, i64 0, i32 1
  br label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.TBounds, ptr %0, i64 0, i32 1, i32 1
  %7 = getelementptr inbounds %struct.TVector, ptr %0, i64 0, i32 1
  br label %8

8:                                                ; preds = %5, %3
  %9 = phi ptr [ %7, %5 ], [ %0, %3 ]
  %10 = phi ptr [ %6, %5 ], [ %4, %3 ]
  %11 = load double, ptr %10, align 8, !tbaa !7
  %12 = load double, ptr %9, align 8, !tbaa !7
  %13 = fsub double %11, %12
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi double [ undef, %2 ], [ %13, %8 ]
  ret double %15
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal double @Bounds_CenterAxis(ptr nocapture noundef readonly %0, i32 noundef %1) #5 {
  switch i32 %1, label %15 [
    i32 0, label %3
    i32 1, label %5
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.TBounds, ptr %0, i64 0, i32 1
  br label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.TVector, ptr %0, i64 0, i32 1
  %7 = getelementptr inbounds %struct.TBounds, ptr %0, i64 0, i32 1, i32 1
  br label %8

8:                                                ; preds = %5, %3
  %9 = phi ptr [ %7, %5 ], [ %4, %3 ]
  %10 = phi ptr [ %6, %5 ], [ %0, %3 ]
  %11 = load double, ptr %10, align 8, !tbaa !7
  %12 = load double, ptr %9, align 8, !tbaa !7
  %13 = fadd double %11, %12
  %14 = fmul double %13, 5.000000e-01
  br label %15

15:                                               ; preds = %8, %2
  %16 = phi double [ undef, %2 ], [ %14, %8 ]
  ret double %16
}

; Function Attrs: optsize uwtable
define internal void @_GLOBAL__sub_I_Cmd.cc() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit) #56
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit, ptr nonnull @__dso_handle) #57
  ret void
}

; Function Attrs: optsize
declare void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1)) unnamed_addr #7

; Function Attrs: nounwind optsize
declare void @_ZNSt8ios_base4InitD1Ev(ptr noundef nonnull align 1 dereferenceable(1)) unnamed_addr #8

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #9

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !17
  %3 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !22
  %5 = icmp eq ptr %2, %4
  br i1 %5, label %17, label %6

6:                                                ; preds = %12, %1
  %7 = phi ptr [ %13, %12 ], [ %2, %1 ]
  %8 = load ptr, ptr %7, align 8, !tbaa !23
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef %8) #58
  br label %12

12:                                               ; preds = %11, %6
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 1
  %14 = icmp eq ptr %13, %4
  br i1 %14, label %15, label %6, !llvm.loop !27

15:                                               ; preds = %12
  %16 = load ptr, ptr %0, align 8, !tbaa !17
  br label %17

17:                                               ; preds = %15, %1
  %18 = phi ptr [ %16, %15 ], [ %2, %1 ]
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @_ZdlPv(ptr noundef nonnull %18) #58
  br label %21

21:                                               ; preds = %20, %17
  ret void
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #11

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"struct.std::_Deque_iterator", align 16
  %3 = alloca %"struct.std::_Deque_iterator", align 16
  %4 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  %6 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3)
  %8 = load <2 x ptr>, ptr %4, align 8, !tbaa !29, !noalias !30
  store <2 x ptr> %8, ptr %2, align 16, !tbaa !29
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 2
  %10 = load <2 x ptr>, ptr %5, align 8, !tbaa !29, !noalias !30
  store <2 x ptr> %10, ptr %9, align 16, !tbaa !29
  %11 = load <2 x ptr>, ptr %6, align 8, !tbaa !29, !noalias !33
  store <2 x ptr> %11, ptr %3, align 16, !tbaa !29
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %3, i64 0, i32 2
  %13 = load <2 x ptr>, ptr %7, align 8, !tbaa !29, !noalias !33
  store <2 x ptr> %13, ptr %12, align 16, !tbaa !29
  invoke void @_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull %2, ptr noundef nonnull %3) #56
          to label %14 unwind label %15

14:                                               ; preds = %1
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3)
  call void @_ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) #59
  ret void

15:                                               ; preds = %1
  %16 = landingpad { ptr, i32 }
          catch ptr null
  %17 = extractvalue { ptr, i32 } %16, 0
  call void @__clang_call_terminate(ptr %17) #60
  unreachable
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #12

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !36
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 3
  %7 = getelementptr inbounds ptr, ptr %5, i64 1
  %8 = load ptr, ptr %6, align 8, !tbaa !36
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %17, label %12

10:                                               ; preds = %25
  %.lcssa = phi ptr [ %27, %25 ]
  %11 = load ptr, ptr %4, align 8, !tbaa !36
  br label %12

12:                                               ; preds = %10, %3
  %13 = phi ptr [ %5, %3 ], [ %11, %10 ]
  %14 = phi ptr [ %8, %3 ], [ %.lcssa, %10 ]
  %15 = icmp eq ptr %13, %14
  %16 = load ptr, ptr %1, align 8, !tbaa !38
  br i1 %15, label %46, label %29

17:                                               ; preds = %25, %3
  %18 = phi ptr [ %26, %25 ], [ %7, %3 ]
  %19 = load ptr, ptr %18, align 8, !tbaa !29
  br label %20

20:                                               ; preds = %20, %17
  %21 = phi i64 [ %23, %20 ], [ 0, %17 ]
  %22 = getelementptr inbounds %"class.PP::Word", ptr %19, i64 %21
  tail call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %22) #59
  %23 = add nuw nsw i64 %21, 1
  %24 = icmp eq i64 %23, 4
  br i1 %24, label %25, label %20, !llvm.loop !39

25:                                               ; preds = %20
  %26 = getelementptr inbounds ptr, ptr %18, i64 1
  %27 = load ptr, ptr %6, align 8, !tbaa !36
  %28 = icmp ult ptr %26, %27
  br i1 %28, label %17, label %10, !llvm.loop !40

29:                                               ; preds = %12
  %30 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !41
  %32 = icmp eq ptr %16, %31
  br i1 %32, label %37, label %33

33:                                               ; preds = %33, %29
  %34 = phi ptr [ %35, %33 ], [ %16, %29 ]
  tail call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %34) #59
  %35 = getelementptr inbounds %"class.PP::Word", ptr %34, i64 1
  %36 = icmp eq ptr %35, %31
  br i1 %36, label %37, label %33, !llvm.loop !39

37:                                               ; preds = %33, %29
  %38 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !42
  %40 = load ptr, ptr %2, align 8, !tbaa !38
  %41 = icmp eq ptr %39, %40
  br i1 %41, label %53, label %42

42:                                               ; preds = %42, %37
  %43 = phi ptr [ %44, %42 ], [ %39, %37 ]
  tail call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %43) #59
  %44 = getelementptr inbounds %"class.PP::Word", ptr %43, i64 1
  %45 = icmp eq ptr %44, %40
  br i1 %45, label %53, label %42, !llvm.loop !39

46:                                               ; preds = %12
  %47 = load ptr, ptr %2, align 8, !tbaa !38
  %48 = icmp eq ptr %16, %47
  br i1 %48, label %53, label %49

49:                                               ; preds = %49, %46
  %50 = phi ptr [ %51, %49 ], [ %16, %46 ]
  tail call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %50) #59
  %51 = getelementptr inbounds %"class.PP::Word", ptr %50, i64 1
  %52 = icmp eq ptr %51, %47
  br i1 %52, label %53, label %49, !llvm.loop !39

53:                                               ; preds = %49, %46, %42, %37
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #12

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !43
  %3 = icmp eq ptr %2, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !45
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !46
  %9 = getelementptr inbounds ptr, ptr %8, i64 1
  %10 = icmp ult ptr %6, %9
  br i1 %10, label %11, label %18

11:                                               ; preds = %11, %4
  %12 = phi ptr [ %14, %11 ], [ %6, %4 ]
  %13 = load ptr, ptr %12, align 8, !tbaa !29
  tail call void @_ZdlPv(ptr noundef %13) #58
  %14 = getelementptr inbounds ptr, ptr %12, i64 1
  %15 = icmp ult ptr %12, %8
  br i1 %15, label %11, label %16, !llvm.loop !47

16:                                               ; preds = %11
  %17 = load ptr, ptr %0, align 8, !tbaa !43
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi ptr [ %17, %16 ], [ %2, %4 ]
  tail call void @_ZdlPv(ptr noundef %19) #58
  br label %20

20:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: noinline noreturn nounwind optsize uwtable
define internal void @__clang_call_terminate(ptr noundef %0) #14 comdat {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #57
  tail call void @_ZSt9terminatev() #60
  unreachable
}

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: mustprogress nounwind optsize uwtable
define available_externally noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) local_unnamed_addr #15 align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %1, align 8, !tbaa !23
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 2
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %7, label %25

7:                                                ; preds = %2
  %8 = icmp eq ptr %1, %0
  br i1 %8, label %42, label %9, !prof !48

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %11 = load i64, ptr %10, align 8, !tbaa !49
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = load ptr, ptr %0, align 8, !tbaa !23
  %15 = icmp eq i64 %11, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = load i8, ptr %4, align 1, !tbaa !50
  store i8 %17, ptr %14, align 1, !tbaa !50
  br label %19

18:                                               ; preds = %13
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %14, ptr align 1 %4, i64 %11, i1 false)
  br label %19

19:                                               ; preds = %18, %16, %9
  %20 = load i64, ptr %10, align 8, !tbaa !49
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %20, ptr %21, align 8, !tbaa !49
  %22 = load ptr, ptr %0, align 8, !tbaa !23
  %23 = getelementptr inbounds i8, ptr %22, i64 %20
  store i8 0, ptr %23, align 1, !tbaa !50
  %24 = load ptr, ptr %1, align 8, !tbaa !23
  br label %42

25:                                               ; preds = %2
  %26 = load ptr, ptr %0, align 8, !tbaa !23
  %27 = icmp eq ptr %26, %3
  br i1 %27, label %28, label %33

28:                                               ; preds = %25
  store ptr %4, ptr %0, align 8, !tbaa !23
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %30 = load i64, ptr %29, align 8, !tbaa !49
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %30, ptr %31, align 8, !tbaa !49
  %32 = load i64, ptr %5, align 8, !tbaa !50
  store i64 %32, ptr %3, align 8, !tbaa !50
  br label %41

33:                                               ; preds = %25
  %34 = load i64, ptr %3, align 8, !tbaa !50
  store ptr %4, ptr %0, align 8, !tbaa !23
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %36 = load i64, ptr %35, align 8, !tbaa !49
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %36, ptr %37, align 8, !tbaa !49
  %38 = load i64, ptr %5, align 8, !tbaa !50
  store i64 %38, ptr %3, align 8, !tbaa !50
  %39 = icmp eq ptr %26, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %33
  store ptr %26, ptr %1, align 8, !tbaa !23
  store i64 %34, ptr %5, align 8, !tbaa !50
  br label %42

41:                                               ; preds = %33, %28
  store ptr %5, ptr %1, align 8, !tbaa !23
  br label %42

42:                                               ; preds = %41, %40, %19, %7
  %43 = phi ptr [ %26, %40 ], [ %5, %41 ], [ %4, %7 ], [ %24, %19 ]
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  store i64 0, ptr %44, align 8, !tbaa !49
  store i8 0, ptr %43, align 1, !tbaa !50
  ret ptr %0
}

; Function Attrs: inlinehint mustprogress optsize uwtable
define available_externally noundef nonnull align 8 dereferenceable(8) ptr @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(ptr noundef nonnull align 8 dereferenceable(8) %0) local_unnamed_addr #16 {
  %2 = load ptr, ptr %0, align 8, !tbaa !51
  %3 = getelementptr i8, ptr %2, i64 -24
  %4 = load i64, ptr %3, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 %4
  %6 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %5, i8 noundef signext 10) #56
  %7 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %0, i8 noundef signext %6) #56
  %8 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %7) #56
  ret ptr %8
}

; Function Attrs: mustprogress optsize uwtable
define available_externally noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %0, i8 noundef signext %1) local_unnamed_addr #13 align 2 {
  %3 = getelementptr inbounds %"class.std::basic_ios", ptr %0, i64 0, i32 5
  %4 = load ptr, ptr %3, align 8, !tbaa !53
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZSt16__throw_bad_castv() #61
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::ctype", ptr %4, i64 0, i32 8
  %9 = load i8, ptr %8, align 8, !tbaa !62
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = zext i8 %1 to i64
  %13 = getelementptr inbounds %"class.std::ctype", ptr %4, i64 0, i32 9, i64 %12
  %14 = load i8, ptr %13, align 1, !tbaa !50
  br label %20

15:                                               ; preds = %7
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570) %4) #56
  %16 = load ptr, ptr %4, align 8, !tbaa !51
  %17 = getelementptr inbounds ptr, ptr %16, i64 6
  %18 = load ptr, ptr %17, align 8
  %19 = tail call noundef signext i8 %18(ptr noundef nonnull align 8 dereferenceable(570) %4, i8 noundef signext %1) #56
  br label %20

20:                                               ; preds = %15, %11
  %21 = phi i8 [ %14, %11 ], [ %19, %15 ]
  ret i8 %21
}

; Function Attrs: optsize
declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8), i8 noundef signext) local_unnamed_addr #7

; Function Attrs: optsize
declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #7

; Function Attrs: noreturn optsize
declare void @_ZSt16__throw_bad_castv() local_unnamed_addr #17

; Function Attrs: optsize
declare void @_ZNKSt5ctypeIcE13_M_widen_initEv(ptr noundef nonnull align 8 dereferenceable(570)) local_unnamed_addr #7

; Function Attrs: optsize uwtable
define internal void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1, ptr noundef nonnull align 4 dereferenceable(4) %2, ptr noundef nonnull align 1 dereferenceable(1) %3) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp ugt i64 %1, 2305843009213693951
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.224) #61
  unreachable

7:                                                ; preds = %4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %8 = icmp eq i64 %1, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  br label %19

10:                                               ; preds = %7
  %11 = tail call noundef ptr @_ZNSt15__new_allocatorIiE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef null) #56
  store ptr %11, ptr %0, align 8, !tbaa !65
  %12 = getelementptr inbounds i32, ptr %11, i64 %1
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %12, ptr %13, align 8, !tbaa !67
  %14 = load i32, ptr %2, align 4, !tbaa !68
  br label %15

15:                                               ; preds = %15, %10
  %16 = phi ptr [ %17, %15 ], [ %11, %10 ]
  store i32 %14, ptr %16, align 4, !tbaa !68
  %17 = getelementptr inbounds i32, ptr %16, i64 1
  %18 = icmp eq ptr %17, %12
  br i1 %18, label %19, label %15, !llvm.loop !69

19:                                               ; preds = %15, %9
  %20 = phi ptr [ null, %9 ], [ %12, %15 ]
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !70
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZSt20__throw_length_errorPKc(ptr noundef) local_unnamed_addr #17

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #18

; Function Attrs: mustprogress optsize uwtable
define internal noundef ptr @_ZNSt15__new_allocatorIiE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = icmp ugt i64 %1, 2305843009213693951
  br i1 %4, label %5, label %9, !prof !48

5:                                                ; preds = %3
  %6 = icmp ugt i64 %1, 4611686018427387903
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #61
  unreachable

8:                                                ; preds = %5
  tail call void @_ZSt17__throw_bad_allocv() #61
  unreachable

9:                                                ; preds = %3
  %10 = shl nuw nsw i64 %1, 2
  %11 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #62
  ret ptr %11
}

; Function Attrs: noreturn optsize
declare void @_ZSt28__throw_bad_array_new_lengthv() local_unnamed_addr #17

; Function Attrs: noreturn optsize
declare void @_ZSt17__throw_bad_allocv() local_unnamed_addr #17

; Function Attrs: nobuiltin optsize allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #19

; Function Attrs: optsize uwtable
define internal { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(168) %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = load ptr, ptr %3, align 8, !tbaa !71
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  %6 = tail call ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %4, ptr noundef nonnull %5, ptr noundef nonnull align 8 dereferenceable(32) %1) #56
  %7 = icmp eq ptr %6, %5
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %6, i64 0, i32 1
  %10 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %9) #56
          to label %14 unwind label %11

11:                                               ; preds = %8
  %12 = landingpad { ptr, i32 }
          catch ptr null
  %13 = extractvalue { ptr, i32 } %12, 0
  tail call void @__clang_call_terminate(ptr %13) #60
  unreachable

14:                                               ; preds = %8
  %15 = icmp slt i32 %10, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %14, %2
  %17 = tail call ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %6, ptr noundef nonnull align 8 dereferenceable(168) %1) #56
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi ptr [ %17, %16 ], [ %6, %14 ]
  %20 = phi i8 [ 1, %16 ], [ 0, %14 ]
  %21 = insertvalue { ptr, i8 } poison, ptr %19, 0
  %22 = insertvalue { ptr, i8 } %21, i8 %20, 1
  ret { ptr, i8 } %22
}

; Function Attrs: optsize uwtable
define internal ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(32) %3) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq ptr %1, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %14, %4
  %7 = phi ptr [ %20, %14 ], [ %1, %4 ]
  %8 = phi ptr [ %18, %14 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %7, i64 0, i32 1
  %10 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %9, ptr noundef nonnull align 8 dereferenceable(32) %3) #56
          to label %14 unwind label %11

11:                                               ; preds = %6
  %12 = landingpad { ptr, i32 }
          catch ptr null
  %13 = extractvalue { ptr, i32 } %12, 0
  tail call void @__clang_call_terminate(ptr %13) #60
  unreachable

14:                                               ; preds = %6
  %15 = icmp slt i32 %10, 0
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %7, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %7, i64 0, i32 2
  %18 = select i1 %15, ptr %8, ptr %7
  %19 = select i1 %15, ptr %16, ptr %17
  %20 = load ptr, ptr %19, align 8, !tbaa !29
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %6, !llvm.loop !75

22:                                               ; preds = %14, %4
  %23 = phi ptr [ %2, %4 ], [ %18, %14 ]
  ret ptr %23
}

; Function Attrs: mustprogress optsize uwtable
define available_externally noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) local_unnamed_addr #13 align 2 {
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %4 = load i64, ptr %3, align 8, !tbaa !49
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !49
  %7 = tail call i64 @llvm.umin.i64(i64 %6, i64 %4)
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = load ptr, ptr %1, align 8, !tbaa !23
  %11 = load ptr, ptr %0, align 8, !tbaa !23
  %12 = tail call i32 @memcmp(ptr noundef %11, ptr noundef %10, i64 noundef %7) #59
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %9, %2
  %15 = sub i64 %4, %6
  %16 = tail call i64 @llvm.smax.i64(i64 %15, i64 -2147483648)
  %17 = tail call i64 @llvm.smin.i64(i64 %16, i64 2147483647)
  %18 = trunc i64 %17 to i32
  br label %19

19:                                               ; preds = %14, %9
  %20 = phi i32 [ %12, %9 ], [ %18, %14 ]
  ret i32 %20
}

; Function Attrs: optsize uwtable
define internal ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(168) %2) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #57
  store ptr %0, ptr %4, align 8, !tbaa !29
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %4, i64 0, i32 1
  %6 = tail call noalias noundef nonnull dereferenceable(200) ptr @_Znwm(i64 noundef 200) #62
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %6, i64 0, i32 1
  tail call void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_Lb1EEEOS_IT_T0_E(ptr noundef nonnull align 8 dereferenceable(168) %7, ptr noundef nonnull align 8 dereferenceable(168) %2) #56
  store ptr %6, ptr %5, align 8, !tbaa !76
  %8 = invoke { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %7) #56
          to label %9 unwind label %16

9:                                                ; preds = %3
  %10 = extractvalue { ptr, ptr } %8, 0
  %11 = extractvalue { ptr, ptr } %8, 1
  %12 = icmp eq ptr %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = invoke ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSI_PSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %10, ptr noundef nonnull %11, ptr noundef nonnull %6) #56
          to label %15 unwind label %16

15:                                               ; preds = %13
  store ptr null, ptr %5, align 8, !tbaa !76
  br label %18

16:                                               ; preds = %13, %3
  %17 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %4) #59
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #57
  resume { ptr, i32 } %17

18:                                               ; preds = %15, %9
  %19 = phi ptr [ %14, %15 ], [ %10, %9 ]
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %4) #59
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #57
  ret ptr %19
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_Lb1EEEOS_IT_T0_E(ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 8 dereferenceable(168) %1) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %3, ptr %0, align 8, !tbaa !78
  %4 = load ptr, ptr %1, align 8, !tbaa !23
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 2
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !49
  %10 = add i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %3, ptr nonnull align 8 %4, i64 %10, i1 false)
  br label %15

13:                                               ; preds = %2
  store ptr %4, ptr %0, align 8, !tbaa !23
  %14 = load i64, ptr %5, align 8, !tbaa !50
  store i64 %14, ptr %3, align 8, !tbaa !50
  br label %15

15:                                               ; preds = %13, %12, %7
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %17 = load i64, ptr %16, align 8, !tbaa !49
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %17, ptr %18, align 8, !tbaa !49
  store ptr %5, ptr %1, align 8, !tbaa !23
  store i64 0, ptr %16, align 8, !tbaa !49
  store i8 0, ptr %5, align 8, !tbaa !50
  %19 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 0, i32 2
  store ptr %21, ptr %19, align 8, !tbaa !78
  %22 = load ptr, ptr %20, align 8, !tbaa !23
  %23 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 0, i32 2
  %24 = icmp eq ptr %22, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 0, i32 1
  %27 = load i64, ptr %26, align 8, !tbaa !49
  %28 = add i64 %27, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %21, ptr nonnull align 8 %22, i64 %28, i1 false)
  br label %33

31:                                               ; preds = %15
  store ptr %22, ptr %19, align 8, !tbaa !23
  %32 = load i64, ptr %23, align 8, !tbaa !50
  store i64 %32, ptr %21, align 8, !tbaa !50
  br label %33

33:                                               ; preds = %31, %30, %25
  %34 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 0, i32 1
  %35 = load i64, ptr %34, align 8, !tbaa !49
  %36 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 0, i32 1
  store i64 %35, ptr %36, align 8, !tbaa !49
  store ptr %23, ptr %20, align 8, !tbaa !23
  store i64 0, ptr %34, align 8, !tbaa !49
  store i8 0, ptr %23, align 8, !tbaa !50
  %37 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 1
  %38 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 1
  %39 = load <2 x ptr>, ptr %38, align 8, !tbaa !29
  store <2 x ptr> %39, ptr %37, align 8, !tbaa !29
  %40 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 2
  %41 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !79
  store ptr %42, ptr %40, align 8, !tbaa !79
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %38, i8 0, i64 24, i1 false)
  %43 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 2
  %44 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %43, ptr noundef nonnull align 8 dereferenceable(12) %44, i64 12, i1 false)
  %45 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 5
  %46 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 5
  %47 = load <2 x ptr>, ptr %46, align 8, !tbaa !29
  store <2 x ptr> %47, ptr %45, align 8, !tbaa !29
  %48 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0, i32 2
  %49 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0, i32 2
  %50 = load ptr, ptr %49, align 8, !tbaa !67
  store ptr %50, ptr %48, align 8, !tbaa !67
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %46, i8 0, i64 24, i1 false)
  %51 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 6
  %52 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 6
  %53 = load i16, ptr %52, align 8
  store i16 %53, ptr %51, align 8
  %54 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 8
  %55 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 8
  %56 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 8, i32 2
  store ptr %56, ptr %54, align 8, !tbaa !78
  %57 = load ptr, ptr %55, align 8, !tbaa !23
  %58 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 8, i32 2
  %59 = icmp eq ptr %57, %58
  br i1 %59, label %60, label %66

60:                                               ; preds = %33
  %61 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 8, i32 1
  %62 = load i64, ptr %61, align 8, !tbaa !49
  %63 = add i64 %62, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %56, ptr nonnull align 8 %57, i64 %63, i1 false)
  br label %68

66:                                               ; preds = %33
  store ptr %57, ptr %54, align 8, !tbaa !23
  %67 = load i64, ptr %58, align 8, !tbaa !50
  store i64 %67, ptr %56, align 8, !tbaa !50
  br label %68

68:                                               ; preds = %66, %65, %60
  %69 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 8, i32 1
  %70 = load i64, ptr %69, align 8, !tbaa !49
  %71 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 8, i32 1
  store i64 %70, ptr %71, align 8, !tbaa !49
  store ptr %58, ptr %55, align 8, !tbaa !23
  store i64 0, ptr %69, align 8, !tbaa !49
  store i8 0, ptr %58, align 8, !tbaa !50
  ret void
}

; Function Attrs: optsize uwtable
define internal { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %2) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = icmp eq ptr %4, %1
  br i1 %5, label %6, label %26

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, ptr %0, i64 40
  %8 = load i64, ptr %7, align 8, !tbaa !80
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, ptr %0, i64 32
  %12 = load ptr, ptr %11, align 8, !tbaa !29
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %12, i64 0, i32 1
  %14 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
          to label %18 unwind label %15

15:                                               ; preds = %10
  %16 = landingpad { ptr, i32 }
          catch ptr null
  %17 = extractvalue { ptr, i32 } %16, 0
  tail call void @__clang_call_terminate(ptr %17) #60
  unreachable

18:                                               ; preds = %10
  %19 = icmp slt i32 %14, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = load ptr, ptr %11, align 8, !tbaa !29
  br label %87

22:                                               ; preds = %18, %6
  %23 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
  %24 = extractvalue { ptr, ptr } %23, 0
  %25 = extractvalue { ptr, ptr } %23, 1
  br label %87

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1, i64 0, i32 1
  %28 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %2, ptr noundef nonnull align 8 dereferenceable(32) %27) #56
          to label %32 unwind label %29

29:                                               ; preds = %26
  %30 = landingpad { ptr, i32 }
          catch ptr null
  %31 = extractvalue { ptr, i32 } %30, 0
  tail call void @__clang_call_terminate(ptr %31) #60
  unreachable

32:                                               ; preds = %26
  %33 = icmp slt i32 %28, 0
  br i1 %33, label %34, label %57

34:                                               ; preds = %32
  %35 = getelementptr inbounds i8, ptr %0, i64 24
  %36 = load ptr, ptr %35, align 8, !tbaa !29
  %37 = icmp eq ptr %36, %1
  br i1 %37, label %87, label %38

38:                                               ; preds = %34
  %39 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef %1) #63
  %40 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %39, i64 0, i32 1
  %41 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %40, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
          to label %45 unwind label %42

42:                                               ; preds = %38
  %43 = landingpad { ptr, i32 }
          catch ptr null
  %44 = extractvalue { ptr, i32 } %43, 0
  tail call void @__clang_call_terminate(ptr %44) #60
  unreachable

45:                                               ; preds = %38
  %46 = icmp slt i32 %41, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %39, i64 0, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !81
  %50 = icmp eq ptr %49, null
  %51 = select i1 %50, ptr null, ptr %1
  %52 = select i1 %50, ptr %39, ptr %1
  br label %87

53:                                               ; preds = %45
  %54 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
  %55 = extractvalue { ptr, ptr } %54, 0
  %56 = extractvalue { ptr, ptr } %54, 1
  br label %87

57:                                               ; preds = %32
  %58 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %27, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
          to label %62 unwind label %59

59:                                               ; preds = %57
  %60 = landingpad { ptr, i32 }
          catch ptr null
  %61 = extractvalue { ptr, i32 } %60, 0
  tail call void @__clang_call_terminate(ptr %61) #60
  unreachable

62:                                               ; preds = %57
  %63 = icmp slt i32 %58, 0
  br i1 %63, label %64, label %87

64:                                               ; preds = %62
  %65 = getelementptr inbounds i8, ptr %0, i64 32
  %66 = load ptr, ptr %65, align 8, !tbaa !29
  %67 = icmp eq ptr %66, %1
  br i1 %67, label %87, label %68

68:                                               ; preds = %64
  %69 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef %1) #63
  %70 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %69, i64 0, i32 1
  %71 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %2, ptr noundef nonnull align 8 dereferenceable(32) %70) #56
          to label %75 unwind label %72

72:                                               ; preds = %68
  %73 = landingpad { ptr, i32 }
          catch ptr null
  %74 = extractvalue { ptr, i32 } %73, 0
  tail call void @__clang_call_terminate(ptr %74) #60
  unreachable

75:                                               ; preds = %68
  %76 = icmp slt i32 %71, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %79 = load ptr, ptr %78, align 8, !tbaa !81
  %80 = icmp eq ptr %79, null
  %81 = select i1 %80, ptr null, ptr %69
  %82 = select i1 %80, ptr %1, ptr %69
  br label %87

83:                                               ; preds = %75
  %84 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
  %85 = extractvalue { ptr, ptr } %84, 0
  %86 = extractvalue { ptr, ptr } %84, 1
  br label %87

87:                                               ; preds = %83, %77, %64, %62, %53, %47, %34, %22, %20
  %88 = phi ptr [ %24, %22 ], [ null, %20 ], [ %55, %53 ], [ %1, %34 ], [ %85, %83 ], [ null, %64 ], [ %1, %62 ], [ %51, %47 ], [ %81, %77 ]
  %89 = phi ptr [ %25, %22 ], [ %21, %20 ], [ %56, %53 ], [ %1, %34 ], [ %86, %83 ], [ %1, %64 ], [ null, %62 ], [ %52, %47 ], [ %82, %77 ]
  %90 = insertvalue { ptr, ptr } poison, ptr %88, 0
  %91 = insertvalue { ptr, ptr } %90, ptr %89, 1
  ret { ptr, ptr } %91
}

; Function Attrs: optsize uwtable
define internal ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSI_PSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp ne ptr %1, null
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  %7 = icmp eq ptr %6, %2
  %8 = select i1 %5, i1 true, i1 %7
  br i1 %8, label %18, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %3, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %2, i64 0, i32 1
  %12 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull align 8 dereferenceable(32) %11) #56
          to label %16 unwind label %13

13:                                               ; preds = %9
  %14 = landingpad { ptr, i32 }
          catch ptr null
  %15 = extractvalue { ptr, i32 } %14, 0
  tail call void @__clang_call_terminate(ptr %15) #60
  unreachable

16:                                               ; preds = %9
  %17 = icmp slt i32 %12, 0
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi i1 [ true, %4 ], [ %17, %16 ]
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %19, ptr noundef %3, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(32) %6) #59
  %20 = getelementptr inbounds i8, ptr %0, i64 40
  %21 = load i64, ptr %20, align 8, !tbaa !80
  %22 = add i64 %21, 1
  store i64 %22, ptr %20, align 8, !tbaa !80
  ret ptr %3
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !76
  %4 = icmp eq ptr %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load ptr, ptr %0, align 8, !tbaa !82
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %3, i64 0, i32 1
  tail call void @_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEEE7destroyISB_EEvPT_(ptr noundef nonnull align 1 dereferenceable(1) %6, ptr noundef nonnull %7) #59
  tail call void @_ZdlPv(ptr noundef nonnull %3) #58
  br label %8

8:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEEE7destroyISB_EEvPT_(ptr noundef nonnull align 1 dereferenceable(1) %0, ptr noundef %1) #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 8
  %5 = load ptr, ptr %4, align 8, !tbaa !23
  %6 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 8, i32 2
  %7 = icmp eq ptr %5, %6
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @_ZdlPv(ptr noundef %5) #58
  br label %9

9:                                                ; preds = %8, %2
  %10 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 5
  %11 = load ptr, ptr %10, align 8, !tbaa !65
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZdlPv(ptr noundef nonnull %11) #58
  br label %14

14:                                               ; preds = %13, %9
  %15 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 1
  tail call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %15) #59
  %16 = load ptr, ptr %3, align 8, !tbaa !23
  %17 = getelementptr inbounds %"struct.std::pair.28", ptr %1, i64 0, i32 1, i32 0, i32 2
  %18 = icmp eq ptr %16, %17
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  tail call void @_ZdlPv(ptr noundef %16) #58
  br label %20

20:                                               ; preds = %19, %14
  %21 = load ptr, ptr %1, align 8, !tbaa !23
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 2
  %23 = icmp eq ptr %21, %22
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @_ZdlPv(ptr noundef %21) #58
  br label %25

25:                                               ; preds = %24, %20
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext, ptr noundef, ptr noundef, ptr noundef nonnull align 8 dereferenceable(32)) local_unnamed_addr #8

; Function Attrs: optsize uwtable
define internal { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = load ptr, ptr %3, align 8, !tbaa !29
  %6 = icmp eq ptr %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %14, %2
  %8 = phi ptr [ %19, %14 ], [ %5, %2 ]
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %8, i64 0, i32 1
  %10 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %9) #56
          to label %14 unwind label %11

11:                                               ; preds = %7
  %12 = landingpad { ptr, i32 }
          catch ptr null
  %13 = extractvalue { ptr, i32 } %12, 0
  tail call void @__clang_call_terminate(ptr %13) #60
  unreachable

14:                                               ; preds = %7
  %15 = icmp slt i32 %10, 0
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 3
  %18 = select i1 %15, ptr %16, ptr %17
  %19 = load ptr, ptr %18, align 8, !tbaa !29
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %7, !llvm.loop !83

21:                                               ; preds = %14
  %.lcssa2 = phi i1 [ %15, %14 ]
  %.lcssa1 = phi ptr [ %8, %14 ]
  br i1 %.lcssa2, label %22, label %29

22:                                               ; preds = %21, %2
  %23 = phi ptr [ %.lcssa1, %21 ], [ %4, %2 ]
  %24 = getelementptr inbounds i8, ptr %0, i64 24
  %25 = load ptr, ptr %24, align 8, !tbaa !84
  %26 = icmp eq ptr %23, %25
  br i1 %26, label %41, label %27

27:                                               ; preds = %22
  %28 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %23) #63
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi ptr [ %23, %27 ], [ %.lcssa1, %21 ]
  %31 = phi ptr [ %28, %27 ], [ %.lcssa1, %21 ]
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %31, i64 0, i32 1
  %33 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %32, ptr noundef nonnull align 8 dereferenceable(32) %1) #56
          to label %37 unwind label %34

34:                                               ; preds = %29
  %35 = landingpad { ptr, i32 }
          catch ptr null
  %36 = extractvalue { ptr, i32 } %35, 0
  tail call void @__clang_call_terminate(ptr %36) #60
  unreachable

37:                                               ; preds = %29
  %38 = icmp slt i32 %33, 0
  %39 = select i1 %38, ptr null, ptr %31
  %40 = select i1 %38, ptr %30, ptr null
  br label %41

41:                                               ; preds = %37, %22
  %42 = phi ptr [ null, %22 ], [ %39, %37 ]
  %43 = phi ptr [ %23, %22 ], [ %40, %37 ]
  %44 = insertvalue { ptr, ptr } poison, ptr %42, 0
  %45 = insertvalue { ptr, ptr } %44, ptr %43, 1
  ret { ptr, ptr } %45
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(read)
declare noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef) local_unnamed_addr #20

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(read)
declare noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef) local_unnamed_addr #20

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #21

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(argmem: read)
declare i32 @memcmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #22

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #21

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #21

; Function Attrs: optsize uwtable
define internal void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(136) %2) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %4, ptr %0, align 8, !tbaa !78
  %5 = load ptr, ptr %1, align 8, !tbaa !23
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 2
  %7 = icmp eq ptr %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %10 = load i64, ptr %9, align 8, !tbaa !49
  %11 = add i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %4, ptr nonnull align 8 %5, i64 %11, i1 false)
  br label %16

14:                                               ; preds = %3
  store ptr %5, ptr %0, align 8, !tbaa !23
  %15 = load i64, ptr %6, align 8, !tbaa !50
  store i64 %15, ptr %4, align 8, !tbaa !50
  br label %16

16:                                               ; preds = %14, %13, %8
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !49
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %18, ptr %19, align 8, !tbaa !49
  store ptr %6, ptr %1, align 8, !tbaa !23
  store i64 0, ptr %17, align 8, !tbaa !49
  store i8 0, ptr %6, align 8, !tbaa !50
  %20 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1
  invoke void @_ZN2PP8VariableC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(136) %20, ptr noundef nonnull align 8 dereferenceable(136) %2) #56
          to label %21 unwind label %22

21:                                               ; preds = %16
  ret void

22:                                               ; preds = %16
  %23 = landingpad { ptr, i32 }
          cleanup
  %24 = load ptr, ptr %0, align 8, !tbaa !23
  %25 = icmp eq ptr %24, %4
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @_ZdlPv(ptr noundef %24) #58
  br label %27

27:                                               ; preds = %26, %22
  resume { ptr, i32 } %23
}

; Function Attrs: inlinehint optsize uwtable
define internal void @_ZN2PP8VariableC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(136) %0, ptr noundef nonnull align 8 dereferenceable(136) %1) unnamed_addr #23 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %3, ptr %0, align 8, !tbaa !78
  %4 = load ptr, ptr %1, align 8, !tbaa !23
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !49
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  tail call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %4, ptr noundef %7) #56
  %8 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.PP::Variable", ptr %1, i64 0, i32 1
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9) #56
          to label %10 unwind label %27

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.PP::Variable", ptr %1, i64 0, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %11, ptr noundef nonnull align 8 dereferenceable(12) %12, i64 12, i1 false)
  %13 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 5
  %14 = getelementptr inbounds %"class.PP::Variable", ptr %1, i64 0, i32 5
  invoke void @_ZNSt6vectorIiSaIiEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %13, ptr noundef nonnull align 8 dereferenceable(24) %14) #56
          to label %15 unwind label %29

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.PP::Variable", ptr %1, i64 0, i32 6
  %18 = load i16, ptr %17, align 8
  store i16 %18, ptr %16, align 8
  %19 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 8
  %20 = getelementptr inbounds %"class.PP::Variable", ptr %1, i64 0, i32 8
  %21 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 8, i32 2
  store ptr %21, ptr %19, align 8, !tbaa !78
  %22 = load ptr, ptr %20, align 8, !tbaa !23
  %23 = getelementptr inbounds %"class.PP::Variable", ptr %1, i64 0, i32 8, i32 1
  %24 = load i64, ptr %23, align 8, !tbaa !49
  %25 = getelementptr inbounds i8, ptr %22, i64 %24
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %19, ptr noundef %22, ptr noundef %25) #56
          to label %26 unwind label %31

26:                                               ; preds = %15
  ret void

27:                                               ; preds = %2
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %38

29:                                               ; preds = %10
  %30 = landingpad { ptr, i32 }
          cleanup
  br label %36

31:                                               ; preds = %15
  %32 = landingpad { ptr, i32 }
          cleanup
  %33 = load ptr, ptr %13, align 8, !tbaa !65
  %34 = icmp eq ptr %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @_ZdlPv(ptr noundef nonnull %33) #58
  br label %36

36:                                               ; preds = %35, %31, %29
  %37 = phi { ptr, i32 } [ %30, %29 ], [ %32, %31 ], [ %32, %35 ]
  tail call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %8) #59
  br label %38

38:                                               ; preds = %36, %27
  %39 = phi { ptr, i32 } [ %37, %36 ], [ %28, %27 ]
  %40 = load ptr, ptr %0, align 8, !tbaa !23
  %41 = icmp eq ptr %40, %3
  br i1 %41, label %43, label %42

42:                                               ; preds = %38
  tail call void @_ZdlPv(ptr noundef %40) #58
  br label %43

43:                                               ; preds = %42, %38
  resume { ptr, i32 } %39
}

; Function Attrs: optsize uwtable
define weak_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, ptr noundef %2) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #57
  %5 = ptrtoint ptr %2 to i64
  %6 = ptrtoint ptr %1 to i64
  %7 = sub i64 %5, %6
  store i64 %7, ptr %4, align 8, !tbaa !85
  %8 = icmp ugt i64 %7, 15
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = load ptr, ptr %0, align 8, !tbaa !23
  br label %15

11:                                               ; preds = %3
  %12 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0) #56
  store ptr %12, ptr %0, align 8, !tbaa !23
  %13 = load i64, ptr %4, align 8, !tbaa !85
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store i64 %13, ptr %14, align 8, !tbaa !50
  br label %15

15:                                               ; preds = %11, %9
  %16 = phi ptr [ %10, %9 ], [ %12, %11 ]
  switch i64 %7, label %19 [
    i64 1, label %17
    i64 0, label %20
  ]

17:                                               ; preds = %15
  %18 = load i8, ptr %1, align 1, !tbaa !50
  store i8 %18, ptr %16, align 1, !tbaa !50
  br label %20

19:                                               ; preds = %15
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %16, ptr align 1 %1, i64 %7, i1 false)
  br label %20

20:                                               ; preds = %19, %17, %15
  %21 = load i64, ptr %4, align 8, !tbaa !85
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %21, ptr %22, align 8, !tbaa !49
  %23 = load ptr, ptr %0, align 8, !tbaa !23
  %24 = getelementptr inbounds i8, ptr %23, i64 %21
  store i8 0, ptr %24, align 1, !tbaa !50
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #57
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !22
  %5 = load ptr, ptr %1, align 8, !tbaa !17
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 5
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %10 = icmp eq ptr %4, %5
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call noundef ptr @_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %9, ptr noundef null) #56
  br label %13

13:                                               ; preds = %11, %2
  %14 = phi ptr [ null, %2 ], [ %12, %11 ]
  store ptr %14, ptr %0, align 8, !tbaa !17
  %15 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %14, ptr %15, align 8, !tbaa !22
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 %9
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !79
  %18 = load ptr, ptr %1, align 8, !tbaa !29
  %19 = load ptr, ptr %3, align 8, !tbaa !29
  %20 = invoke noundef ptr @_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_(ptr %18, ptr %19, ptr noundef %14) #56
          to label %21 unwind label %22

21:                                               ; preds = %13
  store ptr %20, ptr %15, align 8, !tbaa !22
  ret void

22:                                               ; preds = %13
  %23 = landingpad { ptr, i32 }
          cleanup
  %24 = load ptr, ptr %0, align 8, !tbaa !17
  %25 = icmp eq ptr %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @_ZdlPv(ptr noundef nonnull %24) #58
  br label %27

27:                                               ; preds = %26, %22
  resume { ptr, i32 } %23
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt6vectorIiSaIiEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !70
  %5 = load ptr, ptr %1, align 8, !tbaa !65
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %10 = icmp eq ptr %4, %5
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call noundef ptr @_ZNSt15__new_allocatorIiE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %9, ptr noundef null) #56
  br label %13

13:                                               ; preds = %11, %2
  %14 = phi ptr [ null, %2 ], [ %12, %11 ]
  store ptr %14, ptr %0, align 8, !tbaa !65
  %15 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %14, ptr %15, align 8, !tbaa !70
  %16 = getelementptr inbounds i32, ptr %14, i64 %9
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !67
  %18 = load ptr, ptr %1, align 8, !tbaa !29
  %19 = load ptr, ptr %3, align 8, !tbaa !29
  %20 = ptrtoint ptr %19 to i64
  %21 = ptrtoint ptr %18 to i64
  %22 = sub i64 %20, %21
  %23 = icmp eq ptr %19, %18
  br i1 %23, label %25, label %24

24:                                               ; preds = %13
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %14, ptr align 4 %18, i64 %22, i1 false)
  br label %25

25:                                               ; preds = %24, %13
  %26 = ashr exact i64 %22, 2
  %27 = getelementptr inbounds i32, ptr %14, i64 %26
  store ptr %27, ptr %15, align 8, !tbaa !70
  ret void
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #1

; Function Attrs: mustprogress optsize uwtable
define internal noundef ptr @_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = icmp ugt i64 %1, 288230376151711743
  br i1 %4, label %5, label %9, !prof !48

5:                                                ; preds = %3
  %6 = icmp ugt i64 %1, 576460752303423487
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #61
  unreachable

8:                                                ; preds = %5
  tail call void @_ZSt17__throw_bad_allocv() #61
  unreachable

9:                                                ; preds = %3
  %10 = shl nuw nsw i64 %1, 5
  %11 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #62
  ret ptr %11
}

; Function Attrs: optsize uwtable
define internal noundef ptr @_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_(ptr %0, ptr %1, ptr noundef %2) #6 comdat personality ptr @__gxx_personality_v0 {
  %4 = icmp eq ptr %0, %1
  br i1 %4, label %32, label %5

5:                                                ; preds = %13, %3
  %6 = phi ptr [ %15, %13 ], [ %2, %3 ]
  %7 = phi ptr [ %14, %13 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 2
  store ptr %8, ptr %6, align 8, !tbaa !78
  %9 = load ptr, ptr %7, align 8, !tbaa !23
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 1
  %11 = load i64, ptr %10, align 8, !tbaa !49
  %12 = getelementptr inbounds i8, ptr %9, i64 %11
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %6, ptr noundef %9, ptr noundef %12) #56
          to label %13 unwind label %17

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 1
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 1
  %16 = icmp eq ptr %14, %1
  br i1 %16, label %32, label %5, !llvm.loop !86

17:                                               ; preds = %5
  %.lcssa = phi ptr [ %6, %5 ]
  %18 = landingpad { ptr, i32 }
          catch ptr null
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = tail call ptr @__cxa_begin_catch(ptr %19) #57
  %21 = icmp eq ptr %.lcssa, %2
  br i1 %21, label %31, label %22

22:                                               ; preds = %28, %17
  %23 = phi ptr [ %29, %28 ], [ %2, %17 ]
  %24 = load ptr, ptr %23, align 8, !tbaa !23
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %23, i64 0, i32 2
  %26 = icmp eq ptr %24, %25
  br i1 %26, label %28, label %27

27:                                               ; preds = %22
  tail call void @_ZdlPv(ptr noundef %24) #58
  br label %28

28:                                               ; preds = %27, %22
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %23, i64 1
  %30 = icmp eq ptr %29, %.lcssa
  br i1 %30, label %31, label %22, !llvm.loop !27

31:                                               ; preds = %28, %17
  invoke void @__cxa_rethrow() #64
          to label %40 unwind label %34

32:                                               ; preds = %13, %3
  %33 = phi ptr [ %2, %3 ], [ %15, %13 ]
  ret ptr %33

34:                                               ; preds = %31
  %35 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %36 unwind label %37

36:                                               ; preds = %34
  resume { ptr, i32 } %35

37:                                               ; preds = %34
  %38 = landingpad { ptr, i32 }
          catch ptr null
  %39 = extractvalue { ptr, i32 } %38, 0
  tail call void @__clang_call_terminate(ptr %39) #60
  unreachable

40:                                               ; preds = %31
  unreachable
}

declare void @__cxa_rethrow() local_unnamed_addr

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: optsize
declare noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev(ptr noundef nonnull align 8 dereferenceable(168) %0) unnamed_addr #24 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1
  %3 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 8
  %4 = load ptr, ptr %3, align 8, !tbaa !23
  %5 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 8, i32 2
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef %4) #58
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 5
  %10 = load ptr, ptr %9, align 8, !tbaa !65
  %11 = icmp eq ptr %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZdlPv(ptr noundef nonnull %10) #58
  br label %13

13:                                               ; preds = %12, %8
  %14 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 1
  tail call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %14) #59
  %15 = load ptr, ptr %2, align 8, !tbaa !23
  %16 = getelementptr inbounds %"struct.std::pair.28", ptr %0, i64 0, i32 1, i32 0, i32 2
  %17 = icmp eq ptr %15, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %13
  tail call void @_ZdlPv(ptr noundef %15) #58
  br label %19

19:                                               ; preds = %18, %13
  %20 = load ptr, ptr %0, align 8, !tbaa !23
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  %22 = icmp eq ptr %20, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @_ZdlPv(ptr noundef %20) #58
  br label %24

24:                                               ; preds = %23, %19
  ret void
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN2PP8VariableD2Ev(ptr noundef nonnull align 8 dereferenceable(136) %0) unnamed_addr #24 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 8
  %3 = load ptr, ptr %2, align 8, !tbaa !23
  %4 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 8, i32 2
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef %3) #58
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 5
  %9 = load ptr, ptr %8, align 8, !tbaa !65
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdlPv(ptr noundef nonnull %9) #58
  br label %12

12:                                               ; preds = %11, %7
  %13 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 1
  tail call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %13) #59
  %14 = load ptr, ptr %0, align 8, !tbaa !23
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  %16 = icmp eq ptr %14, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %12
  tail call void @_ZdlPv(ptr noundef %14) #58
  br label %18

18:                                               ; preds = %17, %12
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !29
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !79
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 2
  store ptr %9, ptr %4, align 8, !tbaa !78
  %10 = load ptr, ptr %1, align 8, !tbaa !23
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %12 = load i64, ptr %11, align 8, !tbaa !49
  %13 = getelementptr inbounds i8, ptr %10, i64 %12
  tail call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef %10, ptr noundef %13) #56
  %14 = load ptr, ptr %3, align 8, !tbaa !22
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 1
  store ptr %15, ptr %3, align 8, !tbaa !22
  br label %17

16:                                               ; preds = %2
  tail call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %4, ptr noundef nonnull align 8 dereferenceable(32) %1) #56
  br label %17

17:                                               ; preds = %16, %8
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %2) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = tail call noundef i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef 1, ptr noundef nonnull @.str.225) #56
  %5 = load ptr, ptr %0, align 8, !tbaa !29
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !22
  %8 = ptrtoint ptr %1 to i64
  %9 = ptrtoint ptr %5 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 5
  %12 = icmp eq i64 %4, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  %14 = tail call noundef ptr @_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %4, ptr noundef null) #56
  br label %15

15:                                               ; preds = %13, %3
  %16 = phi ptr [ %14, %13 ], [ null, %3 ]
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 %11
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 %11, i32 2
  store ptr %18, ptr %17, align 8, !tbaa !78
  %19 = load ptr, ptr %2, align 8, !tbaa !23
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %21 = load i64, ptr %20, align 8, !tbaa !49
  %22 = getelementptr inbounds i8, ptr %19, i64 %21
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %17, ptr noundef %19, ptr noundef %22) #56
          to label %23 unwind label %34

23:                                               ; preds = %15
  %24 = tail call noundef ptr @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_(ptr noundef %5, ptr noundef %1, ptr noundef nonnull %16, ptr noundef nonnull align 1 dereferenceable(1) %0) #59
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 1
  %26 = tail call noundef ptr @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_(ptr noundef %1, ptr noundef %7, ptr noundef nonnull %25, ptr noundef nonnull align 1 dereferenceable(1) %0) #59
  %27 = icmp eq ptr %5, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  tail call void @_ZdlPv(ptr noundef nonnull %5) #58
  br label %29

29:                                               ; preds = %28, %23
  %30 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %16, ptr %0, align 8, !tbaa !17
  store ptr %26, ptr %6, align 8, !tbaa !22
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 %4
  store ptr %31, ptr %30, align 8, !tbaa !79
  ret void

32:                                               ; preds = %34
  %33 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %38 unwind label %39

34:                                               ; preds = %15
  %35 = landingpad { ptr, i32 }
          catch ptr null
  %36 = extractvalue { ptr, i32 } %35, 0
  %37 = tail call ptr @__cxa_begin_catch(ptr %36) #57
  tail call void @_ZdlPv(ptr noundef nonnull %16) #58
  invoke void @__cxa_rethrow() #64
          to label %42 unwind label %32

38:                                               ; preds = %32
  resume { ptr, i32 } %33

39:                                               ; preds = %32
  %40 = landingpad { ptr, i32 }
          catch ptr null
  %41 = extractvalue { ptr, i32 } %40, 0
  tail call void @__clang_call_terminate(ptr %41) #60
  unreachable

42:                                               ; preds = %34
  unreachable
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !22
  %6 = load ptr, ptr %0, align 8, !tbaa !17
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 5
  %11 = sub nsw i64 288230376151711743, %10
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef %2) #61
  unreachable

14:                                               ; preds = %3
  %15 = tail call i64 @llvm.umax.i64(i64 %10, i64 %1)
  %16 = add i64 %15, %10
  %17 = icmp ult i64 %16, %10
  %18 = icmp ugt i64 %16, 288230376151711743
  %19 = or i1 %17, %18
  %20 = select i1 %19, i64 288230376151711743, i64 %16
  ret i64 %20
}

; Function Attrs: nounwind optsize uwtable
define internal noundef ptr @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 1 dereferenceable(1) %3) #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq ptr %0, %1
  br i1 %5, label %30, label %6

6:                                                ; preds = %23, %4
  %7 = phi ptr [ %28, %23 ], [ %2, %4 ]
  %8 = phi ptr [ %27, %23 ], [ %0, %4 ]
  tail call void @llvm.experimental.noalias.scope.decl(metadata !87)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !90)
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  store ptr %9, ptr %7, align 8, !tbaa !78, !alias.scope !87, !noalias !90
  %10 = load ptr, ptr %8, align 8, !tbaa !23, !alias.scope !90, !noalias !87
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 2
  %12 = icmp eq ptr %10, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 1
  %15 = load i64, ptr %14, align 8, !tbaa !49, !alias.scope !90, !noalias !87
  %16 = add i64 %15, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %9, ptr nonnull align 8 %10, i64 %16, i1 false)
  br label %23

19:                                               ; preds = %6
  store ptr %10, ptr %7, align 8, !tbaa !23, !alias.scope !87, !noalias !90
  %20 = load i64, ptr %11, align 8, !tbaa !50, !alias.scope !90, !noalias !87
  store i64 %20, ptr %9, align 8, !tbaa !50, !alias.scope !87, !noalias !90
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 1
  %22 = load i64, ptr %21, align 8, !tbaa !49, !alias.scope !90, !noalias !87
  br label %23

23:                                               ; preds = %19, %18, %13
  %24 = phi i64 [ %22, %19 ], [ %15, %18 ], [ -1, %13 ]
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 1
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 1
  store i64 %24, ptr %26, align 8, !tbaa !49, !alias.scope !87, !noalias !90
  store ptr %11, ptr %8, align 8, !tbaa !23, !alias.scope !90, !noalias !87
  store i64 0, ptr %25, align 8, !tbaa !49, !alias.scope !90, !noalias !87
  store i8 0, ptr %11, align 8, !tbaa !50, !alias.scope !90, !noalias !87
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 1
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 1
  %29 = icmp eq ptr %27, %1
  br i1 %29, label %30, label %6, !llvm.loop !92

30:                                               ; preds = %23, %4
  %31 = phi ptr [ %2, %4 ], [ %28, %23 ]
  ret ptr %31
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #25

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #21

; Function Attrs: optsize uwtable
define available_externally void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(128) %0) unnamed_addr #6 align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 128
  tail call void @_ZNSt8ios_baseC2Ev(ptr noundef nonnull align 8 dereferenceable(216) %2) #59
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVSt9basic_iosIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !51
  %3 = getelementptr inbounds i8, ptr %0, i64 344
  store ptr null, ptr %3, align 8, !tbaa !93
  %4 = getelementptr inbounds i8, ptr %0, i64 352
  store i8 0, ptr %4, align 8, !tbaa !94
  %5 = getelementptr inbounds i8, ptr %0, i64 353
  store i8 0, ptr %5, align 1, !tbaa !95
  %6 = getelementptr inbounds i8, ptr %0, i64 360
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %6, i8 0, i64 32, i1 false)
  invoke void @_ZNSdC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull getelementptr inbounds ([10 x ptr], ptr @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 1)) #56
          to label %7 unwind label %21

7:                                                ; preds = %1
  store ptr getelementptr inbounds ({ [5 x ptr], [5 x ptr], [5 x ptr] }, ptr @_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !51
  store ptr getelementptr inbounds ({ [5 x ptr], [5 x ptr], [5 x ptr] }, ptr @_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 2, i64 3), ptr %2, align 8, !tbaa !51
  %8 = getelementptr inbounds i8, ptr %0, i64 16
  store ptr getelementptr inbounds ({ [5 x ptr], [5 x ptr], [5 x ptr] }, ptr @_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 1, i64 3), ptr %8, align 8, !tbaa !51
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %0, i64 0, i32 1
  store ptr getelementptr inbounds ({ [16 x ptr] }, ptr @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2), ptr %9, align 8, !tbaa !51
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %0, i64 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %0, i64 0, i32 1, i32 0, i32 7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %10, i8 0, i64 48, i1 false)
  tail call void @_ZNSt6localeC1Ev(ptr noundef nonnull align 8 dereferenceable(8) %11) #59
  store ptr getelementptr inbounds ({ [16 x ptr] }, ptr @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 2), ptr %9, align 8, !tbaa !51
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %0, i64 0, i32 1, i32 1
  store i32 24, ptr %12, align 8, !tbaa !96
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %0, i64 0, i32 1, i32 2
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %0, i64 0, i32 1, i32 2, i32 2
  store ptr %14, ptr %13, align 8, !tbaa !78
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %0, i64 0, i32 1, i32 2, i32 1
  store i64 0, ptr %15, align 8, !tbaa !49
  store i8 0, ptr %14, align 8, !tbaa !50
  %16 = load ptr, ptr %0, align 8, !tbaa !51
  %17 = getelementptr i8, ptr %16, i64 -24
  %18 = load i64, ptr %17, align 8
  %19 = getelementptr inbounds i8, ptr %0, i64 %18
  invoke void @_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E(ptr noundef nonnull align 8 dereferenceable(264) %19, ptr noundef nonnull %9) #56
          to label %20 unwind label %23

20:                                               ; preds = %7
  ret void

21:                                               ; preds = %1
  %22 = landingpad { ptr, i32 }
          cleanup
  br label %31

23:                                               ; preds = %7
  %24 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(104) %9) #59
  %25 = load ptr, ptr getelementptr inbounds ([10 x ptr], ptr @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 2), align 8
  store ptr %25, ptr %0, align 8, !tbaa !51
  %26 = load ptr, ptr getelementptr inbounds ([10 x ptr], ptr @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 3), align 8
  %27 = getelementptr i8, ptr %25, i64 -24
  %28 = load i64, ptr %27, align 8
  %29 = getelementptr inbounds i8, ptr %0, i64 %28
  store ptr %26, ptr %29, align 8, !tbaa !51
  %30 = getelementptr inbounds %"class.std::basic_istream", ptr %0, i64 0, i32 1
  store i64 0, ptr %30, align 8, !tbaa !100
  br label %31

31:                                               ; preds = %23, %21
  %32 = phi { ptr, i32 } [ %24, %23 ], [ %22, %21 ]
  tail call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %2) #59
  resume { ptr, i32 } %32
}

; Function Attrs: nounwind optsize
declare void @_ZNSt8ios_baseC2Ev(ptr noundef nonnull align 8 dereferenceable(216)) unnamed_addr #8

; Function Attrs: optsize uwtable
define available_externally void @_ZNSdC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef %1) unnamed_addr #6 align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds ptr, ptr %1, i64 1
  %4 = load ptr, ptr %3, align 8
  store ptr %4, ptr %0, align 8, !tbaa !51
  %5 = getelementptr inbounds ptr, ptr %1, i64 2
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr i8, ptr %4, i64 -24
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 %8
  store ptr %6, ptr %9, align 8, !tbaa !51
  %10 = getelementptr inbounds %"class.std::basic_istream", ptr %0, i64 0, i32 1
  store i64 0, ptr %10, align 8, !tbaa !100
  %11 = load ptr, ptr %0, align 8, !tbaa !51
  %12 = getelementptr i8, ptr %11, i64 -24
  %13 = load i64, ptr %12, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 %13
  tail call void @_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E(ptr noundef nonnull align 8 dereferenceable(264) %14, ptr noundef null) #56
  %15 = getelementptr inbounds i8, ptr %0, i64 16
  %16 = getelementptr inbounds ptr, ptr %1, i64 3
  %17 = load ptr, ptr %16, align 8
  store ptr %17, ptr %15, align 8, !tbaa !51
  %18 = getelementptr inbounds ptr, ptr %1, i64 4
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr i8, ptr %17, i64 -24
  %21 = load i64, ptr %20, align 8
  %22 = getelementptr inbounds i8, ptr %15, i64 %21
  store ptr %19, ptr %22, align 8, !tbaa !51
  %23 = load ptr, ptr %15, align 8, !tbaa !51
  %24 = getelementptr i8, ptr %23, i64 -24
  %25 = load i64, ptr %24, align 8
  %26 = getelementptr inbounds i8, ptr %15, i64 %25
  invoke void @_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E(ptr noundef nonnull align 8 dereferenceable(264) %26, ptr noundef null) #56
          to label %27 unwind label %36

27:                                               ; preds = %2
  %28 = load ptr, ptr %1, align 8
  store ptr %28, ptr %0, align 8, !tbaa !51
  %29 = getelementptr inbounds ptr, ptr %1, i64 5
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr i8, ptr %28, i64 -24
  %32 = load i64, ptr %31, align 8
  %33 = getelementptr inbounds i8, ptr %0, i64 %32
  store ptr %30, ptr %33, align 8, !tbaa !51
  %34 = getelementptr inbounds ptr, ptr %1, i64 6
  %35 = load ptr, ptr %34, align 8
  store ptr %35, ptr %15, align 8, !tbaa !51
  ret void

36:                                               ; preds = %2
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %3, align 8
  store ptr %38, ptr %0, align 8, !tbaa !51
  %39 = load ptr, ptr %5, align 8
  %40 = getelementptr i8, ptr %38, i64 -24
  %41 = load i64, ptr %40, align 8
  %42 = getelementptr inbounds i8, ptr %0, i64 %41
  store ptr %39, ptr %42, align 8, !tbaa !51
  store i64 0, ptr %10, align 8, !tbaa !100
  resume { ptr, i32 } %37
}

; Function Attrs: nounwind optsize
declare void @_ZNSt6localeC1Ev(ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #8

; Function Attrs: optsize
declare void @_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E(ptr noundef nonnull align 8 dereferenceable(264), ptr noundef) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind optsize uwtable
define weak_odr dso_local void @_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #24 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [16 x ptr] }, ptr @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !51
  %2 = getelementptr inbounds %"class.std::__cxx11::basic_stringbuf", ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !23
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_stringbuf", ptr %0, i64 0, i32 2, i32 2
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef %3) #58
  br label %7

7:                                                ; preds = %6, %1
  store ptr getelementptr inbounds ({ [16 x ptr] }, ptr @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !51
  %8 = getelementptr inbounds %"class.std::basic_streambuf", ptr %0, i64 0, i32 7
  tail call void @_ZNSt6localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %8) #59
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(216)) unnamed_addr #8

; Function Attrs: nounwind optsize
declare void @_ZNSt6localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #8

; Function Attrs: optsize uwtable
define weak_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, ptr noundef %2) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #57
  %5 = ptrtoint ptr %2 to i64
  %6 = ptrtoint ptr %1 to i64
  %7 = sub i64 %5, %6
  store i64 %7, ptr %4, align 8, !tbaa !85
  %8 = icmp ugt i64 %7, 15
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = load ptr, ptr %0, align 8, !tbaa !23
  br label %15

11:                                               ; preds = %3
  %12 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(8) %4, i64 noundef 0) #56
  store ptr %12, ptr %0, align 8, !tbaa !23
  %13 = load i64, ptr %4, align 8, !tbaa !85
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store i64 %13, ptr %14, align 8, !tbaa !50
  br label %15

15:                                               ; preds = %11, %9
  %16 = phi ptr [ %10, %9 ], [ %12, %11 ]
  switch i64 %7, label %19 [
    i64 1, label %17
    i64 0, label %20
  ]

17:                                               ; preds = %15
  %18 = load i8, ptr %1, align 1, !tbaa !50
  store i8 %18, ptr %16, align 1, !tbaa !50
  br label %20

19:                                               ; preds = %15
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %16, ptr align 1 %1, i64 %7, i1 false)
  br label %20

20:                                               ; preds = %19, %17, %15
  %21 = load i64, ptr %4, align 8, !tbaa !85
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %21, ptr %22, align 8, !tbaa !49
  %23 = load ptr, ptr %0, align 8, !tbaa !23
  %24 = getelementptr inbounds i8, ptr %23, i64 %21
  store i8 0, ptr %24, align 1, !tbaa !50
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #57
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !102
  %3 = icmp eq ptr %2, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool>>::_Bvector_impl_data", ptr %0, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !104
  %7 = ptrtoint ptr %6 to i64
  %8 = ptrtoint ptr %2 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 3
  %11 = sub nsw i64 0, %10
  %12 = getelementptr inbounds i64, ptr %6, i64 %11
  tail call void @_ZdlPv(ptr noundef %12) #58
  store ptr null, ptr %0, align 8
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 0, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 16
  store ptr null, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %0, i64 24
  store i32 0, ptr %15, align 8
  store ptr null, ptr %5, align 8
  br label %16

16:                                               ; preds = %4, %1
  ret void
}

; Function Attrs: nounwind optsize uwtable
define available_externally void @_ZNSt13basic_filebufIcSt11char_traitsIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(240) %0) unnamed_addr #10 align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [16 x ptr] }, ptr @_ZTVSt13basic_filebufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !51
  %2 = invoke noundef ptr @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(ptr noundef nonnull align 8 dereferenceable(240) %0) #56
          to label %7 unwind label %3

3:                                                ; preds = %1
  %4 = landingpad { ptr, i32 }
          catch ptr null
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = tail call ptr @__cxa_begin_catch(ptr %5) #57
  invoke void @__cxa_end_catch()
          to label %7 unwind label %10

7:                                                ; preds = %3, %1
  %8 = getelementptr inbounds %"class.std::basic_filebuf", ptr %0, i64 0, i32 2
  tail call void @_ZNSt12__basic_fileIcED1Ev(ptr noundef nonnull align 8 dereferenceable(9) %8) #59
  store ptr getelementptr inbounds ({ [16 x ptr] }, ptr @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !51
  %9 = getelementptr inbounds %"class.std::basic_streambuf", ptr %0, i64 0, i32 7
  tail call void @_ZNSt6localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %9) #59
  ret void

10:                                               ; preds = %3
  %11 = landingpad { ptr, i32 }
          catch ptr null
  %12 = extractvalue { ptr, i32 } %11, 0
  tail call void @__clang_call_terminate(ptr %12) #60
  unreachable
}

; Function Attrs: optsize
declare noundef ptr @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(ptr noundef nonnull align 8 dereferenceable(240)) local_unnamed_addr #7

; Function Attrs: nounwind optsize
declare void @_ZNSt12__basic_fileIcED1Ev(ptr noundef nonnull align 8 dereferenceable(9)) unnamed_addr #8

; Function Attrs: optsize uwtable
define internal void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr noundef nonnull align 4 dereferenceable(4) %2) #6 comdat align 2 {
  %4 = tail call noundef i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef 1, ptr noundef nonnull @.str.225) #56
  %5 = load ptr, ptr %0, align 8, !tbaa !29
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !70
  %8 = ptrtoint ptr %1 to i64
  %9 = ptrtoint ptr %5 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 2
  %12 = icmp eq i64 %4, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  %14 = tail call noundef ptr @_ZNSt15__new_allocatorIiE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %4, ptr noundef null) #56
  br label %15

15:                                               ; preds = %13, %3
  %16 = phi ptr [ %14, %13 ], [ null, %3 ]
  %17 = getelementptr inbounds i32, ptr %16, i64 %11
  %18 = load i32, ptr %2, align 4, !tbaa !68
  store i32 %18, ptr %17, align 4, !tbaa !68
  %19 = icmp sgt i64 %10, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %16, ptr align 4 %5, i64 %10, i1 false)
  br label %21

21:                                               ; preds = %20, %15
  %22 = getelementptr inbounds i32, ptr %17, i64 1
  %23 = ptrtoint ptr %7 to i64
  %24 = sub i64 %23, %8
  %25 = icmp sgt i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %21
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %22, ptr align 4 %1, i64 %24, i1 false)
  br label %27

27:                                               ; preds = %26, %21
  %28 = icmp eq ptr %5, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %27
  tail call void @_ZdlPv(ptr noundef nonnull %5) #58
  br label %30

30:                                               ; preds = %29, %27
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  %32 = ashr exact i64 %24, 2
  %33 = getelementptr inbounds i32, ptr %22, i64 %32
  store ptr %16, ptr %0, align 8, !tbaa !65
  store ptr %33, ptr %6, align 8, !tbaa !70
  %34 = getelementptr inbounds i32, ptr %16, i64 %4
  store ptr %34, ptr %31, align 8, !tbaa !67
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !70
  %6 = load ptr, ptr %0, align 8, !tbaa !65
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 2
  %11 = sub nsw i64 2305843009213693951, %10
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef %2) #61
  unreachable

14:                                               ; preds = %3
  %15 = tail call i64 @llvm.umax.i64(i64 %10, i64 %1)
  %16 = add i64 %15, %10
  %17 = icmp ult i64 %16, %10
  %18 = icmp ugt i64 %16, 2305843009213693951
  %19 = or i1 %17, %18
  %20 = select i1 %19, i64 2305843009213693951, i64 %16
  ret i64 %20
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr noundef nonnull align 4 dereferenceable(4) %2) #6 comdat align 2 {
  %4 = tail call noundef i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef 1, ptr noundef nonnull @.str.225) #56
  %5 = load ptr, ptr %0, align 8, !tbaa !29
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !70
  %8 = ptrtoint ptr %1 to i64
  %9 = ptrtoint ptr %5 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 2
  %12 = icmp eq i64 %4, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  %14 = tail call noundef ptr @_ZNSt15__new_allocatorIiE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %4, ptr noundef null) #56
  br label %15

15:                                               ; preds = %13, %3
  %16 = phi ptr [ %14, %13 ], [ null, %3 ]
  %17 = getelementptr inbounds i32, ptr %16, i64 %11
  %18 = load i32, ptr %2, align 4, !tbaa !68
  store i32 %18, ptr %17, align 4, !tbaa !68
  %19 = icmp sgt i64 %10, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %16, ptr align 4 %5, i64 %10, i1 false)
  br label %21

21:                                               ; preds = %20, %15
  %22 = getelementptr inbounds i32, ptr %17, i64 1
  %23 = ptrtoint ptr %7 to i64
  %24 = sub i64 %23, %8
  %25 = icmp sgt i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %21
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %22, ptr align 4 %1, i64 %24, i1 false)
  br label %27

27:                                               ; preds = %26, %21
  %28 = icmp eq ptr %5, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %27
  tail call void @_ZdlPv(ptr noundef nonnull %5) #58
  br label %30

30:                                               ; preds = %29, %27
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  %32 = ashr exact i64 %24, 2
  %33 = getelementptr inbounds i32, ptr %22, i64 %32
  store ptr %16, ptr %0, align 8, !tbaa !65
  store ptr %33, ptr %6, align 8, !tbaa !70
  %34 = getelementptr inbounds i32, ptr %16, i64 %4
  store ptr %34, ptr %31, align 8, !tbaa !67
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !107
  %6 = load ptr, ptr %0, align 8, !tbaa !109
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 3
  %11 = sub nsw i64 1152921504606846975, %10
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef %2) #61
  unreachable

14:                                               ; preds = %3
  %15 = tail call i64 @llvm.umax.i64(i64 %10, i64 %1)
  %16 = add i64 %15, %10
  %17 = icmp ult i64 %16, %10
  %18 = icmp ugt i64 %16, 1152921504606846975
  %19 = or i1 %17, %18
  %20 = select i1 %19, i64 1152921504606846975, i64 %16
  ret i64 %20
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef ptr @_ZNSt15__new_allocatorIdE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = icmp ugt i64 %1, 1152921504606846975
  br i1 %4, label %5, label %9, !prof !48

5:                                                ; preds = %3
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #61
  unreachable

8:                                                ; preds = %5
  tail call void @_ZSt17__throw_bad_allocv() #61
  unreachable

9:                                                ; preds = %3
  %10 = shl nuw nsw i64 %1, 3
  %11 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #62
  ret ptr %11
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef ptr @_ZNSt15__new_allocatorIPbE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = icmp ugt i64 %1, 1152921504606846975
  br i1 %4, label %5, label %9, !prof !48

5:                                                ; preds = %3
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #61
  unreachable

8:                                                ; preds = %5
  tail call void @_ZSt17__throw_bad_allocv() #61
  unreachable

9:                                                ; preds = %3
  %10 = shl nuw nsw i64 %1, 3
  %11 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #62
  ret ptr %11
}

; Function Attrs: nounwind optsize uwtable
define available_externally void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef %1) unnamed_addr #10 align 2 personality ptr @__gxx_personality_v0 {
  %3 = load ptr, ptr %1, align 8
  store ptr %3, ptr %0, align 8, !tbaa !51
  %4 = getelementptr inbounds ptr, ptr %1, i64 8
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr i8, ptr %3, i64 -24
  %7 = load i64, ptr %6, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 %7
  store ptr %5, ptr %8, align 8, !tbaa !51
  %9 = getelementptr inbounds ptr, ptr %1, i64 9
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 16
  store ptr %10, ptr %11, align 8, !tbaa !51
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %0, i64 0, i32 1
  store ptr getelementptr inbounds ({ [16 x ptr] }, ptr @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !51
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %0, i64 0, i32 1, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !23
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %0, i64 0, i32 1, i32 2, i32 2
  %16 = icmp eq ptr %14, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %2
  tail call void @_ZdlPv(ptr noundef %14) #58
  br label %18

18:                                               ; preds = %17, %2
  store ptr getelementptr inbounds ({ [16 x ptr] }, ptr @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !51
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %0, i64 0, i32 1, i32 0, i32 7
  tail call void @_ZNSt6localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %19) #59
  %20 = getelementptr inbounds ptr, ptr %1, i64 2
  %21 = load ptr, ptr %20, align 8
  store ptr %21, ptr %0, align 8, !tbaa !51
  %22 = getelementptr inbounds ptr, ptr %1, i64 3
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr i8, ptr %21, i64 -24
  %25 = load i64, ptr %24, align 8
  %26 = getelementptr inbounds i8, ptr %0, i64 %25
  store ptr %23, ptr %26, align 8, !tbaa !51
  %27 = getelementptr inbounds %"class.std::basic_istream", ptr %0, i64 0, i32 1
  store i64 0, ptr %27, align 8, !tbaa !100
  ret void
}

; Function Attrs: optsize uwtable
define available_externally void @_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(ptr noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, ptr noundef nonnull align 8 dereferenceable(104) %1) local_unnamed_addr #6 align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %3, ptr %0, align 8, !tbaa !78
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 0, ptr %4, align 8, !tbaa !49
  store i8 0, ptr %3, align 8, !tbaa !50
  %5 = getelementptr inbounds %"class.std::basic_streambuf", ptr %1, i64 0, i32 5
  %6 = load ptr, ptr %5, align 8, !tbaa !110
  %7 = icmp eq ptr %6, null
  %8 = getelementptr inbounds %"class.std::basic_streambuf", ptr %1, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8
  %10 = icmp ugt ptr %6, %9
  %11 = select i1 %10, ptr %6, ptr %9
  %12 = icmp eq ptr %11, null
  %13 = select i1 %7, i1 true, i1 %12
  br i1 %13, label %27, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::basic_streambuf", ptr %1, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !111
  %17 = ptrtoint ptr %11 to i64
  %18 = ptrtoint ptr %16 to i64
  %19 = sub i64 %17, %18
  %20 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %0, i64 noundef 0, i64 noundef 0, ptr noundef %16, i64 noundef %19) #56
          to label %29 unwind label %21

21:                                               ; preds = %27, %14
  %22 = landingpad { ptr, i32 }
          cleanup
  %23 = load ptr, ptr %0, align 8, !tbaa !23
  %24 = icmp eq ptr %23, %3
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @_ZdlPv(ptr noundef %23) #58
  br label %26

26:                                               ; preds = %25, %21
  resume { ptr, i32 } %22

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_stringbuf", ptr %1, i64 0, i32 2
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %28) #56
          to label %29 unwind label %21

29:                                               ; preds = %27, %14
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define available_externally noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %0, i64 noundef %1, i64 noundef %2, ptr noundef %3, i64 noundef %4) local_unnamed_addr #13 align 2 {
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %7 = load i64, ptr %6, align 8, !tbaa !49
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  tail call void (ptr, ...) @_ZSt24__throw_out_of_range_fmtPKcz(ptr noundef nonnull @.str.222, ptr noundef nonnull @.str.226, i64 noundef %1, i64 noundef %7) #61
  unreachable

10:                                               ; preds = %5
  %11 = sub i64 %7, %1
  %12 = tail call i64 @llvm.umin.i64(i64 %11, i64 %2)
  %13 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %0, i64 noundef %1, i64 noundef %12, ptr noundef %3, i64 noundef %4) #56
  ret ptr %13
}

; Function Attrs: optsize
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef nonnull align 8 dereferenceable(32)) local_unnamed_addr #7

; Function Attrs: noreturn optsize
declare void @_ZSt24__throw_out_of_range_fmtPKcz(ptr noundef, ...) local_unnamed_addr #17

; Function Attrs: optsize
declare noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32), i64 noundef, i64 noundef, ptr noundef, i64 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress optsize uwtable
define internal noundef ptr @_ZNSt15__new_allocatorIPiE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = icmp ugt i64 %1, 1152921504606846975
  br i1 %4, label %5, label %9, !prof !48

5:                                                ; preds = %3
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #61
  unreachable

8:                                                ; preds = %5
  tail call void @_ZSt17__throw_bad_allocv() #61
  unreachable

9:                                                ; preds = %3
  %10 = shl nuw nsw i64 %1, 3
  %11 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #62
  ret ptr %11
}

; Function Attrs: mustprogress optsize uwtable
define available_externally noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #13 align 2 {
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  %5 = load i64, ptr %4, align 8, !tbaa !49
  %6 = sub i64 4611686018427387903, %5
  %7 = icmp ult i64 %6, %2
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.228) #61
  unreachable

9:                                                ; preds = %3
  %10 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i64 noundef %2) #56
  ret ptr %10
}

; Function Attrs: optsize
declare noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef, i64 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: write) uwtable
define internal void @_ZN2PP4CommC2Ev(ptr nocapture noundef nonnull writeonly align 4 dereferenceable(16) %0) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.PP::Comm", ptr %0, i64 0, i32 1
  store i32 1, ptr %2, align 4, !tbaa !112
  %3 = getelementptr inbounds %"class.PP::Comm", ptr %0, i64 0, i32 2
  store i32 0, ptr %3, align 4, !tbaa !114
  %4 = getelementptr inbounds %"class.PP::Comm", ptr %0, i64 0, i32 3
  store i32 0, ptr %4, align 4, !tbaa !115
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(none) uwtable
define internal void @_ZN2PP4CommD2Ev(ptr nocapture nonnull align 4 %0) unnamed_addr #26 align 2 {
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_GLOBAL__sub_I_Function.cc() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit.2) #56
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit.2, ptr nonnull @__dso_handle) #57
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZN2PP8FunctionC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %0, ptr noundef nonnull %1, i1 noundef zeroext %2, i32 noundef %3, ptr noundef %4, ptr noundef %5) unnamed_addr #6 align 2 personality ptr @__gxx_personality_v0 {
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %7, ptr %0, align 8, !tbaa !78
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 0, ptr %8, align 8, !tbaa !49
  store i8 0, ptr %7, align 8, !tbaa !50
  %9 = getelementptr inbounds %"class.PP::Function", ptr %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.PP::Function", ptr %0, i64 0, i32 3, i32 2
  store ptr %10, ptr %9, align 8, !tbaa !78
  %11 = getelementptr inbounds %"class.PP::Function", ptr %0, i64 0, i32 3, i32 1
  store i64 0, ptr %11, align 8, !tbaa !49
  store i8 0, ptr %10, align 8, !tbaa !50
  %12 = getelementptr inbounds %"class.PP::Function", ptr %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.PP::Function", ptr %0, i64 0, i32 4, i32 2
  store ptr %13, ptr %12, align 8, !tbaa !78
  %14 = getelementptr inbounds %"class.PP::Function", ptr %0, i64 0, i32 4, i32 1
  store i64 0, ptr %14, align 8, !tbaa !49
  store i8 0, ptr %13, align 8, !tbaa !50
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) #56
          to label %15 unwind label %21

15:                                               ; preds = %6
  %16 = zext i1 %2 to i8
  %17 = getelementptr inbounds %"class.PP::Function", ptr %0, i64 0, i32 1
  store i8 %16, ptr %17, align 8, !tbaa !116
  %18 = getelementptr inbounds %"class.PP::Function", ptr %0, i64 0, i32 2
  store i32 %3, ptr %18, align 4, !tbaa !118
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %9, ptr noundef nonnull align 8 dereferenceable(32) %5) #56
          to label %19 unwind label %21

19:                                               ; preds = %15
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef nonnull align 8 dereferenceable(32) %4) #56
          to label %20 unwind label %21

20:                                               ; preds = %19
  ret void

21:                                               ; preds = %19, %15, %6
  %22 = landingpad { ptr, i32 }
          cleanup
  %23 = load ptr, ptr %12, align 8, !tbaa !23
  %24 = icmp eq ptr %23, %13
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @_ZdlPv(ptr noundef %23) #58
  br label %26

26:                                               ; preds = %25, %21
  %27 = load ptr, ptr %9, align 8, !tbaa !23
  %28 = icmp eq ptr %27, %10
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  tail call void @_ZdlPv(ptr noundef %27) #58
  br label %30

30:                                               ; preds = %29, %26
  %31 = load ptr, ptr %0, align 8, !tbaa !23
  %32 = icmp eq ptr %31, %7
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  tail call void @_ZdlPv(ptr noundef %31) #58
  br label %34

34:                                               ; preds = %33, %30
  resume { ptr, i32 } %22
}

; Function Attrs: optsize uwtable
define weak_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_(ptr noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %2) #6 comdat personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %4, ptr %0, align 8, !tbaa !78
  %5 = load ptr, ptr %1, align 8, !tbaa !23
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %7 = load i64, ptr %6, align 8, !tbaa !49
  %8 = getelementptr inbounds i8, ptr %5, i64 %7
  tail call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %5, ptr noundef %8) #56
  %9 = load ptr, ptr %2, align 8, !tbaa !23
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %11 = load i64, ptr %10, align 8, !tbaa !49
  %12 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %9, i64 noundef %11) #56
          to label %19 unwind label %13

13:                                               ; preds = %3
  %14 = landingpad { ptr, i32 }
          cleanup
  %15 = load ptr, ptr %0, align 8, !tbaa !23
  %16 = icmp eq ptr %15, %4
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZdlPv(ptr noundef %15) #58
  br label %18

18:                                               ; preds = %17, %13
  resume { ptr, i32 } %14

19:                                               ; preds = %3
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @KDTree_Initialize(ptr noundef %0) #10 {
  tail call void @Bounds_Infinite(ptr noundef %0) #59
  %2 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 1
  store i32 0, ptr %2, align 8, !tbaa !119
  %3 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 2
  store i32 1024, ptr %3, align 4, !tbaa !124
  %4 = tail call noalias dereferenceable_or_null(32768) ptr @malloc(i64 noundef 32768) #65
  %5 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 3
  store ptr %4, ptr %5, align 8, !tbaa !125
  %6 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 4
  store i8 0, ptr %6, align 8, !tbaa !126
  %7 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 5
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %7, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #27

; Function Attrs: nounwind optsize uwtable
define internal void @KDTree_Destroy(ptr noundef %0) #10 {
  tail call void @Bounds_Infinite(ptr noundef %0) #59
  %2 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 1
  store i32 0, ptr %2, align 8, !tbaa !119
  %3 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 2
  store i32 0, ptr %3, align 4, !tbaa !124
  %4 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !125
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void @free(ptr noundef nonnull %5) #59
  br label %8

8:                                                ; preds = %7, %1
  store ptr null, ptr %4, align 8, !tbaa !125
  %9 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 4
  store i8 0, ptr %9, align 8, !tbaa !126
  %10 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 5
  store i32 0, ptr %10, align 4, !tbaa !127
  %11 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 6
  %12 = load ptr, ptr %11, align 8, !tbaa !128
  %13 = icmp eq ptr %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %8
  tail call void @free(ptr noundef nonnull %12) #59
  br label %15

15:                                               ; preds = %14, %8
  store ptr null, ptr %11, align 8, !tbaa !128
  %16 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 7
  %17 = load ptr, ptr %16, align 8, !tbaa !129
  %18 = icmp eq ptr %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @free(ptr noundef nonnull %17) #59
  br label %20

20:                                               ; preds = %19, %15
  store ptr null, ptr %16, align 8, !tbaa !129
  ret void
}

; Function Attrs: mustprogress nounwind optsize willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #28

; Function Attrs: nounwind optsize uwtable
define internal void @KDTree_AddElement(ptr noundef %0, ptr noundef %1) #10 {
  %3 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 4
  %4 = load i8, ptr %3, align 8, !tbaa !126, !range !130, !noundef !131
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  store i8 0, ptr %3, align 8, !tbaa !126
  %7 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 5
  store i32 0, ptr %7, align 4, !tbaa !127
  %8 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 6
  %9 = load ptr, ptr %8, align 8, !tbaa !128
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call void @free(ptr noundef nonnull %9) #59
  br label %12

12:                                               ; preds = %11, %6
  store ptr null, ptr %8, align 8, !tbaa !128
  %13 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 7
  %14 = load ptr, ptr %13, align 8, !tbaa !129
  %15 = icmp eq ptr %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @free(ptr noundef nonnull %14) #59
  br label %17

17:                                               ; preds = %16, %12
  store ptr null, ptr %13, align 8, !tbaa !129
  br label %18

18:                                               ; preds = %17, %2
  %19 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 1
  %20 = load i32, ptr %19, align 8, !tbaa !119
  %21 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 2
  %22 = load i32, ptr %21, align 4, !tbaa !124
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %31

24:                                               ; preds = %18
  %25 = add i32 %20, 1024
  store i32 %25, ptr %21, align 4, !tbaa !124
  %26 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8, !tbaa !125
  %28 = sext i32 %25 to i64
  %29 = shl nsw i64 %28, 5
  %30 = tail call ptr @realloc(ptr noundef %27, i64 noundef %29) #66
  store ptr %30, ptr %26, align 8, !tbaa !125
  br label %31

31:                                               ; preds = %24, %18
  tail call void @Bounds_AddBounds(ptr noundef nonnull %0, ptr noundef %1) #59
  %32 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !125
  %34 = load i32, ptr %19, align 8, !tbaa !119
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.TBounds, ptr %33, i64 %35
  tail call void @Bounds_Copy(ptr noundef %1, ptr noundef %36) #59
  %37 = load i32, ptr %19, align 8, !tbaa !119
  %38 = add nsw i32 %37, 1
  store i32 %38, ptr %19, align 8, !tbaa !119
  ret void
}

; Function Attrs: mustprogress nounwind optsize willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite)
declare noalias noundef ptr @realloc(ptr allocptr nocapture noundef, i64 noundef) local_unnamed_addr #29

; Function Attrs: nounwind optsize uwtable
define internal void @KDTree_CreateTree(ptr noundef %0) #10 {
  %2 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 4
  %3 = load i8, ptr %2, align 8, !tbaa !126, !range !130, !noundef !131
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %306

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !119
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %305

9:                                                ; preds = %5
  %10 = shl nuw nsw i32 %7, 1
  %11 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 5
  store i32 %10, ptr %11, align 4, !tbaa !127
  %12 = zext i32 %10 to i64
  %13 = shl nuw nsw i64 %12, 5
  %14 = tail call noalias ptr @malloc(i64 noundef %13) #65
  %15 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 6
  store ptr %14, ptr %15, align 8, !tbaa !128
  %16 = shl nuw nsw i64 %12, 2
  %17 = tail call noalias ptr @malloc(i64 noundef %16) #65
  %18 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 7
  store ptr %17, ptr %18, align 8, !tbaa !129
  %19 = mul nsw i32 %7, 6
  %20 = sext i32 %19 to i64
  %21 = shl nsw i64 %20, 2
  %22 = tail call noalias ptr @malloc(i64 noundef %21) #65
  %23 = zext i32 %7 to i64
  %24 = shl nuw nsw i64 %23, 2
  %25 = tail call noalias ptr @malloc(i64 noundef %24) #65
  %26 = add nuw nsw i64 %23, 3
  %27 = and i64 %26, 8589934588
  %28 = add nsw i64 %23, -1
  %29 = insertelement <4 x i64> poison, i64 %28, i64 0
  %30 = shufflevector <4 x i64> %29, <4 x i64> poison, <4 x i32> zeroinitializer
  br label %31

31:                                               ; preds = %57, %9
  %32 = phi i64 [ 0, %9 ], [ %58, %57 ]
  %33 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %9 ], [ %59, %57 ]
  %34 = trunc i64 %32 to i32
  %35 = icmp ule <4 x i64> %33, %30
  %36 = extractelement <4 x i1> %35, i64 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = getelementptr inbounds i32, ptr %25, i64 %32
  store i32 %34, ptr %38, align 4, !tbaa !132
  br label %39

39:                                               ; preds = %37, %31
  %40 = extractelement <4 x i1> %35, i64 1
  br i1 %40, label %41, label %45

41:                                               ; preds = %39
  %42 = or i64 %32, 1
  %43 = getelementptr inbounds i32, ptr %25, i64 %42
  %44 = or i32 %34, 1
  store i32 %44, ptr %43, align 4, !tbaa !132
  br label %45

45:                                               ; preds = %41, %39
  %46 = extractelement <4 x i1> %35, i64 2
  br i1 %46, label %47, label %51

47:                                               ; preds = %45
  %48 = or i64 %32, 2
  %49 = getelementptr inbounds i32, ptr %25, i64 %48
  %50 = or i32 %34, 2
  store i32 %50, ptr %49, align 4, !tbaa !132
  br label %51

51:                                               ; preds = %47, %45
  %52 = extractelement <4 x i1> %35, i64 3
  br i1 %52, label %53, label %57

53:                                               ; preds = %51
  %54 = or i64 %32, 3
  %55 = getelementptr inbounds i32, ptr %25, i64 %54
  %56 = or i32 %34, 3
  store i32 %56, ptr %55, align 4, !tbaa !132
  br label %57

57:                                               ; preds = %53, %51
  %58 = add i64 %32, 4
  %59 = add <4 x i64> %33, <i64 4, i64 4, i64 4, i64 4>
  %60 = icmp eq i64 %58, %27
  br i1 %60, label %61, label %31, !llvm.loop !133

61:                                               ; preds = %57
  store i32 0, ptr %22, align 4, !tbaa !132
  %62 = getelementptr inbounds i32, ptr %22, i64 1
  store i32 0, ptr %62, align 4, !tbaa !132
  %63 = add nsw i32 %7, -1
  %64 = getelementptr inbounds i32, ptr %22, i64 2
  store i32 %63, ptr %64, align 4, !tbaa !132
  tail call void @Bounds_Copy(ptr noundef %0, ptr noundef %14) #59
  %65 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 3
  br label %66

66:                                               ; preds = %299, %61
  %67 = phi i64 [ 1, %61 ], [ %300, %299 ]
  %68 = phi i32 [ 3, %61 ], [ %278, %299 ]
  %69 = sext i32 %68 to i64
  br label %70

70:                                               ; preds = %87, %66
  %71 = phi i64 [ %69, %66 ], [ %78, %87 ]
  %72 = add nsw i64 %71, -1
  %73 = getelementptr inbounds i32, ptr %22, i64 %72
  %74 = load i32, ptr %73, align 4, !tbaa !132
  %75 = add nsw i64 %71, -2
  %76 = getelementptr inbounds i32, ptr %22, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !132
  %78 = add nsw i64 %71, -3
  %79 = getelementptr inbounds i32, ptr %22, i64 %78
  %80 = load i32, ptr %79, align 4, !tbaa !132
  %81 = icmp eq i32 %74, %77
  br i1 %81, label %87, label %82

82:                                               ; preds = %70
  %.lcssa10 = phi i64 [ %71, %70 ]
  %.lcssa8 = phi i64 [ %72, %70 ]
  %.lcssa6 = phi i32 [ %74, %70 ]
  %.lcssa4 = phi i32 [ %77, %70 ]
  %.lcssa2 = phi i64 [ %78, %70 ]
  %.lcssa = phi i32 [ %80, %70 ]
  %83 = getelementptr inbounds i32, ptr %22, i64 %.lcssa8
  %84 = getelementptr inbounds i32, ptr %22, i64 %.lcssa2
  %85 = trunc i64 %.lcssa10 to i32
  %86 = sext i32 %.lcssa to i64
  br label %102

87:                                               ; preds = %70
  %88 = load ptr, ptr %65, align 8, !tbaa !125
  %89 = sext i32 %74 to i64
  %90 = getelementptr inbounds i32, ptr %25, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !132
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %struct.TBounds, ptr %88, i64 %92
  %94 = load ptr, ptr %15, align 8, !tbaa !128
  %95 = sext i32 %80 to i64
  %96 = getelementptr inbounds %struct.TBounds, ptr %94, i64 %95
  tail call void @Bounds_Copy(ptr noundef %93, ptr noundef %96) #59
  %97 = sub nsw i32 0, %91
  %98 = load ptr, ptr %18, align 8, !tbaa !129
  %99 = getelementptr inbounds i32, ptr %98, i64 %95
  store i32 %97, ptr %99, align 4, !tbaa !132
  %100 = icmp eq i64 %78, 0
  br i1 %100, label %101, label %70, !llvm.loop !136

101:                                              ; preds = %87
  tail call void @free(ptr noundef nonnull %22) #59
  br label %304

102:                                              ; preds = %102, %82
  %103 = phi i1 [ true, %82 ], [ false, %102 ]
  %104 = phi i32 [ 0, %82 ], [ 1, %102 ]
  %105 = phi double [ -1.000000e+64, %82 ], [ %112, %102 ]
  %106 = phi i32 [ -1, %82 ], [ %111, %102 ]
  %107 = load ptr, ptr %15, align 8, !tbaa !128
  %108 = getelementptr inbounds %struct.TBounds, ptr %107, i64 %86
  %109 = tail call double @Bounds_WidthAxis(ptr noundef %108, i32 noundef %104) #59
  %110 = fcmp ogt double %109, %105
  %111 = select i1 %110, i32 %104, i32 %106
  %112 = select i1 %110, double %109, double %105
  br i1 %103, label %102, label %113, !llvm.loop !137

113:                                              ; preds = %102
  %.lcssa12 = phi i32 [ %111, %102 ]
  %114 = sub nsw i32 %.lcssa6, %.lcssa4
  %115 = add nsw i32 %.lcssa4, %.lcssa6
  %116 = sdiv i32 %115, 2
  %117 = sub nsw i32 %116, %.lcssa4
  %118 = sext i32 %.lcssa4 to i64
  %119 = getelementptr inbounds i32, ptr %25, i64 %118
  %120 = icmp sgt i32 %114, 1
  br i1 %120, label %121, label %227

121:                                              ; preds = %217, %113
  %122 = phi i32 [ %222, %217 ], [ 0, %113 ]
  %123 = phi i32 [ %220, %217 ], [ %114, %113 ]
  %124 = add nsw i32 %123, %122
  %125 = sdiv i32 %124, 2
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i32, ptr %119, i64 %126
  %128 = load i32, ptr %127, align 4, !tbaa !132
  %129 = add nsw i32 %122, 1
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i32, ptr %119, i64 %130
  %132 = load i32, ptr %131, align 4, !tbaa !132
  store i32 %132, ptr %127, align 4, !tbaa !132
  store i32 %128, ptr %131, align 4, !tbaa !132
  %133 = load ptr, ptr %65, align 8, !tbaa !125
  %134 = sext i32 %128 to i64
  %135 = getelementptr inbounds %struct.TBounds, ptr %133, i64 %134
  %136 = tail call double @Bounds_CenterAxis(ptr noundef %135, i32 noundef %.lcssa12) #59
  %137 = load ptr, ptr %65, align 8, !tbaa !125
  %138 = sext i32 %123 to i64
  %139 = getelementptr inbounds i32, ptr %119, i64 %138
  %140 = load i32, ptr %139, align 4, !tbaa !132
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds %struct.TBounds, ptr %137, i64 %141
  %143 = tail call double @Bounds_CenterAxis(ptr noundef %142, i32 noundef %.lcssa12) #59
  %144 = fcmp ogt double %136, %143
  br i1 %144, label %145, label %146

145:                                              ; preds = %121
  store i32 %140, ptr %131, align 4, !tbaa !132
  store i32 %128, ptr %139, align 4, !tbaa !132
  br label %146

146:                                              ; preds = %145, %121
  %147 = phi i64 [ %134, %145 ], [ %141, %121 ]
  %148 = phi i32 [ %128, %145 ], [ %140, %121 ]
  %149 = load ptr, ptr %65, align 8, !tbaa !125
  %150 = sext i32 %122 to i64
  %151 = getelementptr inbounds i32, ptr %119, i64 %150
  %152 = load i32, ptr %151, align 4, !tbaa !132
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds %struct.TBounds, ptr %149, i64 %153
  %155 = tail call double @Bounds_CenterAxis(ptr noundef %154, i32 noundef %.lcssa12) #59
  %156 = load ptr, ptr %65, align 8, !tbaa !125
  %157 = getelementptr inbounds %struct.TBounds, ptr %156, i64 %147
  %158 = tail call double @Bounds_CenterAxis(ptr noundef %157, i32 noundef %.lcssa12) #59
  %159 = fcmp ogt double %155, %158
  br i1 %159, label %160, label %161

160:                                              ; preds = %146
  store i32 %148, ptr %151, align 4, !tbaa !132
  store i32 %152, ptr %139, align 4, !tbaa !132
  br label %161

161:                                              ; preds = %160, %146
  %162 = load ptr, ptr %65, align 8, !tbaa !125
  %163 = load i32, ptr %131, align 4, !tbaa !132
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds %struct.TBounds, ptr %162, i64 %164
  %166 = tail call double @Bounds_CenterAxis(ptr noundef %165, i32 noundef %.lcssa12) #59
  %167 = load ptr, ptr %65, align 8, !tbaa !125
  %168 = load i32, ptr %151, align 4, !tbaa !132
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds %struct.TBounds, ptr %167, i64 %169
  %171 = tail call double @Bounds_CenterAxis(ptr noundef %170, i32 noundef %.lcssa12) #59
  %172 = fcmp ogt double %166, %171
  br i1 %172, label %173, label %174

173:                                              ; preds = %161
  store i32 %168, ptr %131, align 4, !tbaa !132
  store i32 %163, ptr %151, align 4, !tbaa !132
  br label %174

174:                                              ; preds = %173, %161
  %175 = phi i64 [ %164, %173 ], [ %169, %161 ]
  %176 = phi i32 [ %163, %173 ], [ %168, %161 ]
  br label %177

177:                                              ; preds = %216, %174
  %178 = phi i32 [ %123, %174 ], [ %214, %216 ]
  %179 = phi i32 [ %129, %174 ], [ %212, %216 ]
  %180 = sext i32 %179 to i64
  br label %181

181:                                              ; preds = %181, %177
  %182 = phi i64 [ %183, %181 ], [ %180, %177 ]
  %183 = add nsw i64 %182, 1
  %184 = load ptr, ptr %65, align 8, !tbaa !125
  %185 = getelementptr inbounds i32, ptr %119, i64 %183
  %186 = load i32, ptr %185, align 4, !tbaa !132
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds %struct.TBounds, ptr %184, i64 %187
  %189 = tail call double @Bounds_CenterAxis(ptr noundef %188, i32 noundef %.lcssa12) #59
  %190 = load ptr, ptr %65, align 8, !tbaa !125
  %191 = getelementptr inbounds %struct.TBounds, ptr %190, i64 %175
  %192 = tail call double @Bounds_CenterAxis(ptr noundef %191, i32 noundef %.lcssa12) #59
  %193 = fcmp olt double %189, %192
  br i1 %193, label %181, label %194, !llvm.loop !138

194:                                              ; preds = %181
  %.lcssa14 = phi i64 [ %183, %181 ]
  %.lcssa13 = phi i32 [ %186, %181 ]
  %195 = getelementptr inbounds i32, ptr %119, i64 %.lcssa14
  %196 = sext i32 %178 to i64
  br label %197

197:                                              ; preds = %197, %194
  %198 = phi i64 [ %196, %194 ], [ %199, %197 ]
  %199 = add i64 %198, -1
  %200 = load ptr, ptr %65, align 8, !tbaa !125
  %201 = getelementptr inbounds i32, ptr %119, i64 %199
  %202 = load i32, ptr %201, align 4, !tbaa !132
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %struct.TBounds, ptr %200, i64 %203
  %205 = tail call double @Bounds_CenterAxis(ptr noundef %204, i32 noundef %.lcssa12) #59
  %206 = load ptr, ptr %65, align 8, !tbaa !125
  %207 = getelementptr inbounds %struct.TBounds, ptr %206, i64 %175
  %208 = tail call double @Bounds_CenterAxis(ptr noundef %207, i32 noundef %.lcssa12) #59
  %209 = fcmp ogt double %205, %208
  br i1 %209, label %197, label %210, !llvm.loop !139

210:                                              ; preds = %197
  %.lcssa17 = phi i64 [ %198, %197 ]
  %.lcssa16 = phi i64 [ %199, %197 ]
  %.lcssa15 = phi i32 [ %202, %197 ]
  %211 = getelementptr inbounds i32, ptr %119, i64 %.lcssa16
  %212 = trunc i64 %.lcssa14 to i32
  %213 = trunc i64 %.lcssa17 to i32
  %214 = trunc i64 %.lcssa16 to i32
  %215 = icmp sgt i32 %213, %212
  br i1 %215, label %216, label %217

216:                                              ; preds = %210
  store i32 %.lcssa15, ptr %195, align 4, !tbaa !132
  store i32 %.lcssa13, ptr %211, align 4, !tbaa !132
  br label %177

217:                                              ; preds = %210
  %.lcssa21 = phi ptr [ %211, %210 ]
  %.lcssa20 = phi i32 [ %212, %210 ]
  %.lcssa19 = phi i32 [ %213, %210 ]
  %.lcssa18 = phi i32 [ %214, %210 ]
  %.lcssa15.lcssa = phi i32 [ %.lcssa15, %210 ]
  store i32 %.lcssa15.lcssa, ptr %151, align 4, !tbaa !132
  store i32 %176, ptr %.lcssa21, align 4, !tbaa !132
  %218 = icmp slt i32 %117, %.lcssa19
  %219 = add nsw i32 %.lcssa19, -2
  %220 = select i1 %218, i32 %219, i32 %123
  %221 = icmp slt i32 %117, %.lcssa18
  %222 = select i1 %221, i32 %122, i32 %.lcssa20
  %223 = sub nsw i32 %220, %222
  %224 = icmp sgt i32 %223, 1
  br i1 %224, label %121, label %225, !llvm.loop !140

225:                                              ; preds = %217
  %.lcssa24 = phi i32 [ %220, %217 ]
  %.lcssa23 = phi i32 [ %222, %217 ]
  %.lcssa22 = phi i32 [ %223, %217 ]
  %226 = sext i32 %.lcssa23 to i64
  br label %227

227:                                              ; preds = %225, %113
  %228 = phi i32 [ %114, %113 ], [ %.lcssa24, %225 ]
  %229 = phi i64 [ 0, %113 ], [ %226, %225 ]
  %230 = phi i32 [ %114, %113 ], [ %.lcssa22, %225 ]
  %231 = icmp eq i32 %230, 1
  br i1 %231, label %232, label %248

232:                                              ; preds = %227
  %233 = load ptr, ptr %65, align 8, !tbaa !125
  %234 = sext i32 %228 to i64
  %235 = getelementptr inbounds i32, ptr %119, i64 %234
  %236 = load i32, ptr %235, align 4, !tbaa !132
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds %struct.TBounds, ptr %233, i64 %237
  %239 = tail call double @Bounds_CenterAxis(ptr noundef %238, i32 noundef %.lcssa12) #59
  %240 = load ptr, ptr %65, align 8, !tbaa !125
  %241 = getelementptr inbounds i32, ptr %119, i64 %229
  %242 = load i32, ptr %241, align 4, !tbaa !132
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds %struct.TBounds, ptr %240, i64 %243
  %245 = tail call double @Bounds_CenterAxis(ptr noundef %244, i32 noundef %.lcssa12) #59
  %246 = fcmp olt double %239, %245
  br i1 %246, label %247, label %248

247:                                              ; preds = %232
  store i32 %242, ptr %235, align 4, !tbaa !132
  store i32 %236, ptr %241, align 4, !tbaa !132
  br label %248

248:                                              ; preds = %247, %232, %227
  %249 = load ptr, ptr %18, align 8, !tbaa !129
  %250 = getelementptr inbounds i32, ptr %249, i64 %86
  %251 = trunc i64 %67 to i32
  store i32 %251, ptr %250, align 4, !tbaa !132
  store i32 %251, ptr %84, align 4, !tbaa !132
  store i32 %116, ptr %83, align 4, !tbaa !132
  %252 = load ptr, ptr %15, align 8, !tbaa !128
  %253 = getelementptr inbounds %struct.TBounds, ptr %252, i64 %67
  tail call void @Bounds_Infinite(ptr noundef nonnull %253) #59
  %254 = icmp sgt i32 %.lcssa4, %116
  br i1 %254, label %267, label %255

255:                                              ; preds = %255, %248
  %256 = phi i32 [ %265, %255 ], [ %.lcssa4, %248 ]
  %257 = load ptr, ptr %15, align 8, !tbaa !128
  %258 = getelementptr inbounds %struct.TBounds, ptr %257, i64 %67
  %259 = load ptr, ptr %65, align 8, !tbaa !125
  %260 = zext i32 %256 to i64
  %261 = getelementptr inbounds i32, ptr %25, i64 %260
  %262 = load i32, ptr %261, align 4, !tbaa !132
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds %struct.TBounds, ptr %259, i64 %263
  tail call void @Bounds_AddBounds(ptr noundef nonnull %258, ptr noundef %264) #59
  %265 = add i32 %256, 1
  %266 = icmp eq i32 %256, %116
  br i1 %266, label %267, label %255, !llvm.loop !141

267:                                              ; preds = %255, %248
  %268 = add nsw i32 %116, 1
  %269 = add nuw nsw i64 %67, 1
  %270 = shl i64 %.lcssa10, 32
  %271 = ashr exact i64 %270, 32
  %272 = getelementptr inbounds i32, ptr %22, i64 %271
  %273 = trunc i64 %269 to i32
  store i32 %273, ptr %272, align 4, !tbaa !132
  %274 = shl i64 %.lcssa10, 32
  %275 = add i64 %274, 4294967296
  %276 = ashr exact i64 %275, 32
  %277 = getelementptr inbounds i32, ptr %22, i64 %276
  store i32 %268, ptr %277, align 4, !tbaa !132
  %278 = add nsw i32 %85, 3
  %279 = shl i64 %.lcssa10, 32
  %280 = add i64 %279, 8589934592
  %281 = ashr exact i64 %280, 32
  %282 = getelementptr inbounds i32, ptr %22, i64 %281
  store i32 %.lcssa6, ptr %282, align 4, !tbaa !132
  %283 = load ptr, ptr %15, align 8, !tbaa !128
  %284 = getelementptr inbounds %struct.TBounds, ptr %283, i64 %269
  tail call void @Bounds_Infinite(ptr noundef nonnull %284) #59
  %285 = add i32 %.lcssa4, 1
  %286 = icmp sgt i32 %285, %.lcssa6
  br i1 %286, label %299, label %287

287:                                              ; preds = %287, %267
  %288 = phi i32 [ %297, %287 ], [ %285, %267 ]
  %289 = load ptr, ptr %15, align 8, !tbaa !128
  %290 = getelementptr inbounds %struct.TBounds, ptr %289, i64 %269
  %291 = load ptr, ptr %65, align 8, !tbaa !125
  %292 = zext i32 %288 to i64
  %293 = getelementptr inbounds i32, ptr %25, i64 %292
  %294 = load i32, ptr %293, align 4, !tbaa !132
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds %struct.TBounds, ptr %291, i64 %295
  tail call void @Bounds_AddBounds(ptr noundef nonnull %290, ptr noundef %296) #59
  %297 = add i32 %288, 1
  %298 = icmp sgt i32 %297, %.lcssa6
  br i1 %298, label %299, label %287, !llvm.loop !142

299:                                              ; preds = %287, %267
  %300 = add nuw i64 %67, 2
  %301 = icmp eq i32 %278, 0
  br i1 %301, label %302, label %66, !llvm.loop !136

302:                                              ; preds = %299
  tail call void @free(ptr noundef %22) #59
  %303 = icmp eq ptr %25, null
  br i1 %303, label %305, label %304

304:                                              ; preds = %302, %101
  tail call void @free(ptr noundef nonnull %25) #59
  br label %305

305:                                              ; preds = %304, %302, %5
  store i8 1, ptr %2, align 8, !tbaa !126
  br label %306

306:                                              ; preds = %305, %1
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @KDTree_QueryBoxIntersect(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef writeonly %2, ptr noundef %3) #10 {
  %5 = alloca %struct.TBounds, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #57
  %6 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 4
  %7 = load i8, ptr %6, align 8, !tbaa !126, !range !130, !noundef !131
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void @KDTree_CreateTree(ptr noundef nonnull %0) #56
  br label %10

10:                                               ; preds = %9, %4
  store i32 0, ptr %1, align 4, !tbaa !132
  %11 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 5
  %12 = load i32, ptr %11, align 4, !tbaa !127
  %13 = sext i32 %12 to i64
  %14 = shl nsw i64 %13, 2
  %15 = tail call noalias ptr @malloc(i64 noundef %14) #65
  store i32 0, ptr %15, align 4, !tbaa !132
  %16 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 6
  %17 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 7
  br label %18

18:                                               ; preds = %45, %10
  %19 = phi i32 [ 1, %10 ], [ %46, %45 ]
  %20 = add nsw i32 %19, -1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, ptr %15, i64 %21
  %23 = load i32, ptr %22, align 4, !tbaa !132
  %24 = load ptr, ptr %16, align 8, !tbaa !128
  %25 = sext i32 %23 to i64
  %26 = getelementptr inbounds %struct.TBounds, ptr %24, i64 %25
  call void @Bounds_Copy(ptr noundef %26, ptr noundef nonnull %5) #59
  %27 = call zeroext i1 @Bounds_IsOverlappingBounds(ptr noundef nonnull %5, ptr noundef %3) #59
  br i1 %27, label %28, label %45

28:                                               ; preds = %18
  %29 = load ptr, ptr %17, align 8, !tbaa !129
  %30 = getelementptr inbounds i32, ptr %29, i64 %25
  %31 = load i32, ptr %30, align 4, !tbaa !132
  %32 = icmp slt i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = sub nsw i32 0, %31
  %35 = load i32, ptr %1, align 4, !tbaa !132
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i32, ptr %2, i64 %36
  store i32 %34, ptr %37, align 4, !tbaa !132
  %38 = load i32, ptr %1, align 4, !tbaa !132
  %39 = add nsw i32 %38, 1
  store i32 %39, ptr %1, align 4, !tbaa !132
  br label %45

40:                                               ; preds = %28
  store i32 %31, ptr %22, align 4, !tbaa !132
  %41 = add nuw nsw i32 %31, 1
  %42 = add nsw i32 %19, 1
  %43 = sext i32 %19 to i64
  %44 = getelementptr inbounds i32, ptr %15, i64 %43
  store i32 %41, ptr %44, align 4, !tbaa !132
  br label %45

45:                                               ; preds = %40, %33, %18
  %46 = phi i32 [ %20, %18 ], [ %20, %33 ], [ %42, %40 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %18, !llvm.loop !143

48:                                               ; preds = %45
  call void @free(ptr noundef nonnull %15) #59
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #57
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @KDTree_QueryCircleIntersect_Double(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef writeonly %2, double noundef %3, i32 noundef %4, ptr nocapture noundef readonly %5, ptr nocapture noundef readonly %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8) #10 {
  %10 = alloca i32, align 4
  %11 = alloca %struct.TBounds, align 8
  %12 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 4
  %13 = load i8, ptr %12, align 8, !tbaa !126, !range !130, !noundef !131
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  tail call void @KDTree_CreateTree(ptr noundef nonnull %0) #56
  br label %16

16:                                               ; preds = %15, %9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #57
  %17 = sext i32 %4 to i64
  %18 = shl nsw i64 %17, 2
  %19 = tail call noalias ptr @malloc(i64 noundef %18) #65
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %11) #57
  %20 = fneg double %3
  store double %20, ptr %11, align 8, !tbaa !14
  %21 = getelementptr inbounds %struct.TBounds, ptr %11, i64 0, i32 1
  store double %3, ptr %21, align 8, !tbaa !11
  %22 = getelementptr inbounds %struct.TVector, ptr %11, i64 0, i32 1
  store double %20, ptr %22, align 8, !tbaa !16
  %23 = getelementptr inbounds %struct.TBounds, ptr %11, i64 0, i32 1, i32 1
  store double %3, ptr %23, align 8, !tbaa !15
  call void @KDTree_QueryBoxIntersect(ptr noundef nonnull %0, ptr noundef nonnull %10, ptr noundef %19, ptr noundef nonnull %11) #56
  store i32 0, ptr %1, align 4, !tbaa !132
  %24 = load i32, ptr %10, align 4, !tbaa !132
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %16
  %27 = zext i32 %24 to i64
  br label %29

28:                                               ; preds = %85, %16
  call void @free(ptr noundef %19) #59
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #57
  ret void

29:                                               ; preds = %85, %26
  %30 = phi i32 [ 0, %26 ], [ %86, %85 ]
  %31 = phi i64 [ 0, %26 ], [ %87, %85 ]
  %32 = getelementptr inbounds i32, ptr %19, i64 %31
  %33 = load i32, ptr %32, align 4, !tbaa !132
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds double, ptr %5, i64 %34
  %36 = load double, ptr %35, align 8, !tbaa !7
  %37 = fmul double %36, %36
  %38 = getelementptr inbounds double, ptr %7, i64 %34
  %39 = load double, ptr %38, align 8, !tbaa !7
  %40 = fmul double %39, %39
  %41 = fadd double %37, %40
  %42 = call double @llvm.sqrt.f64(double %41)
  %43 = getelementptr inbounds double, ptr %6, i64 %34
  %44 = load double, ptr %43, align 8, !tbaa !7
  %45 = fadd double %36, %44
  %46 = fmul double %45, %45
  %47 = fadd double %46, %40
  %48 = call double @llvm.sqrt.f64(double %47)
  %49 = getelementptr inbounds double, ptr %8, i64 %34
  %50 = load double, ptr %49, align 8, !tbaa !7
  %51 = fadd double %39, %50
  %52 = fmul double %51, %51
  %53 = fadd double %46, %52
  %54 = call double @llvm.sqrt.f64(double %53)
  %55 = fadd double %37, %52
  %56 = call double @llvm.sqrt.f64(double %55)
  %57 = fcmp ogt double %42, %3
  %58 = fcmp olt double %48, %3
  %59 = select i1 %57, i1 %58, i1 false
  br i1 %59, label %80, label %60

60:                                               ; preds = %29
  %61 = fcmp olt double %42, %3
  %62 = fcmp ogt double %48, %3
  %63 = select i1 %61, i1 %62, i1 false
  br i1 %63, label %80, label %64

64:                                               ; preds = %60
  %65 = fcmp olt double %54, %3
  %66 = select i1 %62, i1 %65, i1 false
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = fcmp ogt double %54, %3
  %69 = select i1 %58, i1 %68, i1 false
  br i1 %69, label %80, label %70

70:                                               ; preds = %67
  %71 = fcmp olt double %56, %3
  %72 = select i1 %68, i1 %71, i1 false
  br i1 %72, label %80, label %73

73:                                               ; preds = %70
  %74 = fcmp ogt double %56, %3
  %75 = select i1 %65, i1 %74, i1 false
  br i1 %75, label %80, label %76

76:                                               ; preds = %73
  %77 = and i1 %61, %74
  %78 = and i1 %57, %71
  %79 = or i1 %77, %78
  br i1 %79, label %80, label %85

80:                                               ; preds = %76, %73, %70, %67, %64, %60, %29
  %81 = sext i32 %30 to i64
  %82 = getelementptr inbounds i32, ptr %2, i64 %81
  store i32 %33, ptr %82, align 4, !tbaa !132
  %83 = load i32, ptr %1, align 4, !tbaa !132
  %84 = add nsw i32 %83, 1
  store i32 %84, ptr %1, align 4, !tbaa !132
  br label %85

85:                                               ; preds = %80, %76
  %86 = phi i32 [ %30, %76 ], [ %84, %80 ]
  %87 = add nuw nsw i64 %31, 1
  %88 = icmp eq i64 %87, %27
  br i1 %88, label %28, label %29, !llvm.loop !144
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.sqrt.f64(double) #21

; Function Attrs: nounwind optsize uwtable
define internal void @KDTree_QueryCircleIntersectWeighted_Double(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef writeonly %2, ptr nocapture noundef writeonly %3, double noundef %4, i32 noundef %5, ptr nocapture noundef readonly %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9) #10 {
  %11 = alloca i32, align 4
  %12 = alloca %struct.TBounds, align 8
  %13 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 4
  %14 = load i8, ptr %13, align 8, !tbaa !126, !range !130, !noundef !131
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %10
  tail call void @KDTree_CreateTree(ptr noundef nonnull %0) #56
  br label %17

17:                                               ; preds = %16, %10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #57
  %18 = sext i32 %5 to i64
  %19 = shl nsw i64 %18, 2
  %20 = tail call noalias ptr @malloc(i64 noundef %19) #65
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #57
  %21 = fneg double %4
  store double %21, ptr %12, align 8, !tbaa !14
  %22 = getelementptr inbounds %struct.TBounds, ptr %12, i64 0, i32 1
  store double %4, ptr %22, align 8, !tbaa !11
  %23 = getelementptr inbounds %struct.TVector, ptr %12, i64 0, i32 1
  store double %21, ptr %23, align 8, !tbaa !16
  %24 = getelementptr inbounds %struct.TBounds, ptr %12, i64 0, i32 1, i32 1
  store double %4, ptr %24, align 8, !tbaa !15
  call void @KDTree_QueryBoxIntersect(ptr noundef nonnull %0, ptr noundef nonnull %11, ptr noundef %20, ptr noundef nonnull %12) #56
  store i32 0, ptr %1, align 4, !tbaa !132
  %25 = load i32, ptr %11, align 4, !tbaa !132
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %17
  %28 = zext i32 %25 to i64
  %29 = insertelement <2 x double> poison, double %4, i64 0
  %30 = shufflevector <2 x double> %29, <2 x double> poison, <2 x i32> zeroinitializer
  br label %32

31:                                               ; preds = %143, %17
  call void @free(ptr noundef %20) #59
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #57
  ret void

32:                                               ; preds = %143, %27
  %33 = phi i32 [ 0, %27 ], [ %144, %143 ]
  %34 = phi i32 [ 0, %27 ], [ %145, %143 ]
  %35 = phi i32 [ 0, %27 ], [ %146, %143 ]
  %36 = phi i32 [ 0, %27 ], [ %147, %143 ]
  %37 = phi i32 [ 0, %27 ], [ %148, %143 ]
  %38 = phi i64 [ 0, %27 ], [ %149, %143 ]
  %39 = getelementptr inbounds i32, ptr %20, i64 %38
  %40 = load i32, ptr %39, align 4, !tbaa !132
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds double, ptr %6, i64 %41
  %43 = load double, ptr %42, align 8, !tbaa !7
  %44 = fmul double %43, %43
  %45 = getelementptr inbounds double, ptr %8, i64 %41
  %46 = load double, ptr %45, align 8, !tbaa !7
  %47 = getelementptr inbounds double, ptr %7, i64 %41
  %48 = load double, ptr %47, align 8, !tbaa !7
  %49 = fadd double %43, %48
  %50 = fmul double %49, %49
  %51 = getelementptr inbounds double, ptr %9, i64 %41
  %52 = load double, ptr %51, align 8, !tbaa !7
  %53 = fadd double %46, %52
  %54 = insertelement <2 x double> poison, double %46, i64 0
  %55 = insertelement <2 x double> %54, double %53, i64 1
  %56 = fmul <2 x double> %55, %55
  %57 = insertelement <2 x double> poison, double %50, i64 0
  %58 = shufflevector <2 x double> %57, <2 x double> poison, <2 x i32> zeroinitializer
  %59 = fadd <2 x double> %58, %56
  %60 = call <2 x double> @llvm.sqrt.v2f64(<2 x double> %59)
  %61 = insertelement <2 x double> poison, double %44, i64 0
  %62 = shufflevector <2 x double> %61, <2 x double> poison, <2 x i32> zeroinitializer
  %63 = fadd <2 x double> %62, %56
  %64 = call <2 x double> @llvm.sqrt.v2f64(<2 x double> %63)
  %65 = extractelement <2 x double> %64, i64 0
  %66 = fcmp ogt double %65, %4
  %67 = extractelement <2 x double> %60, i64 0
  %68 = fcmp olt double %67, %4
  %69 = select i1 %66, i1 %68, i1 false
  br i1 %69, label %74, label %70

70:                                               ; preds = %32
  %71 = fcmp olt double %65, %4
  %72 = fcmp ogt double %67, %4
  %73 = select i1 %71, i1 %72, i1 false
  br i1 %73, label %74, label %75

74:                                               ; preds = %70, %32
  br label %75

75:                                               ; preds = %74, %70
  %76 = phi i1 [ true, %74 ], [ false, %70 ]
  %77 = fcmp ogt <2 x double> %60, %30
  %78 = extractelement <2 x double> %60, i64 1
  %79 = fcmp olt double %78, %4
  %80 = extractelement <2 x i1> %77, i64 0
  %81 = select i1 %80, i1 %79, i1 false
  %82 = extractelement <2 x i1> %77, i64 1
  %83 = select i1 %68, i1 %82, i1 false
  %84 = select i1 %81, i1 true, i1 %83
  %85 = fcmp olt <2 x double> %64, %30
  %86 = extractelement <2 x i1> %85, i64 1
  %87 = select i1 %82, i1 %86, i1 false
  %88 = extractelement <2 x double> %64, i64 1
  %89 = fcmp ogt double %88, %4
  %90 = select i1 %79, i1 %89, i1 false
  %91 = select i1 %87, i1 true, i1 %90
  %92 = extractelement <2 x i1> %85, i64 0
  %93 = and i1 %89, %92
  %94 = and i1 %66, %86
  %95 = or i1 %93, %94
  %96 = fmul double %48, 5.000000e-01
  %97 = fadd double %43, %96
  %98 = fcmp ogt double %97, 0.000000e+00
  %99 = xor i1 %98, true
  %100 = fmul double %52, 5.000000e-01
  %101 = fadd double %46, %100
  %102 = fcmp ogt double %101, 0.000000e+00
  %103 = xor i1 %102, true
  %104 = and i1 %98, %102
  br i1 %104, label %105, label %109

105:                                              ; preds = %75
  %106 = fsub double %4, %65
  %107 = fsub double %78, %65
  %108 = fdiv double %106, %107
  br label %127

109:                                              ; preds = %75
  %110 = and i1 %102, %99
  br i1 %110, label %111, label %115

111:                                              ; preds = %109
  %112 = fsub double %4, %67
  %113 = fsub double %88, %67
  %114 = fdiv double %112, %113
  br label %127

115:                                              ; preds = %109
  %116 = and i1 %99, %103
  br i1 %116, label %117, label %121

117:                                              ; preds = %115
  %118 = fsub double %4, %78
  %119 = fsub double %65, %78
  %120 = fdiv double %118, %119
  br label %127

121:                                              ; preds = %115
  %122 = and i1 %98, %103
  br i1 %122, label %123, label %127

123:                                              ; preds = %121
  %124 = fsub double %4, %88
  %125 = fsub double %67, %88
  %126 = fdiv double %124, %125
  br label %127

127:                                              ; preds = %123, %121, %117, %111, %105
  %128 = phi i32 [ %34, %111 ], [ %36, %123 ], [ %35, %117 ], [ %33, %105 ], [ %37, %121 ]
  %129 = phi double [ %114, %111 ], [ %126, %123 ], [ %120, %117 ], [ %108, %105 ], [ 5.000000e-01, %121 ]
  %130 = phi i32 [ %34, %111 ], [ %34, %123 ], [ %34, %117 ], [ %33, %105 ], [ %34, %121 ]
  %131 = phi i32 [ %34, %111 ], [ %35, %123 ], [ %35, %117 ], [ %33, %105 ], [ %35, %121 ]
  %132 = phi i32 [ %34, %111 ], [ %36, %123 ], [ %35, %117 ], [ %33, %105 ], [ %36, %121 ]
  %133 = sext i32 %128 to i64
  %134 = getelementptr inbounds double, ptr %3, i64 %133
  store double %129, ptr %134, align 8, !tbaa !7
  %135 = or i1 %91, %76
  %136 = or i1 %95, %135
  %137 = or i1 %84, %136
  br i1 %137, label %138, label %143

138:                                              ; preds = %127
  %139 = sext i32 %33 to i64
  %140 = getelementptr inbounds i32, ptr %2, i64 %139
  store i32 %40, ptr %140, align 4, !tbaa !132
  %141 = load i32, ptr %1, align 4, !tbaa !132
  %142 = add nsw i32 %141, 1
  store i32 %142, ptr %1, align 4, !tbaa !132
  br label %143

143:                                              ; preds = %138, %127
  %144 = phi i32 [ %142, %138 ], [ %33, %127 ]
  %145 = phi i32 [ %142, %138 ], [ %130, %127 ]
  %146 = phi i32 [ %142, %138 ], [ %131, %127 ]
  %147 = phi i32 [ %142, %138 ], [ %132, %127 ]
  %148 = phi i32 [ %142, %138 ], [ %128, %127 ]
  %149 = add nuw nsw i64 %38, 1
  %150 = icmp eq i64 %149, %28
  br i1 %150, label %31, label %32, !llvm.loop !145
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x double> @llvm.sqrt.v2f64(<2 x double>) #21

; Function Attrs: nounwind optsize uwtable
define internal void @KDTree_QueryCircleInterior_Double(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef writeonly %2, double noundef %3, i32 noundef %4, ptr nocapture noundef readonly %5, ptr nocapture noundef readonly %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8) #10 {
  %10 = alloca i32, align 4
  %11 = alloca %struct.TBounds, align 8
  %12 = getelementptr inbounds %struct.TKDTree, ptr %0, i64 0, i32 4
  %13 = load i8, ptr %12, align 8, !tbaa !126, !range !130, !noundef !131
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  tail call void @KDTree_CreateTree(ptr noundef nonnull %0) #56
  br label %16

16:                                               ; preds = %15, %9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #57
  %17 = sext i32 %4 to i64
  %18 = shl nsw i64 %17, 2
  %19 = tail call noalias ptr @malloc(i64 noundef %18) #65
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %11) #57
  %20 = fneg double %3
  store double %20, ptr %11, align 8, !tbaa !14
  %21 = getelementptr inbounds %struct.TBounds, ptr %11, i64 0, i32 1
  store double %3, ptr %21, align 8, !tbaa !11
  %22 = getelementptr inbounds %struct.TVector, ptr %11, i64 0, i32 1
  store double %20, ptr %22, align 8, !tbaa !16
  %23 = getelementptr inbounds %struct.TBounds, ptr %11, i64 0, i32 1, i32 1
  store double %3, ptr %23, align 8, !tbaa !15
  call void @KDTree_QueryBoxIntersect(ptr noundef nonnull %0, ptr noundef nonnull %10, ptr noundef %19, ptr noundef nonnull %11) #56
  store i32 0, ptr %1, align 4, !tbaa !132
  %24 = load i32, ptr %10, align 4, !tbaa !132
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %16
  %27 = zext i32 %24 to i64
  %28 = insertelement <4 x double> poison, double %3, i64 0
  %29 = shufflevector <4 x double> %28, <4 x double> poison, <4 x i32> zeroinitializer
  br label %31

30:                                               ; preds = %66, %16
  call void @free(ptr noundef %19) #59
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #57
  ret void

31:                                               ; preds = %66, %26
  %32 = phi i32 [ 0, %26 ], [ %67, %66 ]
  %33 = phi i64 [ 0, %26 ], [ %68, %66 ]
  %34 = getelementptr inbounds i32, ptr %19, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !132
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds double, ptr %5, i64 %36
  %38 = load double, ptr %37, align 8, !tbaa !7
  %39 = getelementptr inbounds double, ptr %7, i64 %36
  %40 = load double, ptr %39, align 8, !tbaa !7
  %41 = getelementptr inbounds double, ptr %6, i64 %36
  %42 = load double, ptr %41, align 8, !tbaa !7
  %43 = fadd double %38, %42
  %44 = getelementptr inbounds double, ptr %8, i64 %36
  %45 = load double, ptr %44, align 8, !tbaa !7
  %46 = fadd double %40, %45
  %47 = insertelement <2 x double> poison, double %43, i64 0
  %48 = insertelement <2 x double> %47, double %38, i64 1
  %49 = fmul <2 x double> %48, %48
  %50 = shufflevector <2 x double> %49, <2 x double> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %51 = insertelement <2 x double> poison, double %40, i64 0
  %52 = insertelement <2 x double> %51, double %46, i64 1
  %53 = fmul <2 x double> %52, %52
  %54 = shufflevector <2 x double> %53, <2 x double> poison, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %55 = fadd <4 x double> %50, %54
  %56 = call <4 x double> @llvm.sqrt.v4f64(<4 x double> %55)
  %57 = fcmp olt <4 x double> %56, %29
  %58 = freeze <4 x i1> %57
  %59 = bitcast <4 x i1> %58 to i4
  %60 = icmp eq i4 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %31
  %62 = sext i32 %32 to i64
  %63 = getelementptr inbounds i32, ptr %2, i64 %62
  store i32 %35, ptr %63, align 4, !tbaa !132
  %64 = load i32, ptr %1, align 4, !tbaa !132
  %65 = add nsw i32 %64, 1
  store i32 %65, ptr %1, align 4, !tbaa !132
  br label %66

66:                                               ; preds = %61, %31
  %67 = phi i32 [ %32, %31 ], [ %65, %61 ]
  %68 = add nuw nsw i64 %33, 1
  %69 = icmp eq i64 %68, %27
  br i1 %69, label %30, label %31, !llvm.loop !146
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x double> @llvm.sqrt.v4f64(<4 x double>) #21

; Function Attrs: optsize uwtable
define internal noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, i64 noundef %1, i64 noundef %2, ptr noundef %3, i32 noundef %4) #6 align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca %"class.std::ios_base::Init", align 1
  %7 = alloca %"struct.std::pair.9", align 8
  %8 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  %9 = tail call noalias dereferenceable_or_null(56) ptr @malloc(i64 noundef 56) #65
  %10 = tail call noalias dereferenceable_or_null(8) ptr @malloc(i64 noundef 8) #65
  %11 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %9, i64 0, i32 2
  store ptr %10, ptr %11, align 8, !tbaa !147
  store i64 %1, ptr %10, align 8, !tbaa !85
  %12 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %9, i64 0, i32 3
  store i64 1, ptr %12, align 8, !tbaa !149
  %13 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %9, i64 0, i32 4
  store i64 %2, ptr %13, align 8, !tbaa !150
  %14 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %9, i64 0, i32 5
  store i32 %4, ptr %14, align 8, !tbaa !151
  %15 = and i32 %4, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %30

17:                                               ; preds = %5
  %18 = and i32 %4, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = shl i64 %1, 1
  %22 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %9, i64 0, i32 1
  store i64 %21, ptr %22, align 8, !tbaa !152
  %23 = mul i64 %21, %2
  br label %27

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %9, i64 0, i32 1
  store i64 %1, ptr %25, align 8, !tbaa !152
  %26 = mul i64 %2, %1
  br label %27

27:                                               ; preds = %24, %20
  %28 = phi i64 [ %23, %20 ], [ %26, %24 ]
  %29 = tail call noalias ptr @malloc(i64 noundef %28) #65
  store ptr %29, ptr %9, align 8, !tbaa !153
  br label %30

30:                                               ; preds = %27, %5
  %31 = tail call noalias ptr @strdup(ptr noundef %3) #59
  %32 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %9, i64 0, i32 6
  store ptr %31, ptr %32, align 8, !tbaa !154
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %7) #57
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #57
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %7, ptr noundef %3, ptr noundef nonnull align 1 dereferenceable(1) %6) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #57
  %33 = getelementptr inbounds %"struct.std::pair.9", ptr %7, i64 0, i32 1
  store ptr %9, ptr %33, align 8, !tbaa !155
  %34 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entrySt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(40) %7) #56
          to label %35 unwind label %46

35:                                               ; preds = %30
  %36 = load ptr, ptr %7, align 8, !tbaa !23
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  %38 = icmp eq ptr %36, %37
  br i1 %38, label %40, label %39

39:                                               ; preds = %35
  call void @_ZdlPv(ptr noundef %36) #58
  br label %40

40:                                               ; preds = %39, %35
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %7) #57
  %41 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #57
  %42 = load ptr, ptr %9, align 8, !tbaa !29
  store ptr %42, ptr %8, align 8, !tbaa !157
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %8, i64 0, i32 1
  store ptr %9, ptr %43, align 8, !tbaa !159
  %44 = call { ptr, i8 } @_ZNSt3mapIPvP24malloc_plus_memory_entrySt4lessIS0_ESaISt4pairIKS0_S2_EEE6insertIS5_IS0_S2_EEENSt9enable_ifIXsr16is_constructibleIS7_T_EE5valueES5_ISt17_Rb_tree_iteratorIS7_EbEE4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(48) %41, ptr noundef nonnull align 8 dereferenceable(16) %8) #56
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #57
  %45 = load ptr, ptr %9, align 8, !tbaa !153
  ret ptr %45

46:                                               ; preds = %30
  %47 = landingpad { ptr, i32 }
          cleanup
  %48 = load ptr, ptr %7, align 8, !tbaa !23
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  %50 = icmp eq ptr %48, %49
  br i1 %50, label %52, label %51

51:                                               ; preds = %46
  call void @_ZdlPv(ptr noundef %48) #58
  br label %52

52:                                               ; preds = %51, %46
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %7) #57
  resume { ptr, i32 } %47
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(argmem: readwrite, inaccessiblemem: readwrite)
declare noalias ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #30

; Function Attrs: optsize uwtable
define internal void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, ptr noundef nonnull align 1 dereferenceable(1) %2) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %4, ptr %0, align 8, !tbaa !78
  %5 = icmp eq ptr %1, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(ptr noundef nonnull @.str.10) #61
  unreachable

7:                                                ; preds = %3
  %8 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #59
  %9 = getelementptr inbounds i8, ptr %1, i64 %8
  tail call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %1, ptr noundef nonnull %9) #56
  ret void
}

; Function Attrs: optsize uwtable
define internal { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entrySt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(40) %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = load ptr, ptr %3, align 8, !tbaa !71
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  %6 = tail call ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %4, ptr noundef nonnull %5, ptr noundef nonnull align 8 dereferenceable(32) %1) #56
  %7 = icmp eq ptr %6, %5
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %6, i64 0, i32 1
  %10 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %9) #56
          to label %14 unwind label %11

11:                                               ; preds = %8
  %12 = landingpad { ptr, i32 }
          catch ptr null
  %13 = extractvalue { ptr, i32 } %12, 0
  tail call void @__clang_call_terminate(ptr %13) #60
  unreachable

14:                                               ; preds = %8
  %15 = icmp slt i32 %10, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %14, %2
  %17 = tail call ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %6, ptr noundef nonnull align 8 dereferenceable(40) %1) #56
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi ptr [ %17, %16 ], [ %6, %14 ]
  %20 = phi i8 [ 1, %16 ], [ 0, %14 ]
  %21 = insertvalue { ptr, i8 } poison, ptr %19, 0
  %22 = insertvalue { ptr, i8 } %21, i8 %20, 1
  ret { ptr, i8 } %22
}

; Function Attrs: optsize uwtable
define internal { ptr, i8 } @_ZNSt3mapIPvP24malloc_plus_memory_entrySt4lessIS0_ESaISt4pairIKS0_S2_EEE6insertIS5_IS0_S2_EEENSt9enable_ifIXsr16is_constructibleIS7_T_EE5valueES5_ISt17_Rb_tree_iteratorIS7_EbEE4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) #6 comdat align 2 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = load ptr, ptr %3, align 8, !tbaa !71
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  %6 = icmp eq ptr %4, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = load ptr, ptr %1, align 8, !tbaa !29
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi ptr [ %4, %7 ], [ %19, %9 ]
  %11 = phi ptr [ %5, %7 ], [ %17, %9 ]
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %10, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !29
  %14 = icmp ult ptr %13, %8
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %10, i64 0, i32 3
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %10, i64 0, i32 2
  %17 = select i1 %14, ptr %11, ptr %10
  %18 = select i1 %14, ptr %15, ptr %16
  %19 = load ptr, ptr %18, align 8, !tbaa !29
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %9, !llvm.loop !160

21:                                               ; preds = %9
  %.lcssa = phi ptr [ %17, %9 ]
  %22 = icmp eq ptr %.lcssa, %5
  br i1 %22, label %27, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !161
  %26 = icmp ult ptr %8, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %23, %21, %2
  %28 = phi ptr [ %.lcssa, %23 ], [ %5, %21 ], [ %5, %2 ]
  %29 = tail call ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE22_M_emplace_hint_uniqueIJS1_IS0_S4_EEEESt17_Rb_tree_iteratorIS5_ESt23_Rb_tree_const_iteratorIS5_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %28, ptr noundef nonnull align 8 dereferenceable(16) %1) #56
  br label %30

30:                                               ; preds = %27, %23
  %31 = phi ptr [ %29, %27 ], [ %.lcssa, %23 ]
  %32 = phi i8 [ 1, %27 ], [ 0, %23 ]
  %33 = insertvalue { ptr, i8 } poison, ptr %31, 0
  %34 = insertvalue { ptr, i8 } %33, i8 %32, 1
  ret { ptr, i8 } %34
}

; Function Attrs: optsize uwtable
define internal ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE22_M_emplace_hint_uniqueIJS1_IS0_S4_EEEESt17_Rb_tree_iteratorIS5_ESt23_Rb_tree_const_iteratorIS5_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(16) %2) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = tail call noalias noundef nonnull dereferenceable(48) ptr @_Znwm(i64 noundef 48) #62
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %4, i64 0, i32 1
  %6 = load <2 x ptr>, ptr %2, align 8, !tbaa !29
  store <2 x ptr> %6, ptr %5, align 8, !tbaa !29
  %7 = invoke { ptr, ptr } @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS2_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(8) %5) #56
          to label %8 unwind label %14

8:                                                ; preds = %3
  %9 = extractvalue { ptr, ptr } %7, 0
  %10 = extractvalue { ptr, ptr } %7, 1
  %11 = icmp eq ptr %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = invoke ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %9, ptr noundef nonnull %10, ptr noundef nonnull %4) #56
          to label %17 unwind label %14

14:                                               ; preds = %12, %3
  %15 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %4) #58
  resume { ptr, i32 } %15

16:                                               ; preds = %8
  tail call void @_ZdlPv(ptr noundef nonnull %4) #58
  br label %17

17:                                               ; preds = %16, %12
  %18 = phi ptr [ %9, %16 ], [ %13, %12 ]
  ret ptr %18
}

; Function Attrs: optsize uwtable
define internal { ptr, ptr } @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS2_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(8) %2) #6 comdat align 2 {
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = icmp eq ptr %4, %1
  br i1 %5, label %6, label %21

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, ptr %0, i64 40
  %8 = load i64, ptr %7, align 8, !tbaa !80
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, ptr %0, i64 32
  %12 = load ptr, ptr %11, align 8, !tbaa !29
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !29
  %15 = load ptr, ptr %2, align 8, !tbaa !29
  %16 = icmp ult ptr %14, %15
  br i1 %16, label %66, label %17

17:                                               ; preds = %10, %6
  %18 = tail call { ptr, ptr } @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE24_M_get_insert_unique_posERS2_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(8) %2) #56
  %19 = extractvalue { ptr, ptr } %18, 0
  %20 = extractvalue { ptr, ptr } %18, 1
  br label %66

21:                                               ; preds = %3
  %22 = load ptr, ptr %2, align 8, !tbaa !29
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %1, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !29
  %25 = icmp ult ptr %22, %24
  br i1 %25, label %26, label %45

26:                                               ; preds = %21
  %27 = getelementptr inbounds i8, ptr %0, i64 24
  %28 = load ptr, ptr %27, align 8, !tbaa !29
  %29 = icmp eq ptr %28, %1
  br i1 %29, label %66, label %30

30:                                               ; preds = %26
  %31 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1) #63
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %31, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !29
  %34 = icmp ult ptr %33, %22
  br i1 %34, label %35, label %41

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %31, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !81
  %38 = icmp eq ptr %37, null
  %39 = select i1 %38, ptr null, ptr %1
  %40 = select i1 %38, ptr %31, ptr %1
  br label %66

41:                                               ; preds = %30
  %42 = tail call { ptr, ptr } @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE24_M_get_insert_unique_posERS2_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(8) %2) #56
  %43 = extractvalue { ptr, ptr } %42, 0
  %44 = extractvalue { ptr, ptr } %42, 1
  br label %66

45:                                               ; preds = %21
  %46 = icmp ult ptr %24, %22
  br i1 %46, label %47, label %66

47:                                               ; preds = %45
  %48 = getelementptr inbounds i8, ptr %0, i64 32
  %49 = load ptr, ptr %48, align 8, !tbaa !29
  %50 = icmp eq ptr %49, %1
  br i1 %50, label %66, label %51

51:                                               ; preds = %47
  %52 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef nonnull %1) #63
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !29
  %55 = icmp ult ptr %22, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %58 = load ptr, ptr %57, align 8, !tbaa !81
  %59 = icmp eq ptr %58, null
  %60 = select i1 %59, ptr null, ptr %52
  %61 = select i1 %59, ptr %1, ptr %52
  br label %66

62:                                               ; preds = %51
  %63 = tail call { ptr, ptr } @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE24_M_get_insert_unique_posERS2_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(8) %2) #56
  %64 = extractvalue { ptr, ptr } %63, 0
  %65 = extractvalue { ptr, ptr } %63, 1
  br label %66

66:                                               ; preds = %62, %56, %47, %45, %41, %35, %26, %17, %10
  %67 = phi ptr [ %19, %17 ], [ null, %10 ], [ %43, %41 ], [ %1, %26 ], [ %64, %62 ], [ null, %47 ], [ %1, %45 ], [ %39, %35 ], [ %60, %56 ]
  %68 = phi ptr [ %20, %17 ], [ %12, %10 ], [ %44, %41 ], [ %1, %26 ], [ %65, %62 ], [ %1, %47 ], [ null, %45 ], [ %40, %35 ], [ %61, %56 ]
  %69 = insertvalue { ptr, ptr } poison, ptr %67, 0
  %70 = insertvalue { ptr, ptr } %69, ptr %68, 1
  ret { ptr, ptr } %70
}

; Function Attrs: optsize uwtable
define internal ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #6 comdat align 2 {
  %5 = icmp ne ptr %1, null
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  %7 = icmp eq ptr %6, %2
  %8 = select i1 %5, i1 true, i1 %7
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %3, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !29
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %2, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !29
  %14 = icmp ult ptr %11, %13
  br label %15

15:                                               ; preds = %9, %4
  %16 = phi i1 [ true, %4 ], [ %14, %9 ]
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %16, ptr noundef %3, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(32) %6) #59
  %17 = getelementptr inbounds i8, ptr %0, i64 40
  %18 = load i64, ptr %17, align 8, !tbaa !80
  %19 = add i64 %18, 1
  store i64 %19, ptr %17, align 8, !tbaa !80
  ret ptr %3
}

; Function Attrs: optsize uwtable
define internal { ptr, ptr } @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE24_M_get_insert_unique_posERS2_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) #6 comdat align 2 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = load ptr, ptr %3, align 8, !tbaa !29
  %6 = icmp eq ptr %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %2
  %8 = load ptr, ptr %1, align 8, !tbaa !29
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi ptr [ %5, %7 ], [ %17, %9 ]
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !29
  %13 = icmp ult ptr %8, %12
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %10, i64 0, i32 2
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %10, i64 0, i32 3
  %16 = select i1 %13, ptr %14, ptr %15
  %17 = load ptr, ptr %16, align 8, !tbaa !29
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %9, !llvm.loop !163

19:                                               ; preds = %9
  %.lcssa1 = phi ptr [ %10, %9 ]
  %.lcssa = phi i1 [ %13, %9 ]
  br i1 %.lcssa, label %20, label %27

20:                                               ; preds = %19, %2
  %21 = phi ptr [ %.lcssa1, %19 ], [ %4, %2 ]
  %22 = getelementptr inbounds i8, ptr %0, i64 24
  %23 = load ptr, ptr %22, align 8, !tbaa !84
  %24 = icmp eq ptr %21, %23
  br i1 %24, label %36, label %25

25:                                               ; preds = %20
  %26 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %21) #63
  br label %27

27:                                               ; preds = %25, %19
  %28 = phi ptr [ %21, %25 ], [ %.lcssa1, %19 ]
  %29 = phi ptr [ %26, %25 ], [ %.lcssa1, %19 ]
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !29
  %32 = load ptr, ptr %1, align 8, !tbaa !29
  %33 = icmp ult ptr %31, %32
  %34 = select i1 %33, ptr null, ptr %29
  %35 = select i1 %33, ptr %28, ptr null
  br label %36

36:                                               ; preds = %27, %20
  %37 = phi ptr [ null, %20 ], [ %34, %27 ]
  %38 = phi ptr [ %21, %20 ], [ %35, %27 ]
  %39 = insertvalue { ptr, ptr } poison, ptr %37, 0
  %40 = insertvalue { ptr, ptr } %39, ptr %38, 1
  ret { ptr, ptr } %40
}

; Function Attrs: optsize uwtable
define internal ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(32) %3) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq ptr %1, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %14, %4
  %7 = phi ptr [ %20, %14 ], [ %1, %4 ]
  %8 = phi ptr [ %18, %14 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %7, i64 0, i32 1
  %10 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %9, ptr noundef nonnull align 8 dereferenceable(32) %3) #56
          to label %14 unwind label %11

11:                                               ; preds = %6
  %12 = landingpad { ptr, i32 }
          catch ptr null
  %13 = extractvalue { ptr, i32 } %12, 0
  tail call void @__clang_call_terminate(ptr %13) #60
  unreachable

14:                                               ; preds = %6
  %15 = icmp slt i32 %10, 0
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %7, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %7, i64 0, i32 2
  %18 = select i1 %15, ptr %8, ptr %7
  %19 = select i1 %15, ptr %16, ptr %17
  %20 = load ptr, ptr %19, align 8, !tbaa !29
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %6, !llvm.loop !164

22:                                               ; preds = %14, %4
  %23 = phi ptr [ %2, %4 ], [ %18, %14 ]
  ret ptr %23
}

; Function Attrs: optsize uwtable
define internal ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(40) %2) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #57
  store ptr %0, ptr %4, align 8, !tbaa !29
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %4, i64 0, i32 1
  %6 = tail call noalias noundef nonnull dereferenceable(72) ptr @_Znwm(i64 noundef 72) #62
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %6, i64 0, i32 1
  tail call void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entryEC2IS5_S8_Lb1EEEOS_IT_T0_E(ptr noundef nonnull align 8 dereferenceable(40) %7, ptr noundef nonnull align 8 dereferenceable(40) %2) #56
  store ptr %6, ptr %5, align 8, !tbaa !165
  %8 = invoke { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %7) #56
          to label %9 unwind label %16

9:                                                ; preds = %3
  %10 = extractvalue { ptr, ptr } %8, 0
  %11 = extractvalue { ptr, ptr } %8, 1
  %12 = icmp eq ptr %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = invoke ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSI_PSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %10, ptr noundef nonnull %11, ptr noundef nonnull %6) #56
          to label %15 unwind label %16

15:                                               ; preds = %13
  store ptr null, ptr %5, align 8, !tbaa !165
  br label %18

16:                                               ; preds = %13, %3
  %17 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %4) #59
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #57
  resume { ptr, i32 } %17

18:                                               ; preds = %15, %9
  %19 = phi ptr [ %14, %15 ], [ %10, %9 ]
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %4) #59
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #57
  ret ptr %19
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entryEC2IS5_S8_Lb1EEEOS_IT_T0_E(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %1) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %3, ptr %0, align 8, !tbaa !78
  %4 = load ptr, ptr %1, align 8, !tbaa !23
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 2
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !49
  %10 = add i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %3, ptr nonnull align 8 %4, i64 %10, i1 false)
  br label %15

13:                                               ; preds = %2
  store ptr %4, ptr %0, align 8, !tbaa !23
  %14 = load i64, ptr %5, align 8, !tbaa !50
  store i64 %14, ptr %3, align 8, !tbaa !50
  br label %15

15:                                               ; preds = %13, %12, %7
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %17 = load i64, ptr %16, align 8, !tbaa !49
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %17, ptr %18, align 8, !tbaa !49
  store ptr %5, ptr %1, align 8, !tbaa !23
  store i64 0, ptr %16, align 8, !tbaa !49
  store i8 0, ptr %5, align 8, !tbaa !50
  %19 = getelementptr inbounds %"struct.std::pair.9", ptr %0, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.std::pair.9", ptr %1, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !29
  store ptr %21, ptr %19, align 8, !tbaa !167
  ret void
}

; Function Attrs: optsize uwtable
define internal { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %2) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = icmp eq ptr %4, %1
  br i1 %5, label %6, label %26

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, ptr %0, i64 40
  %8 = load i64, ptr %7, align 8, !tbaa !80
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, ptr %0, i64 32
  %12 = load ptr, ptr %11, align 8, !tbaa !29
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %12, i64 0, i32 1
  %14 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
          to label %18 unwind label %15

15:                                               ; preds = %10
  %16 = landingpad { ptr, i32 }
          catch ptr null
  %17 = extractvalue { ptr, i32 } %16, 0
  tail call void @__clang_call_terminate(ptr %17) #60
  unreachable

18:                                               ; preds = %10
  %19 = icmp slt i32 %14, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = load ptr, ptr %11, align 8, !tbaa !29
  br label %87

22:                                               ; preds = %18, %6
  %23 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
  %24 = extractvalue { ptr, ptr } %23, 0
  %25 = extractvalue { ptr, ptr } %23, 1
  br label %87

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %1, i64 0, i32 1
  %28 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %2, ptr noundef nonnull align 8 dereferenceable(32) %27) #56
          to label %32 unwind label %29

29:                                               ; preds = %26
  %30 = landingpad { ptr, i32 }
          catch ptr null
  %31 = extractvalue { ptr, i32 } %30, 0
  tail call void @__clang_call_terminate(ptr %31) #60
  unreachable

32:                                               ; preds = %26
  %33 = icmp slt i32 %28, 0
  br i1 %33, label %34, label %57

34:                                               ; preds = %32
  %35 = getelementptr inbounds i8, ptr %0, i64 24
  %36 = load ptr, ptr %35, align 8, !tbaa !29
  %37 = icmp eq ptr %36, %1
  br i1 %37, label %87, label %38

38:                                               ; preds = %34
  %39 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef %1) #63
  %40 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %39, i64 0, i32 1
  %41 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %40, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
          to label %45 unwind label %42

42:                                               ; preds = %38
  %43 = landingpad { ptr, i32 }
          catch ptr null
  %44 = extractvalue { ptr, i32 } %43, 0
  tail call void @__clang_call_terminate(ptr %44) #60
  unreachable

45:                                               ; preds = %38
  %46 = icmp slt i32 %41, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %39, i64 0, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !81
  %50 = icmp eq ptr %49, null
  %51 = select i1 %50, ptr null, ptr %1
  %52 = select i1 %50, ptr %39, ptr %1
  br label %87

53:                                               ; preds = %45
  %54 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
  %55 = extractvalue { ptr, ptr } %54, 0
  %56 = extractvalue { ptr, ptr } %54, 1
  br label %87

57:                                               ; preds = %32
  %58 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %27, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
          to label %62 unwind label %59

59:                                               ; preds = %57
  %60 = landingpad { ptr, i32 }
          catch ptr null
  %61 = extractvalue { ptr, i32 } %60, 0
  tail call void @__clang_call_terminate(ptr %61) #60
  unreachable

62:                                               ; preds = %57
  %63 = icmp slt i32 %58, 0
  br i1 %63, label %64, label %87

64:                                               ; preds = %62
  %65 = getelementptr inbounds i8, ptr %0, i64 32
  %66 = load ptr, ptr %65, align 8, !tbaa !29
  %67 = icmp eq ptr %66, %1
  br i1 %67, label %87, label %68

68:                                               ; preds = %64
  %69 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef %1) #63
  %70 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %69, i64 0, i32 1
  %71 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %2, ptr noundef nonnull align 8 dereferenceable(32) %70) #56
          to label %75 unwind label %72

72:                                               ; preds = %68
  %73 = landingpad { ptr, i32 }
          catch ptr null
  %74 = extractvalue { ptr, i32 } %73, 0
  tail call void @__clang_call_terminate(ptr %74) #60
  unreachable

75:                                               ; preds = %68
  %76 = icmp slt i32 %71, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %79 = load ptr, ptr %78, align 8, !tbaa !81
  %80 = icmp eq ptr %79, null
  %81 = select i1 %80, ptr null, ptr %69
  %82 = select i1 %80, ptr %1, ptr %69
  br label %87

83:                                               ; preds = %75
  %84 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
  %85 = extractvalue { ptr, ptr } %84, 0
  %86 = extractvalue { ptr, ptr } %84, 1
  br label %87

87:                                               ; preds = %83, %77, %64, %62, %53, %47, %34, %22, %20
  %88 = phi ptr [ %24, %22 ], [ null, %20 ], [ %55, %53 ], [ %1, %34 ], [ %85, %83 ], [ null, %64 ], [ %1, %62 ], [ %51, %47 ], [ %81, %77 ]
  %89 = phi ptr [ %25, %22 ], [ %21, %20 ], [ %56, %53 ], [ %1, %34 ], [ %86, %83 ], [ %1, %64 ], [ null, %62 ], [ %52, %47 ], [ %82, %77 ]
  %90 = insertvalue { ptr, ptr } poison, ptr %88, 0
  %91 = insertvalue { ptr, ptr } %90, ptr %89, 1
  ret { ptr, ptr } %91
}

; Function Attrs: optsize uwtable
define internal ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSI_PSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp ne ptr %1, null
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  %7 = icmp eq ptr %6, %2
  %8 = select i1 %5, i1 true, i1 %7
  br i1 %8, label %18, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %3, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %2, i64 0, i32 1
  %12 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull align 8 dereferenceable(32) %11) #56
          to label %16 unwind label %13

13:                                               ; preds = %9
  %14 = landingpad { ptr, i32 }
          catch ptr null
  %15 = extractvalue { ptr, i32 } %14, 0
  tail call void @__clang_call_terminate(ptr %15) #60
  unreachable

16:                                               ; preds = %9
  %17 = icmp slt i32 %12, 0
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi i1 [ true, %4 ], [ %17, %16 ]
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %19, ptr noundef %3, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(32) %6) #59
  %20 = getelementptr inbounds i8, ptr %0, i64 40
  %21 = load i64, ptr %20, align 8, !tbaa !80
  %22 = add i64 %21, 1
  store i64 %22, ptr %20, align 8, !tbaa !80
  ret ptr %3
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !165
  %4 = icmp eq ptr %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %3, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !23
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %3, i64 0, i32 1, i32 0, i64 16
  %9 = icmp eq ptr %7, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void @_ZdlPv(ptr noundef %7) #58
  br label %11

11:                                               ; preds = %10, %5
  tail call void @_ZdlPv(ptr noundef nonnull %3) #58
  br label %12

12:                                               ; preds = %11, %1
  ret void
}

; Function Attrs: optsize uwtable
define internal { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = load ptr, ptr %3, align 8, !tbaa !29
  %6 = icmp eq ptr %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %14, %2
  %8 = phi ptr [ %19, %14 ], [ %5, %2 ]
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %8, i64 0, i32 1
  %10 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %9) #56
          to label %14 unwind label %11

11:                                               ; preds = %7
  %12 = landingpad { ptr, i32 }
          catch ptr null
  %13 = extractvalue { ptr, i32 } %12, 0
  tail call void @__clang_call_terminate(ptr %13) #60
  unreachable

14:                                               ; preds = %7
  %15 = icmp slt i32 %10, 0
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 3
  %18 = select i1 %15, ptr %16, ptr %17
  %19 = load ptr, ptr %18, align 8, !tbaa !29
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %7, !llvm.loop !169

21:                                               ; preds = %14
  %.lcssa2 = phi i1 [ %15, %14 ]
  %.lcssa1 = phi ptr [ %8, %14 ]
  br i1 %.lcssa2, label %22, label %29

22:                                               ; preds = %21, %2
  %23 = phi ptr [ %.lcssa1, %21 ], [ %4, %2 ]
  %24 = getelementptr inbounds i8, ptr %0, i64 24
  %25 = load ptr, ptr %24, align 8, !tbaa !84
  %26 = icmp eq ptr %23, %25
  br i1 %26, label %41, label %27

27:                                               ; preds = %22
  %28 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %23) #63
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi ptr [ %23, %27 ], [ %.lcssa1, %21 ]
  %31 = phi ptr [ %28, %27 ], [ %.lcssa1, %21 ]
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %31, i64 0, i32 1
  %33 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %32, ptr noundef nonnull align 8 dereferenceable(32) %1) #56
          to label %37 unwind label %34

34:                                               ; preds = %29
  %35 = landingpad { ptr, i32 }
          catch ptr null
  %36 = extractvalue { ptr, i32 } %35, 0
  tail call void @__clang_call_terminate(ptr %36) #60
  unreachable

37:                                               ; preds = %29
  %38 = icmp slt i32 %33, 0
  %39 = select i1 %38, ptr null, ptr %31
  %40 = select i1 %38, ptr %30, ptr null
  br label %41

41:                                               ; preds = %37, %22
  %42 = phi ptr [ null, %22 ], [ %39, %37 ]
  %43 = phi ptr [ %23, %22 ], [ %40, %37 ]
  %44 = insertvalue { ptr, ptr } poison, ptr %42, 0
  %45 = insertvalue { ptr, ptr } %44, ptr %43, 1
  ret { ptr, ptr } %45
}

; Function Attrs: noreturn optsize
declare void @_ZSt19__throw_logic_errorPKc(ptr noundef) local_unnamed_addr #17

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #22

; Function Attrs: optsize uwtable
define internal noundef ptr @_ZN10MallocPlus14memory_reallocEmPv(ptr noundef nonnull align 8 dereferenceable(96) %0, i64 noundef %1, ptr noundef readnone %2) #6 align 2 {
  %4 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  %5 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !71
  %8 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = icmp eq ptr %7, null
  br i1 %9, label %67, label %10

10:                                               ; preds = %10, %3
  %11 = phi ptr [ %20, %10 ], [ %7, %3 ]
  %12 = phi ptr [ %18, %10 ], [ %8, %3 ]
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %11, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !29
  %15 = icmp ult ptr %14, %2
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %11, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %11, i64 0, i32 2
  %18 = select i1 %15, ptr %12, ptr %11
  %19 = select i1 %15, ptr %16, ptr %17
  %20 = load ptr, ptr %19, align 8, !tbaa !29
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %10, !llvm.loop !160

22:                                               ; preds = %10
  %.lcssa = phi ptr [ %18, %10 ]
  %23 = icmp eq ptr %.lcssa, %8
  br i1 %23, label %67, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !29
  %27 = icmp ugt ptr %26, %2
  br i1 %27, label %67, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1, i32 0, i64 8
  %30 = load ptr, ptr %29, align 8, !tbaa !170
  %31 = tail call ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %5, ptr nonnull %.lcssa) #56
  %32 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 5
  %33 = load i32, ptr %32, align 8, !tbaa !151
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %53, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 1
  %38 = load i64, ptr %37, align 8, !tbaa !152
  %39 = icmp ult i64 %38, %1
  br i1 %39, label %40, label %49

40:                                               ; preds = %36
  %41 = load ptr, ptr %30, align 8, !tbaa !153
  %42 = shl i64 %1, 1
  %43 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 4
  %44 = load i64, ptr %43, align 8, !tbaa !150
  %45 = mul i64 %44, %42
  %46 = tail call ptr @realloc(ptr noundef %41, i64 noundef %45) #66
  store i64 %42, ptr %37, align 8, !tbaa !152
  %47 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !147
  store i64 %1, ptr %48, align 8, !tbaa !85
  store ptr %46, ptr %30, align 8, !tbaa !153
  br label %62

49:                                               ; preds = %36
  %50 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 2
  %51 = load ptr, ptr %50, align 8, !tbaa !147
  store i64 %1, ptr %51, align 8, !tbaa !85
  %52 = load ptr, ptr %30, align 8, !tbaa !29
  br label %62

53:                                               ; preds = %28
  %54 = load ptr, ptr %30, align 8, !tbaa !153
  %55 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 4
  %56 = load i64, ptr %55, align 8, !tbaa !150
  %57 = mul i64 %56, %1
  %58 = tail call ptr @realloc(ptr noundef %54, i64 noundef %57) #66
  %59 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 1
  store i64 %1, ptr %59, align 8, !tbaa !152
  %60 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 2
  %61 = load ptr, ptr %60, align 8, !tbaa !147
  store i64 %1, ptr %61, align 8, !tbaa !85
  store ptr %58, ptr %30, align 8, !tbaa !153
  br label %62

62:                                               ; preds = %53, %49, %40
  %63 = phi ptr [ %46, %40 ], [ %52, %49 ], [ %58, %53 ]
  %64 = phi ptr [ %46, %40 ], [ null, %49 ], [ %58, %53 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #57
  store ptr %63, ptr %4, align 8, !tbaa !157
  %65 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %4, i64 0, i32 1
  store ptr %30, ptr %65, align 8, !tbaa !159
  %66 = call { ptr, i8 } @_ZNSt3mapIPvP24malloc_plus_memory_entrySt4lessIS0_ESaISt4pairIKS0_S2_EEE6insertIS5_IS0_S2_EEENSt9enable_ifIXsr16is_constructibleIS7_T_EE5valueES5_ISt17_Rb_tree_iteratorIS7_EbEE4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(48) %5, ptr noundef nonnull align 8 dereferenceable(16) %4) #56
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #57
  br label %67

67:                                               ; preds = %62, %24, %22, %3
  %68 = phi ptr [ %64, %62 ], [ null, %24 ], [ null, %22 ], [ null, %3 ]
  ret ptr %68
}

; Function Attrs: optsize uwtable
define internal ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef %1) #63
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = tail call noundef ptr @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(32) %4) #59
  tail call void @_ZdlPv(ptr noundef %5) #58
  %6 = getelementptr inbounds i8, ptr %0, i64 40
  %7 = load i64, ptr %6, align 8, !tbaa !80
  %8 = add i64 %7, -1
  store i64 %8, ptr %6, align 8, !tbaa !80
  ret ptr %3
}

; Function Attrs: nounwind optsize
declare noundef ptr @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(ptr noundef, ptr noundef nonnull align 8 dereferenceable(32)) local_unnamed_addr #8

; Function Attrs: optsize uwtable
define internal noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef returned %1, i64 noundef %2, i64 noundef %3, ptr noundef %4, i32 noundef %5) #6 align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"class.std::ios_base::Init", align 1
  %8 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  %9 = alloca %"struct.std::pair.9", align 8
  %10 = tail call noalias dereferenceable_or_null(56) ptr @malloc(i64 noundef 56) #65
  %11 = tail call noalias dereferenceable_or_null(8) ptr @malloc(i64 noundef 8) #65
  %12 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %10, i64 0, i32 2
  store ptr %11, ptr %12, align 8, !tbaa !147
  store i64 %2, ptr %11, align 8, !tbaa !85
  %13 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %10, i64 0, i32 3
  store i64 1, ptr %13, align 8, !tbaa !149
  %14 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %10, i64 0, i32 1
  store i64 %2, ptr %14, align 8, !tbaa !152
  %15 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %10, i64 0, i32 4
  store i64 %3, ptr %15, align 8, !tbaa !150
  %16 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %10, i64 0, i32 5
  store i32 %5, ptr %16, align 8, !tbaa !151
  store ptr %1, ptr %10, align 8, !tbaa !153
  %17 = tail call noalias ptr @strdup(ptr noundef %4) #59
  %18 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %10, i64 0, i32 6
  store ptr %17, ptr %18, align 8, !tbaa !154
  %19 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #57
  store ptr %1, ptr %8, align 8, !tbaa !157
  %20 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %8, i64 0, i32 1
  store ptr %10, ptr %20, align 8, !tbaa !159
  %21 = call { ptr, i8 } @_ZNSt3mapIPvP24malloc_plus_memory_entrySt4lessIS0_ESaISt4pairIKS0_S2_EEE6insertIS5_IS0_S2_EEENSt9enable_ifIXsr16is_constructibleIS7_T_EE5valueES5_ISt17_Rb_tree_iteratorIS7_EbEE4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(48) %19, ptr noundef nonnull align 8 dereferenceable(16) %8) #56
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #57
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %9) #57
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %7) #57
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %9, ptr noundef %4, ptr noundef nonnull align 1 dereferenceable(1) %7) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #57
  %22 = getelementptr inbounds %"struct.std::pair.9", ptr %9, i64 0, i32 1
  store ptr %10, ptr %22, align 8, !tbaa !155
  %23 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entrySt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(40) %9) #56
          to label %24 unwind label %30

24:                                               ; preds = %6
  %25 = load ptr, ptr %9, align 8, !tbaa !23
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 2
  %27 = icmp eq ptr %25, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  call void @_ZdlPv(ptr noundef %25) #58
  br label %29

29:                                               ; preds = %28, %24
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %9) #57
  ret ptr %1

30:                                               ; preds = %6
  %31 = landingpad { ptr, i32 }
          cleanup
  %32 = load ptr, ptr %9, align 8, !tbaa !23
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 2
  %34 = icmp eq ptr %32, %33
  br i1 %34, label %36, label %35

35:                                               ; preds = %30
  call void @_ZdlPv(ptr noundef %32) #58
  br label %36

36:                                               ; preds = %35, %30
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %9) #57
  resume { ptr, i32 } %31
}

; Function Attrs: optsize uwtable
define internal noundef ptr @_ZN10MallocPlus14memory_reorderEPdPi(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %1, ptr nocapture noundef readonly %2) #6 align 2 {
  %4 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  %5 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !71
  %8 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = icmp eq ptr %7, null
  br i1 %9, label %55, label %10

10:                                               ; preds = %10, %3
  %11 = phi ptr [ %20, %10 ], [ %7, %3 ]
  %12 = phi ptr [ %18, %10 ], [ %8, %3 ]
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %11, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !29
  %15 = icmp ult ptr %14, %1
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %11, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %11, i64 0, i32 2
  %18 = select i1 %15, ptr %12, ptr %11
  %19 = select i1 %15, ptr %16, ptr %17
  %20 = load ptr, ptr %19, align 8, !tbaa !29
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %10, !llvm.loop !160

22:                                               ; preds = %10
  %.lcssa = phi ptr [ %18, %10 ]
  %23 = icmp eq ptr %.lcssa, %8
  br i1 %23, label %55, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !29
  %27 = icmp ugt ptr %26, %1
  br i1 %27, label %55, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1, i32 0, i64 8
  %30 = load ptr, ptr %29, align 8, !tbaa !170
  %31 = tail call ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %5, ptr nonnull %.lcssa) #56
  %32 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 2
  %33 = load ptr, ptr %32, align 8, !tbaa !147
  %34 = load i64, ptr %33, align 8, !tbaa !85
  %35 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 4
  %36 = load i64, ptr %35, align 8, !tbaa !150
  %37 = mul i64 %36, %34
  %38 = tail call noalias ptr @malloc(i64 noundef %37) #65
  %39 = icmp eq i64 %34, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %43, %28
  tail call void @free(ptr noundef %1) #59
  store ptr %38, ptr %30, align 8, !tbaa !153
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #57
  store ptr %38, ptr %4, align 8, !tbaa !157
  %41 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %4, i64 0, i32 1
  store ptr %30, ptr %41, align 8, !tbaa !159
  %42 = call { ptr, i8 } @_ZNSt3mapIPvP24malloc_plus_memory_entrySt4lessIS0_ESaISt4pairIKS0_S2_EEE6insertIS5_IS0_S2_EEENSt9enable_ifIXsr16is_constructibleIS7_T_EE5valueES5_ISt17_Rb_tree_iteratorIS7_EbEE4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(48) %5, ptr noundef nonnull align 8 dereferenceable(16) %4) #56
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #57
  br label %55

43:                                               ; preds = %43, %28
  %44 = phi i64 [ %53, %43 ], [ 0, %28 ]
  %45 = phi i32 [ %52, %43 ], [ 0, %28 ]
  %46 = getelementptr inbounds i32, ptr %2, i64 %44
  %47 = load i32, ptr %46, align 4, !tbaa !68
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds double, ptr %1, i64 %48
  %50 = load double, ptr %49, align 8, !tbaa !171
  %51 = getelementptr inbounds double, ptr %38, i64 %44
  store double %50, ptr %51, align 8, !tbaa !171
  %52 = add i32 %45, 1
  %53 = zext i32 %52 to i64
  %54 = icmp ugt i64 %34, %53
  br i1 %54, label %43, label %40, !llvm.loop !173

55:                                               ; preds = %40, %24, %22, %3
  %56 = phi ptr [ %38, %40 ], [ %1, %24 ], [ %1, %22 ], [ %1, %3 ]
  ret ptr %56
}

; Function Attrs: optsize uwtable
define internal void @_ZN10MallocPlus18memory_reorder_allEPi(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr nocapture noundef readonly %1) #6 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::map", align 8
  %4 = alloca %"class.std::vector", align 8
  %5 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  %6 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  %7 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #57
  %8 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EEC2ERKSB_(ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(48) %8) #56
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #57
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %9 = getelementptr inbounds i8, ptr %3, i64 24
  %10 = load ptr, ptr %9, align 8, !tbaa !84
  %11 = getelementptr inbounds i8, ptr %3, i64 8
  %12 = icmp eq ptr %10, %11
  br i1 %12, label %191, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %15 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %4, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %5, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %7, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %6, i64 0, i32 1
  br label %20

20:                                               ; preds = %173, %13
  %21 = phi ptr [ %10, %13 ], [ %174, %173 ]
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %21, i64 0, i32 1, i32 0, i64 8
  %23 = load ptr, ptr %22, align 8, !tbaa !170
  %24 = load ptr, ptr %14, align 8, !tbaa !71
  %25 = icmp eq ptr %24, null
  br i1 %25, label %47, label %26

26:                                               ; preds = %20
  %27 = load ptr, ptr %23, align 8, !tbaa !29
  br label %28

28:                                               ; preds = %28, %26
  %29 = phi ptr [ %24, %26 ], [ %38, %28 ]
  %30 = phi ptr [ %15, %26 ], [ %36, %28 ]
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %29, i64 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !29
  %33 = icmp ult ptr %32, %27
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %29, i64 0, i32 3
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %29, i64 0, i32 2
  %36 = select i1 %33, ptr %30, ptr %29
  %37 = select i1 %33, ptr %34, ptr %35
  %38 = load ptr, ptr %37, align 8, !tbaa !29
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %28, !llvm.loop !160

40:                                               ; preds = %28
  %.lcssa = phi ptr [ %36, %28 ]
  %41 = icmp eq ptr %.lcssa, %15
  br i1 %41, label %47, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !29
  %45 = icmp ult ptr %27, %44
  %46 = select i1 %45, ptr %15, ptr %.lcssa
  br label %47

47:                                               ; preds = %42, %40, %20
  %48 = phi ptr [ %15, %40 ], [ %15, %20 ], [ %46, %42 ]
  %49 = invoke ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %8, ptr %48) #56
          to label %50 unwind label %75

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %23, i64 0, i32 5
  %52 = load i32, ptr %51, align 8, !tbaa !151
  %53 = and i32 %52, 256
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %120, label %55

55:                                               ; preds = %50
  %56 = load ptr, ptr %16, align 8, !tbaa !70
  %57 = load ptr, ptr %4, align 8, !tbaa !65
  %58 = ptrtoint ptr %56 to i64
  %59 = ptrtoint ptr %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 2
  %62 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %23, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8, !tbaa !147
  %64 = load i64, ptr %63, align 8, !tbaa !85
  %65 = icmp ult i64 %61, %64
  br i1 %65, label %66, label %86

66:                                               ; preds = %55
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %4, i64 noundef %64) #56
          to label %67 unwind label %75

67:                                               ; preds = %66
  %68 = load ptr, ptr %62, align 8, !tbaa !147
  %69 = load i64, ptr %68, align 8, !tbaa !85
  %70 = trunc i64 %69 to i32
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %72, label %86

72:                                               ; preds = %67
  %73 = load ptr, ptr %4, align 8, !tbaa !65
  %74 = and i64 %69, 4294967295
  br label %77

75:                                               ; preds = %66, %47
  %76 = landingpad { ptr, i32 }
          cleanup
  br label %176

77:                                               ; preds = %77, %72
  %78 = phi i64 [ 0, %72 ], [ %84, %77 ]
  %79 = getelementptr inbounds i32, ptr %1, i64 %78
  %80 = load i32, ptr %79, align 4, !tbaa !68
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i32, ptr %73, i64 %81
  %83 = trunc i64 %78 to i32
  store i32 %83, ptr %82, align 4, !tbaa !68
  %84 = add nuw nsw i64 %78, 1
  %85 = icmp eq i64 %84, %74
  br i1 %85, label %86, label %77, !llvm.loop !174

86:                                               ; preds = %77, %67, %55
  %87 = phi i64 [ %69, %67 ], [ %64, %55 ], [ %69, %77 ]
  %88 = load ptr, ptr %23, align 8, !tbaa !153
  %89 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %23, i64 0, i32 4
  %90 = load i64, ptr %89, align 8, !tbaa !150
  %91 = mul i64 %90, %87
  %92 = call noalias ptr @malloc(i64 noundef %91) #65
  %93 = icmp eq i64 %87, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = load ptr, ptr %4, align 8, !tbaa !65
  br label %98

96:                                               ; preds = %98, %86
  %97 = invoke noundef ptr @_ZN10MallocPlus14memory_replaceEPvS0_(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %88, ptr noundef %92) #56
          to label %113 unwind label %116

98:                                               ; preds = %98, %94
  %99 = phi i64 [ 0, %94 ], [ %111, %98 ]
  %100 = phi i32 [ 0, %94 ], [ %110, %98 ]
  %101 = getelementptr inbounds i32, ptr %1, i64 %99
  %102 = load i32, ptr %101, align 4, !tbaa !68
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %88, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !68
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i32, ptr %95, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !68
  %109 = getelementptr inbounds i32, ptr %92, i64 %99
  store i32 %108, ptr %109, align 4, !tbaa !68
  %110 = add i32 %100, 1
  %111 = zext i32 %110 to i64
  %112 = icmp ugt i64 %87, %111
  br i1 %112, label %98, label %96, !llvm.loop !175

113:                                              ; preds = %96
  call void @free(ptr noundef %88) #59
  store ptr %92, ptr %23, align 8, !tbaa !153
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #57
  store ptr %92, ptr %5, align 8, !tbaa !157
  store ptr %23, ptr %17, align 8, !tbaa !159
  %114 = invoke { ptr, i8 } @_ZNSt3mapIPvP24malloc_plus_memory_entrySt4lessIS0_ESaISt4pairIKS0_S2_EEE6insertIS5_IS0_S2_EEENSt9enable_ifIXsr16is_constructibleIS7_T_EE5valueES5_ISt17_Rb_tree_iteratorIS7_EbEE4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(48) %8, ptr noundef nonnull align 8 dereferenceable(16) %5) #56
          to label %115 unwind label %118

115:                                              ; preds = %113
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #57
  br label %173

116:                                              ; preds = %96
  %117 = landingpad { ptr, i32 }
          cleanup
  br label %176

118:                                              ; preds = %113
  %119 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #57
  br label %176

120:                                              ; preds = %50
  %121 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %23, i64 0, i32 4
  %122 = load i64, ptr %121, align 8, !tbaa !150
  %123 = icmp eq i64 %122, 8
  %124 = load ptr, ptr %23, align 8, !tbaa !153
  %125 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %23, i64 0, i32 2
  %126 = load ptr, ptr %125, align 8, !tbaa !147
  %127 = load i64, ptr %126, align 8, !tbaa !85
  %128 = icmp eq i64 %127, 0
  br i1 %123, label %129, label %149

129:                                              ; preds = %120
  %130 = shl i64 %127, 3
  %131 = call noalias ptr @malloc(i64 noundef %130) #65
  br i1 %128, label %132, label %134

132:                                              ; preds = %134, %129
  call void @free(ptr noundef %124) #59
  store ptr %131, ptr %23, align 8, !tbaa !153
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #57
  store ptr %131, ptr %6, align 8, !tbaa !157
  store ptr %23, ptr %19, align 8, !tbaa !159
  %133 = invoke { ptr, i8 } @_ZNSt3mapIPvP24malloc_plus_memory_entrySt4lessIS0_ESaISt4pairIKS0_S2_EEE6insertIS5_IS0_S2_EEENSt9enable_ifIXsr16is_constructibleIS7_T_EE5valueES5_ISt17_Rb_tree_iteratorIS7_EbEE4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(48) %8, ptr noundef nonnull align 8 dereferenceable(16) %6) #56
          to label %146 unwind label %147

134:                                              ; preds = %134, %129
  %135 = phi i64 [ %144, %134 ], [ 0, %129 ]
  %136 = phi i32 [ %143, %134 ], [ 0, %129 ]
  %137 = getelementptr inbounds i32, ptr %1, i64 %135
  %138 = load i32, ptr %137, align 4, !tbaa !68
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds double, ptr %124, i64 %139
  %141 = load double, ptr %140, align 8, !tbaa !171
  %142 = getelementptr inbounds double, ptr %131, i64 %135
  store double %141, ptr %142, align 8, !tbaa !171
  %143 = add i32 %136, 1
  %144 = zext i32 %143 to i64
  %145 = icmp ugt i64 %127, %144
  br i1 %145, label %134, label %132, !llvm.loop !176

146:                                              ; preds = %132
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #57
  br label %173

147:                                              ; preds = %132
  %148 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #57
  br label %176

149:                                              ; preds = %120
  %150 = mul i64 %127, %122
  %151 = call noalias ptr @malloc(i64 noundef %150) #65
  br i1 %128, label %152, label %154

152:                                              ; preds = %154, %149
  %153 = invoke noundef ptr @_ZN10MallocPlus14memory_replaceEPvS0_(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %124, ptr noundef %151) #56
          to label %166 unwind label %169

154:                                              ; preds = %154, %149
  %155 = phi i64 [ %164, %154 ], [ 0, %149 ]
  %156 = phi i32 [ %163, %154 ], [ 0, %149 ]
  %157 = getelementptr inbounds i32, ptr %1, i64 %155
  %158 = load i32, ptr %157, align 4, !tbaa !68
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds float, ptr %124, i64 %159
  %161 = load float, ptr %160, align 4, !tbaa !177
  %162 = getelementptr inbounds float, ptr %151, i64 %155
  store float %161, ptr %162, align 4, !tbaa !177
  %163 = add i32 %156, 1
  %164 = zext i32 %163 to i64
  %165 = icmp ugt i64 %127, %164
  br i1 %165, label %154, label %152, !llvm.loop !179

166:                                              ; preds = %152
  call void @free(ptr noundef %124) #59
  store ptr %151, ptr %23, align 8, !tbaa !153
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #57
  store ptr %151, ptr %7, align 8, !tbaa !157
  store ptr %23, ptr %18, align 8, !tbaa !159
  %167 = invoke { ptr, i8 } @_ZNSt3mapIPvP24malloc_plus_memory_entrySt4lessIS0_ESaISt4pairIKS0_S2_EEE6insertIS5_IS0_S2_EEENSt9enable_ifIXsr16is_constructibleIS7_T_EE5valueES5_ISt17_Rb_tree_iteratorIS7_EbEE4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(48) %8, ptr noundef nonnull align 8 dereferenceable(16) %7) #56
          to label %168 unwind label %171

168:                                              ; preds = %166
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #57
  br label %173

169:                                              ; preds = %152
  %170 = landingpad { ptr, i32 }
          cleanup
  br label %176

171:                                              ; preds = %166
  %172 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #57
  br label %176

173:                                              ; preds = %168, %146, %115
  %174 = call noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef %21) #63
  %175 = icmp eq ptr %174, %11
  br i1 %175, label %182, label %20, !llvm.loop !180

176:                                              ; preds = %171, %169, %147, %118, %116, %75
  %177 = phi { ptr, i32 } [ %76, %75 ], [ %148, %147 ], [ %119, %118 ], [ %117, %116 ], [ %172, %171 ], [ %170, %169 ]
  %178 = load ptr, ptr %4, align 8, !tbaa !65
  %179 = icmp eq ptr %178, null
  br i1 %179, label %181, label %180

180:                                              ; preds = %176
  call void @_ZdlPv(ptr noundef nonnull %178) #58
  br label %181

181:                                              ; preds = %180, %176
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #57
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %3) #59
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #57
  resume { ptr, i32 } %177

182:                                              ; preds = %173
  %183 = load ptr, ptr %4, align 8, !tbaa !65
  %184 = load ptr, ptr %16, align 8, !tbaa !70
  %185 = icmp eq ptr %184, %183
  br i1 %185, label %188, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %4, i64 0, i32 1
  store ptr %183, ptr %187, align 8, !tbaa !70
  br label %188

188:                                              ; preds = %186, %182
  %189 = icmp eq ptr %183, null
  br i1 %189, label %191, label %190

190:                                              ; preds = %188
  call void @_ZdlPv(ptr noundef nonnull %183) #58
  br label %191

191:                                              ; preds = %190, %188, %2
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #57
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %3) #59
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #57
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EEC2ERKSB_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %1) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 0, ptr %4, align 8, !tbaa !181
  %5 = getelementptr inbounds i8, ptr %0, i64 16
  store ptr null, ptr %5, align 8, !tbaa !71
  %6 = getelementptr inbounds i8, ptr %0, i64 24
  store ptr %4, ptr %6, align 8, !tbaa !84
  %7 = getelementptr inbounds i8, ptr %0, i64 32
  store ptr %4, ptr %7, align 8, !tbaa !182
  %8 = getelementptr inbounds i8, ptr %0, i64 40
  store i64 0, ptr %8, align 8, !tbaa !80
  %9 = getelementptr inbounds i8, ptr %1, i64 16
  %10 = load ptr, ptr %9, align 8, !tbaa !71
  %11 = icmp eq ptr %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #57
  store ptr %0, ptr %3, align 8, !tbaa !29
  %13 = call noundef ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ERKSB_RT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %1, ptr noundef nonnull align 8 dereferenceable(8) %3) #56
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #57
  store ptr %13, ptr %5, align 8, !tbaa !29
  br label %14

14:                                               ; preds = %12, %2
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !70
  %5 = load ptr, ptr %0, align 8, !tbaa !65
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 2
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = sub i64 %1, %9
  tail call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %12) #56
  br label %19

13:                                               ; preds = %2
  %14 = icmp ugt i64 %9, %1
  br i1 %14, label %15, label %19

15:                                               ; preds = %13
  %16 = getelementptr inbounds i32, ptr %5, i64 %1
  %17 = icmp eq ptr %4, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  store ptr %16, ptr %3, align 8, !tbaa !70
  br label %19

19:                                               ; preds = %18, %15, %13, %11
  ret void
}

; Function Attrs: optsize uwtable
define internal noundef ptr @_ZN10MallocPlus14memory_replaceEPvS0_(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef readnone %1, ptr noundef %2) #6 align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.std::__cxx11::basic_string", align 8
  %5 = alloca %"class.std::ios_base::Init", align 1
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::ios_base::Init", align 1
  %8 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  %9 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  %10 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1
  %11 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !71
  %13 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = icmp eq ptr %12, null
  br i1 %14, label %135, label %15

15:                                               ; preds = %15, %3
  %16 = phi ptr [ %25, %15 ], [ %12, %3 ]
  %17 = phi ptr [ %23, %15 ], [ %13, %3 ]
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %16, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !29
  %20 = icmp ult ptr %19, %1
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %16, i64 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %16, i64 0, i32 2
  %23 = select i1 %20, ptr %17, ptr %16
  %24 = select i1 %20, ptr %21, ptr %22
  %25 = load ptr, ptr %24, align 8, !tbaa !29
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %15, !llvm.loop !160

27:                                               ; preds = %15
  %.lcssa1 = phi ptr [ %23, %15 ]
  %28 = icmp eq ptr %.lcssa1, %13
  br i1 %28, label %34, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa1, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !29
  %32 = icmp ugt ptr %31, %1
  %33 = select i1 %32, ptr %13, ptr %.lcssa1
  br label %34

34:                                               ; preds = %29, %27
  %35 = phi ptr [ %13, %27 ], [ %33, %29 ]
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi ptr [ %46, %36 ], [ %12, %34 ]
  %38 = phi ptr [ %44, %36 ], [ %13, %34 ]
  %39 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %37, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !29
  %41 = icmp ult ptr %40, %2
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %37, i64 0, i32 3
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %37, i64 0, i32 2
  %44 = select i1 %41, ptr %38, ptr %37
  %45 = select i1 %41, ptr %42, ptr %43
  %46 = load ptr, ptr %45, align 8, !tbaa !29
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %36, !llvm.loop !160

48:                                               ; preds = %36
  %.lcssa = phi ptr [ %44, %36 ]
  %49 = icmp eq ptr %.lcssa, %13
  br i1 %49, label %135, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1
  %52 = load ptr, ptr %51, align 8, !tbaa !29
  %53 = icmp ugt ptr %52, %2
  %54 = select i1 %53, ptr %13, ptr %.lcssa
  %55 = icmp ne ptr %35, %13
  %56 = icmp ne ptr %54, %13
  %57 = select i1 %55, i1 %56, i1 false
  br i1 %57, label %58, label %135

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %35, i64 0, i32 1, i32 0, i64 8
  %60 = load ptr, ptr %59, align 8, !tbaa !170
  %61 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %54, i64 0, i32 1, i32 0, i64 8
  %62 = load ptr, ptr %61, align 8, !tbaa !170
  %63 = tail call ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %10, ptr %54) #56
  %64 = tail call ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %10, ptr %35) #56
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #57
  %65 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %60, i64 0, i32 6
  %66 = load ptr, ptr %65, align 8, !tbaa !154
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #57
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef %66, ptr noundef nonnull align 1 dereferenceable(1) %5) #56
          to label %67 unwind label %89

67:                                               ; preds = %58
  %68 = invoke ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE4findERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %4) #56
          to label %69 unwind label %91

69:                                               ; preds = %67
  %70 = load ptr, ptr %4, align 8, !tbaa !23
  %71 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 2
  %72 = icmp eq ptr %70, %71
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  call void @_ZdlPv(ptr noundef %70) #58
  br label %74

74:                                               ; preds = %73, %69
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #57
  %75 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %62, i64 0, i32 6
  %76 = load ptr, ptr %75, align 8, !tbaa !154
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %7) #57
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %6, ptr noundef %76, ptr noundef nonnull align 1 dereferenceable(1) %7) #56
          to label %77 unwind label %99

77:                                               ; preds = %74
  %78 = invoke ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE4findERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %6) #56
          to label %79 unwind label %101

79:                                               ; preds = %77
  %80 = load ptr, ptr %6, align 8, !tbaa !23
  %81 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 2
  %82 = icmp eq ptr %80, %81
  br i1 %82, label %84, label %83

83:                                               ; preds = %79
  call void @_ZdlPv(ptr noundef %80) #58
  br label %84

84:                                               ; preds = %83, %79
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #57
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %78) #56
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %68) #56
  %85 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %60, i64 0, i32 5
  %86 = load i32, ptr %85, align 8, !tbaa !151
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %109, label %112

89:                                               ; preds = %58
  %90 = landingpad { ptr, i32 }
          cleanup
  br label %97

91:                                               ; preds = %67
  %92 = landingpad { ptr, i32 }
          cleanup
  %93 = load ptr, ptr %4, align 8, !tbaa !23
  %94 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 2
  %95 = icmp eq ptr %93, %94
  br i1 %95, label %97, label %96

96:                                               ; preds = %91
  call void @_ZdlPv(ptr noundef %93) #58
  br label %97

97:                                               ; preds = %96, %91, %89
  %98 = phi { ptr, i32 } [ %90, %89 ], [ %92, %91 ], [ %92, %96 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #57
  br label %133

99:                                               ; preds = %74
  %100 = landingpad { ptr, i32 }
          cleanup
  br label %107

101:                                              ; preds = %77
  %102 = landingpad { ptr, i32 }
          cleanup
  %103 = load ptr, ptr %6, align 8, !tbaa !23
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 2
  %105 = icmp eq ptr %103, %104
  br i1 %105, label %107, label %106

106:                                              ; preds = %101
  call void @_ZdlPv(ptr noundef %103) #58
  br label %107

107:                                              ; preds = %106, %101, %99
  %108 = phi { ptr, i32 } [ %100, %99 ], [ %102, %101 ], [ %102, %106 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #57
  br label %133

109:                                              ; preds = %84
  %110 = load ptr, ptr %60, align 8, !tbaa !153
  call void @free(ptr noundef %110) #59
  %111 = load ptr, ptr %62, align 8, !tbaa !153
  store ptr %111, ptr %60, align 8, !tbaa !153
  br label %112

112:                                              ; preds = %109, %84
  %113 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %62, i64 0, i32 2
  %114 = load ptr, ptr %113, align 8, !tbaa !147
  %115 = load i64, ptr %114, align 8, !tbaa !85
  %116 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %60, i64 0, i32 2
  %117 = load ptr, ptr %116, align 8, !tbaa !147
  store i64 %115, ptr %117, align 8, !tbaa !85
  %118 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %62, i64 0, i32 1
  %119 = load i64, ptr %118, align 8, !tbaa !152
  %120 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %60, i64 0, i32 1
  store i64 %119, ptr %120, align 8, !tbaa !152
  %121 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %62, i64 0, i32 4
  %122 = load i64, ptr %121, align 8, !tbaa !150
  %123 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %60, i64 0, i32 4
  store i64 %122, ptr %123, align 8, !tbaa !150
  %124 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %62, i64 0, i32 5
  %125 = load i32, ptr %124, align 8, !tbaa !151
  store i32 %125, ptr %85, align 8, !tbaa !151
  call void @free(ptr noundef %114) #59
  %126 = load ptr, ptr %75, align 8, !tbaa !154
  call void @free(ptr noundef %126) #59
  call void @free(ptr noundef nonnull %62) #59
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #57
  store ptr %2, ptr %8, align 8, !tbaa !157
  %127 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %8, i64 0, i32 1
  store ptr %60, ptr %127, align 8, !tbaa !159
  %128 = call { ptr, i8 } @_ZNSt3mapIPvP24malloc_plus_memory_entrySt4lessIS0_ESaISt4pairIKS0_S2_EEE6insertIS5_IS0_S2_EEENSt9enable_ifIXsr16is_constructibleIS7_T_EE5valueES5_ISt17_Rb_tree_iteratorIS7_EbEE4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(48) %10, ptr noundef nonnull align 8 dereferenceable(16) %8) #56
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #57
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #57
  %129 = load ptr, ptr %65, align 8, !tbaa !29
  store ptr %129, ptr %9, align 8, !tbaa !183
  %130 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %9, i64 0, i32 1
  store ptr %60, ptr %130, align 8, !tbaa !185
  %131 = call { ptr, i8 } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_emplace_uniqueIJS6_IPKcS9_EEEES6_ISt17_Rb_tree_iteratorISA_EbEDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(16) %9) #56
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #57
  %132 = load ptr, ptr %60, align 8, !tbaa !153
  br label %135

133:                                              ; preds = %107, %97
  %134 = phi { ptr, i32 } [ %108, %107 ], [ %98, %97 ]
  resume { ptr, i32 } %134

135:                                              ; preds = %112, %50, %48, %3
  %136 = phi ptr [ %132, %112 ], [ null, %50 ], [ null, %3 ], [ null, %48 ]
  ret ptr %136
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !71
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %3) #56
          to label %4 unwind label %5

4:                                                ; preds = %1
  ret void

5:                                                ; preds = %1
  %6 = landingpad { ptr, i32 }
          catch ptr null
  %7 = extractvalue { ptr, i32 } %6, 0
  tail call void @__clang_call_terminate(ptr %7) #60
  unreachable
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %4, %2
  %5 = phi ptr [ %9, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !81
  tail call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %7) #56
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !186
  tail call void @_ZdlPv(ptr noundef nonnull %5) #58
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %4, !llvm.loop !187

11:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: optsize uwtable
define internal ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE4findERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = load ptr, ptr %3, align 8, !tbaa !71
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  %6 = tail call ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %4, ptr noundef nonnull %5, ptr noundef nonnull align 8 dereferenceable(32) %1) #56
  %7 = icmp eq ptr %6, %5
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %6, i64 0, i32 1
  %10 = invoke noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %9) #56
          to label %14 unwind label %11

11:                                               ; preds = %8
  %12 = landingpad { ptr, i32 }
          catch ptr null
  %13 = extractvalue { ptr, i32 } %12, 0
  tail call void @__clang_call_terminate(ptr %13) #60
  unreachable

14:                                               ; preds = %8
  %15 = icmp slt i32 %10, 0
  %16 = select i1 %15, ptr %5, ptr %6
  br label %17

17:                                               ; preds = %14, %2
  %18 = phi ptr [ %5, %2 ], [ %16, %14 ]
  ret ptr %18
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1) #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 8
  %4 = tail call noundef ptr @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(32) %3) #59
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !23
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %4, i64 0, i32 1, i32 0, i64 16
  %8 = icmp eq ptr %6, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZdlPv(ptr noundef %6) #58
  br label %10

10:                                               ; preds = %9, %2
  tail call void @_ZdlPv(ptr noundef nonnull %4) #58
  %11 = getelementptr inbounds i8, ptr %0, i64 40
  %12 = load i64, ptr %11, align 8, !tbaa !80
  %13 = add i64 %12, -1
  store i64 %13, ptr %11, align 8, !tbaa !80
  ret void
}

; Function Attrs: optsize uwtable
define internal { ptr, i8 } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_emplace_uniqueIJS6_IPKcS9_EEEES6_ISt17_Rb_tree_iteratorISA_EbEDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #57
  store ptr %0, ptr %3, align 8, !tbaa !29
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %3, i64 0, i32 1
  %5 = tail call noalias noundef nonnull dereferenceable(72) ptr @_Znwm(i64 noundef 72) #62
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeIJS6_IPKcS9_EEEEvPSt13_Rb_tree_nodeISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %5, ptr noundef nonnull align 8 dereferenceable(16) %1) #56
  store ptr %5, ptr %4, align 8, !tbaa !165
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %5, i64 0, i32 1
  %7 = invoke { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %6) #56
          to label %8 unwind label %15

8:                                                ; preds = %2
  %9 = extractvalue { ptr, ptr } %7, 0
  %10 = extractvalue { ptr, ptr } %7, 1
  %11 = icmp eq ptr %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = invoke ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSI_PSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %9, ptr noundef nonnull %10, ptr noundef nonnull %5) #56
          to label %14 unwind label %17

14:                                               ; preds = %12
  store ptr null, ptr %4, align 8, !tbaa !165
  br label %19

15:                                               ; preds = %2
  %16 = landingpad { ptr, i32 }
          cleanup
  br label %24

17:                                               ; preds = %12
  %18 = landingpad { ptr, i32 }
          cleanup
  br label %24

19:                                               ; preds = %14, %8
  %20 = phi ptr [ %13, %14 ], [ %9, %8 ]
  %21 = phi i8 [ 1, %14 ], [ 0, %8 ]
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %3) #59
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #57
  %22 = insertvalue { ptr, i8 } poison, ptr %20, 0
  %23 = insertvalue { ptr, i8 } %22, i8 %21, 1
  ret { ptr, i8 } %23

24:                                               ; preds = %17, %15
  %25 = phi { ptr, i32 } [ %18, %17 ], [ %16, %15 ]
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %3) #59
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #57
  resume { ptr, i32 } %25
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeIJS6_IPKcS9_EEEEvPSt13_Rb_tree_nodeISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(16) %2) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.std::ios_base::Init", align 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %2, align 8, !tbaa !29
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #57
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef %6, ptr noundef nonnull align 1 dereferenceable(1) %4) #56
          to label %13 unwind label %7

7:                                                ; preds = %3
  %8 = landingpad { ptr, i32 }
          catch ptr null
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = call ptr @__cxa_begin_catch(ptr %9) #57
  call void @_ZdlPv(ptr noundef %1) #58
  invoke void @__cxa_rethrow() #64
          to label %21 unwind label %11

11:                                               ; preds = %7
  %12 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %17 unwind label %18

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #57
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %1, i64 0, i32 1, i32 0, i64 32
  %15 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %2, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !29
  store ptr %16, ptr %14, align 8, !tbaa !167
  ret void

17:                                               ; preds = %11
  resume { ptr, i32 } %12

18:                                               ; preds = %11
  %19 = landingpad { ptr, i32 }
          catch ptr null
  %20 = extractvalue { ptr, i32 } %19, 0
  call void @__clang_call_terminate(ptr %20) #60
  unreachable

21:                                               ; preds = %7
  unreachable
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %59, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !70
  %7 = load ptr, ptr %0, align 8, !tbaa !65
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 2
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !67
  %14 = ptrtoint ptr %13 to i64
  %15 = sub i64 %14, %8
  %16 = ashr exact i64 %15, 2
  %17 = icmp sgt i64 %10, -1
  tail call void @llvm.assume(i1 %17)
  %18 = xor i64 %11, 2305843009213693951
  %19 = icmp ule i64 %16, %18
  tail call void @llvm.assume(i1 %19)
  %20 = icmp ult i64 %16, %1
  br i1 %20, label %30, label %21

21:                                               ; preds = %4
  store i32 0, ptr %6, align 4, !tbaa !68
  %22 = getelementptr i32, ptr %6, i64 1
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = shl i64 %1, 2
  %26 = add i64 %25, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %22, i8 0, i64 %26, i1 false), !tbaa !68
  %27 = getelementptr inbounds i32, ptr %6, i64 %1
  br label %28

28:                                               ; preds = %24, %21
  %29 = phi ptr [ %22, %21 ], [ %27, %24 ]
  store ptr %29, ptr %5, align 8, !tbaa !70
  br label %59

30:                                               ; preds = %4
  %31 = tail call noundef i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1, ptr noundef nonnull @.str.11) #56
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = tail call noundef ptr @_ZNSt15__new_allocatorIiE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %31, ptr noundef null) #56
  br label %35

35:                                               ; preds = %33, %30
  %36 = phi ptr [ %34, %33 ], [ null, %30 ]
  %37 = getelementptr inbounds i32, ptr %36, i64 %11
  store i32 0, ptr %37, align 4, !tbaa !68
  %38 = icmp eq i64 %1, 1
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = getelementptr i32, ptr %37, i64 1
  %41 = shl i64 %1, 2
  %42 = add i64 %41, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %40, i8 0, i64 %42, i1 false), !tbaa !68
  br label %43

43:                                               ; preds = %39, %35
  %44 = load ptr, ptr %0, align 8, !tbaa !65
  %45 = load ptr, ptr %5, align 8, !tbaa !70
  %46 = ptrtoint ptr %45 to i64
  %47 = ptrtoint ptr %44 to i64
  %48 = sub i64 %46, %47
  %49 = icmp sgt i64 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %43
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %36, ptr align 4 %44, i64 %48, i1 false)
  %51 = load ptr, ptr %0, align 8, !tbaa !65
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi ptr [ %44, %43 ], [ %51, %50 ]
  %54 = icmp eq ptr %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %52
  tail call void @_ZdlPv(ptr noundef nonnull %53) #58
  br label %56

56:                                               ; preds = %55, %52
  store ptr %36, ptr %0, align 8, !tbaa !65
  %57 = getelementptr inbounds i32, ptr %37, i64 %1
  store ptr %57, ptr %5, align 8, !tbaa !70
  %58 = getelementptr inbounds i32, ptr %36, i64 %31
  store ptr %58, ptr %12, align 8, !tbaa !67
  br label %59

59:                                               ; preds = %56, %28, %2
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #25

; Function Attrs: mustprogress optsize uwtable
define internal noundef ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ERKSB_RT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %1, ptr noundef nonnull align 8 dereferenceable(8) %2) #13 comdat align 2 {
  %4 = getelementptr inbounds i8, ptr %1, i64 16
  %5 = load ptr, ptr %4, align 8, !tbaa !71
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  %7 = tail call noundef ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ESG_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %5, ptr noundef nonnull %6, ptr noundef nonnull align 8 dereferenceable(8) %2) #56
  br label %8

8:                                                ; preds = %8, %3
  %9 = phi ptr [ %7, %3 ], [ %11, %8 ]
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %9, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !186
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %8, !llvm.loop !188

13:                                               ; preds = %8
  %.lcssa1 = phi ptr [ %9, %8 ]
  %14 = getelementptr inbounds i8, ptr %0, i64 24
  store ptr %.lcssa1, ptr %14, align 8, !tbaa !29
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi ptr [ %7, %13 ], [ %18, %15 ]
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %16, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !81
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %15, !llvm.loop !189

20:                                               ; preds = %15
  %.lcssa = phi ptr [ %16, %15 ]
  %21 = getelementptr inbounds i8, ptr %0, i64 32
  store ptr %.lcssa, ptr %21, align 8, !tbaa !29
  %22 = getelementptr inbounds i8, ptr %1, i64 40
  %23 = load i64, ptr %22, align 8, !tbaa !80
  %24 = getelementptr inbounds i8, ptr %0, i64 40
  store i64 %23, ptr %24, align 8, !tbaa !80
  ret ptr %7
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ESG_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(8) %3) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %1, i64 0, i32 1
  %6 = tail call noalias noundef nonnull dereferenceable(48) ptr @_Znwm(i64 noundef 48) #62
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %6, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false)
  %8 = load i32, ptr %1, align 8, !tbaa !190
  store i32 %8, ptr %6, align 8, !tbaa !190
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %6, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, i8 0, i64 16, i1 false)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %6, i64 0, i32 1
  store ptr %2, ptr %10, align 8, !tbaa !191
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !81
  %13 = icmp eq ptr %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %4
  %15 = invoke noundef ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ESG_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %12, ptr noundef nonnull %6, ptr noundef nonnull align 8 dereferenceable(8) %3) #56
          to label %16 unwind label %18

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %6, i64 0, i32 3
  store ptr %15, ptr %17, align 8, !tbaa !81
  br label %20

18:                                               ; preds = %14
  %19 = landingpad { ptr, i32 }
          catch ptr null
  br label %44

20:                                               ; preds = %16, %4
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !186
  %23 = icmp eq ptr %22, null
  br i1 %23, label %56, label %24

24:                                               ; preds = %49, %20
  %25 = phi ptr [ %51, %49 ], [ %22, %20 ]
  %26 = phi ptr [ %27, %49 ], [ %6, %20 ]
  %27 = invoke noalias noundef nonnull dereferenceable(48) ptr @_Znwm(i64 noundef 48) #62
          to label %28 unwind label %42

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %25, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %27, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %30, ptr noundef nonnull align 8 dereferenceable(16) %29, i64 16, i1 false)
  %31 = load i32, ptr %25, align 8, !tbaa !190
  store i32 %31, ptr %27, align 8, !tbaa !190
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %27, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %32, i8 0, i64 16, i1 false)
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %26, i64 0, i32 2
  store ptr %27, ptr %33, align 8, !tbaa !186
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %27, i64 0, i32 1
  store ptr %26, ptr %34, align 8, !tbaa !191
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %25, i64 0, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !81
  %37 = icmp eq ptr %36, null
  br i1 %37, label %49, label %38

38:                                               ; preds = %28
  %39 = invoke noundef ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE7_M_copyILb0ENSB_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS5_ESG_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %36, ptr noundef nonnull %27, ptr noundef nonnull align 8 dereferenceable(8) %3) #56
          to label %40 unwind label %42

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %27, i64 0, i32 3
  store ptr %39, ptr %41, align 8, !tbaa !81
  br label %49

42:                                               ; preds = %38, %24
  %43 = landingpad { ptr, i32 }
          catch ptr null
  br label %44

44:                                               ; preds = %42, %18
  %45 = phi { ptr, i32 } [ %43, %42 ], [ %19, %18 ]
  %46 = extractvalue { ptr, i32 } %45, 0
  %47 = tail call ptr @__cxa_begin_catch(ptr %46) #57
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %6) #56
          to label %48 unwind label %53

48:                                               ; preds = %44
  invoke void @__cxa_rethrow() #64
          to label %60 unwind label %53

49:                                               ; preds = %40, %28
  %50 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %25, i64 0, i32 2
  %51 = load ptr, ptr %50, align 8, !tbaa !186
  %52 = icmp eq ptr %51, null
  br i1 %52, label %56, label %24, !llvm.loop !192

53:                                               ; preds = %48, %44
  %54 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %55 unwind label %57

55:                                               ; preds = %53
  resume { ptr, i32 } %54

56:                                               ; preds = %49, %20
  ret ptr %6

57:                                               ; preds = %53
  %58 = landingpad { ptr, i32 }
          catch ptr null
  %59 = extractvalue { ptr, i32 } %58, 0
  tail call void @__clang_call_terminate(ptr %59) #60
  unreachable

60:                                               ; preds = %48
  unreachable
}

; Function Attrs: optsize uwtable
define internal noalias noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef readnone %1) #6 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::ios_base::Init", align 1
  %5 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !71
  %8 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = icmp eq ptr %7, null
  br i1 %9, label %58, label %10

10:                                               ; preds = %10, %2
  %11 = phi ptr [ %20, %10 ], [ %7, %2 ]
  %12 = phi ptr [ %18, %10 ], [ %8, %2 ]
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %11, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !29
  %15 = icmp ult ptr %14, %1
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %11, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %11, i64 0, i32 2
  %18 = select i1 %15, ptr %12, ptr %11
  %19 = select i1 %15, ptr %16, ptr %17
  %20 = load ptr, ptr %19, align 8, !tbaa !29
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %10, !llvm.loop !160

22:                                               ; preds = %10
  %.lcssa = phi ptr [ %18, %10 ]
  %23 = icmp eq ptr %.lcssa, %8
  br i1 %23, label %58, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !29
  %27 = icmp ugt ptr %26, %1
  br i1 %27, label %58, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1, i32 0, i64 8
  %30 = load ptr, ptr %29, align 8, !tbaa !170
  %31 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 5
  %32 = load i32, ptr %31, align 8, !tbaa !151
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = load ptr, ptr %30, align 8, !tbaa !153
  tail call void @free(ptr noundef %36) #59
  br label %37

37:                                               ; preds = %35, %28
  %38 = tail call ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %5, ptr nonnull %.lcssa) #56
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #57
  %39 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 6
  %40 = load ptr, ptr %39, align 8, !tbaa !154
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #57
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef %40, ptr noundef nonnull align 1 dereferenceable(1) %4) #56
  %41 = invoke ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE4findERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %3) #56
          to label %42 unwind label %51

42:                                               ; preds = %37
  %43 = load ptr, ptr %3, align 8, !tbaa !23
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  %45 = icmp eq ptr %43, %44
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  call void @_ZdlPv(ptr noundef %43) #58
  br label %47

47:                                               ; preds = %46, %42
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #57
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %41) #56
  %48 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !147
  call void @free(ptr noundef %49) #59
  %50 = load ptr, ptr %39, align 8, !tbaa !154
  call void @free(ptr noundef %50) #59
  call void @free(ptr noundef nonnull %30) #59
  br label %58

51:                                               ; preds = %37
  %52 = landingpad { ptr, i32 }
          cleanup
  %53 = load ptr, ptr %3, align 8, !tbaa !23
  %54 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  %55 = icmp eq ptr %53, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %51
  call void @_ZdlPv(ptr noundef %53) #58
  br label %57

57:                                               ; preds = %56, %51
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #57
  resume { ptr, i32 } %52

58:                                               ; preds = %47, %24, %22, %2
  ret ptr null
}

; Function Attrs: optsize uwtable
define internal void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef readnone %1) #6 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::ios_base::Init", align 1
  %5 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !71
  %8 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = icmp eq ptr %7, null
  br i1 %9, label %51, label %10

10:                                               ; preds = %10, %2
  %11 = phi ptr [ %20, %10 ], [ %7, %2 ]
  %12 = phi ptr [ %18, %10 ], [ %8, %2 ]
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %11, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !29
  %15 = icmp ult ptr %14, %1
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %11, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %11, i64 0, i32 2
  %18 = select i1 %15, ptr %12, ptr %11
  %19 = select i1 %15, ptr %16, ptr %17
  %20 = load ptr, ptr %19, align 8, !tbaa !29
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %10, !llvm.loop !160

22:                                               ; preds = %10
  %.lcssa = phi ptr [ %18, %10 ]
  %23 = icmp eq ptr %.lcssa, %8
  br i1 %23, label %51, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !29
  %27 = icmp ugt ptr %26, %1
  br i1 %27, label %51, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1, i32 0, i64 8
  %30 = load ptr, ptr %29, align 8, !tbaa !170
  %31 = tail call ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %5, ptr nonnull %.lcssa) #56
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #57
  %32 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 6
  %33 = load ptr, ptr %32, align 8, !tbaa !154
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #57
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef %33, ptr noundef nonnull align 1 dereferenceable(1) %4) #56
  %34 = invoke ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE4findERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %3) #56
          to label %35 unwind label %44

35:                                               ; preds = %28
  %36 = load ptr, ptr %3, align 8, !tbaa !23
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  %38 = icmp eq ptr %36, %37
  br i1 %38, label %40, label %39

39:                                               ; preds = %35
  call void @_ZdlPv(ptr noundef %36) #58
  br label %40

40:                                               ; preds = %39, %35
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #57
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %34) #56
  %41 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %30, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !147
  call void @free(ptr noundef %42) #59
  %43 = load ptr, ptr %32, align 8, !tbaa !154
  call void @free(ptr noundef %43) #59
  call void @free(ptr noundef nonnull %30) #59
  br label %51

44:                                               ; preds = %28
  %45 = landingpad { ptr, i32 }
          cleanup
  %46 = load ptr, ptr %3, align 8, !tbaa !23
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  %48 = icmp eq ptr %46, %47
  br i1 %48, label %50, label %49

49:                                               ; preds = %44
  call void @_ZdlPv(ptr noundef %46) #58
  br label %50

50:                                               ; preds = %49, %44
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #57
  resume { ptr, i32 } %45

51:                                               ; preds = %40, %24, %22, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define internal noundef ptr @_ZN10MallocPlus26memory_entry_by_name_beginEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(96) %0) #31 align 2 {
  %2 = getelementptr inbounds i8, ptr %0, i64 24
  %3 = load ptr, ptr %2, align 8, !tbaa !84
  store ptr %3, ptr @_Z15it_save_by_nameB5cxx11, align 8, !tbaa.struct !193
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %3, i64 0, i32 1, i32 0, i64 32
  %5 = load ptr, ptr %4, align 8, !tbaa !167
  ret ptr %5
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(readwrite, argmem: read, inaccessiblemem: read) uwtable
define internal noundef ptr @_ZN10MallocPlus25memory_entry_by_name_nextEv(ptr noundef nonnull readnone align 8 dereferenceable(96) %0) #32 align 2 {
  %2 = load ptr, ptr @_Z15it_save_by_nameB5cxx11, align 8
  %3 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef %2) #63
  store ptr %3, ptr @_Z15it_save_by_nameB5cxx11, align 8, !tbaa !194
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %3, i64 0, i32 1, i32 0, i64 32
  %8 = load ptr, ptr %7, align 8, !tbaa !167
  br label %9

9:                                                ; preds = %6, %1
  %10 = phi ptr [ %8, %6 ], [ null, %1 ]
  ret ptr %10
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(none) uwtable
define internal noalias noundef ptr @_ZN10MallocPlus24memory_entry_by_name_endEv(ptr nocapture noundef nonnull readnone align 8 dereferenceable(96) %0) #26 align 2 {
  ret ptr null
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(read, inaccessiblemem: none) uwtable
define internal noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull readonly align 8 dereferenceable(96) %0, ptr noundef readnone %1) #33 align 2 {
  %3 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !71
  %5 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = icmp eq ptr %4, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %7, %2
  %8 = phi ptr [ %17, %7 ], [ %4, %2 ]
  %9 = phi ptr [ %15, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %8, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !29
  %12 = icmp ult ptr %11, %1
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 2
  %15 = select i1 %12, ptr %9, ptr %8
  %16 = select i1 %12, ptr %13, ptr %14
  %17 = load ptr, ptr %16, align 8, !tbaa !29
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %7, !llvm.loop !160

19:                                               ; preds = %7
  %.lcssa = phi ptr [ %15, %7 ]
  %20 = icmp eq ptr %.lcssa, %5
  br i1 %20, label %31, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !29
  %24 = icmp ugt ptr %23, %1
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1, i32 0, i64 8
  %27 = load ptr, ptr %26, align 8, !tbaa !170
  %28 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %27, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !147
  %30 = load i64, ptr %29, align 8, !tbaa !85
  br label %31

31:                                               ; preds = %25, %21, %19, %2
  %32 = phi i64 [ %30, %25 ], [ 0, %21 ], [ 0, %19 ], [ 0, %2 ]
  ret i64 %32
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(read, inaccessiblemem: none) uwtable
define internal noundef i64 @_ZN10MallocPlus19get_memory_capacityEPv(ptr noundef nonnull readonly align 8 dereferenceable(96) %0, ptr noundef readnone %1) #33 align 2 {
  %3 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !71
  %5 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = icmp eq ptr %4, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %7, %2
  %8 = phi ptr [ %17, %7 ], [ %4, %2 ]
  %9 = phi ptr [ %15, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %8, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !29
  %12 = icmp ult ptr %11, %1
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 2
  %15 = select i1 %12, ptr %9, ptr %8
  %16 = select i1 %12, ptr %13, ptr %14
  %17 = load ptr, ptr %16, align 8, !tbaa !29
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %7, !llvm.loop !160

19:                                               ; preds = %7
  %.lcssa = phi ptr [ %15, %7 ]
  %20 = icmp eq ptr %.lcssa, %5
  br i1 %20, label %30, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !29
  %24 = icmp ugt ptr %23, %1
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1, i32 0, i64 8
  %27 = load ptr, ptr %26, align 8, !tbaa !170
  %28 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %27, i64 0, i32 1
  %29 = load i64, ptr %28, align 8, !tbaa !152
  br label %30

30:                                               ; preds = %25, %21, %19, %2
  %31 = phi i64 [ %29, %25 ], [ 0, %21 ], [ 0, %19 ], [ 0, %2 ]
  ret i64 %31
}

; Function Attrs: optsize uwtable
define internal void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr nocapture noundef %1, ptr nocapture noundef %2) #6 align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.std::ios_base::Init", align 1
  %5 = alloca %"class.std::ios_base::Init", align 1
  %6 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  %7 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = alloca %"class.std::ios_base::Init", align 1
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = alloca %"class.std::ios_base::Init", align 1
  %12 = alloca %"struct.std::pair.9", align 8
  %13 = alloca %"struct.std::pair.9", align 8
  %14 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %1, align 8, !tbaa !29
  %16 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !71
  %18 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = icmp eq ptr %17, null
  br i1 %19, label %155, label %20

20:                                               ; preds = %20, %3
  %21 = phi ptr [ %30, %20 ], [ %17, %3 ]
  %22 = phi ptr [ %28, %20 ], [ %18, %3 ]
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %21, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !29
  %25 = icmp ult ptr %24, %15
  %26 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %21, i64 0, i32 3
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %21, i64 0, i32 2
  %28 = select i1 %25, ptr %22, ptr %21
  %29 = select i1 %25, ptr %26, ptr %27
  %30 = load ptr, ptr %29, align 8, !tbaa !29
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %20, !llvm.loop !160

32:                                               ; preds = %20
  %.lcssa1 = phi ptr [ %28, %20 ]
  %33 = icmp eq ptr %.lcssa1, %18
  br i1 %33, label %39, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa1, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !29
  %37 = icmp ult ptr %15, %36
  %38 = select i1 %37, ptr %18, ptr %.lcssa1
  br label %39

39:                                               ; preds = %34, %32
  %40 = phi ptr [ %18, %32 ], [ %38, %34 ]
  %41 = load ptr, ptr %2, align 8, !tbaa !29
  br label %42

42:                                               ; preds = %42, %39
  %43 = phi ptr [ %52, %42 ], [ %17, %39 ]
  %44 = phi ptr [ %50, %42 ], [ %18, %39 ]
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %43, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !29
  %47 = icmp ult ptr %46, %41
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %43, i64 0, i32 3
  %49 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %43, i64 0, i32 2
  %50 = select i1 %47, ptr %44, ptr %43
  %51 = select i1 %47, ptr %48, ptr %49
  %52 = load ptr, ptr %51, align 8, !tbaa !29
  %53 = icmp eq ptr %52, null
  br i1 %53, label %54, label %42, !llvm.loop !160

54:                                               ; preds = %42
  %.lcssa = phi ptr [ %50, %42 ]
  %55 = icmp eq ptr %.lcssa, %18
  br i1 %55, label %155, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !29
  %59 = icmp ult ptr %41, %58
  %60 = select i1 %59, ptr %18, ptr %.lcssa
  %61 = icmp ne ptr %40, %18
  %62 = icmp ne ptr %60, %18
  %63 = select i1 %61, i1 %62, i1 false
  br i1 %63, label %64, label %155

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %40, i64 0, i32 1, i32 0, i64 8
  %66 = load ptr, ptr %65, align 8, !tbaa !170
  %67 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %60, i64 0, i32 1, i32 0, i64 8
  %68 = load ptr, ptr %67, align 8, !tbaa !170
  %69 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %68, i64 0, i32 6
  %70 = load ptr, ptr %69, align 8, !tbaa !154
  %71 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %66, i64 0, i32 6
  %72 = load ptr, ptr %71, align 8, !tbaa !154
  store ptr %72, ptr %69, align 8, !tbaa !154
  store ptr %70, ptr %71, align 8, !tbaa !154
  %73 = tail call ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %14, ptr %40) #56
  %74 = tail call ptr @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS5_E(ptr noundef nonnull align 8 dereferenceable(48) %14, ptr %60) #56
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #57
  %75 = load ptr, ptr %68, align 8, !tbaa !29
  store ptr %75, ptr %6, align 8, !tbaa !157
  %76 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %6, i64 0, i32 1
  store ptr %68, ptr %76, align 8, !tbaa !159
  %77 = call { ptr, i8 } @_ZNSt3mapIPvP24malloc_plus_memory_entrySt4lessIS0_ESaISt4pairIKS0_S2_EEE6insertIS5_IS0_S2_EEENSt9enable_ifIXsr16is_constructibleIS7_T_EE5valueES5_ISt17_Rb_tree_iteratorIS7_EbEE4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(48) %14, ptr noundef nonnull align 8 dereferenceable(16) %6) #56
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #57
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #57
  %78 = load ptr, ptr %66, align 8, !tbaa !29
  store ptr %78, ptr %7, align 8, !tbaa !157
  %79 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %7, i64 0, i32 1
  store ptr %66, ptr %79, align 8, !tbaa !159
  %80 = call { ptr, i8 } @_ZNSt3mapIPvP24malloc_plus_memory_entrySt4lessIS0_ESaISt4pairIKS0_S2_EEE6insertIS5_IS0_S2_EEENSt9enable_ifIXsr16is_constructibleIS7_T_EE5valueES5_ISt17_Rb_tree_iteratorIS7_EbEE4typeEOSD_(ptr noundef nonnull align 8 dereferenceable(48) %14, ptr noundef nonnull align 8 dereferenceable(16) %7) #56
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %8) #57
  %81 = load ptr, ptr %69, align 8, !tbaa !154
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %9) #57
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %8, ptr noundef %81, ptr noundef nonnull align 1 dereferenceable(1) %9) #56
          to label %82 unwind label %119

82:                                               ; preds = %64
  %83 = invoke ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE4findERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %8) #56
          to label %84 unwind label %121

84:                                               ; preds = %82
  %85 = load ptr, ptr %8, align 8, !tbaa !23
  %86 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 2
  %87 = icmp eq ptr %85, %86
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  call void @_ZdlPv(ptr noundef %85) #58
  br label %89

89:                                               ; preds = %88, %84
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #57
  %90 = load ptr, ptr %71, align 8, !tbaa !154
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #57
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef %90, ptr noundef nonnull align 1 dereferenceable(1) %11) #56
          to label %91 unwind label %129

91:                                               ; preds = %89
  %92 = invoke ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE4findERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %10) #56
          to label %93 unwind label %131

93:                                               ; preds = %91
  %94 = load ptr, ptr %10, align 8, !tbaa !23
  %95 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2
  %96 = icmp eq ptr %94, %95
  br i1 %96, label %98, label %97

97:                                               ; preds = %93
  call void @_ZdlPv(ptr noundef %94) #58
  br label %98

98:                                               ; preds = %97, %93
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #57
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %83) #56
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %92) #56
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %12) #57
  %99 = load ptr, ptr %69, align 8, !tbaa !29
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #57
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef %99, ptr noundef nonnull align 1 dereferenceable(1) %5) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #57
  %100 = getelementptr inbounds %"struct.std::pair.9", ptr %12, i64 0, i32 1
  store ptr %68, ptr %100, align 8, !tbaa !155
  %101 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entrySt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(40) %12) #56
          to label %102 unwind label %139

102:                                              ; preds = %98
  %103 = load ptr, ptr %12, align 8, !tbaa !23
  %104 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  %105 = icmp eq ptr %103, %104
  br i1 %105, label %107, label %106

106:                                              ; preds = %102
  call void @_ZdlPv(ptr noundef %103) #58
  br label %107

107:                                              ; preds = %106, %102
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %12) #57
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %13) #57
  %108 = load ptr, ptr %71, align 8, !tbaa !29
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #57
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef %108, ptr noundef nonnull align 1 dereferenceable(1) %4) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #57
  %109 = getelementptr inbounds %"struct.std::pair.9", ptr %13, i64 0, i32 1
  store ptr %66, ptr %109, align 8, !tbaa !155
  %110 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entrySt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(40) %13) #56
          to label %111 unwind label %146

111:                                              ; preds = %107
  %112 = load ptr, ptr %13, align 8, !tbaa !23
  %113 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 2
  %114 = icmp eq ptr %112, %113
  br i1 %114, label %116, label %115

115:                                              ; preds = %111
  call void @_ZdlPv(ptr noundef %112) #58
  br label %116

116:                                              ; preds = %115, %111
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %13) #57
  %117 = load ptr, ptr %68, align 8, !tbaa !153
  store ptr %117, ptr %1, align 8, !tbaa !29
  %118 = load ptr, ptr %66, align 8, !tbaa !153
  store ptr %118, ptr %2, align 8, !tbaa !29
  br label %155

119:                                              ; preds = %64
  %120 = landingpad { ptr, i32 }
          cleanup
  br label %127

121:                                              ; preds = %82
  %122 = landingpad { ptr, i32 }
          cleanup
  %123 = load ptr, ptr %8, align 8, !tbaa !23
  %124 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 2
  %125 = icmp eq ptr %123, %124
  br i1 %125, label %127, label %126

126:                                              ; preds = %121
  call void @_ZdlPv(ptr noundef %123) #58
  br label %127

127:                                              ; preds = %126, %121, %119
  %128 = phi { ptr, i32 } [ %120, %119 ], [ %122, %121 ], [ %122, %126 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #57
  br label %153

129:                                              ; preds = %89
  %130 = landingpad { ptr, i32 }
          cleanup
  br label %137

131:                                              ; preds = %91
  %132 = landingpad { ptr, i32 }
          cleanup
  %133 = load ptr, ptr %10, align 8, !tbaa !23
  %134 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2
  %135 = icmp eq ptr %133, %134
  br i1 %135, label %137, label %136

136:                                              ; preds = %131
  call void @_ZdlPv(ptr noundef %133) #58
  br label %137

137:                                              ; preds = %136, %131, %129
  %138 = phi { ptr, i32 } [ %130, %129 ], [ %132, %131 ], [ %132, %136 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #57
  br label %153

139:                                              ; preds = %98
  %140 = landingpad { ptr, i32 }
          cleanup
  %141 = load ptr, ptr %12, align 8, !tbaa !23
  %142 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  %143 = icmp eq ptr %141, %142
  br i1 %143, label %145, label %144

144:                                              ; preds = %139
  call void @_ZdlPv(ptr noundef %141) #58
  br label %145

145:                                              ; preds = %144, %139
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %12) #57
  br label %153

146:                                              ; preds = %107
  %147 = landingpad { ptr, i32 }
          cleanup
  %148 = load ptr, ptr %13, align 8, !tbaa !23
  %149 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 2
  %150 = icmp eq ptr %148, %149
  br i1 %150, label %152, label %151

151:                                              ; preds = %146
  call void @_ZdlPv(ptr noundef %148) #58
  br label %152

152:                                              ; preds = %151, %146
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %13) #57
  br label %153

153:                                              ; preds = %152, %145, %137, %127
  %154 = phi { ptr, i32 } [ %128, %127 ], [ %147, %152 ], [ %140, %145 ], [ %138, %137 ]
  resume { ptr, i32 } %154

155:                                              ; preds = %116, %56, %54, %3
  ret void
}

; Function Attrs: optsize uwtable
define internal noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %1) #6 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.std::ios_base::Init", align 1
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #57
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #57
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef %1, ptr noundef nonnull align 1 dereferenceable(1) %4) #56
  %5 = invoke ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE4findERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %3) #56
          to label %6 unwind label %18

6:                                                ; preds = %2
  %7 = load ptr, ptr %3, align 8, !tbaa !23
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  %9 = icmp eq ptr %7, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  call void @_ZdlPv(ptr noundef %7) #58
  br label %11

11:                                               ; preds = %10, %6
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #57
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  %13 = icmp eq ptr %5, %12
  br i1 %13, label %25, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %5, i64 0, i32 1, i32 0, i64 32
  %16 = load ptr, ptr %15, align 8, !tbaa !167
  %17 = load ptr, ptr %16, align 8, !tbaa !153
  br label %25

18:                                               ; preds = %2
  %19 = landingpad { ptr, i32 }
          cleanup
  %20 = load ptr, ptr %3, align 8, !tbaa !23
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  %22 = icmp eq ptr %20, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  call void @_ZdlPv(ptr noundef %20) #58
  br label %24

24:                                               ; preds = %23, %18
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #57
  resume { ptr, i32 } %19

25:                                               ; preds = %14, %11
  %26 = phi ptr [ %17, %14 ], [ null, %11 ]
  ret ptr %26
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @_ZN10MallocPlus20set_memory_attributeEPvi(ptr noundef nonnull readonly align 8 dereferenceable(96) %0, ptr noundef readnone %1, i32 noundef %2) #34 align 2 {
  %4 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !71
  %6 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = icmp eq ptr %5, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %8, %3
  %9 = phi ptr [ %18, %8 ], [ %5, %3 ]
  %10 = phi ptr [ %16, %8 ], [ %6, %3 ]
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %9, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !29
  %13 = icmp ult ptr %12, %1
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %9, i64 0, i32 3
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %9, i64 0, i32 2
  %16 = select i1 %13, ptr %10, ptr %9
  %17 = select i1 %13, ptr %14, ptr %15
  %18 = load ptr, ptr %17, align 8, !tbaa !29
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %8, !llvm.loop !160

20:                                               ; preds = %8
  %.lcssa = phi ptr [ %16, %8 ]
  %21 = icmp eq ptr %.lcssa, %6
  br i1 %21, label %32, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !29
  %25 = icmp ugt ptr %24, %1
  br i1 %25, label %32, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_node.29", ptr %.lcssa, i64 0, i32 1, i32 0, i64 8
  %28 = load ptr, ptr %27, align 8, !tbaa !170
  %29 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %28, i64 0, i32 5
  %30 = load i32, ptr %29, align 8, !tbaa !151
  %31 = or i32 %30, %2
  store i32 %31, ptr %29, align 8, !tbaa !151
  br label %32

32:                                               ; preds = %26, %22, %20, %3
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %15, %2
  %5 = phi ptr [ %9, %15 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !81
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %7) #56
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !186
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %5, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !23
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %5, i64 0, i32 1, i32 0, i64 16
  %13 = icmp eq ptr %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  tail call void @_ZdlPv(ptr noundef %11) #58
  br label %15

15:                                               ; preds = %14, %4
  tail call void @_ZdlPv(ptr noundef nonnull %5) #58
  %16 = icmp eq ptr %9, null
  br i1 %16, label %17, label %4, !llvm.loop !196

17:                                               ; preds = %15, %2
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_GLOBAL__sub_I_Parser_math.cc() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit.5) #56
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit.5, ptr nonnull @__dso_handle) #57
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_GLOBAL__sub_I_Parser_utils.cc() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit.7) #56
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit.7, ptr nonnull @__dso_handle) #57
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_GLOBAL__sub_I_PowerParser.cc() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit.9) #56
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit.9, ptr nonnull @__dso_handle) #57
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZN2PP11PowerParserC2Ev(ptr noundef nonnull align 8 dereferenceable(2796) %0) unnamed_addr #6 align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(248) %0) #56
  %2 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 3, i32 2
  store ptr %3, ptr %2, align 8, !tbaa !78
  %4 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 3, i32 1
  store i64 0, ptr %4, align 8, !tbaa !49
  store i8 0, ptr %3, align 8, !tbaa !50
  %5 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 4, i32 2
  store ptr %6, ptr %5, align 8, !tbaa !78
  %7 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 4, i32 1
  store i64 0, ptr %7, align 8, !tbaa !49
  store i8 0, ptr %6, align 8, !tbaa !50
  %8 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 5
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %8, i8 0, i64 80, i1 false)
  invoke void @_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %8, i64 noundef 0) #56
          to label %9 unwind label %62

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 8
  %11 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1
  store i32 0, ptr %11, align 8, !tbaa !181
  %12 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %12, align 8, !tbaa !71
  %13 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %11, ptr %13, align 8, !tbaa !84
  %14 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %11, ptr %14, align 8, !tbaa !182
  %15 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %15, align 8, !tbaa !80
  %16 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 9
  %17 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 9, i32 0, i32 0, i32 1
  store i32 0, ptr %17, align 8, !tbaa !181
  %18 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %18, align 8, !tbaa !71
  %19 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %17, ptr %19, align 8, !tbaa !84
  %20 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %17, ptr %20, align 8, !tbaa !182
  %21 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 9, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %21, align 8, !tbaa !80
  %22 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 10
  %23 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 10, i32 0, i32 0, i32 1
  store i32 0, ptr %23, align 8, !tbaa !181
  %24 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 10, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %24, align 8, !tbaa !71
  %25 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 10, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %23, ptr %25, align 8, !tbaa !84
  %26 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 10, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %23, ptr %26, align 8, !tbaa !182
  %27 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 10, i32 0, i32 0, i32 1, i32 1
  %28 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 11
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %27, i8 0, i64 88, i1 false)
  invoke void @_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %28, i64 noundef 0) #56
          to label %29 unwind label %64

29:                                               ; preds = %9
  %30 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 12
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %30, i8 0, i64 80, i1 false)
  invoke void @_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %30, i64 noundef 0) #56
          to label %31 unwind label %66

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 14
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %32, i8 0, i64 80, i1 false)
  invoke void @_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %32, i64 noundef 0) #56
          to label %33 unwind label %68

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 17
  invoke void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(128) %34) #56
          to label %35 unwind label %70

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 18
  invoke void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(128) %36) #56
          to label %37 unwind label %72

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 19
  invoke void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(128) %38) #56
          to label %39 unwind label %74

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 22
  %41 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 22, i32 2
  store ptr %41, ptr %40, align 8, !tbaa !78
  %42 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 22, i32 1
  store i64 0, ptr %42, align 8, !tbaa !49
  store i8 0, ptr %41, align 8, !tbaa !50
  %43 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 23
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %43, i8 0, i64 80, i1 false)
  invoke void @_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %43, i64 noundef 0) #56
          to label %44 unwind label %76

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 24
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %45, i8 0, i64 80, i1 false)
  invoke void @_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %45, i64 noundef 0) #56
          to label %46 unwind label %78

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 27
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %47, i8 0, i64 80, i1 false)
  invoke void @_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %47, i64 noundef 0) #56
          to label %48 unwind label %80

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 28
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %49, i8 0, i64 80, i1 false)
  invoke void @_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %49, i64 noundef 0) #56
          to label %50 unwind label %82

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 31
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %51, i8 0, i64 80, i1 false)
  invoke void @_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %51, i64 noundef 0) #56
          to label %52 unwind label %84

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 32
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %53, i8 0, i64 80, i1 false)
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %53, i64 noundef 0) #56
          to label %54 unwind label %86

54:                                               ; preds = %52
  %55 = invoke noalias noundef nonnull dereferenceable(16) ptr @_Znwm(i64 noundef 16) #62
          to label %56 unwind label %88

56:                                               ; preds = %54
  invoke void @_ZN2PP4CommC1Ev(ptr noundef nonnull align 4 dereferenceable(16) %55) #56
          to label %57 unwind label %90

57:                                               ; preds = %56
  %58 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 2
  store ptr %55, ptr %58, align 8, !tbaa !197
  invoke void @_ZN2PP11PowerParser4initEv(ptr noundef nonnull align 8 dereferenceable(2796) %0) #56
          to label %59 unwind label %88

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 25
  store i32 0, ptr %60, align 8, !tbaa !249
  %61 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 1
  store ptr null, ptr %61, align 8, !tbaa !250
  ret void

62:                                               ; preds = %1
  %63 = landingpad { ptr, i32 }
          cleanup
  br label %125

64:                                               ; preds = %9
  %65 = landingpad { ptr, i32 }
          cleanup
  br label %123

66:                                               ; preds = %29
  %67 = landingpad { ptr, i32 }
          cleanup
  br label %121

68:                                               ; preds = %31
  %69 = landingpad { ptr, i32 }
          cleanup
  br label %119

70:                                               ; preds = %33
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %117

72:                                               ; preds = %35
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %114

74:                                               ; preds = %37
  %75 = landingpad { ptr, i32 }
          cleanup
  br label %111

76:                                               ; preds = %39
  %77 = landingpad { ptr, i32 }
          cleanup
  br label %104

78:                                               ; preds = %44
  %79 = landingpad { ptr, i32 }
          cleanup
  br label %102

80:                                               ; preds = %46
  %81 = landingpad { ptr, i32 }
          cleanup
  br label %100

82:                                               ; preds = %48
  %83 = landingpad { ptr, i32 }
          cleanup
  br label %98

84:                                               ; preds = %50
  %85 = landingpad { ptr, i32 }
          cleanup
  br label %96

86:                                               ; preds = %52
  %87 = landingpad { ptr, i32 }
          cleanup
  br label %94

88:                                               ; preds = %57, %54
  %89 = landingpad { ptr, i32 }
          cleanup
  br label %92

90:                                               ; preds = %56
  %91 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %55) #58
  br label %92

92:                                               ; preds = %90, %88
  %93 = phi { ptr, i32 } [ %89, %88 ], [ %91, %90 ]
  tail call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %53) #59
  br label %94

94:                                               ; preds = %92, %86
  %95 = phi { ptr, i32 } [ %93, %92 ], [ %87, %86 ]
  tail call void @_ZNSt11_Deque_baseIbSaIbEED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %51) #59
  br label %96

96:                                               ; preds = %94, %84
  %97 = phi { ptr, i32 } [ %95, %94 ], [ %85, %84 ]
  tail call void @_ZNSt11_Deque_baseIbSaIbEED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %49) #59
  br label %98

98:                                               ; preds = %96, %82
  %99 = phi { ptr, i32 } [ %97, %96 ], [ %83, %82 ]
  tail call void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %47) #59
  br label %100

100:                                              ; preds = %98, %80
  %101 = phi { ptr, i32 } [ %99, %98 ], [ %81, %80 ]
  tail call void @_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %45) #59
  br label %102

102:                                              ; preds = %100, %78
  %103 = phi { ptr, i32 } [ %101, %100 ], [ %79, %78 ]
  tail call void @_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %43) #59
  br label %104

104:                                              ; preds = %102, %76
  %105 = phi { ptr, i32 } [ %103, %102 ], [ %77, %76 ]
  %106 = load ptr, ptr %40, align 8, !tbaa !23
  %107 = icmp eq ptr %106, %41
  br i1 %107, label %109, label %108

108:                                              ; preds = %104
  tail call void @_ZdlPv(ptr noundef %106) #58
  br label %109

109:                                              ; preds = %108, %104
  tail call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %38, ptr noundef nonnull @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE) #59
  %110 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 19, i32 2
  tail call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %110) #59
  br label %111

111:                                              ; preds = %109, %74
  %112 = phi { ptr, i32 } [ %105, %109 ], [ %75, %74 ]
  tail call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %36, ptr noundef nonnull @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE) #59
  %113 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 18, i32 2
  tail call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %113) #59
  br label %114

114:                                              ; preds = %111, %72
  %115 = phi { ptr, i32 } [ %112, %111 ], [ %73, %72 ]
  tail call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %34, ptr noundef nonnull @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE) #59
  %116 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 17, i32 2
  tail call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %116) #59
  br label %117

117:                                              ; preds = %114, %70
  %118 = phi { ptr, i32 } [ %115, %114 ], [ %71, %70 ]
  tail call void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %32) #59
  br label %119

119:                                              ; preds = %117, %68
  %120 = phi { ptr, i32 } [ %118, %117 ], [ %69, %68 ]
  tail call void @_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %30) #59
  br label %121

121:                                              ; preds = %119, %66
  %122 = phi { ptr, i32 } [ %120, %119 ], [ %67, %66 ]
  tail call void @_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %28) #59
  br label %123

123:                                              ; preds = %121, %64
  %124 = phi { ptr, i32 } [ %122, %121 ], [ %65, %64 ]
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %22) #59
  tail call void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %16) #59
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %10) #59
  tail call void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %8) #59
  br label %125

125:                                              ; preds = %123, %62
  %126 = phi { ptr, i32 } [ %124, %123 ], [ %63, %62 ]
  %127 = load ptr, ptr %5, align 8, !tbaa !23
  %128 = icmp eq ptr %127, %6
  br i1 %128, label %130, label %129

129:                                              ; preds = %125
  tail call void @_ZdlPv(ptr noundef %127) #58
  br label %130

130:                                              ; preds = %129, %125
  %131 = load ptr, ptr %2, align 8, !tbaa !23
  %132 = icmp eq ptr %131, %3
  br i1 %132, label %134, label %133

133:                                              ; preds = %130
  tail call void @_ZdlPv(ptr noundef %131) #58
  br label %134

134:                                              ; preds = %133, %130
  tail call void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(ptr noundef nonnull align 8 dereferenceable(248) %0) #59
  resume { ptr, i32 } %126
}

; Function Attrs: optsize uwtable
define available_externally void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(248) %0) unnamed_addr #6 align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 248
  tail call void @_ZNSt8ios_baseC2Ev(ptr noundef nonnull align 8 dereferenceable(216) %2) #59
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVSt9basic_iosIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !51
  %3 = getelementptr inbounds i8, ptr %0, i64 464
  store ptr null, ptr %3, align 8, !tbaa !93
  %4 = getelementptr inbounds i8, ptr %0, i64 472
  store i8 0, ptr %4, align 8, !tbaa !94
  %5 = getelementptr inbounds i8, ptr %0, i64 473
  store i8 0, ptr %5, align 1, !tbaa !95
  %6 = getelementptr inbounds i8, ptr %0, i64 480
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %6, i8 0, i64 32, i1 false)
  %7 = load ptr, ptr getelementptr inbounds ([4 x ptr], ptr @_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE, i64 0, i64 1), align 8
  store ptr %7, ptr %0, align 8, !tbaa !51
  %8 = load ptr, ptr getelementptr inbounds ([4 x ptr], ptr @_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE, i64 0, i64 2), align 8
  %9 = getelementptr i8, ptr %7, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 %10
  store ptr %8, ptr %11, align 8, !tbaa !51
  %12 = load ptr, ptr %0, align 8, !tbaa !51
  %13 = getelementptr i8, ptr %12, i64 -24
  %14 = load i64, ptr %13, align 8
  %15 = getelementptr inbounds i8, ptr %0, i64 %14
  invoke void @_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E(ptr noundef nonnull align 8 dereferenceable(264) %15, ptr noundef null) #56
          to label %16 unwind label %24

16:                                               ; preds = %1
  store ptr getelementptr inbounds ({ [5 x ptr], [5 x ptr] }, ptr @_ZTVSt14basic_ofstreamIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 3), ptr %0, align 8, !tbaa !51
  store ptr getelementptr inbounds ({ [5 x ptr], [5 x ptr] }, ptr @_ZTVSt14basic_ofstreamIcSt11char_traitsIcEE, i64 0, inrange i32 1, i64 3), ptr %2, align 8, !tbaa !51
  %17 = getelementptr inbounds %"class.std::basic_ofstream", ptr %0, i64 0, i32 1
  invoke void @_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(240) %17) #56
          to label %18 unwind label %26

18:                                               ; preds = %16
  %19 = load ptr, ptr %0, align 8, !tbaa !51
  %20 = getelementptr i8, ptr %19, i64 -24
  %21 = load i64, ptr %20, align 8
  %22 = getelementptr inbounds i8, ptr %0, i64 %21
  invoke void @_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E(ptr noundef nonnull align 8 dereferenceable(264) %22, ptr noundef nonnull %17) #56
          to label %23 unwind label %28

23:                                               ; preds = %18
  ret void

24:                                               ; preds = %1
  %25 = landingpad { ptr, i32 }
          cleanup
  br label %30

26:                                               ; preds = %16
  %27 = landingpad { ptr, i32 }
          cleanup
  br label %30

28:                                               ; preds = %18
  %29 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZNSt13basic_filebufIcSt11char_traitsIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(240) %17) #59
  br label %30

30:                                               ; preds = %28, %26, %24
  %31 = phi { ptr, i32 } [ %25, %24 ], [ %29, %28 ], [ %27, %26 ]
  tail call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %2) #59
  resume { ptr, i32 } %31
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %0, i64 noundef %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::ios_base::Init", align 1
  %4 = lshr i64 %1, 4
  %5 = add nuw nsw i64 %4, 1
  %6 = tail call i64 @llvm.umax.i64(i64 %4, i64 5)
  %7 = add nuw nsw i64 %6, 3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 1
  store i64 %7, ptr %8, align 8, !tbaa !251
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #57
  %9 = call noundef ptr @_ZNSt15__new_allocatorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %3, i64 noundef %7, ptr noundef null) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #57
  store ptr %9, ptr %0, align 8, !tbaa !252
  %10 = load i64, ptr %8, align 8, !tbaa !251
  %11 = sub i64 %10, %5
  %12 = lshr i64 %11, 1
  %13 = getelementptr inbounds ptr, ptr %9, i64 %12
  %14 = getelementptr inbounds ptr, ptr %13, i64 %5
  invoke void @_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_create_nodesEPPS5_S9_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %13, ptr noundef nonnull %14) #56
          to label %23 unwind label %15

15:                                               ; preds = %2
  %16 = landingpad { ptr, i32 }
          catch ptr null
  %17 = extractvalue { ptr, i32 } %16, 0
  %18 = call ptr @__cxa_begin_catch(ptr %17) #57
  %19 = load ptr, ptr %0, align 8, !tbaa !252
  call void @_ZdlPv(ptr noundef %19) #58
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  invoke void @__cxa_rethrow() #64
          to label %42 unwind label %20

20:                                               ; preds = %15
  %21 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %22 unwind label %39

22:                                               ; preds = %20
  resume { ptr, i32 } %21

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %25 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 3
  store ptr %13, ptr %25, align 8, !tbaa !253
  %26 = load ptr, ptr %13, align 8, !tbaa !29
  %27 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 1
  store ptr %26, ptr %27, align 8, !tbaa !254
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %26, i64 16
  %29 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  store ptr %28, ptr %29, align 8, !tbaa !255
  %30 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %31 = getelementptr inbounds ptr, ptr %13, i64 %4
  %32 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  store ptr %31, ptr %32, align 8, !tbaa !253
  %33 = load ptr, ptr %31, align 8, !tbaa !29
  %34 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 1
  store ptr %33, ptr %34, align 8, !tbaa !254
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %33, i64 16
  %36 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  store ptr %35, ptr %36, align 8, !tbaa !255
  store ptr %26, ptr %24, align 8, !tbaa !256
  %37 = and i64 %1, 15
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %33, i64 %37
  store ptr %38, ptr %30, align 8, !tbaa !257
  ret void

39:                                               ; preds = %20
  %40 = landingpad { ptr, i32 }
          catch ptr null
  %41 = extractvalue { ptr, i32 } %40, 0
  call void @__clang_call_terminate(ptr %41) #60
  unreachable

42:                                               ; preds = %15
  unreachable
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %0, i64 noundef %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::ios_base::Init", align 1
  %4 = add i64 %1, 1
  %5 = add i64 %1, 3
  %6 = tail call i64 @llvm.umax.i64(i64 %5, i64 8)
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 1
  store i64 %6, ptr %7, align 8, !tbaa !258
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #57
  %8 = call noundef ptr @_ZNSt15__new_allocatorIPN2PP3CmdEE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %3, i64 noundef %6, ptr noundef null) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #57
  store ptr %8, ptr %0, align 8, !tbaa !259
  %9 = load i64, ptr %7, align 8, !tbaa !258
  %10 = sub i64 %9, %4
  %11 = lshr i64 %10, 1
  %12 = getelementptr inbounds ptr, ptr %8, i64 %11
  %13 = getelementptr inbounds ptr, ptr %12, i64 %4
  invoke void @_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE15_M_create_nodesEPPS1_S5_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %12, ptr noundef %13) #56
          to label %22 unwind label %14

14:                                               ; preds = %2
  %15 = landingpad { ptr, i32 }
          catch ptr null
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = call ptr @__cxa_begin_catch(ptr %16) #57
  %18 = load ptr, ptr %0, align 8, !tbaa !259
  call void @_ZdlPv(ptr noundef %18) #58
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  invoke void @__cxa_rethrow() #64
          to label %39 unwind label %19

19:                                               ; preds = %14
  %20 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %21 unwind label %36

21:                                               ; preds = %19
  resume { ptr, i32 } %20

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 3
  store ptr %12, ptr %24, align 8, !tbaa !260
  %25 = load ptr, ptr %12, align 8, !tbaa !29
  %26 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !261
  %27 = getelementptr inbounds %"class.PP::Cmd.113", ptr %25, i64 1
  %28 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  store ptr %27, ptr %28, align 8, !tbaa !262
  %29 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %30 = getelementptr inbounds ptr, ptr %12, i64 %1
  %31 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  store ptr %30, ptr %31, align 8, !tbaa !260
  %32 = load ptr, ptr %30, align 8, !tbaa !29
  %33 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 1
  store ptr %32, ptr %33, align 8, !tbaa !261
  %34 = getelementptr inbounds %"class.PP::Cmd.113", ptr %32, i64 1
  %35 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  store ptr %34, ptr %35, align 8, !tbaa !262
  store ptr %25, ptr %23, align 8, !tbaa !263
  store ptr %32, ptr %29, align 8, !tbaa !264
  ret void

36:                                               ; preds = %19
  %37 = landingpad { ptr, i32 }
          catch ptr null
  %38 = extractvalue { ptr, i32 } %37, 0
  call void @__clang_call_terminate(ptr %38) #60
  unreachable

39:                                               ; preds = %14
  unreachable
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %0, i64 noundef %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::ios_base::Init", align 1
  %4 = add i64 %1, 1
  %5 = add i64 %1, 3
  %6 = tail call i64 @llvm.umax.i64(i64 %5, i64 8)
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 1
  store i64 %6, ptr %7, align 8, !tbaa !265
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #57
  %8 = call noundef ptr @_ZNSt15__new_allocatorIPN2PP8WhenthenEE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %3, i64 noundef %6, ptr noundef null) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #57
  store ptr %8, ptr %0, align 8, !tbaa !266
  %9 = load i64, ptr %7, align 8, !tbaa !265
  %10 = sub i64 %9, %4
  %11 = lshr i64 %10, 1
  %12 = getelementptr inbounds ptr, ptr %8, i64 %11
  %13 = getelementptr inbounds ptr, ptr %12, i64 %4
  invoke void @_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE15_M_create_nodesEPPS1_S5_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %12, ptr noundef %13) #56
          to label %22 unwind label %14

14:                                               ; preds = %2
  %15 = landingpad { ptr, i32 }
          catch ptr null
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = call ptr @__cxa_begin_catch(ptr %16) #57
  %18 = load ptr, ptr %0, align 8, !tbaa !266
  call void @_ZdlPv(ptr noundef %18) #58
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  invoke void @__cxa_rethrow() #64
          to label %39 unwind label %19

19:                                               ; preds = %14
  %20 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %21 unwind label %36

21:                                               ; preds = %19
  resume { ptr, i32 } %20

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 3
  store ptr %12, ptr %24, align 8, !tbaa !267
  %25 = load ptr, ptr %12, align 8, !tbaa !29
  %26 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !268
  %27 = getelementptr inbounds %"class.PP::Whenthen", ptr %25, i64 1
  %28 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  store ptr %27, ptr %28, align 8, !tbaa !269
  %29 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %30 = getelementptr inbounds ptr, ptr %12, i64 %1
  %31 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  store ptr %30, ptr %31, align 8, !tbaa !267
  %32 = load ptr, ptr %30, align 8, !tbaa !29
  %33 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 1
  store ptr %32, ptr %33, align 8, !tbaa !268
  %34 = getelementptr inbounds %"class.PP::Whenthen", ptr %32, i64 1
  %35 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  store ptr %34, ptr %35, align 8, !tbaa !269
  store ptr %25, ptr %23, align 8, !tbaa !270
  store ptr %32, ptr %29, align 8, !tbaa !271
  ret void

36:                                               ; preds = %19
  %37 = landingpad { ptr, i32 }
          catch ptr null
  %38 = extractvalue { ptr, i32 } %37, 0
  call void @__clang_call_terminate(ptr %38) #60
  unreachable

39:                                               ; preds = %14
  unreachable
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %0, i64 noundef %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::ios_base::Init", align 1
  %4 = add i64 %1, 1
  %5 = add i64 %1, 3
  %6 = tail call i64 @llvm.umax.i64(i64 %5, i64 8)
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 1
  store i64 %6, ptr %7, align 8, !tbaa !272
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #57
  %8 = call noundef ptr @_ZNSt15__new_allocatorIPN2PP12RestartblockEE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %3, i64 noundef %6, ptr noundef null) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #57
  store ptr %8, ptr %0, align 8, !tbaa !273
  %9 = load i64, ptr %7, align 8, !tbaa !272
  %10 = sub i64 %9, %4
  %11 = lshr i64 %10, 1
  %12 = getelementptr inbounds ptr, ptr %8, i64 %11
  %13 = getelementptr inbounds ptr, ptr %12, i64 %4
  invoke void @_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE15_M_create_nodesEPPS1_S5_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %12, ptr noundef %13) #56
          to label %22 unwind label %14

14:                                               ; preds = %2
  %15 = landingpad { ptr, i32 }
          catch ptr null
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = call ptr @__cxa_begin_catch(ptr %16) #57
  %18 = load ptr, ptr %0, align 8, !tbaa !273
  call void @_ZdlPv(ptr noundef %18) #58
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  invoke void @__cxa_rethrow() #64
          to label %39 unwind label %19

19:                                               ; preds = %14
  %20 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %21 unwind label %36

21:                                               ; preds = %19
  resume { ptr, i32 } %20

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 3
  store ptr %12, ptr %24, align 8, !tbaa !274
  %25 = load ptr, ptr %12, align 8, !tbaa !29
  %26 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !275
  %27 = getelementptr inbounds %"class.PP::Restartblock", ptr %25, i64 1
  %28 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  store ptr %27, ptr %28, align 8, !tbaa !276
  %29 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %30 = getelementptr inbounds ptr, ptr %12, i64 %1
  %31 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  store ptr %30, ptr %31, align 8, !tbaa !274
  %32 = load ptr, ptr %30, align 8, !tbaa !29
  %33 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 1
  store ptr %32, ptr %33, align 8, !tbaa !275
  %34 = getelementptr inbounds %"class.PP::Restartblock", ptr %32, i64 1
  %35 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  store ptr %34, ptr %35, align 8, !tbaa !276
  store ptr %25, ptr %23, align 8, !tbaa !277
  store ptr %32, ptr %29, align 8, !tbaa !278
  ret void

36:                                               ; preds = %19
  %37 = landingpad { ptr, i32 }
          catch ptr null
  %38 = extractvalue { ptr, i32 } %37, 0
  call void @__clang_call_terminate(ptr %38) #60
  unreachable

39:                                               ; preds = %14
  unreachable
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %0, i64 noundef %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::ios_base::Init", align 1
  %4 = lshr i64 %1, 9
  %5 = add nuw nsw i64 %4, 1
  %6 = tail call i64 @llvm.umax.i64(i64 %4, i64 5)
  %7 = add nuw nsw i64 %6, 3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 1
  store i64 %7, ptr %8, align 8, !tbaa !279
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #57
  %9 = call noundef ptr @_ZNSt15__new_allocatorIPbE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %3, i64 noundef %7, ptr noundef null) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #57
  store ptr %9, ptr %0, align 8, !tbaa !280
  %10 = load i64, ptr %8, align 8, !tbaa !279
  %11 = sub i64 %10, %5
  %12 = lshr i64 %11, 1
  %13 = getelementptr inbounds ptr, ptr %9, i64 %12
  %14 = getelementptr inbounds ptr, ptr %13, i64 %5
  invoke void @_ZNSt11_Deque_baseIbSaIbEE15_M_create_nodesEPPbS3_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %13, ptr noundef nonnull %14) #56
          to label %23 unwind label %15

15:                                               ; preds = %2
  %16 = landingpad { ptr, i32 }
          catch ptr null
  %17 = extractvalue { ptr, i32 } %16, 0
  %18 = call ptr @__cxa_begin_catch(ptr %17) #57
  %19 = load ptr, ptr %0, align 8, !tbaa !280
  call void @_ZdlPv(ptr noundef %19) #58
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  invoke void @__cxa_rethrow() #64
          to label %42 unwind label %20

20:                                               ; preds = %15
  %21 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %22 unwind label %39

22:                                               ; preds = %20
  resume { ptr, i32 } %21

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %25 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 3
  store ptr %13, ptr %25, align 8, !tbaa !281
  %26 = load ptr, ptr %13, align 8, !tbaa !29
  %27 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 1
  store ptr %26, ptr %27, align 8, !tbaa !282
  %28 = getelementptr inbounds i8, ptr %26, i64 512
  %29 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  store ptr %28, ptr %29, align 8, !tbaa !283
  %30 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %31 = getelementptr inbounds ptr, ptr %13, i64 %4
  %32 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  store ptr %31, ptr %32, align 8, !tbaa !281
  %33 = load ptr, ptr %31, align 8, !tbaa !29
  %34 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 1
  store ptr %33, ptr %34, align 8, !tbaa !282
  %35 = getelementptr inbounds i8, ptr %33, i64 512
  %36 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  store ptr %35, ptr %36, align 8, !tbaa !283
  store ptr %26, ptr %24, align 8, !tbaa !284
  %37 = and i64 %1, 511
  %38 = getelementptr inbounds i8, ptr %33, i64 %37
  store ptr %38, ptr %30, align 8, !tbaa !285
  ret void

39:                                               ; preds = %20
  %40 = landingpad { ptr, i32 }
          catch ptr null
  %41 = extractvalue { ptr, i32 } %40, 0
  call void @__clang_call_terminate(ptr %41) #60
  unreachable

42:                                               ; preds = %15
  unreachable
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(ptr noundef nonnull align 8 dereferenceable(80) %0, i64 noundef %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.std::ios_base::Init", align 1
  %4 = lshr i64 %1, 7
  %5 = add nuw nsw i64 %4, 1
  %6 = tail call i64 @llvm.umax.i64(i64 %4, i64 5)
  %7 = add nuw nsw i64 %6, 3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 1
  store i64 %7, ptr %8, align 8, !tbaa !286
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #57
  %9 = call noundef ptr @_ZNSt15__new_allocatorIPiE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %3, i64 noundef %7, ptr noundef null) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #57
  store ptr %9, ptr %0, align 8, !tbaa !287
  %10 = load i64, ptr %8, align 8, !tbaa !286
  %11 = sub i64 %10, %5
  %12 = lshr i64 %11, 1
  %13 = getelementptr inbounds ptr, ptr %9, i64 %12
  %14 = getelementptr inbounds ptr, ptr %13, i64 %5
  invoke void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %13, ptr noundef nonnull %14) #56
          to label %23 unwind label %15

15:                                               ; preds = %2
  %16 = landingpad { ptr, i32 }
          catch ptr null
  %17 = extractvalue { ptr, i32 } %16, 0
  %18 = call ptr @__cxa_begin_catch(ptr %17) #57
  %19 = load ptr, ptr %0, align 8, !tbaa !287
  call void @_ZdlPv(ptr noundef %19) #58
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  invoke void @__cxa_rethrow() #64
          to label %42 unwind label %20

20:                                               ; preds = %15
  %21 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %22 unwind label %39

22:                                               ; preds = %20
  resume { ptr, i32 } %21

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %25 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 3
  store ptr %13, ptr %25, align 8, !tbaa !288
  %26 = load ptr, ptr %13, align 8, !tbaa !29
  %27 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 1
  store ptr %26, ptr %27, align 8, !tbaa !289
  %28 = getelementptr inbounds i32, ptr %26, i64 128
  %29 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  store ptr %28, ptr %29, align 8, !tbaa !290
  %30 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %31 = getelementptr inbounds ptr, ptr %13, i64 %4
  %32 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  store ptr %31, ptr %32, align 8, !tbaa !288
  %33 = load ptr, ptr %31, align 8, !tbaa !29
  %34 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 1
  store ptr %33, ptr %34, align 8, !tbaa !289
  %35 = getelementptr inbounds i32, ptr %33, i64 128
  %36 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  store ptr %35, ptr %36, align 8, !tbaa !290
  store ptr %26, ptr %24, align 8, !tbaa !291
  %37 = and i64 %1, 127
  %38 = getelementptr inbounds i32, ptr %33, i64 %37
  store ptr %38, ptr %30, align 8, !tbaa !292
  ret void

39:                                               ; preds = %20
  %40 = landingpad { ptr, i32 }
          catch ptr null
  %41 = extractvalue { ptr, i32 } %40, 0
  call void @__clang_call_terminate(ptr %41) #60
  unreachable

42:                                               ; preds = %15
  unreachable
}

; Function Attrs: optsize uwtable
define internal void @_ZN2PP11PowerParser4initEv(ptr noundef nonnull align 8 dereferenceable(2796) %0) #6 align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.PP::Word", align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.PP::Variable", align 8
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"struct.std::pair.28", align 8
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca %"class.PP::Word", align 8
  %11 = alloca %"class.std::__cxx11::basic_string", align 8
  %12 = alloca %"class.PP::Variable", align 8
  %13 = alloca %"class.std::__cxx11::basic_string", align 8
  %14 = alloca %"class.std::__cxx11::basic_string", align 8
  %15 = alloca %"class.std::__cxx11::basic_string", align 8
  %16 = alloca %"struct.std::pair.28", align 8
  %17 = alloca %"class.std::__cxx11::basic_string", align 8
  %18 = alloca %"class.PP::Word", align 8
  %19 = alloca %"class.std::__cxx11::basic_string", align 8
  %20 = alloca %"class.PP::Variable", align 8
  %21 = alloca %"class.std::__cxx11::basic_string", align 8
  %22 = alloca %"class.std::__cxx11::basic_string", align 8
  %23 = alloca %"class.std::__cxx11::basic_string", align 8
  %24 = alloca %"struct.std::pair.28", align 8
  %25 = alloca %"class.std::__cxx11::basic_string", align 8
  %26 = alloca %"class.PP::Word", align 8
  %27 = alloca %"class.std::__cxx11::basic_string", align 8
  %28 = alloca %"class.PP::Variable", align 8
  %29 = alloca %"class.std::__cxx11::basic_string", align 8
  %30 = alloca %"class.std::__cxx11::basic_string", align 8
  %31 = alloca %"class.std::__cxx11::basic_string", align 8
  %32 = alloca %"struct.std::pair.28", align 8
  %33 = alloca %"class.std::__cxx11::basic_string", align 8
  %34 = alloca %"class.PP::Word", align 8
  %35 = alloca %"class.std::__cxx11::basic_string", align 8
  %36 = alloca %"class.PP::Variable", align 8
  %37 = alloca %"class.std::__cxx11::basic_string", align 8
  %38 = alloca %"class.std::__cxx11::basic_string", align 8
  %39 = alloca %"class.std::__cxx11::basic_string", align 8
  %40 = alloca %"struct.std::pair.28", align 8
  %41 = alloca %"class.std::__cxx11::basic_string", align 8
  %42 = alloca %"class.PP::Word", align 8
  %43 = alloca %"class.std::__cxx11::basic_string", align 8
  %44 = alloca %"class.PP::Variable", align 8
  %45 = alloca %"class.std::__cxx11::basic_string", align 8
  %46 = alloca %"class.std::__cxx11::basic_string", align 8
  %47 = alloca %"class.std::__cxx11::basic_string", align 8
  %48 = alloca %"struct.std::pair.28", align 8
  %49 = alloca %"class.std::__cxx11::basic_string", align 8
  %50 = alloca %"class.PP::Word", align 8
  %51 = alloca %"class.std::__cxx11::basic_string", align 8
  %52 = alloca %"class.PP::Variable", align 8
  %53 = alloca %"class.std::__cxx11::basic_string", align 8
  %54 = alloca %"class.std::__cxx11::basic_string", align 8
  %55 = alloca %"class.std::__cxx11::basic_string", align 8
  %56 = alloca %"struct.std::pair.28", align 8
  %57 = alloca %"class.std::__cxx11::basic_string", align 8
  %58 = alloca %"class.PP::Function", align 8
  %59 = alloca %"class.std::__cxx11::basic_string", align 8
  %60 = alloca %"class.std::__cxx11::basic_string", align 8
  %61 = alloca %"class.std::__cxx11::basic_string", align 8
  %62 = alloca %"struct.std::pair.85", align 8
  %63 = alloca %"class.std::__cxx11::basic_string", align 8
  %64 = alloca %"class.PP::Function", align 8
  %65 = alloca %"class.std::__cxx11::basic_string", align 8
  %66 = alloca %"class.std::__cxx11::basic_string", align 8
  %67 = alloca %"class.std::__cxx11::basic_string", align 8
  %68 = alloca %"struct.std::pair.85", align 8
  %69 = alloca %"class.std::__cxx11::basic_string", align 8
  %70 = alloca %"class.PP::Function", align 8
  %71 = alloca %"class.std::__cxx11::basic_string", align 8
  %72 = alloca %"class.std::__cxx11::basic_string", align 8
  %73 = alloca %"class.std::__cxx11::basic_string", align 8
  %74 = alloca %"struct.std::pair.85", align 8
  %75 = alloca %"class.std::__cxx11::basic_string", align 8
  %76 = alloca %"class.PP::Function", align 8
  %77 = alloca %"class.std::__cxx11::basic_string", align 8
  %78 = alloca %"class.std::__cxx11::basic_string", align 8
  %79 = alloca %"class.std::__cxx11::basic_string", align 8
  %80 = alloca %"struct.std::pair.85", align 8
  %81 = alloca %"class.std::__cxx11::basic_string", align 8
  %82 = alloca %"class.PP::Function", align 8
  %83 = alloca %"class.std::__cxx11::basic_string", align 8
  %84 = alloca %"class.std::__cxx11::basic_string", align 8
  %85 = alloca %"class.std::__cxx11::basic_string", align 8
  %86 = alloca %"struct.std::pair.85", align 8
  %87 = alloca %"class.std::__cxx11::basic_string", align 8
  %88 = alloca %"class.PP::Function", align 8
  %89 = alloca %"class.std::__cxx11::basic_string", align 8
  %90 = alloca %"class.std::__cxx11::basic_string", align 8
  %91 = alloca %"class.std::__cxx11::basic_string", align 8
  %92 = alloca %"struct.std::pair.85", align 8
  %93 = alloca %"class.std::__cxx11::basic_string", align 8
  %94 = alloca %"class.PP::Function", align 8
  %95 = alloca %"class.std::__cxx11::basic_string", align 8
  %96 = alloca %"class.std::__cxx11::basic_string", align 8
  %97 = alloca %"class.std::__cxx11::basic_string", align 8
  %98 = alloca %"struct.std::pair.85", align 8
  %99 = alloca %"class.std::__cxx11::basic_string", align 8
  %100 = alloca %"class.PP::Function", align 8
  %101 = alloca %"class.std::__cxx11::basic_string", align 8
  %102 = alloca %"class.std::__cxx11::basic_string", align 8
  %103 = alloca %"class.std::__cxx11::basic_string", align 8
  %104 = alloca %"struct.std::pair.85", align 8
  %105 = alloca %"class.std::__cxx11::basic_string", align 8
  %106 = alloca %"class.PP::Function", align 8
  %107 = alloca %"class.std::__cxx11::basic_string", align 8
  %108 = alloca %"class.std::__cxx11::basic_string", align 8
  %109 = alloca %"class.std::__cxx11::basic_string", align 8
  %110 = alloca %"struct.std::pair.85", align 8
  %111 = alloca %"class.std::__cxx11::basic_string", align 8
  %112 = alloca %"class.PP::Function", align 8
  %113 = alloca %"class.std::__cxx11::basic_string", align 8
  %114 = alloca %"class.std::__cxx11::basic_string", align 8
  %115 = alloca %"class.std::__cxx11::basic_string", align 8
  %116 = alloca %"struct.std::pair.85", align 8
  %117 = alloca %"class.std::__cxx11::basic_string", align 8
  %118 = alloca %"class.PP::Function", align 8
  %119 = alloca %"class.std::__cxx11::basic_string", align 8
  %120 = alloca %"class.std::__cxx11::basic_string", align 8
  %121 = alloca %"class.std::__cxx11::basic_string", align 8
  %122 = alloca %"struct.std::pair.85", align 8
  %123 = alloca %"class.std::__cxx11::basic_string", align 8
  %124 = alloca %"class.PP::Function", align 8
  %125 = alloca %"class.std::__cxx11::basic_string", align 8
  %126 = alloca %"class.std::__cxx11::basic_string", align 8
  %127 = alloca %"class.std::__cxx11::basic_string", align 8
  %128 = alloca %"struct.std::pair.85", align 8
  %129 = alloca %"class.std::__cxx11::basic_string", align 8
  %130 = alloca %"class.PP::Function", align 8
  %131 = alloca %"class.std::__cxx11::basic_string", align 8
  %132 = alloca %"class.std::__cxx11::basic_string", align 8
  %133 = alloca %"class.std::__cxx11::basic_string", align 8
  %134 = alloca %"struct.std::pair.85", align 8
  %135 = alloca %"class.std::__cxx11::basic_string", align 8
  %136 = alloca %"class.PP::Function", align 8
  %137 = alloca %"class.std::__cxx11::basic_string", align 8
  %138 = alloca %"class.std::__cxx11::basic_string", align 8
  %139 = alloca %"class.std::__cxx11::basic_string", align 8
  %140 = alloca %"struct.std::pair.85", align 8
  %141 = alloca %"class.std::__cxx11::basic_string", align 8
  %142 = alloca %"class.PP::Function", align 8
  %143 = alloca %"class.std::__cxx11::basic_string", align 8
  %144 = alloca %"class.std::__cxx11::basic_string", align 8
  %145 = alloca %"class.std::__cxx11::basic_string", align 8
  %146 = alloca %"struct.std::pair.85", align 8
  %147 = alloca %"class.std::__cxx11::basic_string", align 8
  %148 = alloca %"class.PP::Function", align 8
  %149 = alloca %"class.std::__cxx11::basic_string", align 8
  %150 = alloca %"class.std::__cxx11::basic_string", align 8
  %151 = alloca %"class.std::__cxx11::basic_string", align 8
  %152 = alloca %"struct.std::pair.85", align 8
  %153 = alloca %"class.std::__cxx11::basic_string", align 8
  %154 = alloca %"class.PP::Function", align 8
  %155 = alloca %"class.std::__cxx11::basic_string", align 8
  %156 = alloca %"class.std::__cxx11::basic_string", align 8
  %157 = alloca %"class.std::__cxx11::basic_string", align 8
  %158 = alloca %"struct.std::pair.85", align 8
  %159 = alloca %"class.std::__cxx11::basic_string", align 8
  %160 = alloca %"class.PP::Function", align 8
  %161 = alloca %"class.std::__cxx11::basic_string", align 8
  %162 = alloca %"class.std::__cxx11::basic_string", align 8
  %163 = alloca %"class.std::__cxx11::basic_string", align 8
  %164 = alloca %"struct.std::pair.85", align 8
  %165 = alloca %"class.std::__cxx11::basic_string", align 8
  %166 = alloca %"class.PP::Function", align 8
  %167 = alloca %"class.std::__cxx11::basic_string", align 8
  %168 = alloca %"class.std::__cxx11::basic_string", align 8
  %169 = alloca %"class.std::__cxx11::basic_string", align 8
  %170 = alloca %"struct.std::pair.85", align 8
  %171 = alloca %"class.std::__cxx11::basic_string", align 8
  %172 = alloca %"class.PP::Function", align 8
  %173 = alloca %"class.std::__cxx11::basic_string", align 8
  %174 = alloca %"class.std::__cxx11::basic_string", align 8
  %175 = alloca %"class.std::__cxx11::basic_string", align 8
  %176 = alloca %"struct.std::pair.85", align 8
  %177 = alloca %"class.std::__cxx11::basic_string", align 8
  %178 = alloca %"class.PP::Function", align 8
  %179 = alloca %"class.std::__cxx11::basic_string", align 8
  %180 = alloca %"class.std::__cxx11::basic_string", align 8
  %181 = alloca %"class.std::__cxx11::basic_string", align 8
  %182 = alloca %"struct.std::pair.85", align 8
  %183 = alloca %"class.std::__cxx11::basic_string", align 8
  %184 = alloca %"class.PP::Function", align 8
  %185 = alloca %"class.std::__cxx11::basic_string", align 8
  %186 = alloca %"class.std::__cxx11::basic_string", align 8
  %187 = alloca %"class.std::__cxx11::basic_string", align 8
  %188 = alloca %"struct.std::pair.85", align 8
  %189 = alloca %"class.std::__cxx11::basic_string", align 8
  %190 = alloca %"class.PP::Function", align 8
  %191 = alloca %"class.std::__cxx11::basic_string", align 8
  %192 = alloca %"class.std::__cxx11::basic_string", align 8
  %193 = alloca %"class.std::__cxx11::basic_string", align 8
  %194 = alloca %"struct.std::pair.85", align 8
  %195 = alloca %"class.std::__cxx11::basic_string", align 8
  %196 = alloca %"class.PP::Function", align 8
  %197 = alloca %"class.std::__cxx11::basic_string", align 8
  %198 = alloca %"class.std::__cxx11::basic_string", align 8
  %199 = alloca %"class.std::__cxx11::basic_string", align 8
  %200 = alloca %"struct.std::pair.85", align 8
  %201 = alloca %"class.std::__cxx11::basic_string", align 8
  %202 = alloca %"class.PP::Function", align 8
  %203 = alloca %"class.std::__cxx11::basic_string", align 8
  %204 = alloca %"class.std::__cxx11::basic_string", align 8
  %205 = alloca %"class.std::__cxx11::basic_string", align 8
  %206 = alloca %"struct.std::pair.85", align 8
  %207 = alloca %"class.std::__cxx11::basic_string", align 8
  %208 = alloca %"class.PP::Function", align 8
  %209 = alloca %"class.std::__cxx11::basic_string", align 8
  %210 = alloca %"class.std::__cxx11::basic_string", align 8
  %211 = alloca %"class.std::__cxx11::basic_string", align 8
  %212 = alloca %"struct.std::pair.85", align 8
  %213 = alloca %"class.std::__cxx11::basic_string", align 8
  %214 = alloca %"class.PP::Function", align 8
  %215 = alloca %"class.std::__cxx11::basic_string", align 8
  %216 = alloca %"class.std::__cxx11::basic_string", align 8
  %217 = alloca %"class.std::__cxx11::basic_string", align 8
  %218 = alloca %"struct.std::pair.85", align 8
  %219 = alloca %"class.std::__cxx11::basic_string", align 8
  %220 = alloca %"class.PP::Function", align 8
  %221 = alloca %"class.std::__cxx11::basic_string", align 8
  %222 = alloca %"class.std::__cxx11::basic_string", align 8
  %223 = alloca %"class.std::__cxx11::basic_string", align 8
  %224 = alloca %"struct.std::pair.85", align 8
  %225 = alloca %"class.std::__cxx11::basic_string", align 8
  %226 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 6
  store i32 0, ptr %226, align 8, !tbaa !293
  %227 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 12
  %228 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 13
  store ptr %227, ptr %228, align 8, !tbaa !294
  %229 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 33
  store i32 1, ptr %229, align 8, !tbaa !295
  %230 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 20
  store i32 0, ptr %230, align 8, !tbaa !296
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %2) #57
  %231 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %231, ptr %3, align 8, !tbaa !78
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull @.str, ptr noundef nonnull @.str) #56
  invoke void @_ZN2PP4WordC1EdiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE(ptr noundef nonnull align 8 dereferenceable(128) %2, double noundef 0x7FDFFFFFFFFFFFFF, i32 noundef 1, i32 noundef 1, ptr noundef nonnull %3, ptr noundef null) #56
          to label %232 unwind label %2833

232:                                              ; preds = %1
  %233 = load ptr, ptr %3, align 8, !tbaa !23
  %234 = icmp eq ptr %233, %231
  br i1 %234, label %236, label %235

235:                                              ; preds = %232
  call void @_ZdlPv(ptr noundef %233) #58
  br label %236

236:                                              ; preds = %235, %232
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %4) #57
  %237 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %5, i64 0, i32 2
  store ptr %237, ptr %5, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %5, ptr noundef nonnull @.str.123, ptr noundef nonnull getelementptr inbounds ([13 x i8], ptr @.str.123, i64 0, i64 12)) #56
          to label %238 unwind label %2838

238:                                              ; preds = %236
  call void @llvm.experimental.noalias.scope.decl(metadata !297)
  %239 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %6, i64 0, i32 2
  store ptr %239, ptr %6, align 8, !tbaa !78, !alias.scope !297
  %240 = load ptr, ptr %2, align 8, !tbaa !23, !noalias !297
  %241 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %242 = load i64, ptr %241, align 8, !tbaa !49, !noalias !297
  %243 = getelementptr inbounds i8, ptr %240, i64 %242
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %6, ptr noundef %240, ptr noundef %243) #56
          to label %244 unwind label %2840

244:                                              ; preds = %238
  %245 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %7, i64 0, i32 2
  store ptr %245, ptr %7, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %7, ptr noundef nonnull @.str.124, ptr noundef nonnull getelementptr inbounds ([19 x i8], ptr @.str.124, i64 0, i64 18)) #56
          to label %246 unwind label %2842

246:                                              ; preds = %244
  invoke void @_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_(ptr noundef nonnull align 8 dereferenceable(136) %4, ptr noundef nonnull %5, ptr noundef nonnull %6, i1 noundef zeroext true, ptr noundef nonnull %7) #56
          to label %247 unwind label %2844

247:                                              ; preds = %246
  %248 = load ptr, ptr %7, align 8, !tbaa !23
  %249 = icmp eq ptr %248, %245
  br i1 %249, label %251, label %250

250:                                              ; preds = %247
  call void @_ZdlPv(ptr noundef %248) #58
  br label %251

251:                                              ; preds = %250, %247
  %252 = load ptr, ptr %6, align 8, !tbaa !23
  %253 = icmp eq ptr %252, %239
  br i1 %253, label %255, label %254

254:                                              ; preds = %251
  call void @_ZdlPv(ptr noundef %252) #58
  br label %255

255:                                              ; preds = %254, %251
  %256 = load ptr, ptr %5, align 8, !tbaa !23
  %257 = icmp eq ptr %256, %237
  br i1 %257, label %259, label %258

258:                                              ; preds = %255
  call void @_ZdlPv(ptr noundef %256) #58
  br label %259

259:                                              ; preds = %258, %255
  %260 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 8
  call void @llvm.lifetime.start.p0(i64 168, ptr nonnull %8) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %9) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !300)
  %261 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %9, i64 0, i32 2
  store ptr %261, ptr %9, align 8, !tbaa !78, !alias.scope !300
  %262 = load ptr, ptr %4, align 8, !tbaa !23, !noalias !300
  %263 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 1
  %264 = load i64, ptr %263, align 8, !tbaa !49, !noalias !300
  %265 = getelementptr inbounds i8, ptr %262, i64 %264
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %9, ptr noundef %262, ptr noundef %265) #56
          to label %266 unwind label %2859

266:                                              ; preds = %259
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(168) %8, ptr noundef nonnull align 8 dereferenceable(32) %9, ptr noundef nonnull align 8 dereferenceable(136) %4) #56
          to label %267 unwind label %2861

267:                                              ; preds = %266
  %268 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %260, ptr noundef nonnull align 8 dereferenceable(168) %8) #56
          to label %269 unwind label %2863

269:                                              ; preds = %267
  %270 = getelementptr inbounds %"struct.std::pair.28", ptr %8, i64 0, i32 1
  %271 = getelementptr inbounds %"struct.std::pair.28", ptr %8, i64 0, i32 1, i32 8
  %272 = load ptr, ptr %271, align 8, !tbaa !23
  %273 = getelementptr inbounds %"struct.std::pair.28", ptr %8, i64 0, i32 1, i32 8, i32 2
  %274 = icmp eq ptr %272, %273
  br i1 %274, label %276, label %275

275:                                              ; preds = %269
  call void @_ZdlPv(ptr noundef %272) #58
  br label %276

276:                                              ; preds = %275, %269
  %277 = getelementptr inbounds %"struct.std::pair.28", ptr %8, i64 0, i32 1, i32 5
  %278 = load ptr, ptr %277, align 8, !tbaa !65
  %279 = icmp eq ptr %278, null
  br i1 %279, label %281, label %280

280:                                              ; preds = %276
  call void @_ZdlPv(ptr noundef nonnull %278) #58
  br label %281

281:                                              ; preds = %280, %276
  %282 = getelementptr inbounds %"struct.std::pair.28", ptr %8, i64 0, i32 1, i32 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %282) #59
  %283 = load ptr, ptr %270, align 8, !tbaa !23
  %284 = getelementptr inbounds %"struct.std::pair.28", ptr %8, i64 0, i32 1, i32 0, i32 2
  %285 = icmp eq ptr %283, %284
  br i1 %285, label %287, label %286

286:                                              ; preds = %281
  call void @_ZdlPv(ptr noundef %283) #58
  br label %287

287:                                              ; preds = %286, %281
  %288 = load ptr, ptr %8, align 8, !tbaa !23
  %289 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 2
  %290 = icmp eq ptr %288, %289
  br i1 %290, label %292, label %291

291:                                              ; preds = %287
  call void @_ZdlPv(ptr noundef %288) #58
  br label %292

292:                                              ; preds = %291, %287
  %293 = load ptr, ptr %9, align 8, !tbaa !23
  %294 = icmp eq ptr %293, %261
  br i1 %294, label %296, label %295

295:                                              ; preds = %292
  call void @_ZdlPv(ptr noundef %293) #58
  br label %296

296:                                              ; preds = %295, %292
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #57
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %8) #57
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %10) #57
  %297 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %11, i64 0, i32 2
  store ptr %297, ptr %11, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %11, ptr noundef nonnull @.str, ptr noundef nonnull @.str) #56
          to label %298 unwind label %2872

298:                                              ; preds = %296
  invoke void @_ZN2PP4WordC1EdiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE(ptr noundef nonnull align 8 dereferenceable(128) %10, double noundef 0x47EFFFFFE0000000, i32 noundef 1, i32 noundef 1, ptr noundef nonnull %11, ptr noundef null) #56
          to label %299 unwind label %2874

299:                                              ; preds = %298
  %300 = load ptr, ptr %11, align 8, !tbaa !23
  %301 = icmp eq ptr %300, %297
  br i1 %301, label %303, label %302

302:                                              ; preds = %299
  call void @_ZdlPv(ptr noundef %300) #58
  br label %303

303:                                              ; preds = %302, %299
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %12) #57
  %304 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %13, i64 0, i32 2
  store ptr %304, ptr %13, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull @.str.125, ptr noundef nonnull getelementptr inbounds ([12 x i8], ptr @.str.125, i64 0, i64 11)) #56
          to label %305 unwind label %2879

305:                                              ; preds = %303
  call void @llvm.experimental.noalias.scope.decl(metadata !303)
  %306 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %14, i64 0, i32 2
  store ptr %306, ptr %14, align 8, !tbaa !78, !alias.scope !303
  %307 = load ptr, ptr %10, align 8, !tbaa !23, !noalias !303
  %308 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 1
  %309 = load i64, ptr %308, align 8, !tbaa !49, !noalias !303
  %310 = getelementptr inbounds i8, ptr %307, i64 %309
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %14, ptr noundef %307, ptr noundef %310) #56
          to label %311 unwind label %2881

311:                                              ; preds = %305
  %312 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %15, i64 0, i32 2
  store ptr %312, ptr %15, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %15, ptr noundef nonnull @.str.126, ptr noundef nonnull getelementptr inbounds ([14 x i8], ptr @.str.126, i64 0, i64 13)) #56
          to label %313 unwind label %2883

313:                                              ; preds = %311
  invoke void @_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_(ptr noundef nonnull align 8 dereferenceable(136) %12, ptr noundef nonnull %13, ptr noundef nonnull %14, i1 noundef zeroext true, ptr noundef nonnull %15) #56
          to label %314 unwind label %2885

314:                                              ; preds = %313
  %315 = load ptr, ptr %15, align 8, !tbaa !23
  %316 = icmp eq ptr %315, %312
  br i1 %316, label %318, label %317

317:                                              ; preds = %314
  call void @_ZdlPv(ptr noundef %315) #58
  br label %318

318:                                              ; preds = %317, %314
  %319 = load ptr, ptr %14, align 8, !tbaa !23
  %320 = icmp eq ptr %319, %306
  br i1 %320, label %322, label %321

321:                                              ; preds = %318
  call void @_ZdlPv(ptr noundef %319) #58
  br label %322

322:                                              ; preds = %321, %318
  %323 = load ptr, ptr %13, align 8, !tbaa !23
  %324 = icmp eq ptr %323, %304
  br i1 %324, label %326, label %325

325:                                              ; preds = %322
  call void @_ZdlPv(ptr noundef %323) #58
  br label %326

326:                                              ; preds = %325, %322
  call void @llvm.lifetime.start.p0(i64 168, ptr nonnull %16) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %17) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !306)
  %327 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %17, i64 0, i32 2
  store ptr %327, ptr %17, align 8, !tbaa !78, !alias.scope !306
  %328 = load ptr, ptr %12, align 8, !tbaa !23, !noalias !306
  %329 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 1
  %330 = load i64, ptr %329, align 8, !tbaa !49, !noalias !306
  %331 = getelementptr inbounds i8, ptr %328, i64 %330
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %17, ptr noundef %328, ptr noundef %331) #56
          to label %332 unwind label %2900

332:                                              ; preds = %326
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(168) %16, ptr noundef nonnull align 8 dereferenceable(32) %17, ptr noundef nonnull align 8 dereferenceable(136) %12) #56
          to label %333 unwind label %2902

333:                                              ; preds = %332
  %334 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %260, ptr noundef nonnull align 8 dereferenceable(168) %16) #56
          to label %335 unwind label %2904

335:                                              ; preds = %333
  %336 = getelementptr inbounds %"struct.std::pair.28", ptr %16, i64 0, i32 1
  %337 = getelementptr inbounds %"struct.std::pair.28", ptr %16, i64 0, i32 1, i32 8
  %338 = load ptr, ptr %337, align 8, !tbaa !23
  %339 = getelementptr inbounds %"struct.std::pair.28", ptr %16, i64 0, i32 1, i32 8, i32 2
  %340 = icmp eq ptr %338, %339
  br i1 %340, label %342, label %341

341:                                              ; preds = %335
  call void @_ZdlPv(ptr noundef %338) #58
  br label %342

342:                                              ; preds = %341, %335
  %343 = getelementptr inbounds %"struct.std::pair.28", ptr %16, i64 0, i32 1, i32 5
  %344 = load ptr, ptr %343, align 8, !tbaa !65
  %345 = icmp eq ptr %344, null
  br i1 %345, label %347, label %346

346:                                              ; preds = %342
  call void @_ZdlPv(ptr noundef nonnull %344) #58
  br label %347

347:                                              ; preds = %346, %342
  %348 = getelementptr inbounds %"struct.std::pair.28", ptr %16, i64 0, i32 1, i32 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %348) #59
  %349 = load ptr, ptr %336, align 8, !tbaa !23
  %350 = getelementptr inbounds %"struct.std::pair.28", ptr %16, i64 0, i32 1, i32 0, i32 2
  %351 = icmp eq ptr %349, %350
  br i1 %351, label %353, label %352

352:                                              ; preds = %347
  call void @_ZdlPv(ptr noundef %349) #58
  br label %353

353:                                              ; preds = %352, %347
  %354 = load ptr, ptr %16, align 8, !tbaa !23
  %355 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %16, i64 0, i32 2
  %356 = icmp eq ptr %354, %355
  br i1 %356, label %358, label %357

357:                                              ; preds = %353
  call void @_ZdlPv(ptr noundef %354) #58
  br label %358

358:                                              ; preds = %357, %353
  %359 = load ptr, ptr %17, align 8, !tbaa !23
  %360 = icmp eq ptr %359, %327
  br i1 %360, label %362, label %361

361:                                              ; preds = %358
  call void @_ZdlPv(ptr noundef %359) #58
  br label %362

362:                                              ; preds = %361, %358
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %17) #57
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %16) #57
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %18) #57
  %363 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 0, i32 2
  store ptr %363, ptr %19, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %19, ptr noundef nonnull @.str, ptr noundef nonnull @.str) #56
          to label %364 unwind label %2913

364:                                              ; preds = %362
  invoke void @_ZN2PP4WordC1EiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE(ptr noundef nonnull align 8 dereferenceable(128) %18, i32 noundef 2147483647, i32 noundef 1, i32 noundef 1, ptr noundef nonnull %19, ptr noundef null) #56
          to label %365 unwind label %2915

365:                                              ; preds = %364
  %366 = load ptr, ptr %19, align 8, !tbaa !23
  %367 = icmp eq ptr %366, %363
  br i1 %367, label %369, label %368

368:                                              ; preds = %365
  call void @_ZdlPv(ptr noundef %366) #58
  br label %369

369:                                              ; preds = %368, %365
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %20) #57
  %370 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %21, i64 0, i32 2
  store ptr %370, ptr %21, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %21, ptr noundef nonnull @.str.127, ptr noundef nonnull getelementptr inbounds ([10 x i8], ptr @.str.127, i64 0, i64 9)) #56
          to label %371 unwind label %2920

371:                                              ; preds = %369
  call void @llvm.experimental.noalias.scope.decl(metadata !309)
  %372 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %22, i64 0, i32 2
  store ptr %372, ptr %22, align 8, !tbaa !78, !alias.scope !309
  %373 = load ptr, ptr %18, align 8, !tbaa !23, !noalias !309
  %374 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %18, i64 0, i32 1
  %375 = load i64, ptr %374, align 8, !tbaa !49, !noalias !309
  %376 = getelementptr inbounds i8, ptr %373, i64 %375
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %22, ptr noundef %373, ptr noundef %376) #56
          to label %377 unwind label %2922

377:                                              ; preds = %371
  %378 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %23, i64 0, i32 2
  store ptr %378, ptr %23, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %23, ptr noundef nonnull @.str.128, ptr noundef nonnull getelementptr inbounds ([16 x i8], ptr @.str.128, i64 0, i64 15)) #56
          to label %379 unwind label %2924

379:                                              ; preds = %377
  invoke void @_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_(ptr noundef nonnull align 8 dereferenceable(136) %20, ptr noundef nonnull %21, ptr noundef nonnull %22, i1 noundef zeroext true, ptr noundef nonnull %23) #56
          to label %380 unwind label %2926

380:                                              ; preds = %379
  %381 = load ptr, ptr %23, align 8, !tbaa !23
  %382 = icmp eq ptr %381, %378
  br i1 %382, label %384, label %383

383:                                              ; preds = %380
  call void @_ZdlPv(ptr noundef %381) #58
  br label %384

384:                                              ; preds = %383, %380
  %385 = load ptr, ptr %22, align 8, !tbaa !23
  %386 = icmp eq ptr %385, %372
  br i1 %386, label %388, label %387

387:                                              ; preds = %384
  call void @_ZdlPv(ptr noundef %385) #58
  br label %388

388:                                              ; preds = %387, %384
  %389 = load ptr, ptr %21, align 8, !tbaa !23
  %390 = icmp eq ptr %389, %370
  br i1 %390, label %392, label %391

391:                                              ; preds = %388
  call void @_ZdlPv(ptr noundef %389) #58
  br label %392

392:                                              ; preds = %391, %388
  call void @llvm.lifetime.start.p0(i64 168, ptr nonnull %24) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %25) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !312)
  %393 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %25, i64 0, i32 2
  store ptr %393, ptr %25, align 8, !tbaa !78, !alias.scope !312
  %394 = load ptr, ptr %20, align 8, !tbaa !23, !noalias !312
  %395 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %20, i64 0, i32 1
  %396 = load i64, ptr %395, align 8, !tbaa !49, !noalias !312
  %397 = getelementptr inbounds i8, ptr %394, i64 %396
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %25, ptr noundef %394, ptr noundef %397) #56
          to label %398 unwind label %2941

398:                                              ; preds = %392
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(168) %24, ptr noundef nonnull align 8 dereferenceable(32) %25, ptr noundef nonnull align 8 dereferenceable(136) %20) #56
          to label %399 unwind label %2943

399:                                              ; preds = %398
  %400 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %260, ptr noundef nonnull align 8 dereferenceable(168) %24) #56
          to label %401 unwind label %2945

401:                                              ; preds = %399
  %402 = getelementptr inbounds %"struct.std::pair.28", ptr %24, i64 0, i32 1
  %403 = getelementptr inbounds %"struct.std::pair.28", ptr %24, i64 0, i32 1, i32 8
  %404 = load ptr, ptr %403, align 8, !tbaa !23
  %405 = getelementptr inbounds %"struct.std::pair.28", ptr %24, i64 0, i32 1, i32 8, i32 2
  %406 = icmp eq ptr %404, %405
  br i1 %406, label %408, label %407

407:                                              ; preds = %401
  call void @_ZdlPv(ptr noundef %404) #58
  br label %408

408:                                              ; preds = %407, %401
  %409 = getelementptr inbounds %"struct.std::pair.28", ptr %24, i64 0, i32 1, i32 5
  %410 = load ptr, ptr %409, align 8, !tbaa !65
  %411 = icmp eq ptr %410, null
  br i1 %411, label %413, label %412

412:                                              ; preds = %408
  call void @_ZdlPv(ptr noundef nonnull %410) #58
  br label %413

413:                                              ; preds = %412, %408
  %414 = getelementptr inbounds %"struct.std::pair.28", ptr %24, i64 0, i32 1, i32 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %414) #59
  %415 = load ptr, ptr %402, align 8, !tbaa !23
  %416 = getelementptr inbounds %"struct.std::pair.28", ptr %24, i64 0, i32 1, i32 0, i32 2
  %417 = icmp eq ptr %415, %416
  br i1 %417, label %419, label %418

418:                                              ; preds = %413
  call void @_ZdlPv(ptr noundef %415) #58
  br label %419

419:                                              ; preds = %418, %413
  %420 = load ptr, ptr %24, align 8, !tbaa !23
  %421 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %24, i64 0, i32 2
  %422 = icmp eq ptr %420, %421
  br i1 %422, label %424, label %423

423:                                              ; preds = %419
  call void @_ZdlPv(ptr noundef %420) #58
  br label %424

424:                                              ; preds = %423, %419
  %425 = load ptr, ptr %25, align 8, !tbaa !23
  %426 = icmp eq ptr %425, %393
  br i1 %426, label %428, label %427

427:                                              ; preds = %424
  call void @_ZdlPv(ptr noundef %425) #58
  br label %428

428:                                              ; preds = %427, %424
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %25) #57
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %24) #57
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %26) #57
  %429 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %27, i64 0, i32 2
  store ptr %429, ptr %27, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %27, ptr noundef nonnull @.str, ptr noundef nonnull @.str) #56
          to label %430 unwind label %2954

430:                                              ; preds = %428
  invoke void @_ZN2PP4WordC1EdiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE(ptr noundef nonnull align 8 dereferenceable(128) %26, double noundef 0x10000000000000, i32 noundef 1, i32 noundef 1, ptr noundef nonnull %27, ptr noundef null) #56
          to label %431 unwind label %2956

431:                                              ; preds = %430
  %432 = load ptr, ptr %27, align 8, !tbaa !23
  %433 = icmp eq ptr %432, %429
  br i1 %433, label %435, label %434

434:                                              ; preds = %431
  call void @_ZdlPv(ptr noundef %432) #58
  br label %435

435:                                              ; preds = %434, %431
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %28) #57
  %436 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %29, i64 0, i32 2
  store ptr %436, ptr %29, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %29, ptr noundef nonnull @.str.129, ptr noundef nonnull getelementptr inbounds ([13 x i8], ptr @.str.129, i64 0, i64 12)) #56
          to label %437 unwind label %2961

437:                                              ; preds = %435
  call void @llvm.experimental.noalias.scope.decl(metadata !315)
  %438 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %30, i64 0, i32 2
  store ptr %438, ptr %30, align 8, !tbaa !78, !alias.scope !315
  %439 = load ptr, ptr %26, align 8, !tbaa !23, !noalias !315
  %440 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %26, i64 0, i32 1
  %441 = load i64, ptr %440, align 8, !tbaa !49, !noalias !315
  %442 = getelementptr inbounds i8, ptr %439, i64 %441
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %30, ptr noundef %439, ptr noundef %442) #56
          to label %443 unwind label %2963

443:                                              ; preds = %437
  %444 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %31, i64 0, i32 2
  store ptr %444, ptr %31, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %31, ptr noundef nonnull @.str.130, ptr noundef nonnull getelementptr inbounds ([15 x i8], ptr @.str.130, i64 0, i64 14)) #56
          to label %445 unwind label %2965

445:                                              ; preds = %443
  invoke void @_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_(ptr noundef nonnull align 8 dereferenceable(136) %28, ptr noundef nonnull %29, ptr noundef nonnull %30, i1 noundef zeroext true, ptr noundef nonnull %31) #56
          to label %446 unwind label %2967

446:                                              ; preds = %445
  %447 = load ptr, ptr %31, align 8, !tbaa !23
  %448 = icmp eq ptr %447, %444
  br i1 %448, label %450, label %449

449:                                              ; preds = %446
  call void @_ZdlPv(ptr noundef %447) #58
  br label %450

450:                                              ; preds = %449, %446
  %451 = load ptr, ptr %30, align 8, !tbaa !23
  %452 = icmp eq ptr %451, %438
  br i1 %452, label %454, label %453

453:                                              ; preds = %450
  call void @_ZdlPv(ptr noundef %451) #58
  br label %454

454:                                              ; preds = %453, %450
  %455 = load ptr, ptr %29, align 8, !tbaa !23
  %456 = icmp eq ptr %455, %436
  br i1 %456, label %458, label %457

457:                                              ; preds = %454
  call void @_ZdlPv(ptr noundef %455) #58
  br label %458

458:                                              ; preds = %457, %454
  call void @llvm.lifetime.start.p0(i64 168, ptr nonnull %32) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %33) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !318)
  %459 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %33, i64 0, i32 2
  store ptr %459, ptr %33, align 8, !tbaa !78, !alias.scope !318
  %460 = load ptr, ptr %28, align 8, !tbaa !23, !noalias !318
  %461 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 1
  %462 = load i64, ptr %461, align 8, !tbaa !49, !noalias !318
  %463 = getelementptr inbounds i8, ptr %460, i64 %462
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %33, ptr noundef %460, ptr noundef %463) #56
          to label %464 unwind label %2982

464:                                              ; preds = %458
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(168) %32, ptr noundef nonnull align 8 dereferenceable(32) %33, ptr noundef nonnull align 8 dereferenceable(136) %28) #56
          to label %465 unwind label %2984

465:                                              ; preds = %464
  %466 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %260, ptr noundef nonnull align 8 dereferenceable(168) %32) #56
          to label %467 unwind label %2986

467:                                              ; preds = %465
  %468 = getelementptr inbounds %"struct.std::pair.28", ptr %32, i64 0, i32 1
  %469 = getelementptr inbounds %"struct.std::pair.28", ptr %32, i64 0, i32 1, i32 8
  %470 = load ptr, ptr %469, align 8, !tbaa !23
  %471 = getelementptr inbounds %"struct.std::pair.28", ptr %32, i64 0, i32 1, i32 8, i32 2
  %472 = icmp eq ptr %470, %471
  br i1 %472, label %474, label %473

473:                                              ; preds = %467
  call void @_ZdlPv(ptr noundef %470) #58
  br label %474

474:                                              ; preds = %473, %467
  %475 = getelementptr inbounds %"struct.std::pair.28", ptr %32, i64 0, i32 1, i32 5
  %476 = load ptr, ptr %475, align 8, !tbaa !65
  %477 = icmp eq ptr %476, null
  br i1 %477, label %479, label %478

478:                                              ; preds = %474
  call void @_ZdlPv(ptr noundef nonnull %476) #58
  br label %479

479:                                              ; preds = %478, %474
  %480 = getelementptr inbounds %"struct.std::pair.28", ptr %32, i64 0, i32 1, i32 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %480) #59
  %481 = load ptr, ptr %468, align 8, !tbaa !23
  %482 = getelementptr inbounds %"struct.std::pair.28", ptr %32, i64 0, i32 1, i32 0, i32 2
  %483 = icmp eq ptr %481, %482
  br i1 %483, label %485, label %484

484:                                              ; preds = %479
  call void @_ZdlPv(ptr noundef %481) #58
  br label %485

485:                                              ; preds = %484, %479
  %486 = load ptr, ptr %32, align 8, !tbaa !23
  %487 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %32, i64 0, i32 2
  %488 = icmp eq ptr %486, %487
  br i1 %488, label %490, label %489

489:                                              ; preds = %485
  call void @_ZdlPv(ptr noundef %486) #58
  br label %490

490:                                              ; preds = %489, %485
  %491 = load ptr, ptr %33, align 8, !tbaa !23
  %492 = icmp eq ptr %491, %459
  br i1 %492, label %494, label %493

493:                                              ; preds = %490
  call void @_ZdlPv(ptr noundef %491) #58
  br label %494

494:                                              ; preds = %493, %490
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %33) #57
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %32) #57
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %34) #57
  %495 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %35, i64 0, i32 2
  store ptr %495, ptr %35, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %35, ptr noundef nonnull @.str, ptr noundef nonnull @.str) #56
          to label %496 unwind label %2995

496:                                              ; preds = %494
  invoke void @_ZN2PP4WordC1EdiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE(ptr noundef nonnull align 8 dereferenceable(128) %34, double noundef 0x3810000000000000, i32 noundef 1, i32 noundef 1, ptr noundef nonnull %35, ptr noundef null) #56
          to label %497 unwind label %2997

497:                                              ; preds = %496
  %498 = load ptr, ptr %35, align 8, !tbaa !23
  %499 = icmp eq ptr %498, %495
  br i1 %499, label %501, label %500

500:                                              ; preds = %497
  call void @_ZdlPv(ptr noundef %498) #58
  br label %501

501:                                              ; preds = %500, %497
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %36) #57
  %502 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %37, i64 0, i32 2
  store ptr %502, ptr %37, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %37, ptr noundef nonnull @.str.131, ptr noundef nonnull getelementptr inbounds ([12 x i8], ptr @.str.131, i64 0, i64 11)) #56
          to label %503 unwind label %3002

503:                                              ; preds = %501
  call void @llvm.experimental.noalias.scope.decl(metadata !321)
  %504 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %38, i64 0, i32 2
  store ptr %504, ptr %38, align 8, !tbaa !78, !alias.scope !321
  %505 = load ptr, ptr %34, align 8, !tbaa !23, !noalias !321
  %506 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %34, i64 0, i32 1
  %507 = load i64, ptr %506, align 8, !tbaa !49, !noalias !321
  %508 = getelementptr inbounds i8, ptr %505, i64 %507
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %38, ptr noundef %505, ptr noundef %508) #56
          to label %509 unwind label %3004

509:                                              ; preds = %503
  %510 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %39, i64 0, i32 2
  store ptr %510, ptr %39, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %39, ptr noundef nonnull @.str.132, ptr noundef nonnull getelementptr inbounds ([14 x i8], ptr @.str.132, i64 0, i64 13)) #56
          to label %511 unwind label %3006

511:                                              ; preds = %509
  invoke void @_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_(ptr noundef nonnull align 8 dereferenceable(136) %36, ptr noundef nonnull %37, ptr noundef nonnull %38, i1 noundef zeroext true, ptr noundef nonnull %39) #56
          to label %512 unwind label %3008

512:                                              ; preds = %511
  %513 = load ptr, ptr %39, align 8, !tbaa !23
  %514 = icmp eq ptr %513, %510
  br i1 %514, label %516, label %515

515:                                              ; preds = %512
  call void @_ZdlPv(ptr noundef %513) #58
  br label %516

516:                                              ; preds = %515, %512
  %517 = load ptr, ptr %38, align 8, !tbaa !23
  %518 = icmp eq ptr %517, %504
  br i1 %518, label %520, label %519

519:                                              ; preds = %516
  call void @_ZdlPv(ptr noundef %517) #58
  br label %520

520:                                              ; preds = %519, %516
  %521 = load ptr, ptr %37, align 8, !tbaa !23
  %522 = icmp eq ptr %521, %502
  br i1 %522, label %524, label %523

523:                                              ; preds = %520
  call void @_ZdlPv(ptr noundef %521) #58
  br label %524

524:                                              ; preds = %523, %520
  call void @llvm.lifetime.start.p0(i64 168, ptr nonnull %40) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %41) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !324)
  %525 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %41, i64 0, i32 2
  store ptr %525, ptr %41, align 8, !tbaa !78, !alias.scope !324
  %526 = load ptr, ptr %36, align 8, !tbaa !23, !noalias !324
  %527 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %36, i64 0, i32 1
  %528 = load i64, ptr %527, align 8, !tbaa !49, !noalias !324
  %529 = getelementptr inbounds i8, ptr %526, i64 %528
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %41, ptr noundef %526, ptr noundef %529) #56
          to label %530 unwind label %3023

530:                                              ; preds = %524
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(168) %40, ptr noundef nonnull align 8 dereferenceable(32) %41, ptr noundef nonnull align 8 dereferenceable(136) %36) #56
          to label %531 unwind label %3025

531:                                              ; preds = %530
  %532 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %260, ptr noundef nonnull align 8 dereferenceable(168) %40) #56
          to label %533 unwind label %3027

533:                                              ; preds = %531
  %534 = getelementptr inbounds %"struct.std::pair.28", ptr %40, i64 0, i32 1
  %535 = getelementptr inbounds %"struct.std::pair.28", ptr %40, i64 0, i32 1, i32 8
  %536 = load ptr, ptr %535, align 8, !tbaa !23
  %537 = getelementptr inbounds %"struct.std::pair.28", ptr %40, i64 0, i32 1, i32 8, i32 2
  %538 = icmp eq ptr %536, %537
  br i1 %538, label %540, label %539

539:                                              ; preds = %533
  call void @_ZdlPv(ptr noundef %536) #58
  br label %540

540:                                              ; preds = %539, %533
  %541 = getelementptr inbounds %"struct.std::pair.28", ptr %40, i64 0, i32 1, i32 5
  %542 = load ptr, ptr %541, align 8, !tbaa !65
  %543 = icmp eq ptr %542, null
  br i1 %543, label %545, label %544

544:                                              ; preds = %540
  call void @_ZdlPv(ptr noundef nonnull %542) #58
  br label %545

545:                                              ; preds = %544, %540
  %546 = getelementptr inbounds %"struct.std::pair.28", ptr %40, i64 0, i32 1, i32 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %546) #59
  %547 = load ptr, ptr %534, align 8, !tbaa !23
  %548 = getelementptr inbounds %"struct.std::pair.28", ptr %40, i64 0, i32 1, i32 0, i32 2
  %549 = icmp eq ptr %547, %548
  br i1 %549, label %551, label %550

550:                                              ; preds = %545
  call void @_ZdlPv(ptr noundef %547) #58
  br label %551

551:                                              ; preds = %550, %545
  %552 = load ptr, ptr %40, align 8, !tbaa !23
  %553 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %40, i64 0, i32 2
  %554 = icmp eq ptr %552, %553
  br i1 %554, label %556, label %555

555:                                              ; preds = %551
  call void @_ZdlPv(ptr noundef %552) #58
  br label %556

556:                                              ; preds = %555, %551
  %557 = load ptr, ptr %41, align 8, !tbaa !23
  %558 = icmp eq ptr %557, %525
  br i1 %558, label %560, label %559

559:                                              ; preds = %556
  call void @_ZdlPv(ptr noundef %557) #58
  br label %560

560:                                              ; preds = %559, %556
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %41) #57
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %40) #57
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %42) #57
  %561 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %43, i64 0, i32 2
  store ptr %561, ptr %43, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %43, ptr noundef nonnull @.str, ptr noundef nonnull @.str) #56
          to label %562 unwind label %3036

562:                                              ; preds = %560
  invoke void @_ZN2PP4WordC1EiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE(ptr noundef nonnull align 8 dereferenceable(128) %42, i32 noundef -2147483648, i32 noundef 1, i32 noundef 1, ptr noundef nonnull %43, ptr noundef null) #56
          to label %563 unwind label %3038

563:                                              ; preds = %562
  %564 = load ptr, ptr %43, align 8, !tbaa !23
  %565 = icmp eq ptr %564, %561
  br i1 %565, label %567, label %566

566:                                              ; preds = %563
  call void @_ZdlPv(ptr noundef %564) #58
  br label %567

567:                                              ; preds = %566, %563
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %44) #57
  %568 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %45, i64 0, i32 2
  store ptr %568, ptr %45, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %45, ptr noundef nonnull @.str.133, ptr noundef nonnull getelementptr inbounds ([10 x i8], ptr @.str.133, i64 0, i64 9)) #56
          to label %569 unwind label %3043

569:                                              ; preds = %567
  call void @llvm.experimental.noalias.scope.decl(metadata !327)
  %570 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %46, i64 0, i32 2
  store ptr %570, ptr %46, align 8, !tbaa !78, !alias.scope !327
  %571 = load ptr, ptr %42, align 8, !tbaa !23, !noalias !327
  %572 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %42, i64 0, i32 1
  %573 = load i64, ptr %572, align 8, !tbaa !49, !noalias !327
  %574 = getelementptr inbounds i8, ptr %571, i64 %573
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %46, ptr noundef %571, ptr noundef %574) #56
          to label %575 unwind label %3045

575:                                              ; preds = %569
  %576 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %47, i64 0, i32 2
  store ptr %576, ptr %47, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %47, ptr noundef nonnull @.str.134, ptr noundef nonnull getelementptr inbounds ([16 x i8], ptr @.str.134, i64 0, i64 15)) #56
          to label %577 unwind label %3047

577:                                              ; preds = %575
  invoke void @_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_(ptr noundef nonnull align 8 dereferenceable(136) %44, ptr noundef nonnull %45, ptr noundef nonnull %46, i1 noundef zeroext true, ptr noundef nonnull %47) #56
          to label %578 unwind label %3049

578:                                              ; preds = %577
  %579 = load ptr, ptr %47, align 8, !tbaa !23
  %580 = icmp eq ptr %579, %576
  br i1 %580, label %582, label %581

581:                                              ; preds = %578
  call void @_ZdlPv(ptr noundef %579) #58
  br label %582

582:                                              ; preds = %581, %578
  %583 = load ptr, ptr %46, align 8, !tbaa !23
  %584 = icmp eq ptr %583, %570
  br i1 %584, label %586, label %585

585:                                              ; preds = %582
  call void @_ZdlPv(ptr noundef %583) #58
  br label %586

586:                                              ; preds = %585, %582
  %587 = load ptr, ptr %45, align 8, !tbaa !23
  %588 = icmp eq ptr %587, %568
  br i1 %588, label %590, label %589

589:                                              ; preds = %586
  call void @_ZdlPv(ptr noundef %587) #58
  br label %590

590:                                              ; preds = %589, %586
  call void @llvm.lifetime.start.p0(i64 168, ptr nonnull %48) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %49) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !330)
  %591 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %49, i64 0, i32 2
  store ptr %591, ptr %49, align 8, !tbaa !78, !alias.scope !330
  %592 = load ptr, ptr %44, align 8, !tbaa !23, !noalias !330
  %593 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %44, i64 0, i32 1
  %594 = load i64, ptr %593, align 8, !tbaa !49, !noalias !330
  %595 = getelementptr inbounds i8, ptr %592, i64 %594
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %49, ptr noundef %592, ptr noundef %595) #56
          to label %596 unwind label %3064

596:                                              ; preds = %590
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(168) %48, ptr noundef nonnull align 8 dereferenceable(32) %49, ptr noundef nonnull align 8 dereferenceable(136) %44) #56
          to label %597 unwind label %3066

597:                                              ; preds = %596
  %598 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %260, ptr noundef nonnull align 8 dereferenceable(168) %48) #56
          to label %599 unwind label %3068

599:                                              ; preds = %597
  %600 = getelementptr inbounds %"struct.std::pair.28", ptr %48, i64 0, i32 1
  %601 = getelementptr inbounds %"struct.std::pair.28", ptr %48, i64 0, i32 1, i32 8
  %602 = load ptr, ptr %601, align 8, !tbaa !23
  %603 = getelementptr inbounds %"struct.std::pair.28", ptr %48, i64 0, i32 1, i32 8, i32 2
  %604 = icmp eq ptr %602, %603
  br i1 %604, label %606, label %605

605:                                              ; preds = %599
  call void @_ZdlPv(ptr noundef %602) #58
  br label %606

606:                                              ; preds = %605, %599
  %607 = getelementptr inbounds %"struct.std::pair.28", ptr %48, i64 0, i32 1, i32 5
  %608 = load ptr, ptr %607, align 8, !tbaa !65
  %609 = icmp eq ptr %608, null
  br i1 %609, label %611, label %610

610:                                              ; preds = %606
  call void @_ZdlPv(ptr noundef nonnull %608) #58
  br label %611

611:                                              ; preds = %610, %606
  %612 = getelementptr inbounds %"struct.std::pair.28", ptr %48, i64 0, i32 1, i32 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %612) #59
  %613 = load ptr, ptr %600, align 8, !tbaa !23
  %614 = getelementptr inbounds %"struct.std::pair.28", ptr %48, i64 0, i32 1, i32 0, i32 2
  %615 = icmp eq ptr %613, %614
  br i1 %615, label %617, label %616

616:                                              ; preds = %611
  call void @_ZdlPv(ptr noundef %613) #58
  br label %617

617:                                              ; preds = %616, %611
  %618 = load ptr, ptr %48, align 8, !tbaa !23
  %619 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %48, i64 0, i32 2
  %620 = icmp eq ptr %618, %619
  br i1 %620, label %622, label %621

621:                                              ; preds = %617
  call void @_ZdlPv(ptr noundef %618) #58
  br label %622

622:                                              ; preds = %621, %617
  %623 = load ptr, ptr %49, align 8, !tbaa !23
  %624 = icmp eq ptr %623, %591
  br i1 %624, label %626, label %625

625:                                              ; preds = %622
  call void @_ZdlPv(ptr noundef %623) #58
  br label %626

626:                                              ; preds = %625, %622
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %49) #57
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %48) #57
  %627 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 2
  %628 = load ptr, ptr %627, align 8, !tbaa !197
  %629 = getelementptr inbounds %"class.PP::Comm", ptr %628, i64 0, i32 1
  %630 = load i32, ptr %629, align 4, !tbaa !112
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %50) #57
  %631 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %51, i64 0, i32 2
  store ptr %631, ptr %51, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %51, ptr noundef nonnull @.str, ptr noundef nonnull @.str) #56
          to label %632 unwind label %3077

632:                                              ; preds = %626
  invoke void @_ZN2PP4WordC1EiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE(ptr noundef nonnull align 8 dereferenceable(128) %50, i32 noundef %630, i32 noundef 1, i32 noundef 1, ptr noundef nonnull %51, ptr noundef null) #56
          to label %633 unwind label %3079

633:                                              ; preds = %632
  %634 = load ptr, ptr %51, align 8, !tbaa !23
  %635 = icmp eq ptr %634, %631
  br i1 %635, label %637, label %636

636:                                              ; preds = %633
  call void @_ZdlPv(ptr noundef %634) #58
  br label %637

637:                                              ; preds = %636, %633
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %52) #57
  %638 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %53, i64 0, i32 2
  store ptr %638, ptr %53, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %53, ptr noundef nonnull @.str.135, ptr noundef nonnull getelementptr inbounds ([12 x i8], ptr @.str.135, i64 0, i64 11)) #56
          to label %639 unwind label %3084

639:                                              ; preds = %637
  call void @llvm.experimental.noalias.scope.decl(metadata !333)
  %640 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %54, i64 0, i32 2
  store ptr %640, ptr %54, align 8, !tbaa !78, !alias.scope !333
  %641 = load ptr, ptr %50, align 8, !tbaa !23, !noalias !333
  %642 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %50, i64 0, i32 1
  %643 = load i64, ptr %642, align 8, !tbaa !49, !noalias !333
  %644 = getelementptr inbounds i8, ptr %641, i64 %643
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %54, ptr noundef %641, ptr noundef %644) #56
          to label %645 unwind label %3086

645:                                              ; preds = %639
  %646 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %55, i64 0, i32 2
  store ptr %646, ptr %55, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %55, ptr noundef nonnull @.str.136, ptr noundef nonnull getelementptr inbounds ([22 x i8], ptr @.str.136, i64 0, i64 21)) #56
          to label %647 unwind label %3088

647:                                              ; preds = %645
  invoke void @_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_(ptr noundef nonnull align 8 dereferenceable(136) %52, ptr noundef nonnull %53, ptr noundef nonnull %54, i1 noundef zeroext true, ptr noundef nonnull %55) #56
          to label %648 unwind label %3090

648:                                              ; preds = %647
  %649 = load ptr, ptr %55, align 8, !tbaa !23
  %650 = icmp eq ptr %649, %646
  br i1 %650, label %652, label %651

651:                                              ; preds = %648
  call void @_ZdlPv(ptr noundef %649) #58
  br label %652

652:                                              ; preds = %651, %648
  %653 = load ptr, ptr %54, align 8, !tbaa !23
  %654 = icmp eq ptr %653, %640
  br i1 %654, label %656, label %655

655:                                              ; preds = %652
  call void @_ZdlPv(ptr noundef %653) #58
  br label %656

656:                                              ; preds = %655, %652
  %657 = load ptr, ptr %53, align 8, !tbaa !23
  %658 = icmp eq ptr %657, %638
  br i1 %658, label %660, label %659

659:                                              ; preds = %656
  call void @_ZdlPv(ptr noundef %657) #58
  br label %660

660:                                              ; preds = %659, %656
  call void @llvm.lifetime.start.p0(i64 168, ptr nonnull %56) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %57) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !336)
  %661 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %57, i64 0, i32 2
  store ptr %661, ptr %57, align 8, !tbaa !78, !alias.scope !336
  %662 = load ptr, ptr %52, align 8, !tbaa !23, !noalias !336
  %663 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %52, i64 0, i32 1
  %664 = load i64, ptr %663, align 8, !tbaa !49, !noalias !336
  %665 = getelementptr inbounds i8, ptr %662, i64 %664
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %57, ptr noundef %662, ptr noundef %665) #56
          to label %666 unwind label %3105

666:                                              ; preds = %660
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(168) %56, ptr noundef nonnull align 8 dereferenceable(32) %57, ptr noundef nonnull align 8 dereferenceable(136) %52) #56
          to label %667 unwind label %3107

667:                                              ; preds = %666
  %668 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %260, ptr noundef nonnull align 8 dereferenceable(168) %56) #56
          to label %669 unwind label %3109

669:                                              ; preds = %667
  %670 = getelementptr inbounds %"struct.std::pair.28", ptr %56, i64 0, i32 1
  %671 = getelementptr inbounds %"struct.std::pair.28", ptr %56, i64 0, i32 1, i32 8
  %672 = load ptr, ptr %671, align 8, !tbaa !23
  %673 = getelementptr inbounds %"struct.std::pair.28", ptr %56, i64 0, i32 1, i32 8, i32 2
  %674 = icmp eq ptr %672, %673
  br i1 %674, label %676, label %675

675:                                              ; preds = %669
  call void @_ZdlPv(ptr noundef %672) #58
  br label %676

676:                                              ; preds = %675, %669
  %677 = getelementptr inbounds %"struct.std::pair.28", ptr %56, i64 0, i32 1, i32 5
  %678 = load ptr, ptr %677, align 8, !tbaa !65
  %679 = icmp eq ptr %678, null
  br i1 %679, label %681, label %680

680:                                              ; preds = %676
  call void @_ZdlPv(ptr noundef nonnull %678) #58
  br label %681

681:                                              ; preds = %680, %676
  %682 = getelementptr inbounds %"struct.std::pair.28", ptr %56, i64 0, i32 1, i32 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %682) #59
  %683 = load ptr, ptr %670, align 8, !tbaa !23
  %684 = getelementptr inbounds %"struct.std::pair.28", ptr %56, i64 0, i32 1, i32 0, i32 2
  %685 = icmp eq ptr %683, %684
  br i1 %685, label %687, label %686

686:                                              ; preds = %681
  call void @_ZdlPv(ptr noundef %683) #58
  br label %687

687:                                              ; preds = %686, %681
  %688 = load ptr, ptr %56, align 8, !tbaa !23
  %689 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %56, i64 0, i32 2
  %690 = icmp eq ptr %688, %689
  br i1 %690, label %692, label %691

691:                                              ; preds = %687
  call void @_ZdlPv(ptr noundef %688) #58
  br label %692

692:                                              ; preds = %691, %687
  %693 = load ptr, ptr %57, align 8, !tbaa !23
  %694 = icmp eq ptr %693, %661
  br i1 %694, label %696, label %695

695:                                              ; preds = %692
  call void @_ZdlPv(ptr noundef %693) #58
  br label %696

696:                                              ; preds = %695, %692
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %57) #57
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %56) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %58) #57
  %697 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %59, i64 0, i32 2
  store ptr %697, ptr %59, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %59, ptr noundef nonnull @.str.137, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.137, i64 0, i64 4)) #56
          to label %698 unwind label %3118

698:                                              ; preds = %696
  %699 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %60, i64 0, i32 2
  store ptr %699, ptr %60, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %60, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %700 unwind label %3120

700:                                              ; preds = %698
  %701 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %61, i64 0, i32 2
  store ptr %701, ptr %61, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %61, ptr noundef nonnull @.str.139, ptr noundef nonnull getelementptr inbounds ([32 x i8], ptr @.str.139, i64 0, i64 31)) #56
          to label %702 unwind label %3122

702:                                              ; preds = %700
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %58, ptr noundef nonnull %59, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %60, ptr noundef nonnull %61) #56
          to label %703 unwind label %3124

703:                                              ; preds = %702
  %704 = load ptr, ptr %61, align 8, !tbaa !23
  %705 = icmp eq ptr %704, %701
  br i1 %705, label %707, label %706

706:                                              ; preds = %703
  call void @_ZdlPv(ptr noundef %704) #58
  br label %707

707:                                              ; preds = %706, %703
  %708 = load ptr, ptr %60, align 8, !tbaa !23
  %709 = icmp eq ptr %708, %699
  br i1 %709, label %711, label %710

710:                                              ; preds = %707
  call void @_ZdlPv(ptr noundef %708) #58
  br label %711

711:                                              ; preds = %710, %707
  %712 = load ptr, ptr %59, align 8, !tbaa !23
  %713 = icmp eq ptr %712, %697
  br i1 %713, label %715, label %714

714:                                              ; preds = %711
  call void @_ZdlPv(ptr noundef %712) #58
  br label %715

715:                                              ; preds = %714, %711
  %716 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 10
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %62) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %63) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !339)
  %717 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %63, i64 0, i32 2
  store ptr %717, ptr %63, align 8, !tbaa !78, !alias.scope !339
  %718 = load ptr, ptr %58, align 8, !tbaa !23, !noalias !339
  %719 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %58, i64 0, i32 1
  %720 = load i64, ptr %719, align 8, !tbaa !49, !noalias !339
  %721 = getelementptr inbounds i8, ptr %718, i64 %720
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %63, ptr noundef %718, ptr noundef %721) #56
          to label %722 unwind label %3139

722:                                              ; preds = %715
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %62, ptr noundef nonnull align 8 dereferenceable(32) %63, ptr noundef nonnull align 8 dereferenceable(104) %58) #56
          to label %723 unwind label %3141

723:                                              ; preds = %722
  %724 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %62) #56
          to label %725 unwind label %3143

725:                                              ; preds = %723
  %726 = getelementptr inbounds %"struct.std::pair.85", ptr %62, i64 0, i32 1
  %727 = getelementptr inbounds %"struct.std::pair.85", ptr %62, i64 0, i32 1, i32 4
  %728 = load ptr, ptr %727, align 8, !tbaa !23
  %729 = getelementptr inbounds %"struct.std::pair.85", ptr %62, i64 0, i32 1, i32 4, i32 2
  %730 = icmp eq ptr %728, %729
  br i1 %730, label %732, label %731

731:                                              ; preds = %725
  call void @_ZdlPv(ptr noundef %728) #58
  br label %732

732:                                              ; preds = %731, %725
  %733 = getelementptr inbounds %"struct.std::pair.85", ptr %62, i64 0, i32 1, i32 3
  %734 = load ptr, ptr %733, align 8, !tbaa !23
  %735 = getelementptr inbounds %"struct.std::pair.85", ptr %62, i64 0, i32 1, i32 3, i32 2
  %736 = icmp eq ptr %734, %735
  br i1 %736, label %738, label %737

737:                                              ; preds = %732
  call void @_ZdlPv(ptr noundef %734) #58
  br label %738

738:                                              ; preds = %737, %732
  %739 = load ptr, ptr %726, align 8, !tbaa !23
  %740 = getelementptr inbounds %"struct.std::pair.85", ptr %62, i64 0, i32 1, i32 0, i32 2
  %741 = icmp eq ptr %739, %740
  br i1 %741, label %743, label %742

742:                                              ; preds = %738
  call void @_ZdlPv(ptr noundef %739) #58
  br label %743

743:                                              ; preds = %742, %738
  %744 = load ptr, ptr %62, align 8, !tbaa !23
  %745 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %62, i64 0, i32 2
  %746 = icmp eq ptr %744, %745
  br i1 %746, label %748, label %747

747:                                              ; preds = %743
  call void @_ZdlPv(ptr noundef %744) #58
  br label %748

748:                                              ; preds = %747, %743
  %749 = load ptr, ptr %63, align 8, !tbaa !23
  %750 = icmp eq ptr %749, %717
  br i1 %750, label %752, label %751

751:                                              ; preds = %748
  call void @_ZdlPv(ptr noundef %749) #58
  br label %752

752:                                              ; preds = %751, %748
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %63) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %62) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %64) #57
  %753 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %65, i64 0, i32 2
  store ptr %753, ptr %65, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %65, ptr noundef nonnull @.str.140, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.140, i64 0, i64 4)) #56
          to label %754 unwind label %3152

754:                                              ; preds = %752
  %755 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %66, i64 0, i32 2
  store ptr %755, ptr %66, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %66, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %756 unwind label %3154

756:                                              ; preds = %754
  %757 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %67, i64 0, i32 2
  store ptr %757, ptr %67, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %67, ptr noundef nonnull @.str.141, ptr noundef nonnull getelementptr inbounds ([30 x i8], ptr @.str.141, i64 0, i64 29)) #56
          to label %758 unwind label %3156

758:                                              ; preds = %756
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %64, ptr noundef nonnull %65, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %66, ptr noundef nonnull %67) #56
          to label %759 unwind label %3158

759:                                              ; preds = %758
  %760 = load ptr, ptr %67, align 8, !tbaa !23
  %761 = icmp eq ptr %760, %757
  br i1 %761, label %763, label %762

762:                                              ; preds = %759
  call void @_ZdlPv(ptr noundef %760) #58
  br label %763

763:                                              ; preds = %762, %759
  %764 = load ptr, ptr %66, align 8, !tbaa !23
  %765 = icmp eq ptr %764, %755
  br i1 %765, label %767, label %766

766:                                              ; preds = %763
  call void @_ZdlPv(ptr noundef %764) #58
  br label %767

767:                                              ; preds = %766, %763
  %768 = load ptr, ptr %65, align 8, !tbaa !23
  %769 = icmp eq ptr %768, %753
  br i1 %769, label %771, label %770

770:                                              ; preds = %767
  call void @_ZdlPv(ptr noundef %768) #58
  br label %771

771:                                              ; preds = %770, %767
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %68) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %69) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !342)
  %772 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %69, i64 0, i32 2
  store ptr %772, ptr %69, align 8, !tbaa !78, !alias.scope !342
  %773 = load ptr, ptr %64, align 8, !tbaa !23, !noalias !342
  %774 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %64, i64 0, i32 1
  %775 = load i64, ptr %774, align 8, !tbaa !49, !noalias !342
  %776 = getelementptr inbounds i8, ptr %773, i64 %775
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %69, ptr noundef %773, ptr noundef %776) #56
          to label %777 unwind label %3173

777:                                              ; preds = %771
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %68, ptr noundef nonnull align 8 dereferenceable(32) %69, ptr noundef nonnull align 8 dereferenceable(104) %64) #56
          to label %778 unwind label %3175

778:                                              ; preds = %777
  %779 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %68) #56
          to label %780 unwind label %3177

780:                                              ; preds = %778
  %781 = getelementptr inbounds %"struct.std::pair.85", ptr %68, i64 0, i32 1
  %782 = getelementptr inbounds %"struct.std::pair.85", ptr %68, i64 0, i32 1, i32 4
  %783 = load ptr, ptr %782, align 8, !tbaa !23
  %784 = getelementptr inbounds %"struct.std::pair.85", ptr %68, i64 0, i32 1, i32 4, i32 2
  %785 = icmp eq ptr %783, %784
  br i1 %785, label %787, label %786

786:                                              ; preds = %780
  call void @_ZdlPv(ptr noundef %783) #58
  br label %787

787:                                              ; preds = %786, %780
  %788 = getelementptr inbounds %"struct.std::pair.85", ptr %68, i64 0, i32 1, i32 3
  %789 = load ptr, ptr %788, align 8, !tbaa !23
  %790 = getelementptr inbounds %"struct.std::pair.85", ptr %68, i64 0, i32 1, i32 3, i32 2
  %791 = icmp eq ptr %789, %790
  br i1 %791, label %793, label %792

792:                                              ; preds = %787
  call void @_ZdlPv(ptr noundef %789) #58
  br label %793

793:                                              ; preds = %792, %787
  %794 = load ptr, ptr %781, align 8, !tbaa !23
  %795 = getelementptr inbounds %"struct.std::pair.85", ptr %68, i64 0, i32 1, i32 0, i32 2
  %796 = icmp eq ptr %794, %795
  br i1 %796, label %798, label %797

797:                                              ; preds = %793
  call void @_ZdlPv(ptr noundef %794) #58
  br label %798

798:                                              ; preds = %797, %793
  %799 = load ptr, ptr %68, align 8, !tbaa !23
  %800 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %68, i64 0, i32 2
  %801 = icmp eq ptr %799, %800
  br i1 %801, label %803, label %802

802:                                              ; preds = %798
  call void @_ZdlPv(ptr noundef %799) #58
  br label %803

803:                                              ; preds = %802, %798
  %804 = load ptr, ptr %69, align 8, !tbaa !23
  %805 = icmp eq ptr %804, %772
  br i1 %805, label %807, label %806

806:                                              ; preds = %803
  call void @_ZdlPv(ptr noundef %804) #58
  br label %807

807:                                              ; preds = %806, %803
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %69) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %68) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %70) #57
  %808 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %71, i64 0, i32 2
  store ptr %808, ptr %71, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %71, ptr noundef nonnull @.str.142, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.142, i64 0, i64 4)) #56
          to label %809 unwind label %3186

809:                                              ; preds = %807
  %810 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %72, i64 0, i32 2
  store ptr %810, ptr %72, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %72, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %811 unwind label %3188

811:                                              ; preds = %809
  %812 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %73, i64 0, i32 2
  store ptr %812, ptr %73, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %73, ptr noundef nonnull @.str.143, ptr noundef nonnull getelementptr inbounds ([28 x i8], ptr @.str.143, i64 0, i64 27)) #56
          to label %813 unwind label %3190

813:                                              ; preds = %811
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %70, ptr noundef nonnull %71, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %72, ptr noundef nonnull %73) #56
          to label %814 unwind label %3192

814:                                              ; preds = %813
  %815 = load ptr, ptr %73, align 8, !tbaa !23
  %816 = icmp eq ptr %815, %812
  br i1 %816, label %818, label %817

817:                                              ; preds = %814
  call void @_ZdlPv(ptr noundef %815) #58
  br label %818

818:                                              ; preds = %817, %814
  %819 = load ptr, ptr %72, align 8, !tbaa !23
  %820 = icmp eq ptr %819, %810
  br i1 %820, label %822, label %821

821:                                              ; preds = %818
  call void @_ZdlPv(ptr noundef %819) #58
  br label %822

822:                                              ; preds = %821, %818
  %823 = load ptr, ptr %71, align 8, !tbaa !23
  %824 = icmp eq ptr %823, %808
  br i1 %824, label %826, label %825

825:                                              ; preds = %822
  call void @_ZdlPv(ptr noundef %823) #58
  br label %826

826:                                              ; preds = %825, %822
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %74) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %75) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !345)
  %827 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %75, i64 0, i32 2
  store ptr %827, ptr %75, align 8, !tbaa !78, !alias.scope !345
  %828 = load ptr, ptr %70, align 8, !tbaa !23, !noalias !345
  %829 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %70, i64 0, i32 1
  %830 = load i64, ptr %829, align 8, !tbaa !49, !noalias !345
  %831 = getelementptr inbounds i8, ptr %828, i64 %830
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %75, ptr noundef %828, ptr noundef %831) #56
          to label %832 unwind label %3207

832:                                              ; preds = %826
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %74, ptr noundef nonnull align 8 dereferenceable(32) %75, ptr noundef nonnull align 8 dereferenceable(104) %70) #56
          to label %833 unwind label %3209

833:                                              ; preds = %832
  %834 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %74) #56
          to label %835 unwind label %3211

835:                                              ; preds = %833
  %836 = getelementptr inbounds %"struct.std::pair.85", ptr %74, i64 0, i32 1
  %837 = getelementptr inbounds %"struct.std::pair.85", ptr %74, i64 0, i32 1, i32 4
  %838 = load ptr, ptr %837, align 8, !tbaa !23
  %839 = getelementptr inbounds %"struct.std::pair.85", ptr %74, i64 0, i32 1, i32 4, i32 2
  %840 = icmp eq ptr %838, %839
  br i1 %840, label %842, label %841

841:                                              ; preds = %835
  call void @_ZdlPv(ptr noundef %838) #58
  br label %842

842:                                              ; preds = %841, %835
  %843 = getelementptr inbounds %"struct.std::pair.85", ptr %74, i64 0, i32 1, i32 3
  %844 = load ptr, ptr %843, align 8, !tbaa !23
  %845 = getelementptr inbounds %"struct.std::pair.85", ptr %74, i64 0, i32 1, i32 3, i32 2
  %846 = icmp eq ptr %844, %845
  br i1 %846, label %848, label %847

847:                                              ; preds = %842
  call void @_ZdlPv(ptr noundef %844) #58
  br label %848

848:                                              ; preds = %847, %842
  %849 = load ptr, ptr %836, align 8, !tbaa !23
  %850 = getelementptr inbounds %"struct.std::pair.85", ptr %74, i64 0, i32 1, i32 0, i32 2
  %851 = icmp eq ptr %849, %850
  br i1 %851, label %853, label %852

852:                                              ; preds = %848
  call void @_ZdlPv(ptr noundef %849) #58
  br label %853

853:                                              ; preds = %852, %848
  %854 = load ptr, ptr %74, align 8, !tbaa !23
  %855 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %74, i64 0, i32 2
  %856 = icmp eq ptr %854, %855
  br i1 %856, label %858, label %857

857:                                              ; preds = %853
  call void @_ZdlPv(ptr noundef %854) #58
  br label %858

858:                                              ; preds = %857, %853
  %859 = load ptr, ptr %75, align 8, !tbaa !23
  %860 = icmp eq ptr %859, %827
  br i1 %860, label %862, label %861

861:                                              ; preds = %858
  call void @_ZdlPv(ptr noundef %859) #58
  br label %862

862:                                              ; preds = %861, %858
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %75) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %74) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %76) #57
  %863 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %77, i64 0, i32 2
  store ptr %863, ptr %77, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %77, ptr noundef nonnull @.str.144, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.144, i64 0, i64 4)) #56
          to label %864 unwind label %3220

864:                                              ; preds = %862
  %865 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %78, i64 0, i32 2
  store ptr %865, ptr %78, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %78, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %866 unwind label %3222

866:                                              ; preds = %864
  %867 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %79, i64 0, i32 2
  store ptr %867, ptr %79, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %79, ptr noundef nonnull @.str.145, ptr noundef nonnull getelementptr inbounds ([31 x i8], ptr @.str.145, i64 0, i64 30)) #56
          to label %868 unwind label %3224

868:                                              ; preds = %866
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %76, ptr noundef nonnull %77, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %78, ptr noundef nonnull %79) #56
          to label %869 unwind label %3226

869:                                              ; preds = %868
  %870 = load ptr, ptr %79, align 8, !tbaa !23
  %871 = icmp eq ptr %870, %867
  br i1 %871, label %873, label %872

872:                                              ; preds = %869
  call void @_ZdlPv(ptr noundef %870) #58
  br label %873

873:                                              ; preds = %872, %869
  %874 = load ptr, ptr %78, align 8, !tbaa !23
  %875 = icmp eq ptr %874, %865
  br i1 %875, label %877, label %876

876:                                              ; preds = %873
  call void @_ZdlPv(ptr noundef %874) #58
  br label %877

877:                                              ; preds = %876, %873
  %878 = load ptr, ptr %77, align 8, !tbaa !23
  %879 = icmp eq ptr %878, %863
  br i1 %879, label %881, label %880

880:                                              ; preds = %877
  call void @_ZdlPv(ptr noundef %878) #58
  br label %881

881:                                              ; preds = %880, %877
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %80) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %81) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !348)
  %882 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %81, i64 0, i32 2
  store ptr %882, ptr %81, align 8, !tbaa !78, !alias.scope !348
  %883 = load ptr, ptr %76, align 8, !tbaa !23, !noalias !348
  %884 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %76, i64 0, i32 1
  %885 = load i64, ptr %884, align 8, !tbaa !49, !noalias !348
  %886 = getelementptr inbounds i8, ptr %883, i64 %885
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %81, ptr noundef %883, ptr noundef %886) #56
          to label %887 unwind label %3241

887:                                              ; preds = %881
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %80, ptr noundef nonnull align 8 dereferenceable(32) %81, ptr noundef nonnull align 8 dereferenceable(104) %76) #56
          to label %888 unwind label %3243

888:                                              ; preds = %887
  %889 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %80) #56
          to label %890 unwind label %3245

890:                                              ; preds = %888
  %891 = getelementptr inbounds %"struct.std::pair.85", ptr %80, i64 0, i32 1
  %892 = getelementptr inbounds %"struct.std::pair.85", ptr %80, i64 0, i32 1, i32 4
  %893 = load ptr, ptr %892, align 8, !tbaa !23
  %894 = getelementptr inbounds %"struct.std::pair.85", ptr %80, i64 0, i32 1, i32 4, i32 2
  %895 = icmp eq ptr %893, %894
  br i1 %895, label %897, label %896

896:                                              ; preds = %890
  call void @_ZdlPv(ptr noundef %893) #58
  br label %897

897:                                              ; preds = %896, %890
  %898 = getelementptr inbounds %"struct.std::pair.85", ptr %80, i64 0, i32 1, i32 3
  %899 = load ptr, ptr %898, align 8, !tbaa !23
  %900 = getelementptr inbounds %"struct.std::pair.85", ptr %80, i64 0, i32 1, i32 3, i32 2
  %901 = icmp eq ptr %899, %900
  br i1 %901, label %903, label %902

902:                                              ; preds = %897
  call void @_ZdlPv(ptr noundef %899) #58
  br label %903

903:                                              ; preds = %902, %897
  %904 = load ptr, ptr %891, align 8, !tbaa !23
  %905 = getelementptr inbounds %"struct.std::pair.85", ptr %80, i64 0, i32 1, i32 0, i32 2
  %906 = icmp eq ptr %904, %905
  br i1 %906, label %908, label %907

907:                                              ; preds = %903
  call void @_ZdlPv(ptr noundef %904) #58
  br label %908

908:                                              ; preds = %907, %903
  %909 = load ptr, ptr %80, align 8, !tbaa !23
  %910 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %80, i64 0, i32 2
  %911 = icmp eq ptr %909, %910
  br i1 %911, label %913, label %912

912:                                              ; preds = %908
  call void @_ZdlPv(ptr noundef %909) #58
  br label %913

913:                                              ; preds = %912, %908
  %914 = load ptr, ptr %81, align 8, !tbaa !23
  %915 = icmp eq ptr %914, %882
  br i1 %915, label %917, label %916

916:                                              ; preds = %913
  call void @_ZdlPv(ptr noundef %914) #58
  br label %917

917:                                              ; preds = %916, %913
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %81) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %80) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %82) #57
  %918 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %83, i64 0, i32 2
  store ptr %918, ptr %83, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %83, ptr noundef nonnull @.str.146, ptr noundef nonnull getelementptr inbounds ([4 x i8], ptr @.str.146, i64 0, i64 3)) #56
          to label %919 unwind label %3254

919:                                              ; preds = %917
  %920 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %84, i64 0, i32 2
  store ptr %920, ptr %84, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %84, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %921 unwind label %3256

921:                                              ; preds = %919
  %922 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %85, i64 0, i32 2
  store ptr %922, ptr %85, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %85, ptr noundef nonnull @.str.147, ptr noundef nonnull getelementptr inbounds ([23 x i8], ptr @.str.147, i64 0, i64 22)) #56
          to label %923 unwind label %3258

923:                                              ; preds = %921
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %82, ptr noundef nonnull %83, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %84, ptr noundef nonnull %85) #56
          to label %924 unwind label %3260

924:                                              ; preds = %923
  %925 = load ptr, ptr %85, align 8, !tbaa !23
  %926 = icmp eq ptr %925, %922
  br i1 %926, label %928, label %927

927:                                              ; preds = %924
  call void @_ZdlPv(ptr noundef %925) #58
  br label %928

928:                                              ; preds = %927, %924
  %929 = load ptr, ptr %84, align 8, !tbaa !23
  %930 = icmp eq ptr %929, %920
  br i1 %930, label %932, label %931

931:                                              ; preds = %928
  call void @_ZdlPv(ptr noundef %929) #58
  br label %932

932:                                              ; preds = %931, %928
  %933 = load ptr, ptr %83, align 8, !tbaa !23
  %934 = icmp eq ptr %933, %918
  br i1 %934, label %936, label %935

935:                                              ; preds = %932
  call void @_ZdlPv(ptr noundef %933) #58
  br label %936

936:                                              ; preds = %935, %932
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %86) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %87) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !351)
  %937 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %87, i64 0, i32 2
  store ptr %937, ptr %87, align 8, !tbaa !78, !alias.scope !351
  %938 = load ptr, ptr %82, align 8, !tbaa !23, !noalias !351
  %939 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %82, i64 0, i32 1
  %940 = load i64, ptr %939, align 8, !tbaa !49, !noalias !351
  %941 = getelementptr inbounds i8, ptr %938, i64 %940
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %87, ptr noundef %938, ptr noundef %941) #56
          to label %942 unwind label %3275

942:                                              ; preds = %936
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %86, ptr noundef nonnull align 8 dereferenceable(32) %87, ptr noundef nonnull align 8 dereferenceable(104) %82) #56
          to label %943 unwind label %3277

943:                                              ; preds = %942
  %944 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %86) #56
          to label %945 unwind label %3279

945:                                              ; preds = %943
  %946 = getelementptr inbounds %"struct.std::pair.85", ptr %86, i64 0, i32 1
  %947 = getelementptr inbounds %"struct.std::pair.85", ptr %86, i64 0, i32 1, i32 4
  %948 = load ptr, ptr %947, align 8, !tbaa !23
  %949 = getelementptr inbounds %"struct.std::pair.85", ptr %86, i64 0, i32 1, i32 4, i32 2
  %950 = icmp eq ptr %948, %949
  br i1 %950, label %952, label %951

951:                                              ; preds = %945
  call void @_ZdlPv(ptr noundef %948) #58
  br label %952

952:                                              ; preds = %951, %945
  %953 = getelementptr inbounds %"struct.std::pair.85", ptr %86, i64 0, i32 1, i32 3
  %954 = load ptr, ptr %953, align 8, !tbaa !23
  %955 = getelementptr inbounds %"struct.std::pair.85", ptr %86, i64 0, i32 1, i32 3, i32 2
  %956 = icmp eq ptr %954, %955
  br i1 %956, label %958, label %957

957:                                              ; preds = %952
  call void @_ZdlPv(ptr noundef %954) #58
  br label %958

958:                                              ; preds = %957, %952
  %959 = load ptr, ptr %946, align 8, !tbaa !23
  %960 = getelementptr inbounds %"struct.std::pair.85", ptr %86, i64 0, i32 1, i32 0, i32 2
  %961 = icmp eq ptr %959, %960
  br i1 %961, label %963, label %962

962:                                              ; preds = %958
  call void @_ZdlPv(ptr noundef %959) #58
  br label %963

963:                                              ; preds = %962, %958
  %964 = load ptr, ptr %86, align 8, !tbaa !23
  %965 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %86, i64 0, i32 2
  %966 = icmp eq ptr %964, %965
  br i1 %966, label %968, label %967

967:                                              ; preds = %963
  call void @_ZdlPv(ptr noundef %964) #58
  br label %968

968:                                              ; preds = %967, %963
  %969 = load ptr, ptr %87, align 8, !tbaa !23
  %970 = icmp eq ptr %969, %937
  br i1 %970, label %972, label %971

971:                                              ; preds = %968
  call void @_ZdlPv(ptr noundef %969) #58
  br label %972

972:                                              ; preds = %971, %968
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %87) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %86) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %88) #57
  %973 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %89, i64 0, i32 2
  store ptr %973, ptr %89, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %89, ptr noundef nonnull @.str.148, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.148, i64 0, i64 4)) #56
          to label %974 unwind label %3288

974:                                              ; preds = %972
  %975 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %90, i64 0, i32 2
  store ptr %975, ptr %90, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %90, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %976 unwind label %3290

976:                                              ; preds = %974
  %977 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %91, i64 0, i32 2
  store ptr %977, ptr %91, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %91, ptr noundef nonnull @.str.149, ptr noundef nonnull getelementptr inbounds ([18 x i8], ptr @.str.149, i64 0, i64 17)) #56
          to label %978 unwind label %3292

978:                                              ; preds = %976
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %88, ptr noundef nonnull %89, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %90, ptr noundef nonnull %91) #56
          to label %979 unwind label %3294

979:                                              ; preds = %978
  %980 = load ptr, ptr %91, align 8, !tbaa !23
  %981 = icmp eq ptr %980, %977
  br i1 %981, label %983, label %982

982:                                              ; preds = %979
  call void @_ZdlPv(ptr noundef %980) #58
  br label %983

983:                                              ; preds = %982, %979
  %984 = load ptr, ptr %90, align 8, !tbaa !23
  %985 = icmp eq ptr %984, %975
  br i1 %985, label %987, label %986

986:                                              ; preds = %983
  call void @_ZdlPv(ptr noundef %984) #58
  br label %987

987:                                              ; preds = %986, %983
  %988 = load ptr, ptr %89, align 8, !tbaa !23
  %989 = icmp eq ptr %988, %973
  br i1 %989, label %991, label %990

990:                                              ; preds = %987
  call void @_ZdlPv(ptr noundef %988) #58
  br label %991

991:                                              ; preds = %990, %987
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %92) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %93) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !354)
  %992 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %93, i64 0, i32 2
  store ptr %992, ptr %93, align 8, !tbaa !78, !alias.scope !354
  %993 = load ptr, ptr %88, align 8, !tbaa !23, !noalias !354
  %994 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %88, i64 0, i32 1
  %995 = load i64, ptr %994, align 8, !tbaa !49, !noalias !354
  %996 = getelementptr inbounds i8, ptr %993, i64 %995
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %93, ptr noundef %993, ptr noundef %996) #56
          to label %997 unwind label %3309

997:                                              ; preds = %991
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %92, ptr noundef nonnull align 8 dereferenceable(32) %93, ptr noundef nonnull align 8 dereferenceable(104) %88) #56
          to label %998 unwind label %3311

998:                                              ; preds = %997
  %999 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %92) #56
          to label %1000 unwind label %3313

1000:                                             ; preds = %998
  %1001 = getelementptr inbounds %"struct.std::pair.85", ptr %92, i64 0, i32 1
  %1002 = getelementptr inbounds %"struct.std::pair.85", ptr %92, i64 0, i32 1, i32 4
  %1003 = load ptr, ptr %1002, align 8, !tbaa !23
  %1004 = getelementptr inbounds %"struct.std::pair.85", ptr %92, i64 0, i32 1, i32 4, i32 2
  %1005 = icmp eq ptr %1003, %1004
  br i1 %1005, label %1007, label %1006

1006:                                             ; preds = %1000
  call void @_ZdlPv(ptr noundef %1003) #58
  br label %1007

1007:                                             ; preds = %1006, %1000
  %1008 = getelementptr inbounds %"struct.std::pair.85", ptr %92, i64 0, i32 1, i32 3
  %1009 = load ptr, ptr %1008, align 8, !tbaa !23
  %1010 = getelementptr inbounds %"struct.std::pair.85", ptr %92, i64 0, i32 1, i32 3, i32 2
  %1011 = icmp eq ptr %1009, %1010
  br i1 %1011, label %1013, label %1012

1012:                                             ; preds = %1007
  call void @_ZdlPv(ptr noundef %1009) #58
  br label %1013

1013:                                             ; preds = %1012, %1007
  %1014 = load ptr, ptr %1001, align 8, !tbaa !23
  %1015 = getelementptr inbounds %"struct.std::pair.85", ptr %92, i64 0, i32 1, i32 0, i32 2
  %1016 = icmp eq ptr %1014, %1015
  br i1 %1016, label %1018, label %1017

1017:                                             ; preds = %1013
  call void @_ZdlPv(ptr noundef %1014) #58
  br label %1018

1018:                                             ; preds = %1017, %1013
  %1019 = load ptr, ptr %92, align 8, !tbaa !23
  %1020 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %92, i64 0, i32 2
  %1021 = icmp eq ptr %1019, %1020
  br i1 %1021, label %1023, label %1022

1022:                                             ; preds = %1018
  call void @_ZdlPv(ptr noundef %1019) #58
  br label %1023

1023:                                             ; preds = %1022, %1018
  %1024 = load ptr, ptr %93, align 8, !tbaa !23
  %1025 = icmp eq ptr %1024, %992
  br i1 %1025, label %1027, label %1026

1026:                                             ; preds = %1023
  call void @_ZdlPv(ptr noundef %1024) #58
  br label %1027

1027:                                             ; preds = %1026, %1023
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %93) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %92) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %94) #57
  %1028 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %95, i64 0, i32 2
  store ptr %1028, ptr %95, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %95, ptr noundef nonnull @.str.150, ptr noundef nonnull getelementptr inbounds ([4 x i8], ptr @.str.150, i64 0, i64 3)) #56
          to label %1029 unwind label %3322

1029:                                             ; preds = %1027
  %1030 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %96, i64 0, i32 2
  store ptr %1030, ptr %96, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %96, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1031 unwind label %3324

1031:                                             ; preds = %1029
  %1032 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %97, i64 0, i32 2
  store ptr %1032, ptr %97, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %97, ptr noundef nonnull @.str.151, ptr noundef nonnull getelementptr inbounds ([12 x i8], ptr @.str.151, i64 0, i64 11)) #56
          to label %1033 unwind label %3326

1033:                                             ; preds = %1031
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %94, ptr noundef nonnull %95, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %96, ptr noundef nonnull %97) #56
          to label %1034 unwind label %3328

1034:                                             ; preds = %1033
  %1035 = load ptr, ptr %97, align 8, !tbaa !23
  %1036 = icmp eq ptr %1035, %1032
  br i1 %1036, label %1038, label %1037

1037:                                             ; preds = %1034
  call void @_ZdlPv(ptr noundef %1035) #58
  br label %1038

1038:                                             ; preds = %1037, %1034
  %1039 = load ptr, ptr %96, align 8, !tbaa !23
  %1040 = icmp eq ptr %1039, %1030
  br i1 %1040, label %1042, label %1041

1041:                                             ; preds = %1038
  call void @_ZdlPv(ptr noundef %1039) #58
  br label %1042

1042:                                             ; preds = %1041, %1038
  %1043 = load ptr, ptr %95, align 8, !tbaa !23
  %1044 = icmp eq ptr %1043, %1028
  br i1 %1044, label %1046, label %1045

1045:                                             ; preds = %1042
  call void @_ZdlPv(ptr noundef %1043) #58
  br label %1046

1046:                                             ; preds = %1045, %1042
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %98) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %99) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !357)
  %1047 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %99, i64 0, i32 2
  store ptr %1047, ptr %99, align 8, !tbaa !78, !alias.scope !357
  %1048 = load ptr, ptr %94, align 8, !tbaa !23, !noalias !357
  %1049 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %94, i64 0, i32 1
  %1050 = load i64, ptr %1049, align 8, !tbaa !49, !noalias !357
  %1051 = getelementptr inbounds i8, ptr %1048, i64 %1050
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %99, ptr noundef %1048, ptr noundef %1051) #56
          to label %1052 unwind label %3343

1052:                                             ; preds = %1046
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %98, ptr noundef nonnull align 8 dereferenceable(32) %99, ptr noundef nonnull align 8 dereferenceable(104) %94) #56
          to label %1053 unwind label %3345

1053:                                             ; preds = %1052
  %1054 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %98) #56
          to label %1055 unwind label %3347

1055:                                             ; preds = %1053
  %1056 = getelementptr inbounds %"struct.std::pair.85", ptr %98, i64 0, i32 1
  %1057 = getelementptr inbounds %"struct.std::pair.85", ptr %98, i64 0, i32 1, i32 4
  %1058 = load ptr, ptr %1057, align 8, !tbaa !23
  %1059 = getelementptr inbounds %"struct.std::pair.85", ptr %98, i64 0, i32 1, i32 4, i32 2
  %1060 = icmp eq ptr %1058, %1059
  br i1 %1060, label %1062, label %1061

1061:                                             ; preds = %1055
  call void @_ZdlPv(ptr noundef %1058) #58
  br label %1062

1062:                                             ; preds = %1061, %1055
  %1063 = getelementptr inbounds %"struct.std::pair.85", ptr %98, i64 0, i32 1, i32 3
  %1064 = load ptr, ptr %1063, align 8, !tbaa !23
  %1065 = getelementptr inbounds %"struct.std::pair.85", ptr %98, i64 0, i32 1, i32 3, i32 2
  %1066 = icmp eq ptr %1064, %1065
  br i1 %1066, label %1068, label %1067

1067:                                             ; preds = %1062
  call void @_ZdlPv(ptr noundef %1064) #58
  br label %1068

1068:                                             ; preds = %1067, %1062
  %1069 = load ptr, ptr %1056, align 8, !tbaa !23
  %1070 = getelementptr inbounds %"struct.std::pair.85", ptr %98, i64 0, i32 1, i32 0, i32 2
  %1071 = icmp eq ptr %1069, %1070
  br i1 %1071, label %1073, label %1072

1072:                                             ; preds = %1068
  call void @_ZdlPv(ptr noundef %1069) #58
  br label %1073

1073:                                             ; preds = %1072, %1068
  %1074 = load ptr, ptr %98, align 8, !tbaa !23
  %1075 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %98, i64 0, i32 2
  %1076 = icmp eq ptr %1074, %1075
  br i1 %1076, label %1078, label %1077

1077:                                             ; preds = %1073
  call void @_ZdlPv(ptr noundef %1074) #58
  br label %1078

1078:                                             ; preds = %1077, %1073
  %1079 = load ptr, ptr %99, align 8, !tbaa !23
  %1080 = icmp eq ptr %1079, %1047
  br i1 %1080, label %1082, label %1081

1081:                                             ; preds = %1078
  call void @_ZdlPv(ptr noundef %1079) #58
  br label %1082

1082:                                             ; preds = %1081, %1078
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %99) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %98) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %100) #57
  %1083 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %101, i64 0, i32 2
  store ptr %1083, ptr %101, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %101, ptr noundef nonnull @.str.152, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.152, i64 0, i64 4)) #56
          to label %1084 unwind label %3356

1084:                                             ; preds = %1082
  %1085 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %102, i64 0, i32 2
  store ptr %1085, ptr %102, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %102, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1086 unwind label %3358

1086:                                             ; preds = %1084
  %1087 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %103, i64 0, i32 2
  store ptr %1087, ptr %103, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %103, ptr noundef nonnull @.str.153, ptr noundef nonnull getelementptr inbounds ([25 x i8], ptr @.str.153, i64 0, i64 24)) #56
          to label %1088 unwind label %3360

1088:                                             ; preds = %1086
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %100, ptr noundef nonnull %101, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %102, ptr noundef nonnull %103) #56
          to label %1089 unwind label %3362

1089:                                             ; preds = %1088
  %1090 = load ptr, ptr %103, align 8, !tbaa !23
  %1091 = icmp eq ptr %1090, %1087
  br i1 %1091, label %1093, label %1092

1092:                                             ; preds = %1089
  call void @_ZdlPv(ptr noundef %1090) #58
  br label %1093

1093:                                             ; preds = %1092, %1089
  %1094 = load ptr, ptr %102, align 8, !tbaa !23
  %1095 = icmp eq ptr %1094, %1085
  br i1 %1095, label %1097, label %1096

1096:                                             ; preds = %1093
  call void @_ZdlPv(ptr noundef %1094) #58
  br label %1097

1097:                                             ; preds = %1096, %1093
  %1098 = load ptr, ptr %101, align 8, !tbaa !23
  %1099 = icmp eq ptr %1098, %1083
  br i1 %1099, label %1101, label %1100

1100:                                             ; preds = %1097
  call void @_ZdlPv(ptr noundef %1098) #58
  br label %1101

1101:                                             ; preds = %1100, %1097
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %104) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %105) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !360)
  %1102 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %105, i64 0, i32 2
  store ptr %1102, ptr %105, align 8, !tbaa !78, !alias.scope !360
  %1103 = load ptr, ptr %100, align 8, !tbaa !23, !noalias !360
  %1104 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %100, i64 0, i32 1
  %1105 = load i64, ptr %1104, align 8, !tbaa !49, !noalias !360
  %1106 = getelementptr inbounds i8, ptr %1103, i64 %1105
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %105, ptr noundef %1103, ptr noundef %1106) #56
          to label %1107 unwind label %3377

1107:                                             ; preds = %1101
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %104, ptr noundef nonnull align 8 dereferenceable(32) %105, ptr noundef nonnull align 8 dereferenceable(104) %100) #56
          to label %1108 unwind label %3379

1108:                                             ; preds = %1107
  %1109 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %104) #56
          to label %1110 unwind label %3381

1110:                                             ; preds = %1108
  %1111 = getelementptr inbounds %"struct.std::pair.85", ptr %104, i64 0, i32 1
  %1112 = getelementptr inbounds %"struct.std::pair.85", ptr %104, i64 0, i32 1, i32 4
  %1113 = load ptr, ptr %1112, align 8, !tbaa !23
  %1114 = getelementptr inbounds %"struct.std::pair.85", ptr %104, i64 0, i32 1, i32 4, i32 2
  %1115 = icmp eq ptr %1113, %1114
  br i1 %1115, label %1117, label %1116

1116:                                             ; preds = %1110
  call void @_ZdlPv(ptr noundef %1113) #58
  br label %1117

1117:                                             ; preds = %1116, %1110
  %1118 = getelementptr inbounds %"struct.std::pair.85", ptr %104, i64 0, i32 1, i32 3
  %1119 = load ptr, ptr %1118, align 8, !tbaa !23
  %1120 = getelementptr inbounds %"struct.std::pair.85", ptr %104, i64 0, i32 1, i32 3, i32 2
  %1121 = icmp eq ptr %1119, %1120
  br i1 %1121, label %1123, label %1122

1122:                                             ; preds = %1117
  call void @_ZdlPv(ptr noundef %1119) #58
  br label %1123

1123:                                             ; preds = %1122, %1117
  %1124 = load ptr, ptr %1111, align 8, !tbaa !23
  %1125 = getelementptr inbounds %"struct.std::pair.85", ptr %104, i64 0, i32 1, i32 0, i32 2
  %1126 = icmp eq ptr %1124, %1125
  br i1 %1126, label %1128, label %1127

1127:                                             ; preds = %1123
  call void @_ZdlPv(ptr noundef %1124) #58
  br label %1128

1128:                                             ; preds = %1127, %1123
  %1129 = load ptr, ptr %104, align 8, !tbaa !23
  %1130 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %104, i64 0, i32 2
  %1131 = icmp eq ptr %1129, %1130
  br i1 %1131, label %1133, label %1132

1132:                                             ; preds = %1128
  call void @_ZdlPv(ptr noundef %1129) #58
  br label %1133

1133:                                             ; preds = %1132, %1128
  %1134 = load ptr, ptr %105, align 8, !tbaa !23
  %1135 = icmp eq ptr %1134, %1102
  br i1 %1135, label %1137, label %1136

1136:                                             ; preds = %1133
  call void @_ZdlPv(ptr noundef %1134) #58
  br label %1137

1137:                                             ; preds = %1136, %1133
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %105) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %104) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %106) #57
  %1138 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %107, i64 0, i32 2
  store ptr %1138, ptr %107, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %107, ptr noundef nonnull @.str.154, ptr noundef nonnull getelementptr inbounds ([6 x i8], ptr @.str.154, i64 0, i64 5)) #56
          to label %1139 unwind label %3390

1139:                                             ; preds = %1137
  %1140 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %108, i64 0, i32 2
  store ptr %1140, ptr %108, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %108, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1141 unwind label %3392

1141:                                             ; preds = %1139
  %1142 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %109, i64 0, i32 2
  store ptr %1142, ptr %109, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %109, ptr noundef nonnull @.str.155, ptr noundef nonnull getelementptr inbounds ([32 x i8], ptr @.str.155, i64 0, i64 31)) #56
          to label %1143 unwind label %3394

1143:                                             ; preds = %1141
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %106, ptr noundef nonnull %107, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %108, ptr noundef nonnull %109) #56
          to label %1144 unwind label %3396

1144:                                             ; preds = %1143
  %1145 = load ptr, ptr %109, align 8, !tbaa !23
  %1146 = icmp eq ptr %1145, %1142
  br i1 %1146, label %1148, label %1147

1147:                                             ; preds = %1144
  call void @_ZdlPv(ptr noundef %1145) #58
  br label %1148

1148:                                             ; preds = %1147, %1144
  %1149 = load ptr, ptr %108, align 8, !tbaa !23
  %1150 = icmp eq ptr %1149, %1140
  br i1 %1150, label %1152, label %1151

1151:                                             ; preds = %1148
  call void @_ZdlPv(ptr noundef %1149) #58
  br label %1152

1152:                                             ; preds = %1151, %1148
  %1153 = load ptr, ptr %107, align 8, !tbaa !23
  %1154 = icmp eq ptr %1153, %1138
  br i1 %1154, label %1156, label %1155

1155:                                             ; preds = %1152
  call void @_ZdlPv(ptr noundef %1153) #58
  br label %1156

1156:                                             ; preds = %1155, %1152
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %110) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %111) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !363)
  %1157 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %111, i64 0, i32 2
  store ptr %1157, ptr %111, align 8, !tbaa !78, !alias.scope !363
  %1158 = load ptr, ptr %106, align 8, !tbaa !23, !noalias !363
  %1159 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %106, i64 0, i32 1
  %1160 = load i64, ptr %1159, align 8, !tbaa !49, !noalias !363
  %1161 = getelementptr inbounds i8, ptr %1158, i64 %1160
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %111, ptr noundef %1158, ptr noundef %1161) #56
          to label %1162 unwind label %3411

1162:                                             ; preds = %1156
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %110, ptr noundef nonnull align 8 dereferenceable(32) %111, ptr noundef nonnull align 8 dereferenceable(104) %106) #56
          to label %1163 unwind label %3413

1163:                                             ; preds = %1162
  %1164 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %110) #56
          to label %1165 unwind label %3415

1165:                                             ; preds = %1163
  %1166 = getelementptr inbounds %"struct.std::pair.85", ptr %110, i64 0, i32 1
  %1167 = getelementptr inbounds %"struct.std::pair.85", ptr %110, i64 0, i32 1, i32 4
  %1168 = load ptr, ptr %1167, align 8, !tbaa !23
  %1169 = getelementptr inbounds %"struct.std::pair.85", ptr %110, i64 0, i32 1, i32 4, i32 2
  %1170 = icmp eq ptr %1168, %1169
  br i1 %1170, label %1172, label %1171

1171:                                             ; preds = %1165
  call void @_ZdlPv(ptr noundef %1168) #58
  br label %1172

1172:                                             ; preds = %1171, %1165
  %1173 = getelementptr inbounds %"struct.std::pair.85", ptr %110, i64 0, i32 1, i32 3
  %1174 = load ptr, ptr %1173, align 8, !tbaa !23
  %1175 = getelementptr inbounds %"struct.std::pair.85", ptr %110, i64 0, i32 1, i32 3, i32 2
  %1176 = icmp eq ptr %1174, %1175
  br i1 %1176, label %1178, label %1177

1177:                                             ; preds = %1172
  call void @_ZdlPv(ptr noundef %1174) #58
  br label %1178

1178:                                             ; preds = %1177, %1172
  %1179 = load ptr, ptr %1166, align 8, !tbaa !23
  %1180 = getelementptr inbounds %"struct.std::pair.85", ptr %110, i64 0, i32 1, i32 0, i32 2
  %1181 = icmp eq ptr %1179, %1180
  br i1 %1181, label %1183, label %1182

1182:                                             ; preds = %1178
  call void @_ZdlPv(ptr noundef %1179) #58
  br label %1183

1183:                                             ; preds = %1182, %1178
  %1184 = load ptr, ptr %110, align 8, !tbaa !23
  %1185 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %110, i64 0, i32 2
  %1186 = icmp eq ptr %1184, %1185
  br i1 %1186, label %1188, label %1187

1187:                                             ; preds = %1183
  call void @_ZdlPv(ptr noundef %1184) #58
  br label %1188

1188:                                             ; preds = %1187, %1183
  %1189 = load ptr, ptr %111, align 8, !tbaa !23
  %1190 = icmp eq ptr %1189, %1157
  br i1 %1190, label %1192, label %1191

1191:                                             ; preds = %1188
  call void @_ZdlPv(ptr noundef %1189) #58
  br label %1192

1192:                                             ; preds = %1191, %1188
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %111) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %110) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %112) #57
  %1193 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %113, i64 0, i32 2
  store ptr %1193, ptr %113, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %113, ptr noundef nonnull @.str.156, ptr noundef nonnull getelementptr inbounds ([4 x i8], ptr @.str.156, i64 0, i64 3)) #56
          to label %1194 unwind label %3424

1194:                                             ; preds = %1192
  %1195 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %114, i64 0, i32 2
  store ptr %1195, ptr %114, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %114, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1196 unwind label %3426

1196:                                             ; preds = %1194
  %1197 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %115, i64 0, i32 2
  store ptr %1197, ptr %115, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %115, ptr noundef nonnull @.str.157, ptr noundef nonnull getelementptr inbounds ([21 x i8], ptr @.str.157, i64 0, i64 20)) #56
          to label %1198 unwind label %3428

1198:                                             ; preds = %1196
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %112, ptr noundef nonnull %113, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %114, ptr noundef nonnull %115) #56
          to label %1199 unwind label %3430

1199:                                             ; preds = %1198
  %1200 = load ptr, ptr %115, align 8, !tbaa !23
  %1201 = icmp eq ptr %1200, %1197
  br i1 %1201, label %1203, label %1202

1202:                                             ; preds = %1199
  call void @_ZdlPv(ptr noundef %1200) #58
  br label %1203

1203:                                             ; preds = %1202, %1199
  %1204 = load ptr, ptr %114, align 8, !tbaa !23
  %1205 = icmp eq ptr %1204, %1195
  br i1 %1205, label %1207, label %1206

1206:                                             ; preds = %1203
  call void @_ZdlPv(ptr noundef %1204) #58
  br label %1207

1207:                                             ; preds = %1206, %1203
  %1208 = load ptr, ptr %113, align 8, !tbaa !23
  %1209 = icmp eq ptr %1208, %1193
  br i1 %1209, label %1211, label %1210

1210:                                             ; preds = %1207
  call void @_ZdlPv(ptr noundef %1208) #58
  br label %1211

1211:                                             ; preds = %1210, %1207
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %116) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %117) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !366)
  %1212 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %117, i64 0, i32 2
  store ptr %1212, ptr %117, align 8, !tbaa !78, !alias.scope !366
  %1213 = load ptr, ptr %112, align 8, !tbaa !23, !noalias !366
  %1214 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %112, i64 0, i32 1
  %1215 = load i64, ptr %1214, align 8, !tbaa !49, !noalias !366
  %1216 = getelementptr inbounds i8, ptr %1213, i64 %1215
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %117, ptr noundef %1213, ptr noundef %1216) #56
          to label %1217 unwind label %3445

1217:                                             ; preds = %1211
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %116, ptr noundef nonnull align 8 dereferenceable(32) %117, ptr noundef nonnull align 8 dereferenceable(104) %112) #56
          to label %1218 unwind label %3447

1218:                                             ; preds = %1217
  %1219 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %116) #56
          to label %1220 unwind label %3449

1220:                                             ; preds = %1218
  %1221 = getelementptr inbounds %"struct.std::pair.85", ptr %116, i64 0, i32 1
  %1222 = getelementptr inbounds %"struct.std::pair.85", ptr %116, i64 0, i32 1, i32 4
  %1223 = load ptr, ptr %1222, align 8, !tbaa !23
  %1224 = getelementptr inbounds %"struct.std::pair.85", ptr %116, i64 0, i32 1, i32 4, i32 2
  %1225 = icmp eq ptr %1223, %1224
  br i1 %1225, label %1227, label %1226

1226:                                             ; preds = %1220
  call void @_ZdlPv(ptr noundef %1223) #58
  br label %1227

1227:                                             ; preds = %1226, %1220
  %1228 = getelementptr inbounds %"struct.std::pair.85", ptr %116, i64 0, i32 1, i32 3
  %1229 = load ptr, ptr %1228, align 8, !tbaa !23
  %1230 = getelementptr inbounds %"struct.std::pair.85", ptr %116, i64 0, i32 1, i32 3, i32 2
  %1231 = icmp eq ptr %1229, %1230
  br i1 %1231, label %1233, label %1232

1232:                                             ; preds = %1227
  call void @_ZdlPv(ptr noundef %1229) #58
  br label %1233

1233:                                             ; preds = %1232, %1227
  %1234 = load ptr, ptr %1221, align 8, !tbaa !23
  %1235 = getelementptr inbounds %"struct.std::pair.85", ptr %116, i64 0, i32 1, i32 0, i32 2
  %1236 = icmp eq ptr %1234, %1235
  br i1 %1236, label %1238, label %1237

1237:                                             ; preds = %1233
  call void @_ZdlPv(ptr noundef %1234) #58
  br label %1238

1238:                                             ; preds = %1237, %1233
  %1239 = load ptr, ptr %116, align 8, !tbaa !23
  %1240 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %116, i64 0, i32 2
  %1241 = icmp eq ptr %1239, %1240
  br i1 %1241, label %1243, label %1242

1242:                                             ; preds = %1238
  call void @_ZdlPv(ptr noundef %1239) #58
  br label %1243

1243:                                             ; preds = %1242, %1238
  %1244 = load ptr, ptr %117, align 8, !tbaa !23
  %1245 = icmp eq ptr %1244, %1212
  br i1 %1245, label %1247, label %1246

1246:                                             ; preds = %1243
  call void @_ZdlPv(ptr noundef %1244) #58
  br label %1247

1247:                                             ; preds = %1246, %1243
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %117) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %116) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %118) #57
  %1248 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %119, i64 0, i32 2
  store ptr %1248, ptr %119, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %119, ptr noundef nonnull @.str.158, ptr noundef nonnull getelementptr inbounds ([6 x i8], ptr @.str.158, i64 0, i64 5)) #56
          to label %1249 unwind label %3458

1249:                                             ; preds = %1247
  %1250 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %120, i64 0, i32 2
  store ptr %1250, ptr %120, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %120, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1251 unwind label %3460

1251:                                             ; preds = %1249
  %1252 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %121, i64 0, i32 2
  store ptr %1252, ptr %121, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %121, ptr noundef nonnull @.str.159, ptr noundef nonnull getelementptr inbounds ([22 x i8], ptr @.str.159, i64 0, i64 21)) #56
          to label %1253 unwind label %3462

1253:                                             ; preds = %1251
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %118, ptr noundef nonnull %119, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %120, ptr noundef nonnull %121) #56
          to label %1254 unwind label %3464

1254:                                             ; preds = %1253
  %1255 = load ptr, ptr %121, align 8, !tbaa !23
  %1256 = icmp eq ptr %1255, %1252
  br i1 %1256, label %1258, label %1257

1257:                                             ; preds = %1254
  call void @_ZdlPv(ptr noundef %1255) #58
  br label %1258

1258:                                             ; preds = %1257, %1254
  %1259 = load ptr, ptr %120, align 8, !tbaa !23
  %1260 = icmp eq ptr %1259, %1250
  br i1 %1260, label %1262, label %1261

1261:                                             ; preds = %1258
  call void @_ZdlPv(ptr noundef %1259) #58
  br label %1262

1262:                                             ; preds = %1261, %1258
  %1263 = load ptr, ptr %119, align 8, !tbaa !23
  %1264 = icmp eq ptr %1263, %1248
  br i1 %1264, label %1266, label %1265

1265:                                             ; preds = %1262
  call void @_ZdlPv(ptr noundef %1263) #58
  br label %1266

1266:                                             ; preds = %1265, %1262
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %122) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %123) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !369)
  %1267 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %123, i64 0, i32 2
  store ptr %1267, ptr %123, align 8, !tbaa !78, !alias.scope !369
  %1268 = load ptr, ptr %118, align 8, !tbaa !23, !noalias !369
  %1269 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %118, i64 0, i32 1
  %1270 = load i64, ptr %1269, align 8, !tbaa !49, !noalias !369
  %1271 = getelementptr inbounds i8, ptr %1268, i64 %1270
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %123, ptr noundef %1268, ptr noundef %1271) #56
          to label %1272 unwind label %3479

1272:                                             ; preds = %1266
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %122, ptr noundef nonnull align 8 dereferenceable(32) %123, ptr noundef nonnull align 8 dereferenceable(104) %118) #56
          to label %1273 unwind label %3481

1273:                                             ; preds = %1272
  %1274 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %122) #56
          to label %1275 unwind label %3483

1275:                                             ; preds = %1273
  %1276 = getelementptr inbounds %"struct.std::pair.85", ptr %122, i64 0, i32 1
  %1277 = getelementptr inbounds %"struct.std::pair.85", ptr %122, i64 0, i32 1, i32 4
  %1278 = load ptr, ptr %1277, align 8, !tbaa !23
  %1279 = getelementptr inbounds %"struct.std::pair.85", ptr %122, i64 0, i32 1, i32 4, i32 2
  %1280 = icmp eq ptr %1278, %1279
  br i1 %1280, label %1282, label %1281

1281:                                             ; preds = %1275
  call void @_ZdlPv(ptr noundef %1278) #58
  br label %1282

1282:                                             ; preds = %1281, %1275
  %1283 = getelementptr inbounds %"struct.std::pair.85", ptr %122, i64 0, i32 1, i32 3
  %1284 = load ptr, ptr %1283, align 8, !tbaa !23
  %1285 = getelementptr inbounds %"struct.std::pair.85", ptr %122, i64 0, i32 1, i32 3, i32 2
  %1286 = icmp eq ptr %1284, %1285
  br i1 %1286, label %1288, label %1287

1287:                                             ; preds = %1282
  call void @_ZdlPv(ptr noundef %1284) #58
  br label %1288

1288:                                             ; preds = %1287, %1282
  %1289 = load ptr, ptr %1276, align 8, !tbaa !23
  %1290 = getelementptr inbounds %"struct.std::pair.85", ptr %122, i64 0, i32 1, i32 0, i32 2
  %1291 = icmp eq ptr %1289, %1290
  br i1 %1291, label %1293, label %1292

1292:                                             ; preds = %1288
  call void @_ZdlPv(ptr noundef %1289) #58
  br label %1293

1293:                                             ; preds = %1292, %1288
  %1294 = load ptr, ptr %122, align 8, !tbaa !23
  %1295 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %122, i64 0, i32 2
  %1296 = icmp eq ptr %1294, %1295
  br i1 %1296, label %1298, label %1297

1297:                                             ; preds = %1293
  call void @_ZdlPv(ptr noundef %1294) #58
  br label %1298

1298:                                             ; preds = %1297, %1293
  %1299 = load ptr, ptr %123, align 8, !tbaa !23
  %1300 = icmp eq ptr %1299, %1267
  br i1 %1300, label %1302, label %1301

1301:                                             ; preds = %1298
  call void @_ZdlPv(ptr noundef %1299) #58
  br label %1302

1302:                                             ; preds = %1301, %1298
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %123) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %122) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %124) #57
  %1303 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %125, i64 0, i32 2
  store ptr %1303, ptr %125, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %125, ptr noundef nonnull @.str.160, ptr noundef nonnull getelementptr inbounds ([4 x i8], ptr @.str.160, i64 0, i64 3)) #56
          to label %1304 unwind label %3492

1304:                                             ; preds = %1302
  %1305 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %126, i64 0, i32 2
  store ptr %1305, ptr %126, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %126, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1306 unwind label %3494

1306:                                             ; preds = %1304
  %1307 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %127, i64 0, i32 2
  store ptr %1307, ptr %127, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %127, ptr noundef nonnull @.str.161, ptr noundef nonnull getelementptr inbounds ([21 x i8], ptr @.str.161, i64 0, i64 20)) #56
          to label %1308 unwind label %3496

1308:                                             ; preds = %1306
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %124, ptr noundef nonnull %125, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %126, ptr noundef nonnull %127) #56
          to label %1309 unwind label %3498

1309:                                             ; preds = %1308
  %1310 = load ptr, ptr %127, align 8, !tbaa !23
  %1311 = icmp eq ptr %1310, %1307
  br i1 %1311, label %1313, label %1312

1312:                                             ; preds = %1309
  call void @_ZdlPv(ptr noundef %1310) #58
  br label %1313

1313:                                             ; preds = %1312, %1309
  %1314 = load ptr, ptr %126, align 8, !tbaa !23
  %1315 = icmp eq ptr %1314, %1305
  br i1 %1315, label %1317, label %1316

1316:                                             ; preds = %1313
  call void @_ZdlPv(ptr noundef %1314) #58
  br label %1317

1317:                                             ; preds = %1316, %1313
  %1318 = load ptr, ptr %125, align 8, !tbaa !23
  %1319 = icmp eq ptr %1318, %1303
  br i1 %1319, label %1321, label %1320

1320:                                             ; preds = %1317
  call void @_ZdlPv(ptr noundef %1318) #58
  br label %1321

1321:                                             ; preds = %1320, %1317
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %128) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %129) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !372)
  %1322 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %129, i64 0, i32 2
  store ptr %1322, ptr %129, align 8, !tbaa !78, !alias.scope !372
  %1323 = load ptr, ptr %124, align 8, !tbaa !23, !noalias !372
  %1324 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %124, i64 0, i32 1
  %1325 = load i64, ptr %1324, align 8, !tbaa !49, !noalias !372
  %1326 = getelementptr inbounds i8, ptr %1323, i64 %1325
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %129, ptr noundef %1323, ptr noundef %1326) #56
          to label %1327 unwind label %3513

1327:                                             ; preds = %1321
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %128, ptr noundef nonnull align 8 dereferenceable(32) %129, ptr noundef nonnull align 8 dereferenceable(104) %124) #56
          to label %1328 unwind label %3515

1328:                                             ; preds = %1327
  %1329 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %128) #56
          to label %1330 unwind label %3517

1330:                                             ; preds = %1328
  %1331 = getelementptr inbounds %"struct.std::pair.85", ptr %128, i64 0, i32 1
  %1332 = getelementptr inbounds %"struct.std::pair.85", ptr %128, i64 0, i32 1, i32 4
  %1333 = load ptr, ptr %1332, align 8, !tbaa !23
  %1334 = getelementptr inbounds %"struct.std::pair.85", ptr %128, i64 0, i32 1, i32 4, i32 2
  %1335 = icmp eq ptr %1333, %1334
  br i1 %1335, label %1337, label %1336

1336:                                             ; preds = %1330
  call void @_ZdlPv(ptr noundef %1333) #58
  br label %1337

1337:                                             ; preds = %1336, %1330
  %1338 = getelementptr inbounds %"struct.std::pair.85", ptr %128, i64 0, i32 1, i32 3
  %1339 = load ptr, ptr %1338, align 8, !tbaa !23
  %1340 = getelementptr inbounds %"struct.std::pair.85", ptr %128, i64 0, i32 1, i32 3, i32 2
  %1341 = icmp eq ptr %1339, %1340
  br i1 %1341, label %1343, label %1342

1342:                                             ; preds = %1337
  call void @_ZdlPv(ptr noundef %1339) #58
  br label %1343

1343:                                             ; preds = %1342, %1337
  %1344 = load ptr, ptr %1331, align 8, !tbaa !23
  %1345 = getelementptr inbounds %"struct.std::pair.85", ptr %128, i64 0, i32 1, i32 0, i32 2
  %1346 = icmp eq ptr %1344, %1345
  br i1 %1346, label %1348, label %1347

1347:                                             ; preds = %1343
  call void @_ZdlPv(ptr noundef %1344) #58
  br label %1348

1348:                                             ; preds = %1347, %1343
  %1349 = load ptr, ptr %128, align 8, !tbaa !23
  %1350 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %128, i64 0, i32 2
  %1351 = icmp eq ptr %1349, %1350
  br i1 %1351, label %1353, label %1352

1352:                                             ; preds = %1348
  call void @_ZdlPv(ptr noundef %1349) #58
  br label %1353

1353:                                             ; preds = %1352, %1348
  %1354 = load ptr, ptr %129, align 8, !tbaa !23
  %1355 = icmp eq ptr %1354, %1322
  br i1 %1355, label %1357, label %1356

1356:                                             ; preds = %1353
  call void @_ZdlPv(ptr noundef %1354) #58
  br label %1357

1357:                                             ; preds = %1356, %1353
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %129) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %128) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %130) #57
  %1358 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %131, i64 0, i32 2
  store ptr %1358, ptr %131, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %131, ptr noundef nonnull @.str.162, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.162, i64 0, i64 4)) #56
          to label %1359 unwind label %3526

1359:                                             ; preds = %1357
  %1360 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %132, i64 0, i32 2
  store ptr %1360, ptr %132, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %132, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1361 unwind label %3528

1361:                                             ; preds = %1359
  %1362 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %133, i64 0, i32 2
  store ptr %1362, ptr %133, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %133, ptr noundef nonnull @.str.163, ptr noundef nonnull getelementptr inbounds ([16 x i8], ptr @.str.163, i64 0, i64 15)) #56
          to label %1363 unwind label %3530

1363:                                             ; preds = %1361
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %130, ptr noundef nonnull %131, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %132, ptr noundef nonnull %133) #56
          to label %1364 unwind label %3532

1364:                                             ; preds = %1363
  %1365 = load ptr, ptr %133, align 8, !tbaa !23
  %1366 = icmp eq ptr %1365, %1362
  br i1 %1366, label %1368, label %1367

1367:                                             ; preds = %1364
  call void @_ZdlPv(ptr noundef %1365) #58
  br label %1368

1368:                                             ; preds = %1367, %1364
  %1369 = load ptr, ptr %132, align 8, !tbaa !23
  %1370 = icmp eq ptr %1369, %1360
  br i1 %1370, label %1372, label %1371

1371:                                             ; preds = %1368
  call void @_ZdlPv(ptr noundef %1369) #58
  br label %1372

1372:                                             ; preds = %1371, %1368
  %1373 = load ptr, ptr %131, align 8, !tbaa !23
  %1374 = icmp eq ptr %1373, %1358
  br i1 %1374, label %1376, label %1375

1375:                                             ; preds = %1372
  call void @_ZdlPv(ptr noundef %1373) #58
  br label %1376

1376:                                             ; preds = %1375, %1372
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %134) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %135) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !375)
  %1377 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %135, i64 0, i32 2
  store ptr %1377, ptr %135, align 8, !tbaa !78, !alias.scope !375
  %1378 = load ptr, ptr %130, align 8, !tbaa !23, !noalias !375
  %1379 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %130, i64 0, i32 1
  %1380 = load i64, ptr %1379, align 8, !tbaa !49, !noalias !375
  %1381 = getelementptr inbounds i8, ptr %1378, i64 %1380
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %135, ptr noundef %1378, ptr noundef %1381) #56
          to label %1382 unwind label %3547

1382:                                             ; preds = %1376
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %134, ptr noundef nonnull align 8 dereferenceable(32) %135, ptr noundef nonnull align 8 dereferenceable(104) %130) #56
          to label %1383 unwind label %3549

1383:                                             ; preds = %1382
  %1384 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %134) #56
          to label %1385 unwind label %3551

1385:                                             ; preds = %1383
  %1386 = getelementptr inbounds %"struct.std::pair.85", ptr %134, i64 0, i32 1
  %1387 = getelementptr inbounds %"struct.std::pair.85", ptr %134, i64 0, i32 1, i32 4
  %1388 = load ptr, ptr %1387, align 8, !tbaa !23
  %1389 = getelementptr inbounds %"struct.std::pair.85", ptr %134, i64 0, i32 1, i32 4, i32 2
  %1390 = icmp eq ptr %1388, %1389
  br i1 %1390, label %1392, label %1391

1391:                                             ; preds = %1385
  call void @_ZdlPv(ptr noundef %1388) #58
  br label %1392

1392:                                             ; preds = %1391, %1385
  %1393 = getelementptr inbounds %"struct.std::pair.85", ptr %134, i64 0, i32 1, i32 3
  %1394 = load ptr, ptr %1393, align 8, !tbaa !23
  %1395 = getelementptr inbounds %"struct.std::pair.85", ptr %134, i64 0, i32 1, i32 3, i32 2
  %1396 = icmp eq ptr %1394, %1395
  br i1 %1396, label %1398, label %1397

1397:                                             ; preds = %1392
  call void @_ZdlPv(ptr noundef %1394) #58
  br label %1398

1398:                                             ; preds = %1397, %1392
  %1399 = load ptr, ptr %1386, align 8, !tbaa !23
  %1400 = getelementptr inbounds %"struct.std::pair.85", ptr %134, i64 0, i32 1, i32 0, i32 2
  %1401 = icmp eq ptr %1399, %1400
  br i1 %1401, label %1403, label %1402

1402:                                             ; preds = %1398
  call void @_ZdlPv(ptr noundef %1399) #58
  br label %1403

1403:                                             ; preds = %1402, %1398
  %1404 = load ptr, ptr %134, align 8, !tbaa !23
  %1405 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %134, i64 0, i32 2
  %1406 = icmp eq ptr %1404, %1405
  br i1 %1406, label %1408, label %1407

1407:                                             ; preds = %1403
  call void @_ZdlPv(ptr noundef %1404) #58
  br label %1408

1408:                                             ; preds = %1407, %1403
  %1409 = load ptr, ptr %135, align 8, !tbaa !23
  %1410 = icmp eq ptr %1409, %1377
  br i1 %1410, label %1412, label %1411

1411:                                             ; preds = %1408
  call void @_ZdlPv(ptr noundef %1409) #58
  br label %1412

1412:                                             ; preds = %1411, %1408
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %135) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %134) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %136) #57
  %1413 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %137, i64 0, i32 2
  store ptr %1413, ptr %137, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %137, ptr noundef nonnull @.str.164, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.164, i64 0, i64 4)) #56
          to label %1414 unwind label %3560

1414:                                             ; preds = %1412
  %1415 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %138, i64 0, i32 2
  store ptr %1415, ptr %138, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %138, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1416 unwind label %3562

1416:                                             ; preds = %1414
  %1417 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %139, i64 0, i32 2
  store ptr %1417, ptr %139, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %139, ptr noundef nonnull @.str.165, ptr noundef nonnull getelementptr inbounds ([23 x i8], ptr @.str.165, i64 0, i64 22)) #56
          to label %1418 unwind label %3564

1418:                                             ; preds = %1416
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %136, ptr noundef nonnull %137, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %138, ptr noundef nonnull %139) #56
          to label %1419 unwind label %3566

1419:                                             ; preds = %1418
  %1420 = load ptr, ptr %139, align 8, !tbaa !23
  %1421 = icmp eq ptr %1420, %1417
  br i1 %1421, label %1423, label %1422

1422:                                             ; preds = %1419
  call void @_ZdlPv(ptr noundef %1420) #58
  br label %1423

1423:                                             ; preds = %1422, %1419
  %1424 = load ptr, ptr %138, align 8, !tbaa !23
  %1425 = icmp eq ptr %1424, %1415
  br i1 %1425, label %1427, label %1426

1426:                                             ; preds = %1423
  call void @_ZdlPv(ptr noundef %1424) #58
  br label %1427

1427:                                             ; preds = %1426, %1423
  %1428 = load ptr, ptr %137, align 8, !tbaa !23
  %1429 = icmp eq ptr %1428, %1413
  br i1 %1429, label %1431, label %1430

1430:                                             ; preds = %1427
  call void @_ZdlPv(ptr noundef %1428) #58
  br label %1431

1431:                                             ; preds = %1430, %1427
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %140) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %141) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !378)
  %1432 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %141, i64 0, i32 2
  store ptr %1432, ptr %141, align 8, !tbaa !78, !alias.scope !378
  %1433 = load ptr, ptr %136, align 8, !tbaa !23, !noalias !378
  %1434 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %136, i64 0, i32 1
  %1435 = load i64, ptr %1434, align 8, !tbaa !49, !noalias !378
  %1436 = getelementptr inbounds i8, ptr %1433, i64 %1435
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %141, ptr noundef %1433, ptr noundef %1436) #56
          to label %1437 unwind label %3581

1437:                                             ; preds = %1431
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %140, ptr noundef nonnull align 8 dereferenceable(32) %141, ptr noundef nonnull align 8 dereferenceable(104) %136) #56
          to label %1438 unwind label %3583

1438:                                             ; preds = %1437
  %1439 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %140) #56
          to label %1440 unwind label %3585

1440:                                             ; preds = %1438
  %1441 = getelementptr inbounds %"struct.std::pair.85", ptr %140, i64 0, i32 1
  %1442 = getelementptr inbounds %"struct.std::pair.85", ptr %140, i64 0, i32 1, i32 4
  %1443 = load ptr, ptr %1442, align 8, !tbaa !23
  %1444 = getelementptr inbounds %"struct.std::pair.85", ptr %140, i64 0, i32 1, i32 4, i32 2
  %1445 = icmp eq ptr %1443, %1444
  br i1 %1445, label %1447, label %1446

1446:                                             ; preds = %1440
  call void @_ZdlPv(ptr noundef %1443) #58
  br label %1447

1447:                                             ; preds = %1446, %1440
  %1448 = getelementptr inbounds %"struct.std::pair.85", ptr %140, i64 0, i32 1, i32 3
  %1449 = load ptr, ptr %1448, align 8, !tbaa !23
  %1450 = getelementptr inbounds %"struct.std::pair.85", ptr %140, i64 0, i32 1, i32 3, i32 2
  %1451 = icmp eq ptr %1449, %1450
  br i1 %1451, label %1453, label %1452

1452:                                             ; preds = %1447
  call void @_ZdlPv(ptr noundef %1449) #58
  br label %1453

1453:                                             ; preds = %1452, %1447
  %1454 = load ptr, ptr %1441, align 8, !tbaa !23
  %1455 = getelementptr inbounds %"struct.std::pair.85", ptr %140, i64 0, i32 1, i32 0, i32 2
  %1456 = icmp eq ptr %1454, %1455
  br i1 %1456, label %1458, label %1457

1457:                                             ; preds = %1453
  call void @_ZdlPv(ptr noundef %1454) #58
  br label %1458

1458:                                             ; preds = %1457, %1453
  %1459 = load ptr, ptr %140, align 8, !tbaa !23
  %1460 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %140, i64 0, i32 2
  %1461 = icmp eq ptr %1459, %1460
  br i1 %1461, label %1463, label %1462

1462:                                             ; preds = %1458
  call void @_ZdlPv(ptr noundef %1459) #58
  br label %1463

1463:                                             ; preds = %1462, %1458
  %1464 = load ptr, ptr %141, align 8, !tbaa !23
  %1465 = icmp eq ptr %1464, %1432
  br i1 %1465, label %1467, label %1466

1466:                                             ; preds = %1463
  call void @_ZdlPv(ptr noundef %1464) #58
  br label %1467

1467:                                             ; preds = %1466, %1463
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %141) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %140) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %142) #57
  %1468 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %143, i64 0, i32 2
  store ptr %1468, ptr %143, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %143, ptr noundef nonnull @.str.166, ptr noundef nonnull getelementptr inbounds ([4 x i8], ptr @.str.166, i64 0, i64 3)) #56
          to label %1469 unwind label %3594

1469:                                             ; preds = %1467
  %1470 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %144, i64 0, i32 2
  store ptr %1470, ptr %144, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %144, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1471 unwind label %3596

1471:                                             ; preds = %1469
  %1472 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %145, i64 0, i32 2
  store ptr %1472, ptr %145, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %145, ptr noundef nonnull @.str.167, ptr noundef nonnull getelementptr inbounds ([24 x i8], ptr @.str.167, i64 0, i64 23)) #56
          to label %1473 unwind label %3598

1473:                                             ; preds = %1471
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %142, ptr noundef nonnull %143, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %144, ptr noundef nonnull %145) #56
          to label %1474 unwind label %3600

1474:                                             ; preds = %1473
  %1475 = load ptr, ptr %145, align 8, !tbaa !23
  %1476 = icmp eq ptr %1475, %1472
  br i1 %1476, label %1478, label %1477

1477:                                             ; preds = %1474
  call void @_ZdlPv(ptr noundef %1475) #58
  br label %1478

1478:                                             ; preds = %1477, %1474
  %1479 = load ptr, ptr %144, align 8, !tbaa !23
  %1480 = icmp eq ptr %1479, %1470
  br i1 %1480, label %1482, label %1481

1481:                                             ; preds = %1478
  call void @_ZdlPv(ptr noundef %1479) #58
  br label %1482

1482:                                             ; preds = %1481, %1478
  %1483 = load ptr, ptr %143, align 8, !tbaa !23
  %1484 = icmp eq ptr %1483, %1468
  br i1 %1484, label %1486, label %1485

1485:                                             ; preds = %1482
  call void @_ZdlPv(ptr noundef %1483) #58
  br label %1486

1486:                                             ; preds = %1485, %1482
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %146) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %147) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !381)
  %1487 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %147, i64 0, i32 2
  store ptr %1487, ptr %147, align 8, !tbaa !78, !alias.scope !381
  %1488 = load ptr, ptr %142, align 8, !tbaa !23, !noalias !381
  %1489 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %142, i64 0, i32 1
  %1490 = load i64, ptr %1489, align 8, !tbaa !49, !noalias !381
  %1491 = getelementptr inbounds i8, ptr %1488, i64 %1490
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %147, ptr noundef %1488, ptr noundef %1491) #56
          to label %1492 unwind label %3615

1492:                                             ; preds = %1486
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %146, ptr noundef nonnull align 8 dereferenceable(32) %147, ptr noundef nonnull align 8 dereferenceable(104) %142) #56
          to label %1493 unwind label %3617

1493:                                             ; preds = %1492
  %1494 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %146) #56
          to label %1495 unwind label %3619

1495:                                             ; preds = %1493
  %1496 = getelementptr inbounds %"struct.std::pair.85", ptr %146, i64 0, i32 1
  %1497 = getelementptr inbounds %"struct.std::pair.85", ptr %146, i64 0, i32 1, i32 4
  %1498 = load ptr, ptr %1497, align 8, !tbaa !23
  %1499 = getelementptr inbounds %"struct.std::pair.85", ptr %146, i64 0, i32 1, i32 4, i32 2
  %1500 = icmp eq ptr %1498, %1499
  br i1 %1500, label %1502, label %1501

1501:                                             ; preds = %1495
  call void @_ZdlPv(ptr noundef %1498) #58
  br label %1502

1502:                                             ; preds = %1501, %1495
  %1503 = getelementptr inbounds %"struct.std::pair.85", ptr %146, i64 0, i32 1, i32 3
  %1504 = load ptr, ptr %1503, align 8, !tbaa !23
  %1505 = getelementptr inbounds %"struct.std::pair.85", ptr %146, i64 0, i32 1, i32 3, i32 2
  %1506 = icmp eq ptr %1504, %1505
  br i1 %1506, label %1508, label %1507

1507:                                             ; preds = %1502
  call void @_ZdlPv(ptr noundef %1504) #58
  br label %1508

1508:                                             ; preds = %1507, %1502
  %1509 = load ptr, ptr %1496, align 8, !tbaa !23
  %1510 = getelementptr inbounds %"struct.std::pair.85", ptr %146, i64 0, i32 1, i32 0, i32 2
  %1511 = icmp eq ptr %1509, %1510
  br i1 %1511, label %1513, label %1512

1512:                                             ; preds = %1508
  call void @_ZdlPv(ptr noundef %1509) #58
  br label %1513

1513:                                             ; preds = %1512, %1508
  %1514 = load ptr, ptr %146, align 8, !tbaa !23
  %1515 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %146, i64 0, i32 2
  %1516 = icmp eq ptr %1514, %1515
  br i1 %1516, label %1518, label %1517

1517:                                             ; preds = %1513
  call void @_ZdlPv(ptr noundef %1514) #58
  br label %1518

1518:                                             ; preds = %1517, %1513
  %1519 = load ptr, ptr %147, align 8, !tbaa !23
  %1520 = icmp eq ptr %1519, %1487
  br i1 %1520, label %1522, label %1521

1521:                                             ; preds = %1518
  call void @_ZdlPv(ptr noundef %1519) #58
  br label %1522

1522:                                             ; preds = %1521, %1518
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %147) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %146) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %148) #57
  %1523 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %149, i64 0, i32 2
  store ptr %1523, ptr %149, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %149, ptr noundef nonnull @.str.168, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.168, i64 0, i64 4)) #56
          to label %1524 unwind label %3628

1524:                                             ; preds = %1522
  %1525 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %150, i64 0, i32 2
  store ptr %1525, ptr %150, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %150, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1526 unwind label %3630

1526:                                             ; preds = %1524
  %1527 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %151, i64 0, i32 2
  store ptr %1527, ptr %151, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %151, ptr noundef nonnull @.str.169, ptr noundef nonnull getelementptr inbounds ([19 x i8], ptr @.str.169, i64 0, i64 18)) #56
          to label %1528 unwind label %3632

1528:                                             ; preds = %1526
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %148, ptr noundef nonnull %149, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %150, ptr noundef nonnull %151) #56
          to label %1529 unwind label %3634

1529:                                             ; preds = %1528
  %1530 = load ptr, ptr %151, align 8, !tbaa !23
  %1531 = icmp eq ptr %1530, %1527
  br i1 %1531, label %1533, label %1532

1532:                                             ; preds = %1529
  call void @_ZdlPv(ptr noundef %1530) #58
  br label %1533

1533:                                             ; preds = %1532, %1529
  %1534 = load ptr, ptr %150, align 8, !tbaa !23
  %1535 = icmp eq ptr %1534, %1525
  br i1 %1535, label %1537, label %1536

1536:                                             ; preds = %1533
  call void @_ZdlPv(ptr noundef %1534) #58
  br label %1537

1537:                                             ; preds = %1536, %1533
  %1538 = load ptr, ptr %149, align 8, !tbaa !23
  %1539 = icmp eq ptr %1538, %1523
  br i1 %1539, label %1541, label %1540

1540:                                             ; preds = %1537
  call void @_ZdlPv(ptr noundef %1538) #58
  br label %1541

1541:                                             ; preds = %1540, %1537
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %152) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %153) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !384)
  %1542 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %153, i64 0, i32 2
  store ptr %1542, ptr %153, align 8, !tbaa !78, !alias.scope !384
  %1543 = load ptr, ptr %148, align 8, !tbaa !23, !noalias !384
  %1544 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %148, i64 0, i32 1
  %1545 = load i64, ptr %1544, align 8, !tbaa !49, !noalias !384
  %1546 = getelementptr inbounds i8, ptr %1543, i64 %1545
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %153, ptr noundef %1543, ptr noundef %1546) #56
          to label %1547 unwind label %3649

1547:                                             ; preds = %1541
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %152, ptr noundef nonnull align 8 dereferenceable(32) %153, ptr noundef nonnull align 8 dereferenceable(104) %148) #56
          to label %1548 unwind label %3651

1548:                                             ; preds = %1547
  %1549 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %152) #56
          to label %1550 unwind label %3653

1550:                                             ; preds = %1548
  %1551 = getelementptr inbounds %"struct.std::pair.85", ptr %152, i64 0, i32 1
  %1552 = getelementptr inbounds %"struct.std::pair.85", ptr %152, i64 0, i32 1, i32 4
  %1553 = load ptr, ptr %1552, align 8, !tbaa !23
  %1554 = getelementptr inbounds %"struct.std::pair.85", ptr %152, i64 0, i32 1, i32 4, i32 2
  %1555 = icmp eq ptr %1553, %1554
  br i1 %1555, label %1557, label %1556

1556:                                             ; preds = %1550
  call void @_ZdlPv(ptr noundef %1553) #58
  br label %1557

1557:                                             ; preds = %1556, %1550
  %1558 = getelementptr inbounds %"struct.std::pair.85", ptr %152, i64 0, i32 1, i32 3
  %1559 = load ptr, ptr %1558, align 8, !tbaa !23
  %1560 = getelementptr inbounds %"struct.std::pair.85", ptr %152, i64 0, i32 1, i32 3, i32 2
  %1561 = icmp eq ptr %1559, %1560
  br i1 %1561, label %1563, label %1562

1562:                                             ; preds = %1557
  call void @_ZdlPv(ptr noundef %1559) #58
  br label %1563

1563:                                             ; preds = %1562, %1557
  %1564 = load ptr, ptr %1551, align 8, !tbaa !23
  %1565 = getelementptr inbounds %"struct.std::pair.85", ptr %152, i64 0, i32 1, i32 0, i32 2
  %1566 = icmp eq ptr %1564, %1565
  br i1 %1566, label %1568, label %1567

1567:                                             ; preds = %1563
  call void @_ZdlPv(ptr noundef %1564) #58
  br label %1568

1568:                                             ; preds = %1567, %1563
  %1569 = load ptr, ptr %152, align 8, !tbaa !23
  %1570 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %152, i64 0, i32 2
  %1571 = icmp eq ptr %1569, %1570
  br i1 %1571, label %1573, label %1572

1572:                                             ; preds = %1568
  call void @_ZdlPv(ptr noundef %1569) #58
  br label %1573

1573:                                             ; preds = %1572, %1568
  %1574 = load ptr, ptr %153, align 8, !tbaa !23
  %1575 = icmp eq ptr %1574, %1542
  br i1 %1575, label %1577, label %1576

1576:                                             ; preds = %1573
  call void @_ZdlPv(ptr noundef %1574) #58
  br label %1577

1577:                                             ; preds = %1576, %1573
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %153) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %152) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %154) #57
  %1578 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %155, i64 0, i32 2
  store ptr %1578, ptr %155, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %155, ptr noundef nonnull @.str.170, ptr noundef nonnull getelementptr inbounds ([6 x i8], ptr @.str.170, i64 0, i64 5)) #56
          to label %1579 unwind label %3662

1579:                                             ; preds = %1577
  %1580 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %156, i64 0, i32 2
  store ptr %1580, ptr %156, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %156, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1581 unwind label %3664

1581:                                             ; preds = %1579
  %1582 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %157, i64 0, i32 2
  store ptr %1582, ptr %157, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %157, ptr noundef nonnull @.str.171, ptr noundef nonnull getelementptr inbounds ([19 x i8], ptr @.str.171, i64 0, i64 18)) #56
          to label %1583 unwind label %3666

1583:                                             ; preds = %1581
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %154, ptr noundef nonnull %155, i1 noundef zeroext true, i32 noundef 2, ptr noundef nonnull %156, ptr noundef nonnull %157) #56
          to label %1584 unwind label %3668

1584:                                             ; preds = %1583
  %1585 = load ptr, ptr %157, align 8, !tbaa !23
  %1586 = icmp eq ptr %1585, %1582
  br i1 %1586, label %1588, label %1587

1587:                                             ; preds = %1584
  call void @_ZdlPv(ptr noundef %1585) #58
  br label %1588

1588:                                             ; preds = %1587, %1584
  %1589 = load ptr, ptr %156, align 8, !tbaa !23
  %1590 = icmp eq ptr %1589, %1580
  br i1 %1590, label %1592, label %1591

1591:                                             ; preds = %1588
  call void @_ZdlPv(ptr noundef %1589) #58
  br label %1592

1592:                                             ; preds = %1591, %1588
  %1593 = load ptr, ptr %155, align 8, !tbaa !23
  %1594 = icmp eq ptr %1593, %1578
  br i1 %1594, label %1596, label %1595

1595:                                             ; preds = %1592
  call void @_ZdlPv(ptr noundef %1593) #58
  br label %1596

1596:                                             ; preds = %1595, %1592
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %158) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %159) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !387)
  %1597 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %159, i64 0, i32 2
  store ptr %1597, ptr %159, align 8, !tbaa !78, !alias.scope !387
  %1598 = load ptr, ptr %154, align 8, !tbaa !23, !noalias !387
  %1599 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %154, i64 0, i32 1
  %1600 = load i64, ptr %1599, align 8, !tbaa !49, !noalias !387
  %1601 = getelementptr inbounds i8, ptr %1598, i64 %1600
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %159, ptr noundef %1598, ptr noundef %1601) #56
          to label %1602 unwind label %3683

1602:                                             ; preds = %1596
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %158, ptr noundef nonnull align 8 dereferenceable(32) %159, ptr noundef nonnull align 8 dereferenceable(104) %154) #56
          to label %1603 unwind label %3685

1603:                                             ; preds = %1602
  %1604 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %158) #56
          to label %1605 unwind label %3687

1605:                                             ; preds = %1603
  %1606 = getelementptr inbounds %"struct.std::pair.85", ptr %158, i64 0, i32 1
  %1607 = getelementptr inbounds %"struct.std::pair.85", ptr %158, i64 0, i32 1, i32 4
  %1608 = load ptr, ptr %1607, align 8, !tbaa !23
  %1609 = getelementptr inbounds %"struct.std::pair.85", ptr %158, i64 0, i32 1, i32 4, i32 2
  %1610 = icmp eq ptr %1608, %1609
  br i1 %1610, label %1612, label %1611

1611:                                             ; preds = %1605
  call void @_ZdlPv(ptr noundef %1608) #58
  br label %1612

1612:                                             ; preds = %1611, %1605
  %1613 = getelementptr inbounds %"struct.std::pair.85", ptr %158, i64 0, i32 1, i32 3
  %1614 = load ptr, ptr %1613, align 8, !tbaa !23
  %1615 = getelementptr inbounds %"struct.std::pair.85", ptr %158, i64 0, i32 1, i32 3, i32 2
  %1616 = icmp eq ptr %1614, %1615
  br i1 %1616, label %1618, label %1617

1617:                                             ; preds = %1612
  call void @_ZdlPv(ptr noundef %1614) #58
  br label %1618

1618:                                             ; preds = %1617, %1612
  %1619 = load ptr, ptr %1606, align 8, !tbaa !23
  %1620 = getelementptr inbounds %"struct.std::pair.85", ptr %158, i64 0, i32 1, i32 0, i32 2
  %1621 = icmp eq ptr %1619, %1620
  br i1 %1621, label %1623, label %1622

1622:                                             ; preds = %1618
  call void @_ZdlPv(ptr noundef %1619) #58
  br label %1623

1623:                                             ; preds = %1622, %1618
  %1624 = load ptr, ptr %158, align 8, !tbaa !23
  %1625 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %158, i64 0, i32 2
  %1626 = icmp eq ptr %1624, %1625
  br i1 %1626, label %1628, label %1627

1627:                                             ; preds = %1623
  call void @_ZdlPv(ptr noundef %1624) #58
  br label %1628

1628:                                             ; preds = %1627, %1623
  %1629 = load ptr, ptr %159, align 8, !tbaa !23
  %1630 = icmp eq ptr %1629, %1597
  br i1 %1630, label %1632, label %1631

1631:                                             ; preds = %1628
  call void @_ZdlPv(ptr noundef %1629) #58
  br label %1632

1632:                                             ; preds = %1631, %1628
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %159) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %158) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %160) #57
  %1633 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %161, i64 0, i32 2
  store ptr %1633, ptr %161, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %161, ptr noundef nonnull @.str.172, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.172, i64 0, i64 4)) #56
          to label %1634 unwind label %3696

1634:                                             ; preds = %1632
  %1635 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %162, i64 0, i32 2
  store ptr %1635, ptr %162, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %162, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1636 unwind label %3698

1636:                                             ; preds = %1634
  %1637 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %163, i64 0, i32 2
  store ptr %1637, ptr %163, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %163, ptr noundef nonnull @.str.173, ptr noundef nonnull getelementptr inbounds ([23 x i8], ptr @.str.173, i64 0, i64 22)) #56
          to label %1638 unwind label %3700

1638:                                             ; preds = %1636
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %160, ptr noundef nonnull %161, i1 noundef zeroext true, i32 noundef 2, ptr noundef nonnull %162, ptr noundef nonnull %163) #56
          to label %1639 unwind label %3702

1639:                                             ; preds = %1638
  %1640 = load ptr, ptr %163, align 8, !tbaa !23
  %1641 = icmp eq ptr %1640, %1637
  br i1 %1641, label %1643, label %1642

1642:                                             ; preds = %1639
  call void @_ZdlPv(ptr noundef %1640) #58
  br label %1643

1643:                                             ; preds = %1642, %1639
  %1644 = load ptr, ptr %162, align 8, !tbaa !23
  %1645 = icmp eq ptr %1644, %1635
  br i1 %1645, label %1647, label %1646

1646:                                             ; preds = %1643
  call void @_ZdlPv(ptr noundef %1644) #58
  br label %1647

1647:                                             ; preds = %1646, %1643
  %1648 = load ptr, ptr %161, align 8, !tbaa !23
  %1649 = icmp eq ptr %1648, %1633
  br i1 %1649, label %1651, label %1650

1650:                                             ; preds = %1647
  call void @_ZdlPv(ptr noundef %1648) #58
  br label %1651

1651:                                             ; preds = %1650, %1647
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %164) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %165) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !390)
  %1652 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %165, i64 0, i32 2
  store ptr %1652, ptr %165, align 8, !tbaa !78, !alias.scope !390
  %1653 = load ptr, ptr %160, align 8, !tbaa !23, !noalias !390
  %1654 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %160, i64 0, i32 1
  %1655 = load i64, ptr %1654, align 8, !tbaa !49, !noalias !390
  %1656 = getelementptr inbounds i8, ptr %1653, i64 %1655
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %165, ptr noundef %1653, ptr noundef %1656) #56
          to label %1657 unwind label %3717

1657:                                             ; preds = %1651
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %164, ptr noundef nonnull align 8 dereferenceable(32) %165, ptr noundef nonnull align 8 dereferenceable(104) %160) #56
          to label %1658 unwind label %3719

1658:                                             ; preds = %1657
  %1659 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %164) #56
          to label %1660 unwind label %3721

1660:                                             ; preds = %1658
  %1661 = getelementptr inbounds %"struct.std::pair.85", ptr %164, i64 0, i32 1
  %1662 = getelementptr inbounds %"struct.std::pair.85", ptr %164, i64 0, i32 1, i32 4
  %1663 = load ptr, ptr %1662, align 8, !tbaa !23
  %1664 = getelementptr inbounds %"struct.std::pair.85", ptr %164, i64 0, i32 1, i32 4, i32 2
  %1665 = icmp eq ptr %1663, %1664
  br i1 %1665, label %1667, label %1666

1666:                                             ; preds = %1660
  call void @_ZdlPv(ptr noundef %1663) #58
  br label %1667

1667:                                             ; preds = %1666, %1660
  %1668 = getelementptr inbounds %"struct.std::pair.85", ptr %164, i64 0, i32 1, i32 3
  %1669 = load ptr, ptr %1668, align 8, !tbaa !23
  %1670 = getelementptr inbounds %"struct.std::pair.85", ptr %164, i64 0, i32 1, i32 3, i32 2
  %1671 = icmp eq ptr %1669, %1670
  br i1 %1671, label %1673, label %1672

1672:                                             ; preds = %1667
  call void @_ZdlPv(ptr noundef %1669) #58
  br label %1673

1673:                                             ; preds = %1672, %1667
  %1674 = load ptr, ptr %1661, align 8, !tbaa !23
  %1675 = getelementptr inbounds %"struct.std::pair.85", ptr %164, i64 0, i32 1, i32 0, i32 2
  %1676 = icmp eq ptr %1674, %1675
  br i1 %1676, label %1678, label %1677

1677:                                             ; preds = %1673
  call void @_ZdlPv(ptr noundef %1674) #58
  br label %1678

1678:                                             ; preds = %1677, %1673
  %1679 = load ptr, ptr %164, align 8, !tbaa !23
  %1680 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %164, i64 0, i32 2
  %1681 = icmp eq ptr %1679, %1680
  br i1 %1681, label %1683, label %1682

1682:                                             ; preds = %1678
  call void @_ZdlPv(ptr noundef %1679) #58
  br label %1683

1683:                                             ; preds = %1682, %1678
  %1684 = load ptr, ptr %165, align 8, !tbaa !23
  %1685 = icmp eq ptr %1684, %1652
  br i1 %1685, label %1687, label %1686

1686:                                             ; preds = %1683
  call void @_ZdlPv(ptr noundef %1684) #58
  br label %1687

1687:                                             ; preds = %1686, %1683
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %165) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %164) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %166) #57
  %1688 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %167, i64 0, i32 2
  store ptr %1688, ptr %167, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %167, ptr noundef nonnull @.str.174, ptr noundef nonnull getelementptr inbounds ([4 x i8], ptr @.str.174, i64 0, i64 3)) #56
          to label %1689 unwind label %3730

1689:                                             ; preds = %1687
  %1690 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %168, i64 0, i32 2
  store ptr %1690, ptr %168, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %168, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1691 unwind label %3732

1691:                                             ; preds = %1689
  %1692 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %169, i64 0, i32 2
  store ptr %1692, ptr %169, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %169, ptr noundef nonnull @.str.175, ptr noundef nonnull getelementptr inbounds ([26 x i8], ptr @.str.175, i64 0, i64 25)) #56
          to label %1693 unwind label %3734

1693:                                             ; preds = %1691
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %166, ptr noundef nonnull %167, i1 noundef zeroext true, i32 noundef 2, ptr noundef nonnull %168, ptr noundef nonnull %169) #56
          to label %1694 unwind label %3736

1694:                                             ; preds = %1693
  %1695 = load ptr, ptr %169, align 8, !tbaa !23
  %1696 = icmp eq ptr %1695, %1692
  br i1 %1696, label %1698, label %1697

1697:                                             ; preds = %1694
  call void @_ZdlPv(ptr noundef %1695) #58
  br label %1698

1698:                                             ; preds = %1697, %1694
  %1699 = load ptr, ptr %168, align 8, !tbaa !23
  %1700 = icmp eq ptr %1699, %1690
  br i1 %1700, label %1702, label %1701

1701:                                             ; preds = %1698
  call void @_ZdlPv(ptr noundef %1699) #58
  br label %1702

1702:                                             ; preds = %1701, %1698
  %1703 = load ptr, ptr %167, align 8, !tbaa !23
  %1704 = icmp eq ptr %1703, %1688
  br i1 %1704, label %1706, label %1705

1705:                                             ; preds = %1702
  call void @_ZdlPv(ptr noundef %1703) #58
  br label %1706

1706:                                             ; preds = %1705, %1702
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %170) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %171) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !393)
  %1707 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %171, i64 0, i32 2
  store ptr %1707, ptr %171, align 8, !tbaa !78, !alias.scope !393
  %1708 = load ptr, ptr %166, align 8, !tbaa !23, !noalias !393
  %1709 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %166, i64 0, i32 1
  %1710 = load i64, ptr %1709, align 8, !tbaa !49, !noalias !393
  %1711 = getelementptr inbounds i8, ptr %1708, i64 %1710
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %171, ptr noundef %1708, ptr noundef %1711) #56
          to label %1712 unwind label %3751

1712:                                             ; preds = %1706
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %170, ptr noundef nonnull align 8 dereferenceable(32) %171, ptr noundef nonnull align 8 dereferenceable(104) %166) #56
          to label %1713 unwind label %3753

1713:                                             ; preds = %1712
  %1714 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %170) #56
          to label %1715 unwind label %3755

1715:                                             ; preds = %1713
  %1716 = getelementptr inbounds %"struct.std::pair.85", ptr %170, i64 0, i32 1
  %1717 = getelementptr inbounds %"struct.std::pair.85", ptr %170, i64 0, i32 1, i32 4
  %1718 = load ptr, ptr %1717, align 8, !tbaa !23
  %1719 = getelementptr inbounds %"struct.std::pair.85", ptr %170, i64 0, i32 1, i32 4, i32 2
  %1720 = icmp eq ptr %1718, %1719
  br i1 %1720, label %1722, label %1721

1721:                                             ; preds = %1715
  call void @_ZdlPv(ptr noundef %1718) #58
  br label %1722

1722:                                             ; preds = %1721, %1715
  %1723 = getelementptr inbounds %"struct.std::pair.85", ptr %170, i64 0, i32 1, i32 3
  %1724 = load ptr, ptr %1723, align 8, !tbaa !23
  %1725 = getelementptr inbounds %"struct.std::pair.85", ptr %170, i64 0, i32 1, i32 3, i32 2
  %1726 = icmp eq ptr %1724, %1725
  br i1 %1726, label %1728, label %1727

1727:                                             ; preds = %1722
  call void @_ZdlPv(ptr noundef %1724) #58
  br label %1728

1728:                                             ; preds = %1727, %1722
  %1729 = load ptr, ptr %1716, align 8, !tbaa !23
  %1730 = getelementptr inbounds %"struct.std::pair.85", ptr %170, i64 0, i32 1, i32 0, i32 2
  %1731 = icmp eq ptr %1729, %1730
  br i1 %1731, label %1733, label %1732

1732:                                             ; preds = %1728
  call void @_ZdlPv(ptr noundef %1729) #58
  br label %1733

1733:                                             ; preds = %1732, %1728
  %1734 = load ptr, ptr %170, align 8, !tbaa !23
  %1735 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %170, i64 0, i32 2
  %1736 = icmp eq ptr %1734, %1735
  br i1 %1736, label %1738, label %1737

1737:                                             ; preds = %1733
  call void @_ZdlPv(ptr noundef %1734) #58
  br label %1738

1738:                                             ; preds = %1737, %1733
  %1739 = load ptr, ptr %171, align 8, !tbaa !23
  %1740 = icmp eq ptr %1739, %1707
  br i1 %1740, label %1742, label %1741

1741:                                             ; preds = %1738
  call void @_ZdlPv(ptr noundef %1739) #58
  br label %1742

1742:                                             ; preds = %1741, %1738
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %171) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %170) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %172) #57
  %1743 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %173, i64 0, i32 2
  store ptr %1743, ptr %173, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %173, ptr noundef nonnull @.str.176, ptr noundef nonnull getelementptr inbounds ([4 x i8], ptr @.str.176, i64 0, i64 3)) #56
          to label %1744 unwind label %3764

1744:                                             ; preds = %1742
  %1745 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %174, i64 0, i32 2
  store ptr %1745, ptr %174, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %174, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1746 unwind label %3766

1746:                                             ; preds = %1744
  %1747 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %175, i64 0, i32 2
  store ptr %1747, ptr %175, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %175, ptr noundef nonnull @.str.177, ptr noundef nonnull getelementptr inbounds ([31 x i8], ptr @.str.177, i64 0, i64 30)) #56
          to label %1748 unwind label %3768

1748:                                             ; preds = %1746
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %172, ptr noundef nonnull %173, i1 noundef zeroext true, i32 noundef 2, ptr noundef nonnull %174, ptr noundef nonnull %175) #56
          to label %1749 unwind label %3770

1749:                                             ; preds = %1748
  %1750 = load ptr, ptr %175, align 8, !tbaa !23
  %1751 = icmp eq ptr %1750, %1747
  br i1 %1751, label %1753, label %1752

1752:                                             ; preds = %1749
  call void @_ZdlPv(ptr noundef %1750) #58
  br label %1753

1753:                                             ; preds = %1752, %1749
  %1754 = load ptr, ptr %174, align 8, !tbaa !23
  %1755 = icmp eq ptr %1754, %1745
  br i1 %1755, label %1757, label %1756

1756:                                             ; preds = %1753
  call void @_ZdlPv(ptr noundef %1754) #58
  br label %1757

1757:                                             ; preds = %1756, %1753
  %1758 = load ptr, ptr %173, align 8, !tbaa !23
  %1759 = icmp eq ptr %1758, %1743
  br i1 %1759, label %1761, label %1760

1760:                                             ; preds = %1757
  call void @_ZdlPv(ptr noundef %1758) #58
  br label %1761

1761:                                             ; preds = %1760, %1757
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %176) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %177) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !396)
  %1762 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %177, i64 0, i32 2
  store ptr %1762, ptr %177, align 8, !tbaa !78, !alias.scope !396
  %1763 = load ptr, ptr %172, align 8, !tbaa !23, !noalias !396
  %1764 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %172, i64 0, i32 1
  %1765 = load i64, ptr %1764, align 8, !tbaa !49, !noalias !396
  %1766 = getelementptr inbounds i8, ptr %1763, i64 %1765
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %177, ptr noundef %1763, ptr noundef %1766) #56
          to label %1767 unwind label %3785

1767:                                             ; preds = %1761
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %176, ptr noundef nonnull align 8 dereferenceable(32) %177, ptr noundef nonnull align 8 dereferenceable(104) %172) #56
          to label %1768 unwind label %3787

1768:                                             ; preds = %1767
  %1769 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %176) #56
          to label %1770 unwind label %3789

1770:                                             ; preds = %1768
  %1771 = getelementptr inbounds %"struct.std::pair.85", ptr %176, i64 0, i32 1
  %1772 = getelementptr inbounds %"struct.std::pair.85", ptr %176, i64 0, i32 1, i32 4
  %1773 = load ptr, ptr %1772, align 8, !tbaa !23
  %1774 = getelementptr inbounds %"struct.std::pair.85", ptr %176, i64 0, i32 1, i32 4, i32 2
  %1775 = icmp eq ptr %1773, %1774
  br i1 %1775, label %1777, label %1776

1776:                                             ; preds = %1770
  call void @_ZdlPv(ptr noundef %1773) #58
  br label %1777

1777:                                             ; preds = %1776, %1770
  %1778 = getelementptr inbounds %"struct.std::pair.85", ptr %176, i64 0, i32 1, i32 3
  %1779 = load ptr, ptr %1778, align 8, !tbaa !23
  %1780 = getelementptr inbounds %"struct.std::pair.85", ptr %176, i64 0, i32 1, i32 3, i32 2
  %1781 = icmp eq ptr %1779, %1780
  br i1 %1781, label %1783, label %1782

1782:                                             ; preds = %1777
  call void @_ZdlPv(ptr noundef %1779) #58
  br label %1783

1783:                                             ; preds = %1782, %1777
  %1784 = load ptr, ptr %1771, align 8, !tbaa !23
  %1785 = getelementptr inbounds %"struct.std::pair.85", ptr %176, i64 0, i32 1, i32 0, i32 2
  %1786 = icmp eq ptr %1784, %1785
  br i1 %1786, label %1788, label %1787

1787:                                             ; preds = %1783
  call void @_ZdlPv(ptr noundef %1784) #58
  br label %1788

1788:                                             ; preds = %1787, %1783
  %1789 = load ptr, ptr %176, align 8, !tbaa !23
  %1790 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %176, i64 0, i32 2
  %1791 = icmp eq ptr %1789, %1790
  br i1 %1791, label %1793, label %1792

1792:                                             ; preds = %1788
  call void @_ZdlPv(ptr noundef %1789) #58
  br label %1793

1793:                                             ; preds = %1792, %1788
  %1794 = load ptr, ptr %177, align 8, !tbaa !23
  %1795 = icmp eq ptr %1794, %1762
  br i1 %1795, label %1797, label %1796

1796:                                             ; preds = %1793
  call void @_ZdlPv(ptr noundef %1794) #58
  br label %1797

1797:                                             ; preds = %1796, %1793
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %177) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %176) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %178) #57
  %1798 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %179, i64 0, i32 2
  store ptr %1798, ptr %179, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %179, ptr noundef nonnull @.str.178, ptr noundef nonnull getelementptr inbounds ([4 x i8], ptr @.str.178, i64 0, i64 3)) #56
          to label %1799 unwind label %3798

1799:                                             ; preds = %1797
  %1800 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %180, i64 0, i32 2
  store ptr %1800, ptr %180, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %180, ptr noundef nonnull @.str.138, ptr noundef nonnull getelementptr inbounds ([5 x i8], ptr @.str.138, i64 0, i64 4)) #56
          to label %1801 unwind label %3800

1801:                                             ; preds = %1799
  %1802 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %181, i64 0, i32 2
  store ptr %1802, ptr %181, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %181, ptr noundef nonnull @.str.179, ptr noundef nonnull getelementptr inbounds ([30 x i8], ptr @.str.179, i64 0, i64 29)) #56
          to label %1803 unwind label %3802

1803:                                             ; preds = %1801
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %178, ptr noundef nonnull %179, i1 noundef zeroext true, i32 noundef 2, ptr noundef nonnull %180, ptr noundef nonnull %181) #56
          to label %1804 unwind label %3804

1804:                                             ; preds = %1803
  %1805 = load ptr, ptr %181, align 8, !tbaa !23
  %1806 = icmp eq ptr %1805, %1802
  br i1 %1806, label %1808, label %1807

1807:                                             ; preds = %1804
  call void @_ZdlPv(ptr noundef %1805) #58
  br label %1808

1808:                                             ; preds = %1807, %1804
  %1809 = load ptr, ptr %180, align 8, !tbaa !23
  %1810 = icmp eq ptr %1809, %1800
  br i1 %1810, label %1812, label %1811

1811:                                             ; preds = %1808
  call void @_ZdlPv(ptr noundef %1809) #58
  br label %1812

1812:                                             ; preds = %1811, %1808
  %1813 = load ptr, ptr %179, align 8, !tbaa !23
  %1814 = icmp eq ptr %1813, %1798
  br i1 %1814, label %1816, label %1815

1815:                                             ; preds = %1812
  call void @_ZdlPv(ptr noundef %1813) #58
  br label %1816

1816:                                             ; preds = %1815, %1812
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %182) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %183) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !399)
  %1817 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %183, i64 0, i32 2
  store ptr %1817, ptr %183, align 8, !tbaa !78, !alias.scope !399
  %1818 = load ptr, ptr %178, align 8, !tbaa !23, !noalias !399
  %1819 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %178, i64 0, i32 1
  %1820 = load i64, ptr %1819, align 8, !tbaa !49, !noalias !399
  %1821 = getelementptr inbounds i8, ptr %1818, i64 %1820
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %183, ptr noundef %1818, ptr noundef %1821) #56
          to label %1822 unwind label %3819

1822:                                             ; preds = %1816
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %182, ptr noundef nonnull align 8 dereferenceable(32) %183, ptr noundef nonnull align 8 dereferenceable(104) %178) #56
          to label %1823 unwind label %3821

1823:                                             ; preds = %1822
  %1824 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %182) #56
          to label %1825 unwind label %3823

1825:                                             ; preds = %1823
  %1826 = getelementptr inbounds %"struct.std::pair.85", ptr %182, i64 0, i32 1
  %1827 = getelementptr inbounds %"struct.std::pair.85", ptr %182, i64 0, i32 1, i32 4
  %1828 = load ptr, ptr %1827, align 8, !tbaa !23
  %1829 = getelementptr inbounds %"struct.std::pair.85", ptr %182, i64 0, i32 1, i32 4, i32 2
  %1830 = icmp eq ptr %1828, %1829
  br i1 %1830, label %1832, label %1831

1831:                                             ; preds = %1825
  call void @_ZdlPv(ptr noundef %1828) #58
  br label %1832

1832:                                             ; preds = %1831, %1825
  %1833 = getelementptr inbounds %"struct.std::pair.85", ptr %182, i64 0, i32 1, i32 3
  %1834 = load ptr, ptr %1833, align 8, !tbaa !23
  %1835 = getelementptr inbounds %"struct.std::pair.85", ptr %182, i64 0, i32 1, i32 3, i32 2
  %1836 = icmp eq ptr %1834, %1835
  br i1 %1836, label %1838, label %1837

1837:                                             ; preds = %1832
  call void @_ZdlPv(ptr noundef %1834) #58
  br label %1838

1838:                                             ; preds = %1837, %1832
  %1839 = load ptr, ptr %1826, align 8, !tbaa !23
  %1840 = getelementptr inbounds %"struct.std::pair.85", ptr %182, i64 0, i32 1, i32 0, i32 2
  %1841 = icmp eq ptr %1839, %1840
  br i1 %1841, label %1843, label %1842

1842:                                             ; preds = %1838
  call void @_ZdlPv(ptr noundef %1839) #58
  br label %1843

1843:                                             ; preds = %1842, %1838
  %1844 = load ptr, ptr %182, align 8, !tbaa !23
  %1845 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %182, i64 0, i32 2
  %1846 = icmp eq ptr %1844, %1845
  br i1 %1846, label %1848, label %1847

1847:                                             ; preds = %1843
  call void @_ZdlPv(ptr noundef %1844) #58
  br label %1848

1848:                                             ; preds = %1847, %1843
  %1849 = load ptr, ptr %183, align 8, !tbaa !23
  %1850 = icmp eq ptr %1849, %1817
  br i1 %1850, label %1852, label %1851

1851:                                             ; preds = %1848
  call void @_ZdlPv(ptr noundef %1849) #58
  br label %1852

1852:                                             ; preds = %1851, %1848
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %183) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %182) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %184) #57
  %1853 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %185, i64 0, i32 2
  store ptr %1853, ptr %185, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %185, ptr noundef nonnull @.str.180, ptr noundef nonnull getelementptr inbounds ([7 x i8], ptr @.str.180, i64 0, i64 6)) #56
          to label %1854 unwind label %3832

1854:                                             ; preds = %1852
  %1855 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %186, i64 0, i32 2
  store ptr %1855, ptr %186, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %186, ptr noundef nonnull @.str.181, ptr noundef nonnull getelementptr inbounds ([7 x i8], ptr @.str.181, i64 0, i64 6)) #56
          to label %1856 unwind label %3834

1856:                                             ; preds = %1854
  %1857 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %187, i64 0, i32 2
  store ptr %1857, ptr %187, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %187, ptr noundef nonnull @.str.182, ptr noundef nonnull getelementptr inbounds ([23 x i8], ptr @.str.182, i64 0, i64 22)) #56
          to label %1858 unwind label %3836

1858:                                             ; preds = %1856
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %184, ptr noundef nonnull %185, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %186, ptr noundef nonnull %187) #56
          to label %1859 unwind label %3838

1859:                                             ; preds = %1858
  %1860 = load ptr, ptr %187, align 8, !tbaa !23
  %1861 = icmp eq ptr %1860, %1857
  br i1 %1861, label %1863, label %1862

1862:                                             ; preds = %1859
  call void @_ZdlPv(ptr noundef %1860) #58
  br label %1863

1863:                                             ; preds = %1862, %1859
  %1864 = load ptr, ptr %186, align 8, !tbaa !23
  %1865 = icmp eq ptr %1864, %1855
  br i1 %1865, label %1867, label %1866

1866:                                             ; preds = %1863
  call void @_ZdlPv(ptr noundef %1864) #58
  br label %1867

1867:                                             ; preds = %1866, %1863
  %1868 = load ptr, ptr %185, align 8, !tbaa !23
  %1869 = icmp eq ptr %1868, %1853
  br i1 %1869, label %1871, label %1870

1870:                                             ; preds = %1867
  call void @_ZdlPv(ptr noundef %1868) #58
  br label %1871

1871:                                             ; preds = %1870, %1867
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %188) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %189) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !402)
  %1872 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %189, i64 0, i32 2
  store ptr %1872, ptr %189, align 8, !tbaa !78, !alias.scope !402
  %1873 = load ptr, ptr %184, align 8, !tbaa !23, !noalias !402
  %1874 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %184, i64 0, i32 1
  %1875 = load i64, ptr %1874, align 8, !tbaa !49, !noalias !402
  %1876 = getelementptr inbounds i8, ptr %1873, i64 %1875
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %189, ptr noundef %1873, ptr noundef %1876) #56
          to label %1877 unwind label %3853

1877:                                             ; preds = %1871
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %188, ptr noundef nonnull align 8 dereferenceable(32) %189, ptr noundef nonnull align 8 dereferenceable(104) %184) #56
          to label %1878 unwind label %3855

1878:                                             ; preds = %1877
  %1879 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %188) #56
          to label %1880 unwind label %3857

1880:                                             ; preds = %1878
  %1881 = getelementptr inbounds %"struct.std::pair.85", ptr %188, i64 0, i32 1
  %1882 = getelementptr inbounds %"struct.std::pair.85", ptr %188, i64 0, i32 1, i32 4
  %1883 = load ptr, ptr %1882, align 8, !tbaa !23
  %1884 = getelementptr inbounds %"struct.std::pair.85", ptr %188, i64 0, i32 1, i32 4, i32 2
  %1885 = icmp eq ptr %1883, %1884
  br i1 %1885, label %1887, label %1886

1886:                                             ; preds = %1880
  call void @_ZdlPv(ptr noundef %1883) #58
  br label %1887

1887:                                             ; preds = %1886, %1880
  %1888 = getelementptr inbounds %"struct.std::pair.85", ptr %188, i64 0, i32 1, i32 3
  %1889 = load ptr, ptr %1888, align 8, !tbaa !23
  %1890 = getelementptr inbounds %"struct.std::pair.85", ptr %188, i64 0, i32 1, i32 3, i32 2
  %1891 = icmp eq ptr %1889, %1890
  br i1 %1891, label %1893, label %1892

1892:                                             ; preds = %1887
  call void @_ZdlPv(ptr noundef %1889) #58
  br label %1893

1893:                                             ; preds = %1892, %1887
  %1894 = load ptr, ptr %1881, align 8, !tbaa !23
  %1895 = getelementptr inbounds %"struct.std::pair.85", ptr %188, i64 0, i32 1, i32 0, i32 2
  %1896 = icmp eq ptr %1894, %1895
  br i1 %1896, label %1898, label %1897

1897:                                             ; preds = %1893
  call void @_ZdlPv(ptr noundef %1894) #58
  br label %1898

1898:                                             ; preds = %1897, %1893
  %1899 = load ptr, ptr %188, align 8, !tbaa !23
  %1900 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %188, i64 0, i32 2
  %1901 = icmp eq ptr %1899, %1900
  br i1 %1901, label %1903, label %1902

1902:                                             ; preds = %1898
  call void @_ZdlPv(ptr noundef %1899) #58
  br label %1903

1903:                                             ; preds = %1902, %1898
  %1904 = load ptr, ptr %189, align 8, !tbaa !23
  %1905 = icmp eq ptr %1904, %1872
  br i1 %1905, label %1907, label %1906

1906:                                             ; preds = %1903
  call void @_ZdlPv(ptr noundef %1904) #58
  br label %1907

1907:                                             ; preds = %1906, %1903
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %189) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %188) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %190) #57
  %1908 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %191, i64 0, i32 2
  store ptr %1908, ptr %191, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %191, ptr noundef nonnull @.str.183, ptr noundef nonnull getelementptr inbounds ([7 x i8], ptr @.str.183, i64 0, i64 6)) #56
          to label %1909 unwind label %3866

1909:                                             ; preds = %1907
  %1910 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %192, i64 0, i32 2
  store ptr %1910, ptr %192, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %192, ptr noundef nonnull @.str.181, ptr noundef nonnull getelementptr inbounds ([7 x i8], ptr @.str.181, i64 0, i64 6)) #56
          to label %1911 unwind label %3868

1911:                                             ; preds = %1909
  %1912 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %193, i64 0, i32 2
  store ptr %1912, ptr %193, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %193, ptr noundef nonnull @.str.184, ptr noundef nonnull getelementptr inbounds ([24 x i8], ptr @.str.184, i64 0, i64 23)) #56
          to label %1913 unwind label %3870

1913:                                             ; preds = %1911
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %190, ptr noundef nonnull %191, i1 noundef zeroext true, i32 noundef 2, ptr noundef nonnull %192, ptr noundef nonnull %193) #56
          to label %1914 unwind label %3872

1914:                                             ; preds = %1913
  %1915 = load ptr, ptr %193, align 8, !tbaa !23
  %1916 = icmp eq ptr %1915, %1912
  br i1 %1916, label %1918, label %1917

1917:                                             ; preds = %1914
  call void @_ZdlPv(ptr noundef %1915) #58
  br label %1918

1918:                                             ; preds = %1917, %1914
  %1919 = load ptr, ptr %192, align 8, !tbaa !23
  %1920 = icmp eq ptr %1919, %1910
  br i1 %1920, label %1922, label %1921

1921:                                             ; preds = %1918
  call void @_ZdlPv(ptr noundef %1919) #58
  br label %1922

1922:                                             ; preds = %1921, %1918
  %1923 = load ptr, ptr %191, align 8, !tbaa !23
  %1924 = icmp eq ptr %1923, %1908
  br i1 %1924, label %1926, label %1925

1925:                                             ; preds = %1922
  call void @_ZdlPv(ptr noundef %1923) #58
  br label %1926

1926:                                             ; preds = %1925, %1922
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %194) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %195) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !405)
  %1927 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %195, i64 0, i32 2
  store ptr %1927, ptr %195, align 8, !tbaa !78, !alias.scope !405
  %1928 = load ptr, ptr %190, align 8, !tbaa !23, !noalias !405
  %1929 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %190, i64 0, i32 1
  %1930 = load i64, ptr %1929, align 8, !tbaa !49, !noalias !405
  %1931 = getelementptr inbounds i8, ptr %1928, i64 %1930
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %195, ptr noundef %1928, ptr noundef %1931) #56
          to label %1932 unwind label %3887

1932:                                             ; preds = %1926
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %194, ptr noundef nonnull align 8 dereferenceable(32) %195, ptr noundef nonnull align 8 dereferenceable(104) %190) #56
          to label %1933 unwind label %3889

1933:                                             ; preds = %1932
  %1934 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %194) #56
          to label %1935 unwind label %3891

1935:                                             ; preds = %1933
  %1936 = getelementptr inbounds %"struct.std::pair.85", ptr %194, i64 0, i32 1
  %1937 = getelementptr inbounds %"struct.std::pair.85", ptr %194, i64 0, i32 1, i32 4
  %1938 = load ptr, ptr %1937, align 8, !tbaa !23
  %1939 = getelementptr inbounds %"struct.std::pair.85", ptr %194, i64 0, i32 1, i32 4, i32 2
  %1940 = icmp eq ptr %1938, %1939
  br i1 %1940, label %1942, label %1941

1941:                                             ; preds = %1935
  call void @_ZdlPv(ptr noundef %1938) #58
  br label %1942

1942:                                             ; preds = %1941, %1935
  %1943 = getelementptr inbounds %"struct.std::pair.85", ptr %194, i64 0, i32 1, i32 3
  %1944 = load ptr, ptr %1943, align 8, !tbaa !23
  %1945 = getelementptr inbounds %"struct.std::pair.85", ptr %194, i64 0, i32 1, i32 3, i32 2
  %1946 = icmp eq ptr %1944, %1945
  br i1 %1946, label %1948, label %1947

1947:                                             ; preds = %1942
  call void @_ZdlPv(ptr noundef %1944) #58
  br label %1948

1948:                                             ; preds = %1947, %1942
  %1949 = load ptr, ptr %1936, align 8, !tbaa !23
  %1950 = getelementptr inbounds %"struct.std::pair.85", ptr %194, i64 0, i32 1, i32 0, i32 2
  %1951 = icmp eq ptr %1949, %1950
  br i1 %1951, label %1953, label %1952

1952:                                             ; preds = %1948
  call void @_ZdlPv(ptr noundef %1949) #58
  br label %1953

1953:                                             ; preds = %1952, %1948
  %1954 = load ptr, ptr %194, align 8, !tbaa !23
  %1955 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %194, i64 0, i32 2
  %1956 = icmp eq ptr %1954, %1955
  br i1 %1956, label %1958, label %1957

1957:                                             ; preds = %1953
  call void @_ZdlPv(ptr noundef %1954) #58
  br label %1958

1958:                                             ; preds = %1957, %1953
  %1959 = load ptr, ptr %195, align 8, !tbaa !23
  %1960 = icmp eq ptr %1959, %1927
  br i1 %1960, label %1962, label %1961

1961:                                             ; preds = %1958
  call void @_ZdlPv(ptr noundef %1959) #58
  br label %1962

1962:                                             ; preds = %1961, %1958
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %195) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %194) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %196) #57
  %1963 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %197, i64 0, i32 2
  store ptr %1963, ptr %197, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %197, ptr noundef nonnull @.str.185, ptr noundef nonnull getelementptr inbounds ([9 x i8], ptr @.str.185, i64 0, i64 8)) #56
          to label %1964 unwind label %3900

1964:                                             ; preds = %1962
  %1965 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %198, i64 0, i32 2
  store ptr %1965, ptr %198, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %198, ptr noundef nonnull @.str.181, ptr noundef nonnull getelementptr inbounds ([7 x i8], ptr @.str.181, i64 0, i64 6)) #56
          to label %1966 unwind label %3902

1966:                                             ; preds = %1964
  %1967 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %199, i64 0, i32 2
  store ptr %1967, ptr %199, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %199, ptr noundef nonnull @.str.186, ptr noundef nonnull getelementptr inbounds ([24 x i8], ptr @.str.186, i64 0, i64 23)) #56
          to label %1968 unwind label %3904

1968:                                             ; preds = %1966
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %196, ptr noundef nonnull %197, i1 noundef zeroext true, i32 noundef 3, ptr noundef nonnull %198, ptr noundef nonnull %199) #56
          to label %1969 unwind label %3906

1969:                                             ; preds = %1968
  %1970 = load ptr, ptr %199, align 8, !tbaa !23
  %1971 = icmp eq ptr %1970, %1967
  br i1 %1971, label %1973, label %1972

1972:                                             ; preds = %1969
  call void @_ZdlPv(ptr noundef %1970) #58
  br label %1973

1973:                                             ; preds = %1972, %1969
  %1974 = load ptr, ptr %198, align 8, !tbaa !23
  %1975 = icmp eq ptr %1974, %1965
  br i1 %1975, label %1977, label %1976

1976:                                             ; preds = %1973
  call void @_ZdlPv(ptr noundef %1974) #58
  br label %1977

1977:                                             ; preds = %1976, %1973
  %1978 = load ptr, ptr %197, align 8, !tbaa !23
  %1979 = icmp eq ptr %1978, %1963
  br i1 %1979, label %1981, label %1980

1980:                                             ; preds = %1977
  call void @_ZdlPv(ptr noundef %1978) #58
  br label %1981

1981:                                             ; preds = %1980, %1977
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %200) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %201) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !408)
  %1982 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %201, i64 0, i32 2
  store ptr %1982, ptr %201, align 8, !tbaa !78, !alias.scope !408
  %1983 = load ptr, ptr %196, align 8, !tbaa !23, !noalias !408
  %1984 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %196, i64 0, i32 1
  %1985 = load i64, ptr %1984, align 8, !tbaa !49, !noalias !408
  %1986 = getelementptr inbounds i8, ptr %1983, i64 %1985
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %201, ptr noundef %1983, ptr noundef %1986) #56
          to label %1987 unwind label %3921

1987:                                             ; preds = %1981
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %200, ptr noundef nonnull align 8 dereferenceable(32) %201, ptr noundef nonnull align 8 dereferenceable(104) %196) #56
          to label %1988 unwind label %3923

1988:                                             ; preds = %1987
  %1989 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %200) #56
          to label %1990 unwind label %3925

1990:                                             ; preds = %1988
  %1991 = getelementptr inbounds %"struct.std::pair.85", ptr %200, i64 0, i32 1
  %1992 = getelementptr inbounds %"struct.std::pair.85", ptr %200, i64 0, i32 1, i32 4
  %1993 = load ptr, ptr %1992, align 8, !tbaa !23
  %1994 = getelementptr inbounds %"struct.std::pair.85", ptr %200, i64 0, i32 1, i32 4, i32 2
  %1995 = icmp eq ptr %1993, %1994
  br i1 %1995, label %1997, label %1996

1996:                                             ; preds = %1990
  call void @_ZdlPv(ptr noundef %1993) #58
  br label %1997

1997:                                             ; preds = %1996, %1990
  %1998 = getelementptr inbounds %"struct.std::pair.85", ptr %200, i64 0, i32 1, i32 3
  %1999 = load ptr, ptr %1998, align 8, !tbaa !23
  %2000 = getelementptr inbounds %"struct.std::pair.85", ptr %200, i64 0, i32 1, i32 3, i32 2
  %2001 = icmp eq ptr %1999, %2000
  br i1 %2001, label %2003, label %2002

2002:                                             ; preds = %1997
  call void @_ZdlPv(ptr noundef %1999) #58
  br label %2003

2003:                                             ; preds = %2002, %1997
  %2004 = load ptr, ptr %1991, align 8, !tbaa !23
  %2005 = getelementptr inbounds %"struct.std::pair.85", ptr %200, i64 0, i32 1, i32 0, i32 2
  %2006 = icmp eq ptr %2004, %2005
  br i1 %2006, label %2008, label %2007

2007:                                             ; preds = %2003
  call void @_ZdlPv(ptr noundef %2004) #58
  br label %2008

2008:                                             ; preds = %2007, %2003
  %2009 = load ptr, ptr %200, align 8, !tbaa !23
  %2010 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %200, i64 0, i32 2
  %2011 = icmp eq ptr %2009, %2010
  br i1 %2011, label %2013, label %2012

2012:                                             ; preds = %2008
  call void @_ZdlPv(ptr noundef %2009) #58
  br label %2013

2013:                                             ; preds = %2012, %2008
  %2014 = load ptr, ptr %201, align 8, !tbaa !23
  %2015 = icmp eq ptr %2014, %1982
  br i1 %2015, label %2017, label %2016

2016:                                             ; preds = %2013
  call void @_ZdlPv(ptr noundef %2014) #58
  br label %2017

2017:                                             ; preds = %2016, %2013
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %201) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %200) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %202) #57
  %2018 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %203, i64 0, i32 2
  store ptr %2018, ptr %203, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %203, ptr noundef nonnull @.str.187, ptr noundef nonnull getelementptr inbounds ([10 x i8], ptr @.str.187, i64 0, i64 9)) #56
          to label %2019 unwind label %3934

2019:                                             ; preds = %2017
  %2020 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %204, i64 0, i32 2
  store ptr %2020, ptr %204, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %204, ptr noundef nonnull @.str.181, ptr noundef nonnull getelementptr inbounds ([7 x i8], ptr @.str.181, i64 0, i64 6)) #56
          to label %2021 unwind label %3936

2021:                                             ; preds = %2019
  %2022 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %205, i64 0, i32 2
  store ptr %2022, ptr %205, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %205, ptr noundef nonnull @.str.188, ptr noundef nonnull getelementptr inbounds ([25 x i8], ptr @.str.188, i64 0, i64 24)) #56
          to label %2023 unwind label %3938

2023:                                             ; preds = %2021
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %202, ptr noundef nonnull %203, i1 noundef zeroext true, i32 noundef 3, ptr noundef nonnull %204, ptr noundef nonnull %205) #56
          to label %2024 unwind label %3940

2024:                                             ; preds = %2023
  %2025 = load ptr, ptr %205, align 8, !tbaa !23
  %2026 = icmp eq ptr %2025, %2022
  br i1 %2026, label %2028, label %2027

2027:                                             ; preds = %2024
  call void @_ZdlPv(ptr noundef %2025) #58
  br label %2028

2028:                                             ; preds = %2027, %2024
  %2029 = load ptr, ptr %204, align 8, !tbaa !23
  %2030 = icmp eq ptr %2029, %2020
  br i1 %2030, label %2032, label %2031

2031:                                             ; preds = %2028
  call void @_ZdlPv(ptr noundef %2029) #58
  br label %2032

2032:                                             ; preds = %2031, %2028
  %2033 = load ptr, ptr %203, align 8, !tbaa !23
  %2034 = icmp eq ptr %2033, %2018
  br i1 %2034, label %2036, label %2035

2035:                                             ; preds = %2032
  call void @_ZdlPv(ptr noundef %2033) #58
  br label %2036

2036:                                             ; preds = %2035, %2032
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %206) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %207) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !411)
  %2037 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %207, i64 0, i32 2
  store ptr %2037, ptr %207, align 8, !tbaa !78, !alias.scope !411
  %2038 = load ptr, ptr %202, align 8, !tbaa !23, !noalias !411
  %2039 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %202, i64 0, i32 1
  %2040 = load i64, ptr %2039, align 8, !tbaa !49, !noalias !411
  %2041 = getelementptr inbounds i8, ptr %2038, i64 %2040
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %207, ptr noundef %2038, ptr noundef %2041) #56
          to label %2042 unwind label %3955

2042:                                             ; preds = %2036
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %206, ptr noundef nonnull align 8 dereferenceable(32) %207, ptr noundef nonnull align 8 dereferenceable(104) %202) #56
          to label %2043 unwind label %3957

2043:                                             ; preds = %2042
  %2044 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %206) #56
          to label %2045 unwind label %3959

2045:                                             ; preds = %2043
  %2046 = getelementptr inbounds %"struct.std::pair.85", ptr %206, i64 0, i32 1
  %2047 = getelementptr inbounds %"struct.std::pair.85", ptr %206, i64 0, i32 1, i32 4
  %2048 = load ptr, ptr %2047, align 8, !tbaa !23
  %2049 = getelementptr inbounds %"struct.std::pair.85", ptr %206, i64 0, i32 1, i32 4, i32 2
  %2050 = icmp eq ptr %2048, %2049
  br i1 %2050, label %2052, label %2051

2051:                                             ; preds = %2045
  call void @_ZdlPv(ptr noundef %2048) #58
  br label %2052

2052:                                             ; preds = %2051, %2045
  %2053 = getelementptr inbounds %"struct.std::pair.85", ptr %206, i64 0, i32 1, i32 3
  %2054 = load ptr, ptr %2053, align 8, !tbaa !23
  %2055 = getelementptr inbounds %"struct.std::pair.85", ptr %206, i64 0, i32 1, i32 3, i32 2
  %2056 = icmp eq ptr %2054, %2055
  br i1 %2056, label %2058, label %2057

2057:                                             ; preds = %2052
  call void @_ZdlPv(ptr noundef %2054) #58
  br label %2058

2058:                                             ; preds = %2057, %2052
  %2059 = load ptr, ptr %2046, align 8, !tbaa !23
  %2060 = getelementptr inbounds %"struct.std::pair.85", ptr %206, i64 0, i32 1, i32 0, i32 2
  %2061 = icmp eq ptr %2059, %2060
  br i1 %2061, label %2063, label %2062

2062:                                             ; preds = %2058
  call void @_ZdlPv(ptr noundef %2059) #58
  br label %2063

2063:                                             ; preds = %2062, %2058
  %2064 = load ptr, ptr %206, align 8, !tbaa !23
  %2065 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %206, i64 0, i32 2
  %2066 = icmp eq ptr %2064, %2065
  br i1 %2066, label %2068, label %2067

2067:                                             ; preds = %2063
  call void @_ZdlPv(ptr noundef %2064) #58
  br label %2068

2068:                                             ; preds = %2067, %2063
  %2069 = load ptr, ptr %207, align 8, !tbaa !23
  %2070 = icmp eq ptr %2069, %2037
  br i1 %2070, label %2072, label %2071

2071:                                             ; preds = %2068
  call void @_ZdlPv(ptr noundef %2069) #58
  br label %2072

2072:                                             ; preds = %2071, %2068
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %207) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %206) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %208) #57
  %2073 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %209, i64 0, i32 2
  store ptr %2073, ptr %209, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %209, ptr noundef nonnull @.str.189, ptr noundef nonnull getelementptr inbounds ([10 x i8], ptr @.str.189, i64 0, i64 9)) #56
          to label %2074 unwind label %3968

2074:                                             ; preds = %2072
  %2075 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %210, i64 0, i32 2
  store ptr %2075, ptr %210, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %210, ptr noundef nonnull @.str.181, ptr noundef nonnull getelementptr inbounds ([7 x i8], ptr @.str.181, i64 0, i64 6)) #56
          to label %2076 unwind label %3970

2076:                                             ; preds = %2074
  %2077 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %211, i64 0, i32 2
  store ptr %2077, ptr %211, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %211, ptr noundef nonnull @.str.190, ptr noundef nonnull getelementptr inbounds ([15 x i8], ptr @.str.190, i64 0, i64 14)) #56
          to label %2078 unwind label %3972

2078:                                             ; preds = %2076
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %208, ptr noundef nonnull %209, i1 noundef zeroext true, i32 noundef 3, ptr noundef nonnull %210, ptr noundef nonnull %211) #56
          to label %2079 unwind label %3974

2079:                                             ; preds = %2078
  %2080 = load ptr, ptr %211, align 8, !tbaa !23
  %2081 = icmp eq ptr %2080, %2077
  br i1 %2081, label %2083, label %2082

2082:                                             ; preds = %2079
  call void @_ZdlPv(ptr noundef %2080) #58
  br label %2083

2083:                                             ; preds = %2082, %2079
  %2084 = load ptr, ptr %210, align 8, !tbaa !23
  %2085 = icmp eq ptr %2084, %2075
  br i1 %2085, label %2087, label %2086

2086:                                             ; preds = %2083
  call void @_ZdlPv(ptr noundef %2084) #58
  br label %2087

2087:                                             ; preds = %2086, %2083
  %2088 = load ptr, ptr %209, align 8, !tbaa !23
  %2089 = icmp eq ptr %2088, %2073
  br i1 %2089, label %2091, label %2090

2090:                                             ; preds = %2087
  call void @_ZdlPv(ptr noundef %2088) #58
  br label %2091

2091:                                             ; preds = %2090, %2087
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %212) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %213) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !414)
  %2092 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %213, i64 0, i32 2
  store ptr %2092, ptr %213, align 8, !tbaa !78, !alias.scope !414
  %2093 = load ptr, ptr %208, align 8, !tbaa !23, !noalias !414
  %2094 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %208, i64 0, i32 1
  %2095 = load i64, ptr %2094, align 8, !tbaa !49, !noalias !414
  %2096 = getelementptr inbounds i8, ptr %2093, i64 %2095
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %213, ptr noundef %2093, ptr noundef %2096) #56
          to label %2097 unwind label %3989

2097:                                             ; preds = %2091
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %212, ptr noundef nonnull align 8 dereferenceable(32) %213, ptr noundef nonnull align 8 dereferenceable(104) %208) #56
          to label %2098 unwind label %3991

2098:                                             ; preds = %2097
  %2099 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %212) #56
          to label %2100 unwind label %3993

2100:                                             ; preds = %2098
  %2101 = getelementptr inbounds %"struct.std::pair.85", ptr %212, i64 0, i32 1
  %2102 = getelementptr inbounds %"struct.std::pair.85", ptr %212, i64 0, i32 1, i32 4
  %2103 = load ptr, ptr %2102, align 8, !tbaa !23
  %2104 = getelementptr inbounds %"struct.std::pair.85", ptr %212, i64 0, i32 1, i32 4, i32 2
  %2105 = icmp eq ptr %2103, %2104
  br i1 %2105, label %2107, label %2106

2106:                                             ; preds = %2100
  call void @_ZdlPv(ptr noundef %2103) #58
  br label %2107

2107:                                             ; preds = %2106, %2100
  %2108 = getelementptr inbounds %"struct.std::pair.85", ptr %212, i64 0, i32 1, i32 3
  %2109 = load ptr, ptr %2108, align 8, !tbaa !23
  %2110 = getelementptr inbounds %"struct.std::pair.85", ptr %212, i64 0, i32 1, i32 3, i32 2
  %2111 = icmp eq ptr %2109, %2110
  br i1 %2111, label %2113, label %2112

2112:                                             ; preds = %2107
  call void @_ZdlPv(ptr noundef %2109) #58
  br label %2113

2113:                                             ; preds = %2112, %2107
  %2114 = load ptr, ptr %2101, align 8, !tbaa !23
  %2115 = getelementptr inbounds %"struct.std::pair.85", ptr %212, i64 0, i32 1, i32 0, i32 2
  %2116 = icmp eq ptr %2114, %2115
  br i1 %2116, label %2118, label %2117

2117:                                             ; preds = %2113
  call void @_ZdlPv(ptr noundef %2114) #58
  br label %2118

2118:                                             ; preds = %2117, %2113
  %2119 = load ptr, ptr %212, align 8, !tbaa !23
  %2120 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %212, i64 0, i32 2
  %2121 = icmp eq ptr %2119, %2120
  br i1 %2121, label %2123, label %2122

2122:                                             ; preds = %2118
  call void @_ZdlPv(ptr noundef %2119) #58
  br label %2123

2123:                                             ; preds = %2122, %2118
  %2124 = load ptr, ptr %213, align 8, !tbaa !23
  %2125 = icmp eq ptr %2124, %2092
  br i1 %2125, label %2127, label %2126

2126:                                             ; preds = %2123
  call void @_ZdlPv(ptr noundef %2124) #58
  br label %2127

2127:                                             ; preds = %2126, %2123
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %213) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %212) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %214) #57
  %2128 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %215, i64 0, i32 2
  store ptr %2128, ptr %215, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %215, ptr noundef nonnull @.str.191, ptr noundef nonnull getelementptr inbounds ([8 x i8], ptr @.str.191, i64 0, i64 7)) #56
          to label %2129 unwind label %4002

2129:                                             ; preds = %2127
  %2130 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %216, i64 0, i32 2
  store ptr %2130, ptr %216, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %216, ptr noundef nonnull @.str.181, ptr noundef nonnull getelementptr inbounds ([7 x i8], ptr @.str.181, i64 0, i64 6)) #56
          to label %2131 unwind label %4004

2131:                                             ; preds = %2129
  %2132 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %217, i64 0, i32 2
  store ptr %2132, ptr %217, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %217, ptr noundef nonnull @.str.192, ptr noundef nonnull getelementptr inbounds ([27 x i8], ptr @.str.192, i64 0, i64 26)) #56
          to label %2133 unwind label %4006

2133:                                             ; preds = %2131
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %214, ptr noundef nonnull %215, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %216, ptr noundef nonnull %217) #56
          to label %2134 unwind label %4008

2134:                                             ; preds = %2133
  %2135 = load ptr, ptr %217, align 8, !tbaa !23
  %2136 = icmp eq ptr %2135, %2132
  br i1 %2136, label %2138, label %2137

2137:                                             ; preds = %2134
  call void @_ZdlPv(ptr noundef %2135) #58
  br label %2138

2138:                                             ; preds = %2137, %2134
  %2139 = load ptr, ptr %216, align 8, !tbaa !23
  %2140 = icmp eq ptr %2139, %2130
  br i1 %2140, label %2142, label %2141

2141:                                             ; preds = %2138
  call void @_ZdlPv(ptr noundef %2139) #58
  br label %2142

2142:                                             ; preds = %2141, %2138
  %2143 = load ptr, ptr %215, align 8, !tbaa !23
  %2144 = icmp eq ptr %2143, %2128
  br i1 %2144, label %2146, label %2145

2145:                                             ; preds = %2142
  call void @_ZdlPv(ptr noundef %2143) #58
  br label %2146

2146:                                             ; preds = %2145, %2142
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %218) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %219) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !417)
  %2147 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %219, i64 0, i32 2
  store ptr %2147, ptr %219, align 8, !tbaa !78, !alias.scope !417
  %2148 = load ptr, ptr %214, align 8, !tbaa !23, !noalias !417
  %2149 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %214, i64 0, i32 1
  %2150 = load i64, ptr %2149, align 8, !tbaa !49, !noalias !417
  %2151 = getelementptr inbounds i8, ptr %2148, i64 %2150
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %219, ptr noundef %2148, ptr noundef %2151) #56
          to label %2152 unwind label %4023

2152:                                             ; preds = %2146
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %218, ptr noundef nonnull align 8 dereferenceable(32) %219, ptr noundef nonnull align 8 dereferenceable(104) %214) #56
          to label %2153 unwind label %4025

2153:                                             ; preds = %2152
  %2154 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %218) #56
          to label %2155 unwind label %4027

2155:                                             ; preds = %2153
  %2156 = getelementptr inbounds %"struct.std::pair.85", ptr %218, i64 0, i32 1
  %2157 = getelementptr inbounds %"struct.std::pair.85", ptr %218, i64 0, i32 1, i32 4
  %2158 = load ptr, ptr %2157, align 8, !tbaa !23
  %2159 = getelementptr inbounds %"struct.std::pair.85", ptr %218, i64 0, i32 1, i32 4, i32 2
  %2160 = icmp eq ptr %2158, %2159
  br i1 %2160, label %2162, label %2161

2161:                                             ; preds = %2155
  call void @_ZdlPv(ptr noundef %2158) #58
  br label %2162

2162:                                             ; preds = %2161, %2155
  %2163 = getelementptr inbounds %"struct.std::pair.85", ptr %218, i64 0, i32 1, i32 3
  %2164 = load ptr, ptr %2163, align 8, !tbaa !23
  %2165 = getelementptr inbounds %"struct.std::pair.85", ptr %218, i64 0, i32 1, i32 3, i32 2
  %2166 = icmp eq ptr %2164, %2165
  br i1 %2166, label %2168, label %2167

2167:                                             ; preds = %2162
  call void @_ZdlPv(ptr noundef %2164) #58
  br label %2168

2168:                                             ; preds = %2167, %2162
  %2169 = load ptr, ptr %2156, align 8, !tbaa !23
  %2170 = getelementptr inbounds %"struct.std::pair.85", ptr %218, i64 0, i32 1, i32 0, i32 2
  %2171 = icmp eq ptr %2169, %2170
  br i1 %2171, label %2173, label %2172

2172:                                             ; preds = %2168
  call void @_ZdlPv(ptr noundef %2169) #58
  br label %2173

2173:                                             ; preds = %2172, %2168
  %2174 = load ptr, ptr %218, align 8, !tbaa !23
  %2175 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %218, i64 0, i32 2
  %2176 = icmp eq ptr %2174, %2175
  br i1 %2176, label %2178, label %2177

2177:                                             ; preds = %2173
  call void @_ZdlPv(ptr noundef %2174) #58
  br label %2178

2178:                                             ; preds = %2177, %2173
  %2179 = load ptr, ptr %219, align 8, !tbaa !23
  %2180 = icmp eq ptr %2179, %2147
  br i1 %2180, label %2182, label %2181

2181:                                             ; preds = %2178
  call void @_ZdlPv(ptr noundef %2179) #58
  br label %2182

2182:                                             ; preds = %2181, %2178
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %219) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %218) #57
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %220) #57
  %2183 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %221, i64 0, i32 2
  store ptr %2183, ptr %221, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %221, ptr noundef nonnull @.str.193, ptr noundef nonnull getelementptr inbounds ([8 x i8], ptr @.str.193, i64 0, i64 7)) #56
          to label %2184 unwind label %4036

2184:                                             ; preds = %2182
  %2185 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %222, i64 0, i32 2
  store ptr %2185, ptr %222, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %222, ptr noundef nonnull @.str.194, ptr noundef nonnull getelementptr inbounds ([8 x i8], ptr @.str.194, i64 0, i64 7)) #56
          to label %2186 unwind label %4038

2186:                                             ; preds = %2184
  %2187 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %223, i64 0, i32 2
  store ptr %2187, ptr %223, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %223, ptr noundef nonnull @.str.195, ptr noundef nonnull getelementptr inbounds ([29 x i8], ptr @.str.195, i64 0, i64 28)) #56
          to label %2188 unwind label %4040

2188:                                             ; preds = %2186
  invoke void @_ZN2PP8FunctionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbiS6_S6_(ptr noundef nonnull align 8 dereferenceable(104) %220, ptr noundef nonnull %221, i1 noundef zeroext true, i32 noundef 1, ptr noundef nonnull %222, ptr noundef nonnull %223) #56
          to label %2189 unwind label %4042

2189:                                             ; preds = %2188
  %2190 = load ptr, ptr %223, align 8, !tbaa !23
  %2191 = icmp eq ptr %2190, %2187
  br i1 %2191, label %2193, label %2192

2192:                                             ; preds = %2189
  call void @_ZdlPv(ptr noundef %2190) #58
  br label %2193

2193:                                             ; preds = %2192, %2189
  %2194 = load ptr, ptr %222, align 8, !tbaa !23
  %2195 = icmp eq ptr %2194, %2185
  br i1 %2195, label %2197, label %2196

2196:                                             ; preds = %2193
  call void @_ZdlPv(ptr noundef %2194) #58
  br label %2197

2197:                                             ; preds = %2196, %2193
  %2198 = load ptr, ptr %221, align 8, !tbaa !23
  %2199 = icmp eq ptr %2198, %2183
  br i1 %2199, label %2201, label %2200

2200:                                             ; preds = %2197
  call void @_ZdlPv(ptr noundef %2198) #58
  br label %2201

2201:                                             ; preds = %2200, %2197
  call void @llvm.lifetime.start.p0(i64 136, ptr nonnull %224) #57
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %225) #57
  call void @llvm.experimental.noalias.scope.decl(metadata !420)
  %2202 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %225, i64 0, i32 2
  store ptr %2202, ptr %225, align 8, !tbaa !78, !alias.scope !420
  %2203 = load ptr, ptr %220, align 8, !tbaa !23, !noalias !420
  %2204 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %220, i64 0, i32 1
  %2205 = load i64, ptr %2204, align 8, !tbaa !49, !noalias !420
  %2206 = getelementptr inbounds i8, ptr %2203, i64 %2205
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %225, ptr noundef %2203, ptr noundef %2206) #56
          to label %2207 unwind label %4057

2207:                                             ; preds = %2201
  invoke void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %224, ptr noundef nonnull align 8 dereferenceable(32) %225, ptr noundef nonnull align 8 dereferenceable(104) %220) #56
          to label %2208 unwind label %4059

2208:                                             ; preds = %2207
  %2209 = invoke { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %716, ptr noundef nonnull align 8 dereferenceable(136) %224) #56
          to label %2210 unwind label %4061

2210:                                             ; preds = %2208
  %2211 = getelementptr inbounds %"struct.std::pair.85", ptr %224, i64 0, i32 1
  %2212 = getelementptr inbounds %"struct.std::pair.85", ptr %224, i64 0, i32 1, i32 4
  %2213 = load ptr, ptr %2212, align 8, !tbaa !23
  %2214 = getelementptr inbounds %"struct.std::pair.85", ptr %224, i64 0, i32 1, i32 4, i32 2
  %2215 = icmp eq ptr %2213, %2214
  br i1 %2215, label %2217, label %2216

2216:                                             ; preds = %2210
  call void @_ZdlPv(ptr noundef %2213) #58
  br label %2217

2217:                                             ; preds = %2216, %2210
  %2218 = getelementptr inbounds %"struct.std::pair.85", ptr %224, i64 0, i32 1, i32 3
  %2219 = load ptr, ptr %2218, align 8, !tbaa !23
  %2220 = getelementptr inbounds %"struct.std::pair.85", ptr %224, i64 0, i32 1, i32 3, i32 2
  %2221 = icmp eq ptr %2219, %2220
  br i1 %2221, label %2223, label %2222

2222:                                             ; preds = %2217
  call void @_ZdlPv(ptr noundef %2219) #58
  br label %2223

2223:                                             ; preds = %2222, %2217
  %2224 = load ptr, ptr %2211, align 8, !tbaa !23
  %2225 = getelementptr inbounds %"struct.std::pair.85", ptr %224, i64 0, i32 1, i32 0, i32 2
  %2226 = icmp eq ptr %2224, %2225
  br i1 %2226, label %2228, label %2227

2227:                                             ; preds = %2223
  call void @_ZdlPv(ptr noundef %2224) #58
  br label %2228

2228:                                             ; preds = %2227, %2223
  %2229 = load ptr, ptr %224, align 8, !tbaa !23
  %2230 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %224, i64 0, i32 2
  %2231 = icmp eq ptr %2229, %2230
  br i1 %2231, label %2233, label %2232

2232:                                             ; preds = %2228
  call void @_ZdlPv(ptr noundef %2229) #58
  br label %2233

2233:                                             ; preds = %2232, %2228
  %2234 = load ptr, ptr %225, align 8, !tbaa !23
  %2235 = icmp eq ptr %2234, %2202
  br i1 %2235, label %2237, label %2236

2236:                                             ; preds = %2233
  call void @_ZdlPv(ptr noundef %2234) #58
  br label %2237

2237:                                             ; preds = %2236, %2233
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %225) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %224) #57
  %2238 = getelementptr inbounds %"class.PP::Function", ptr %220, i64 0, i32 4
  %2239 = load ptr, ptr %2238, align 8, !tbaa !23
  %2240 = getelementptr inbounds %"class.PP::Function", ptr %220, i64 0, i32 4, i32 2
  %2241 = icmp eq ptr %2239, %2240
  br i1 %2241, label %2243, label %2242

2242:                                             ; preds = %2237
  call void @_ZdlPv(ptr noundef %2239) #58
  br label %2243

2243:                                             ; preds = %2242, %2237
  %2244 = getelementptr inbounds %"class.PP::Function", ptr %220, i64 0, i32 3
  %2245 = load ptr, ptr %2244, align 8, !tbaa !23
  %2246 = getelementptr inbounds %"class.PP::Function", ptr %220, i64 0, i32 3, i32 2
  %2247 = icmp eq ptr %2245, %2246
  br i1 %2247, label %2249, label %2248

2248:                                             ; preds = %2243
  call void @_ZdlPv(ptr noundef %2245) #58
  br label %2249

2249:                                             ; preds = %2248, %2243
  %2250 = load ptr, ptr %220, align 8, !tbaa !23
  %2251 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %220, i64 0, i32 2
  %2252 = icmp eq ptr %2250, %2251
  br i1 %2252, label %2254, label %2253

2253:                                             ; preds = %2249
  call void @_ZdlPv(ptr noundef %2250) #58
  br label %2254

2254:                                             ; preds = %2253, %2249
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %220) #57
  %2255 = getelementptr inbounds %"class.PP::Function", ptr %214, i64 0, i32 4
  %2256 = load ptr, ptr %2255, align 8, !tbaa !23
  %2257 = getelementptr inbounds %"class.PP::Function", ptr %214, i64 0, i32 4, i32 2
  %2258 = icmp eq ptr %2256, %2257
  br i1 %2258, label %2260, label %2259

2259:                                             ; preds = %2254
  call void @_ZdlPv(ptr noundef %2256) #58
  br label %2260

2260:                                             ; preds = %2259, %2254
  %2261 = getelementptr inbounds %"class.PP::Function", ptr %214, i64 0, i32 3
  %2262 = load ptr, ptr %2261, align 8, !tbaa !23
  %2263 = getelementptr inbounds %"class.PP::Function", ptr %214, i64 0, i32 3, i32 2
  %2264 = icmp eq ptr %2262, %2263
  br i1 %2264, label %2266, label %2265

2265:                                             ; preds = %2260
  call void @_ZdlPv(ptr noundef %2262) #58
  br label %2266

2266:                                             ; preds = %2265, %2260
  %2267 = load ptr, ptr %214, align 8, !tbaa !23
  %2268 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %214, i64 0, i32 2
  %2269 = icmp eq ptr %2267, %2268
  br i1 %2269, label %2271, label %2270

2270:                                             ; preds = %2266
  call void @_ZdlPv(ptr noundef %2267) #58
  br label %2271

2271:                                             ; preds = %2270, %2266
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %214) #57
  %2272 = getelementptr inbounds %"class.PP::Function", ptr %208, i64 0, i32 4
  %2273 = load ptr, ptr %2272, align 8, !tbaa !23
  %2274 = getelementptr inbounds %"class.PP::Function", ptr %208, i64 0, i32 4, i32 2
  %2275 = icmp eq ptr %2273, %2274
  br i1 %2275, label %2277, label %2276

2276:                                             ; preds = %2271
  call void @_ZdlPv(ptr noundef %2273) #58
  br label %2277

2277:                                             ; preds = %2276, %2271
  %2278 = getelementptr inbounds %"class.PP::Function", ptr %208, i64 0, i32 3
  %2279 = load ptr, ptr %2278, align 8, !tbaa !23
  %2280 = getelementptr inbounds %"class.PP::Function", ptr %208, i64 0, i32 3, i32 2
  %2281 = icmp eq ptr %2279, %2280
  br i1 %2281, label %2283, label %2282

2282:                                             ; preds = %2277
  call void @_ZdlPv(ptr noundef %2279) #58
  br label %2283

2283:                                             ; preds = %2282, %2277
  %2284 = load ptr, ptr %208, align 8, !tbaa !23
  %2285 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %208, i64 0, i32 2
  %2286 = icmp eq ptr %2284, %2285
  br i1 %2286, label %2288, label %2287

2287:                                             ; preds = %2283
  call void @_ZdlPv(ptr noundef %2284) #58
  br label %2288

2288:                                             ; preds = %2287, %2283
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %208) #57
  %2289 = getelementptr inbounds %"class.PP::Function", ptr %202, i64 0, i32 4
  %2290 = load ptr, ptr %2289, align 8, !tbaa !23
  %2291 = getelementptr inbounds %"class.PP::Function", ptr %202, i64 0, i32 4, i32 2
  %2292 = icmp eq ptr %2290, %2291
  br i1 %2292, label %2294, label %2293

2293:                                             ; preds = %2288
  call void @_ZdlPv(ptr noundef %2290) #58
  br label %2294

2294:                                             ; preds = %2293, %2288
  %2295 = getelementptr inbounds %"class.PP::Function", ptr %202, i64 0, i32 3
  %2296 = load ptr, ptr %2295, align 8, !tbaa !23
  %2297 = getelementptr inbounds %"class.PP::Function", ptr %202, i64 0, i32 3, i32 2
  %2298 = icmp eq ptr %2296, %2297
  br i1 %2298, label %2300, label %2299

2299:                                             ; preds = %2294
  call void @_ZdlPv(ptr noundef %2296) #58
  br label %2300

2300:                                             ; preds = %2299, %2294
  %2301 = load ptr, ptr %202, align 8, !tbaa !23
  %2302 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %202, i64 0, i32 2
  %2303 = icmp eq ptr %2301, %2302
  br i1 %2303, label %2305, label %2304

2304:                                             ; preds = %2300
  call void @_ZdlPv(ptr noundef %2301) #58
  br label %2305

2305:                                             ; preds = %2304, %2300
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %202) #57
  %2306 = getelementptr inbounds %"class.PP::Function", ptr %196, i64 0, i32 4
  %2307 = load ptr, ptr %2306, align 8, !tbaa !23
  %2308 = getelementptr inbounds %"class.PP::Function", ptr %196, i64 0, i32 4, i32 2
  %2309 = icmp eq ptr %2307, %2308
  br i1 %2309, label %2311, label %2310

2310:                                             ; preds = %2305
  call void @_ZdlPv(ptr noundef %2307) #58
  br label %2311

2311:                                             ; preds = %2310, %2305
  %2312 = getelementptr inbounds %"class.PP::Function", ptr %196, i64 0, i32 3
  %2313 = load ptr, ptr %2312, align 8, !tbaa !23
  %2314 = getelementptr inbounds %"class.PP::Function", ptr %196, i64 0, i32 3, i32 2
  %2315 = icmp eq ptr %2313, %2314
  br i1 %2315, label %2317, label %2316

2316:                                             ; preds = %2311
  call void @_ZdlPv(ptr noundef %2313) #58
  br label %2317

2317:                                             ; preds = %2316, %2311
  %2318 = load ptr, ptr %196, align 8, !tbaa !23
  %2319 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %196, i64 0, i32 2
  %2320 = icmp eq ptr %2318, %2319
  br i1 %2320, label %2322, label %2321

2321:                                             ; preds = %2317
  call void @_ZdlPv(ptr noundef %2318) #58
  br label %2322

2322:                                             ; preds = %2321, %2317
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %196) #57
  %2323 = getelementptr inbounds %"class.PP::Function", ptr %190, i64 0, i32 4
  %2324 = load ptr, ptr %2323, align 8, !tbaa !23
  %2325 = getelementptr inbounds %"class.PP::Function", ptr %190, i64 0, i32 4, i32 2
  %2326 = icmp eq ptr %2324, %2325
  br i1 %2326, label %2328, label %2327

2327:                                             ; preds = %2322
  call void @_ZdlPv(ptr noundef %2324) #58
  br label %2328

2328:                                             ; preds = %2327, %2322
  %2329 = getelementptr inbounds %"class.PP::Function", ptr %190, i64 0, i32 3
  %2330 = load ptr, ptr %2329, align 8, !tbaa !23
  %2331 = getelementptr inbounds %"class.PP::Function", ptr %190, i64 0, i32 3, i32 2
  %2332 = icmp eq ptr %2330, %2331
  br i1 %2332, label %2334, label %2333

2333:                                             ; preds = %2328
  call void @_ZdlPv(ptr noundef %2330) #58
  br label %2334

2334:                                             ; preds = %2333, %2328
  %2335 = load ptr, ptr %190, align 8, !tbaa !23
  %2336 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %190, i64 0, i32 2
  %2337 = icmp eq ptr %2335, %2336
  br i1 %2337, label %2339, label %2338

2338:                                             ; preds = %2334
  call void @_ZdlPv(ptr noundef %2335) #58
  br label %2339

2339:                                             ; preds = %2338, %2334
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %190) #57
  %2340 = getelementptr inbounds %"class.PP::Function", ptr %184, i64 0, i32 4
  %2341 = load ptr, ptr %2340, align 8, !tbaa !23
  %2342 = getelementptr inbounds %"class.PP::Function", ptr %184, i64 0, i32 4, i32 2
  %2343 = icmp eq ptr %2341, %2342
  br i1 %2343, label %2345, label %2344

2344:                                             ; preds = %2339
  call void @_ZdlPv(ptr noundef %2341) #58
  br label %2345

2345:                                             ; preds = %2344, %2339
  %2346 = getelementptr inbounds %"class.PP::Function", ptr %184, i64 0, i32 3
  %2347 = load ptr, ptr %2346, align 8, !tbaa !23
  %2348 = getelementptr inbounds %"class.PP::Function", ptr %184, i64 0, i32 3, i32 2
  %2349 = icmp eq ptr %2347, %2348
  br i1 %2349, label %2351, label %2350

2350:                                             ; preds = %2345
  call void @_ZdlPv(ptr noundef %2347) #58
  br label %2351

2351:                                             ; preds = %2350, %2345
  %2352 = load ptr, ptr %184, align 8, !tbaa !23
  %2353 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %184, i64 0, i32 2
  %2354 = icmp eq ptr %2352, %2353
  br i1 %2354, label %2356, label %2355

2355:                                             ; preds = %2351
  call void @_ZdlPv(ptr noundef %2352) #58
  br label %2356

2356:                                             ; preds = %2355, %2351
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %184) #57
  %2357 = getelementptr inbounds %"class.PP::Function", ptr %178, i64 0, i32 4
  %2358 = load ptr, ptr %2357, align 8, !tbaa !23
  %2359 = getelementptr inbounds %"class.PP::Function", ptr %178, i64 0, i32 4, i32 2
  %2360 = icmp eq ptr %2358, %2359
  br i1 %2360, label %2362, label %2361

2361:                                             ; preds = %2356
  call void @_ZdlPv(ptr noundef %2358) #58
  br label %2362

2362:                                             ; preds = %2361, %2356
  %2363 = getelementptr inbounds %"class.PP::Function", ptr %178, i64 0, i32 3
  %2364 = load ptr, ptr %2363, align 8, !tbaa !23
  %2365 = getelementptr inbounds %"class.PP::Function", ptr %178, i64 0, i32 3, i32 2
  %2366 = icmp eq ptr %2364, %2365
  br i1 %2366, label %2368, label %2367

2367:                                             ; preds = %2362
  call void @_ZdlPv(ptr noundef %2364) #58
  br label %2368

2368:                                             ; preds = %2367, %2362
  %2369 = load ptr, ptr %178, align 8, !tbaa !23
  %2370 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %178, i64 0, i32 2
  %2371 = icmp eq ptr %2369, %2370
  br i1 %2371, label %2373, label %2372

2372:                                             ; preds = %2368
  call void @_ZdlPv(ptr noundef %2369) #58
  br label %2373

2373:                                             ; preds = %2372, %2368
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %178) #57
  %2374 = getelementptr inbounds %"class.PP::Function", ptr %172, i64 0, i32 4
  %2375 = load ptr, ptr %2374, align 8, !tbaa !23
  %2376 = getelementptr inbounds %"class.PP::Function", ptr %172, i64 0, i32 4, i32 2
  %2377 = icmp eq ptr %2375, %2376
  br i1 %2377, label %2379, label %2378

2378:                                             ; preds = %2373
  call void @_ZdlPv(ptr noundef %2375) #58
  br label %2379

2379:                                             ; preds = %2378, %2373
  %2380 = getelementptr inbounds %"class.PP::Function", ptr %172, i64 0, i32 3
  %2381 = load ptr, ptr %2380, align 8, !tbaa !23
  %2382 = getelementptr inbounds %"class.PP::Function", ptr %172, i64 0, i32 3, i32 2
  %2383 = icmp eq ptr %2381, %2382
  br i1 %2383, label %2385, label %2384

2384:                                             ; preds = %2379
  call void @_ZdlPv(ptr noundef %2381) #58
  br label %2385

2385:                                             ; preds = %2384, %2379
  %2386 = load ptr, ptr %172, align 8, !tbaa !23
  %2387 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %172, i64 0, i32 2
  %2388 = icmp eq ptr %2386, %2387
  br i1 %2388, label %2390, label %2389

2389:                                             ; preds = %2385
  call void @_ZdlPv(ptr noundef %2386) #58
  br label %2390

2390:                                             ; preds = %2389, %2385
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %172) #57
  %2391 = getelementptr inbounds %"class.PP::Function", ptr %166, i64 0, i32 4
  %2392 = load ptr, ptr %2391, align 8, !tbaa !23
  %2393 = getelementptr inbounds %"class.PP::Function", ptr %166, i64 0, i32 4, i32 2
  %2394 = icmp eq ptr %2392, %2393
  br i1 %2394, label %2396, label %2395

2395:                                             ; preds = %2390
  call void @_ZdlPv(ptr noundef %2392) #58
  br label %2396

2396:                                             ; preds = %2395, %2390
  %2397 = getelementptr inbounds %"class.PP::Function", ptr %166, i64 0, i32 3
  %2398 = load ptr, ptr %2397, align 8, !tbaa !23
  %2399 = getelementptr inbounds %"class.PP::Function", ptr %166, i64 0, i32 3, i32 2
  %2400 = icmp eq ptr %2398, %2399
  br i1 %2400, label %2402, label %2401

2401:                                             ; preds = %2396
  call void @_ZdlPv(ptr noundef %2398) #58
  br label %2402

2402:                                             ; preds = %2401, %2396
  %2403 = load ptr, ptr %166, align 8, !tbaa !23
  %2404 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %166, i64 0, i32 2
  %2405 = icmp eq ptr %2403, %2404
  br i1 %2405, label %2407, label %2406

2406:                                             ; preds = %2402
  call void @_ZdlPv(ptr noundef %2403) #58
  br label %2407

2407:                                             ; preds = %2406, %2402
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %166) #57
  %2408 = getelementptr inbounds %"class.PP::Function", ptr %160, i64 0, i32 4
  %2409 = load ptr, ptr %2408, align 8, !tbaa !23
  %2410 = getelementptr inbounds %"class.PP::Function", ptr %160, i64 0, i32 4, i32 2
  %2411 = icmp eq ptr %2409, %2410
  br i1 %2411, label %2413, label %2412

2412:                                             ; preds = %2407
  call void @_ZdlPv(ptr noundef %2409) #58
  br label %2413

2413:                                             ; preds = %2412, %2407
  %2414 = getelementptr inbounds %"class.PP::Function", ptr %160, i64 0, i32 3
  %2415 = load ptr, ptr %2414, align 8, !tbaa !23
  %2416 = getelementptr inbounds %"class.PP::Function", ptr %160, i64 0, i32 3, i32 2
  %2417 = icmp eq ptr %2415, %2416
  br i1 %2417, label %2419, label %2418

2418:                                             ; preds = %2413
  call void @_ZdlPv(ptr noundef %2415) #58
  br label %2419

2419:                                             ; preds = %2418, %2413
  %2420 = load ptr, ptr %160, align 8, !tbaa !23
  %2421 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %160, i64 0, i32 2
  %2422 = icmp eq ptr %2420, %2421
  br i1 %2422, label %2424, label %2423

2423:                                             ; preds = %2419
  call void @_ZdlPv(ptr noundef %2420) #58
  br label %2424

2424:                                             ; preds = %2423, %2419
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %160) #57
  %2425 = getelementptr inbounds %"class.PP::Function", ptr %154, i64 0, i32 4
  %2426 = load ptr, ptr %2425, align 8, !tbaa !23
  %2427 = getelementptr inbounds %"class.PP::Function", ptr %154, i64 0, i32 4, i32 2
  %2428 = icmp eq ptr %2426, %2427
  br i1 %2428, label %2430, label %2429

2429:                                             ; preds = %2424
  call void @_ZdlPv(ptr noundef %2426) #58
  br label %2430

2430:                                             ; preds = %2429, %2424
  %2431 = getelementptr inbounds %"class.PP::Function", ptr %154, i64 0, i32 3
  %2432 = load ptr, ptr %2431, align 8, !tbaa !23
  %2433 = getelementptr inbounds %"class.PP::Function", ptr %154, i64 0, i32 3, i32 2
  %2434 = icmp eq ptr %2432, %2433
  br i1 %2434, label %2436, label %2435

2435:                                             ; preds = %2430
  call void @_ZdlPv(ptr noundef %2432) #58
  br label %2436

2436:                                             ; preds = %2435, %2430
  %2437 = load ptr, ptr %154, align 8, !tbaa !23
  %2438 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %154, i64 0, i32 2
  %2439 = icmp eq ptr %2437, %2438
  br i1 %2439, label %2441, label %2440

2440:                                             ; preds = %2436
  call void @_ZdlPv(ptr noundef %2437) #58
  br label %2441

2441:                                             ; preds = %2440, %2436
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %154) #57
  %2442 = getelementptr inbounds %"class.PP::Function", ptr %148, i64 0, i32 4
  %2443 = load ptr, ptr %2442, align 8, !tbaa !23
  %2444 = getelementptr inbounds %"class.PP::Function", ptr %148, i64 0, i32 4, i32 2
  %2445 = icmp eq ptr %2443, %2444
  br i1 %2445, label %2447, label %2446

2446:                                             ; preds = %2441
  call void @_ZdlPv(ptr noundef %2443) #58
  br label %2447

2447:                                             ; preds = %2446, %2441
  %2448 = getelementptr inbounds %"class.PP::Function", ptr %148, i64 0, i32 3
  %2449 = load ptr, ptr %2448, align 8, !tbaa !23
  %2450 = getelementptr inbounds %"class.PP::Function", ptr %148, i64 0, i32 3, i32 2
  %2451 = icmp eq ptr %2449, %2450
  br i1 %2451, label %2453, label %2452

2452:                                             ; preds = %2447
  call void @_ZdlPv(ptr noundef %2449) #58
  br label %2453

2453:                                             ; preds = %2452, %2447
  %2454 = load ptr, ptr %148, align 8, !tbaa !23
  %2455 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %148, i64 0, i32 2
  %2456 = icmp eq ptr %2454, %2455
  br i1 %2456, label %2458, label %2457

2457:                                             ; preds = %2453
  call void @_ZdlPv(ptr noundef %2454) #58
  br label %2458

2458:                                             ; preds = %2457, %2453
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %148) #57
  %2459 = getelementptr inbounds %"class.PP::Function", ptr %142, i64 0, i32 4
  %2460 = load ptr, ptr %2459, align 8, !tbaa !23
  %2461 = getelementptr inbounds %"class.PP::Function", ptr %142, i64 0, i32 4, i32 2
  %2462 = icmp eq ptr %2460, %2461
  br i1 %2462, label %2464, label %2463

2463:                                             ; preds = %2458
  call void @_ZdlPv(ptr noundef %2460) #58
  br label %2464

2464:                                             ; preds = %2463, %2458
  %2465 = getelementptr inbounds %"class.PP::Function", ptr %142, i64 0, i32 3
  %2466 = load ptr, ptr %2465, align 8, !tbaa !23
  %2467 = getelementptr inbounds %"class.PP::Function", ptr %142, i64 0, i32 3, i32 2
  %2468 = icmp eq ptr %2466, %2467
  br i1 %2468, label %2470, label %2469

2469:                                             ; preds = %2464
  call void @_ZdlPv(ptr noundef %2466) #58
  br label %2470

2470:                                             ; preds = %2469, %2464
  %2471 = load ptr, ptr %142, align 8, !tbaa !23
  %2472 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %142, i64 0, i32 2
  %2473 = icmp eq ptr %2471, %2472
  br i1 %2473, label %2475, label %2474

2474:                                             ; preds = %2470
  call void @_ZdlPv(ptr noundef %2471) #58
  br label %2475

2475:                                             ; preds = %2474, %2470
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %142) #57
  %2476 = getelementptr inbounds %"class.PP::Function", ptr %136, i64 0, i32 4
  %2477 = load ptr, ptr %2476, align 8, !tbaa !23
  %2478 = getelementptr inbounds %"class.PP::Function", ptr %136, i64 0, i32 4, i32 2
  %2479 = icmp eq ptr %2477, %2478
  br i1 %2479, label %2481, label %2480

2480:                                             ; preds = %2475
  call void @_ZdlPv(ptr noundef %2477) #58
  br label %2481

2481:                                             ; preds = %2480, %2475
  %2482 = getelementptr inbounds %"class.PP::Function", ptr %136, i64 0, i32 3
  %2483 = load ptr, ptr %2482, align 8, !tbaa !23
  %2484 = getelementptr inbounds %"class.PP::Function", ptr %136, i64 0, i32 3, i32 2
  %2485 = icmp eq ptr %2483, %2484
  br i1 %2485, label %2487, label %2486

2486:                                             ; preds = %2481
  call void @_ZdlPv(ptr noundef %2483) #58
  br label %2487

2487:                                             ; preds = %2486, %2481
  %2488 = load ptr, ptr %136, align 8, !tbaa !23
  %2489 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %136, i64 0, i32 2
  %2490 = icmp eq ptr %2488, %2489
  br i1 %2490, label %2492, label %2491

2491:                                             ; preds = %2487
  call void @_ZdlPv(ptr noundef %2488) #58
  br label %2492

2492:                                             ; preds = %2491, %2487
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %136) #57
  %2493 = getelementptr inbounds %"class.PP::Function", ptr %130, i64 0, i32 4
  %2494 = load ptr, ptr %2493, align 8, !tbaa !23
  %2495 = getelementptr inbounds %"class.PP::Function", ptr %130, i64 0, i32 4, i32 2
  %2496 = icmp eq ptr %2494, %2495
  br i1 %2496, label %2498, label %2497

2497:                                             ; preds = %2492
  call void @_ZdlPv(ptr noundef %2494) #58
  br label %2498

2498:                                             ; preds = %2497, %2492
  %2499 = getelementptr inbounds %"class.PP::Function", ptr %130, i64 0, i32 3
  %2500 = load ptr, ptr %2499, align 8, !tbaa !23
  %2501 = getelementptr inbounds %"class.PP::Function", ptr %130, i64 0, i32 3, i32 2
  %2502 = icmp eq ptr %2500, %2501
  br i1 %2502, label %2504, label %2503

2503:                                             ; preds = %2498
  call void @_ZdlPv(ptr noundef %2500) #58
  br label %2504

2504:                                             ; preds = %2503, %2498
  %2505 = load ptr, ptr %130, align 8, !tbaa !23
  %2506 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %130, i64 0, i32 2
  %2507 = icmp eq ptr %2505, %2506
  br i1 %2507, label %2509, label %2508

2508:                                             ; preds = %2504
  call void @_ZdlPv(ptr noundef %2505) #58
  br label %2509

2509:                                             ; preds = %2508, %2504
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %130) #57
  %2510 = getelementptr inbounds %"class.PP::Function", ptr %124, i64 0, i32 4
  %2511 = load ptr, ptr %2510, align 8, !tbaa !23
  %2512 = getelementptr inbounds %"class.PP::Function", ptr %124, i64 0, i32 4, i32 2
  %2513 = icmp eq ptr %2511, %2512
  br i1 %2513, label %2515, label %2514

2514:                                             ; preds = %2509
  call void @_ZdlPv(ptr noundef %2511) #58
  br label %2515

2515:                                             ; preds = %2514, %2509
  %2516 = getelementptr inbounds %"class.PP::Function", ptr %124, i64 0, i32 3
  %2517 = load ptr, ptr %2516, align 8, !tbaa !23
  %2518 = getelementptr inbounds %"class.PP::Function", ptr %124, i64 0, i32 3, i32 2
  %2519 = icmp eq ptr %2517, %2518
  br i1 %2519, label %2521, label %2520

2520:                                             ; preds = %2515
  call void @_ZdlPv(ptr noundef %2517) #58
  br label %2521

2521:                                             ; preds = %2520, %2515
  %2522 = load ptr, ptr %124, align 8, !tbaa !23
  %2523 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %124, i64 0, i32 2
  %2524 = icmp eq ptr %2522, %2523
  br i1 %2524, label %2526, label %2525

2525:                                             ; preds = %2521
  call void @_ZdlPv(ptr noundef %2522) #58
  br label %2526

2526:                                             ; preds = %2525, %2521
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %124) #57
  %2527 = getelementptr inbounds %"class.PP::Function", ptr %118, i64 0, i32 4
  %2528 = load ptr, ptr %2527, align 8, !tbaa !23
  %2529 = getelementptr inbounds %"class.PP::Function", ptr %118, i64 0, i32 4, i32 2
  %2530 = icmp eq ptr %2528, %2529
  br i1 %2530, label %2532, label %2531

2531:                                             ; preds = %2526
  call void @_ZdlPv(ptr noundef %2528) #58
  br label %2532

2532:                                             ; preds = %2531, %2526
  %2533 = getelementptr inbounds %"class.PP::Function", ptr %118, i64 0, i32 3
  %2534 = load ptr, ptr %2533, align 8, !tbaa !23
  %2535 = getelementptr inbounds %"class.PP::Function", ptr %118, i64 0, i32 3, i32 2
  %2536 = icmp eq ptr %2534, %2535
  br i1 %2536, label %2538, label %2537

2537:                                             ; preds = %2532
  call void @_ZdlPv(ptr noundef %2534) #58
  br label %2538

2538:                                             ; preds = %2537, %2532
  %2539 = load ptr, ptr %118, align 8, !tbaa !23
  %2540 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %118, i64 0, i32 2
  %2541 = icmp eq ptr %2539, %2540
  br i1 %2541, label %2543, label %2542

2542:                                             ; preds = %2538
  call void @_ZdlPv(ptr noundef %2539) #58
  br label %2543

2543:                                             ; preds = %2542, %2538
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %118) #57
  %2544 = getelementptr inbounds %"class.PP::Function", ptr %112, i64 0, i32 4
  %2545 = load ptr, ptr %2544, align 8, !tbaa !23
  %2546 = getelementptr inbounds %"class.PP::Function", ptr %112, i64 0, i32 4, i32 2
  %2547 = icmp eq ptr %2545, %2546
  br i1 %2547, label %2549, label %2548

2548:                                             ; preds = %2543
  call void @_ZdlPv(ptr noundef %2545) #58
  br label %2549

2549:                                             ; preds = %2548, %2543
  %2550 = getelementptr inbounds %"class.PP::Function", ptr %112, i64 0, i32 3
  %2551 = load ptr, ptr %2550, align 8, !tbaa !23
  %2552 = getelementptr inbounds %"class.PP::Function", ptr %112, i64 0, i32 3, i32 2
  %2553 = icmp eq ptr %2551, %2552
  br i1 %2553, label %2555, label %2554

2554:                                             ; preds = %2549
  call void @_ZdlPv(ptr noundef %2551) #58
  br label %2555

2555:                                             ; preds = %2554, %2549
  %2556 = load ptr, ptr %112, align 8, !tbaa !23
  %2557 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %112, i64 0, i32 2
  %2558 = icmp eq ptr %2556, %2557
  br i1 %2558, label %2560, label %2559

2559:                                             ; preds = %2555
  call void @_ZdlPv(ptr noundef %2556) #58
  br label %2560

2560:                                             ; preds = %2559, %2555
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %112) #57
  %2561 = getelementptr inbounds %"class.PP::Function", ptr %106, i64 0, i32 4
  %2562 = load ptr, ptr %2561, align 8, !tbaa !23
  %2563 = getelementptr inbounds %"class.PP::Function", ptr %106, i64 0, i32 4, i32 2
  %2564 = icmp eq ptr %2562, %2563
  br i1 %2564, label %2566, label %2565

2565:                                             ; preds = %2560
  call void @_ZdlPv(ptr noundef %2562) #58
  br label %2566

2566:                                             ; preds = %2565, %2560
  %2567 = getelementptr inbounds %"class.PP::Function", ptr %106, i64 0, i32 3
  %2568 = load ptr, ptr %2567, align 8, !tbaa !23
  %2569 = getelementptr inbounds %"class.PP::Function", ptr %106, i64 0, i32 3, i32 2
  %2570 = icmp eq ptr %2568, %2569
  br i1 %2570, label %2572, label %2571

2571:                                             ; preds = %2566
  call void @_ZdlPv(ptr noundef %2568) #58
  br label %2572

2572:                                             ; preds = %2571, %2566
  %2573 = load ptr, ptr %106, align 8, !tbaa !23
  %2574 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %106, i64 0, i32 2
  %2575 = icmp eq ptr %2573, %2574
  br i1 %2575, label %2577, label %2576

2576:                                             ; preds = %2572
  call void @_ZdlPv(ptr noundef %2573) #58
  br label %2577

2577:                                             ; preds = %2576, %2572
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %106) #57
  %2578 = getelementptr inbounds %"class.PP::Function", ptr %100, i64 0, i32 4
  %2579 = load ptr, ptr %2578, align 8, !tbaa !23
  %2580 = getelementptr inbounds %"class.PP::Function", ptr %100, i64 0, i32 4, i32 2
  %2581 = icmp eq ptr %2579, %2580
  br i1 %2581, label %2583, label %2582

2582:                                             ; preds = %2577
  call void @_ZdlPv(ptr noundef %2579) #58
  br label %2583

2583:                                             ; preds = %2582, %2577
  %2584 = getelementptr inbounds %"class.PP::Function", ptr %100, i64 0, i32 3
  %2585 = load ptr, ptr %2584, align 8, !tbaa !23
  %2586 = getelementptr inbounds %"class.PP::Function", ptr %100, i64 0, i32 3, i32 2
  %2587 = icmp eq ptr %2585, %2586
  br i1 %2587, label %2589, label %2588

2588:                                             ; preds = %2583
  call void @_ZdlPv(ptr noundef %2585) #58
  br label %2589

2589:                                             ; preds = %2588, %2583
  %2590 = load ptr, ptr %100, align 8, !tbaa !23
  %2591 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %100, i64 0, i32 2
  %2592 = icmp eq ptr %2590, %2591
  br i1 %2592, label %2594, label %2593

2593:                                             ; preds = %2589
  call void @_ZdlPv(ptr noundef %2590) #58
  br label %2594

2594:                                             ; preds = %2593, %2589
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %100) #57
  %2595 = getelementptr inbounds %"class.PP::Function", ptr %94, i64 0, i32 4
  %2596 = load ptr, ptr %2595, align 8, !tbaa !23
  %2597 = getelementptr inbounds %"class.PP::Function", ptr %94, i64 0, i32 4, i32 2
  %2598 = icmp eq ptr %2596, %2597
  br i1 %2598, label %2600, label %2599

2599:                                             ; preds = %2594
  call void @_ZdlPv(ptr noundef %2596) #58
  br label %2600

2600:                                             ; preds = %2599, %2594
  %2601 = getelementptr inbounds %"class.PP::Function", ptr %94, i64 0, i32 3
  %2602 = load ptr, ptr %2601, align 8, !tbaa !23
  %2603 = getelementptr inbounds %"class.PP::Function", ptr %94, i64 0, i32 3, i32 2
  %2604 = icmp eq ptr %2602, %2603
  br i1 %2604, label %2606, label %2605

2605:                                             ; preds = %2600
  call void @_ZdlPv(ptr noundef %2602) #58
  br label %2606

2606:                                             ; preds = %2605, %2600
  %2607 = load ptr, ptr %94, align 8, !tbaa !23
  %2608 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %94, i64 0, i32 2
  %2609 = icmp eq ptr %2607, %2608
  br i1 %2609, label %2611, label %2610

2610:                                             ; preds = %2606
  call void @_ZdlPv(ptr noundef %2607) #58
  br label %2611

2611:                                             ; preds = %2610, %2606
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %94) #57
  %2612 = getelementptr inbounds %"class.PP::Function", ptr %88, i64 0, i32 4
  %2613 = load ptr, ptr %2612, align 8, !tbaa !23
  %2614 = getelementptr inbounds %"class.PP::Function", ptr %88, i64 0, i32 4, i32 2
  %2615 = icmp eq ptr %2613, %2614
  br i1 %2615, label %2617, label %2616

2616:                                             ; preds = %2611
  call void @_ZdlPv(ptr noundef %2613) #58
  br label %2617

2617:                                             ; preds = %2616, %2611
  %2618 = getelementptr inbounds %"class.PP::Function", ptr %88, i64 0, i32 3
  %2619 = load ptr, ptr %2618, align 8, !tbaa !23
  %2620 = getelementptr inbounds %"class.PP::Function", ptr %88, i64 0, i32 3, i32 2
  %2621 = icmp eq ptr %2619, %2620
  br i1 %2621, label %2623, label %2622

2622:                                             ; preds = %2617
  call void @_ZdlPv(ptr noundef %2619) #58
  br label %2623

2623:                                             ; preds = %2622, %2617
  %2624 = load ptr, ptr %88, align 8, !tbaa !23
  %2625 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %88, i64 0, i32 2
  %2626 = icmp eq ptr %2624, %2625
  br i1 %2626, label %2628, label %2627

2627:                                             ; preds = %2623
  call void @_ZdlPv(ptr noundef %2624) #58
  br label %2628

2628:                                             ; preds = %2627, %2623
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %88) #57
  %2629 = getelementptr inbounds %"class.PP::Function", ptr %82, i64 0, i32 4
  %2630 = load ptr, ptr %2629, align 8, !tbaa !23
  %2631 = getelementptr inbounds %"class.PP::Function", ptr %82, i64 0, i32 4, i32 2
  %2632 = icmp eq ptr %2630, %2631
  br i1 %2632, label %2634, label %2633

2633:                                             ; preds = %2628
  call void @_ZdlPv(ptr noundef %2630) #58
  br label %2634

2634:                                             ; preds = %2633, %2628
  %2635 = getelementptr inbounds %"class.PP::Function", ptr %82, i64 0, i32 3
  %2636 = load ptr, ptr %2635, align 8, !tbaa !23
  %2637 = getelementptr inbounds %"class.PP::Function", ptr %82, i64 0, i32 3, i32 2
  %2638 = icmp eq ptr %2636, %2637
  br i1 %2638, label %2640, label %2639

2639:                                             ; preds = %2634
  call void @_ZdlPv(ptr noundef %2636) #58
  br label %2640

2640:                                             ; preds = %2639, %2634
  %2641 = load ptr, ptr %82, align 8, !tbaa !23
  %2642 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %82, i64 0, i32 2
  %2643 = icmp eq ptr %2641, %2642
  br i1 %2643, label %2645, label %2644

2644:                                             ; preds = %2640
  call void @_ZdlPv(ptr noundef %2641) #58
  br label %2645

2645:                                             ; preds = %2644, %2640
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %82) #57
  %2646 = getelementptr inbounds %"class.PP::Function", ptr %76, i64 0, i32 4
  %2647 = load ptr, ptr %2646, align 8, !tbaa !23
  %2648 = getelementptr inbounds %"class.PP::Function", ptr %76, i64 0, i32 4, i32 2
  %2649 = icmp eq ptr %2647, %2648
  br i1 %2649, label %2651, label %2650

2650:                                             ; preds = %2645
  call void @_ZdlPv(ptr noundef %2647) #58
  br label %2651

2651:                                             ; preds = %2650, %2645
  %2652 = getelementptr inbounds %"class.PP::Function", ptr %76, i64 0, i32 3
  %2653 = load ptr, ptr %2652, align 8, !tbaa !23
  %2654 = getelementptr inbounds %"class.PP::Function", ptr %76, i64 0, i32 3, i32 2
  %2655 = icmp eq ptr %2653, %2654
  br i1 %2655, label %2657, label %2656

2656:                                             ; preds = %2651
  call void @_ZdlPv(ptr noundef %2653) #58
  br label %2657

2657:                                             ; preds = %2656, %2651
  %2658 = load ptr, ptr %76, align 8, !tbaa !23
  %2659 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %76, i64 0, i32 2
  %2660 = icmp eq ptr %2658, %2659
  br i1 %2660, label %2662, label %2661

2661:                                             ; preds = %2657
  call void @_ZdlPv(ptr noundef %2658) #58
  br label %2662

2662:                                             ; preds = %2661, %2657
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %76) #57
  %2663 = getelementptr inbounds %"class.PP::Function", ptr %70, i64 0, i32 4
  %2664 = load ptr, ptr %2663, align 8, !tbaa !23
  %2665 = getelementptr inbounds %"class.PP::Function", ptr %70, i64 0, i32 4, i32 2
  %2666 = icmp eq ptr %2664, %2665
  br i1 %2666, label %2668, label %2667

2667:                                             ; preds = %2662
  call void @_ZdlPv(ptr noundef %2664) #58
  br label %2668

2668:                                             ; preds = %2667, %2662
  %2669 = getelementptr inbounds %"class.PP::Function", ptr %70, i64 0, i32 3
  %2670 = load ptr, ptr %2669, align 8, !tbaa !23
  %2671 = getelementptr inbounds %"class.PP::Function", ptr %70, i64 0, i32 3, i32 2
  %2672 = icmp eq ptr %2670, %2671
  br i1 %2672, label %2674, label %2673

2673:                                             ; preds = %2668
  call void @_ZdlPv(ptr noundef %2670) #58
  br label %2674

2674:                                             ; preds = %2673, %2668
  %2675 = load ptr, ptr %70, align 8, !tbaa !23
  %2676 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %70, i64 0, i32 2
  %2677 = icmp eq ptr %2675, %2676
  br i1 %2677, label %2679, label %2678

2678:                                             ; preds = %2674
  call void @_ZdlPv(ptr noundef %2675) #58
  br label %2679

2679:                                             ; preds = %2678, %2674
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %70) #57
  %2680 = getelementptr inbounds %"class.PP::Function", ptr %64, i64 0, i32 4
  %2681 = load ptr, ptr %2680, align 8, !tbaa !23
  %2682 = getelementptr inbounds %"class.PP::Function", ptr %64, i64 0, i32 4, i32 2
  %2683 = icmp eq ptr %2681, %2682
  br i1 %2683, label %2685, label %2684

2684:                                             ; preds = %2679
  call void @_ZdlPv(ptr noundef %2681) #58
  br label %2685

2685:                                             ; preds = %2684, %2679
  %2686 = getelementptr inbounds %"class.PP::Function", ptr %64, i64 0, i32 3
  %2687 = load ptr, ptr %2686, align 8, !tbaa !23
  %2688 = getelementptr inbounds %"class.PP::Function", ptr %64, i64 0, i32 3, i32 2
  %2689 = icmp eq ptr %2687, %2688
  br i1 %2689, label %2691, label %2690

2690:                                             ; preds = %2685
  call void @_ZdlPv(ptr noundef %2687) #58
  br label %2691

2691:                                             ; preds = %2690, %2685
  %2692 = load ptr, ptr %64, align 8, !tbaa !23
  %2693 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %64, i64 0, i32 2
  %2694 = icmp eq ptr %2692, %2693
  br i1 %2694, label %2696, label %2695

2695:                                             ; preds = %2691
  call void @_ZdlPv(ptr noundef %2692) #58
  br label %2696

2696:                                             ; preds = %2695, %2691
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %64) #57
  %2697 = getelementptr inbounds %"class.PP::Function", ptr %58, i64 0, i32 4
  %2698 = load ptr, ptr %2697, align 8, !tbaa !23
  %2699 = getelementptr inbounds %"class.PP::Function", ptr %58, i64 0, i32 4, i32 2
  %2700 = icmp eq ptr %2698, %2699
  br i1 %2700, label %2702, label %2701

2701:                                             ; preds = %2696
  call void @_ZdlPv(ptr noundef %2698) #58
  br label %2702

2702:                                             ; preds = %2701, %2696
  %2703 = getelementptr inbounds %"class.PP::Function", ptr %58, i64 0, i32 3
  %2704 = load ptr, ptr %2703, align 8, !tbaa !23
  %2705 = getelementptr inbounds %"class.PP::Function", ptr %58, i64 0, i32 3, i32 2
  %2706 = icmp eq ptr %2704, %2705
  br i1 %2706, label %2708, label %2707

2707:                                             ; preds = %2702
  call void @_ZdlPv(ptr noundef %2704) #58
  br label %2708

2708:                                             ; preds = %2707, %2702
  %2709 = load ptr, ptr %58, align 8, !tbaa !23
  %2710 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %58, i64 0, i32 2
  %2711 = icmp eq ptr %2709, %2710
  br i1 %2711, label %2713, label %2712

2712:                                             ; preds = %2708
  call void @_ZdlPv(ptr noundef %2709) #58
  br label %2713

2713:                                             ; preds = %2712, %2708
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %58) #57
  %2714 = getelementptr inbounds %"class.PP::Variable", ptr %52, i64 0, i32 8
  %2715 = load ptr, ptr %2714, align 8, !tbaa !23
  %2716 = getelementptr inbounds %"class.PP::Variable", ptr %52, i64 0, i32 8, i32 2
  %2717 = icmp eq ptr %2715, %2716
  br i1 %2717, label %2719, label %2718

2718:                                             ; preds = %2713
  call void @_ZdlPv(ptr noundef %2715) #58
  br label %2719

2719:                                             ; preds = %2718, %2713
  %2720 = getelementptr inbounds %"class.PP::Variable", ptr %52, i64 0, i32 5
  %2721 = load ptr, ptr %2720, align 8, !tbaa !65
  %2722 = icmp eq ptr %2721, null
  br i1 %2722, label %2724, label %2723

2723:                                             ; preds = %2719
  call void @_ZdlPv(ptr noundef nonnull %2721) #58
  br label %2724

2724:                                             ; preds = %2723, %2719
  %2725 = getelementptr inbounds %"class.PP::Variable", ptr %52, i64 0, i32 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %2725) #59
  %2726 = load ptr, ptr %52, align 8, !tbaa !23
  %2727 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %52, i64 0, i32 2
  %2728 = icmp eq ptr %2726, %2727
  br i1 %2728, label %2730, label %2729

2729:                                             ; preds = %2724
  call void @_ZdlPv(ptr noundef %2726) #58
  br label %2730

2730:                                             ; preds = %2729, %2724
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %52) #57
  call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %50) #59
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %50) #57
  %2731 = getelementptr inbounds %"class.PP::Variable", ptr %44, i64 0, i32 8
  %2732 = load ptr, ptr %2731, align 8, !tbaa !23
  %2733 = getelementptr inbounds %"class.PP::Variable", ptr %44, i64 0, i32 8, i32 2
  %2734 = icmp eq ptr %2732, %2733
  br i1 %2734, label %2736, label %2735

2735:                                             ; preds = %2730
  call void @_ZdlPv(ptr noundef %2732) #58
  br label %2736

2736:                                             ; preds = %2735, %2730
  %2737 = getelementptr inbounds %"class.PP::Variable", ptr %44, i64 0, i32 5
  %2738 = load ptr, ptr %2737, align 8, !tbaa !65
  %2739 = icmp eq ptr %2738, null
  br i1 %2739, label %2741, label %2740

2740:                                             ; preds = %2736
  call void @_ZdlPv(ptr noundef nonnull %2738) #58
  br label %2741

2741:                                             ; preds = %2740, %2736
  %2742 = getelementptr inbounds %"class.PP::Variable", ptr %44, i64 0, i32 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %2742) #59
  %2743 = load ptr, ptr %44, align 8, !tbaa !23
  %2744 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %44, i64 0, i32 2
  %2745 = icmp eq ptr %2743, %2744
  br i1 %2745, label %2747, label %2746

2746:                                             ; preds = %2741
  call void @_ZdlPv(ptr noundef %2743) #58
  br label %2747

2747:                                             ; preds = %2746, %2741
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %44) #57
  call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %42) #59
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %42) #57
  %2748 = getelementptr inbounds %"class.PP::Variable", ptr %36, i64 0, i32 8
  %2749 = load ptr, ptr %2748, align 8, !tbaa !23
  %2750 = getelementptr inbounds %"class.PP::Variable", ptr %36, i64 0, i32 8, i32 2
  %2751 = icmp eq ptr %2749, %2750
  br i1 %2751, label %2753, label %2752

2752:                                             ; preds = %2747
  call void @_ZdlPv(ptr noundef %2749) #58
  br label %2753

2753:                                             ; preds = %2752, %2747
  %2754 = getelementptr inbounds %"class.PP::Variable", ptr %36, i64 0, i32 5
  %2755 = load ptr, ptr %2754, align 8, !tbaa !65
  %2756 = icmp eq ptr %2755, null
  br i1 %2756, label %2758, label %2757

2757:                                             ; preds = %2753
  call void @_ZdlPv(ptr noundef nonnull %2755) #58
  br label %2758

2758:                                             ; preds = %2757, %2753
  %2759 = getelementptr inbounds %"class.PP::Variable", ptr %36, i64 0, i32 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %2759) #59
  %2760 = load ptr, ptr %36, align 8, !tbaa !23
  %2761 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %36, i64 0, i32 2
  %2762 = icmp eq ptr %2760, %2761
  br i1 %2762, label %2764, label %2763

2763:                                             ; preds = %2758
  call void @_ZdlPv(ptr noundef %2760) #58
  br label %2764

2764:                                             ; preds = %2763, %2758
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %36) #57
  call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %34) #59
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %34) #57
  %2765 = getelementptr inbounds %"class.PP::Variable", ptr %28, i64 0, i32 8
  %2766 = load ptr, ptr %2765, align 8, !tbaa !23
  %2767 = getelementptr inbounds %"class.PP::Variable", ptr %28, i64 0, i32 8, i32 2
  %2768 = icmp eq ptr %2766, %2767
  br i1 %2768, label %2770, label %2769

2769:                                             ; preds = %2764
  call void @_ZdlPv(ptr noundef %2766) #58
  br label %2770

2770:                                             ; preds = %2769, %2764
  %2771 = getelementptr inbounds %"class.PP::Variable", ptr %28, i64 0, i32 5
  %2772 = load ptr, ptr %2771, align 8, !tbaa !65
  %2773 = icmp eq ptr %2772, null
  br i1 %2773, label %2775, label %2774

2774:                                             ; preds = %2770
  call void @_ZdlPv(ptr noundef nonnull %2772) #58
  br label %2775

2775:                                             ; preds = %2774, %2770
  %2776 = getelementptr inbounds %"class.PP::Variable", ptr %28, i64 0, i32 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %2776) #59
  %2777 = load ptr, ptr %28, align 8, !tbaa !23
  %2778 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %28, i64 0, i32 2
  %2779 = icmp eq ptr %2777, %2778
  br i1 %2779, label %2781, label %2780

2780:                                             ; preds = %2775
  call void @_ZdlPv(ptr noundef %2777) #58
  br label %2781

2781:                                             ; preds = %2780, %2775
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %28) #57
  call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %26) #59
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %26) #57
  %2782 = getelementptr inbounds %"class.PP::Variable", ptr %20, i64 0, i32 8
  %2783 = load ptr, ptr %2782, align 8, !tbaa !23
  %2784 = getelementptr inbounds %"class.PP::Variable", ptr %20, i64 0, i32 8, i32 2
  %2785 = icmp eq ptr %2783, %2784
  br i1 %2785, label %2787, label %2786

2786:                                             ; preds = %2781
  call void @_ZdlPv(ptr noundef %2783) #58
  br label %2787

2787:                                             ; preds = %2786, %2781
  %2788 = getelementptr inbounds %"class.PP::Variable", ptr %20, i64 0, i32 5
  %2789 = load ptr, ptr %2788, align 8, !tbaa !65
  %2790 = icmp eq ptr %2789, null
  br i1 %2790, label %2792, label %2791

2791:                                             ; preds = %2787
  call void @_ZdlPv(ptr noundef nonnull %2789) #58
  br label %2792

2792:                                             ; preds = %2791, %2787
  %2793 = getelementptr inbounds %"class.PP::Variable", ptr %20, i64 0, i32 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %2793) #59
  %2794 = load ptr, ptr %20, align 8, !tbaa !23
  %2795 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %20, i64 0, i32 2
  %2796 = icmp eq ptr %2794, %2795
  br i1 %2796, label %2798, label %2797

2797:                                             ; preds = %2792
  call void @_ZdlPv(ptr noundef %2794) #58
  br label %2798

2798:                                             ; preds = %2797, %2792
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %20) #57
  call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %18) #59
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %18) #57
  %2799 = getelementptr inbounds %"class.PP::Variable", ptr %12, i64 0, i32 8
  %2800 = load ptr, ptr %2799, align 8, !tbaa !23
  %2801 = getelementptr inbounds %"class.PP::Variable", ptr %12, i64 0, i32 8, i32 2
  %2802 = icmp eq ptr %2800, %2801
  br i1 %2802, label %2804, label %2803

2803:                                             ; preds = %2798
  call void @_ZdlPv(ptr noundef %2800) #58
  br label %2804

2804:                                             ; preds = %2803, %2798
  %2805 = getelementptr inbounds %"class.PP::Variable", ptr %12, i64 0, i32 5
  %2806 = load ptr, ptr %2805, align 8, !tbaa !65
  %2807 = icmp eq ptr %2806, null
  br i1 %2807, label %2809, label %2808

2808:                                             ; preds = %2804
  call void @_ZdlPv(ptr noundef nonnull %2806) #58
  br label %2809

2809:                                             ; preds = %2808, %2804
  %2810 = getelementptr inbounds %"class.PP::Variable", ptr %12, i64 0, i32 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %2810) #59
  %2811 = load ptr, ptr %12, align 8, !tbaa !23
  %2812 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  %2813 = icmp eq ptr %2811, %2812
  br i1 %2813, label %2815, label %2814

2814:                                             ; preds = %2809
  call void @_ZdlPv(ptr noundef %2811) #58
  br label %2815

2815:                                             ; preds = %2814, %2809
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %12) #57
  call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %10) #59
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %10) #57
  %2816 = getelementptr inbounds %"class.PP::Variable", ptr %4, i64 0, i32 8
  %2817 = load ptr, ptr %2816, align 8, !tbaa !23
  %2818 = getelementptr inbounds %"class.PP::Variable", ptr %4, i64 0, i32 8, i32 2
  %2819 = icmp eq ptr %2817, %2818
  br i1 %2819, label %2821, label %2820

2820:                                             ; preds = %2815
  call void @_ZdlPv(ptr noundef %2817) #58
  br label %2821

2821:                                             ; preds = %2820, %2815
  %2822 = getelementptr inbounds %"class.PP::Variable", ptr %4, i64 0, i32 5
  %2823 = load ptr, ptr %2822, align 8, !tbaa !65
  %2824 = icmp eq ptr %2823, null
  br i1 %2824, label %2826, label %2825

2825:                                             ; preds = %2821
  call void @_ZdlPv(ptr noundef nonnull %2823) #58
  br label %2826

2826:                                             ; preds = %2825, %2821
  %2827 = getelementptr inbounds %"class.PP::Variable", ptr %4, i64 0, i32 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %2827) #59
  %2828 = load ptr, ptr %4, align 8, !tbaa !23
  %2829 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %4, i64 0, i32 2
  %2830 = icmp eq ptr %2828, %2829
  br i1 %2830, label %2832, label %2831

2831:                                             ; preds = %2826
  call void @_ZdlPv(ptr noundef %2828) #58
  br label %2832

2832:                                             ; preds = %2831, %2826
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %4) #57
  call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %2) #59
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %2) #57
  ret void

2833:                                             ; preds = %1
  %2834 = landingpad { ptr, i32 }
          cleanup
  %2835 = load ptr, ptr %3, align 8, !tbaa !23
  %2836 = icmp eq ptr %2835, %231
  br i1 %2836, label %4220, label %2837

2837:                                             ; preds = %2833
  call void @_ZdlPv(ptr noundef %2835) #58
  br label %4220

2838:                                             ; preds = %236
  %2839 = landingpad { ptr, i32 }
          cleanup
  br label %4218

2840:                                             ; preds = %238
  %2841 = landingpad { ptr, i32 }
          cleanup
  br label %2854

2842:                                             ; preds = %244
  %2843 = landingpad { ptr, i32 }
          cleanup
  br label %2849

2844:                                             ; preds = %246
  %2845 = landingpad { ptr, i32 }
          cleanup
  %2846 = load ptr, ptr %7, align 8, !tbaa !23
  %2847 = icmp eq ptr %2846, %245
  br i1 %2847, label %2849, label %2848

2848:                                             ; preds = %2844
  call void @_ZdlPv(ptr noundef %2846) #58
  br label %2849

2849:                                             ; preds = %2848, %2844, %2842
  %2850 = phi { ptr, i32 } [ %2843, %2842 ], [ %2845, %2844 ], [ %2845, %2848 ]
  %2851 = load ptr, ptr %6, align 8, !tbaa !23
  %2852 = icmp eq ptr %2851, %239
  br i1 %2852, label %2854, label %2853

2853:                                             ; preds = %2849
  call void @_ZdlPv(ptr noundef %2851) #58
  br label %2854

2854:                                             ; preds = %2853, %2849, %2840
  %2855 = phi { ptr, i32 } [ %2841, %2840 ], [ %2850, %2849 ], [ %2850, %2853 ]
  %2856 = load ptr, ptr %5, align 8, !tbaa !23
  %2857 = icmp eq ptr %2856, %237
  br i1 %2857, label %4218, label %2858

2858:                                             ; preds = %2854
  call void @_ZdlPv(ptr noundef %2856) #58
  br label %4218

2859:                                             ; preds = %259
  %2860 = landingpad { ptr, i32 }
          cleanup
  br label %2870

2861:                                             ; preds = %266
  %2862 = landingpad { ptr, i32 }
          cleanup
  br label %2865

2863:                                             ; preds = %267
  %2864 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev(ptr noundef nonnull align 8 dereferenceable(168) %8) #59
  br label %2865

2865:                                             ; preds = %2863, %2861
  %2866 = phi { ptr, i32 } [ %2864, %2863 ], [ %2862, %2861 ]
  %2867 = load ptr, ptr %9, align 8, !tbaa !23
  %2868 = icmp eq ptr %2867, %261
  br i1 %2868, label %2870, label %2869

2869:                                             ; preds = %2865
  call void @_ZdlPv(ptr noundef %2867) #58
  br label %2870

2870:                                             ; preds = %2869, %2865, %2859
  %2871 = phi { ptr, i32 } [ %2860, %2859 ], [ %2866, %2865 ], [ %2866, %2869 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #57
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %8) #57
  br label %4216

2872:                                             ; preds = %296
  %2873 = landingpad { ptr, i32 }
          cleanup
  br label %4214

2874:                                             ; preds = %298
  %2875 = landingpad { ptr, i32 }
          cleanup
  %2876 = load ptr, ptr %11, align 8, !tbaa !23
  %2877 = icmp eq ptr %2876, %297
  br i1 %2877, label %4214, label %2878

2878:                                             ; preds = %2874
  call void @_ZdlPv(ptr noundef %2876) #58
  br label %4214

2879:                                             ; preds = %303
  %2880 = landingpad { ptr, i32 }
          cleanup
  br label %4212

2881:                                             ; preds = %305
  %2882 = landingpad { ptr, i32 }
          cleanup
  br label %2895

2883:                                             ; preds = %311
  %2884 = landingpad { ptr, i32 }
          cleanup
  br label %2890

2885:                                             ; preds = %313
  %2886 = landingpad { ptr, i32 }
          cleanup
  %2887 = load ptr, ptr %15, align 8, !tbaa !23
  %2888 = icmp eq ptr %2887, %312
  br i1 %2888, label %2890, label %2889

2889:                                             ; preds = %2885
  call void @_ZdlPv(ptr noundef %2887) #58
  br label %2890

2890:                                             ; preds = %2889, %2885, %2883
  %2891 = phi { ptr, i32 } [ %2884, %2883 ], [ %2886, %2885 ], [ %2886, %2889 ]
  %2892 = load ptr, ptr %14, align 8, !tbaa !23
  %2893 = icmp eq ptr %2892, %306
  br i1 %2893, label %2895, label %2894

2894:                                             ; preds = %2890
  call void @_ZdlPv(ptr noundef %2892) #58
  br label %2895

2895:                                             ; preds = %2894, %2890, %2881
  %2896 = phi { ptr, i32 } [ %2882, %2881 ], [ %2891, %2890 ], [ %2891, %2894 ]
  %2897 = load ptr, ptr %13, align 8, !tbaa !23
  %2898 = icmp eq ptr %2897, %304
  br i1 %2898, label %4212, label %2899

2899:                                             ; preds = %2895
  call void @_ZdlPv(ptr noundef %2897) #58
  br label %4212

2900:                                             ; preds = %326
  %2901 = landingpad { ptr, i32 }
          cleanup
  br label %2911

2902:                                             ; preds = %332
  %2903 = landingpad { ptr, i32 }
          cleanup
  br label %2906

2904:                                             ; preds = %333
  %2905 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev(ptr noundef nonnull align 8 dereferenceable(168) %16) #59
  br label %2906

2906:                                             ; preds = %2904, %2902
  %2907 = phi { ptr, i32 } [ %2905, %2904 ], [ %2903, %2902 ]
  %2908 = load ptr, ptr %17, align 8, !tbaa !23
  %2909 = icmp eq ptr %2908, %327
  br i1 %2909, label %2911, label %2910

2910:                                             ; preds = %2906
  call void @_ZdlPv(ptr noundef %2908) #58
  br label %2911

2911:                                             ; preds = %2910, %2906, %2900
  %2912 = phi { ptr, i32 } [ %2901, %2900 ], [ %2907, %2906 ], [ %2907, %2910 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %17) #57
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %16) #57
  br label %4210

2913:                                             ; preds = %362
  %2914 = landingpad { ptr, i32 }
          cleanup
  br label %4208

2915:                                             ; preds = %364
  %2916 = landingpad { ptr, i32 }
          cleanup
  %2917 = load ptr, ptr %19, align 8, !tbaa !23
  %2918 = icmp eq ptr %2917, %363
  br i1 %2918, label %4208, label %2919

2919:                                             ; preds = %2915
  call void @_ZdlPv(ptr noundef %2917) #58
  br label %4208

2920:                                             ; preds = %369
  %2921 = landingpad { ptr, i32 }
          cleanup
  br label %4206

2922:                                             ; preds = %371
  %2923 = landingpad { ptr, i32 }
          cleanup
  br label %2936

2924:                                             ; preds = %377
  %2925 = landingpad { ptr, i32 }
          cleanup
  br label %2931

2926:                                             ; preds = %379
  %2927 = landingpad { ptr, i32 }
          cleanup
  %2928 = load ptr, ptr %23, align 8, !tbaa !23
  %2929 = icmp eq ptr %2928, %378
  br i1 %2929, label %2931, label %2930

2930:                                             ; preds = %2926
  call void @_ZdlPv(ptr noundef %2928) #58
  br label %2931

2931:                                             ; preds = %2930, %2926, %2924
  %2932 = phi { ptr, i32 } [ %2925, %2924 ], [ %2927, %2926 ], [ %2927, %2930 ]
  %2933 = load ptr, ptr %22, align 8, !tbaa !23
  %2934 = icmp eq ptr %2933, %372
  br i1 %2934, label %2936, label %2935

2935:                                             ; preds = %2931
  call void @_ZdlPv(ptr noundef %2933) #58
  br label %2936

2936:                                             ; preds = %2935, %2931, %2922
  %2937 = phi { ptr, i32 } [ %2923, %2922 ], [ %2932, %2931 ], [ %2932, %2935 ]
  %2938 = load ptr, ptr %21, align 8, !tbaa !23
  %2939 = icmp eq ptr %2938, %370
  br i1 %2939, label %4206, label %2940

2940:                                             ; preds = %2936
  call void @_ZdlPv(ptr noundef %2938) #58
  br label %4206

2941:                                             ; preds = %392
  %2942 = landingpad { ptr, i32 }
          cleanup
  br label %2952

2943:                                             ; preds = %398
  %2944 = landingpad { ptr, i32 }
          cleanup
  br label %2947

2945:                                             ; preds = %399
  %2946 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev(ptr noundef nonnull align 8 dereferenceable(168) %24) #59
  br label %2947

2947:                                             ; preds = %2945, %2943
  %2948 = phi { ptr, i32 } [ %2946, %2945 ], [ %2944, %2943 ]
  %2949 = load ptr, ptr %25, align 8, !tbaa !23
  %2950 = icmp eq ptr %2949, %393
  br i1 %2950, label %2952, label %2951

2951:                                             ; preds = %2947
  call void @_ZdlPv(ptr noundef %2949) #58
  br label %2952

2952:                                             ; preds = %2951, %2947, %2941
  %2953 = phi { ptr, i32 } [ %2942, %2941 ], [ %2948, %2947 ], [ %2948, %2951 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %25) #57
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %24) #57
  br label %4204

2954:                                             ; preds = %428
  %2955 = landingpad { ptr, i32 }
          cleanup
  br label %4202

2956:                                             ; preds = %430
  %2957 = landingpad { ptr, i32 }
          cleanup
  %2958 = load ptr, ptr %27, align 8, !tbaa !23
  %2959 = icmp eq ptr %2958, %429
  br i1 %2959, label %4202, label %2960

2960:                                             ; preds = %2956
  call void @_ZdlPv(ptr noundef %2958) #58
  br label %4202

2961:                                             ; preds = %435
  %2962 = landingpad { ptr, i32 }
          cleanup
  br label %4200

2963:                                             ; preds = %437
  %2964 = landingpad { ptr, i32 }
          cleanup
  br label %2977

2965:                                             ; preds = %443
  %2966 = landingpad { ptr, i32 }
          cleanup
  br label %2972

2967:                                             ; preds = %445
  %2968 = landingpad { ptr, i32 }
          cleanup
  %2969 = load ptr, ptr %31, align 8, !tbaa !23
  %2970 = icmp eq ptr %2969, %444
  br i1 %2970, label %2972, label %2971

2971:                                             ; preds = %2967
  call void @_ZdlPv(ptr noundef %2969) #58
  br label %2972

2972:                                             ; preds = %2971, %2967, %2965
  %2973 = phi { ptr, i32 } [ %2966, %2965 ], [ %2968, %2967 ], [ %2968, %2971 ]
  %2974 = load ptr, ptr %30, align 8, !tbaa !23
  %2975 = icmp eq ptr %2974, %438
  br i1 %2975, label %2977, label %2976

2976:                                             ; preds = %2972
  call void @_ZdlPv(ptr noundef %2974) #58
  br label %2977

2977:                                             ; preds = %2976, %2972, %2963
  %2978 = phi { ptr, i32 } [ %2964, %2963 ], [ %2973, %2972 ], [ %2973, %2976 ]
  %2979 = load ptr, ptr %29, align 8, !tbaa !23
  %2980 = icmp eq ptr %2979, %436
  br i1 %2980, label %4200, label %2981

2981:                                             ; preds = %2977
  call void @_ZdlPv(ptr noundef %2979) #58
  br label %4200

2982:                                             ; preds = %458
  %2983 = landingpad { ptr, i32 }
          cleanup
  br label %2993

2984:                                             ; preds = %464
  %2985 = landingpad { ptr, i32 }
          cleanup
  br label %2988

2986:                                             ; preds = %465
  %2987 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev(ptr noundef nonnull align 8 dereferenceable(168) %32) #59
  br label %2988

2988:                                             ; preds = %2986, %2984
  %2989 = phi { ptr, i32 } [ %2987, %2986 ], [ %2985, %2984 ]
  %2990 = load ptr, ptr %33, align 8, !tbaa !23
  %2991 = icmp eq ptr %2990, %459
  br i1 %2991, label %2993, label %2992

2992:                                             ; preds = %2988
  call void @_ZdlPv(ptr noundef %2990) #58
  br label %2993

2993:                                             ; preds = %2992, %2988, %2982
  %2994 = phi { ptr, i32 } [ %2983, %2982 ], [ %2989, %2988 ], [ %2989, %2992 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %33) #57
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %32) #57
  br label %4198

2995:                                             ; preds = %494
  %2996 = landingpad { ptr, i32 }
          cleanup
  br label %4196

2997:                                             ; preds = %496
  %2998 = landingpad { ptr, i32 }
          cleanup
  %2999 = load ptr, ptr %35, align 8, !tbaa !23
  %3000 = icmp eq ptr %2999, %495
  br i1 %3000, label %4196, label %3001

3001:                                             ; preds = %2997
  call void @_ZdlPv(ptr noundef %2999) #58
  br label %4196

3002:                                             ; preds = %501
  %3003 = landingpad { ptr, i32 }
          cleanup
  br label %4194

3004:                                             ; preds = %503
  %3005 = landingpad { ptr, i32 }
          cleanup
  br label %3018

3006:                                             ; preds = %509
  %3007 = landingpad { ptr, i32 }
          cleanup
  br label %3013

3008:                                             ; preds = %511
  %3009 = landingpad { ptr, i32 }
          cleanup
  %3010 = load ptr, ptr %39, align 8, !tbaa !23
  %3011 = icmp eq ptr %3010, %510
  br i1 %3011, label %3013, label %3012

3012:                                             ; preds = %3008
  call void @_ZdlPv(ptr noundef %3010) #58
  br label %3013

3013:                                             ; preds = %3012, %3008, %3006
  %3014 = phi { ptr, i32 } [ %3007, %3006 ], [ %3009, %3008 ], [ %3009, %3012 ]
  %3015 = load ptr, ptr %38, align 8, !tbaa !23
  %3016 = icmp eq ptr %3015, %504
  br i1 %3016, label %3018, label %3017

3017:                                             ; preds = %3013
  call void @_ZdlPv(ptr noundef %3015) #58
  br label %3018

3018:                                             ; preds = %3017, %3013, %3004
  %3019 = phi { ptr, i32 } [ %3005, %3004 ], [ %3014, %3013 ], [ %3014, %3017 ]
  %3020 = load ptr, ptr %37, align 8, !tbaa !23
  %3021 = icmp eq ptr %3020, %502
  br i1 %3021, label %4194, label %3022

3022:                                             ; preds = %3018
  call void @_ZdlPv(ptr noundef %3020) #58
  br label %4194

3023:                                             ; preds = %524
  %3024 = landingpad { ptr, i32 }
          cleanup
  br label %3034

3025:                                             ; preds = %530
  %3026 = landingpad { ptr, i32 }
          cleanup
  br label %3029

3027:                                             ; preds = %531
  %3028 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev(ptr noundef nonnull align 8 dereferenceable(168) %40) #59
  br label %3029

3029:                                             ; preds = %3027, %3025
  %3030 = phi { ptr, i32 } [ %3028, %3027 ], [ %3026, %3025 ]
  %3031 = load ptr, ptr %41, align 8, !tbaa !23
  %3032 = icmp eq ptr %3031, %525
  br i1 %3032, label %3034, label %3033

3033:                                             ; preds = %3029
  call void @_ZdlPv(ptr noundef %3031) #58
  br label %3034

3034:                                             ; preds = %3033, %3029, %3023
  %3035 = phi { ptr, i32 } [ %3024, %3023 ], [ %3030, %3029 ], [ %3030, %3033 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %41) #57
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %40) #57
  br label %4192

3036:                                             ; preds = %560
  %3037 = landingpad { ptr, i32 }
          cleanup
  br label %4190

3038:                                             ; preds = %562
  %3039 = landingpad { ptr, i32 }
          cleanup
  %3040 = load ptr, ptr %43, align 8, !tbaa !23
  %3041 = icmp eq ptr %3040, %561
  br i1 %3041, label %4190, label %3042

3042:                                             ; preds = %3038
  call void @_ZdlPv(ptr noundef %3040) #58
  br label %4190

3043:                                             ; preds = %567
  %3044 = landingpad { ptr, i32 }
          cleanup
  br label %4188

3045:                                             ; preds = %569
  %3046 = landingpad { ptr, i32 }
          cleanup
  br label %3059

3047:                                             ; preds = %575
  %3048 = landingpad { ptr, i32 }
          cleanup
  br label %3054

3049:                                             ; preds = %577
  %3050 = landingpad { ptr, i32 }
          cleanup
  %3051 = load ptr, ptr %47, align 8, !tbaa !23
  %3052 = icmp eq ptr %3051, %576
  br i1 %3052, label %3054, label %3053

3053:                                             ; preds = %3049
  call void @_ZdlPv(ptr noundef %3051) #58
  br label %3054

3054:                                             ; preds = %3053, %3049, %3047
  %3055 = phi { ptr, i32 } [ %3048, %3047 ], [ %3050, %3049 ], [ %3050, %3053 ]
  %3056 = load ptr, ptr %46, align 8, !tbaa !23
  %3057 = icmp eq ptr %3056, %570
  br i1 %3057, label %3059, label %3058

3058:                                             ; preds = %3054
  call void @_ZdlPv(ptr noundef %3056) #58
  br label %3059

3059:                                             ; preds = %3058, %3054, %3045
  %3060 = phi { ptr, i32 } [ %3046, %3045 ], [ %3055, %3054 ], [ %3055, %3058 ]
  %3061 = load ptr, ptr %45, align 8, !tbaa !23
  %3062 = icmp eq ptr %3061, %568
  br i1 %3062, label %4188, label %3063

3063:                                             ; preds = %3059
  call void @_ZdlPv(ptr noundef %3061) #58
  br label %4188

3064:                                             ; preds = %590
  %3065 = landingpad { ptr, i32 }
          cleanup
  br label %3075

3066:                                             ; preds = %596
  %3067 = landingpad { ptr, i32 }
          cleanup
  br label %3070

3068:                                             ; preds = %597
  %3069 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev(ptr noundef nonnull align 8 dereferenceable(168) %48) #59
  br label %3070

3070:                                             ; preds = %3068, %3066
  %3071 = phi { ptr, i32 } [ %3069, %3068 ], [ %3067, %3066 ]
  %3072 = load ptr, ptr %49, align 8, !tbaa !23
  %3073 = icmp eq ptr %3072, %591
  br i1 %3073, label %3075, label %3074

3074:                                             ; preds = %3070
  call void @_ZdlPv(ptr noundef %3072) #58
  br label %3075

3075:                                             ; preds = %3074, %3070, %3064
  %3076 = phi { ptr, i32 } [ %3065, %3064 ], [ %3071, %3070 ], [ %3071, %3074 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %49) #57
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %48) #57
  br label %4186

3077:                                             ; preds = %626
  %3078 = landingpad { ptr, i32 }
          cleanup
  br label %4184

3079:                                             ; preds = %632
  %3080 = landingpad { ptr, i32 }
          cleanup
  %3081 = load ptr, ptr %51, align 8, !tbaa !23
  %3082 = icmp eq ptr %3081, %631
  br i1 %3082, label %4184, label %3083

3083:                                             ; preds = %3079
  call void @_ZdlPv(ptr noundef %3081) #58
  br label %4184

3084:                                             ; preds = %637
  %3085 = landingpad { ptr, i32 }
          cleanup
  br label %4182

3086:                                             ; preds = %639
  %3087 = landingpad { ptr, i32 }
          cleanup
  br label %3100

3088:                                             ; preds = %645
  %3089 = landingpad { ptr, i32 }
          cleanup
  br label %3095

3090:                                             ; preds = %647
  %3091 = landingpad { ptr, i32 }
          cleanup
  %3092 = load ptr, ptr %55, align 8, !tbaa !23
  %3093 = icmp eq ptr %3092, %646
  br i1 %3093, label %3095, label %3094

3094:                                             ; preds = %3090
  call void @_ZdlPv(ptr noundef %3092) #58
  br label %3095

3095:                                             ; preds = %3094, %3090, %3088
  %3096 = phi { ptr, i32 } [ %3089, %3088 ], [ %3091, %3090 ], [ %3091, %3094 ]
  %3097 = load ptr, ptr %54, align 8, !tbaa !23
  %3098 = icmp eq ptr %3097, %640
  br i1 %3098, label %3100, label %3099

3099:                                             ; preds = %3095
  call void @_ZdlPv(ptr noundef %3097) #58
  br label %3100

3100:                                             ; preds = %3099, %3095, %3086
  %3101 = phi { ptr, i32 } [ %3087, %3086 ], [ %3096, %3095 ], [ %3096, %3099 ]
  %3102 = load ptr, ptr %53, align 8, !tbaa !23
  %3103 = icmp eq ptr %3102, %638
  br i1 %3103, label %4182, label %3104

3104:                                             ; preds = %3100
  call void @_ZdlPv(ptr noundef %3102) #58
  br label %4182

3105:                                             ; preds = %660
  %3106 = landingpad { ptr, i32 }
          cleanup
  br label %3116

3107:                                             ; preds = %666
  %3108 = landingpad { ptr, i32 }
          cleanup
  br label %3111

3109:                                             ; preds = %667
  %3110 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev(ptr noundef nonnull align 8 dereferenceable(168) %56) #59
  br label %3111

3111:                                             ; preds = %3109, %3107
  %3112 = phi { ptr, i32 } [ %3110, %3109 ], [ %3108, %3107 ]
  %3113 = load ptr, ptr %57, align 8, !tbaa !23
  %3114 = icmp eq ptr %3113, %661
  br i1 %3114, label %3116, label %3115

3115:                                             ; preds = %3111
  call void @_ZdlPv(ptr noundef %3113) #58
  br label %3116

3116:                                             ; preds = %3115, %3111, %3105
  %3117 = phi { ptr, i32 } [ %3106, %3105 ], [ %3112, %3111 ], [ %3112, %3115 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %57) #57
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %56) #57
  br label %4180

3118:                                             ; preds = %696
  %3119 = landingpad { ptr, i32 }
          cleanup
  br label %4178

3120:                                             ; preds = %698
  %3121 = landingpad { ptr, i32 }
          cleanup
  br label %3134

3122:                                             ; preds = %700
  %3123 = landingpad { ptr, i32 }
          cleanup
  br label %3129

3124:                                             ; preds = %702
  %3125 = landingpad { ptr, i32 }
          cleanup
  %3126 = load ptr, ptr %61, align 8, !tbaa !23
  %3127 = icmp eq ptr %3126, %701
  br i1 %3127, label %3129, label %3128

3128:                                             ; preds = %3124
  call void @_ZdlPv(ptr noundef %3126) #58
  br label %3129

3129:                                             ; preds = %3128, %3124, %3122
  %3130 = phi { ptr, i32 } [ %3123, %3122 ], [ %3125, %3124 ], [ %3125, %3128 ]
  %3131 = load ptr, ptr %60, align 8, !tbaa !23
  %3132 = icmp eq ptr %3131, %699
  br i1 %3132, label %3134, label %3133

3133:                                             ; preds = %3129
  call void @_ZdlPv(ptr noundef %3131) #58
  br label %3134

3134:                                             ; preds = %3133, %3129, %3120
  %3135 = phi { ptr, i32 } [ %3121, %3120 ], [ %3130, %3129 ], [ %3130, %3133 ]
  %3136 = load ptr, ptr %59, align 8, !tbaa !23
  %3137 = icmp eq ptr %3136, %697
  br i1 %3137, label %4178, label %3138

3138:                                             ; preds = %3134
  call void @_ZdlPv(ptr noundef %3136) #58
  br label %4178

3139:                                             ; preds = %715
  %3140 = landingpad { ptr, i32 }
          cleanup
  br label %3150

3141:                                             ; preds = %722
  %3142 = landingpad { ptr, i32 }
          cleanup
  br label %3145

3143:                                             ; preds = %723
  %3144 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %62) #59
  br label %3145

3145:                                             ; preds = %3143, %3141
  %3146 = phi { ptr, i32 } [ %3144, %3143 ], [ %3142, %3141 ]
  %3147 = load ptr, ptr %63, align 8, !tbaa !23
  %3148 = icmp eq ptr %3147, %717
  br i1 %3148, label %3150, label %3149

3149:                                             ; preds = %3145
  call void @_ZdlPv(ptr noundef %3147) #58
  br label %3150

3150:                                             ; preds = %3149, %3145, %3139
  %3151 = phi { ptr, i32 } [ %3140, %3139 ], [ %3146, %3145 ], [ %3146, %3149 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %63) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %62) #57
  br label %4176

3152:                                             ; preds = %752
  %3153 = landingpad { ptr, i32 }
          cleanup
  br label %4174

3154:                                             ; preds = %754
  %3155 = landingpad { ptr, i32 }
          cleanup
  br label %3168

3156:                                             ; preds = %756
  %3157 = landingpad { ptr, i32 }
          cleanup
  br label %3163

3158:                                             ; preds = %758
  %3159 = landingpad { ptr, i32 }
          cleanup
  %3160 = load ptr, ptr %67, align 8, !tbaa !23
  %3161 = icmp eq ptr %3160, %757
  br i1 %3161, label %3163, label %3162

3162:                                             ; preds = %3158
  call void @_ZdlPv(ptr noundef %3160) #58
  br label %3163

3163:                                             ; preds = %3162, %3158, %3156
  %3164 = phi { ptr, i32 } [ %3157, %3156 ], [ %3159, %3158 ], [ %3159, %3162 ]
  %3165 = load ptr, ptr %66, align 8, !tbaa !23
  %3166 = icmp eq ptr %3165, %755
  br i1 %3166, label %3168, label %3167

3167:                                             ; preds = %3163
  call void @_ZdlPv(ptr noundef %3165) #58
  br label %3168

3168:                                             ; preds = %3167, %3163, %3154
  %3169 = phi { ptr, i32 } [ %3155, %3154 ], [ %3164, %3163 ], [ %3164, %3167 ]
  %3170 = load ptr, ptr %65, align 8, !tbaa !23
  %3171 = icmp eq ptr %3170, %753
  br i1 %3171, label %4174, label %3172

3172:                                             ; preds = %3168
  call void @_ZdlPv(ptr noundef %3170) #58
  br label %4174

3173:                                             ; preds = %771
  %3174 = landingpad { ptr, i32 }
          cleanup
  br label %3184

3175:                                             ; preds = %777
  %3176 = landingpad { ptr, i32 }
          cleanup
  br label %3179

3177:                                             ; preds = %778
  %3178 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %68) #59
  br label %3179

3179:                                             ; preds = %3177, %3175
  %3180 = phi { ptr, i32 } [ %3178, %3177 ], [ %3176, %3175 ]
  %3181 = load ptr, ptr %69, align 8, !tbaa !23
  %3182 = icmp eq ptr %3181, %772
  br i1 %3182, label %3184, label %3183

3183:                                             ; preds = %3179
  call void @_ZdlPv(ptr noundef %3181) #58
  br label %3184

3184:                                             ; preds = %3183, %3179, %3173
  %3185 = phi { ptr, i32 } [ %3174, %3173 ], [ %3180, %3179 ], [ %3180, %3183 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %69) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %68) #57
  br label %4172

3186:                                             ; preds = %807
  %3187 = landingpad { ptr, i32 }
          cleanup
  br label %4170

3188:                                             ; preds = %809
  %3189 = landingpad { ptr, i32 }
          cleanup
  br label %3202

3190:                                             ; preds = %811
  %3191 = landingpad { ptr, i32 }
          cleanup
  br label %3197

3192:                                             ; preds = %813
  %3193 = landingpad { ptr, i32 }
          cleanup
  %3194 = load ptr, ptr %73, align 8, !tbaa !23
  %3195 = icmp eq ptr %3194, %812
  br i1 %3195, label %3197, label %3196

3196:                                             ; preds = %3192
  call void @_ZdlPv(ptr noundef %3194) #58
  br label %3197

3197:                                             ; preds = %3196, %3192, %3190
  %3198 = phi { ptr, i32 } [ %3191, %3190 ], [ %3193, %3192 ], [ %3193, %3196 ]
  %3199 = load ptr, ptr %72, align 8, !tbaa !23
  %3200 = icmp eq ptr %3199, %810
  br i1 %3200, label %3202, label %3201

3201:                                             ; preds = %3197
  call void @_ZdlPv(ptr noundef %3199) #58
  br label %3202

3202:                                             ; preds = %3201, %3197, %3188
  %3203 = phi { ptr, i32 } [ %3189, %3188 ], [ %3198, %3197 ], [ %3198, %3201 ]
  %3204 = load ptr, ptr %71, align 8, !tbaa !23
  %3205 = icmp eq ptr %3204, %808
  br i1 %3205, label %4170, label %3206

3206:                                             ; preds = %3202
  call void @_ZdlPv(ptr noundef %3204) #58
  br label %4170

3207:                                             ; preds = %826
  %3208 = landingpad { ptr, i32 }
          cleanup
  br label %3218

3209:                                             ; preds = %832
  %3210 = landingpad { ptr, i32 }
          cleanup
  br label %3213

3211:                                             ; preds = %833
  %3212 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %74) #59
  br label %3213

3213:                                             ; preds = %3211, %3209
  %3214 = phi { ptr, i32 } [ %3212, %3211 ], [ %3210, %3209 ]
  %3215 = load ptr, ptr %75, align 8, !tbaa !23
  %3216 = icmp eq ptr %3215, %827
  br i1 %3216, label %3218, label %3217

3217:                                             ; preds = %3213
  call void @_ZdlPv(ptr noundef %3215) #58
  br label %3218

3218:                                             ; preds = %3217, %3213, %3207
  %3219 = phi { ptr, i32 } [ %3208, %3207 ], [ %3214, %3213 ], [ %3214, %3217 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %75) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %74) #57
  br label %4168

3220:                                             ; preds = %862
  %3221 = landingpad { ptr, i32 }
          cleanup
  br label %4166

3222:                                             ; preds = %864
  %3223 = landingpad { ptr, i32 }
          cleanup
  br label %3236

3224:                                             ; preds = %866
  %3225 = landingpad { ptr, i32 }
          cleanup
  br label %3231

3226:                                             ; preds = %868
  %3227 = landingpad { ptr, i32 }
          cleanup
  %3228 = load ptr, ptr %79, align 8, !tbaa !23
  %3229 = icmp eq ptr %3228, %867
  br i1 %3229, label %3231, label %3230

3230:                                             ; preds = %3226
  call void @_ZdlPv(ptr noundef %3228) #58
  br label %3231

3231:                                             ; preds = %3230, %3226, %3224
  %3232 = phi { ptr, i32 } [ %3225, %3224 ], [ %3227, %3226 ], [ %3227, %3230 ]
  %3233 = load ptr, ptr %78, align 8, !tbaa !23
  %3234 = icmp eq ptr %3233, %865
  br i1 %3234, label %3236, label %3235

3235:                                             ; preds = %3231
  call void @_ZdlPv(ptr noundef %3233) #58
  br label %3236

3236:                                             ; preds = %3235, %3231, %3222
  %3237 = phi { ptr, i32 } [ %3223, %3222 ], [ %3232, %3231 ], [ %3232, %3235 ]
  %3238 = load ptr, ptr %77, align 8, !tbaa !23
  %3239 = icmp eq ptr %3238, %863
  br i1 %3239, label %4166, label %3240

3240:                                             ; preds = %3236
  call void @_ZdlPv(ptr noundef %3238) #58
  br label %4166

3241:                                             ; preds = %881
  %3242 = landingpad { ptr, i32 }
          cleanup
  br label %3252

3243:                                             ; preds = %887
  %3244 = landingpad { ptr, i32 }
          cleanup
  br label %3247

3245:                                             ; preds = %888
  %3246 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %80) #59
  br label %3247

3247:                                             ; preds = %3245, %3243
  %3248 = phi { ptr, i32 } [ %3246, %3245 ], [ %3244, %3243 ]
  %3249 = load ptr, ptr %81, align 8, !tbaa !23
  %3250 = icmp eq ptr %3249, %882
  br i1 %3250, label %3252, label %3251

3251:                                             ; preds = %3247
  call void @_ZdlPv(ptr noundef %3249) #58
  br label %3252

3252:                                             ; preds = %3251, %3247, %3241
  %3253 = phi { ptr, i32 } [ %3242, %3241 ], [ %3248, %3247 ], [ %3248, %3251 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %81) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %80) #57
  br label %4164

3254:                                             ; preds = %917
  %3255 = landingpad { ptr, i32 }
          cleanup
  br label %4162

3256:                                             ; preds = %919
  %3257 = landingpad { ptr, i32 }
          cleanup
  br label %3270

3258:                                             ; preds = %921
  %3259 = landingpad { ptr, i32 }
          cleanup
  br label %3265

3260:                                             ; preds = %923
  %3261 = landingpad { ptr, i32 }
          cleanup
  %3262 = load ptr, ptr %85, align 8, !tbaa !23
  %3263 = icmp eq ptr %3262, %922
  br i1 %3263, label %3265, label %3264

3264:                                             ; preds = %3260
  call void @_ZdlPv(ptr noundef %3262) #58
  br label %3265

3265:                                             ; preds = %3264, %3260, %3258
  %3266 = phi { ptr, i32 } [ %3259, %3258 ], [ %3261, %3260 ], [ %3261, %3264 ]
  %3267 = load ptr, ptr %84, align 8, !tbaa !23
  %3268 = icmp eq ptr %3267, %920
  br i1 %3268, label %3270, label %3269

3269:                                             ; preds = %3265
  call void @_ZdlPv(ptr noundef %3267) #58
  br label %3270

3270:                                             ; preds = %3269, %3265, %3256
  %3271 = phi { ptr, i32 } [ %3257, %3256 ], [ %3266, %3265 ], [ %3266, %3269 ]
  %3272 = load ptr, ptr %83, align 8, !tbaa !23
  %3273 = icmp eq ptr %3272, %918
  br i1 %3273, label %4162, label %3274

3274:                                             ; preds = %3270
  call void @_ZdlPv(ptr noundef %3272) #58
  br label %4162

3275:                                             ; preds = %936
  %3276 = landingpad { ptr, i32 }
          cleanup
  br label %3286

3277:                                             ; preds = %942
  %3278 = landingpad { ptr, i32 }
          cleanup
  br label %3281

3279:                                             ; preds = %943
  %3280 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %86) #59
  br label %3281

3281:                                             ; preds = %3279, %3277
  %3282 = phi { ptr, i32 } [ %3280, %3279 ], [ %3278, %3277 ]
  %3283 = load ptr, ptr %87, align 8, !tbaa !23
  %3284 = icmp eq ptr %3283, %937
  br i1 %3284, label %3286, label %3285

3285:                                             ; preds = %3281
  call void @_ZdlPv(ptr noundef %3283) #58
  br label %3286

3286:                                             ; preds = %3285, %3281, %3275
  %3287 = phi { ptr, i32 } [ %3276, %3275 ], [ %3282, %3281 ], [ %3282, %3285 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %87) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %86) #57
  br label %4160

3288:                                             ; preds = %972
  %3289 = landingpad { ptr, i32 }
          cleanup
  br label %4158

3290:                                             ; preds = %974
  %3291 = landingpad { ptr, i32 }
          cleanup
  br label %3304

3292:                                             ; preds = %976
  %3293 = landingpad { ptr, i32 }
          cleanup
  br label %3299

3294:                                             ; preds = %978
  %3295 = landingpad { ptr, i32 }
          cleanup
  %3296 = load ptr, ptr %91, align 8, !tbaa !23
  %3297 = icmp eq ptr %3296, %977
  br i1 %3297, label %3299, label %3298

3298:                                             ; preds = %3294
  call void @_ZdlPv(ptr noundef %3296) #58
  br label %3299

3299:                                             ; preds = %3298, %3294, %3292
  %3300 = phi { ptr, i32 } [ %3293, %3292 ], [ %3295, %3294 ], [ %3295, %3298 ]
  %3301 = load ptr, ptr %90, align 8, !tbaa !23
  %3302 = icmp eq ptr %3301, %975
  br i1 %3302, label %3304, label %3303

3303:                                             ; preds = %3299
  call void @_ZdlPv(ptr noundef %3301) #58
  br label %3304

3304:                                             ; preds = %3303, %3299, %3290
  %3305 = phi { ptr, i32 } [ %3291, %3290 ], [ %3300, %3299 ], [ %3300, %3303 ]
  %3306 = load ptr, ptr %89, align 8, !tbaa !23
  %3307 = icmp eq ptr %3306, %973
  br i1 %3307, label %4158, label %3308

3308:                                             ; preds = %3304
  call void @_ZdlPv(ptr noundef %3306) #58
  br label %4158

3309:                                             ; preds = %991
  %3310 = landingpad { ptr, i32 }
          cleanup
  br label %3320

3311:                                             ; preds = %997
  %3312 = landingpad { ptr, i32 }
          cleanup
  br label %3315

3313:                                             ; preds = %998
  %3314 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %92) #59
  br label %3315

3315:                                             ; preds = %3313, %3311
  %3316 = phi { ptr, i32 } [ %3314, %3313 ], [ %3312, %3311 ]
  %3317 = load ptr, ptr %93, align 8, !tbaa !23
  %3318 = icmp eq ptr %3317, %992
  br i1 %3318, label %3320, label %3319

3319:                                             ; preds = %3315
  call void @_ZdlPv(ptr noundef %3317) #58
  br label %3320

3320:                                             ; preds = %3319, %3315, %3309
  %3321 = phi { ptr, i32 } [ %3310, %3309 ], [ %3316, %3315 ], [ %3316, %3319 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %93) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %92) #57
  br label %4156

3322:                                             ; preds = %1027
  %3323 = landingpad { ptr, i32 }
          cleanup
  br label %4154

3324:                                             ; preds = %1029
  %3325 = landingpad { ptr, i32 }
          cleanup
  br label %3338

3326:                                             ; preds = %1031
  %3327 = landingpad { ptr, i32 }
          cleanup
  br label %3333

3328:                                             ; preds = %1033
  %3329 = landingpad { ptr, i32 }
          cleanup
  %3330 = load ptr, ptr %97, align 8, !tbaa !23
  %3331 = icmp eq ptr %3330, %1032
  br i1 %3331, label %3333, label %3332

3332:                                             ; preds = %3328
  call void @_ZdlPv(ptr noundef %3330) #58
  br label %3333

3333:                                             ; preds = %3332, %3328, %3326
  %3334 = phi { ptr, i32 } [ %3327, %3326 ], [ %3329, %3328 ], [ %3329, %3332 ]
  %3335 = load ptr, ptr %96, align 8, !tbaa !23
  %3336 = icmp eq ptr %3335, %1030
  br i1 %3336, label %3338, label %3337

3337:                                             ; preds = %3333
  call void @_ZdlPv(ptr noundef %3335) #58
  br label %3338

3338:                                             ; preds = %3337, %3333, %3324
  %3339 = phi { ptr, i32 } [ %3325, %3324 ], [ %3334, %3333 ], [ %3334, %3337 ]
  %3340 = load ptr, ptr %95, align 8, !tbaa !23
  %3341 = icmp eq ptr %3340, %1028
  br i1 %3341, label %4154, label %3342

3342:                                             ; preds = %3338
  call void @_ZdlPv(ptr noundef %3340) #58
  br label %4154

3343:                                             ; preds = %1046
  %3344 = landingpad { ptr, i32 }
          cleanup
  br label %3354

3345:                                             ; preds = %1052
  %3346 = landingpad { ptr, i32 }
          cleanup
  br label %3349

3347:                                             ; preds = %1053
  %3348 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %98) #59
  br label %3349

3349:                                             ; preds = %3347, %3345
  %3350 = phi { ptr, i32 } [ %3348, %3347 ], [ %3346, %3345 ]
  %3351 = load ptr, ptr %99, align 8, !tbaa !23
  %3352 = icmp eq ptr %3351, %1047
  br i1 %3352, label %3354, label %3353

3353:                                             ; preds = %3349
  call void @_ZdlPv(ptr noundef %3351) #58
  br label %3354

3354:                                             ; preds = %3353, %3349, %3343
  %3355 = phi { ptr, i32 } [ %3344, %3343 ], [ %3350, %3349 ], [ %3350, %3353 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %99) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %98) #57
  br label %4152

3356:                                             ; preds = %1082
  %3357 = landingpad { ptr, i32 }
          cleanup
  br label %4150

3358:                                             ; preds = %1084
  %3359 = landingpad { ptr, i32 }
          cleanup
  br label %3372

3360:                                             ; preds = %1086
  %3361 = landingpad { ptr, i32 }
          cleanup
  br label %3367

3362:                                             ; preds = %1088
  %3363 = landingpad { ptr, i32 }
          cleanup
  %3364 = load ptr, ptr %103, align 8, !tbaa !23
  %3365 = icmp eq ptr %3364, %1087
  br i1 %3365, label %3367, label %3366

3366:                                             ; preds = %3362
  call void @_ZdlPv(ptr noundef %3364) #58
  br label %3367

3367:                                             ; preds = %3366, %3362, %3360
  %3368 = phi { ptr, i32 } [ %3361, %3360 ], [ %3363, %3362 ], [ %3363, %3366 ]
  %3369 = load ptr, ptr %102, align 8, !tbaa !23
  %3370 = icmp eq ptr %3369, %1085
  br i1 %3370, label %3372, label %3371

3371:                                             ; preds = %3367
  call void @_ZdlPv(ptr noundef %3369) #58
  br label %3372

3372:                                             ; preds = %3371, %3367, %3358
  %3373 = phi { ptr, i32 } [ %3359, %3358 ], [ %3368, %3367 ], [ %3368, %3371 ]
  %3374 = load ptr, ptr %101, align 8, !tbaa !23
  %3375 = icmp eq ptr %3374, %1083
  br i1 %3375, label %4150, label %3376

3376:                                             ; preds = %3372
  call void @_ZdlPv(ptr noundef %3374) #58
  br label %4150

3377:                                             ; preds = %1101
  %3378 = landingpad { ptr, i32 }
          cleanup
  br label %3388

3379:                                             ; preds = %1107
  %3380 = landingpad { ptr, i32 }
          cleanup
  br label %3383

3381:                                             ; preds = %1108
  %3382 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %104) #59
  br label %3383

3383:                                             ; preds = %3381, %3379
  %3384 = phi { ptr, i32 } [ %3382, %3381 ], [ %3380, %3379 ]
  %3385 = load ptr, ptr %105, align 8, !tbaa !23
  %3386 = icmp eq ptr %3385, %1102
  br i1 %3386, label %3388, label %3387

3387:                                             ; preds = %3383
  call void @_ZdlPv(ptr noundef %3385) #58
  br label %3388

3388:                                             ; preds = %3387, %3383, %3377
  %3389 = phi { ptr, i32 } [ %3378, %3377 ], [ %3384, %3383 ], [ %3384, %3387 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %105) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %104) #57
  br label %4148

3390:                                             ; preds = %1137
  %3391 = landingpad { ptr, i32 }
          cleanup
  br label %4146

3392:                                             ; preds = %1139
  %3393 = landingpad { ptr, i32 }
          cleanup
  br label %3406

3394:                                             ; preds = %1141
  %3395 = landingpad { ptr, i32 }
          cleanup
  br label %3401

3396:                                             ; preds = %1143
  %3397 = landingpad { ptr, i32 }
          cleanup
  %3398 = load ptr, ptr %109, align 8, !tbaa !23
  %3399 = icmp eq ptr %3398, %1142
  br i1 %3399, label %3401, label %3400

3400:                                             ; preds = %3396
  call void @_ZdlPv(ptr noundef %3398) #58
  br label %3401

3401:                                             ; preds = %3400, %3396, %3394
  %3402 = phi { ptr, i32 } [ %3395, %3394 ], [ %3397, %3396 ], [ %3397, %3400 ]
  %3403 = load ptr, ptr %108, align 8, !tbaa !23
  %3404 = icmp eq ptr %3403, %1140
  br i1 %3404, label %3406, label %3405

3405:                                             ; preds = %3401
  call void @_ZdlPv(ptr noundef %3403) #58
  br label %3406

3406:                                             ; preds = %3405, %3401, %3392
  %3407 = phi { ptr, i32 } [ %3393, %3392 ], [ %3402, %3401 ], [ %3402, %3405 ]
  %3408 = load ptr, ptr %107, align 8, !tbaa !23
  %3409 = icmp eq ptr %3408, %1138
  br i1 %3409, label %4146, label %3410

3410:                                             ; preds = %3406
  call void @_ZdlPv(ptr noundef %3408) #58
  br label %4146

3411:                                             ; preds = %1156
  %3412 = landingpad { ptr, i32 }
          cleanup
  br label %3422

3413:                                             ; preds = %1162
  %3414 = landingpad { ptr, i32 }
          cleanup
  br label %3417

3415:                                             ; preds = %1163
  %3416 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %110) #59
  br label %3417

3417:                                             ; preds = %3415, %3413
  %3418 = phi { ptr, i32 } [ %3416, %3415 ], [ %3414, %3413 ]
  %3419 = load ptr, ptr %111, align 8, !tbaa !23
  %3420 = icmp eq ptr %3419, %1157
  br i1 %3420, label %3422, label %3421

3421:                                             ; preds = %3417
  call void @_ZdlPv(ptr noundef %3419) #58
  br label %3422

3422:                                             ; preds = %3421, %3417, %3411
  %3423 = phi { ptr, i32 } [ %3412, %3411 ], [ %3418, %3417 ], [ %3418, %3421 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %111) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %110) #57
  br label %4144

3424:                                             ; preds = %1192
  %3425 = landingpad { ptr, i32 }
          cleanup
  br label %4142

3426:                                             ; preds = %1194
  %3427 = landingpad { ptr, i32 }
          cleanup
  br label %3440

3428:                                             ; preds = %1196
  %3429 = landingpad { ptr, i32 }
          cleanup
  br label %3435

3430:                                             ; preds = %1198
  %3431 = landingpad { ptr, i32 }
          cleanup
  %3432 = load ptr, ptr %115, align 8, !tbaa !23
  %3433 = icmp eq ptr %3432, %1197
  br i1 %3433, label %3435, label %3434

3434:                                             ; preds = %3430
  call void @_ZdlPv(ptr noundef %3432) #58
  br label %3435

3435:                                             ; preds = %3434, %3430, %3428
  %3436 = phi { ptr, i32 } [ %3429, %3428 ], [ %3431, %3430 ], [ %3431, %3434 ]
  %3437 = load ptr, ptr %114, align 8, !tbaa !23
  %3438 = icmp eq ptr %3437, %1195
  br i1 %3438, label %3440, label %3439

3439:                                             ; preds = %3435
  call void @_ZdlPv(ptr noundef %3437) #58
  br label %3440

3440:                                             ; preds = %3439, %3435, %3426
  %3441 = phi { ptr, i32 } [ %3427, %3426 ], [ %3436, %3435 ], [ %3436, %3439 ]
  %3442 = load ptr, ptr %113, align 8, !tbaa !23
  %3443 = icmp eq ptr %3442, %1193
  br i1 %3443, label %4142, label %3444

3444:                                             ; preds = %3440
  call void @_ZdlPv(ptr noundef %3442) #58
  br label %4142

3445:                                             ; preds = %1211
  %3446 = landingpad { ptr, i32 }
          cleanup
  br label %3456

3447:                                             ; preds = %1217
  %3448 = landingpad { ptr, i32 }
          cleanup
  br label %3451

3449:                                             ; preds = %1218
  %3450 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %116) #59
  br label %3451

3451:                                             ; preds = %3449, %3447
  %3452 = phi { ptr, i32 } [ %3450, %3449 ], [ %3448, %3447 ]
  %3453 = load ptr, ptr %117, align 8, !tbaa !23
  %3454 = icmp eq ptr %3453, %1212
  br i1 %3454, label %3456, label %3455

3455:                                             ; preds = %3451
  call void @_ZdlPv(ptr noundef %3453) #58
  br label %3456

3456:                                             ; preds = %3455, %3451, %3445
  %3457 = phi { ptr, i32 } [ %3446, %3445 ], [ %3452, %3451 ], [ %3452, %3455 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %117) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %116) #57
  br label %4140

3458:                                             ; preds = %1247
  %3459 = landingpad { ptr, i32 }
          cleanup
  br label %4138

3460:                                             ; preds = %1249
  %3461 = landingpad { ptr, i32 }
          cleanup
  br label %3474

3462:                                             ; preds = %1251
  %3463 = landingpad { ptr, i32 }
          cleanup
  br label %3469

3464:                                             ; preds = %1253
  %3465 = landingpad { ptr, i32 }
          cleanup
  %3466 = load ptr, ptr %121, align 8, !tbaa !23
  %3467 = icmp eq ptr %3466, %1252
  br i1 %3467, label %3469, label %3468

3468:                                             ; preds = %3464
  call void @_ZdlPv(ptr noundef %3466) #58
  br label %3469

3469:                                             ; preds = %3468, %3464, %3462
  %3470 = phi { ptr, i32 } [ %3463, %3462 ], [ %3465, %3464 ], [ %3465, %3468 ]
  %3471 = load ptr, ptr %120, align 8, !tbaa !23
  %3472 = icmp eq ptr %3471, %1250
  br i1 %3472, label %3474, label %3473

3473:                                             ; preds = %3469
  call void @_ZdlPv(ptr noundef %3471) #58
  br label %3474

3474:                                             ; preds = %3473, %3469, %3460
  %3475 = phi { ptr, i32 } [ %3461, %3460 ], [ %3470, %3469 ], [ %3470, %3473 ]
  %3476 = load ptr, ptr %119, align 8, !tbaa !23
  %3477 = icmp eq ptr %3476, %1248
  br i1 %3477, label %4138, label %3478

3478:                                             ; preds = %3474
  call void @_ZdlPv(ptr noundef %3476) #58
  br label %4138

3479:                                             ; preds = %1266
  %3480 = landingpad { ptr, i32 }
          cleanup
  br label %3490

3481:                                             ; preds = %1272
  %3482 = landingpad { ptr, i32 }
          cleanup
  br label %3485

3483:                                             ; preds = %1273
  %3484 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %122) #59
  br label %3485

3485:                                             ; preds = %3483, %3481
  %3486 = phi { ptr, i32 } [ %3484, %3483 ], [ %3482, %3481 ]
  %3487 = load ptr, ptr %123, align 8, !tbaa !23
  %3488 = icmp eq ptr %3487, %1267
  br i1 %3488, label %3490, label %3489

3489:                                             ; preds = %3485
  call void @_ZdlPv(ptr noundef %3487) #58
  br label %3490

3490:                                             ; preds = %3489, %3485, %3479
  %3491 = phi { ptr, i32 } [ %3480, %3479 ], [ %3486, %3485 ], [ %3486, %3489 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %123) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %122) #57
  br label %4136

3492:                                             ; preds = %1302
  %3493 = landingpad { ptr, i32 }
          cleanup
  br label %4134

3494:                                             ; preds = %1304
  %3495 = landingpad { ptr, i32 }
          cleanup
  br label %3508

3496:                                             ; preds = %1306
  %3497 = landingpad { ptr, i32 }
          cleanup
  br label %3503

3498:                                             ; preds = %1308
  %3499 = landingpad { ptr, i32 }
          cleanup
  %3500 = load ptr, ptr %127, align 8, !tbaa !23
  %3501 = icmp eq ptr %3500, %1307
  br i1 %3501, label %3503, label %3502

3502:                                             ; preds = %3498
  call void @_ZdlPv(ptr noundef %3500) #58
  br label %3503

3503:                                             ; preds = %3502, %3498, %3496
  %3504 = phi { ptr, i32 } [ %3497, %3496 ], [ %3499, %3498 ], [ %3499, %3502 ]
  %3505 = load ptr, ptr %126, align 8, !tbaa !23
  %3506 = icmp eq ptr %3505, %1305
  br i1 %3506, label %3508, label %3507

3507:                                             ; preds = %3503
  call void @_ZdlPv(ptr noundef %3505) #58
  br label %3508

3508:                                             ; preds = %3507, %3503, %3494
  %3509 = phi { ptr, i32 } [ %3495, %3494 ], [ %3504, %3503 ], [ %3504, %3507 ]
  %3510 = load ptr, ptr %125, align 8, !tbaa !23
  %3511 = icmp eq ptr %3510, %1303
  br i1 %3511, label %4134, label %3512

3512:                                             ; preds = %3508
  call void @_ZdlPv(ptr noundef %3510) #58
  br label %4134

3513:                                             ; preds = %1321
  %3514 = landingpad { ptr, i32 }
          cleanup
  br label %3524

3515:                                             ; preds = %1327
  %3516 = landingpad { ptr, i32 }
          cleanup
  br label %3519

3517:                                             ; preds = %1328
  %3518 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %128) #59
  br label %3519

3519:                                             ; preds = %3517, %3515
  %3520 = phi { ptr, i32 } [ %3518, %3517 ], [ %3516, %3515 ]
  %3521 = load ptr, ptr %129, align 8, !tbaa !23
  %3522 = icmp eq ptr %3521, %1322
  br i1 %3522, label %3524, label %3523

3523:                                             ; preds = %3519
  call void @_ZdlPv(ptr noundef %3521) #58
  br label %3524

3524:                                             ; preds = %3523, %3519, %3513
  %3525 = phi { ptr, i32 } [ %3514, %3513 ], [ %3520, %3519 ], [ %3520, %3523 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %129) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %128) #57
  br label %4132

3526:                                             ; preds = %1357
  %3527 = landingpad { ptr, i32 }
          cleanup
  br label %4130

3528:                                             ; preds = %1359
  %3529 = landingpad { ptr, i32 }
          cleanup
  br label %3542

3530:                                             ; preds = %1361
  %3531 = landingpad { ptr, i32 }
          cleanup
  br label %3537

3532:                                             ; preds = %1363
  %3533 = landingpad { ptr, i32 }
          cleanup
  %3534 = load ptr, ptr %133, align 8, !tbaa !23
  %3535 = icmp eq ptr %3534, %1362
  br i1 %3535, label %3537, label %3536

3536:                                             ; preds = %3532
  call void @_ZdlPv(ptr noundef %3534) #58
  br label %3537

3537:                                             ; preds = %3536, %3532, %3530
  %3538 = phi { ptr, i32 } [ %3531, %3530 ], [ %3533, %3532 ], [ %3533, %3536 ]
  %3539 = load ptr, ptr %132, align 8, !tbaa !23
  %3540 = icmp eq ptr %3539, %1360
  br i1 %3540, label %3542, label %3541

3541:                                             ; preds = %3537
  call void @_ZdlPv(ptr noundef %3539) #58
  br label %3542

3542:                                             ; preds = %3541, %3537, %3528
  %3543 = phi { ptr, i32 } [ %3529, %3528 ], [ %3538, %3537 ], [ %3538, %3541 ]
  %3544 = load ptr, ptr %131, align 8, !tbaa !23
  %3545 = icmp eq ptr %3544, %1358
  br i1 %3545, label %4130, label %3546

3546:                                             ; preds = %3542
  call void @_ZdlPv(ptr noundef %3544) #58
  br label %4130

3547:                                             ; preds = %1376
  %3548 = landingpad { ptr, i32 }
          cleanup
  br label %3558

3549:                                             ; preds = %1382
  %3550 = landingpad { ptr, i32 }
          cleanup
  br label %3553

3551:                                             ; preds = %1383
  %3552 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %134) #59
  br label %3553

3553:                                             ; preds = %3551, %3549
  %3554 = phi { ptr, i32 } [ %3552, %3551 ], [ %3550, %3549 ]
  %3555 = load ptr, ptr %135, align 8, !tbaa !23
  %3556 = icmp eq ptr %3555, %1377
  br i1 %3556, label %3558, label %3557

3557:                                             ; preds = %3553
  call void @_ZdlPv(ptr noundef %3555) #58
  br label %3558

3558:                                             ; preds = %3557, %3553, %3547
  %3559 = phi { ptr, i32 } [ %3548, %3547 ], [ %3554, %3553 ], [ %3554, %3557 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %135) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %134) #57
  br label %4128

3560:                                             ; preds = %1412
  %3561 = landingpad { ptr, i32 }
          cleanup
  br label %4126

3562:                                             ; preds = %1414
  %3563 = landingpad { ptr, i32 }
          cleanup
  br label %3576

3564:                                             ; preds = %1416
  %3565 = landingpad { ptr, i32 }
          cleanup
  br label %3571

3566:                                             ; preds = %1418
  %3567 = landingpad { ptr, i32 }
          cleanup
  %3568 = load ptr, ptr %139, align 8, !tbaa !23
  %3569 = icmp eq ptr %3568, %1417
  br i1 %3569, label %3571, label %3570

3570:                                             ; preds = %3566
  call void @_ZdlPv(ptr noundef %3568) #58
  br label %3571

3571:                                             ; preds = %3570, %3566, %3564
  %3572 = phi { ptr, i32 } [ %3565, %3564 ], [ %3567, %3566 ], [ %3567, %3570 ]
  %3573 = load ptr, ptr %138, align 8, !tbaa !23
  %3574 = icmp eq ptr %3573, %1415
  br i1 %3574, label %3576, label %3575

3575:                                             ; preds = %3571
  call void @_ZdlPv(ptr noundef %3573) #58
  br label %3576

3576:                                             ; preds = %3575, %3571, %3562
  %3577 = phi { ptr, i32 } [ %3563, %3562 ], [ %3572, %3571 ], [ %3572, %3575 ]
  %3578 = load ptr, ptr %137, align 8, !tbaa !23
  %3579 = icmp eq ptr %3578, %1413
  br i1 %3579, label %4126, label %3580

3580:                                             ; preds = %3576
  call void @_ZdlPv(ptr noundef %3578) #58
  br label %4126

3581:                                             ; preds = %1431
  %3582 = landingpad { ptr, i32 }
          cleanup
  br label %3592

3583:                                             ; preds = %1437
  %3584 = landingpad { ptr, i32 }
          cleanup
  br label %3587

3585:                                             ; preds = %1438
  %3586 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %140) #59
  br label %3587

3587:                                             ; preds = %3585, %3583
  %3588 = phi { ptr, i32 } [ %3586, %3585 ], [ %3584, %3583 ]
  %3589 = load ptr, ptr %141, align 8, !tbaa !23
  %3590 = icmp eq ptr %3589, %1432
  br i1 %3590, label %3592, label %3591

3591:                                             ; preds = %3587
  call void @_ZdlPv(ptr noundef %3589) #58
  br label %3592

3592:                                             ; preds = %3591, %3587, %3581
  %3593 = phi { ptr, i32 } [ %3582, %3581 ], [ %3588, %3587 ], [ %3588, %3591 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %141) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %140) #57
  br label %4124

3594:                                             ; preds = %1467
  %3595 = landingpad { ptr, i32 }
          cleanup
  br label %4122

3596:                                             ; preds = %1469
  %3597 = landingpad { ptr, i32 }
          cleanup
  br label %3610

3598:                                             ; preds = %1471
  %3599 = landingpad { ptr, i32 }
          cleanup
  br label %3605

3600:                                             ; preds = %1473
  %3601 = landingpad { ptr, i32 }
          cleanup
  %3602 = load ptr, ptr %145, align 8, !tbaa !23
  %3603 = icmp eq ptr %3602, %1472
  br i1 %3603, label %3605, label %3604

3604:                                             ; preds = %3600
  call void @_ZdlPv(ptr noundef %3602) #58
  br label %3605

3605:                                             ; preds = %3604, %3600, %3598
  %3606 = phi { ptr, i32 } [ %3599, %3598 ], [ %3601, %3600 ], [ %3601, %3604 ]
  %3607 = load ptr, ptr %144, align 8, !tbaa !23
  %3608 = icmp eq ptr %3607, %1470
  br i1 %3608, label %3610, label %3609

3609:                                             ; preds = %3605
  call void @_ZdlPv(ptr noundef %3607) #58
  br label %3610

3610:                                             ; preds = %3609, %3605, %3596
  %3611 = phi { ptr, i32 } [ %3597, %3596 ], [ %3606, %3605 ], [ %3606, %3609 ]
  %3612 = load ptr, ptr %143, align 8, !tbaa !23
  %3613 = icmp eq ptr %3612, %1468
  br i1 %3613, label %4122, label %3614

3614:                                             ; preds = %3610
  call void @_ZdlPv(ptr noundef %3612) #58
  br label %4122

3615:                                             ; preds = %1486
  %3616 = landingpad { ptr, i32 }
          cleanup
  br label %3626

3617:                                             ; preds = %1492
  %3618 = landingpad { ptr, i32 }
          cleanup
  br label %3621

3619:                                             ; preds = %1493
  %3620 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %146) #59
  br label %3621

3621:                                             ; preds = %3619, %3617
  %3622 = phi { ptr, i32 } [ %3620, %3619 ], [ %3618, %3617 ]
  %3623 = load ptr, ptr %147, align 8, !tbaa !23
  %3624 = icmp eq ptr %3623, %1487
  br i1 %3624, label %3626, label %3625

3625:                                             ; preds = %3621
  call void @_ZdlPv(ptr noundef %3623) #58
  br label %3626

3626:                                             ; preds = %3625, %3621, %3615
  %3627 = phi { ptr, i32 } [ %3616, %3615 ], [ %3622, %3621 ], [ %3622, %3625 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %147) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %146) #57
  br label %4120

3628:                                             ; preds = %1522
  %3629 = landingpad { ptr, i32 }
          cleanup
  br label %4118

3630:                                             ; preds = %1524
  %3631 = landingpad { ptr, i32 }
          cleanup
  br label %3644

3632:                                             ; preds = %1526
  %3633 = landingpad { ptr, i32 }
          cleanup
  br label %3639

3634:                                             ; preds = %1528
  %3635 = landingpad { ptr, i32 }
          cleanup
  %3636 = load ptr, ptr %151, align 8, !tbaa !23
  %3637 = icmp eq ptr %3636, %1527
  br i1 %3637, label %3639, label %3638

3638:                                             ; preds = %3634
  call void @_ZdlPv(ptr noundef %3636) #58
  br label %3639

3639:                                             ; preds = %3638, %3634, %3632
  %3640 = phi { ptr, i32 } [ %3633, %3632 ], [ %3635, %3634 ], [ %3635, %3638 ]
  %3641 = load ptr, ptr %150, align 8, !tbaa !23
  %3642 = icmp eq ptr %3641, %1525
  br i1 %3642, label %3644, label %3643

3643:                                             ; preds = %3639
  call void @_ZdlPv(ptr noundef %3641) #58
  br label %3644

3644:                                             ; preds = %3643, %3639, %3630
  %3645 = phi { ptr, i32 } [ %3631, %3630 ], [ %3640, %3639 ], [ %3640, %3643 ]
  %3646 = load ptr, ptr %149, align 8, !tbaa !23
  %3647 = icmp eq ptr %3646, %1523
  br i1 %3647, label %4118, label %3648

3648:                                             ; preds = %3644
  call void @_ZdlPv(ptr noundef %3646) #58
  br label %4118

3649:                                             ; preds = %1541
  %3650 = landingpad { ptr, i32 }
          cleanup
  br label %3660

3651:                                             ; preds = %1547
  %3652 = landingpad { ptr, i32 }
          cleanup
  br label %3655

3653:                                             ; preds = %1548
  %3654 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %152) #59
  br label %3655

3655:                                             ; preds = %3653, %3651
  %3656 = phi { ptr, i32 } [ %3654, %3653 ], [ %3652, %3651 ]
  %3657 = load ptr, ptr %153, align 8, !tbaa !23
  %3658 = icmp eq ptr %3657, %1542
  br i1 %3658, label %3660, label %3659

3659:                                             ; preds = %3655
  call void @_ZdlPv(ptr noundef %3657) #58
  br label %3660

3660:                                             ; preds = %3659, %3655, %3649
  %3661 = phi { ptr, i32 } [ %3650, %3649 ], [ %3656, %3655 ], [ %3656, %3659 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %153) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %152) #57
  br label %4116

3662:                                             ; preds = %1577
  %3663 = landingpad { ptr, i32 }
          cleanup
  br label %4114

3664:                                             ; preds = %1579
  %3665 = landingpad { ptr, i32 }
          cleanup
  br label %3678

3666:                                             ; preds = %1581
  %3667 = landingpad { ptr, i32 }
          cleanup
  br label %3673

3668:                                             ; preds = %1583
  %3669 = landingpad { ptr, i32 }
          cleanup
  %3670 = load ptr, ptr %157, align 8, !tbaa !23
  %3671 = icmp eq ptr %3670, %1582
  br i1 %3671, label %3673, label %3672

3672:                                             ; preds = %3668
  call void @_ZdlPv(ptr noundef %3670) #58
  br label %3673

3673:                                             ; preds = %3672, %3668, %3666
  %3674 = phi { ptr, i32 } [ %3667, %3666 ], [ %3669, %3668 ], [ %3669, %3672 ]
  %3675 = load ptr, ptr %156, align 8, !tbaa !23
  %3676 = icmp eq ptr %3675, %1580
  br i1 %3676, label %3678, label %3677

3677:                                             ; preds = %3673
  call void @_ZdlPv(ptr noundef %3675) #58
  br label %3678

3678:                                             ; preds = %3677, %3673, %3664
  %3679 = phi { ptr, i32 } [ %3665, %3664 ], [ %3674, %3673 ], [ %3674, %3677 ]
  %3680 = load ptr, ptr %155, align 8, !tbaa !23
  %3681 = icmp eq ptr %3680, %1578
  br i1 %3681, label %4114, label %3682

3682:                                             ; preds = %3678
  call void @_ZdlPv(ptr noundef %3680) #58
  br label %4114

3683:                                             ; preds = %1596
  %3684 = landingpad { ptr, i32 }
          cleanup
  br label %3694

3685:                                             ; preds = %1602
  %3686 = landingpad { ptr, i32 }
          cleanup
  br label %3689

3687:                                             ; preds = %1603
  %3688 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %158) #59
  br label %3689

3689:                                             ; preds = %3687, %3685
  %3690 = phi { ptr, i32 } [ %3688, %3687 ], [ %3686, %3685 ]
  %3691 = load ptr, ptr %159, align 8, !tbaa !23
  %3692 = icmp eq ptr %3691, %1597
  br i1 %3692, label %3694, label %3693

3693:                                             ; preds = %3689
  call void @_ZdlPv(ptr noundef %3691) #58
  br label %3694

3694:                                             ; preds = %3693, %3689, %3683
  %3695 = phi { ptr, i32 } [ %3684, %3683 ], [ %3690, %3689 ], [ %3690, %3693 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %159) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %158) #57
  br label %4112

3696:                                             ; preds = %1632
  %3697 = landingpad { ptr, i32 }
          cleanup
  br label %4110

3698:                                             ; preds = %1634
  %3699 = landingpad { ptr, i32 }
          cleanup
  br label %3712

3700:                                             ; preds = %1636
  %3701 = landingpad { ptr, i32 }
          cleanup
  br label %3707

3702:                                             ; preds = %1638
  %3703 = landingpad { ptr, i32 }
          cleanup
  %3704 = load ptr, ptr %163, align 8, !tbaa !23
  %3705 = icmp eq ptr %3704, %1637
  br i1 %3705, label %3707, label %3706

3706:                                             ; preds = %3702
  call void @_ZdlPv(ptr noundef %3704) #58
  br label %3707

3707:                                             ; preds = %3706, %3702, %3700
  %3708 = phi { ptr, i32 } [ %3701, %3700 ], [ %3703, %3702 ], [ %3703, %3706 ]
  %3709 = load ptr, ptr %162, align 8, !tbaa !23
  %3710 = icmp eq ptr %3709, %1635
  br i1 %3710, label %3712, label %3711

3711:                                             ; preds = %3707
  call void @_ZdlPv(ptr noundef %3709) #58
  br label %3712

3712:                                             ; preds = %3711, %3707, %3698
  %3713 = phi { ptr, i32 } [ %3699, %3698 ], [ %3708, %3707 ], [ %3708, %3711 ]
  %3714 = load ptr, ptr %161, align 8, !tbaa !23
  %3715 = icmp eq ptr %3714, %1633
  br i1 %3715, label %4110, label %3716

3716:                                             ; preds = %3712
  call void @_ZdlPv(ptr noundef %3714) #58
  br label %4110

3717:                                             ; preds = %1651
  %3718 = landingpad { ptr, i32 }
          cleanup
  br label %3728

3719:                                             ; preds = %1657
  %3720 = landingpad { ptr, i32 }
          cleanup
  br label %3723

3721:                                             ; preds = %1658
  %3722 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %164) #59
  br label %3723

3723:                                             ; preds = %3721, %3719
  %3724 = phi { ptr, i32 } [ %3722, %3721 ], [ %3720, %3719 ]
  %3725 = load ptr, ptr %165, align 8, !tbaa !23
  %3726 = icmp eq ptr %3725, %1652
  br i1 %3726, label %3728, label %3727

3727:                                             ; preds = %3723
  call void @_ZdlPv(ptr noundef %3725) #58
  br label %3728

3728:                                             ; preds = %3727, %3723, %3717
  %3729 = phi { ptr, i32 } [ %3718, %3717 ], [ %3724, %3723 ], [ %3724, %3727 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %165) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %164) #57
  br label %4108

3730:                                             ; preds = %1687
  %3731 = landingpad { ptr, i32 }
          cleanup
  br label %4106

3732:                                             ; preds = %1689
  %3733 = landingpad { ptr, i32 }
          cleanup
  br label %3746

3734:                                             ; preds = %1691
  %3735 = landingpad { ptr, i32 }
          cleanup
  br label %3741

3736:                                             ; preds = %1693
  %3737 = landingpad { ptr, i32 }
          cleanup
  %3738 = load ptr, ptr %169, align 8, !tbaa !23
  %3739 = icmp eq ptr %3738, %1692
  br i1 %3739, label %3741, label %3740

3740:                                             ; preds = %3736
  call void @_ZdlPv(ptr noundef %3738) #58
  br label %3741

3741:                                             ; preds = %3740, %3736, %3734
  %3742 = phi { ptr, i32 } [ %3735, %3734 ], [ %3737, %3736 ], [ %3737, %3740 ]
  %3743 = load ptr, ptr %168, align 8, !tbaa !23
  %3744 = icmp eq ptr %3743, %1690
  br i1 %3744, label %3746, label %3745

3745:                                             ; preds = %3741
  call void @_ZdlPv(ptr noundef %3743) #58
  br label %3746

3746:                                             ; preds = %3745, %3741, %3732
  %3747 = phi { ptr, i32 } [ %3733, %3732 ], [ %3742, %3741 ], [ %3742, %3745 ]
  %3748 = load ptr, ptr %167, align 8, !tbaa !23
  %3749 = icmp eq ptr %3748, %1688
  br i1 %3749, label %4106, label %3750

3750:                                             ; preds = %3746
  call void @_ZdlPv(ptr noundef %3748) #58
  br label %4106

3751:                                             ; preds = %1706
  %3752 = landingpad { ptr, i32 }
          cleanup
  br label %3762

3753:                                             ; preds = %1712
  %3754 = landingpad { ptr, i32 }
          cleanup
  br label %3757

3755:                                             ; preds = %1713
  %3756 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %170) #59
  br label %3757

3757:                                             ; preds = %3755, %3753
  %3758 = phi { ptr, i32 } [ %3756, %3755 ], [ %3754, %3753 ]
  %3759 = load ptr, ptr %171, align 8, !tbaa !23
  %3760 = icmp eq ptr %3759, %1707
  br i1 %3760, label %3762, label %3761

3761:                                             ; preds = %3757
  call void @_ZdlPv(ptr noundef %3759) #58
  br label %3762

3762:                                             ; preds = %3761, %3757, %3751
  %3763 = phi { ptr, i32 } [ %3752, %3751 ], [ %3758, %3757 ], [ %3758, %3761 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %171) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %170) #57
  br label %4104

3764:                                             ; preds = %1742
  %3765 = landingpad { ptr, i32 }
          cleanup
  br label %4102

3766:                                             ; preds = %1744
  %3767 = landingpad { ptr, i32 }
          cleanup
  br label %3780

3768:                                             ; preds = %1746
  %3769 = landingpad { ptr, i32 }
          cleanup
  br label %3775

3770:                                             ; preds = %1748
  %3771 = landingpad { ptr, i32 }
          cleanup
  %3772 = load ptr, ptr %175, align 8, !tbaa !23
  %3773 = icmp eq ptr %3772, %1747
  br i1 %3773, label %3775, label %3774

3774:                                             ; preds = %3770
  call void @_ZdlPv(ptr noundef %3772) #58
  br label %3775

3775:                                             ; preds = %3774, %3770, %3768
  %3776 = phi { ptr, i32 } [ %3769, %3768 ], [ %3771, %3770 ], [ %3771, %3774 ]
  %3777 = load ptr, ptr %174, align 8, !tbaa !23
  %3778 = icmp eq ptr %3777, %1745
  br i1 %3778, label %3780, label %3779

3779:                                             ; preds = %3775
  call void @_ZdlPv(ptr noundef %3777) #58
  br label %3780

3780:                                             ; preds = %3779, %3775, %3766
  %3781 = phi { ptr, i32 } [ %3767, %3766 ], [ %3776, %3775 ], [ %3776, %3779 ]
  %3782 = load ptr, ptr %173, align 8, !tbaa !23
  %3783 = icmp eq ptr %3782, %1743
  br i1 %3783, label %4102, label %3784

3784:                                             ; preds = %3780
  call void @_ZdlPv(ptr noundef %3782) #58
  br label %4102

3785:                                             ; preds = %1761
  %3786 = landingpad { ptr, i32 }
          cleanup
  br label %3796

3787:                                             ; preds = %1767
  %3788 = landingpad { ptr, i32 }
          cleanup
  br label %3791

3789:                                             ; preds = %1768
  %3790 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %176) #59
  br label %3791

3791:                                             ; preds = %3789, %3787
  %3792 = phi { ptr, i32 } [ %3790, %3789 ], [ %3788, %3787 ]
  %3793 = load ptr, ptr %177, align 8, !tbaa !23
  %3794 = icmp eq ptr %3793, %1762
  br i1 %3794, label %3796, label %3795

3795:                                             ; preds = %3791
  call void @_ZdlPv(ptr noundef %3793) #58
  br label %3796

3796:                                             ; preds = %3795, %3791, %3785
  %3797 = phi { ptr, i32 } [ %3786, %3785 ], [ %3792, %3791 ], [ %3792, %3795 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %177) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %176) #57
  br label %4100

3798:                                             ; preds = %1797
  %3799 = landingpad { ptr, i32 }
          cleanup
  br label %4098

3800:                                             ; preds = %1799
  %3801 = landingpad { ptr, i32 }
          cleanup
  br label %3814

3802:                                             ; preds = %1801
  %3803 = landingpad { ptr, i32 }
          cleanup
  br label %3809

3804:                                             ; preds = %1803
  %3805 = landingpad { ptr, i32 }
          cleanup
  %3806 = load ptr, ptr %181, align 8, !tbaa !23
  %3807 = icmp eq ptr %3806, %1802
  br i1 %3807, label %3809, label %3808

3808:                                             ; preds = %3804
  call void @_ZdlPv(ptr noundef %3806) #58
  br label %3809

3809:                                             ; preds = %3808, %3804, %3802
  %3810 = phi { ptr, i32 } [ %3803, %3802 ], [ %3805, %3804 ], [ %3805, %3808 ]
  %3811 = load ptr, ptr %180, align 8, !tbaa !23
  %3812 = icmp eq ptr %3811, %1800
  br i1 %3812, label %3814, label %3813

3813:                                             ; preds = %3809
  call void @_ZdlPv(ptr noundef %3811) #58
  br label %3814

3814:                                             ; preds = %3813, %3809, %3800
  %3815 = phi { ptr, i32 } [ %3801, %3800 ], [ %3810, %3809 ], [ %3810, %3813 ]
  %3816 = load ptr, ptr %179, align 8, !tbaa !23
  %3817 = icmp eq ptr %3816, %1798
  br i1 %3817, label %4098, label %3818

3818:                                             ; preds = %3814
  call void @_ZdlPv(ptr noundef %3816) #58
  br label %4098

3819:                                             ; preds = %1816
  %3820 = landingpad { ptr, i32 }
          cleanup
  br label %3830

3821:                                             ; preds = %1822
  %3822 = landingpad { ptr, i32 }
          cleanup
  br label %3825

3823:                                             ; preds = %1823
  %3824 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %182) #59
  br label %3825

3825:                                             ; preds = %3823, %3821
  %3826 = phi { ptr, i32 } [ %3824, %3823 ], [ %3822, %3821 ]
  %3827 = load ptr, ptr %183, align 8, !tbaa !23
  %3828 = icmp eq ptr %3827, %1817
  br i1 %3828, label %3830, label %3829

3829:                                             ; preds = %3825
  call void @_ZdlPv(ptr noundef %3827) #58
  br label %3830

3830:                                             ; preds = %3829, %3825, %3819
  %3831 = phi { ptr, i32 } [ %3820, %3819 ], [ %3826, %3825 ], [ %3826, %3829 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %183) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %182) #57
  br label %4096

3832:                                             ; preds = %1852
  %3833 = landingpad { ptr, i32 }
          cleanup
  br label %4094

3834:                                             ; preds = %1854
  %3835 = landingpad { ptr, i32 }
          cleanup
  br label %3848

3836:                                             ; preds = %1856
  %3837 = landingpad { ptr, i32 }
          cleanup
  br label %3843

3838:                                             ; preds = %1858
  %3839 = landingpad { ptr, i32 }
          cleanup
  %3840 = load ptr, ptr %187, align 8, !tbaa !23
  %3841 = icmp eq ptr %3840, %1857
  br i1 %3841, label %3843, label %3842

3842:                                             ; preds = %3838
  call void @_ZdlPv(ptr noundef %3840) #58
  br label %3843

3843:                                             ; preds = %3842, %3838, %3836
  %3844 = phi { ptr, i32 } [ %3837, %3836 ], [ %3839, %3838 ], [ %3839, %3842 ]
  %3845 = load ptr, ptr %186, align 8, !tbaa !23
  %3846 = icmp eq ptr %3845, %1855
  br i1 %3846, label %3848, label %3847

3847:                                             ; preds = %3843
  call void @_ZdlPv(ptr noundef %3845) #58
  br label %3848

3848:                                             ; preds = %3847, %3843, %3834
  %3849 = phi { ptr, i32 } [ %3835, %3834 ], [ %3844, %3843 ], [ %3844, %3847 ]
  %3850 = load ptr, ptr %185, align 8, !tbaa !23
  %3851 = icmp eq ptr %3850, %1853
  br i1 %3851, label %4094, label %3852

3852:                                             ; preds = %3848
  call void @_ZdlPv(ptr noundef %3850) #58
  br label %4094

3853:                                             ; preds = %1871
  %3854 = landingpad { ptr, i32 }
          cleanup
  br label %3864

3855:                                             ; preds = %1877
  %3856 = landingpad { ptr, i32 }
          cleanup
  br label %3859

3857:                                             ; preds = %1878
  %3858 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %188) #59
  br label %3859

3859:                                             ; preds = %3857, %3855
  %3860 = phi { ptr, i32 } [ %3858, %3857 ], [ %3856, %3855 ]
  %3861 = load ptr, ptr %189, align 8, !tbaa !23
  %3862 = icmp eq ptr %3861, %1872
  br i1 %3862, label %3864, label %3863

3863:                                             ; preds = %3859
  call void @_ZdlPv(ptr noundef %3861) #58
  br label %3864

3864:                                             ; preds = %3863, %3859, %3853
  %3865 = phi { ptr, i32 } [ %3854, %3853 ], [ %3860, %3859 ], [ %3860, %3863 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %189) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %188) #57
  br label %4092

3866:                                             ; preds = %1907
  %3867 = landingpad { ptr, i32 }
          cleanup
  br label %4090

3868:                                             ; preds = %1909
  %3869 = landingpad { ptr, i32 }
          cleanup
  br label %3882

3870:                                             ; preds = %1911
  %3871 = landingpad { ptr, i32 }
          cleanup
  br label %3877

3872:                                             ; preds = %1913
  %3873 = landingpad { ptr, i32 }
          cleanup
  %3874 = load ptr, ptr %193, align 8, !tbaa !23
  %3875 = icmp eq ptr %3874, %1912
  br i1 %3875, label %3877, label %3876

3876:                                             ; preds = %3872
  call void @_ZdlPv(ptr noundef %3874) #58
  br label %3877

3877:                                             ; preds = %3876, %3872, %3870
  %3878 = phi { ptr, i32 } [ %3871, %3870 ], [ %3873, %3872 ], [ %3873, %3876 ]
  %3879 = load ptr, ptr %192, align 8, !tbaa !23
  %3880 = icmp eq ptr %3879, %1910
  br i1 %3880, label %3882, label %3881

3881:                                             ; preds = %3877
  call void @_ZdlPv(ptr noundef %3879) #58
  br label %3882

3882:                                             ; preds = %3881, %3877, %3868
  %3883 = phi { ptr, i32 } [ %3869, %3868 ], [ %3878, %3877 ], [ %3878, %3881 ]
  %3884 = load ptr, ptr %191, align 8, !tbaa !23
  %3885 = icmp eq ptr %3884, %1908
  br i1 %3885, label %4090, label %3886

3886:                                             ; preds = %3882
  call void @_ZdlPv(ptr noundef %3884) #58
  br label %4090

3887:                                             ; preds = %1926
  %3888 = landingpad { ptr, i32 }
          cleanup
  br label %3898

3889:                                             ; preds = %1932
  %3890 = landingpad { ptr, i32 }
          cleanup
  br label %3893

3891:                                             ; preds = %1933
  %3892 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %194) #59
  br label %3893

3893:                                             ; preds = %3891, %3889
  %3894 = phi { ptr, i32 } [ %3892, %3891 ], [ %3890, %3889 ]
  %3895 = load ptr, ptr %195, align 8, !tbaa !23
  %3896 = icmp eq ptr %3895, %1927
  br i1 %3896, label %3898, label %3897

3897:                                             ; preds = %3893
  call void @_ZdlPv(ptr noundef %3895) #58
  br label %3898

3898:                                             ; preds = %3897, %3893, %3887
  %3899 = phi { ptr, i32 } [ %3888, %3887 ], [ %3894, %3893 ], [ %3894, %3897 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %195) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %194) #57
  br label %4088

3900:                                             ; preds = %1962
  %3901 = landingpad { ptr, i32 }
          cleanup
  br label %4086

3902:                                             ; preds = %1964
  %3903 = landingpad { ptr, i32 }
          cleanup
  br label %3916

3904:                                             ; preds = %1966
  %3905 = landingpad { ptr, i32 }
          cleanup
  br label %3911

3906:                                             ; preds = %1968
  %3907 = landingpad { ptr, i32 }
          cleanup
  %3908 = load ptr, ptr %199, align 8, !tbaa !23
  %3909 = icmp eq ptr %3908, %1967
  br i1 %3909, label %3911, label %3910

3910:                                             ; preds = %3906
  call void @_ZdlPv(ptr noundef %3908) #58
  br label %3911

3911:                                             ; preds = %3910, %3906, %3904
  %3912 = phi { ptr, i32 } [ %3905, %3904 ], [ %3907, %3906 ], [ %3907, %3910 ]
  %3913 = load ptr, ptr %198, align 8, !tbaa !23
  %3914 = icmp eq ptr %3913, %1965
  br i1 %3914, label %3916, label %3915

3915:                                             ; preds = %3911
  call void @_ZdlPv(ptr noundef %3913) #58
  br label %3916

3916:                                             ; preds = %3915, %3911, %3902
  %3917 = phi { ptr, i32 } [ %3903, %3902 ], [ %3912, %3911 ], [ %3912, %3915 ]
  %3918 = load ptr, ptr %197, align 8, !tbaa !23
  %3919 = icmp eq ptr %3918, %1963
  br i1 %3919, label %4086, label %3920

3920:                                             ; preds = %3916
  call void @_ZdlPv(ptr noundef %3918) #58
  br label %4086

3921:                                             ; preds = %1981
  %3922 = landingpad { ptr, i32 }
          cleanup
  br label %3932

3923:                                             ; preds = %1987
  %3924 = landingpad { ptr, i32 }
          cleanup
  br label %3927

3925:                                             ; preds = %1988
  %3926 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %200) #59
  br label %3927

3927:                                             ; preds = %3925, %3923
  %3928 = phi { ptr, i32 } [ %3926, %3925 ], [ %3924, %3923 ]
  %3929 = load ptr, ptr %201, align 8, !tbaa !23
  %3930 = icmp eq ptr %3929, %1982
  br i1 %3930, label %3932, label %3931

3931:                                             ; preds = %3927
  call void @_ZdlPv(ptr noundef %3929) #58
  br label %3932

3932:                                             ; preds = %3931, %3927, %3921
  %3933 = phi { ptr, i32 } [ %3922, %3921 ], [ %3928, %3927 ], [ %3928, %3931 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %201) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %200) #57
  br label %4084

3934:                                             ; preds = %2017
  %3935 = landingpad { ptr, i32 }
          cleanup
  br label %4082

3936:                                             ; preds = %2019
  %3937 = landingpad { ptr, i32 }
          cleanup
  br label %3950

3938:                                             ; preds = %2021
  %3939 = landingpad { ptr, i32 }
          cleanup
  br label %3945

3940:                                             ; preds = %2023
  %3941 = landingpad { ptr, i32 }
          cleanup
  %3942 = load ptr, ptr %205, align 8, !tbaa !23
  %3943 = icmp eq ptr %3942, %2022
  br i1 %3943, label %3945, label %3944

3944:                                             ; preds = %3940
  call void @_ZdlPv(ptr noundef %3942) #58
  br label %3945

3945:                                             ; preds = %3944, %3940, %3938
  %3946 = phi { ptr, i32 } [ %3939, %3938 ], [ %3941, %3940 ], [ %3941, %3944 ]
  %3947 = load ptr, ptr %204, align 8, !tbaa !23
  %3948 = icmp eq ptr %3947, %2020
  br i1 %3948, label %3950, label %3949

3949:                                             ; preds = %3945
  call void @_ZdlPv(ptr noundef %3947) #58
  br label %3950

3950:                                             ; preds = %3949, %3945, %3936
  %3951 = phi { ptr, i32 } [ %3937, %3936 ], [ %3946, %3945 ], [ %3946, %3949 ]
  %3952 = load ptr, ptr %203, align 8, !tbaa !23
  %3953 = icmp eq ptr %3952, %2018
  br i1 %3953, label %4082, label %3954

3954:                                             ; preds = %3950
  call void @_ZdlPv(ptr noundef %3952) #58
  br label %4082

3955:                                             ; preds = %2036
  %3956 = landingpad { ptr, i32 }
          cleanup
  br label %3966

3957:                                             ; preds = %2042
  %3958 = landingpad { ptr, i32 }
          cleanup
  br label %3961

3959:                                             ; preds = %2043
  %3960 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %206) #59
  br label %3961

3961:                                             ; preds = %3959, %3957
  %3962 = phi { ptr, i32 } [ %3960, %3959 ], [ %3958, %3957 ]
  %3963 = load ptr, ptr %207, align 8, !tbaa !23
  %3964 = icmp eq ptr %3963, %2037
  br i1 %3964, label %3966, label %3965

3965:                                             ; preds = %3961
  call void @_ZdlPv(ptr noundef %3963) #58
  br label %3966

3966:                                             ; preds = %3965, %3961, %3955
  %3967 = phi { ptr, i32 } [ %3956, %3955 ], [ %3962, %3961 ], [ %3962, %3965 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %207) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %206) #57
  br label %4080

3968:                                             ; preds = %2072
  %3969 = landingpad { ptr, i32 }
          cleanup
  br label %4078

3970:                                             ; preds = %2074
  %3971 = landingpad { ptr, i32 }
          cleanup
  br label %3984

3972:                                             ; preds = %2076
  %3973 = landingpad { ptr, i32 }
          cleanup
  br label %3979

3974:                                             ; preds = %2078
  %3975 = landingpad { ptr, i32 }
          cleanup
  %3976 = load ptr, ptr %211, align 8, !tbaa !23
  %3977 = icmp eq ptr %3976, %2077
  br i1 %3977, label %3979, label %3978

3978:                                             ; preds = %3974
  call void @_ZdlPv(ptr noundef %3976) #58
  br label %3979

3979:                                             ; preds = %3978, %3974, %3972
  %3980 = phi { ptr, i32 } [ %3973, %3972 ], [ %3975, %3974 ], [ %3975, %3978 ]
  %3981 = load ptr, ptr %210, align 8, !tbaa !23
  %3982 = icmp eq ptr %3981, %2075
  br i1 %3982, label %3984, label %3983

3983:                                             ; preds = %3979
  call void @_ZdlPv(ptr noundef %3981) #58
  br label %3984

3984:                                             ; preds = %3983, %3979, %3970
  %3985 = phi { ptr, i32 } [ %3971, %3970 ], [ %3980, %3979 ], [ %3980, %3983 ]
  %3986 = load ptr, ptr %209, align 8, !tbaa !23
  %3987 = icmp eq ptr %3986, %2073
  br i1 %3987, label %4078, label %3988

3988:                                             ; preds = %3984
  call void @_ZdlPv(ptr noundef %3986) #58
  br label %4078

3989:                                             ; preds = %2091
  %3990 = landingpad { ptr, i32 }
          cleanup
  br label %4000

3991:                                             ; preds = %2097
  %3992 = landingpad { ptr, i32 }
          cleanup
  br label %3995

3993:                                             ; preds = %2098
  %3994 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %212) #59
  br label %3995

3995:                                             ; preds = %3993, %3991
  %3996 = phi { ptr, i32 } [ %3994, %3993 ], [ %3992, %3991 ]
  %3997 = load ptr, ptr %213, align 8, !tbaa !23
  %3998 = icmp eq ptr %3997, %2092
  br i1 %3998, label %4000, label %3999

3999:                                             ; preds = %3995
  call void @_ZdlPv(ptr noundef %3997) #58
  br label %4000

4000:                                             ; preds = %3999, %3995, %3989
  %4001 = phi { ptr, i32 } [ %3990, %3989 ], [ %3996, %3995 ], [ %3996, %3999 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %213) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %212) #57
  br label %4076

4002:                                             ; preds = %2127
  %4003 = landingpad { ptr, i32 }
          cleanup
  br label %4074

4004:                                             ; preds = %2129
  %4005 = landingpad { ptr, i32 }
          cleanup
  br label %4018

4006:                                             ; preds = %2131
  %4007 = landingpad { ptr, i32 }
          cleanup
  br label %4013

4008:                                             ; preds = %2133
  %4009 = landingpad { ptr, i32 }
          cleanup
  %4010 = load ptr, ptr %217, align 8, !tbaa !23
  %4011 = icmp eq ptr %4010, %2132
  br i1 %4011, label %4013, label %4012

4012:                                             ; preds = %4008
  call void @_ZdlPv(ptr noundef %4010) #58
  br label %4013

4013:                                             ; preds = %4012, %4008, %4006
  %4014 = phi { ptr, i32 } [ %4007, %4006 ], [ %4009, %4008 ], [ %4009, %4012 ]
  %4015 = load ptr, ptr %216, align 8, !tbaa !23
  %4016 = icmp eq ptr %4015, %2130
  br i1 %4016, label %4018, label %4017

4017:                                             ; preds = %4013
  call void @_ZdlPv(ptr noundef %4015) #58
  br label %4018

4018:                                             ; preds = %4017, %4013, %4004
  %4019 = phi { ptr, i32 } [ %4005, %4004 ], [ %4014, %4013 ], [ %4014, %4017 ]
  %4020 = load ptr, ptr %215, align 8, !tbaa !23
  %4021 = icmp eq ptr %4020, %2128
  br i1 %4021, label %4074, label %4022

4022:                                             ; preds = %4018
  call void @_ZdlPv(ptr noundef %4020) #58
  br label %4074

4023:                                             ; preds = %2146
  %4024 = landingpad { ptr, i32 }
          cleanup
  br label %4034

4025:                                             ; preds = %2152
  %4026 = landingpad { ptr, i32 }
          cleanup
  br label %4029

4027:                                             ; preds = %2153
  %4028 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %218) #59
  br label %4029

4029:                                             ; preds = %4027, %4025
  %4030 = phi { ptr, i32 } [ %4028, %4027 ], [ %4026, %4025 ]
  %4031 = load ptr, ptr %219, align 8, !tbaa !23
  %4032 = icmp eq ptr %4031, %2147
  br i1 %4032, label %4034, label %4033

4033:                                             ; preds = %4029
  call void @_ZdlPv(ptr noundef %4031) #58
  br label %4034

4034:                                             ; preds = %4033, %4029, %4023
  %4035 = phi { ptr, i32 } [ %4024, %4023 ], [ %4030, %4029 ], [ %4030, %4033 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %219) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %218) #57
  br label %4072

4036:                                             ; preds = %2182
  %4037 = landingpad { ptr, i32 }
          cleanup
  br label %4070

4038:                                             ; preds = %2184
  %4039 = landingpad { ptr, i32 }
          cleanup
  br label %4052

4040:                                             ; preds = %2186
  %4041 = landingpad { ptr, i32 }
          cleanup
  br label %4047

4042:                                             ; preds = %2188
  %4043 = landingpad { ptr, i32 }
          cleanup
  %4044 = load ptr, ptr %223, align 8, !tbaa !23
  %4045 = icmp eq ptr %4044, %2187
  br i1 %4045, label %4047, label %4046

4046:                                             ; preds = %4042
  call void @_ZdlPv(ptr noundef %4044) #58
  br label %4047

4047:                                             ; preds = %4046, %4042, %4040
  %4048 = phi { ptr, i32 } [ %4041, %4040 ], [ %4043, %4042 ], [ %4043, %4046 ]
  %4049 = load ptr, ptr %222, align 8, !tbaa !23
  %4050 = icmp eq ptr %4049, %2185
  br i1 %4050, label %4052, label %4051

4051:                                             ; preds = %4047
  call void @_ZdlPv(ptr noundef %4049) #58
  br label %4052

4052:                                             ; preds = %4051, %4047, %4038
  %4053 = phi { ptr, i32 } [ %4039, %4038 ], [ %4048, %4047 ], [ %4048, %4051 ]
  %4054 = load ptr, ptr %221, align 8, !tbaa !23
  %4055 = icmp eq ptr %4054, %2183
  br i1 %4055, label %4070, label %4056

4056:                                             ; preds = %4052
  call void @_ZdlPv(ptr noundef %4054) #58
  br label %4070

4057:                                             ; preds = %2201
  %4058 = landingpad { ptr, i32 }
          cleanup
  br label %4068

4059:                                             ; preds = %2207
  %4060 = landingpad { ptr, i32 }
          cleanup
  br label %4063

4061:                                             ; preds = %2208
  %4062 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %224) #59
  br label %4063

4063:                                             ; preds = %4061, %4059
  %4064 = phi { ptr, i32 } [ %4062, %4061 ], [ %4060, %4059 ]
  %4065 = load ptr, ptr %225, align 8, !tbaa !23
  %4066 = icmp eq ptr %4065, %2202
  br i1 %4066, label %4068, label %4067

4067:                                             ; preds = %4063
  call void @_ZdlPv(ptr noundef %4065) #58
  br label %4068

4068:                                             ; preds = %4067, %4063, %4057
  %4069 = phi { ptr, i32 } [ %4058, %4057 ], [ %4064, %4063 ], [ %4064, %4067 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %225) #57
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %224) #57
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %220) #59
  br label %4070

4070:                                             ; preds = %4068, %4056, %4052, %4036
  %4071 = phi { ptr, i32 } [ %4069, %4068 ], [ %4037, %4036 ], [ %4053, %4052 ], [ %4053, %4056 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %220) #57
  br label %4072

4072:                                             ; preds = %4070, %4034
  %4073 = phi { ptr, i32 } [ %4071, %4070 ], [ %4035, %4034 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %214) #59
  br label %4074

4074:                                             ; preds = %4072, %4022, %4018, %4002
  %4075 = phi { ptr, i32 } [ %4073, %4072 ], [ %4003, %4002 ], [ %4019, %4018 ], [ %4019, %4022 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %214) #57
  br label %4076

4076:                                             ; preds = %4074, %4000
  %4077 = phi { ptr, i32 } [ %4075, %4074 ], [ %4001, %4000 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %208) #59
  br label %4078

4078:                                             ; preds = %4076, %3988, %3984, %3968
  %4079 = phi { ptr, i32 } [ %4077, %4076 ], [ %3969, %3968 ], [ %3985, %3984 ], [ %3985, %3988 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %208) #57
  br label %4080

4080:                                             ; preds = %4078, %3966
  %4081 = phi { ptr, i32 } [ %4079, %4078 ], [ %3967, %3966 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %202) #59
  br label %4082

4082:                                             ; preds = %4080, %3954, %3950, %3934
  %4083 = phi { ptr, i32 } [ %4081, %4080 ], [ %3935, %3934 ], [ %3951, %3950 ], [ %3951, %3954 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %202) #57
  br label %4084

4084:                                             ; preds = %4082, %3932
  %4085 = phi { ptr, i32 } [ %4083, %4082 ], [ %3933, %3932 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %196) #59
  br label %4086

4086:                                             ; preds = %4084, %3920, %3916, %3900
  %4087 = phi { ptr, i32 } [ %4085, %4084 ], [ %3901, %3900 ], [ %3917, %3916 ], [ %3917, %3920 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %196) #57
  br label %4088

4088:                                             ; preds = %4086, %3898
  %4089 = phi { ptr, i32 } [ %4087, %4086 ], [ %3899, %3898 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %190) #59
  br label %4090

4090:                                             ; preds = %4088, %3886, %3882, %3866
  %4091 = phi { ptr, i32 } [ %4089, %4088 ], [ %3867, %3866 ], [ %3883, %3882 ], [ %3883, %3886 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %190) #57
  br label %4092

4092:                                             ; preds = %4090, %3864
  %4093 = phi { ptr, i32 } [ %4091, %4090 ], [ %3865, %3864 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %184) #59
  br label %4094

4094:                                             ; preds = %4092, %3852, %3848, %3832
  %4095 = phi { ptr, i32 } [ %4093, %4092 ], [ %3833, %3832 ], [ %3849, %3848 ], [ %3849, %3852 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %184) #57
  br label %4096

4096:                                             ; preds = %4094, %3830
  %4097 = phi { ptr, i32 } [ %4095, %4094 ], [ %3831, %3830 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %178) #59
  br label %4098

4098:                                             ; preds = %4096, %3818, %3814, %3798
  %4099 = phi { ptr, i32 } [ %4097, %4096 ], [ %3799, %3798 ], [ %3815, %3814 ], [ %3815, %3818 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %178) #57
  br label %4100

4100:                                             ; preds = %4098, %3796
  %4101 = phi { ptr, i32 } [ %4099, %4098 ], [ %3797, %3796 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %172) #59
  br label %4102

4102:                                             ; preds = %4100, %3784, %3780, %3764
  %4103 = phi { ptr, i32 } [ %4101, %4100 ], [ %3765, %3764 ], [ %3781, %3780 ], [ %3781, %3784 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %172) #57
  br label %4104

4104:                                             ; preds = %4102, %3762
  %4105 = phi { ptr, i32 } [ %4103, %4102 ], [ %3763, %3762 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %166) #59
  br label %4106

4106:                                             ; preds = %4104, %3750, %3746, %3730
  %4107 = phi { ptr, i32 } [ %4105, %4104 ], [ %3731, %3730 ], [ %3747, %3746 ], [ %3747, %3750 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %166) #57
  br label %4108

4108:                                             ; preds = %4106, %3728
  %4109 = phi { ptr, i32 } [ %4107, %4106 ], [ %3729, %3728 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %160) #59
  br label %4110

4110:                                             ; preds = %4108, %3716, %3712, %3696
  %4111 = phi { ptr, i32 } [ %4109, %4108 ], [ %3697, %3696 ], [ %3713, %3712 ], [ %3713, %3716 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %160) #57
  br label %4112

4112:                                             ; preds = %4110, %3694
  %4113 = phi { ptr, i32 } [ %4111, %4110 ], [ %3695, %3694 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %154) #59
  br label %4114

4114:                                             ; preds = %4112, %3682, %3678, %3662
  %4115 = phi { ptr, i32 } [ %4113, %4112 ], [ %3663, %3662 ], [ %3679, %3678 ], [ %3679, %3682 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %154) #57
  br label %4116

4116:                                             ; preds = %4114, %3660
  %4117 = phi { ptr, i32 } [ %4115, %4114 ], [ %3661, %3660 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %148) #59
  br label %4118

4118:                                             ; preds = %4116, %3648, %3644, %3628
  %4119 = phi { ptr, i32 } [ %4117, %4116 ], [ %3629, %3628 ], [ %3645, %3644 ], [ %3645, %3648 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %148) #57
  br label %4120

4120:                                             ; preds = %4118, %3626
  %4121 = phi { ptr, i32 } [ %4119, %4118 ], [ %3627, %3626 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %142) #59
  br label %4122

4122:                                             ; preds = %4120, %3614, %3610, %3594
  %4123 = phi { ptr, i32 } [ %4121, %4120 ], [ %3595, %3594 ], [ %3611, %3610 ], [ %3611, %3614 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %142) #57
  br label %4124

4124:                                             ; preds = %4122, %3592
  %4125 = phi { ptr, i32 } [ %4123, %4122 ], [ %3593, %3592 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %136) #59
  br label %4126

4126:                                             ; preds = %4124, %3580, %3576, %3560
  %4127 = phi { ptr, i32 } [ %4125, %4124 ], [ %3561, %3560 ], [ %3577, %3576 ], [ %3577, %3580 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %136) #57
  br label %4128

4128:                                             ; preds = %4126, %3558
  %4129 = phi { ptr, i32 } [ %4127, %4126 ], [ %3559, %3558 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %130) #59
  br label %4130

4130:                                             ; preds = %4128, %3546, %3542, %3526
  %4131 = phi { ptr, i32 } [ %4129, %4128 ], [ %3527, %3526 ], [ %3543, %3542 ], [ %3543, %3546 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %130) #57
  br label %4132

4132:                                             ; preds = %4130, %3524
  %4133 = phi { ptr, i32 } [ %4131, %4130 ], [ %3525, %3524 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %124) #59
  br label %4134

4134:                                             ; preds = %4132, %3512, %3508, %3492
  %4135 = phi { ptr, i32 } [ %4133, %4132 ], [ %3493, %3492 ], [ %3509, %3508 ], [ %3509, %3512 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %124) #57
  br label %4136

4136:                                             ; preds = %4134, %3490
  %4137 = phi { ptr, i32 } [ %4135, %4134 ], [ %3491, %3490 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %118) #59
  br label %4138

4138:                                             ; preds = %4136, %3478, %3474, %3458
  %4139 = phi { ptr, i32 } [ %4137, %4136 ], [ %3459, %3458 ], [ %3475, %3474 ], [ %3475, %3478 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %118) #57
  br label %4140

4140:                                             ; preds = %4138, %3456
  %4141 = phi { ptr, i32 } [ %4139, %4138 ], [ %3457, %3456 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %112) #59
  br label %4142

4142:                                             ; preds = %4140, %3444, %3440, %3424
  %4143 = phi { ptr, i32 } [ %4141, %4140 ], [ %3425, %3424 ], [ %3441, %3440 ], [ %3441, %3444 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %112) #57
  br label %4144

4144:                                             ; preds = %4142, %3422
  %4145 = phi { ptr, i32 } [ %4143, %4142 ], [ %3423, %3422 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %106) #59
  br label %4146

4146:                                             ; preds = %4144, %3410, %3406, %3390
  %4147 = phi { ptr, i32 } [ %4145, %4144 ], [ %3391, %3390 ], [ %3407, %3406 ], [ %3407, %3410 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %106) #57
  br label %4148

4148:                                             ; preds = %4146, %3388
  %4149 = phi { ptr, i32 } [ %4147, %4146 ], [ %3389, %3388 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %100) #59
  br label %4150

4150:                                             ; preds = %4148, %3376, %3372, %3356
  %4151 = phi { ptr, i32 } [ %4149, %4148 ], [ %3357, %3356 ], [ %3373, %3372 ], [ %3373, %3376 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %100) #57
  br label %4152

4152:                                             ; preds = %4150, %3354
  %4153 = phi { ptr, i32 } [ %4151, %4150 ], [ %3355, %3354 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %94) #59
  br label %4154

4154:                                             ; preds = %4152, %3342, %3338, %3322
  %4155 = phi { ptr, i32 } [ %4153, %4152 ], [ %3323, %3322 ], [ %3339, %3338 ], [ %3339, %3342 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %94) #57
  br label %4156

4156:                                             ; preds = %4154, %3320
  %4157 = phi { ptr, i32 } [ %4155, %4154 ], [ %3321, %3320 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %88) #59
  br label %4158

4158:                                             ; preds = %4156, %3308, %3304, %3288
  %4159 = phi { ptr, i32 } [ %4157, %4156 ], [ %3289, %3288 ], [ %3305, %3304 ], [ %3305, %3308 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %88) #57
  br label %4160

4160:                                             ; preds = %4158, %3286
  %4161 = phi { ptr, i32 } [ %4159, %4158 ], [ %3287, %3286 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %82) #59
  br label %4162

4162:                                             ; preds = %4160, %3274, %3270, %3254
  %4163 = phi { ptr, i32 } [ %4161, %4160 ], [ %3255, %3254 ], [ %3271, %3270 ], [ %3271, %3274 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %82) #57
  br label %4164

4164:                                             ; preds = %4162, %3252
  %4165 = phi { ptr, i32 } [ %4163, %4162 ], [ %3253, %3252 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %76) #59
  br label %4166

4166:                                             ; preds = %4164, %3240, %3236, %3220
  %4167 = phi { ptr, i32 } [ %4165, %4164 ], [ %3221, %3220 ], [ %3237, %3236 ], [ %3237, %3240 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %76) #57
  br label %4168

4168:                                             ; preds = %4166, %3218
  %4169 = phi { ptr, i32 } [ %4167, %4166 ], [ %3219, %3218 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %70) #59
  br label %4170

4170:                                             ; preds = %4168, %3206, %3202, %3186
  %4171 = phi { ptr, i32 } [ %4169, %4168 ], [ %3187, %3186 ], [ %3203, %3202 ], [ %3203, %3206 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %70) #57
  br label %4172

4172:                                             ; preds = %4170, %3184
  %4173 = phi { ptr, i32 } [ %4171, %4170 ], [ %3185, %3184 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %64) #59
  br label %4174

4174:                                             ; preds = %4172, %3172, %3168, %3152
  %4175 = phi { ptr, i32 } [ %4173, %4172 ], [ %3153, %3152 ], [ %3169, %3168 ], [ %3169, %3172 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %64) #57
  br label %4176

4176:                                             ; preds = %4174, %3150
  %4177 = phi { ptr, i32 } [ %4175, %4174 ], [ %3151, %3150 ]
  call void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %58) #59
  br label %4178

4178:                                             ; preds = %4176, %3138, %3134, %3118
  %4179 = phi { ptr, i32 } [ %4177, %4176 ], [ %3119, %3118 ], [ %3135, %3134 ], [ %3135, %3138 ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %58) #57
  br label %4180

4180:                                             ; preds = %4178, %3116
  %4181 = phi { ptr, i32 } [ %4179, %4178 ], [ %3117, %3116 ]
  call void @_ZN2PP8VariableD2Ev(ptr noundef nonnull align 8 dereferenceable(136) %52) #59
  br label %4182

4182:                                             ; preds = %4180, %3104, %3100, %3084
  %4183 = phi { ptr, i32 } [ %4181, %4180 ], [ %3085, %3084 ], [ %3101, %3100 ], [ %3101, %3104 ]
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %52) #57
  call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %50) #59
  br label %4184

4184:                                             ; preds = %4182, %3083, %3079, %3077
  %4185 = phi { ptr, i32 } [ %4183, %4182 ], [ %3078, %3077 ], [ %3080, %3079 ], [ %3080, %3083 ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %50) #57
  br label %4186

4186:                                             ; preds = %4184, %3075
  %4187 = phi { ptr, i32 } [ %4185, %4184 ], [ %3076, %3075 ]
  call void @_ZN2PP8VariableD2Ev(ptr noundef nonnull align 8 dereferenceable(136) %44) #59
  br label %4188

4188:                                             ; preds = %4186, %3063, %3059, %3043
  %4189 = phi { ptr, i32 } [ %4187, %4186 ], [ %3044, %3043 ], [ %3060, %3059 ], [ %3060, %3063 ]
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %44) #57
  call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %42) #59
  br label %4190

4190:                                             ; preds = %4188, %3042, %3038, %3036
  %4191 = phi { ptr, i32 } [ %4189, %4188 ], [ %3037, %3036 ], [ %3039, %3038 ], [ %3039, %3042 ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %42) #57
  br label %4192

4192:                                             ; preds = %4190, %3034
  %4193 = phi { ptr, i32 } [ %4191, %4190 ], [ %3035, %3034 ]
  call void @_ZN2PP8VariableD2Ev(ptr noundef nonnull align 8 dereferenceable(136) %36) #59
  br label %4194

4194:                                             ; preds = %4192, %3022, %3018, %3002
  %4195 = phi { ptr, i32 } [ %4193, %4192 ], [ %3003, %3002 ], [ %3019, %3018 ], [ %3019, %3022 ]
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %36) #57
  call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %34) #59
  br label %4196

4196:                                             ; preds = %4194, %3001, %2997, %2995
  %4197 = phi { ptr, i32 } [ %4195, %4194 ], [ %2996, %2995 ], [ %2998, %2997 ], [ %2998, %3001 ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %34) #57
  br label %4198

4198:                                             ; preds = %4196, %2993
  %4199 = phi { ptr, i32 } [ %4197, %4196 ], [ %2994, %2993 ]
  call void @_ZN2PP8VariableD2Ev(ptr noundef nonnull align 8 dereferenceable(136) %28) #59
  br label %4200

4200:                                             ; preds = %4198, %2981, %2977, %2961
  %4201 = phi { ptr, i32 } [ %4199, %4198 ], [ %2962, %2961 ], [ %2978, %2977 ], [ %2978, %2981 ]
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %28) #57
  call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %26) #59
  br label %4202

4202:                                             ; preds = %4200, %2960, %2956, %2954
  %4203 = phi { ptr, i32 } [ %4201, %4200 ], [ %2955, %2954 ], [ %2957, %2956 ], [ %2957, %2960 ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %26) #57
  br label %4204

4204:                                             ; preds = %4202, %2952
  %4205 = phi { ptr, i32 } [ %4203, %4202 ], [ %2953, %2952 ]
  call void @_ZN2PP8VariableD2Ev(ptr noundef nonnull align 8 dereferenceable(136) %20) #59
  br label %4206

4206:                                             ; preds = %4204, %2940, %2936, %2920
  %4207 = phi { ptr, i32 } [ %4205, %4204 ], [ %2921, %2920 ], [ %2937, %2936 ], [ %2937, %2940 ]
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %20) #57
  call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %18) #59
  br label %4208

4208:                                             ; preds = %4206, %2919, %2915, %2913
  %4209 = phi { ptr, i32 } [ %4207, %4206 ], [ %2914, %2913 ], [ %2916, %2915 ], [ %2916, %2919 ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %18) #57
  br label %4210

4210:                                             ; preds = %4208, %2911
  %4211 = phi { ptr, i32 } [ %4209, %4208 ], [ %2912, %2911 ]
  call void @_ZN2PP8VariableD2Ev(ptr noundef nonnull align 8 dereferenceable(136) %12) #59
  br label %4212

4212:                                             ; preds = %4210, %2899, %2895, %2879
  %4213 = phi { ptr, i32 } [ %4211, %4210 ], [ %2880, %2879 ], [ %2896, %2895 ], [ %2896, %2899 ]
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %12) #57
  call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %10) #59
  br label %4214

4214:                                             ; preds = %4212, %2878, %2874, %2872
  %4215 = phi { ptr, i32 } [ %4213, %4212 ], [ %2873, %2872 ], [ %2875, %2874 ], [ %2875, %2878 ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %10) #57
  br label %4216

4216:                                             ; preds = %4214, %2870
  %4217 = phi { ptr, i32 } [ %4215, %4214 ], [ %2871, %2870 ]
  call void @_ZN2PP8VariableD2Ev(ptr noundef nonnull align 8 dereferenceable(136) %4) #59
  br label %4218

4218:                                             ; preds = %4216, %2858, %2854, %2838
  %4219 = phi { ptr, i32 } [ %4217, %4216 ], [ %2839, %2838 ], [ %2855, %2854 ], [ %2855, %2858 ]
  call void @llvm.lifetime.end.p0(i64 136, ptr nonnull %4) #57
  call void @_ZN2PP4WordD1Ev(ptr noundef nonnull align 8 dereferenceable(128) %2) #59
  br label %4220

4220:                                             ; preds = %4218, %2837, %2833
  %4221 = phi { ptr, i32 } [ %4219, %4218 ], [ %2834, %2833 ], [ %2834, %2837 ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %2) #57
  resume { ptr, i32 } %4221
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt11_Deque_baseIiSaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !287
  %3 = icmp eq ptr %2, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !423
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !424
  %9 = getelementptr inbounds ptr, ptr %8, i64 1
  %10 = icmp ult ptr %6, %9
  br i1 %10, label %11, label %18

11:                                               ; preds = %11, %4
  %12 = phi ptr [ %14, %11 ], [ %6, %4 ]
  %13 = load ptr, ptr %12, align 8, !tbaa !29
  tail call void @_ZdlPv(ptr noundef %13) #58
  %14 = getelementptr inbounds ptr, ptr %12, i64 1
  %15 = icmp ult ptr %12, %8
  br i1 %15, label %11, label %16, !llvm.loop !425

16:                                               ; preds = %11
  %17 = load ptr, ptr %0, align 8, !tbaa !287
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi ptr [ %17, %16 ], [ %2, %4 ]
  tail call void @_ZdlPv(ptr noundef %19) #58
  br label %20

20:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt11_Deque_baseIbSaIbEED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !280
  %3 = icmp eq ptr %2, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !426
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !427
  %9 = getelementptr inbounds ptr, ptr %8, i64 1
  %10 = icmp ult ptr %6, %9
  br i1 %10, label %11, label %18

11:                                               ; preds = %11, %4
  %12 = phi ptr [ %14, %11 ], [ %6, %4 ]
  %13 = load ptr, ptr %12, align 8, !tbaa !29
  tail call void @_ZdlPv(ptr noundef %13) #58
  %14 = getelementptr inbounds ptr, ptr %12, i64 1
  %15 = icmp ult ptr %12, %8
  br i1 %15, label %11, label %16, !llvm.loop !428

16:                                               ; preds = %11
  %17 = load ptr, ptr %0, align 8, !tbaa !280
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi ptr [ %17, %16 ], [ %2, %4 ]
  tail call void @_ZdlPv(ptr noundef %19) #58
  br label %20

20:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"struct.std::_Deque_iterator", align 16
  %3 = alloca %"struct.std::_Deque_iterator", align 16
  %4 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  %6 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3)
  %8 = load <2 x ptr>, ptr %4, align 8, !tbaa !29, !noalias !429
  store <2 x ptr> %8, ptr %2, align 16, !tbaa !29
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 2
  %10 = load <2 x ptr>, ptr %5, align 8, !tbaa !29, !noalias !429
  store <2 x ptr> %10, ptr %9, align 16, !tbaa !29
  %11 = load <2 x ptr>, ptr %6, align 8, !tbaa !29, !noalias !432
  store <2 x ptr> %11, ptr %3, align 16, !tbaa !29
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %3, i64 0, i32 2
  %13 = load <2 x ptr>, ptr %7, align 8, !tbaa !29, !noalias !432
  store <2 x ptr> %13, ptr %12, align 16, !tbaa !29
  invoke void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull %2, ptr noundef nonnull %3) #56
          to label %14 unwind label %15

14:                                               ; preds = %1
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3)
  call void @_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) #59
  ret void

15:                                               ; preds = %1
  %16 = landingpad { ptr, i32 }
          catch ptr null
  %17 = extractvalue { ptr, i32 } %16, 0
  call void @__clang_call_terminate(ptr %17) #60
  unreachable
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"struct.std::_Deque_iterator", align 16
  %3 = alloca %"struct.std::_Deque_iterator", align 16
  %4 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  %6 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3)
  %8 = load <2 x ptr>, ptr %4, align 8, !tbaa !29, !noalias !435
  store <2 x ptr> %8, ptr %2, align 16, !tbaa !29
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 2
  %10 = load <2 x ptr>, ptr %5, align 8, !tbaa !29, !noalias !435
  store <2 x ptr> %10, ptr %9, align 16, !tbaa !29
  %11 = load <2 x ptr>, ptr %6, align 8, !tbaa !29, !noalias !438
  store <2 x ptr> %11, ptr %3, align 16, !tbaa !29
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %3, i64 0, i32 2
  %13 = load <2 x ptr>, ptr %7, align 8, !tbaa !29, !noalias !438
  store <2 x ptr> %13, ptr %12, align 16, !tbaa !29
  invoke void @_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull %2, ptr noundef nonnull %3) #56
          to label %14 unwind label %15

14:                                               ; preds = %1
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3)
  call void @_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) #59
  ret void

15:                                               ; preds = %1
  %16 = landingpad { ptr, i32 }
          catch ptr null
  %17 = extractvalue { ptr, i32 } %16, 0
  call void @__clang_call_terminate(ptr %17) #60
  unreachable
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"struct.std::_Deque_iterator", align 16
  %3 = alloca %"struct.std::_Deque_iterator", align 16
  %4 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  %6 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3)
  %8 = load <2 x ptr>, ptr %4, align 8, !tbaa !29, !noalias !441
  store <2 x ptr> %8, ptr %2, align 16, !tbaa !29
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 2
  %10 = load <2 x ptr>, ptr %5, align 8, !tbaa !29, !noalias !441
  store <2 x ptr> %10, ptr %9, align 16, !tbaa !29
  %11 = load <2 x ptr>, ptr %6, align 8, !tbaa !29, !noalias !444
  store <2 x ptr> %11, ptr %3, align 16, !tbaa !29
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %3, i64 0, i32 2
  %13 = load <2 x ptr>, ptr %7, align 8, !tbaa !29, !noalias !444
  store <2 x ptr> %13, ptr %12, align 16, !tbaa !29
  invoke void @_ZNSt5dequeIN2PP8WhenthenESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull %2, ptr noundef nonnull %3) #56
          to label %14 unwind label %15

14:                                               ; preds = %1
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3)
  call void @_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) #59
  ret void

15:                                               ; preds = %1
  %16 = landingpad { ptr, i32 }
          catch ptr null
  %17 = extractvalue { ptr, i32 } %16, 0
  call void @__clang_call_terminate(ptr %17) #60
  unreachable
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"struct.std::_Deque_iterator", align 16
  %3 = alloca %"struct.std::_Deque_iterator", align 16
  %4 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  %6 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3)
  %8 = load <2 x ptr>, ptr %4, align 8, !tbaa !29, !noalias !447
  store <2 x ptr> %8, ptr %2, align 16, !tbaa !29
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 2
  %10 = load <2 x ptr>, ptr %5, align 8, !tbaa !29, !noalias !447
  store <2 x ptr> %10, ptr %9, align 16, !tbaa !29
  %11 = load <2 x ptr>, ptr %6, align 8, !tbaa !29, !noalias !450
  store <2 x ptr> %11, ptr %3, align 16, !tbaa !29
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %3, i64 0, i32 2
  %13 = load <2 x ptr>, ptr %7, align 8, !tbaa !29, !noalias !450
  store <2 x ptr> %13, ptr %12, align 16, !tbaa !29
  invoke void @_ZNSt5dequeIN2PP3CmdESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull %2, ptr noundef nonnull %3) #56
          to label %14 unwind label %15

14:                                               ; preds = %1
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3)
  call void @_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) #59
  ret void

15:                                               ; preds = %1
  %16 = landingpad { ptr, i32 }
          catch ptr null
  %17 = extractvalue { ptr, i32 } %16, 0
  call void @__clang_call_terminate(ptr %17) #60
  unreachable
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !71
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %3) #56
          to label %4 unwind label %5

4:                                                ; preds = %1
  ret void

5:                                                ; preds = %1
  %6 = landingpad { ptr, i32 }
          catch ptr null
  %7 = extractvalue { ptr, i32 } %6, 0
  tail call void @__clang_call_terminate(ptr %7) #60
  unreachable
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !71
  invoke void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %3) #56
          to label %4 unwind label %5

4:                                                ; preds = %1
  ret void

5:                                                ; preds = %1
  %6 = landingpad { ptr, i32 }
          catch ptr null
  %7 = extractvalue { ptr, i32 } %6, 0
  tail call void @__clang_call_terminate(ptr %7) #60
  unreachable
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !71
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %3) #56
          to label %4 unwind label %5

4:                                                ; preds = %1
  ret void

5:                                                ; preds = %1
  %6 = landingpad { ptr, i32 }
          catch ptr null
  %7 = extractvalue { ptr, i32 } %6, 0
  tail call void @__clang_call_terminate(ptr %7) #60
  unreachable
}

; Function Attrs: nounwind optsize uwtable
define available_externally void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(ptr noundef nonnull align 8 dereferenceable(248) %0) unnamed_addr #10 align 2 {
  %2 = load ptr, ptr @_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE, align 8
  store ptr %2, ptr %0, align 8, !tbaa !51
  %3 = load ptr, ptr getelementptr inbounds ([4 x ptr], ptr @_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE, i64 0, i64 3), align 8
  %4 = getelementptr i8, ptr %2, i64 -24
  %5 = load i64, ptr %4, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 %5
  store ptr %3, ptr %6, align 8, !tbaa !51
  %7 = getelementptr inbounds %"class.std::basic_ofstream", ptr %0, i64 0, i32 1
  tail call void @_ZNSt13basic_filebufIcSt11char_traitsIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(240) %7) #59
  %8 = getelementptr inbounds i8, ptr %0, i64 248
  tail call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %8) #59
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %4, %2
  %5 = phi ptr [ %9, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !81
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %7) #56
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !186
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %5, i64 0, i32 1
  tail call void @_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEEE7destroyISB_EEvPT_(ptr noundef nonnull align 1 dereferenceable(1) %0, ptr noundef nonnull %10) #59
  tail call void @_ZdlPv(ptr noundef nonnull %5) #58
  %11 = icmp eq ptr %9, null
  br i1 %11, label %12, label %4, !llvm.loop !453

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %15, %2
  %5 = phi ptr [ %9, %15 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !81
  tail call void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %7) #56
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !186
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %5, i64 0, i32 1, i32 0, i64 8
  %11 = load ptr, ptr %10, align 8, !tbaa !23
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %5, i64 0, i32 1, i32 0, i64 24
  %13 = icmp eq ptr %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  tail call void @_ZdlPv(ptr noundef %11) #58
  br label %15

15:                                               ; preds = %14, %4
  tail call void @_ZdlPv(ptr noundef nonnull %5) #58
  %16 = icmp eq ptr %9, null
  br i1 %16, label %17, label %4, !llvm.loop !454

17:                                               ; preds = %15, %2
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %4, %2
  %5 = phi ptr [ %9, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !81
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %7) #56
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %5, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !186
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node.123", ptr %5, i64 0, i32 1
  tail call void @_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEEE7destroyISB_EEvPT_(ptr noundef nonnull align 1 dereferenceable(1) %0, ptr noundef nonnull %10) #59
  tail call void @_ZdlPv(ptr noundef nonnull %5) #58
  %11 = icmp eq ptr %9, null
  br i1 %11, label %12, label %4, !llvm.loop !455

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEEE7destroyISB_EEvPT_(ptr noundef nonnull align 1 dereferenceable(1) %0, ptr noundef %1) #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 4
  %5 = load ptr, ptr %4, align 8, !tbaa !23
  %6 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 4, i32 2
  %7 = icmp eq ptr %5, %6
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @_ZdlPv(ptr noundef %5) #58
  br label %9

9:                                                ; preds = %8, %2
  %10 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !23
  %12 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 3, i32 2
  %13 = icmp eq ptr %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  tail call void @_ZdlPv(ptr noundef %11) #58
  br label %15

15:                                               ; preds = %14, %9
  %16 = load ptr, ptr %3, align 8, !tbaa !23
  %17 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 0, i32 2
  %18 = icmp eq ptr %16, %17
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @_ZdlPv(ptr noundef %16) #58
  br label %20

20:                                               ; preds = %19, %15
  %21 = load ptr, ptr %1, align 8, !tbaa !23
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 2
  %23 = icmp eq ptr %21, %22
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @_ZdlPv(ptr noundef %21) #58
  br label %25

25:                                               ; preds = %24, %20
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt5dequeIN2PP3CmdESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !260
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 3
  %7 = getelementptr inbounds ptr, ptr %5, i64 1
  %8 = load ptr, ptr %6, align 8, !tbaa !260
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %17, label %12

10:                                               ; preds = %17
  %.lcssa = phi ptr [ %21, %17 ]
  %11 = load ptr, ptr %4, align 8, !tbaa !260
  br label %12

12:                                               ; preds = %10, %3
  %13 = phi ptr [ %5, %3 ], [ %11, %10 ]
  %14 = phi ptr [ %8, %3 ], [ %.lcssa, %10 ]
  %15 = icmp eq ptr %13, %14
  %16 = load ptr, ptr %1, align 8, !tbaa !456
  br i1 %15, label %40, label %23

17:                                               ; preds = %17, %3
  %18 = phi ptr [ %20, %17 ], [ %7, %3 ]
  %19 = load ptr, ptr %18, align 8, !tbaa !29
  tail call void @_ZN2PP3CmdD2Ev(ptr noundef nonnull align 8 dereferenceable(432) %19) #59
  %20 = getelementptr inbounds ptr, ptr %18, i64 1
  %21 = load ptr, ptr %6, align 8, !tbaa !260
  %22 = icmp ult ptr %20, %21
  br i1 %22, label %17, label %10, !llvm.loop !457

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !262
  %26 = icmp eq ptr %16, %25
  br i1 %26, label %31, label %27

27:                                               ; preds = %27, %23
  %28 = phi ptr [ %29, %27 ], [ %16, %23 ]
  tail call void @_ZN2PP3CmdD2Ev(ptr noundef nonnull align 8 dereferenceable(432) %28) #59
  %29 = getelementptr inbounds %"class.PP::Cmd.113", ptr %28, i64 1
  %30 = icmp eq ptr %29, %25
  br i1 %30, label %31, label %27, !llvm.loop !458

31:                                               ; preds = %27, %23
  %32 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !261
  %34 = load ptr, ptr %2, align 8, !tbaa !456
  %35 = icmp eq ptr %33, %34
  br i1 %35, label %47, label %36

36:                                               ; preds = %36, %31
  %37 = phi ptr [ %38, %36 ], [ %33, %31 ]
  tail call void @_ZN2PP3CmdD2Ev(ptr noundef nonnull align 8 dereferenceable(432) %37) #59
  %38 = getelementptr inbounds %"class.PP::Cmd.113", ptr %37, i64 1
  %39 = icmp eq ptr %38, %34
  br i1 %39, label %47, label %36, !llvm.loop !458

40:                                               ; preds = %12
  %41 = load ptr, ptr %2, align 8, !tbaa !456
  %42 = icmp eq ptr %16, %41
  br i1 %42, label %47, label %43

43:                                               ; preds = %43, %40
  %44 = phi ptr [ %45, %43 ], [ %16, %40 ]
  tail call void @_ZN2PP3CmdD2Ev(ptr noundef nonnull align 8 dereferenceable(432) %44) #59
  %45 = getelementptr inbounds %"class.PP::Cmd.113", ptr %44, i64 1
  %46 = icmp eq ptr %45, %41
  br i1 %46, label %47, label %43, !llvm.loop !458

47:                                               ; preds = %43, %40, %36, %31
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !259
  %3 = icmp eq ptr %2, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !459
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !460
  %9 = getelementptr inbounds ptr, ptr %8, i64 1
  %10 = icmp ult ptr %6, %9
  br i1 %10, label %11, label %18

11:                                               ; preds = %11, %4
  %12 = phi ptr [ %14, %11 ], [ %6, %4 ]
  %13 = load ptr, ptr %12, align 8, !tbaa !29
  tail call void @_ZdlPv(ptr noundef %13) #58
  %14 = getelementptr inbounds ptr, ptr %12, i64 1
  %15 = icmp ult ptr %12, %8
  br i1 %15, label %11, label %16, !llvm.loop !461

16:                                               ; preds = %11
  %17 = load ptr, ptr %0, align 8, !tbaa !259
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi ptr [ %17, %16 ], [ %2, %4 ]
  tail call void @_ZdlPv(ptr noundef %19) #58
  br label %20

20:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN2PP3CmdD2Ev(ptr noundef nonnull align 8 dereferenceable(432) %0) unnamed_addr #24 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 15
  invoke void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(ptr noundef nonnull align 8 dereferenceable(40) %2) #56
          to label %6 unwind label %3

3:                                                ; preds = %1
  %4 = landingpad { ptr, i32 }
          catch ptr null
  %5 = extractvalue { ptr, i32 } %4, 0
  tail call void @__clang_call_terminate(ptr %5) #60
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 14
  invoke void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(ptr noundef nonnull align 8 dereferenceable(40) %7) #56
          to label %11 unwind label %8

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          catch ptr null
  %10 = extractvalue { ptr, i32 } %9, 0
  tail call void @__clang_call_terminate(ptr %10) #60
  unreachable

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 13
  tail call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %12) #59
  %13 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 12
  tail call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %13) #59
  %14 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 11
  %15 = load ptr, ptr %14, align 8, !tbaa !23
  %16 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 11, i32 2
  %17 = icmp eq ptr %15, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef %15) #58
  br label %19

19:                                               ; preds = %18, %11
  %20 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 10
  %21 = load ptr, ptr %20, align 8, !tbaa !23
  %22 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 10, i32 2
  %23 = icmp eq ptr %21, %22
  br i1 %23, label %25, label %24

24:                                               ; preds = %19
  tail call void @_ZdlPv(ptr noundef %21) #58
  br label %25

25:                                               ; preds = %24, %19
  %26 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 9
  tail call void @_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %26) #59
  %27 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 8
  %28 = load ptr, ptr %27, align 8, !tbaa !23
  %29 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 8, i32 2
  %30 = icmp eq ptr %28, %29
  br i1 %30, label %32, label %31

31:                                               ; preds = %25
  tail call void @_ZdlPv(ptr noundef %28) #58
  br label %32

32:                                               ; preds = %31, %25
  %33 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 7
  %34 = load ptr, ptr %33, align 8, !tbaa !23
  %35 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 7, i32 2
  %36 = icmp eq ptr %34, %35
  br i1 %36, label %38, label %37

37:                                               ; preds = %32
  tail call void @_ZdlPv(ptr noundef %34) #58
  br label %38

38:                                               ; preds = %37, %32
  %39 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 4
  %40 = load ptr, ptr %39, align 8, !tbaa !23
  %41 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 4, i32 2
  %42 = icmp eq ptr %40, %41
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  tail call void @_ZdlPv(ptr noundef %40) #58
  br label %44

44:                                               ; preds = %43, %38
  %45 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 2
  %46 = load ptr, ptr %45, align 8, !tbaa !23
  %47 = getelementptr inbounds %"class.PP::Cmd.113", ptr %0, i64 0, i32 2, i32 2
  %48 = icmp eq ptr %46, %47
  br i1 %48, label %50, label %49

49:                                               ; preds = %44
  tail call void @_ZdlPv(ptr noundef %46) #58
  br label %50

50:                                               ; preds = %49, %44
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt5dequeIN2PP8WhenthenESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !267
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 3
  %7 = getelementptr inbounds ptr, ptr %5, i64 1
  %8 = load ptr, ptr %6, align 8, !tbaa !267
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %17, label %12

10:                                               ; preds = %17
  %.lcssa = phi ptr [ %22, %17 ]
  %11 = load ptr, ptr %4, align 8, !tbaa !267
  br label %12

12:                                               ; preds = %10, %3
  %13 = phi ptr [ %5, %3 ], [ %11, %10 ]
  %14 = phi ptr [ %8, %3 ], [ %.lcssa, %10 ]
  %15 = icmp eq ptr %13, %14
  %16 = load ptr, ptr %1, align 8, !tbaa !462
  br i1 %15, label %29, label %24

17:                                               ; preds = %17, %3
  %18 = phi ptr [ %21, %17 ], [ %7, %3 ]
  %19 = load ptr, ptr %18, align 8, !tbaa !29
  %20 = getelementptr inbounds %"class.PP::Whenthen", ptr %19, i64 1
  tail call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN2PP8WhenthenEEEvT_S5_(ptr noundef %19, ptr noundef nonnull %20) #56
  %21 = getelementptr inbounds ptr, ptr %18, i64 1
  %22 = load ptr, ptr %6, align 8, !tbaa !267
  %23 = icmp ult ptr %21, %22
  br i1 %23, label %17, label %10, !llvm.loop !463

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !269
  tail call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN2PP8WhenthenEEEvT_S5_(ptr noundef %16, ptr noundef %26) #56
  %27 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !268
  br label %29

29:                                               ; preds = %24, %12
  %30 = phi ptr [ %28, %24 ], [ %16, %12 ]
  %31 = load ptr, ptr %2, align 8, !tbaa !462
  tail call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN2PP8WhenthenEEEvT_S5_(ptr noundef %30, ptr noundef %31) #56
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !266
  %3 = icmp eq ptr %2, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !464
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !465
  %9 = getelementptr inbounds ptr, ptr %8, i64 1
  %10 = icmp ult ptr %6, %9
  br i1 %10, label %11, label %18

11:                                               ; preds = %11, %4
  %12 = phi ptr [ %14, %11 ], [ %6, %4 ]
  %13 = load ptr, ptr %12, align 8, !tbaa !29
  tail call void @_ZdlPv(ptr noundef %13) #58
  %14 = getelementptr inbounds ptr, ptr %12, i64 1
  %15 = icmp ult ptr %12, %8
  br i1 %15, label %11, label %16, !llvm.loop !466

16:                                               ; preds = %11
  %17 = load ptr, ptr %0, align 8, !tbaa !266
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi ptr [ %17, %16 ], [ %2, %4 ]
  tail call void @_ZdlPv(ptr noundef %19) #58
  br label %20

20:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN2PP8WhenthenEEEvT_S5_(ptr noundef %0, ptr noundef %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %0, %1
  br i1 %3, label %14, label %4

4:                                                ; preds = %4, %2
  %5 = phi ptr [ %12, %4 ], [ %0, %2 ]
  %6 = getelementptr inbounds %"class.PP::Whenthen", ptr %5, i64 0, i32 6
  tail call void @_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %6) #59
  %7 = getelementptr inbounds %"class.PP::Whenthen", ptr %5, i64 0, i32 5
  tail call void @_ZNSt11_Deque_baseIbSaIbEED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %7) #59
  %8 = getelementptr inbounds %"class.PP::Whenthen", ptr %5, i64 0, i32 4
  tail call void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %8) #59
  %9 = getelementptr inbounds %"class.PP::Whenthen", ptr %5, i64 0, i32 3
  tail call void @_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %9) #59
  %10 = getelementptr inbounds %"class.PP::Whenthen", ptr %5, i64 0, i32 2
  tail call void @_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %10) #59
  %11 = getelementptr inbounds %"class.PP::Whenthen", ptr %5, i64 0, i32 1
  tail call void @_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %11) #59
  tail call void @_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %5) #59
  %12 = getelementptr inbounds %"class.PP::Whenthen", ptr %5, i64 1
  %13 = icmp eq ptr %12, %1
  br i1 %13, label %14, label %4, !llvm.loop !467

14:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !274
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 3
  %7 = getelementptr inbounds ptr, ptr %5, i64 1
  %8 = load ptr, ptr %6, align 8, !tbaa !274
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %17, label %12

10:                                               ; preds = %17
  %.lcssa = phi ptr [ %22, %17 ]
  %11 = load ptr, ptr %4, align 8, !tbaa !274
  br label %12

12:                                               ; preds = %10, %3
  %13 = phi ptr [ %5, %3 ], [ %11, %10 ]
  %14 = phi ptr [ %8, %3 ], [ %.lcssa, %10 ]
  %15 = icmp eq ptr %13, %14
  %16 = load ptr, ptr %1, align 8, !tbaa !468
  br i1 %15, label %29, label %24

17:                                               ; preds = %17, %3
  %18 = phi ptr [ %21, %17 ], [ %7, %3 ]
  %19 = load ptr, ptr %18, align 8, !tbaa !29
  %20 = getelementptr inbounds %"class.PP::Restartblock", ptr %19, i64 1
  tail call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN2PP12RestartblockEEEvT_S5_(ptr noundef %19, ptr noundef nonnull %20) #56
  %21 = getelementptr inbounds ptr, ptr %18, i64 1
  %22 = load ptr, ptr %6, align 8, !tbaa !274
  %23 = icmp ult ptr %21, %22
  br i1 %23, label %17, label %10, !llvm.loop !469

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !276
  tail call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN2PP12RestartblockEEEvT_S5_(ptr noundef %16, ptr noundef %26) #56
  %27 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !275
  br label %29

29:                                               ; preds = %24, %12
  %30 = phi ptr [ %28, %24 ], [ %16, %12 ]
  %31 = load ptr, ptr %2, align 8, !tbaa !468
  tail call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN2PP12RestartblockEEEvT_S5_(ptr noundef %30, ptr noundef %31) #56
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !273
  %3 = icmp eq ptr %2, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !470
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !471
  %9 = getelementptr inbounds ptr, ptr %8, i64 1
  %10 = icmp ult ptr %6, %9
  br i1 %10, label %11, label %18

11:                                               ; preds = %11, %4
  %12 = phi ptr [ %14, %11 ], [ %6, %4 ]
  %13 = load ptr, ptr %12, align 8, !tbaa !29
  tail call void @_ZdlPv(ptr noundef %13) #58
  %14 = getelementptr inbounds ptr, ptr %12, i64 1
  %15 = icmp ult ptr %12, %8
  br i1 %15, label %11, label %16, !llvm.loop !472

16:                                               ; preds = %11
  %17 = load ptr, ptr %0, align 8, !tbaa !273
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi ptr [ %17, %16 ], [ %2, %4 ]
  tail call void @_ZdlPv(ptr noundef %19) #58
  br label %20

20:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN2PP12RestartblockEEEvT_S5_(ptr noundef %0, ptr noundef %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq ptr %0, %1
  br i1 %3, label %19, label %4

4:                                                ; preds = %11, %2
  %5 = phi ptr [ %17, %11 ], [ %0, %2 ]
  %6 = getelementptr inbounds %"class.PP::Restartblock", ptr %5, i64 0, i32 7
  %7 = load ptr, ptr %6, align 8, !tbaa !23
  %8 = getelementptr inbounds %"class.PP::Restartblock", ptr %5, i64 0, i32 7, i32 2
  %9 = icmp eq ptr %7, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %4
  tail call void @_ZdlPv(ptr noundef %7) #58
  br label %11

11:                                               ; preds = %10, %4
  %12 = getelementptr inbounds %"class.PP::Restartblock", ptr %5, i64 0, i32 5
  tail call void @_ZNSt11_Deque_baseIbSaIbEED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %12) #59
  %13 = getelementptr inbounds %"class.PP::Restartblock", ptr %5, i64 0, i32 4
  tail call void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %13) #59
  %14 = getelementptr inbounds %"class.PP::Restartblock", ptr %5, i64 0, i32 3
  tail call void @_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %14) #59
  %15 = getelementptr inbounds %"class.PP::Restartblock", ptr %5, i64 0, i32 2
  tail call void @_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %15) #59
  %16 = getelementptr inbounds %"class.PP::Restartblock", ptr %5, i64 0, i32 1
  tail call void @_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %16) #59
  tail call void @_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %5) #59
  %17 = getelementptr inbounds %"class.PP::Restartblock", ptr %5, i64 1
  %18 = icmp eq ptr %17, %1
  br i1 %18, label %19, label %4, !llvm.loop !473

19:                                               ; preds = %11, %2
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1, ptr noundef %2) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !253
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 3
  %7 = getelementptr inbounds ptr, ptr %5, i64 1
  %8 = load ptr, ptr %6, align 8, !tbaa !253
  %9 = icmp ult ptr %7, %8
  br i1 %9, label %17, label %12

10:                                               ; preds = %30
  %.lcssa = phi ptr [ %32, %30 ]
  %11 = load ptr, ptr %4, align 8, !tbaa !253
  br label %12

12:                                               ; preds = %10, %3
  %13 = phi ptr [ %5, %3 ], [ %11, %10 ]
  %14 = phi ptr [ %8, %3 ], [ %.lcssa, %10 ]
  %15 = icmp eq ptr %13, %14
  %16 = load ptr, ptr %1, align 8, !tbaa !474
  br i1 %15, label %61, label %34

17:                                               ; preds = %30, %3
  %18 = phi ptr [ %31, %30 ], [ %7, %3 ]
  %19 = load ptr, ptr %18, align 8, !tbaa !29
  br label %20

20:                                               ; preds = %27, %17
  %21 = phi i64 [ %28, %27 ], [ 0, %17 ]
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 %21
  %23 = load ptr, ptr %22, align 8, !tbaa !23
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %19, i64 %21, i32 2
  %25 = icmp eq ptr %23, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %20
  tail call void @_ZdlPv(ptr noundef %23) #58
  br label %27

27:                                               ; preds = %26, %20
  %28 = add nuw nsw i64 %21, 1
  %29 = icmp eq i64 %28, 16
  br i1 %29, label %30, label %20, !llvm.loop !475

30:                                               ; preds = %27
  %31 = getelementptr inbounds ptr, ptr %18, i64 1
  %32 = load ptr, ptr %6, align 8, !tbaa !253
  %33 = icmp ult ptr %31, %32
  br i1 %33, label %17, label %10, !llvm.loop !476

34:                                               ; preds = %12
  %35 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !255
  %37 = icmp eq ptr %16, %36
  br i1 %37, label %47, label %38

38:                                               ; preds = %44, %34
  %39 = phi ptr [ %45, %44 ], [ %16, %34 ]
  %40 = load ptr, ptr %39, align 8, !tbaa !23
  %41 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %39, i64 0, i32 2
  %42 = icmp eq ptr %40, %41
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  tail call void @_ZdlPv(ptr noundef %40) #58
  br label %44

44:                                               ; preds = %43, %38
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %39, i64 1
  %46 = icmp eq ptr %45, %36
  br i1 %46, label %47, label %38, !llvm.loop !475

47:                                               ; preds = %44, %34
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !254
  %50 = load ptr, ptr %2, align 8, !tbaa !474
  %51 = icmp eq ptr %49, %50
  br i1 %51, label %73, label %52

52:                                               ; preds = %58, %47
  %53 = phi ptr [ %59, %58 ], [ %49, %47 ]
  %54 = load ptr, ptr %53, align 8, !tbaa !23
  %55 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %53, i64 0, i32 2
  %56 = icmp eq ptr %54, %55
  br i1 %56, label %58, label %57

57:                                               ; preds = %52
  tail call void @_ZdlPv(ptr noundef %54) #58
  br label %58

58:                                               ; preds = %57, %52
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %53, i64 1
  %60 = icmp eq ptr %59, %50
  br i1 %60, label %73, label %52, !llvm.loop !475

61:                                               ; preds = %12
  %62 = load ptr, ptr %2, align 8, !tbaa !474
  %63 = icmp eq ptr %16, %62
  br i1 %63, label %73, label %64

64:                                               ; preds = %70, %61
  %65 = phi ptr [ %71, %70 ], [ %16, %61 ]
  %66 = load ptr, ptr %65, align 8, !tbaa !23
  %67 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %65, i64 0, i32 2
  %68 = icmp eq ptr %66, %67
  br i1 %68, label %70, label %69

69:                                               ; preds = %64
  tail call void @_ZdlPv(ptr noundef %66) #58
  br label %70

70:                                               ; preds = %69, %64
  %71 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %65, i64 1
  %72 = icmp eq ptr %71, %62
  br i1 %72, label %73, label %64, !llvm.loop !475

73:                                               ; preds = %70, %61, %58, %47
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !252
  %3 = icmp eq ptr %2, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !477
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !478
  %9 = getelementptr inbounds ptr, ptr %8, i64 1
  %10 = icmp ult ptr %6, %9
  br i1 %10, label %11, label %18

11:                                               ; preds = %11, %4
  %12 = phi ptr [ %14, %11 ], [ %6, %4 ]
  %13 = load ptr, ptr %12, align 8, !tbaa !29
  tail call void @_ZdlPv(ptr noundef %13) #58
  %14 = getelementptr inbounds ptr, ptr %12, i64 1
  %15 = icmp ult ptr %12, %8
  br i1 %15, label %11, label %16, !llvm.loop !479

16:                                               ; preds = %11
  %17 = load ptr, ptr %0, align 8, !tbaa !252
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi ptr [ %17, %16 ], [ %2, %4 ]
  tail call void @_ZdlPv(ptr noundef %19) #58
  br label %20

20:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_RS7_Lb1EEEOT_OT0_(ptr noundef nonnull align 8 dereferenceable(136) %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(104) %2) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %4, ptr %0, align 8, !tbaa !78
  %5 = load ptr, ptr %1, align 8, !tbaa !23
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 2
  %7 = icmp eq ptr %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %10 = load i64, ptr %9, align 8, !tbaa !49
  %11 = add i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %4, ptr nonnull align 8 %5, i64 %11, i1 false)
  br label %16

14:                                               ; preds = %3
  store ptr %5, ptr %0, align 8, !tbaa !23
  %15 = load i64, ptr %6, align 8, !tbaa !50
  store i64 %15, ptr %4, align 8, !tbaa !50
  br label %16

16:                                               ; preds = %14, %13, %8
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %18 = load i64, ptr %17, align 8, !tbaa !49
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %18, ptr %19, align 8, !tbaa !49
  store ptr %6, ptr %1, align 8, !tbaa !23
  store i64 0, ptr %17, align 8, !tbaa !49
  store i8 0, ptr %6, align 8, !tbaa !50
  %20 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 0, i32 2
  store ptr %21, ptr %20, align 8, !tbaa !78
  %22 = load ptr, ptr %2, align 8, !tbaa !23
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %24 = load i64, ptr %23, align 8, !tbaa !49
  %25 = getelementptr inbounds i8, ptr %22, i64 %24
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %20, ptr noundef %22, ptr noundef %25) #56
          to label %26 unwind label %58

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 1
  %28 = getelementptr inbounds %"class.PP::Function", ptr %2, i64 0, i32 1
  %29 = load i64, ptr %28, align 8
  store i64 %29, ptr %27, align 8
  %30 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 3
  %31 = getelementptr inbounds %"class.PP::Function", ptr %2, i64 0, i32 3
  %32 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 3, i32 2
  store ptr %32, ptr %30, align 8, !tbaa !78
  %33 = load ptr, ptr %31, align 8, !tbaa !23
  %34 = getelementptr inbounds %"class.PP::Function", ptr %2, i64 0, i32 3, i32 1
  %35 = load i64, ptr %34, align 8, !tbaa !49
  %36 = getelementptr inbounds i8, ptr %33, i64 %35
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %30, ptr noundef %33, ptr noundef %36) #56
          to label %37 unwind label %45

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 4
  %39 = getelementptr inbounds %"class.PP::Function", ptr %2, i64 0, i32 4
  %40 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 4, i32 2
  store ptr %40, ptr %38, align 8, !tbaa !78
  %41 = load ptr, ptr %39, align 8, !tbaa !23
  %42 = getelementptr inbounds %"class.PP::Function", ptr %2, i64 0, i32 4, i32 1
  %43 = load i64, ptr %42, align 8, !tbaa !49
  %44 = getelementptr inbounds i8, ptr %41, i64 %43
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %38, ptr noundef %41, ptr noundef %44) #56
          to label %57 unwind label %47

45:                                               ; preds = %26
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %52

47:                                               ; preds = %37
  %48 = landingpad { ptr, i32 }
          cleanup
  %49 = load ptr, ptr %30, align 8, !tbaa !23
  %50 = icmp eq ptr %49, %32
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  tail call void @_ZdlPv(ptr noundef %49) #58
  br label %52

52:                                               ; preds = %51, %47, %45
  %53 = phi { ptr, i32 } [ %46, %45 ], [ %48, %47 ], [ %48, %51 ]
  %54 = load ptr, ptr %20, align 8, !tbaa !23
  %55 = icmp eq ptr %54, %21
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  tail call void @_ZdlPv(ptr noundef %54) #58
  br label %60

57:                                               ; preds = %37
  ret void

58:                                               ; preds = %16
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %60

60:                                               ; preds = %58, %56, %52
  %61 = phi { ptr, i32 } [ %59, %58 ], [ %53, %56 ], [ %53, %52 ]
  %62 = load ptr, ptr %0, align 8, !tbaa !23
  %63 = icmp eq ptr %62, %4
  br i1 %63, label %65, label %64

64:                                               ; preds = %60
  tail call void @_ZdlPv(ptr noundef %62) #58
  br label %65

65:                                               ; preds = %64, %60
  resume { ptr, i32 } %61
}

; Function Attrs: optsize uwtable
define internal { ptr, i8 } @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(136) %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = load ptr, ptr %3, align 8, !tbaa !71
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  %6 = icmp eq ptr %4, null
  br i1 %6, label %25, label %7

7:                                                ; preds = %7, %2
  %8 = phi ptr [ %17, %7 ], [ %4, %2 ]
  %9 = phi ptr [ %15, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node.123", ptr %8, i64 0, i32 1
  %11 = tail call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull align 8 dereferenceable(32) %1) #56
  %12 = icmp slt i32 %11, 0
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 2
  %15 = select i1 %12, ptr %9, ptr %8
  %16 = select i1 %12, ptr %13, ptr %14
  %17 = load ptr, ptr %16, align 8, !tbaa !29
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %7, !llvm.loop !480

19:                                               ; preds = %7
  %.lcssa = phi ptr [ %15, %7 ]
  %20 = icmp eq ptr %.lcssa, %5
  br i1 %20, label %25, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node.123", ptr %.lcssa, i64 0, i32 1
  %23 = tail call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %22) #56
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %21, %19, %2
  %26 = phi ptr [ %.lcssa, %21 ], [ %5, %19 ], [ %5, %2 ]
  %27 = tail call ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %26, ptr noundef nonnull align 8 dereferenceable(136) %1) #56
  br label %28

28:                                               ; preds = %25, %21
  %29 = phi ptr [ %27, %25 ], [ %.lcssa, %21 ]
  %30 = phi i8 [ 1, %25 ], [ 0, %21 ]
  %31 = insertvalue { ptr, i8 } poison, ptr %29, 0
  %32 = insertvalue { ptr, i8 } %31, i8 %30, 1
  ret { ptr, i8 } %32
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEED2Ev(ptr noundef nonnull align 8 dereferenceable(136) %0) unnamed_addr #24 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1
  %3 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 4
  %4 = load ptr, ptr %3, align 8, !tbaa !23
  %5 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 4, i32 2
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef %4) #58
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !23
  %11 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 3, i32 2
  %12 = icmp eq ptr %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @_ZdlPv(ptr noundef %10) #58
  br label %14

14:                                               ; preds = %13, %8
  %15 = load ptr, ptr %2, align 8, !tbaa !23
  %16 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 0, i32 2
  %17 = icmp eq ptr %15, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @_ZdlPv(ptr noundef %15) #58
  br label %19

19:                                               ; preds = %18, %14
  %20 = load ptr, ptr %0, align 8, !tbaa !23
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  %22 = icmp eq ptr %20, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @_ZdlPv(ptr noundef %20) #58
  br label %24

24:                                               ; preds = %23, %19
  ret void
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN2PP8FunctionD2Ev(ptr noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #24 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.PP::Function", ptr %0, i64 0, i32 4
  %3 = load ptr, ptr %2, align 8, !tbaa !23
  %4 = getelementptr inbounds %"class.PP::Function", ptr %0, i64 0, i32 4, i32 2
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef %3) #58
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.PP::Function", ptr %0, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !23
  %10 = getelementptr inbounds %"class.PP::Function", ptr %0, i64 0, i32 3, i32 2
  %11 = icmp eq ptr %9, %10
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_ZdlPv(ptr noundef %9) #58
  br label %13

13:                                               ; preds = %12, %7
  %14 = load ptr, ptr %0, align 8, !tbaa !23
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  %16 = icmp eq ptr %14, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZdlPv(ptr noundef %14) #58
  br label %18

18:                                               ; preds = %17, %13
  ret void
}

; Function Attrs: optsize uwtable
define internal ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(136) %2) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #57
  store ptr %0, ptr %4, align 8, !tbaa !29
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %4, i64 0, i32 1
  %6 = tail call noalias noundef nonnull dereferenceable(168) ptr @_Znwm(i64 noundef 168) #62
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node.123", ptr %6, i64 0, i32 1
  tail call void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_S8_Lb1EEEOS_IT_T0_E(ptr noundef nonnull align 8 dereferenceable(136) %7, ptr noundef nonnull align 8 dereferenceable(136) %2) #56
  store ptr %6, ptr %5, align 8, !tbaa !481
  %8 = invoke { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %7) #56
          to label %9 unwind label %16

9:                                                ; preds = %3
  %10 = extractvalue { ptr, ptr } %8, 0
  %11 = extractvalue { ptr, ptr } %8, 1
  %12 = icmp eq ptr %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = invoke ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSI_PSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %10, ptr noundef nonnull %11, ptr noundef nonnull %6) #56
          to label %15 unwind label %16

15:                                               ; preds = %13
  store ptr null, ptr %5, align 8, !tbaa !481
  br label %18

16:                                               ; preds = %13, %3
  %17 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %4) #59
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #57
  resume { ptr, i32 } %17

18:                                               ; preds = %15, %9
  %19 = phi ptr [ %14, %15 ], [ %10, %9 ]
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %4) #59
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #57
  ret ptr %19
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEC2IS5_S8_Lb1EEEOS_IT_T0_E(ptr noundef nonnull align 8 dereferenceable(136) %0, ptr noundef nonnull align 8 dereferenceable(136) %1) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %3, ptr %0, align 8, !tbaa !78
  %4 = load ptr, ptr %1, align 8, !tbaa !23
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 2
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !49
  %10 = add i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %3, ptr nonnull align 8 %4, i64 %10, i1 false)
  br label %15

13:                                               ; preds = %2
  store ptr %4, ptr %0, align 8, !tbaa !23
  %14 = load i64, ptr %5, align 8, !tbaa !50
  store i64 %14, ptr %3, align 8, !tbaa !50
  br label %15

15:                                               ; preds = %13, %12, %7
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %17 = load i64, ptr %16, align 8, !tbaa !49
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 %17, ptr %18, align 8, !tbaa !49
  store ptr %5, ptr %1, align 8, !tbaa !23
  store i64 0, ptr %16, align 8, !tbaa !49
  store i8 0, ptr %5, align 8, !tbaa !50
  %19 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 0, i32 2
  store ptr %21, ptr %19, align 8, !tbaa !78
  %22 = load ptr, ptr %20, align 8, !tbaa !23
  %23 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 0, i32 2
  %24 = icmp eq ptr %22, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 0, i32 1
  %27 = load i64, ptr %26, align 8, !tbaa !49
  %28 = add i64 %27, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %21, ptr nonnull align 8 %22, i64 %28, i1 false)
  br label %33

31:                                               ; preds = %15
  store ptr %22, ptr %19, align 8, !tbaa !23
  %32 = load i64, ptr %23, align 8, !tbaa !50
  store i64 %32, ptr %21, align 8, !tbaa !50
  br label %33

33:                                               ; preds = %31, %30, %25
  %34 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 0, i32 1
  %35 = load i64, ptr %34, align 8, !tbaa !49
  %36 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 0, i32 1
  store i64 %35, ptr %36, align 8, !tbaa !49
  store ptr %23, ptr %20, align 8, !tbaa !23
  store i64 0, ptr %34, align 8, !tbaa !49
  store i8 0, ptr %23, align 8, !tbaa !50
  %37 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 1
  %38 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 1
  %39 = load i64, ptr %38, align 8
  store i64 %39, ptr %37, align 8
  %40 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 3
  %41 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 3
  %42 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 3, i32 2
  store ptr %42, ptr %40, align 8, !tbaa !78
  %43 = load ptr, ptr %41, align 8, !tbaa !23
  %44 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 3, i32 2
  %45 = icmp eq ptr %43, %44
  br i1 %45, label %46, label %52

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 3, i32 1
  %48 = load i64, ptr %47, align 8, !tbaa !49
  %49 = add i64 %48, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %46
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %42, ptr nonnull align 8 %43, i64 %49, i1 false)
  br label %54

52:                                               ; preds = %33
  store ptr %43, ptr %40, align 8, !tbaa !23
  %53 = load i64, ptr %44, align 8, !tbaa !50
  store i64 %53, ptr %42, align 8, !tbaa !50
  br label %54

54:                                               ; preds = %52, %51, %46
  %55 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 3, i32 1
  %56 = load i64, ptr %55, align 8, !tbaa !49
  %57 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 3, i32 1
  store i64 %56, ptr %57, align 8, !tbaa !49
  store ptr %44, ptr %41, align 8, !tbaa !23
  store i64 0, ptr %55, align 8, !tbaa !49
  store i8 0, ptr %44, align 8, !tbaa !50
  %58 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 4
  %59 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 4
  %60 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 4, i32 2
  store ptr %60, ptr %58, align 8, !tbaa !78
  %61 = load ptr, ptr %59, align 8, !tbaa !23
  %62 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 4, i32 2
  %63 = icmp eq ptr %61, %62
  br i1 %63, label %64, label %70

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 4, i32 1
  %66 = load i64, ptr %65, align 8, !tbaa !49
  %67 = add i64 %66, 1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %60, ptr nonnull align 8 %61, i64 %67, i1 false)
  br label %72

70:                                               ; preds = %54
  store ptr %61, ptr %58, align 8, !tbaa !23
  %71 = load i64, ptr %62, align 8, !tbaa !50
  store i64 %71, ptr %60, align 8, !tbaa !50
  br label %72

72:                                               ; preds = %70, %69, %64
  %73 = getelementptr inbounds %"struct.std::pair.85", ptr %1, i64 0, i32 1, i32 4, i32 1
  %74 = load i64, ptr %73, align 8, !tbaa !49
  %75 = getelementptr inbounds %"struct.std::pair.85", ptr %0, i64 0, i32 1, i32 4, i32 1
  store i64 %74, ptr %75, align 8, !tbaa !49
  store ptr %62, ptr %59, align 8, !tbaa !23
  store i64 0, ptr %73, align 8, !tbaa !49
  store i8 0, ptr %62, align 8, !tbaa !50
  ret void
}

; Function Attrs: optsize uwtable
define internal { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr %1, ptr noundef nonnull align 8 dereferenceable(32) %2) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = icmp eq ptr %4, %1
  br i1 %5, label %6, label %22

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, ptr %0, i64 40
  %8 = load i64, ptr %7, align 8, !tbaa !80
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, ptr %0, i64 32
  %12 = load ptr, ptr %11, align 8, !tbaa !29
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node.123", ptr %12, i64 0, i32 1
  %14 = tail call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %10
  %17 = load ptr, ptr %11, align 8, !tbaa !29
  br label %67

18:                                               ; preds = %10, %6
  %19 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
  %20 = extractvalue { ptr, ptr } %19, 0
  %21 = extractvalue { ptr, ptr } %19, 1
  br label %67

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_node.123", ptr %1, i64 0, i32 1
  %24 = tail call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %2, ptr noundef nonnull align 8 dereferenceable(32) %23) #56
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %45

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8, ptr %0, i64 24
  %28 = load ptr, ptr %27, align 8, !tbaa !29
  %29 = icmp eq ptr %28, %1
  br i1 %29, label %67, label %30

30:                                               ; preds = %26
  %31 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef %1) #63
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node.123", ptr %31, i64 0, i32 1
  %33 = tail call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %32, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %31, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !81
  %38 = icmp eq ptr %37, null
  %39 = select i1 %38, ptr null, ptr %1
  %40 = select i1 %38, ptr %31, ptr %1
  br label %67

41:                                               ; preds = %30
  %42 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
  %43 = extractvalue { ptr, ptr } %42, 0
  %44 = extractvalue { ptr, ptr } %42, 1
  br label %67

45:                                               ; preds = %22
  %46 = tail call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %23, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %48, label %67

48:                                               ; preds = %45
  %49 = getelementptr inbounds i8, ptr %0, i64 32
  %50 = load ptr, ptr %49, align 8, !tbaa !29
  %51 = icmp eq ptr %50, %1
  br i1 %51, label %67, label %52

52:                                               ; preds = %48
  %53 = tail call noundef ptr @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(ptr noundef %1) #63
  %54 = getelementptr inbounds %"struct.std::_Rb_tree_node.123", ptr %53, i64 0, i32 1
  %55 = tail call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %2, ptr noundef nonnull align 8 dereferenceable(32) %54) #56
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !81
  %60 = icmp eq ptr %59, null
  %61 = select i1 %60, ptr null, ptr %53
  %62 = select i1 %60, ptr %1, ptr %53
  br label %67

63:                                               ; preds = %52
  %64 = tail call { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
  %65 = extractvalue { ptr, ptr } %64, 0
  %66 = extractvalue { ptr, ptr } %64, 1
  br label %67

67:                                               ; preds = %63, %57, %48, %45, %41, %35, %26, %18, %16
  %68 = phi ptr [ %20, %18 ], [ null, %16 ], [ %43, %41 ], [ %1, %26 ], [ %65, %63 ], [ null, %48 ], [ %1, %45 ], [ %39, %35 ], [ %61, %57 ]
  %69 = phi ptr [ %21, %18 ], [ %17, %16 ], [ %44, %41 ], [ %1, %26 ], [ %66, %63 ], [ %1, %48 ], [ null, %45 ], [ %40, %35 ], [ %62, %57 ]
  %70 = insertvalue { ptr, ptr } poison, ptr %68, 0
  %71 = insertvalue { ptr, ptr } %70, ptr %69, 1
  ret { ptr, ptr } %71
}

; Function Attrs: optsize uwtable
define internal ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSI_PSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp ne ptr %1, null
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  %7 = icmp eq ptr %6, %2
  %8 = select i1 %5, i1 true, i1 %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node.123", ptr %3, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node.123", ptr %2, i64 0, i32 1
  %12 = tail call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull align 8 dereferenceable(32) %11) #56
  %13 = icmp slt i32 %12, 0
  br label %14

14:                                               ; preds = %9, %4
  %15 = phi i1 [ true, %4 ], [ %13, %9 ]
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %15, ptr noundef %3, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(32) %6) #59
  %16 = getelementptr inbounds i8, ptr %0, i64 40
  %17 = load i64, ptr %16, align 8, !tbaa !80
  %18 = add i64 %17, 1
  store i64 %18, ptr %16, align 8, !tbaa !80
  ret ptr %3
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !481
  %4 = icmp eq ptr %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load ptr, ptr %0, align 8, !tbaa !483
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node.123", ptr %3, i64 0, i32 1
  tail call void @_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionEEEE7destroyISB_EEvPT_(ptr noundef nonnull align 1 dereferenceable(1) %6, ptr noundef nonnull %7) #59
  tail call void @_ZdlPv(ptr noundef nonnull %3) #58
  br label %8

8:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: optsize uwtable
define internal { ptr, ptr } @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = load ptr, ptr %3, align 8, !tbaa !29
  %6 = icmp eq ptr %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %7, %2
  %8 = phi ptr [ %15, %7 ], [ %5, %2 ]
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node.123", ptr %8, i64 0, i32 1
  %10 = tail call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(32) %9) #56
  %11 = icmp slt i32 %10, 0
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %8, i64 0, i32 3
  %14 = select i1 %11, ptr %12, ptr %13
  %15 = load ptr, ptr %14, align 8, !tbaa !29
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %7, !llvm.loop !484

17:                                               ; preds = %7
  %.lcssa1 = phi ptr [ %8, %7 ]
  %.lcssa = phi i1 [ %11, %7 ]
  br i1 %.lcssa, label %18, label %25

18:                                               ; preds = %17, %2
  %19 = phi ptr [ %.lcssa1, %17 ], [ %4, %2 ]
  %20 = getelementptr inbounds i8, ptr %0, i64 24
  %21 = load ptr, ptr %20, align 8, !tbaa !84
  %22 = icmp eq ptr %19, %21
  br i1 %22, label %33, label %23

23:                                               ; preds = %18
  %24 = tail call noundef ptr @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(ptr noundef nonnull %19) #63
  br label %25

25:                                               ; preds = %23, %17
  %26 = phi ptr [ %19, %23 ], [ %.lcssa1, %17 ]
  %27 = phi ptr [ %24, %23 ], [ %.lcssa1, %17 ]
  %28 = getelementptr inbounds %"struct.std::_Rb_tree_node.123", ptr %27, i64 0, i32 1
  %29 = tail call noundef i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %28, ptr noundef nonnull align 8 dereferenceable(32) %1) #56
  %30 = icmp slt i32 %29, 0
  %31 = select i1 %30, ptr null, ptr %27
  %32 = select i1 %30, ptr %26, ptr null
  br label %33

33:                                               ; preds = %25, %18
  %34 = phi ptr [ null, %18 ], [ %31, %25 ]
  %35 = phi ptr [ %19, %18 ], [ %32, %25 ]
  %36 = insertvalue { ptr, ptr } poison, ptr %34, 0
  %37 = insertvalue { ptr, ptr } %36, ptr %35, 1
  ret { ptr, ptr } %37
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1, ptr noundef %2) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = icmp ult ptr %1, %2
  br i1 %4, label %5, label %25

5:                                                ; preds = %8, %3
  %6 = phi ptr [ %9, %8 ], [ %1, %3 ]
  %7 = invoke noalias noundef nonnull dereferenceable(512) ptr @_Znwm(i64 noundef 512) #62
          to label %8 unwind label %11

8:                                                ; preds = %5
  store ptr %7, ptr %6, align 8, !tbaa !29
  %9 = getelementptr inbounds ptr, ptr %6, i64 1
  %10 = icmp ult ptr %9, %2
  br i1 %10, label %5, label %25, !llvm.loop !485

11:                                               ; preds = %5
  %.lcssa = phi ptr [ %6, %5 ]
  %12 = landingpad { ptr, i32 }
          catch ptr null
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = tail call ptr @__cxa_begin_catch(ptr %13) #57
  %15 = icmp ugt ptr %.lcssa, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %16, %11
  %17 = phi ptr [ %19, %16 ], [ %1, %11 ]
  %18 = load ptr, ptr %17, align 8, !tbaa !29
  tail call void @_ZdlPv(ptr noundef %18) #58
  %19 = getelementptr inbounds ptr, ptr %17, i64 1
  %20 = icmp ult ptr %19, %.lcssa
  br i1 %20, label %16, label %21, !llvm.loop !425

21:                                               ; preds = %16, %11
  invoke void @__cxa_rethrow() #64
          to label %29 unwind label %22

22:                                               ; preds = %21
  %23 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %24 unwind label %26

24:                                               ; preds = %22
  resume { ptr, i32 } %23

25:                                               ; preds = %8, %3
  ret void

26:                                               ; preds = %22
  %27 = landingpad { ptr, i32 }
          catch ptr null
  %28 = extractvalue { ptr, i32 } %27, 0
  tail call void @__clang_call_terminate(ptr %28) #60
  unreachable

29:                                               ; preds = %21
  unreachable
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt11_Deque_baseIbSaIbEE15_M_create_nodesEPPbS3_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1, ptr noundef %2) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = icmp ult ptr %1, %2
  br i1 %4, label %5, label %25

5:                                                ; preds = %8, %3
  %6 = phi ptr [ %9, %8 ], [ %1, %3 ]
  %7 = invoke noalias noundef nonnull dereferenceable(512) ptr @_Znwm(i64 noundef 512) #62
          to label %8 unwind label %11

8:                                                ; preds = %5
  store ptr %7, ptr %6, align 8, !tbaa !29
  %9 = getelementptr inbounds ptr, ptr %6, i64 1
  %10 = icmp ult ptr %9, %2
  br i1 %10, label %5, label %25, !llvm.loop !486

11:                                               ; preds = %5
  %.lcssa = phi ptr [ %6, %5 ]
  %12 = landingpad { ptr, i32 }
          catch ptr null
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = tail call ptr @__cxa_begin_catch(ptr %13) #57
  %15 = icmp ugt ptr %.lcssa, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %16, %11
  %17 = phi ptr [ %19, %16 ], [ %1, %11 ]
  %18 = load ptr, ptr %17, align 8, !tbaa !29
  tail call void @_ZdlPv(ptr noundef %18) #58
  %19 = getelementptr inbounds ptr, ptr %17, i64 1
  %20 = icmp ult ptr %19, %.lcssa
  br i1 %20, label %16, label %21, !llvm.loop !428

21:                                               ; preds = %16, %11
  invoke void @__cxa_rethrow() #64
          to label %29 unwind label %22

22:                                               ; preds = %21
  %23 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %24 unwind label %26

24:                                               ; preds = %22
  resume { ptr, i32 } %23

25:                                               ; preds = %8, %3
  ret void

26:                                               ; preds = %22
  %27 = landingpad { ptr, i32 }
          catch ptr null
  %28 = extractvalue { ptr, i32 } %27, 0
  tail call void @__clang_call_terminate(ptr %28) #60
  unreachable

29:                                               ; preds = %21
  unreachable
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef ptr @_ZNSt15__new_allocatorIPN2PP12RestartblockEE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = icmp ugt i64 %1, 1152921504606846975
  br i1 %4, label %5, label %9, !prof !48

5:                                                ; preds = %3
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #61
  unreachable

8:                                                ; preds = %5
  tail call void @_ZSt17__throw_bad_allocv() #61
  unreachable

9:                                                ; preds = %3
  %10 = shl nuw nsw i64 %1, 3
  %11 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #62
  ret ptr %11
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE15_M_create_nodesEPPS1_S5_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1, ptr noundef %2) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = icmp ult ptr %1, %2
  br i1 %4, label %5, label %25

5:                                                ; preds = %8, %3
  %6 = phi ptr [ %9, %8 ], [ %1, %3 ]
  %7 = invoke noalias noundef nonnull dereferenceable(520) ptr @_Znwm(i64 noundef 520) #62
          to label %8 unwind label %11

8:                                                ; preds = %5
  store ptr %7, ptr %6, align 8, !tbaa !29
  %9 = getelementptr inbounds ptr, ptr %6, i64 1
  %10 = icmp ult ptr %9, %2
  br i1 %10, label %5, label %25, !llvm.loop !487

11:                                               ; preds = %5
  %.lcssa = phi ptr [ %6, %5 ]
  %12 = landingpad { ptr, i32 }
          catch ptr null
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = tail call ptr @__cxa_begin_catch(ptr %13) #57
  %15 = icmp ugt ptr %.lcssa, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %16, %11
  %17 = phi ptr [ %19, %16 ], [ %1, %11 ]
  %18 = load ptr, ptr %17, align 8, !tbaa !29
  tail call void @_ZdlPv(ptr noundef %18) #58
  %19 = getelementptr inbounds ptr, ptr %17, i64 1
  %20 = icmp ult ptr %19, %.lcssa
  br i1 %20, label %16, label %21, !llvm.loop !472

21:                                               ; preds = %16, %11
  invoke void @__cxa_rethrow() #64
          to label %29 unwind label %22

22:                                               ; preds = %21
  %23 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %24 unwind label %26

24:                                               ; preds = %22
  resume { ptr, i32 } %23

25:                                               ; preds = %8, %3
  ret void

26:                                               ; preds = %22
  %27 = landingpad { ptr, i32 }
          catch ptr null
  %28 = extractvalue { ptr, i32 } %27, 0
  tail call void @__clang_call_terminate(ptr %28) #60
  unreachable

29:                                               ; preds = %21
  unreachable
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef ptr @_ZNSt15__new_allocatorIPN2PP8WhenthenEE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = icmp ugt i64 %1, 1152921504606846975
  br i1 %4, label %5, label %9, !prof !48

5:                                                ; preds = %3
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #61
  unreachable

8:                                                ; preds = %5
  tail call void @_ZSt17__throw_bad_allocv() #61
  unreachable

9:                                                ; preds = %3
  %10 = shl nuw nsw i64 %1, 3
  %11 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #62
  ret ptr %11
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE15_M_create_nodesEPPS1_S5_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1, ptr noundef %2) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = icmp ult ptr %1, %2
  br i1 %4, label %5, label %25

5:                                                ; preds = %8, %3
  %6 = phi ptr [ %9, %8 ], [ %1, %3 ]
  %7 = invoke noalias noundef nonnull dereferenceable(568) ptr @_Znwm(i64 noundef 568) #62
          to label %8 unwind label %11

8:                                                ; preds = %5
  store ptr %7, ptr %6, align 8, !tbaa !29
  %9 = getelementptr inbounds ptr, ptr %6, i64 1
  %10 = icmp ult ptr %9, %2
  br i1 %10, label %5, label %25, !llvm.loop !488

11:                                               ; preds = %5
  %.lcssa = phi ptr [ %6, %5 ]
  %12 = landingpad { ptr, i32 }
          catch ptr null
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = tail call ptr @__cxa_begin_catch(ptr %13) #57
  %15 = icmp ugt ptr %.lcssa, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %16, %11
  %17 = phi ptr [ %19, %16 ], [ %1, %11 ]
  %18 = load ptr, ptr %17, align 8, !tbaa !29
  tail call void @_ZdlPv(ptr noundef %18) #58
  %19 = getelementptr inbounds ptr, ptr %17, i64 1
  %20 = icmp ult ptr %19, %.lcssa
  br i1 %20, label %16, label %21, !llvm.loop !466

21:                                               ; preds = %16, %11
  invoke void @__cxa_rethrow() #64
          to label %29 unwind label %22

22:                                               ; preds = %21
  %23 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %24 unwind label %26

24:                                               ; preds = %22
  resume { ptr, i32 } %23

25:                                               ; preds = %8, %3
  ret void

26:                                               ; preds = %22
  %27 = landingpad { ptr, i32 }
          catch ptr null
  %28 = extractvalue { ptr, i32 } %27, 0
  tail call void @__clang_call_terminate(ptr %28) #60
  unreachable

29:                                               ; preds = %21
  unreachable
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef ptr @_ZNSt15__new_allocatorIPN2PP3CmdEE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = icmp ugt i64 %1, 1152921504606846975
  br i1 %4, label %5, label %9, !prof !48

5:                                                ; preds = %3
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #61
  unreachable

8:                                                ; preds = %5
  tail call void @_ZSt17__throw_bad_allocv() #61
  unreachable

9:                                                ; preds = %3
  %10 = shl nuw nsw i64 %1, 3
  %11 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #62
  ret ptr %11
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt11_Deque_baseIN2PP3CmdESaIS1_EE15_M_create_nodesEPPS1_S5_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1, ptr noundef %2) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = icmp ult ptr %1, %2
  br i1 %4, label %5, label %25

5:                                                ; preds = %8, %3
  %6 = phi ptr [ %9, %8 ], [ %1, %3 ]
  %7 = invoke noalias noundef nonnull dereferenceable(432) ptr @_Znwm(i64 noundef 432) #62
          to label %8 unwind label %11

8:                                                ; preds = %5
  store ptr %7, ptr %6, align 8, !tbaa !29
  %9 = getelementptr inbounds ptr, ptr %6, i64 1
  %10 = icmp ult ptr %9, %2
  br i1 %10, label %5, label %25, !llvm.loop !489

11:                                               ; preds = %5
  %.lcssa = phi ptr [ %6, %5 ]
  %12 = landingpad { ptr, i32 }
          catch ptr null
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = tail call ptr @__cxa_begin_catch(ptr %13) #57
  %15 = icmp ugt ptr %.lcssa, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %16, %11
  %17 = phi ptr [ %19, %16 ], [ %1, %11 ]
  %18 = load ptr, ptr %17, align 8, !tbaa !29
  tail call void @_ZdlPv(ptr noundef %18) #58
  %19 = getelementptr inbounds ptr, ptr %17, i64 1
  %20 = icmp ult ptr %19, %.lcssa
  br i1 %20, label %16, label %21, !llvm.loop !461

21:                                               ; preds = %16, %11
  invoke void @__cxa_rethrow() #64
          to label %29 unwind label %22

22:                                               ; preds = %21
  %23 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %24 unwind label %26

24:                                               ; preds = %22
  resume { ptr, i32 } %23

25:                                               ; preds = %8, %3
  ret void

26:                                               ; preds = %22
  %27 = landingpad { ptr, i32 }
          catch ptr null
  %28 = extractvalue { ptr, i32 } %27, 0
  tail call void @__clang_call_terminate(ptr %28) #60
  unreachable

29:                                               ; preds = %21
  unreachable
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef ptr @_ZNSt15__new_allocatorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef %2) #13 comdat align 2 {
  %4 = icmp ugt i64 %1, 1152921504606846975
  br i1 %4, label %5, label %9, !prof !48

5:                                                ; preds = %3
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #61
  unreachable

8:                                                ; preds = %5
  tail call void @_ZSt17__throw_bad_allocv() #61
  unreachable

9:                                                ; preds = %3
  %10 = shl nuw nsw i64 %1, 3
  %11 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %10) #62
  ret ptr %11
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_create_nodesEPPS5_S9_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1, ptr noundef %2) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = icmp ult ptr %1, %2
  br i1 %4, label %5, label %25

5:                                                ; preds = %8, %3
  %6 = phi ptr [ %9, %8 ], [ %1, %3 ]
  %7 = invoke noalias noundef nonnull dereferenceable(512) ptr @_Znwm(i64 noundef 512) #62
          to label %8 unwind label %11

8:                                                ; preds = %5
  store ptr %7, ptr %6, align 8, !tbaa !29
  %9 = getelementptr inbounds ptr, ptr %6, i64 1
  %10 = icmp ult ptr %9, %2
  br i1 %10, label %5, label %25, !llvm.loop !490

11:                                               ; preds = %5
  %.lcssa = phi ptr [ %6, %5 ]
  %12 = landingpad { ptr, i32 }
          catch ptr null
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = tail call ptr @__cxa_begin_catch(ptr %13) #57
  %15 = icmp ugt ptr %.lcssa, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %16, %11
  %17 = phi ptr [ %19, %16 ], [ %1, %11 ]
  %18 = load ptr, ptr %17, align 8, !tbaa !29
  tail call void @_ZdlPv(ptr noundef %18) #58
  %19 = getelementptr inbounds ptr, ptr %17, i64 1
  %20 = icmp ult ptr %19, %.lcssa
  br i1 %20, label %16, label %21, !llvm.loop !479

21:                                               ; preds = %16, %11
  invoke void @__cxa_rethrow() #64
          to label %29 unwind label %22

22:                                               ; preds = %21
  %23 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %24 unwind label %26

24:                                               ; preds = %22
  resume { ptr, i32 } %23

25:                                               ; preds = %8, %3
  ret void

26:                                               ; preds = %22
  %27 = landingpad { ptr, i32 }
          catch ptr null
  %28 = extractvalue { ptr, i32 } %27, 0
  tail call void @__clang_call_terminate(ptr %28) #60
  unreachable

29:                                               ; preds = %21
  unreachable
}

; Function Attrs: optsize
declare void @_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(240)) unnamed_addr #7

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN2PP11PowerParserD2Ev(ptr noundef nonnull align 8 dereferenceable(2796) %0) unnamed_addr #10 align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  invoke void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(ptr noundef nonnull align 8 dereferenceable(248) %0) #56
          to label %3 unwind label %71

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !250
  %6 = icmp eq ptr %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = load ptr, ptr @_ZSt4cout, align 8, !tbaa !51
  %9 = getelementptr i8, ptr %8, i64 -24
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds i8, ptr @_ZSt4cout, i64 %10
  %12 = invoke noundef ptr @_ZNSt9basic_iosIcSt11char_traitsIcEE5rdbufEPSt15basic_streambufIcS1_E(ptr noundef nonnull align 8 dereferenceable(264) %11, ptr noundef nonnull %5) #56
          to label %13 unwind label %71

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !197
  %16 = icmp eq ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZN2PP4CommD1Ev(ptr noundef nonnull align 4 dereferenceable(16) %15) #59
  tail call void @_ZdlPv(ptr noundef nonnull %15) #58
  br label %18

18:                                               ; preds = %17, %13
  %19 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 5
  tail call void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5clearEv(ptr noundef nonnull align 8 dereferenceable(80) %19) #59
  %20 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 8
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE5clearEv(ptr noundef nonnull align 8 dereferenceable(48) %20) #59
  %21 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 10
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE5clearEv(ptr noundef nonnull align 8 dereferenceable(48) %21) #59
  %22 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 11
  tail call void @_ZNSt5dequeIN2PP3CmdESaIS1_EE5clearEv(ptr noundef nonnull align 8 dereferenceable(80) %22) #59
  %23 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 12
  tail call void @_ZNSt5dequeIN2PP3CmdESaIS1_EE5clearEv(ptr noundef nonnull align 8 dereferenceable(80) %23) #59
  %24 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 23
  tail call void @_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv(ptr noundef nonnull align 8 dereferenceable(80) %24) #59
  %25 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 24
  tail call void @_ZNSt5dequeIN2PP12RestartblockESaIS1_EE5clearEv(ptr noundef nonnull align 8 dereferenceable(80) %25) #59
  %26 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 18
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #57
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 2
  store ptr %27, ptr %2, align 8, !tbaa !78
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %2, ptr noundef nonnull @.str, ptr noundef nonnull @.str) #56
          to label %28 unwind label %71

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 18, i32 1
  invoke void @_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strERKNS_12basic_stringIcS2_S3_EE(ptr noundef nonnull align 8 dereferenceable(104) %29, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
          to label %30 unwind label %71

30:                                               ; preds = %28
  %31 = load ptr, ptr %2, align 8, !tbaa !23
  %32 = icmp eq ptr %31, %27
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  call void @_ZdlPv(ptr noundef %31) #58
  br label %34

34:                                               ; preds = %33, %30
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #57
  %35 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 32
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %35) #59
  %36 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 31
  call void @_ZNSt11_Deque_baseIbSaIbEED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %36) #59
  %37 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 28
  call void @_ZNSt11_Deque_baseIbSaIbEED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %37) #59
  %38 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 27
  call void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %38) #59
  call void @_ZNSt5dequeIN2PP12RestartblockESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %25) #59
  call void @_ZNSt5dequeIN2PP8WhenthenESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %24) #59
  %39 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 22
  %40 = load ptr, ptr %39, align 8, !tbaa !23
  %41 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 22, i32 2
  %42 = icmp eq ptr %40, %41
  br i1 %42, label %44, label %43

43:                                               ; preds = %34
  call void @_ZdlPv(ptr noundef %40) #58
  br label %44

44:                                               ; preds = %43, %34
  %45 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 19
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %45, ptr noundef nonnull @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE) #59
  %46 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 19, i32 2
  call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %46) #59
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %26, ptr noundef nonnull @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE) #59
  %47 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 18, i32 2
  call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %47) #59
  %48 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 17
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %48, ptr noundef nonnull @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE) #59
  %49 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 17, i32 2
  call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %49) #59
  %50 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 14
  call void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %50) #59
  call void @_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %23) #59
  call void @_ZNSt5dequeIN2PP3CmdESaIS1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %22) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %21) #59
  %51 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 9
  call void @_ZNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %51) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %20) #59
  call void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(80) %19) #59
  %52 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 4
  %53 = load ptr, ptr %52, align 8, !tbaa !23
  %54 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 4, i32 2
  %55 = icmp eq ptr %53, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %44
  call void @_ZdlPv(ptr noundef %53) #58
  br label %57

57:                                               ; preds = %56, %44
  %58 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !23
  %60 = getelementptr inbounds %"class.PP::PowerParser", ptr %0, i64 0, i32 3, i32 2
  %61 = icmp eq ptr %59, %60
  br i1 %61, label %63, label %62

62:                                               ; preds = %57
  call void @_ZdlPv(ptr noundef %59) #58
  br label %63

63:                                               ; preds = %62, %57
  %64 = load ptr, ptr @_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE, align 8
  store ptr %64, ptr %0, align 8, !tbaa !51
  %65 = load ptr, ptr getelementptr inbounds ([4 x ptr], ptr @_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE, i64 0, i64 3), align 8
  %66 = getelementptr i8, ptr %64, i64 -24
  %67 = load i64, ptr %66, align 8
  %68 = getelementptr inbounds i8, ptr %0, i64 %67
  store ptr %65, ptr %68, align 8, !tbaa !51
  %69 = getelementptr inbounds %"class.std::basic_ofstream", ptr %0, i64 0, i32 1
  call void @_ZNSt13basic_filebufIcSt11char_traitsIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(240) %69) #59
  %70 = getelementptr inbounds i8, ptr %0, i64 248
  call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %70) #59
  ret void

71:                                               ; preds = %28, %18, %7, %1
  %72 = landingpad { ptr, i32 }
          catch ptr null
  %73 = extractvalue { ptr, i32 } %72, 0
  call void @__clang_call_terminate(ptr %73) #60
  unreachable
}

; Function Attrs: mustprogress optsize uwtable
define available_externally void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(ptr noundef nonnull align 8 dereferenceable(248) %0) local_unnamed_addr #13 align 2 {
  %2 = getelementptr inbounds %"class.std::basic_ofstream", ptr %0, i64 0, i32 1
  %3 = tail call noundef ptr @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(ptr noundef nonnull align 8 dereferenceable(240) %2) #56
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = load ptr, ptr %0, align 8, !tbaa !51
  %7 = getelementptr i8, ptr %6, i64 -24
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 %8
  %10 = getelementptr inbounds %"class.std::ios_base", ptr %9, i64 0, i32 5
  %11 = load i32, ptr %10, align 8, !tbaa !491
  %12 = or i32 %11, 4
  tail call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(ptr noundef nonnull align 8 dereferenceable(264) %9, i32 noundef %12) #56
  br label %13

13:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: optsize
declare noundef ptr @_ZNSt9basic_iosIcSt11char_traitsIcEE5rdbufEPSt15basic_streambufIcS1_E(ptr noundef nonnull align 8 dereferenceable(264), ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5clearEv(ptr noundef nonnull align 8 dereferenceable(80) %0) #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"struct.std::_Deque_iterator", align 16
  tail call void @llvm.experimental.noalias.scope.decl(metadata !492)
  %3 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %4 = load <2 x ptr>, ptr %3, align 8, !tbaa !29, !noalias !492
  store <2 x ptr> %4, ptr %2, align 16, !tbaa !29, !alias.scope !492
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  %7 = load <2 x ptr>, ptr %6, align 8, !tbaa !29, !noalias !492
  store <2 x ptr> %7, ptr %5, align 16, !tbaa !29, !alias.scope !492
  invoke void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull %2) #56
          to label %8 unwind label %9

8:                                                ; preds = %1
  ret void

9:                                                ; preds = %1
  %10 = landingpad { ptr, i32 }
          catch ptr null
  %11 = extractvalue { ptr, i32 } %10, 0
  call void @__clang_call_terminate(ptr %11) #60
  unreachable
}

; Function Attrs: mustprogress nounwind optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE5clearEv(ptr noundef nonnull align 8 dereferenceable(48) %0) #15 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !71
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %3) #56
          to label %4 unwind label %9

4:                                                ; preds = %1
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store ptr null, ptr %2, align 8, !tbaa !71
  %6 = getelementptr inbounds i8, ptr %0, i64 24
  store ptr %5, ptr %6, align 8, !tbaa !84
  %7 = getelementptr inbounds i8, ptr %0, i64 32
  store ptr %5, ptr %7, align 8, !tbaa !182
  %8 = getelementptr inbounds i8, ptr %0, i64 40
  store i64 0, ptr %8, align 8, !tbaa !80
  ret void

9:                                                ; preds = %1
  %10 = landingpad { ptr, i32 }
          catch ptr null
  %11 = extractvalue { ptr, i32 } %10, 0
  tail call void @__clang_call_terminate(ptr %11) #60
  unreachable
}

; Function Attrs: mustprogress nounwind optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE5clearEv(ptr noundef nonnull align 8 dereferenceable(48) %0) #15 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !71
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %3) #56
          to label %4 unwind label %9

4:                                                ; preds = %1
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store ptr null, ptr %2, align 8, !tbaa !71
  %6 = getelementptr inbounds i8, ptr %0, i64 24
  store ptr %5, ptr %6, align 8, !tbaa !84
  %7 = getelementptr inbounds i8, ptr %0, i64 32
  store ptr %5, ptr %7, align 8, !tbaa !182
  %8 = getelementptr inbounds i8, ptr %0, i64 40
  store i64 0, ptr %8, align 8, !tbaa !80
  ret void

9:                                                ; preds = %1
  %10 = landingpad { ptr, i32 }
          catch ptr null
  %11 = extractvalue { ptr, i32 } %10, 0
  tail call void @__clang_call_terminate(ptr %11) #60
  unreachable
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt5dequeIN2PP3CmdESaIS1_EE5clearEv(ptr noundef nonnull align 8 dereferenceable(80) %0) #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"struct.std::_Deque_iterator", align 16
  tail call void @llvm.experimental.noalias.scope.decl(metadata !495)
  %3 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %4 = load <2 x ptr>, ptr %3, align 8, !tbaa !29, !noalias !495
  store <2 x ptr> %4, ptr %2, align 16, !tbaa !29, !alias.scope !495
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  %7 = load <2 x ptr>, ptr %6, align 8, !tbaa !29, !noalias !495
  store <2 x ptr> %7, ptr %5, align 16, !tbaa !29, !alias.scope !495
  invoke void @_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull %2) #56
          to label %8 unwind label %9

8:                                                ; preds = %1
  ret void

9:                                                ; preds = %1
  %10 = landingpad { ptr, i32 }
          catch ptr null
  %11 = extractvalue { ptr, i32 } %10, 0
  call void @__clang_call_terminate(ptr %11) #60
  unreachable
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5clearEv(ptr noundef nonnull align 8 dereferenceable(80) %0) #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"struct.std::_Deque_iterator", align 16
  tail call void @llvm.experimental.noalias.scope.decl(metadata !498)
  %3 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %4 = load <2 x ptr>, ptr %3, align 8, !tbaa !29, !noalias !498
  store <2 x ptr> %4, ptr %2, align 16, !tbaa !29, !alias.scope !498
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  %7 = load <2 x ptr>, ptr %6, align 8, !tbaa !29, !noalias !498
  store <2 x ptr> %7, ptr %5, align 16, !tbaa !29, !alias.scope !498
  invoke void @_ZNSt5dequeIN2PP8WhenthenESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull %2) #56
          to label %8 unwind label %9

8:                                                ; preds = %1
  ret void

9:                                                ; preds = %1
  %10 = landingpad { ptr, i32 }
          catch ptr null
  %11 = extractvalue { ptr, i32 } %10, 0
  call void @__clang_call_terminate(ptr %11) #60
  unreachable
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt5dequeIN2PP12RestartblockESaIS1_EE5clearEv(ptr noundef nonnull align 8 dereferenceable(80) %0) #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"struct.std::_Deque_iterator", align 16
  tail call void @llvm.experimental.noalias.scope.decl(metadata !501)
  %3 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2
  %4 = load <2 x ptr>, ptr %3, align 8, !tbaa !29, !noalias !501
  store <2 x ptr> %4, ptr %2, align 16, !tbaa !29, !alias.scope !501
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %2, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 2, i32 2
  %7 = load <2 x ptr>, ptr %6, align 8, !tbaa !29, !noalias !501
  store <2 x ptr> %7, ptr %5, align 16, !tbaa !29, !alias.scope !501
  invoke void @_ZNSt5dequeIN2PP12RestartblockESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull %2) #56
          to label %8 unwind label %9

8:                                                ; preds = %1
  ret void

9:                                                ; preds = %1
  %10 = landingpad { ptr, i32 }
          catch ptr null
  %11 = extractvalue { ptr, i32 } %10, 0
  call void @__clang_call_terminate(ptr %11) #60
  unreachable
}

; Function Attrs: mustprogress optsize uwtable
define available_externally void @_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strERKNS_12basic_stringIcS2_S3_EE(ptr noundef nonnull align 8 dereferenceable(104) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) local_unnamed_addr #13 align 2 {
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_stringbuf", ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %1, align 8, !tbaa !23
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %1, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !49
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_stringbuf", ptr %0, i64 0, i32 2, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !49
  %9 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef 0, i64 noundef %8, ptr noundef %4, i64 noundef %6) #56
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_stringbuf", ptr %0, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !96
  %12 = and i32 %11, 3
  %13 = icmp eq i32 %12, 0
  %14 = load i64, ptr %7, align 8
  %15 = select i1 %13, i64 0, i64 %14
  %16 = load ptr, ptr %3, align 8, !tbaa !23
  tail call void @_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm(ptr noundef nonnull align 8 dereferenceable(104) %0, ptr noundef %16, i64 noundef 0, i64 noundef %15) #56
  ret void
}

; Function Attrs: optsize
declare void @_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm(ptr noundef nonnull align 8 dereferenceable(104), ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #7

; Function Attrs: optsize uwtable
define internal void @_ZNSt5dequeIN2PP12RestartblockESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"struct.std::_Deque_iterator", align 16
  %4 = alloca %"struct.std::_Deque_iterator", align 16
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 3
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  %9 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4)
  %10 = load <2 x ptr>, ptr %1, align 8, !tbaa !29
  store <2 x ptr> %10, ptr %3, align 16, !tbaa !29
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %3, i64 0, i32 2
  %12 = load <2 x ptr>, ptr %5, align 8, !tbaa !29
  store <2 x ptr> %12, ptr %11, align 16, !tbaa !29
  %13 = load <2 x ptr>, ptr %7, align 8, !tbaa !29, !noalias !504
  store <2 x ptr> %13, ptr %4, align 16, !tbaa !29
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %4, i64 0, i32 2
  %15 = load <2 x ptr>, ptr %8, align 8, !tbaa !29, !noalias !504
  store <2 x ptr> %15, ptr %14, align 16, !tbaa !29
  call void @_ZNSt5dequeIN2PP12RestartblockESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull %3, ptr noundef nonnull %4) #56
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4)
  %16 = load ptr, ptr %6, align 8, !tbaa !274
  %17 = load ptr, ptr %9, align 8, !tbaa !471
  %18 = icmp ult ptr %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %19, %2
  %20 = phi ptr [ %21, %19 ], [ %16, %2 ]
  %21 = getelementptr inbounds ptr, ptr %20, i64 1
  %22 = load ptr, ptr %21, align 8, !tbaa !29
  call void @_ZdlPv(ptr noundef %22) #58
  %23 = icmp ult ptr %21, %17
  br i1 %23, label %19, label %24, !llvm.loop !472

24:                                               ; preds = %19, %2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %7, ptr noundef nonnull align 8 dereferenceable(32) %1, i64 32, i1 false), !tbaa.struct !507
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt5dequeIN2PP8WhenthenESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"struct.std::_Deque_iterator", align 16
  %4 = alloca %"struct.std::_Deque_iterator", align 16
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 3
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  %9 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4)
  %10 = load <2 x ptr>, ptr %1, align 8, !tbaa !29
  store <2 x ptr> %10, ptr %3, align 16, !tbaa !29
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %3, i64 0, i32 2
  %12 = load <2 x ptr>, ptr %5, align 8, !tbaa !29
  store <2 x ptr> %12, ptr %11, align 16, !tbaa !29
  %13 = load <2 x ptr>, ptr %7, align 8, !tbaa !29, !noalias !508
  store <2 x ptr> %13, ptr %4, align 16, !tbaa !29
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %4, i64 0, i32 2
  %15 = load <2 x ptr>, ptr %8, align 8, !tbaa !29, !noalias !508
  store <2 x ptr> %15, ptr %14, align 16, !tbaa !29
  call void @_ZNSt5dequeIN2PP8WhenthenESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull %3, ptr noundef nonnull %4) #56
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4)
  %16 = load ptr, ptr %6, align 8, !tbaa !267
  %17 = load ptr, ptr %9, align 8, !tbaa !465
  %18 = icmp ult ptr %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %19, %2
  %20 = phi ptr [ %21, %19 ], [ %16, %2 ]
  %21 = getelementptr inbounds ptr, ptr %20, i64 1
  %22 = load ptr, ptr %21, align 8, !tbaa !29
  call void @_ZdlPv(ptr noundef %22) #58
  %23 = icmp ult ptr %21, %17
  br i1 %23, label %19, label %24, !llvm.loop !466

24:                                               ; preds = %19, %2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %7, ptr noundef nonnull align 8 dereferenceable(32) %1, i64 32, i1 false), !tbaa.struct !507
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt5dequeIN2PP3CmdESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"struct.std::_Deque_iterator", align 16
  %4 = alloca %"struct.std::_Deque_iterator", align 16
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 3
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  %9 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4)
  %10 = load <2 x ptr>, ptr %1, align 8, !tbaa !29
  store <2 x ptr> %10, ptr %3, align 16, !tbaa !29
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %3, i64 0, i32 2
  %12 = load <2 x ptr>, ptr %5, align 8, !tbaa !29
  store <2 x ptr> %12, ptr %11, align 16, !tbaa !29
  %13 = load <2 x ptr>, ptr %7, align 8, !tbaa !29, !noalias !511
  store <2 x ptr> %13, ptr %4, align 16, !tbaa !29
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %4, i64 0, i32 2
  %15 = load <2 x ptr>, ptr %8, align 8, !tbaa !29, !noalias !511
  store <2 x ptr> %15, ptr %14, align 16, !tbaa !29
  call void @_ZNSt5dequeIN2PP3CmdESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull %3, ptr noundef nonnull %4) #56
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4)
  %16 = load ptr, ptr %6, align 8, !tbaa !260
  %17 = load ptr, ptr %9, align 8, !tbaa !460
  %18 = icmp ult ptr %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %19, %2
  %20 = phi ptr [ %21, %19 ], [ %16, %2 ]
  %21 = getelementptr inbounds ptr, ptr %20, i64 1
  %22 = load ptr, ptr %21, align 8, !tbaa !29
  call void @_ZdlPv(ptr noundef %22) #58
  %23 = icmp ult ptr %21, %17
  br i1 %23, label %19, label %24, !llvm.loop !461

24:                                               ; preds = %19, %2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %7, ptr noundef nonnull align 8 dereferenceable(32) %1, i64 32, i1 false), !tbaa.struct !507
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef %1) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"struct.std::_Deque_iterator", align 16
  %4 = alloca %"struct.std::_Deque_iterator", align 16
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %1, i64 0, i32 3
  %7 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 2
  %9 = getelementptr inbounds %"struct.std::_Deque_base<PP::Word, std::allocator<PP::Word>>::_Deque_impl_data", ptr %0, i64 0, i32 3, i32 3
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4)
  %10 = load <2 x ptr>, ptr %1, align 8, !tbaa !29
  store <2 x ptr> %10, ptr %3, align 16, !tbaa !29
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %3, i64 0, i32 2
  %12 = load <2 x ptr>, ptr %5, align 8, !tbaa !29
  store <2 x ptr> %12, ptr %11, align 16, !tbaa !29
  %13 = load <2 x ptr>, ptr %7, align 8, !tbaa !29, !noalias !514
  store <2 x ptr> %13, ptr %4, align 16, !tbaa !29
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator", ptr %4, i64 0, i32 2
  %15 = load <2 x ptr>, ptr %8, align 8, !tbaa !29, !noalias !514
  store <2 x ptr> %15, ptr %14, align 16, !tbaa !29
  call void @_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_destroy_data_auxESt15_Deque_iteratorIS5_RS5_PS5_ESB_(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull %3, ptr noundef nonnull %4) #56
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4)
  %16 = load ptr, ptr %6, align 8, !tbaa !253
  %17 = load ptr, ptr %9, align 8, !tbaa !478
  %18 = icmp ult ptr %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %19, %2
  %20 = phi ptr [ %21, %19 ], [ %16, %2 ]
  %21 = getelementptr inbounds ptr, ptr %20, i64 1
  %22 = load ptr, ptr %21, align 8, !tbaa !29
  call void @_ZdlPv(ptr noundef %22) #58
  %23 = icmp ult ptr %21, %17
  br i1 %23, label %19, label %24, !llvm.loop !479

24:                                               ; preds = %19, %2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %7, ptr noundef nonnull align 8 dereferenceable(32) %1, i64 32, i1 false), !tbaa.struct !507
  ret void
}

; Function Attrs: optsize
declare void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(ptr noundef nonnull align 8 dereferenceable(264), i32 noundef) local_unnamed_addr #7

; Function Attrs: optsize uwtable
define internal void @_GLOBAL__sub_I_Restartblock.cc() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit.11) #56
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit.11, ptr nonnull @__dso_handle) #57
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_GLOBAL__sub_I_Variable.cc() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit.13) #56
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit.13, ptr nonnull @__dso_handle) #57
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZN2PP8VariableC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_bS6_(ptr noundef nonnull align 8 dereferenceable(136) %0, ptr noundef nonnull %1, ptr noundef %2, i1 noundef zeroext %3, ptr noundef %4) unnamed_addr #6 align 2 personality ptr @__gxx_personality_v0 {
  %6 = zext i1 %3 to i8
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %7, ptr %0, align 8, !tbaa !78
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 0, ptr %8, align 8, !tbaa !49
  store i8 0, ptr %7, align 8, !tbaa !50
  %9 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false)
  %10 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 5
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false)
  %11 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 8
  %12 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 8, i32 2
  store ptr %12, ptr %11, align 8, !tbaa !78
  %13 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 8, i32 1
  store i64 0, ptr %13, align 8, !tbaa !49
  store i8 0, ptr %12, align 8, !tbaa !50
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) #56
          to label %14 unwind label %22

14:                                               ; preds = %5
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(32) %2) #56
          to label %15 unwind label %22

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 2
  store i32 0, ptr %16, align 8, !tbaa !517
  %17 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 4
  store i32 0, ptr %17, align 8, !tbaa !525
  %18 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 3
  store i32 0, ptr %18, align 4, !tbaa !526
  %19 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 6
  store i8 %6, ptr %19, align 8, !tbaa !527
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %11, ptr noundef nonnull align 8 dereferenceable(32) %4) #56
          to label %20 unwind label %22

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.PP::Variable", ptr %0, i64 0, i32 7
  store i8 0, ptr %21, align 1, !tbaa !528
  ret void

22:                                               ; preds = %15, %14, %5
  %23 = landingpad { ptr, i32 }
          cleanup
  %24 = load ptr, ptr %11, align 8, !tbaa !23
  %25 = icmp eq ptr %24, %12
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @_ZdlPv(ptr noundef %24) #58
  br label %27

27:                                               ; preds = %26, %22
  %28 = load ptr, ptr %10, align 8, !tbaa !65
  %29 = icmp eq ptr %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  tail call void @_ZdlPv(ptr noundef nonnull %28) #58
  br label %31

31:                                               ; preds = %30, %27
  tail call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %9) #59
  %32 = load ptr, ptr %0, align 8, !tbaa !23
  %33 = icmp eq ptr %32, %7
  br i1 %33, label %35, label %34

34:                                               ; preds = %31
  tail call void @_ZdlPv(ptr noundef %32) #58
  br label %35

35:                                               ; preds = %34, %31
  resume { ptr, i32 } %23
}

; Function Attrs: optsize uwtable
define internal void @_GLOBAL__sub_I_Whenthen.cc() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit.17) #56
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit.17, ptr nonnull @__dso_handle) #57
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_GLOBAL__sub_I_Word.cc() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit.19) #56
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit.19, ptr nonnull @__dso_handle) #57
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN2PP4Word4initEv(ptr noundef nonnull align 8 dereferenceable(128) %0) #13 align 2 {
  %2 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 2
  store i8 0, ptr %2, align 4, !tbaa !529
  %3 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 1
  store i32 0, ptr %3, align 8, !tbaa !532
  %4 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 3
  store i8 0, ptr %4, align 1, !tbaa !533
  %5 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 10
  store ptr null, ptr %5, align 8, !tbaa !534
  %6 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 7
  store i32 0, ptr %6, align 8, !tbaa !535
  %7 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 8
  store i32 0, ptr %7, align 4, !tbaa !536
  %8 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 9
  %9 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 9, i32 1
  %10 = load i64, ptr %9, align 8, !tbaa !49
  %11 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %8, i64 noundef 0, i64 noundef %10, ptr noundef nonnull @.str.20, i64 noundef 0) #56
  %12 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 4
  store i32 1, ptr %12, align 8, !tbaa !537
  %13 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 5
  store i32 -1, ptr %13, align 4, !tbaa !538
  %14 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 6, i32 1
  %16 = load i64, ptr %15, align 8, !tbaa !49
  %17 = tail call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(ptr noundef nonnull align 8 dereferenceable(32) %14, i64 noundef 0, i64 noundef %16, ptr noundef nonnull @.str.20, i64 noundef 0) #56
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZN2PP4WordC2EdiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE(ptr noundef nonnull align 8 dereferenceable(128) %0, double noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5) unnamed_addr #6 align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"class.std::__cxx11::basic_stringstream", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %9, ptr %0, align 8, !tbaa !78
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 0, ptr %10, align 8, !tbaa !49
  store i8 0, ptr %9, align 8, !tbaa !50
  %11 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 6, i32 2
  store ptr %12, ptr %11, align 8, !tbaa !78
  %13 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 6, i32 1
  store i64 0, ptr %13, align 8, !tbaa !49
  store i8 0, ptr %12, align 8, !tbaa !50
  %14 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 9
  %15 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 9, i32 2
  store ptr %15, ptr %14, align 8, !tbaa !78
  %16 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 9, i32 1
  store i64 0, ptr %16, align 8, !tbaa !49
  store i8 0, ptr %15, align 8, !tbaa !50
  call void @llvm.lifetime.start.p0(i64 392, ptr nonnull %7) #57
  invoke void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(128) %7) #56
          to label %17 unwind label %41

17:                                               ; preds = %6
  %18 = getelementptr inbounds i8, ptr %7, i64 16
  %19 = load ptr, ptr %18, align 8, !tbaa !51
  %20 = getelementptr i8, ptr %19, i64 -24
  %21 = load i64, ptr %20, align 8
  %22 = getelementptr inbounds i8, ptr %18, i64 %21
  %23 = getelementptr inbounds %"class.std::ios_base", ptr %22, i64 0, i32 1
  store i64 15, ptr %23, align 8, !tbaa !539
  %24 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8) %18, double noundef %1) #56
          to label %25 unwind label %43

25:                                               ; preds = %17
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %8) #57
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %7, i64 0, i32 1
  invoke void @_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %8, ptr noundef nonnull align 8 dereferenceable(104) %26) #56
          to label %27 unwind label %45

27:                                               ; preds = %25
  %28 = call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %8) #59
  %29 = load ptr, ptr %8, align 8, !tbaa !23
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 2
  %31 = icmp eq ptr %29, %30
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @_ZdlPv(ptr noundef %29) #58
  br label %33

33:                                               ; preds = %32, %27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #57
  invoke void @_ZN2PP4Word4initEv(ptr noundef nonnull align 8 dereferenceable(128) %0) #56
          to label %34 unwind label %43

34:                                               ; preds = %33
  %35 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 1
  store i32 3, ptr %35, align 8, !tbaa !532
  %36 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 7
  store i32 %2, ptr %36, align 8, !tbaa !535
  %37 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 8
  store i32 %3, ptr %37, align 4, !tbaa !536
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %14, ptr noundef nonnull align 8 dereferenceable(32) %4) #56
          to label %38 unwind label %43

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 10
  store ptr %5, ptr %39, align 8, !tbaa !534
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %7, ptr noundef nonnull @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE) #59
  %40 = getelementptr inbounds i8, ptr %7, i64 128
  call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %40) #59
  call void @llvm.lifetime.end.p0(i64 392, ptr nonnull %7) #57
  ret void

41:                                               ; preds = %6
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %50

43:                                               ; preds = %34, %33, %17
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %47

45:                                               ; preds = %25
  %46 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #57
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi { ptr, i32 } [ %44, %43 ], [ %46, %45 ]
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %7, ptr noundef nonnull @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE) #59
  %49 = getelementptr inbounds i8, ptr %7, i64 128
  call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %49) #59
  br label %50

50:                                               ; preds = %47, %41
  %51 = phi { ptr, i32 } [ %48, %47 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0(i64 392, ptr nonnull %7) #57
  %52 = load ptr, ptr %14, align 8, !tbaa !23
  %53 = icmp eq ptr %52, %15
  br i1 %53, label %55, label %54

54:                                               ; preds = %50
  call void @_ZdlPv(ptr noundef %52) #58
  br label %55

55:                                               ; preds = %54, %50
  %56 = load ptr, ptr %11, align 8, !tbaa !23
  %57 = icmp eq ptr %56, %12
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  call void @_ZdlPv(ptr noundef %56) #58
  br label %59

59:                                               ; preds = %58, %55
  %60 = load ptr, ptr %0, align 8, !tbaa !23
  %61 = icmp eq ptr %60, %9
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  call void @_ZdlPv(ptr noundef %60) #58
  br label %63

63:                                               ; preds = %62, %59
  resume { ptr, i32 } %51
}

; Function Attrs: optsize
declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo9_M_insertIdEERSoT_(ptr noundef nonnull align 8 dereferenceable(8), double noundef) local_unnamed_addr #7

; Function Attrs: optsize uwtable
define internal void @_ZN2PP4WordC2EiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE(ptr noundef nonnull align 8 dereferenceable(128) %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5) unnamed_addr #6 align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %"class.std::__cxx11::basic_stringstream", align 8
  %8 = alloca %"class.std::__cxx11::basic_string", align 8
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %9, ptr %0, align 8, !tbaa !78
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 0, ptr %10, align 8, !tbaa !49
  store i8 0, ptr %9, align 8, !tbaa !50
  %11 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 6, i32 2
  store ptr %12, ptr %11, align 8, !tbaa !78
  %13 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 6, i32 1
  store i64 0, ptr %13, align 8, !tbaa !49
  store i8 0, ptr %12, align 8, !tbaa !50
  %14 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 9
  %15 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 9, i32 2
  store ptr %15, ptr %14, align 8, !tbaa !78
  %16 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 9, i32 1
  store i64 0, ptr %16, align 8, !tbaa !49
  store i8 0, ptr %15, align 8, !tbaa !50
  call void @llvm.lifetime.start.p0(i64 392, ptr nonnull %7) #57
  invoke void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(ptr noundef nonnull align 8 dereferenceable(128) %7) #56
          to label %17 unwind label %36

17:                                               ; preds = %6
  %18 = getelementptr inbounds i8, ptr %7, i64 16
  %19 = invoke noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) %18, i32 noundef %1) #56
          to label %20 unwind label %38

20:                                               ; preds = %17
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %8) #57
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", ptr %7, i64 0, i32 1
  invoke void @_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(ptr nonnull sret(%"class.std::__cxx11::basic_string") align 8 %8, ptr noundef nonnull align 8 dereferenceable(104) %21) #56
          to label %22 unwind label %40

22:                                               ; preds = %20
  %23 = call noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %8) #59
  %24 = load ptr, ptr %8, align 8, !tbaa !23
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %8, i64 0, i32 2
  %26 = icmp eq ptr %24, %25
  br i1 %26, label %28, label %27

27:                                               ; preds = %22
  call void @_ZdlPv(ptr noundef %24) #58
  br label %28

28:                                               ; preds = %27, %22
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #57
  invoke void @_ZN2PP4Word4initEv(ptr noundef nonnull align 8 dereferenceable(128) %0) #56
          to label %29 unwind label %38

29:                                               ; preds = %28
  %30 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 1
  store i32 3, ptr %30, align 8, !tbaa !532
  %31 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 7
  store i32 %2, ptr %31, align 8, !tbaa !535
  %32 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 8
  store i32 %3, ptr %32, align 4, !tbaa !536
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(ptr noundef nonnull align 8 dereferenceable(32) %14, ptr noundef nonnull align 8 dereferenceable(32) %4) #56
          to label %33 unwind label %38

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 10
  store ptr %5, ptr %34, align 8, !tbaa !534
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %7, ptr noundef nonnull @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE) #59
  %35 = getelementptr inbounds i8, ptr %7, i64 128
  call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %35) #59
  call void @llvm.lifetime.end.p0(i64 392, ptr nonnull %7) #57
  ret void

36:                                               ; preds = %6
  %37 = landingpad { ptr, i32 }
          cleanup
  br label %45

38:                                               ; preds = %29, %28, %17
  %39 = landingpad { ptr, i32 }
          cleanup
  br label %42

40:                                               ; preds = %20
  %41 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #57
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi { ptr, i32 } [ %39, %38 ], [ %41, %40 ]
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev(ptr noundef nonnull align 8 dereferenceable(128) %7, ptr noundef nonnull @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE) #59
  %44 = getelementptr inbounds i8, ptr %7, i64 128
  call void @_ZNSt8ios_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(264) %44) #59
  br label %45

45:                                               ; preds = %42, %36
  %46 = phi { ptr, i32 } [ %43, %42 ], [ %37, %36 ]
  call void @llvm.lifetime.end.p0(i64 392, ptr nonnull %7) #57
  %47 = load ptr, ptr %14, align 8, !tbaa !23
  %48 = icmp eq ptr %47, %15
  br i1 %48, label %50, label %49

49:                                               ; preds = %45
  call void @_ZdlPv(ptr noundef %47) #58
  br label %50

50:                                               ; preds = %49, %45
  %51 = load ptr, ptr %11, align 8, !tbaa !23
  %52 = icmp eq ptr %51, %12
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  call void @_ZdlPv(ptr noundef %51) #58
  br label %54

54:                                               ; preds = %53, %50
  %55 = load ptr, ptr %0, align 8, !tbaa !23
  %56 = icmp eq ptr %55, %9
  br i1 %56, label %58, label %57

57:                                               ; preds = %54
  call void @_ZdlPv(ptr noundef %55) #58
  br label %58

58:                                               ; preds = %57, %54
  resume { ptr, i32 } %46
}

; Function Attrs: optsize
declare noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8), i32 noundef) local_unnamed_addr #7

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN2PP4WordD2Ev(ptr noundef nonnull readonly align 8 dereferenceable(128) %0) unnamed_addr #10 align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 9
  %3 = load ptr, ptr %2, align 8, !tbaa !23
  %4 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 9, i32 2
  %5 = icmp eq ptr %3, %4
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef %3) #58
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 6
  %9 = load ptr, ptr %8, align 8, !tbaa !23
  %10 = getelementptr inbounds %"class.PP::Word", ptr %0, i64 0, i32 6, i32 2
  %11 = icmp eq ptr %9, %10
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_ZdlPv(ptr noundef %9) #58
  br label %13

13:                                               ; preds = %12, %7
  %14 = load ptr, ptr %0, align 8, !tbaa !23
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  %16 = icmp eq ptr %14, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZdlPv(ptr noundef %14) #58
  br label %18

18:                                               ; preds = %17, %13
  ret void
}

; Function Attrs: optsize uwtable
define weak_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(ptr noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(32) %2) #6 comdat personality ptr @__gxx_personality_v0 {
  %4 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #59
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 2
  store ptr %5, ptr %0, align 8, !tbaa !78
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %0, i64 0, i32 1
  store i64 0, ptr %6, align 8, !tbaa !49
  store i8 0, ptr %5, align 8, !tbaa !50
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !49
  %9 = add i64 %8, %4
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32) %0, i64 noundef %9) #56
          to label %10 unwind label %16

10:                                               ; preds = %3
  %11 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i64 noundef %4) #56
          to label %12 unwind label %16

12:                                               ; preds = %10
  %13 = load ptr, ptr %2, align 8, !tbaa !23
  %14 = load i64, ptr %7, align 8, !tbaa !49
  %15 = invoke noundef nonnull align 8 dereferenceable(32) ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %13, i64 noundef %14) #56
          to label %21 unwind label %16

16:                                               ; preds = %12, %10, %3
  %17 = landingpad { ptr, i32 }
          cleanup
  %18 = load ptr, ptr %0, align 8, !tbaa !23
  %19 = icmp eq ptr %18, %5
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  tail call void @_ZdlPv(ptr noundef %18) #58
  br label %22

21:                                               ; preds = %12
  ret void

22:                                               ; preds = %20, %16
  resume { ptr, i32 } %17
}

; Function Attrs: optsize
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(ptr noundef nonnull align 8 dereferenceable(32), i64 noundef) local_unnamed_addr #7

; Function Attrs: nofree nounwind optsize uwtable
define internal void @_GLOBAL__sub_I_clamr_cpuonly.cpp() #35 section ".text.startup" personality ptr @__gxx_personality_v0 {
  store i32 0, ptr getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0), align 8, !tbaa !181
  store ptr null, ptr getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1), align 8, !tbaa !71
  store ptr getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0), ptr getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2), align 8, !tbaa !84
  store ptr getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0), ptr getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3), align 8, !tbaa !182
  store i64 0, ptr getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1), align 8, !tbaa !80
  store i32 0, ptr getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 1, i32 0, i32 0, i32 1), align 8, !tbaa !181
  store ptr null, ptr getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1), align 8, !tbaa !71
  store ptr getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 1, i32 0, i32 0, i32 1), ptr getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2), align 8, !tbaa !84
  store ptr getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 1, i32 0, i32 0, i32 1), ptr getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3), align 8, !tbaa !182
  store i64 0, ptr getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1), align 8, !tbaa !80
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10MallocPlusD2Ev, ptr nonnull @clamr_bootstrap_memory, ptr nonnull @__dso_handle) #57
  ret void
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN10MallocPlusD2Ev(ptr noundef nonnull align 8 dereferenceable(96) %0) unnamed_addr #24 comdat align 2 {
  %2 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1
  tail call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %2) #59
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) #59
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !71
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %3) #56
          to label %4 unwind label %5

4:                                                ; preds = %1
  ret void

5:                                                ; preds = %1
  %6 = landingpad { ptr, i32 }
          catch ptr null
  %7 = extractvalue { ptr, i32 } %6, 0
  tail call void @__clang_call_terminate(ptr %7) #60
  unreachable
}

; Function Attrs: mustprogress norecurse optsize uwtable
define dso_local noundef i32 @main(i32 noundef %0, ptr noundef %1) #36 personality ptr @__gxx_personality_v0 {
  %3 = alloca %struct.timeval, align 8
  tail call void @_Z10parseInputiPPc(i32 noundef %0, ptr noundef %1) #56
  %4 = tail call noalias noundef nonnull dereferenceable(2800) ptr @_Znwm(i64 noundef 2800) #62
  invoke void @_ZN2PP11PowerParserC1Ev(ptr noundef nonnull align 8 dereferenceable(2796) %4) #56
          to label %5 unwind label %39

5:                                                ; preds = %2
  store ptr %4, ptr @_ZL5parse, align 8, !tbaa !29
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #57
  call void @cpu_timer_start(ptr noundef nonnull %3) #56
  %6 = call noalias noundef nonnull dereferenceable(12) ptr @_Znwm(i64 noundef 12) #62
  %7 = load i32, ptr @crux_type, align 4, !tbaa !68
  %8 = load i32, ptr @num_of_rollback_states, align 4, !tbaa !68
  %9 = load i8, ptr @restart, align 1, !tbaa !540, !range !130, !noundef !131
  %10 = icmp ne i8 %9, 0
  invoke void @_ZN4CruxC1Eiib(ptr noundef nonnull align 4 dereferenceable(12) %6, i32 noundef %7, i32 noundef %8, i1 noundef zeroext %10) #56
          to label %11 unwind label %41

11:                                               ; preds = %5
  store ptr %6, ptr @_ZL4crux, align 8, !tbaa !29
  %12 = load i32, ptr @nx, align 4, !tbaa !68
  %13 = sitofp i32 %12 to double
  %14 = fmul double %13, 6.000000e+00
  %15 = fmul double %14, 7.812500e-03
  store double %15, ptr @_ZL11circ_radius, align 8, !tbaa !171
  %16 = load i8, ptr @restart, align 1, !tbaa !540, !range !130, !noundef !131
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %47, label %18

18:                                               ; preds = %11
  %19 = load ptr, ptr @restart_file, align 8, !tbaa !29
  call void @_Z27restore_crux_data_bootstrapP4CruxPci(ptr noundef %6, ptr noundef %19, i32 noundef 0) #56
  %20 = call noalias noundef nonnull dereferenceable(2288) ptr @_Znwm(i64 noundef 2288) #62
  %21 = load i32, ptr @nx, align 4, !tbaa !68
  %22 = load i32, ptr @ny, align 4, !tbaa !68
  %23 = load i32, ptr @levmx, align 4, !tbaa !68
  %24 = load i32, ptr @ndim, align 4, !tbaa !68
  invoke void @_ZN4MeshC1Eiiiiddiii(ptr noundef nonnull align 8 dereferenceable(2288) %20, i32 noundef %21, i32 noundef %22, i32 noundef %23, i32 noundef %24, double noundef 1.000000e+00, double noundef 1.000000e+00, i32 noundef 1, i32 noundef 0, i32 noundef 0) #56
          to label %25 unwind label %43

25:                                               ; preds = %18
  store ptr %20, ptr @_ZL4mesh, align 8, !tbaa !29
  %26 = load i32, ptr @nx, align 4, !tbaa !68
  %27 = load i32, ptr @ny, align 4, !tbaa !68
  %28 = load double, ptr @_ZL11circ_radius, align 8, !tbaa !171
  %29 = load i32, ptr @initial_order, align 4, !tbaa !541
  call void @_ZN4Mesh4initEiid16partition_methodi(ptr noundef nonnull align 8 dereferenceable(2288) %20, i32 noundef %26, i32 noundef %27, double noundef %28, i32 noundef %29, i32 noundef 0) #56
  %30 = call noalias noundef nonnull dereferenceable(368) ptr @_Znwm(i64 noundef 368) #62
  %31 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  invoke void @_ZN5StateC1EP4Mesh(ptr noundef nonnull align 8 dereferenceable(368) %30, ptr noundef %31) #56
          to label %32 unwind label %45

32:                                               ; preds = %25
  store ptr %30, ptr @_ZL5state, align 8, !tbaa !29
  %33 = load ptr, ptr @_ZL4crux, align 8, !tbaa !29
  call void @_ZN5State18restore_checkpointEP4Crux(ptr noundef nonnull align 8 dereferenceable(368) %30, ptr noundef %33) #56
  call void @_ZN4Crux11restore_endEv(ptr noundef nonnull align 4 dereferenceable(12) %33) #56
  %34 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %35 = getelementptr inbounds %class.Mesh, ptr %34, i64 0, i32 25
  %36 = getelementptr inbounds %class.Mesh, ptr %34, i64 0, i32 45
  %37 = load i64, ptr %36, align 8, !tbaa !543
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %35, i64 noundef %37) #56
  %38 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  call void @_ZN4Mesh17calc_distributionEi(ptr noundef nonnull align 8 dereferenceable(2288) %38, i32 noundef -1) #56
  br label %71

39:                                               ; preds = %2
  %40 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %4) #58
  br label %178

41:                                               ; preds = %5
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %175

43:                                               ; preds = %18
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %175

45:                                               ; preds = %25
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %175

47:                                               ; preds = %11
  %48 = call noalias noundef nonnull dereferenceable(2288) ptr @_Znwm(i64 noundef 2288) #62
  %49 = load i32, ptr @ny, align 4, !tbaa !68
  %50 = load i32, ptr @levmx, align 4, !tbaa !68
  %51 = load i32, ptr @ndim, align 4, !tbaa !68
  invoke void @_ZN4MeshC1Eiiiiddiii(ptr noundef nonnull align 8 dereferenceable(2288) %48, i32 noundef %12, i32 noundef %49, i32 noundef %50, i32 noundef %51, double noundef 1.000000e+00, double noundef 1.000000e+00, i32 noundef 1, i32 noundef 0, i32 noundef 0) #56
          to label %52 unwind label %67

52:                                               ; preds = %47
  store ptr %48, ptr @_ZL4mesh, align 8, !tbaa !29
  %53 = load i32, ptr @nx, align 4, !tbaa !68
  %54 = load i32, ptr @ny, align 4, !tbaa !68
  %55 = load double, ptr @_ZL11circ_radius, align 8, !tbaa !171
  %56 = load i32, ptr @initial_order, align 4, !tbaa !541
  call void @_ZN4Mesh4initEiid16partition_methodi(ptr noundef nonnull align 8 dereferenceable(2288) %48, i32 noundef %53, i32 noundef %54, double noundef %55, i32 noundef %56, i32 noundef 0) #56
  %57 = call noalias noundef nonnull dereferenceable(368) ptr @_Znwm(i64 noundef 368) #62
  %58 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  invoke void @_ZN5StateC1EP4Mesh(ptr noundef nonnull align 8 dereferenceable(368) %57, ptr noundef %58) #56
          to label %59 unwind label %69

59:                                               ; preds = %52
  store ptr %57, ptr @_ZL5state, align 8, !tbaa !29
  call void @_ZN5State4initEi(ptr noundef nonnull align 8 dereferenceable(368) %57, i32 noundef 0) #56
  %60 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %61 = getelementptr inbounds %class.Mesh, ptr %60, i64 0, i32 25
  %62 = getelementptr inbounds %class.Mesh, ptr %60, i64 0, i32 45
  %63 = load i64, ptr %62, align 8, !tbaa !543
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %61, i64 noundef %63) #56
  %64 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  call void @_ZN4Mesh17calc_distributionEi(ptr noundef nonnull align 8 dereferenceable(2288) %64, i32 noundef -1) #56
  %65 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %66 = load double, ptr @_ZL11circ_radius, align 8, !tbaa !171
  call void @_ZN5State11fill_circleEddd(ptr noundef nonnull align 8 dereferenceable(368) %65, double noundef %66, double noundef 1.000000e+02, double noundef 7.000000e+00) #56
  br label %71

67:                                               ; preds = %47
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %175

69:                                               ; preds = %52
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %175

71:                                               ; preds = %59, %32
  %72 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %73 = getelementptr inbounds %class.Mesh, ptr %72, i64 0, i32 45
  %74 = load i32, ptr @graphic_outputInterval, align 4, !tbaa !68
  %75 = load i32, ptr @niter, align 4, !tbaa !68
  %76 = icmp sgt i32 %74, %75
  br i1 %76, label %77, label %78

77:                                               ; preds = %71
  store i32 %74, ptr @_ZL19next_graphics_cycle, align 4, !tbaa !68
  br label %78

78:                                               ; preds = %77, %71
  %79 = load i32, ptr @checkpoint_outputInterval, align 4, !tbaa !68
  %80 = icmp sgt i32 %79, %75
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  store i32 %79, ptr @_ZL13next_cp_cycle, align 4, !tbaa !68
  br label %82

82:                                               ; preds = %81, %78
  %83 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %84 = load i32, ptr @enhanced_precision_sum, align 4, !tbaa !68
  %85 = call noundef double @_ZN5State8mass_sumEi(ptr noundef nonnull align 8 dereferenceable(368) %83, i32 noundef %84) #56
  %86 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.28, double noundef %85) #56
  store double %85, ptr @_ZL13H_sum_initial, align 8, !tbaa !171
  %87 = load double, ptr @upper_mass_diff_percentage, align 8, !tbaa !171
  %88 = fcmp olt double %87, 0.000000e+00
  br i1 %88, label %89, label %91

89:                                               ; preds = %82
  %90 = fmul double %85, 2.000000e-16
  store double %90, ptr @upper_mass_diff_percentage, align 8, !tbaa !171
  br label %91

91:                                               ; preds = %89, %82
  %92 = load i64, ptr %3, align 8, !tbaa.struct !560
  %93 = getelementptr inbounds i8, ptr %3, i64 8
  %94 = load i64, ptr %93, align 8, !tbaa.struct !561
  %95 = call double @cpu_timer_stop(i64 %92, i64 %94) #56
  %96 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %103, label %98

98:                                               ; preds = %91
  %99 = load double, ptr @_ZL6deltaT, align 8, !tbaa !171
  %100 = load double, ptr @_ZL7simTime, align 8, !tbaa !171
  %101 = load i64, ptr %73, align 8, !tbaa !85
  %102 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.1, i32 noundef %96, double noundef %99, double noundef %100, i64 noundef %101, double noundef %85) #56
  br label %106

103:                                              ; preds = %91
  %104 = load i64, ptr %73, align 8, !tbaa !85
  %105 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.2, i64 noundef %104, double noundef %85) #56
  br label %106

106:                                              ; preds = %103, %98
  %107 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %108 = getelementptr i8, ptr %107, i64 584
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %108, i8 0, i64 16, i1 false), !tbaa !68
  %109 = getelementptr i8, ptr %107, i64 200
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(192) %109, i8 0, i64 192, i1 false), !tbaa !171
  call void @cpu_timer_start(ptr noundef nonnull @_ZL10tstart_cpu) #56
  %110 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %111 = load i32, ptr @_ZL19next_graphics_cycle, align 4, !tbaa !68
  %112 = icmp eq i32 %110, %111
  br i1 %112, label %113, label %156

113:                                              ; preds = %106
  %114 = load i8, ptr @outline, align 1, !tbaa !540, !range !130, !noundef !131
  %115 = zext i8 %114 to i32
  call void @set_graphics_outline(i32 noundef %115) #56
  %116 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %117 = getelementptr inbounds %class.Mesh, ptr %116, i64 0, i32 48
  %118 = load double, ptr %117, align 8, !tbaa !562
  %119 = fptrunc double %118 to float
  %120 = getelementptr inbounds %class.Mesh, ptr %116, i64 0, i32 49
  %121 = load double, ptr %120, align 8, !tbaa !563
  %122 = fptrunc double %121 to float
  %123 = getelementptr inbounds %class.Mesh, ptr %116, i64 0, i32 50
  %124 = load double, ptr %123, align 8, !tbaa !564
  %125 = fptrunc double %124 to float
  %126 = getelementptr inbounds %class.Mesh, ptr %116, i64 0, i32 51
  %127 = load double, ptr %126, align 8, !tbaa !565
  %128 = fptrunc double %127 to float
  call void @set_graphics_window(float noundef %119, float noundef %122, float noundef %125, float noundef %128) #56
  %129 = load i64, ptr %73, align 8, !tbaa !85
  %130 = trunc i64 %129 to i32
  call void @set_graphics_mysize(i32 noundef %130) #56
  %131 = load ptr, ptr @set_graphics_cell_coordinates, align 8, !tbaa !29
  %132 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %133 = getelementptr inbounds %class.Mesh, ptr %132, i64 0, i32 75
  %134 = load ptr, ptr %133, align 8, !tbaa !109
  %135 = getelementptr inbounds %class.Mesh, ptr %132, i64 0, i32 76
  %136 = load ptr, ptr %135, align 8, !tbaa !109
  %137 = getelementptr inbounds %class.Mesh, ptr %132, i64 0, i32 77
  %138 = load ptr, ptr %137, align 8, !tbaa !109
  %139 = getelementptr inbounds %class.Mesh, ptr %132, i64 0, i32 78
  %140 = load ptr, ptr %139, align 8, !tbaa !109
  call void %131(ptr noundef nonnull %134, ptr noundef nonnull %136, ptr noundef nonnull %138, ptr noundef nonnull %140) #56
  %141 = load ptr, ptr @set_graphics_cell_data, align 8, !tbaa !29
  %142 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %143 = getelementptr inbounds %class.State, ptr %142, i64 0, i32 3
  %144 = load ptr, ptr %143, align 8, !tbaa !566
  call void %141(ptr noundef %144) #56
  %145 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %146 = getelementptr inbounds %class.Mesh, ptr %145, i64 0, i32 25
  %147 = load ptr, ptr %146, align 8, !tbaa !65
  call void @set_graphics_cell_proc(ptr noundef nonnull %147) #56
  %148 = load i1, ptr @_ZL9view_mode, align 4
  %149 = zext i1 %148 to i32
  call void @set_graphics_viewmode(i32 noundef %149) #56
  call void @init_graphics_output() #56
  %150 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %151 = getelementptr inbounds %class.Mesh, ptr %150, i64 0, i32 25
  %152 = load ptr, ptr %151, align 8, !tbaa !65
  call void @set_graphics_cell_proc(ptr noundef nonnull %152) #56
  call void @write_graphics_info(i32 noundef 0, i32 noundef 0, double noundef 0.000000e+00, i32 noundef 0, i32 noundef 0) #56
  %153 = load i32, ptr @graphic_outputInterval, align 4, !tbaa !68
  %154 = load i32, ptr @_ZL19next_graphics_cycle, align 4, !tbaa !68
  %155 = add nsw i32 %154, %153
  store i32 %155, ptr @_ZL19next_graphics_cycle, align 4, !tbaa !68
  br label %156

156:                                              ; preds = %113, %106
  %157 = load i64, ptr @_ZL10tstart_cpu, align 8, !tbaa.struct !560
  %158 = load i64, ptr getelementptr inbounds (%struct.timeval, ptr @_ZL10tstart_cpu, i64 0, i32 1), align 8, !tbaa.struct !561
  %159 = call double @cpu_timer_stop(i64 %157, i64 %158) #56
  %160 = load double, ptr @_ZL17cpu_time_graphics, align 8, !tbaa !171
  %161 = fadd double %159, %160
  store double %161, ptr @_ZL17cpu_time_graphics, align 8, !tbaa !171
  store i1 true, ptr @_ZL9view_mode, align 4
  %162 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %163 = load i32, ptr @_ZL13next_cp_cycle, align 4, !tbaa !68
  %164 = icmp eq i32 %162, %163
  br i1 %164, label %165, label %167

165:                                              ; preds = %156
  %166 = load ptr, ptr @_ZL4crux, align 8, !tbaa !29
  call void @_Z15store_crux_dataP4Cruxi(ptr noundef %166, i32 noundef %162) #56
  br label %167

167:                                              ; preds = %165, %156
  call void @cpu_timer_start(ptr noundef nonnull @_ZL6tstart) #56
  %168 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  store i32 %168, ptr @_ZL2it, align 4, !tbaa !68
  %169 = icmp slt i32 %168, 10000000
  br i1 %169, label %170, label %174

170:                                              ; preds = %170, %167
  call void @do_calc() #56
  %171 = load i32, ptr @_ZL2it, align 4, !tbaa !68
  %172 = add nsw i32 %171, 1
  store i32 %172, ptr @_ZL2it, align 4, !tbaa !68
  %173 = icmp slt i32 %171, 9999999
  br i1 %173, label %170, label %174, !llvm.loop !568

174:                                              ; preds = %170, %167
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #57
  ret i32 0

175:                                              ; preds = %69, %67, %45, %43, %41
  %176 = phi ptr [ %20, %43 ], [ %30, %45 ], [ %48, %67 ], [ %57, %69 ], [ %6, %41 ]
  %177 = phi { ptr, i32 } [ %44, %43 ], [ %46, %45 ], [ %68, %67 ], [ %70, %69 ], [ %42, %41 ]
  call void @_ZdlPv(ptr noundef nonnull %176) #58
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #57
  br label %178

178:                                              ; preds = %175, %39
  %179 = phi { ptr, i32 } [ %177, %175 ], [ %40, %39 ]
  resume { ptr, i32 } %179
}

; Function Attrs: optsize uwtable
define internal void @_Z27restore_crux_data_bootstrapP4CruxPci(ptr noundef nonnull %0, ptr noundef %1, i32 noundef %2) #6 personality ptr @__gxx_personality_v0 {
  %4 = alloca [15 x i32], align 16
  %5 = alloca [5 x double], align 16
  %6 = alloca %class.MallocPlus, align 8
  tail call void @_ZN4Crux13restore_beginEPci(ptr noundef nonnull align 4 dereferenceable(12) %0, ptr noundef %1, i32 noundef %2) #56
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %4) #57
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %5) #57
  %7 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) @clamr_bootstrap_memory, ptr noundef nonnull %4, i64 noundef 15, i64 noundef 4, ptr noundef nonnull @.str.16, i32 noundef 16) #56
  %8 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) @clamr_bootstrap_memory, ptr noundef nonnull %5, i64 noundef 5, i64 noundef 8, ptr noundef nonnull @.str.17, i32 noundef 16) #56
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EEC2ERKSG_(ptr noundef nonnull align 8 dereferenceable(48) %6, ptr noundef nonnull align 8 dereferenceable(48) @clamr_bootstrap_memory) #56
  %9 = getelementptr inbounds %class.MallocPlus, ptr %6, i64 0, i32 1
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EEC2ERKSB_(ptr noundef nonnull align 8 dereferenceable(48) %9, ptr noundef nonnull align 8 dereferenceable(48) getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 1)) #56
          to label %14 unwind label %12

10:                                               ; preds = %20, %12
  %11 = phi { ptr, i32 } [ %13, %12 ], [ %21, %20 ]
  resume { ptr, i32 } %11

12:                                               ; preds = %3
  %13 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %6) #59
  br label %10

14:                                               ; preds = %3
  invoke void @_ZN4Crux18restore_MallocPlusE10MallocPlus(ptr noundef nonnull align 4 dereferenceable(12) %0, ptr noundef nonnull %6) #56
          to label %15 unwind label %20

15:                                               ; preds = %14
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %9) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %6) #59
  %16 = load i32, ptr %4, align 16, !tbaa !68
  %17 = icmp eq i32 %16, 101
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.18, i32 noundef %16, i32 noundef 101) #56
  call void @exit(i32 noundef 0) #67
  unreachable

20:                                               ; preds = %14
  %21 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %9) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %6) #59
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %4) #57
  br label %10

22:                                               ; preds = %15
  %23 = getelementptr inbounds [15 x i32], ptr %4, i64 0, i64 1
  %24 = load i32, ptr %23, align 4, !tbaa !68
  store i32 %24, ptr @nx, align 4, !tbaa !68
  %25 = getelementptr inbounds [15 x i32], ptr %4, i64 0, i64 2
  %26 = load i32, ptr %25, align 8, !tbaa !68
  store i32 %26, ptr @ny, align 4, !tbaa !68
  %27 = getelementptr inbounds [15 x i32], ptr %4, i64 0, i64 3
  %28 = load i32, ptr %27, align 4, !tbaa !68
  store i32 %28, ptr @levmx, align 4, !tbaa !68
  %29 = getelementptr inbounds [15 x i32], ptr %4, i64 0, i64 4
  %30 = load i32, ptr %29, align 16, !tbaa !68
  store i32 %30, ptr @ndim, align 4, !tbaa !68
  %31 = getelementptr inbounds [15 x i32], ptr %4, i64 0, i64 5
  %32 = load i32, ptr %31, align 4, !tbaa !68
  store i32 %32, ptr @outputInterval, align 4, !tbaa !68
  %33 = getelementptr inbounds [15 x i32], ptr %4, i64 0, i64 6
  %34 = load i32, ptr %33, align 8, !tbaa !68
  store i32 %34, ptr @enhanced_precision_sum, align 4, !tbaa !68
  %35 = getelementptr inbounds [15 x i32], ptr %4, i64 0, i64 7
  %36 = load i32, ptr %35, align 4, !tbaa !68
  store i32 %36, ptr @niter, align 4, !tbaa !68
  %37 = getelementptr inbounds [15 x i32], ptr %4, i64 0, i64 8
  %38 = load i32, ptr %37, align 16, !tbaa !68
  store i32 %38, ptr @_ZL2it, align 4, !tbaa !68
  %39 = getelementptr inbounds [15 x i32], ptr %4, i64 0, i64 9
  %40 = load i32, ptr %39, align 4, !tbaa !68
  store i32 %40, ptr @_ZL6ncycle, align 4, !tbaa !68
  %41 = getelementptr inbounds [15 x i32], ptr %4, i64 0, i64 10
  %42 = load i32, ptr %41, align 8, !tbaa !68
  store i32 %42, ptr @crux_type, align 4, !tbaa !68
  %43 = getelementptr inbounds [15 x i32], ptr %4, i64 0, i64 11
  %44 = load i32, ptr %43, align 4, !tbaa !68
  store i32 %44, ptr @graphic_outputInterval, align 4, !tbaa !68
  %45 = getelementptr inbounds [15 x i32], ptr %4, i64 0, i64 12
  %46 = load i32, ptr %45, align 16, !tbaa !68
  store i32 %46, ptr @checkpoint_outputInterval, align 4, !tbaa !68
  %47 = getelementptr inbounds [15 x i32], ptr %4, i64 0, i64 13
  %48 = load i32, ptr %47, align 4, !tbaa !68
  store i32 %48, ptr @_ZL13next_cp_cycle, align 4, !tbaa !68
  %49 = getelementptr inbounds [15 x i32], ptr %4, i64 0, i64 14
  %50 = load i32, ptr %49, align 8, !tbaa !68
  store i32 %50, ptr @_ZL19next_graphics_cycle, align 4, !tbaa !68
  %51 = load double, ptr %5, align 16, !tbaa !171
  store double %51, ptr @_ZL11circ_radius, align 8, !tbaa !171
  %52 = getelementptr inbounds [5 x double], ptr %5, i64 0, i64 1
  %53 = load double, ptr %52, align 8, !tbaa !171
  store double %53, ptr @_ZL13H_sum_initial, align 8, !tbaa !171
  %54 = getelementptr inbounds [5 x double], ptr %5, i64 0, i64 2
  %55 = load double, ptr %54, align 16, !tbaa !171
  store double %55, ptr @_ZL7simTime, align 8, !tbaa !171
  %56 = getelementptr inbounds [5 x double], ptr %5, i64 0, i64 3
  %57 = load double, ptr %56, align 8, !tbaa !171
  store double %57, ptr @_ZL6deltaT, align 8, !tbaa !171
  %58 = getelementptr inbounds [5 x double], ptr %5, i64 0, i64 4
  %59 = load double, ptr %58, align 16, !tbaa !171
  store double %59, ptr @upper_mass_diff_percentage, align 8, !tbaa !171
  call void @_ZN4Crux13set_crux_typeEi(ptr noundef nonnull align 4 dereferenceable(12) %0, i32 noundef %42) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) @clamr_bootstrap_memory, ptr noundef nonnull %4) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) @clamr_bootstrap_memory, ptr noundef nonnull %5) #56
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %4) #57
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #37

; Function Attrs: optsize uwtable
define internal void @_Z15store_crux_dataP4Cruxi(ptr noundef %0, i32 noundef %1) #6 personality ptr @__gxx_personality_v0 {
  %3 = alloca [15 x i32], align 16
  %4 = alloca [5 x double], align 16
  %5 = alloca %class.MallocPlus, align 8
  %6 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %7 = tail call noundef i64 @_ZN5State19get_checkpoint_sizeEv(ptr noundef nonnull align 8 dereferenceable(368) %6) #56
  %8 = add i64 %7, 100
  %9 = load i32, ptr @checkpoint_outputInterval, align 4, !tbaa !68
  %10 = load i32, ptr @_ZL13next_cp_cycle, align 4, !tbaa !68
  %11 = add nsw i32 %10, %9
  store i32 %11, ptr @_ZL13next_cp_cycle, align 4, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %3) #57
  store i32 101, ptr %3, align 16, !tbaa !68
  %12 = load i32, ptr @nx, align 4, !tbaa !68
  %13 = getelementptr inbounds [15 x i32], ptr %3, i64 0, i64 1
  store i32 %12, ptr %13, align 4, !tbaa !68
  %14 = load i32, ptr @ny, align 4, !tbaa !68
  %15 = getelementptr inbounds [15 x i32], ptr %3, i64 0, i64 2
  store i32 %14, ptr %15, align 8, !tbaa !68
  %16 = load i32, ptr @levmx, align 4, !tbaa !68
  %17 = getelementptr inbounds [15 x i32], ptr %3, i64 0, i64 3
  store i32 %16, ptr %17, align 4, !tbaa !68
  %18 = load i32, ptr @ndim, align 4, !tbaa !68
  %19 = getelementptr inbounds [15 x i32], ptr %3, i64 0, i64 4
  store i32 %18, ptr %19, align 16, !tbaa !68
  %20 = load i32, ptr @outputInterval, align 4, !tbaa !68
  %21 = getelementptr inbounds [15 x i32], ptr %3, i64 0, i64 5
  store i32 %20, ptr %21, align 4, !tbaa !68
  %22 = load i32, ptr @enhanced_precision_sum, align 4, !tbaa !68
  %23 = getelementptr inbounds [15 x i32], ptr %3, i64 0, i64 6
  store i32 %22, ptr %23, align 8, !tbaa !68
  %24 = load i32, ptr @niter, align 4, !tbaa !68
  %25 = getelementptr inbounds [15 x i32], ptr %3, i64 0, i64 7
  store i32 %24, ptr %25, align 4, !tbaa !68
  %26 = load i32, ptr @_ZL2it, align 4, !tbaa !68
  %27 = getelementptr inbounds [15 x i32], ptr %3, i64 0, i64 8
  store i32 %26, ptr %27, align 16, !tbaa !68
  %28 = getelementptr inbounds [15 x i32], ptr %3, i64 0, i64 9
  store i32 %1, ptr %28, align 4, !tbaa !68
  %29 = load i32, ptr @crux_type, align 4, !tbaa !68
  %30 = getelementptr inbounds [15 x i32], ptr %3, i64 0, i64 10
  store i32 %29, ptr %30, align 8, !tbaa !68
  %31 = load i32, ptr @graphic_outputInterval, align 4, !tbaa !68
  %32 = getelementptr inbounds [15 x i32], ptr %3, i64 0, i64 11
  store i32 %31, ptr %32, align 4, !tbaa !68
  %33 = getelementptr inbounds [15 x i32], ptr %3, i64 0, i64 12
  store i32 %9, ptr %33, align 16, !tbaa !68
  %34 = getelementptr inbounds [15 x i32], ptr %3, i64 0, i64 13
  store i32 %11, ptr %34, align 4, !tbaa !68
  %35 = load i32, ptr @_ZL19next_graphics_cycle, align 4, !tbaa !68
  %36 = getelementptr inbounds [15 x i32], ptr %3, i64 0, i64 14
  store i32 %35, ptr %36, align 8, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %4) #57
  %37 = load double, ptr @_ZL11circ_radius, align 8, !tbaa !171
  store double %37, ptr %4, align 16, !tbaa !171
  %38 = load double, ptr @_ZL13H_sum_initial, align 8, !tbaa !171
  %39 = getelementptr inbounds [5 x double], ptr %4, i64 0, i64 1
  store double %38, ptr %39, align 8, !tbaa !171
  %40 = load double, ptr @_ZL7simTime, align 8, !tbaa !171
  %41 = getelementptr inbounds [5 x double], ptr %4, i64 0, i64 2
  store double %40, ptr %41, align 16, !tbaa !171
  %42 = load double, ptr @_ZL6deltaT, align 8, !tbaa !171
  %43 = getelementptr inbounds [5 x double], ptr %4, i64 0, i64 3
  store double %42, ptr %43, align 8, !tbaa !171
  %44 = load double, ptr @upper_mass_diff_percentage, align 8, !tbaa !171
  %45 = getelementptr inbounds [5 x double], ptr %4, i64 0, i64 4
  store double %44, ptr %45, align 16, !tbaa !171
  %46 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) @clamr_bootstrap_memory, ptr noundef nonnull %3, i64 noundef 15, i64 noundef 4, ptr noundef nonnull @.str.16, i32 noundef 16) #56
  %47 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) @clamr_bootstrap_memory, ptr noundef nonnull %4, i64 noundef 5, i64 noundef 8, ptr noundef nonnull @.str.17, i32 noundef 16) #56
  call void @_ZN4Crux11store_beginEmi(ptr noundef nonnull align 4 dereferenceable(12) %0, i64 noundef %8, i32 noundef %1) #56
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EEC2ERKSG_(ptr noundef nonnull align 8 dereferenceable(48) %5, ptr noundef nonnull align 8 dereferenceable(48) @clamr_bootstrap_memory) #56
  %48 = getelementptr inbounds %class.MallocPlus, ptr %5, i64 0, i32 1
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EEC2ERKSB_(ptr noundef nonnull align 8 dereferenceable(48) %48, ptr noundef nonnull align 8 dereferenceable(48) getelementptr inbounds (%class.MallocPlus, ptr @clamr_bootstrap_memory, i64 0, i32 1)) #56
          to label %53 unwind label %51

49:                                               ; preds = %56, %51
  %50 = phi { ptr, i32 } [ %52, %51 ], [ %57, %56 ]
  resume { ptr, i32 } %50

51:                                               ; preds = %2
  %52 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %5) #59
  br label %49

53:                                               ; preds = %2
  invoke void @_ZN4Crux16store_MallocPlusE10MallocPlus(ptr noundef nonnull align 4 dereferenceable(12) %0, ptr noundef nonnull %5) #56
          to label %54 unwind label %56

54:                                               ; preds = %53
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %48) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %5) #59
  %55 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  call void @_ZN5State16store_checkpointEP4Crux(ptr noundef nonnull align 8 dereferenceable(368) %55, ptr noundef nonnull %0) #56
  call void @_ZN4Crux9store_endEv(ptr noundef nonnull align 4 dereferenceable(12) %0) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) @clamr_bootstrap_memory, ptr noundef nonnull %3) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) @clamr_bootstrap_memory, ptr noundef nonnull %4) #56
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %3) #57
  ret void

56:                                               ; preds = %53
  %57 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %48) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %5) #59
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %3) #57
  br label %49
}

; Function Attrs: optsize uwtable
define internal void @do_calc() #6 personality ptr @__gxx_personality_v0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::vector", align 8
  %4 = alloca %"class.std::vector", align 8
  %5 = alloca %"class.std::vector", align 8
  %6 = alloca %"class.std::ios_base::Init", align 1
  %7 = alloca %"class.std::vector", align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %1) #57
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #57
  %8 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %9 = getelementptr inbounds %class.Mesh, ptr %8, i64 0, i32 45
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #57
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false)
  %10 = load i32, ptr @_ZL13next_cp_cycle, align 4
  %11 = load i32, ptr @niter, align 4
  %12 = load i32, ptr @_ZL19next_graphics_cycle, align 4
  %13 = tail call i32 @llvm.smin.i32(i32 %10, i32 %11)
  %14 = tail call i32 @llvm.smin.i32(i32 %12, i32 %13)
  invoke void @cpu_timer_start(ptr noundef nonnull @_ZL10tstart_cpu) #56
          to label %15 unwind label %27

15:                                               ; preds = %0
  %16 = load i32, ptr @outputInterval, align 4, !tbaa !68
  %17 = icmp sgt i32 %16, -1
  %18 = load i32, ptr @_ZL6ncycle, align 4
  %19 = icmp slt i32 %18, %14
  %20 = select i1 %17, i1 %19, i1 false
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = srem i32 %18, %16
  br label %29

23:                                               ; preds = %133, %15
  %24 = load i64, ptr @_ZL10tstart_cpu, align 8, !tbaa.struct !560
  %25 = load i64, ptr getelementptr inbounds (%struct.timeval, ptr @_ZL10tstart_cpu, i64 0, i32 1), align 8, !tbaa.struct !561
  %26 = invoke double @cpu_timer_stop(i64 %24, i64 %25) #56
          to label %141 unwind label %27

27:                                               ; preds = %141, %23, %0
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %450

29:                                               ; preds = %133, %21
  %30 = phi i32 [ %22, %21 ], [ %134, %133 ]
  %31 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %32 = invoke noundef double @_ZN5State12set_timestepEdd(ptr noundef nonnull align 8 dereferenceable(368) %31, double noundef 9.800000e+00, double noundef 0x3FEE666666666666) #56
          to label %33 unwind label %58

33:                                               ; preds = %29
  store double %32, ptr @_ZL6deltaT, align 8, !tbaa !171
  %34 = load double, ptr @_ZL7simTime, align 8, !tbaa !171
  %35 = fadd double %32, %34
  store double %35, ptr @_ZL7simTime, align 8, !tbaa !171
  %36 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %37 = load i64, ptr %9, align 8, !tbaa !85
  %38 = trunc i64 %37 to i32
  invoke void @_ZN4Mesh14calc_neighborsEi(ptr noundef nonnull align 8 dereferenceable(2288) %36, i32 noundef %38) #56
          to label %39 unwind label %58

39:                                               ; preds = %33
  invoke void @cpu_timer_start(ptr noundef nonnull @_ZL15tstart_partmeas) #56
          to label %40 unwind label %58

40:                                               ; preds = %39
  %41 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  invoke void @_ZN4Mesh17partition_measureEv(ptr noundef nonnull align 8 dereferenceable(2288) %41) #56
          to label %42 unwind label %58

42:                                               ; preds = %40
  %43 = load i64, ptr @_ZL15tstart_partmeas, align 8, !tbaa.struct !560
  %44 = load i64, ptr getelementptr inbounds (%struct.timeval, ptr @_ZL15tstart_partmeas, i64 0, i32 1), align 8, !tbaa.struct !561
  %45 = invoke double @cpu_timer_stop(i64 %43, i64 %44) #56
          to label %46 unwind label %58

46:                                               ; preds = %42
  %47 = load double, ptr @_ZL17cpu_time_partmeas, align 8, !tbaa !171
  %48 = fadd double %45, %47
  store double %48, ptr @_ZL17cpu_time_partmeas, align 8, !tbaa !171
  %49 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %50 = load i64, ptr %9, align 8, !tbaa !85
  %51 = trunc i64 %50 to i32
  invoke void @_ZN4Mesh10set_boundsEi(ptr noundef nonnull align 8 dereferenceable(2288) %49, i32 noundef %51) #56
          to label %52 unwind label %58

52:                                               ; preds = %46
  %53 = load i8, ptr @face_based, align 1, !tbaa !540, !range !130, !noundef !131
  %54 = icmp eq i8 %53, 0
  %55 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %56 = load double, ptr @_ZL6deltaT, align 8, !tbaa !171
  br i1 %54, label %60, label %57

57:                                               ; preds = %52
  invoke void @_ZN5State32calc_finite_difference_via_facesEd(ptr noundef nonnull align 8 dereferenceable(368) %55, double noundef %56) #56
          to label %61 unwind label %58

58:                                               ; preds = %85, %81, %68, %65, %63, %61, %60, %57, %46, %42, %40, %39, %33, %29
  %59 = landingpad { ptr, i32 }
          cleanup
  br label %450

60:                                               ; preds = %52
  invoke void @_ZN5State22calc_finite_differenceEd(ptr noundef nonnull align 8 dereferenceable(368) %55, double noundef %56) #56
          to label %61 unwind label %58

61:                                               ; preds = %60, %57
  %62 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  invoke void @_ZN5State21remove_boundary_cellsEv(ptr noundef nonnull align 8 dereferenceable(368) %62) #56
          to label %63 unwind label %58

63:                                               ; preds = %61
  %64 = load i64, ptr %9, align 8, !tbaa !85
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %3, i64 noundef %64) #56
          to label %65 unwind label %58

65:                                               ; preds = %63
  %66 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %67 = invoke noundef i64 @_ZN5State21calc_refine_potentialERSt6vectorIiSaIiEERiS4_(ptr noundef nonnull align 8 dereferenceable(368) %66, ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 4 dereferenceable(4) %1, ptr noundef nonnull align 4 dereferenceable(4) %2) #56
          to label %68 unwind label %58

68:                                               ; preds = %65
  %69 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %70 = load i32, ptr %1, align 4, !tbaa !68
  %71 = load i32, ptr %2, align 4, !tbaa !68
  invoke void @_ZNSt6vectorIiSaIiEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %3) #56
          to label %72 unwind label %58

72:                                               ; preds = %68
  invoke void @_ZN5State10rezone_allEiiSt6vectorIiSaIiEE(ptr noundef nonnull align 8 dereferenceable(368) %69, i32 noundef %70, i32 noundef %71, ptr noundef nonnull %4) #56
          to label %73 unwind label %112

73:                                               ; preds = %72
  %74 = load ptr, ptr %4, align 8, !tbaa !65
  %75 = icmp eq ptr %74, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  call void @_ZdlPv(ptr noundef nonnull %74) #58
  br label %77

77:                                               ; preds = %76, %73
  %78 = load ptr, ptr %3, align 8, !tbaa !65
  %79 = icmp eq ptr %78, null
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false)
  br i1 %79, label %81, label %80

80:                                               ; preds = %77
  call void @_ZdlPv(ptr noundef nonnull %78) #58
  br label %81

81:                                               ; preds = %80, %77
  %82 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %83 = getelementptr inbounds %class.Mesh, ptr %82, i64 0, i32 45
  store i64 %67, ptr %83, align 8, !tbaa !543
  store i64 %67, ptr %9, align 8, !tbaa !85
  %84 = trunc i64 %67 to i32
  invoke void @_ZN4Mesh10set_boundsEi(ptr noundef nonnull align 8 dereferenceable(2288) %82, i32 noundef %84) #56
          to label %85 unwind label %58

85:                                               ; preds = %81
  %86 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %87 = getelementptr inbounds %class.Mesh, ptr %86, i64 0, i32 25
  %88 = load i64, ptr %9, align 8, !tbaa !85
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %87, i64 noundef %88) #56
          to label %89 unwind label %58

89:                                               ; preds = %85
  %90 = load i32, ptr %1, align 4, !tbaa !68
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %133, label %92

92:                                               ; preds = %89
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #57
  %93 = load i64, ptr %9, align 8, !tbaa !85
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #57
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %5, i64 noundef %93, ptr noundef nonnull align 1 dereferenceable(1) %6) #56
          to label %94 unwind label %117

94:                                               ; preds = %92
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #57
  %95 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %96 = load i32, ptr @numpe, align 4, !tbaa !68
  %97 = load i32, ptr @cycle_reorder, align 4, !tbaa !541
  invoke void @_ZN4Mesh15partition_cellsEiRSt6vectorIiSaIiEE16partition_method(ptr noundef nonnull align 8 dereferenceable(2288) %95, i32 noundef %96, ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %97) #56
          to label %98 unwind label %119

98:                                               ; preds = %94
  %99 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  invoke void @_ZNSt6vectorIiSaIiEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %5) #56
          to label %100 unwind label %119

100:                                              ; preds = %98
  invoke void @_ZN5State13state_reorderESt6vectorIiSaIiEE(ptr noundef nonnull align 8 dereferenceable(368) %99, ptr noundef nonnull %7) #56
          to label %101 unwind label %121

101:                                              ; preds = %100
  %102 = load ptr, ptr %7, align 8, !tbaa !65
  %103 = icmp eq ptr %102, null
  br i1 %103, label %105, label %104

104:                                              ; preds = %101
  call void @_ZdlPv(ptr noundef nonnull %102) #58
  br label %105

105:                                              ; preds = %104, %101
  %106 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  invoke void @_ZN5State17memory_reset_ptrsEv(ptr noundef nonnull align 8 dereferenceable(368) %106) #56
          to label %107 unwind label %119

107:                                              ; preds = %105
  %108 = load ptr, ptr %5, align 8, !tbaa !65
  %109 = icmp eq ptr %108, null
  br i1 %109, label %111, label %110

110:                                              ; preds = %107
  call void @_ZdlPv(ptr noundef nonnull %108) #58
  br label %111

111:                                              ; preds = %110, %107
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #57
  br label %133

112:                                              ; preds = %72
  %113 = landingpad { ptr, i32 }
          cleanup
  %114 = load ptr, ptr %4, align 8, !tbaa !65
  %115 = icmp eq ptr %114, null
  br i1 %115, label %450, label %116

116:                                              ; preds = %112
  call void @_ZdlPv(ptr noundef nonnull %114) #58
  br label %450

117:                                              ; preds = %92
  %118 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #57
  br label %131

119:                                              ; preds = %105, %98, %94
  %120 = landingpad { ptr, i32 }
          cleanup
  br label %126

121:                                              ; preds = %100
  %122 = landingpad { ptr, i32 }
          cleanup
  %123 = load ptr, ptr %7, align 8, !tbaa !65
  %124 = icmp eq ptr %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  call void @_ZdlPv(ptr noundef nonnull %123) #58
  br label %126

126:                                              ; preds = %125, %121, %119
  %127 = phi { ptr, i32 } [ %120, %119 ], [ %122, %121 ], [ %122, %125 ]
  %128 = load ptr, ptr %5, align 8, !tbaa !65
  %129 = icmp eq ptr %128, null
  br i1 %129, label %131, label %130

130:                                              ; preds = %126
  call void @_ZdlPv(ptr noundef nonnull %128) #58
  br label %131

131:                                              ; preds = %130, %126, %117
  %132 = phi { ptr, i32 } [ %118, %117 ], [ %127, %126 ], [ %127, %130 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #57
  br label %450

133:                                              ; preds = %111, %89
  %134 = add nsw i32 %30, 1
  %135 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %136 = add nsw i32 %135, 1
  store i32 %136, ptr @_ZL6ncycle, align 4, !tbaa !68
  %137 = load i32, ptr @outputInterval, align 4, !tbaa !68
  %138 = icmp slt i32 %134, %137
  %139 = icmp slt i32 %136, %14
  %140 = select i1 %138, i1 %139, i1 false
  br i1 %140, label %29, label %23, !llvm.loop !569

141:                                              ; preds = %23
  %142 = load double, ptr @_ZL14cpu_time_calcs, align 8, !tbaa !171
  %143 = fadd double %26, %142
  store double %143, ptr @_ZL14cpu_time_calcs, align 8, !tbaa !171
  %144 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %145 = load i32, ptr @enhanced_precision_sum, align 4, !tbaa !68
  %146 = invoke noundef double @_ZN5State8mass_sumEi(ptr noundef nonnull align 8 dereferenceable(368) %144, i32 noundef %145) #56
          to label %147 unwind label %27

147:                                              ; preds = %141
  %148 = fcmp ord double %146, 0.000000e+00
  br i1 %148, label %152, label %149

149:                                              ; preds = %147
  %150 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %151 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.3, i32 noundef %150) #56
  br label %152

152:                                              ; preds = %149, %147
  %153 = load double, ptr @_ZL13H_sum_initial, align 8, !tbaa !171
  %154 = fsub double %146, %153
  %155 = call double @llvm.fabs.f64(double %154)
  %156 = fdiv double %155, %153
  %157 = fmul double %156, 1.000000e+02
  %158 = load double, ptr @upper_mass_diff_percentage, align 8, !tbaa !171
  %159 = fcmp ult double %157, %158
  br i1 %159, label %165, label %160

160:                                              ; preds = %152
  %161 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %162 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.4, i32 noundef %161, double noundef %157, double noundef %158) #56
  br label %166

163:                                              ; preds = %365, %360, %359, %346, %337, %333, %328, %317, %314, %311, %302, %291, %289, %265, %243, %224, %220, %215, %204, %201, %198, %196, %175
  %164 = landingpad { ptr, i32 }
          cleanup
  br label %450

165:                                              ; preds = %152
  br i1 %148, label %272, label %166

166:                                              ; preds = %165, %160
  %167 = phi i32 [ 2, %160 ], [ 1, %165 ]
  %168 = load i32, ptr @crux_type, align 4, !tbaa !68
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %265, label %170

170:                                              ; preds = %166
  %171 = load i32, ptr @_ZZ7do_calcE16rollback_attempt, align 4, !tbaa !68
  %172 = add nsw i32 %171, 1
  store i32 %172, ptr @_ZZ7do_calcE16rollback_attempt, align 4, !tbaa !68
  %173 = load i32, ptr @num_of_rollback_states, align 4, !tbaa !68
  %174 = icmp slt i32 %171, %173
  br i1 %174, label %192, label %175

175:                                              ; preds = %170
  %176 = call i32 @puts(ptr nonnull dereferenceable(1) @str.22)
  %177 = load i64, ptr @total_exec, align 8, !tbaa.struct !560
  %178 = load i64, ptr getelementptr inbounds (%struct.timeval, ptr @total_exec, i64 0, i32 1), align 8, !tbaa.struct !561
  %179 = invoke double @cpu_timer_stop(i64 %177, i64 %178) #56
          to label %180 unwind label %163

180:                                              ; preds = %175
  store double %179, ptr @_ZZ7do_calcE18total_program_time, align 8, !tbaa !171
  %181 = call noalias ptr @fopen(ptr noundef nonnull @total_sim_time_log, ptr noundef nonnull @.str.6) #56
  %182 = load double, ptr @_ZZ7do_calcE18total_program_time, align 8, !tbaa !171
  %183 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %181, ptr noundef nonnull @.str.7, double noundef %182) #56
  %184 = call i32 @fclose(ptr noundef %181) #56
  %185 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %186 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %187 = load double, ptr @_ZL7simTime, align 8, !tbaa !171
  %188 = load double, ptr @_ZL13H_sum_initial, align 8, !tbaa !171
  invoke void @_ZN5State17print_failure_logEiddddb(ptr noundef nonnull align 8 dereferenceable(368) %185, i32 noundef %186, double noundef %187, double noundef %188, double noundef %146, double noundef %157, i1 noundef zeroext true) #56
          to label %189 unwind label %190

189:                                              ; preds = %180
  call void @exit(i32 noundef -1) #67
  unreachable

190:                                              ; preds = %180
  %191 = landingpad { ptr, i32 }
          cleanup
  br label %450

192:                                              ; preds = %170
  %193 = load i32, ptr @graphic_outputInterval, align 4, !tbaa !68
  %194 = load i32, ptr @niter, align 4, !tbaa !68
  %195 = icmp sgt i32 %193, %194
  br i1 %195, label %232, label %196

196:                                              ; preds = %192
  %197 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  invoke void @_ZN4Mesh24calc_spatial_coordinatesEi(ptr noundef nonnull align 8 dereferenceable(2288) %197, i32 noundef 0) #56
          to label %198 unwind label %163

198:                                              ; preds = %196
  %199 = load i64, ptr %9, align 8, !tbaa !85
  %200 = trunc i64 %199 to i32
  invoke void @set_graphics_mysize(i32 noundef %200) #56
          to label %201 unwind label %163

201:                                              ; preds = %198
  %202 = load i1, ptr @_ZL9view_mode, align 4
  %203 = zext i1 %202 to i32
  invoke void @set_graphics_viewmode(i32 noundef %203) #56
          to label %204 unwind label %163

204:                                              ; preds = %201
  %205 = load ptr, ptr @set_graphics_cell_coordinates, align 8, !tbaa !29
  %206 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %207 = getelementptr inbounds %class.Mesh, ptr %206, i64 0, i32 75
  %208 = load ptr, ptr %207, align 8, !tbaa !109
  %209 = getelementptr inbounds %class.Mesh, ptr %206, i64 0, i32 76
  %210 = load ptr, ptr %209, align 8, !tbaa !109
  %211 = getelementptr inbounds %class.Mesh, ptr %206, i64 0, i32 77
  %212 = load ptr, ptr %211, align 8, !tbaa !109
  %213 = getelementptr inbounds %class.Mesh, ptr %206, i64 0, i32 78
  %214 = load ptr, ptr %213, align 8, !tbaa !109
  invoke void %205(ptr noundef nonnull %208, ptr noundef nonnull %210, ptr noundef nonnull %212, ptr noundef nonnull %214) #56
          to label %215 unwind label %163

215:                                              ; preds = %204
  %216 = load ptr, ptr @set_graphics_cell_data, align 8, !tbaa !29
  %217 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %218 = getelementptr inbounds %class.State, ptr %217, i64 0, i32 3
  %219 = load ptr, ptr %218, align 8, !tbaa !566
  invoke void %216(ptr noundef %219) #56
          to label %220 unwind label %163

220:                                              ; preds = %215
  %221 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %222 = getelementptr inbounds %class.Mesh, ptr %221, i64 0, i32 25
  %223 = load ptr, ptr %222, align 8, !tbaa !65
  invoke void @set_graphics_cell_proc(ptr noundef nonnull %223) #56
          to label %224 unwind label %163

224:                                              ; preds = %220
  %225 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %226 = load i32, ptr @graphic_outputInterval, align 4, !tbaa !68
  %227 = sdiv i32 %225, %226
  %228 = load double, ptr @_ZL7simTime, align 8, !tbaa !171
  %229 = load i32, ptr @_ZZ7do_calcE16rollback_attempt, align 4, !tbaa !68
  invoke void @write_graphics_info(i32 noundef %227, i32 noundef %225, double noundef %228, i32 noundef 1, i32 noundef %229) #56
          to label %230 unwind label %163

230:                                              ; preds = %224
  %231 = load i32, ptr @_ZZ7do_calcE16rollback_attempt, align 4, !tbaa !68
  br label %232

232:                                              ; preds = %230, %192
  %233 = phi i32 [ %231, %230 ], [ %172, %192 ]
  %234 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %235 = load i32, ptr @checkpoint_outputInterval, align 4, !tbaa !68
  %236 = mul nsw i32 %235, %233
  %237 = sub nsw i32 %234, %236
  %238 = icmp slt i32 %237, 0
  br i1 %238, label %239, label %241

239:                                              ; preds = %232
  %240 = call i32 @puts(ptr nonnull dereferenceable(1) @str.21)
  br label %243

241:                                              ; preds = %232
  %242 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.9, i32 noundef %237) #56
  br label %243

243:                                              ; preds = %241, %239
  %244 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %245 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %246 = load double, ptr @_ZL7simTime, align 8, !tbaa !171
  %247 = load double, ptr @_ZL13H_sum_initial, align 8, !tbaa !171
  %248 = load i32, ptr @_ZZ7do_calcE16rollback_attempt, align 4, !tbaa !68
  %249 = load i32, ptr @num_of_rollback_states, align 4, !tbaa !68
  invoke void @_ZN5State18print_rollback_logEiddddiii(ptr noundef nonnull align 8 dereferenceable(368) %244, i32 noundef %245, double noundef %246, double noundef %247, double noundef %146, double noundef %157, i32 noundef %248, i32 noundef %249, i32 noundef %167) #56
          to label %250 unwind label %163

250:                                              ; preds = %243
  %251 = load ptr, ptr @_ZL4crux, align 8, !tbaa !29
  %252 = invoke noundef i32 @_ZN4Crux19get_rollback_numberEv(ptr noundef nonnull align 4 dereferenceable(12) %251) #56
          to label %253 unwind label %263

253:                                              ; preds = %250
  %254 = load ptr, ptr @_ZL4crux, align 8, !tbaa !29
  invoke void @_Z27restore_crux_data_bootstrapP4CruxPci(ptr noundef %254, ptr noundef null, i32 noundef %252) #56
          to label %255 unwind label %263

255:                                              ; preds = %253
  %256 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  invoke void @_ZN4Mesh9terminateEv(ptr noundef nonnull align 8 dereferenceable(2288) %256) #56
          to label %257 unwind label %263

257:                                              ; preds = %255
  %258 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  invoke void @_ZN5State9terminateEv(ptr noundef nonnull align 8 dereferenceable(368) %258) #56
          to label %259 unwind label %263

259:                                              ; preds = %257
  %260 = load ptr, ptr @_ZL4crux, align 8, !tbaa !29
  %261 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  invoke void @_ZN5State18restore_checkpointEP4Crux(ptr noundef nonnull align 8 dereferenceable(368) %261, ptr noundef %260) #56
          to label %262 unwind label %263

262:                                              ; preds = %259
  invoke void @_ZN4Crux11restore_endEv(ptr noundef nonnull align 4 dereferenceable(12) %260) #56
          to label %272 unwind label %263

263:                                              ; preds = %262, %259, %257, %255, %253, %250
  %264 = landingpad { ptr, i32 }
          cleanup
  br label %450

265:                                              ; preds = %166
  %266 = call i32 @puts(ptr nonnull dereferenceable(1) @str)
  %267 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %268 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %269 = load double, ptr @_ZL7simTime, align 8, !tbaa !171
  %270 = load double, ptr @_ZL13H_sum_initial, align 8, !tbaa !171
  invoke void @_ZN5State17print_failure_logEiddddb(ptr noundef nonnull align 8 dereferenceable(368) %267, i32 noundef %268, double noundef %269, double noundef %270, double noundef %146, double noundef %157, i1 noundef zeroext true) #56
          to label %271 unwind label %163

271:                                              ; preds = %265
  call void @exit(i32 noundef -1) #67
  unreachable

272:                                              ; preds = %262, %165
  %273 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %274 = load i32, ptr @outputInterval, align 4, !tbaa !68
  %275 = srem i32 %273, %274
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %285

277:                                              ; preds = %272
  %278 = load double, ptr @_ZL6deltaT, align 8, !tbaa !171
  %279 = load double, ptr @_ZL7simTime, align 8, !tbaa !171
  %280 = load i64, ptr %9, align 8, !tbaa !85
  %281 = load double, ptr @_ZL13H_sum_initial, align 8, !tbaa !171
  %282 = fsub double %146, %281
  %283 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.11.29, i32 noundef %273, double noundef %278, double noundef %279, i64 noundef %280, double noundef %146, double noundef %282) #56
  %284 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  br label %285

285:                                              ; preds = %277, %272
  %286 = phi i32 [ %284, %277 ], [ %273, %272 ]
  %287 = load i32, ptr @_ZL13next_cp_cycle, align 4, !tbaa !68
  %288 = icmp eq i32 %286, %287
  br i1 %288, label %289, label %291

289:                                              ; preds = %285
  %290 = load ptr, ptr @_ZL4crux, align 8, !tbaa !29
  invoke void @_Z15store_crux_dataP4Cruxi(ptr noundef %290, i32 noundef %286) #56
          to label %291 unwind label %163

291:                                              ; preds = %289, %285
  invoke void @cpu_timer_start(ptr noundef nonnull @_ZL10tstart_cpu) #56
          to label %292 unwind label %163

292:                                              ; preds = %291
  %293 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %294 = load i32, ptr @_ZL19next_graphics_cycle, align 4, !tbaa !68
  %295 = icmp eq i32 %293, %294
  br i1 %295, label %302, label %296

296:                                              ; preds = %292
  %297 = load i32, ptr @niter, align 4, !tbaa !68
  %298 = icmp sge i32 %293, %297
  %299 = load i32, ptr @graphic_outputInterval, align 4
  %300 = icmp slt i32 %299, %297
  %301 = select i1 %298, i1 %300, i1 false
  br i1 %301, label %302, label %307

302:                                              ; preds = %296, %292
  %303 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  invoke void @_ZN4Mesh24calc_spatial_coordinatesEi(ptr noundef nonnull align 8 dereferenceable(2288) %303, i32 noundef 0) #56
          to label %304 unwind label %163

304:                                              ; preds = %302
  %305 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %306 = load i32, ptr @_ZL19next_graphics_cycle, align 4, !tbaa !68
  br label %307

307:                                              ; preds = %304, %296
  %308 = phi i32 [ %306, %304 ], [ %294, %296 ]
  %309 = phi i32 [ %305, %304 ], [ %293, %296 ]
  %310 = icmp eq i32 %309, %308
  br i1 %310, label %311, label %346

311:                                              ; preds = %307
  %312 = load i64, ptr %9, align 8, !tbaa !85
  %313 = trunc i64 %312 to i32
  invoke void @set_graphics_mysize(i32 noundef %313) #56
          to label %314 unwind label %163

314:                                              ; preds = %311
  %315 = load i1, ptr @_ZL9view_mode, align 4
  %316 = zext i1 %315 to i32
  invoke void @set_graphics_viewmode(i32 noundef %316) #56
          to label %317 unwind label %163

317:                                              ; preds = %314
  %318 = load ptr, ptr @set_graphics_cell_coordinates, align 8, !tbaa !29
  %319 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %320 = getelementptr inbounds %class.Mesh, ptr %319, i64 0, i32 75
  %321 = load ptr, ptr %320, align 8, !tbaa !109
  %322 = getelementptr inbounds %class.Mesh, ptr %319, i64 0, i32 76
  %323 = load ptr, ptr %322, align 8, !tbaa !109
  %324 = getelementptr inbounds %class.Mesh, ptr %319, i64 0, i32 77
  %325 = load ptr, ptr %324, align 8, !tbaa !109
  %326 = getelementptr inbounds %class.Mesh, ptr %319, i64 0, i32 78
  %327 = load ptr, ptr %326, align 8, !tbaa !109
  invoke void %318(ptr noundef nonnull %321, ptr noundef nonnull %323, ptr noundef nonnull %325, ptr noundef nonnull %327) #56
          to label %328 unwind label %163

328:                                              ; preds = %317
  %329 = load ptr, ptr @set_graphics_cell_data, align 8, !tbaa !29
  %330 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %331 = getelementptr inbounds %class.State, ptr %330, i64 0, i32 3
  %332 = load ptr, ptr %331, align 8, !tbaa !566
  invoke void %329(ptr noundef %332) #56
          to label %333 unwind label %163

333:                                              ; preds = %328
  %334 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %335 = getelementptr inbounds %class.Mesh, ptr %334, i64 0, i32 25
  %336 = load ptr, ptr %335, align 8, !tbaa !65
  invoke void @set_graphics_cell_proc(ptr noundef nonnull %336) #56
          to label %337 unwind label %163

337:                                              ; preds = %333
  %338 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %339 = load i32, ptr @graphic_outputInterval, align 4, !tbaa !68
  %340 = sdiv i32 %338, %339
  %341 = load double, ptr @_ZL7simTime, align 8, !tbaa !171
  invoke void @write_graphics_info(i32 noundef %340, i32 noundef %338, double noundef %341, i32 noundef 0, i32 noundef 0) #56
          to label %342 unwind label %163

342:                                              ; preds = %337
  %343 = load i32, ptr @graphic_outputInterval, align 4, !tbaa !68
  %344 = load i32, ptr @_ZL19next_graphics_cycle, align 4, !tbaa !68
  %345 = add nsw i32 %344, %343
  store i32 %345, ptr @_ZL19next_graphics_cycle, align 4, !tbaa !68
  br label %346

346:                                              ; preds = %342, %307
  %347 = load i64, ptr @_ZL10tstart_cpu, align 8, !tbaa.struct !560
  %348 = load i64, ptr getelementptr inbounds (%struct.timeval, ptr @_ZL10tstart_cpu, i64 0, i32 1), align 8, !tbaa.struct !561
  %349 = invoke double @cpu_timer_stop(i64 %347, i64 %348) #56
          to label %350 unwind label %163

350:                                              ; preds = %346
  %351 = load double, ptr @_ZL17cpu_time_graphics, align 8, !tbaa !171
  %352 = fadd double %349, %351
  store double %352, ptr @_ZL17cpu_time_graphics, align 8, !tbaa !171
  %353 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %354 = load i32, ptr @niter, align 4, !tbaa !68
  %355 = icmp slt i32 %353, %354
  br i1 %355, label %445, label %356

356:                                              ; preds = %350
  %357 = load i32, ptr @graphic_outputInterval, align 4, !tbaa !68
  %358 = icmp slt i32 %357, %354
  br i1 %358, label %359, label %375

359:                                              ; preds = %356
  invoke void @cpu_timer_start(ptr noundef nonnull @_ZL10tstart_cpu) #56
          to label %360 unwind label %163

360:                                              ; preds = %359
  %361 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %362 = load i32, ptr @graphic_outputInterval, align 4, !tbaa !68
  %363 = sdiv i32 %361, %362
  %364 = load double, ptr @_ZL7simTime, align 8, !tbaa !171
  invoke void @write_graphics_info(i32 noundef %363, i32 noundef %361, double noundef %364, i32 noundef 0, i32 noundef 0) #56
          to label %365 unwind label %163

365:                                              ; preds = %360
  %366 = load i32, ptr @graphic_outputInterval, align 4, !tbaa !68
  %367 = load i32, ptr @_ZL19next_graphics_cycle, align 4, !tbaa !68
  %368 = add nsw i32 %367, %366
  store i32 %368, ptr @_ZL19next_graphics_cycle, align 4, !tbaa !68
  %369 = load i64, ptr @_ZL10tstart_cpu, align 8, !tbaa.struct !560
  %370 = load i64, ptr getelementptr inbounds (%struct.timeval, ptr @_ZL10tstart_cpu, i64 0, i32 1), align 8, !tbaa.struct !561
  %371 = invoke double @cpu_timer_stop(i64 %369, i64 %370) #56
          to label %372 unwind label %163

372:                                              ; preds = %365
  %373 = load double, ptr @_ZL17cpu_time_graphics, align 8, !tbaa !171
  %374 = fadd double %371, %373
  store double %374, ptr @_ZL17cpu_time_graphics, align 8, !tbaa !171
  br label %375

375:                                              ; preds = %372, %356
  %376 = load i64, ptr @_ZL6tstart, align 8, !tbaa.struct !560
  %377 = load i64, ptr getelementptr inbounds (%struct.timeval, ptr @_ZL6tstart, i64 0, i32 1), align 8, !tbaa.struct !561
  %378 = invoke double @cpu_timer_stop(i64 %376, i64 %377) #56
          to label %379 unwind label %443

379:                                              ; preds = %375
  %380 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  invoke void @_ZN5State18output_timing_infoEiid(ptr noundef nonnull align 8 dereferenceable(368) %380, i32 noundef 1, i32 noundef 0, double noundef %378) #56
          to label %381 unwind label %443

381:                                              ; preds = %379
  %382 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  invoke void @_ZN4Mesh23print_partition_measureEv(ptr noundef nonnull align 8 dereferenceable(2288) %382) #56
          to label %383 unwind label %443

383:                                              ; preds = %381
  %384 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  invoke void @_ZN4Mesh24print_calc_neighbor_typeEv(ptr noundef nonnull align 8 dereferenceable(2288) %384) #56
          to label %385 unwind label %443

385:                                              ; preds = %383
  %386 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  invoke void @_ZN4Mesh20print_partition_typeEv(ptr noundef nonnull align 8 dereferenceable(2288) %386) #56
          to label %387 unwind label %443

387:                                              ; preds = %385
  %388 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %389 = getelementptr inbounds %class.Mesh, ptr %388, i64 0, i32 5, i64 0
  %390 = load i32, ptr %389, align 4, !tbaa !68
  %391 = sitofp i32 %390 to double
  %392 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %393 = sitofp i32 %392 to double
  %394 = fdiv double %391, %393
  %395 = fmul double %394, 1.000000e+02
  %396 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.12, double noundef %395) #56
  %397 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %398 = getelementptr inbounds %class.Mesh, ptr %397, i64 0, i32 5, i64 2
  %399 = load i32, ptr %398, align 4, !tbaa !68
  %400 = sitofp i32 %399 to double
  %401 = load i32, ptr @_ZL6ncycle, align 4, !tbaa !68
  %402 = sitofp i32 %401 to double
  %403 = fdiv double %400, %402
  %404 = fmul double %403, 1.000000e+02
  %405 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.13, double noundef %404) #56
  %406 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %407 = getelementptr inbounds %class.Mesh, ptr %406, i64 0, i32 5, i64 0
  %408 = load <2 x i32>, ptr %407, align 4, !tbaa !68
  %409 = sitofp <2 x i32> %408 to <2 x double>
  %410 = extractelement <2 x double> %409, i64 0
  %411 = extractelement <2 x double> %409, i64 1
  %412 = fdiv double %411, %410
  %413 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.14, double noundef %412) #56
  %414 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  invoke void @_ZN4Mesh9terminateEv(ptr noundef nonnull align 8 dereferenceable(2288) %414) #56
          to label %415 unwind label %443

415:                                              ; preds = %387
  %416 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  invoke void @_ZN5State9terminateEv(ptr noundef nonnull align 8 dereferenceable(368) %416) #56
          to label %417 unwind label %443

417:                                              ; preds = %415
  invoke void @terminate_graphics_output() #56
          to label %418 unwind label %443

418:                                              ; preds = %417
  %419 = load ptr, ptr @_ZL4mesh, align 8, !tbaa !29
  %420 = icmp eq ptr %419, null
  br i1 %420, label %422, label %421

421:                                              ; preds = %418
  call void @_ZN4MeshD2Ev(ptr noundef nonnull align 8 dereferenceable(2288) %419) #59
  call void @_ZdlPv(ptr noundef nonnull %419) #58
  br label %422

422:                                              ; preds = %421, %418
  %423 = load ptr, ptr @_ZL5state, align 8, !tbaa !29
  %424 = icmp eq ptr %423, null
  br i1 %424, label %426, label %425

425:                                              ; preds = %422
  call void @_ZN5StateD2Ev(ptr noundef nonnull align 8 dereferenceable(368) %423) #59
  call void @_ZdlPv(ptr noundef nonnull %423) #58
  br label %426

426:                                              ; preds = %425, %422
  %427 = load ptr, ptr @_ZL4crux, align 8, !tbaa !29
  %428 = icmp eq ptr %427, null
  br i1 %428, label %430, label %429

429:                                              ; preds = %426
  call void @_ZN4CruxD1Ev(ptr noundef nonnull align 4 dereferenceable(12) %427) #59
  call void @_ZdlPv(ptr noundef nonnull %427) #58
  br label %430

430:                                              ; preds = %429, %426
  %431 = load ptr, ptr @_ZL5parse, align 8, !tbaa !29
  %432 = icmp eq ptr %431, null
  br i1 %432, label %434, label %433

433:                                              ; preds = %430
  call void @_ZN2PP11PowerParserD1Ev(ptr noundef nonnull align 8 dereferenceable(2796) %431) #59
  call void @_ZdlPv(ptr noundef nonnull %431) #58
  br label %434

434:                                              ; preds = %433, %430
  %435 = load i64, ptr @total_exec, align 8, !tbaa.struct !560
  %436 = load i64, ptr getelementptr inbounds (%struct.timeval, ptr @total_exec, i64 0, i32 1), align 8, !tbaa.struct !561
  %437 = invoke double @cpu_timer_stop(i64 %435, i64 %436) #56
          to label %438 unwind label %443

438:                                              ; preds = %434
  store double %437, ptr @_ZZ7do_calcE18total_program_time, align 8, !tbaa !171
  %439 = call noalias ptr @fopen(ptr noundef nonnull @total_sim_time_log, ptr noundef nonnull @.str.6) #56
  %440 = load double, ptr @_ZZ7do_calcE18total_program_time, align 8, !tbaa !171
  %441 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %439, ptr noundef nonnull @.str.15, double noundef %440) #56
  %442 = call i32 @fclose(ptr noundef %439) #56
  call void @exit(i32 noundef 0) #67
  unreachable

443:                                              ; preds = %434, %417, %415, %387, %385, %383, %381, %379, %375
  %444 = landingpad { ptr, i32 }
          cleanup
  br label %450

445:                                              ; preds = %350
  %446 = load ptr, ptr %3, align 8, !tbaa !65
  %447 = icmp eq ptr %446, null
  br i1 %447, label %449, label %448

448:                                              ; preds = %445
  call void @_ZdlPv(ptr noundef nonnull %446) #58
  br label %449

449:                                              ; preds = %448, %445
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %1) #57
  ret void

450:                                              ; preds = %443, %263, %190, %163, %131, %116, %112, %58, %27
  %451 = phi { ptr, i32 } [ %28, %27 ], [ %132, %131 ], [ %59, %58 ], [ %191, %190 ], [ %164, %163 ], [ %444, %443 ], [ %264, %263 ], [ %113, %112 ], [ %113, %116 ]
  %452 = load ptr, ptr %3, align 8, !tbaa !65
  %453 = icmp eq ptr %452, null
  br i1 %453, label %455, label %454

454:                                              ; preds = %450
  call void @_ZdlPv(ptr noundef nonnull %452) #58
  br label %455

455:                                              ; preds = %454, %450
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %1) #57
  resume { ptr, i32 } %451
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #21

; Function Attrs: optsize uwtable
define internal void @_ZNSt6vectorIiSaIiEEC2EmRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1, ptr noundef nonnull align 1 dereferenceable(1) %2) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = icmp ugt i64 %1, 2305843009213693951
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.20.30) #61
  unreachable

6:                                                ; preds = %3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  br label %18

9:                                                ; preds = %6
  %10 = tail call noundef ptr @_ZNSt15__new_allocatorIiE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef null) #56
  store ptr %10, ptr %0, align 8, !tbaa !65
  %11 = getelementptr inbounds i32, ptr %10, i64 %1
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %11, ptr %12, align 8, !tbaa !67
  store i32 0, ptr %10, align 4, !tbaa !68
  %13 = getelementptr i32, ptr %10, i64 1
  %14 = icmp eq i64 %1, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  %16 = shl nuw nsw i64 %1, 2
  %17 = add nsw i64 %16, -4
  tail call void @llvm.memset.p0.i64(ptr align 4 %13, i8 0, i64 %17, i1 false), !tbaa !68
  br label %18

18:                                               ; preds = %15, %9, %8
  %19 = phi ptr [ %13, %9 ], [ %11, %15 ], [ null, %8 ]
  %20 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %19, ptr %20, align 8, !tbaa !70
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fabs.f64(double) #21

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #9

; Function Attrs: nofree nounwind optsize
declare noalias noundef ptr @fopen(ptr nocapture noundef readonly, ptr nocapture noundef readonly) local_unnamed_addr #37

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #37

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fclose(ptr nocapture noundef) local_unnamed_addr #37

; Function Attrs: noreturn nounwind optsize
declare void @exit(i32 noundef) local_unnamed_addr #38

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN4MeshD2Ev(ptr noundef nonnull align 8 dereferenceable(2288) %0) unnamed_addr #24 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 112
  %3 = load ptr, ptr %2, align 8, !tbaa !65
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #58
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 111
  %8 = load ptr, ptr %7, align 8, !tbaa !65
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %8) #58
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 110
  %13 = load ptr, ptr %12, align 8, !tbaa !65
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZdlPv(ptr noundef nonnull %13) #58
  br label %16

16:                                               ; preds = %15, %11
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 109
  %18 = load ptr, ptr %17, align 8, !tbaa !65
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdlPv(ptr noundef nonnull %18) #58
  br label %21

21:                                               ; preds = %20, %16
  %22 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 108
  %23 = load ptr, ptr %22, align 8, !tbaa !65
  %24 = icmp eq ptr %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @_ZdlPv(ptr noundef nonnull %23) #58
  br label %26

26:                                               ; preds = %25, %21
  %27 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 107
  %28 = load ptr, ptr %27, align 8, !tbaa !65
  %29 = icmp eq ptr %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @_ZdlPv(ptr noundef nonnull %28) #58
  br label %31

31:                                               ; preds = %30, %26
  %32 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 106
  %33 = load ptr, ptr %32, align 8, !tbaa !65
  %34 = icmp eq ptr %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @_ZdlPv(ptr noundef nonnull %33) #58
  br label %36

36:                                               ; preds = %35, %31
  %37 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 105
  %38 = load ptr, ptr %37, align 8, !tbaa !65
  %39 = icmp eq ptr %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @_ZdlPv(ptr noundef nonnull %38) #58
  br label %41

41:                                               ; preds = %40, %36
  %42 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 104
  %43 = load ptr, ptr %42, align 8, !tbaa !65
  %44 = icmp eq ptr %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  tail call void @_ZdlPv(ptr noundef nonnull %43) #58
  br label %46

46:                                               ; preds = %45, %41
  %47 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 103
  %48 = load ptr, ptr %47, align 8, !tbaa !65
  %49 = icmp eq ptr %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  tail call void @_ZdlPv(ptr noundef nonnull %48) #58
  br label %51

51:                                               ; preds = %50, %46
  %52 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102
  %53 = load ptr, ptr %52, align 8, !tbaa !65
  %54 = icmp eq ptr %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %51
  tail call void @_ZdlPv(ptr noundef nonnull %53) #58
  br label %56

56:                                               ; preds = %55, %51
  %57 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101
  %58 = load ptr, ptr %57, align 8, !tbaa !65
  %59 = icmp eq ptr %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %56
  tail call void @_ZdlPv(ptr noundef nonnull %58) #58
  br label %61

61:                                               ; preds = %60, %56
  %62 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100
  %63 = load ptr, ptr %62, align 8, !tbaa !65
  %64 = icmp eq ptr %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  tail call void @_ZdlPv(ptr noundef nonnull %63) #58
  br label %66

66:                                               ; preds = %65, %61
  %67 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99
  %68 = load ptr, ptr %67, align 8, !tbaa !65
  %69 = icmp eq ptr %68, null
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  tail call void @_ZdlPv(ptr noundef nonnull %68) #58
  br label %71

71:                                               ; preds = %70, %66
  %72 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98
  %73 = load ptr, ptr %72, align 8, !tbaa !65
  %74 = icmp eq ptr %73, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  tail call void @_ZdlPv(ptr noundef nonnull %73) #58
  br label %76

76:                                               ; preds = %75, %71
  %77 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 97
  %78 = load ptr, ptr %77, align 8, !tbaa !65
  %79 = icmp eq ptr %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %76
  tail call void @_ZdlPv(ptr noundef nonnull %78) #58
  br label %81

81:                                               ; preds = %80, %76
  %82 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 96
  %83 = load ptr, ptr %82, align 8, !tbaa !65
  %84 = icmp eq ptr %83, null
  br i1 %84, label %86, label %85

85:                                               ; preds = %81
  tail call void @_ZdlPv(ptr noundef nonnull %83) #58
  br label %86

86:                                               ; preds = %85, %81
  %87 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 95
  %88 = load ptr, ptr %87, align 8, !tbaa !65
  %89 = icmp eq ptr %88, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %86
  tail call void @_ZdlPv(ptr noundef nonnull %88) #58
  br label %91

91:                                               ; preds = %90, %86
  %92 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 94
  %93 = load ptr, ptr %92, align 8, !tbaa !65
  %94 = icmp eq ptr %93, null
  br i1 %94, label %96, label %95

95:                                               ; preds = %91
  tail call void @_ZdlPv(ptr noundef nonnull %93) #58
  br label %96

96:                                               ; preds = %95, %91
  %97 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 93
  %98 = load ptr, ptr %97, align 8, !tbaa !65
  %99 = icmp eq ptr %98, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %96
  tail call void @_ZdlPv(ptr noundef nonnull %98) #58
  br label %101

101:                                              ; preds = %100, %96
  %102 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 92
  %103 = load ptr, ptr %102, align 8, !tbaa !65
  %104 = icmp eq ptr %103, null
  br i1 %104, label %106, label %105

105:                                              ; preds = %101
  tail call void @_ZdlPv(ptr noundef nonnull %103) #58
  br label %106

106:                                              ; preds = %105, %101
  %107 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 91
  %108 = load ptr, ptr %107, align 8, !tbaa !65
  %109 = icmp eq ptr %108, null
  br i1 %109, label %111, label %110

110:                                              ; preds = %106
  tail call void @_ZdlPv(ptr noundef nonnull %108) #58
  br label %111

111:                                              ; preds = %110, %106
  %112 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 90
  %113 = load ptr, ptr %112, align 8, !tbaa !65
  %114 = icmp eq ptr %113, null
  br i1 %114, label %116, label %115

115:                                              ; preds = %111
  tail call void @_ZdlPv(ptr noundef nonnull %113) #58
  br label %116

116:                                              ; preds = %115, %111
  %117 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 89
  %118 = load ptr, ptr %117, align 8, !tbaa !65
  %119 = icmp eq ptr %118, null
  br i1 %119, label %121, label %120

120:                                              ; preds = %116
  tail call void @_ZdlPv(ptr noundef nonnull %118) #58
  br label %121

121:                                              ; preds = %120, %116
  %122 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 88
  %123 = load ptr, ptr %122, align 8, !tbaa !65
  %124 = icmp eq ptr %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  tail call void @_ZdlPv(ptr noundef nonnull %123) #58
  br label %126

126:                                              ; preds = %125, %121
  %127 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87
  %128 = load ptr, ptr %127, align 8, !tbaa !65
  %129 = icmp eq ptr %128, null
  br i1 %129, label %131, label %130

130:                                              ; preds = %126
  tail call void @_ZdlPv(ptr noundef nonnull %128) #58
  br label %131

131:                                              ; preds = %130, %126
  %132 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86
  %133 = load ptr, ptr %132, align 8, !tbaa !65
  %134 = icmp eq ptr %133, null
  br i1 %134, label %136, label %135

135:                                              ; preds = %131
  tail call void @_ZdlPv(ptr noundef nonnull %133) #58
  br label %136

136:                                              ; preds = %135, %131
  %137 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85
  %138 = load ptr, ptr %137, align 8, !tbaa !65
  %139 = icmp eq ptr %138, null
  br i1 %139, label %141, label %140

140:                                              ; preds = %136
  tail call void @_ZdlPv(ptr noundef nonnull %138) #58
  br label %141

141:                                              ; preds = %140, %136
  %142 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84
  %143 = load ptr, ptr %142, align 8, !tbaa !65
  %144 = icmp eq ptr %143, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %141
  tail call void @_ZdlPv(ptr noundef nonnull %143) #58
  br label %146

146:                                              ; preds = %145, %141
  %147 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83
  %148 = load ptr, ptr %147, align 8, !tbaa !65
  %149 = icmp eq ptr %148, null
  br i1 %149, label %151, label %150

150:                                              ; preds = %146
  tail call void @_ZdlPv(ptr noundef nonnull %148) #58
  br label %151

151:                                              ; preds = %150, %146
  %152 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 80
  %153 = load ptr, ptr %152, align 8, !tbaa !109
  %154 = icmp eq ptr %153, null
  br i1 %154, label %156, label %155

155:                                              ; preds = %151
  tail call void @_ZdlPv(ptr noundef nonnull %153) #58
  br label %156

156:                                              ; preds = %155, %151
  %157 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 79
  %158 = load ptr, ptr %157, align 8, !tbaa !109
  %159 = icmp eq ptr %158, null
  br i1 %159, label %161, label %160

160:                                              ; preds = %156
  tail call void @_ZdlPv(ptr noundef nonnull %158) #58
  br label %161

161:                                              ; preds = %160, %156
  %162 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %163 = load ptr, ptr %162, align 8, !tbaa !109
  %164 = icmp eq ptr %163, null
  br i1 %164, label %166, label %165

165:                                              ; preds = %161
  tail call void @_ZdlPv(ptr noundef nonnull %163) #58
  br label %166

166:                                              ; preds = %165, %161
  %167 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %168 = load ptr, ptr %167, align 8, !tbaa !109
  %169 = icmp eq ptr %168, null
  br i1 %169, label %171, label %170

170:                                              ; preds = %166
  tail call void @_ZdlPv(ptr noundef nonnull %168) #58
  br label %171

171:                                              ; preds = %170, %166
  %172 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %173 = load ptr, ptr %172, align 8, !tbaa !109
  %174 = icmp eq ptr %173, null
  br i1 %174, label %176, label %175

175:                                              ; preds = %171
  tail call void @_ZdlPv(ptr noundef nonnull %173) #58
  br label %176

176:                                              ; preds = %175, %171
  %177 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %178 = load ptr, ptr %177, align 8, !tbaa !109
  %179 = icmp eq ptr %178, null
  br i1 %179, label %181, label %180

180:                                              ; preds = %176
  tail call void @_ZdlPv(ptr noundef nonnull %178) #58
  br label %181

181:                                              ; preds = %180, %176
  %182 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63
  %183 = load ptr, ptr %182, align 8, !tbaa !65
  %184 = icmp eq ptr %183, null
  br i1 %184, label %186, label %185

185:                                              ; preds = %181
  tail call void @_ZdlPv(ptr noundef nonnull %183) #58
  br label %186

186:                                              ; preds = %185, %181
  %187 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 35
  %188 = load ptr, ptr %187, align 8, !tbaa !109
  %189 = icmp eq ptr %188, null
  br i1 %189, label %191, label %190

190:                                              ; preds = %186
  tail call void @_ZdlPv(ptr noundef nonnull %188) #58
  br label %191

191:                                              ; preds = %190, %186
  %192 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 34
  %193 = load ptr, ptr %192, align 8, !tbaa !109
  %194 = icmp eq ptr %193, null
  br i1 %194, label %196, label %195

195:                                              ; preds = %191
  tail call void @_ZdlPv(ptr noundef nonnull %193) #58
  br label %196

196:                                              ; preds = %195, %191
  %197 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 33
  %198 = load ptr, ptr %197, align 8, !tbaa !109
  %199 = icmp eq ptr %198, null
  br i1 %199, label %201, label %200

200:                                              ; preds = %196
  tail call void @_ZdlPv(ptr noundef nonnull %198) #58
  br label %201

201:                                              ; preds = %200, %196
  %202 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 32
  %203 = load ptr, ptr %202, align 8, !tbaa !65
  %204 = icmp eq ptr %203, null
  br i1 %204, label %206, label %205

205:                                              ; preds = %201
  tail call void @_ZdlPv(ptr noundef nonnull %203) #58
  br label %206

206:                                              ; preds = %205, %201
  %207 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 31
  %208 = load ptr, ptr %207, align 8, !tbaa !65
  %209 = icmp eq ptr %208, null
  br i1 %209, label %211, label %210

210:                                              ; preds = %206
  tail call void @_ZdlPv(ptr noundef nonnull %208) #58
  br label %211

211:                                              ; preds = %210, %206
  %212 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 30
  %213 = load ptr, ptr %212, align 8, !tbaa !65
  %214 = icmp eq ptr %213, null
  br i1 %214, label %216, label %215

215:                                              ; preds = %211
  tail call void @_ZdlPv(ptr noundef nonnull %213) #58
  br label %216

216:                                              ; preds = %215, %211
  %217 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 29
  %218 = load ptr, ptr %217, align 8, !tbaa !65
  %219 = icmp eq ptr %218, null
  br i1 %219, label %221, label %220

220:                                              ; preds = %216
  tail call void @_ZdlPv(ptr noundef nonnull %218) #58
  br label %221

221:                                              ; preds = %220, %216
  %222 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 28
  %223 = load ptr, ptr %222, align 8, !tbaa !65
  %224 = icmp eq ptr %223, null
  br i1 %224, label %226, label %225

225:                                              ; preds = %221
  tail call void @_ZdlPv(ptr noundef nonnull %223) #58
  br label %226

226:                                              ; preds = %225, %221
  %227 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 27
  %228 = load ptr, ptr %227, align 8, !tbaa !65
  %229 = icmp eq ptr %228, null
  br i1 %229, label %231, label %230

230:                                              ; preds = %226
  tail call void @_ZdlPv(ptr noundef nonnull %228) #58
  br label %231

231:                                              ; preds = %230, %226
  %232 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 26
  %233 = load ptr, ptr %232, align 8, !tbaa !65
  %234 = icmp eq ptr %233, null
  br i1 %234, label %236, label %235

235:                                              ; preds = %231
  tail call void @_ZdlPv(ptr noundef nonnull %233) #58
  br label %236

236:                                              ; preds = %235, %231
  %237 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 25
  %238 = load ptr, ptr %237, align 8, !tbaa !65
  %239 = icmp eq ptr %238, null
  br i1 %239, label %241, label %240

240:                                              ; preds = %236
  tail call void @_ZdlPv(ptr noundef nonnull %238) #58
  br label %241

241:                                              ; preds = %240, %236
  %242 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 22
  %243 = load ptr, ptr %242, align 8, !tbaa !65
  %244 = icmp eq ptr %243, null
  br i1 %244, label %246, label %245

245:                                              ; preds = %241
  tail call void @_ZdlPv(ptr noundef nonnull %243) #58
  br label %246

246:                                              ; preds = %245, %241
  %247 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 21
  %248 = load ptr, ptr %247, align 8, !tbaa !65
  %249 = icmp eq ptr %248, null
  br i1 %249, label %251, label %250

250:                                              ; preds = %246
  tail call void @_ZdlPv(ptr noundef nonnull %248) #58
  br label %251

251:                                              ; preds = %250, %246
  %252 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 20
  %253 = load ptr, ptr %252, align 8, !tbaa !65
  %254 = icmp eq ptr %253, null
  br i1 %254, label %256, label %255

255:                                              ; preds = %251
  tail call void @_ZdlPv(ptr noundef nonnull %253) #58
  br label %256

256:                                              ; preds = %255, %251
  %257 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 19
  %258 = load ptr, ptr %257, align 8, !tbaa !65
  %259 = icmp eq ptr %258, null
  br i1 %259, label %261, label %260

260:                                              ; preds = %256
  tail call void @_ZdlPv(ptr noundef nonnull %258) #58
  br label %261

261:                                              ; preds = %260, %256
  %262 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2
  %263 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1
  tail call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %263) #59
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %262) #59
  %264 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %265 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1
  tail call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %265) #59
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %264) #59
  ret void
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN5StateD2Ev(ptr noundef nonnull align 8 dereferenceable(368) %0) unnamed_addr #24 comdat align 2 {
  %2 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 1, i32 1
  tail call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %3) #59
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %2) #59
  %4 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1
  tail call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %4) #59
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) #59
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EEC2ERKSG_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %1) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 0, ptr %4, align 8, !tbaa !181
  %5 = getelementptr inbounds i8, ptr %0, i64 16
  store ptr null, ptr %5, align 8, !tbaa !71
  %6 = getelementptr inbounds i8, ptr %0, i64 24
  store ptr %4, ptr %6, align 8, !tbaa !84
  %7 = getelementptr inbounds i8, ptr %0, i64 32
  store ptr %4, ptr %7, align 8, !tbaa !182
  %8 = getelementptr inbounds i8, ptr %0, i64 40
  store i64 0, ptr %8, align 8, !tbaa !80
  %9 = getelementptr inbounds i8, ptr %1, i64 16
  %10 = load ptr, ptr %9, align 8, !tbaa !71
  %11 = icmp eq ptr %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #57
  store ptr %0, ptr %3, align 8, !tbaa !29
  %13 = call noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ERKSG_RT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %1, ptr noundef nonnull align 8 dereferenceable(8) %3) #56
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #57
  store ptr %13, ptr %5, align 8, !tbaa !29
  br label %14

14:                                               ; preds = %12, %2
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ERKSG_RT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %1, ptr noundef nonnull align 8 dereferenceable(8) %2) #13 comdat align 2 {
  %4 = getelementptr inbounds i8, ptr %1, i64 16
  %5 = load ptr, ptr %4, align 8, !tbaa !71
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  %7 = tail call noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ESL_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %5, ptr noundef nonnull %6, ptr noundef nonnull align 8 dereferenceable(8) %2) #56
  br label %8

8:                                                ; preds = %8, %3
  %9 = phi ptr [ %7, %3 ], [ %11, %8 ]
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %9, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !186
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %8, !llvm.loop !570

13:                                               ; preds = %8
  %.lcssa1 = phi ptr [ %9, %8 ]
  %14 = getelementptr inbounds i8, ptr %0, i64 24
  store ptr %.lcssa1, ptr %14, align 8, !tbaa !29
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi ptr [ %7, %13 ], [ %18, %15 ]
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %16, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !81
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %15, !llvm.loop !571

20:                                               ; preds = %15
  %.lcssa = phi ptr [ %16, %15 ]
  %21 = getelementptr inbounds i8, ptr %0, i64 32
  store ptr %.lcssa, ptr %21, align 8, !tbaa !29
  %22 = getelementptr inbounds i8, ptr %1, i64 40
  %23 = load i64, ptr %22, align 8, !tbaa !80
  %24 = getelementptr inbounds i8, ptr %0, i64 40
  store i64 %23, ptr %24, align 8, !tbaa !80
  ret ptr %7
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ESL_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(8) %3) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %3, align 8, !tbaa !572
  %7 = tail call noalias noundef nonnull dereferenceable(72) ptr @_Znwm(i64 noundef 72) #62
  tail call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeIJRKSA_EEEvPSt13_Rb_tree_nodeISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %6, ptr noundef nonnull %7, ptr noundef nonnull align 8 dereferenceable(40) %5) #56
  %8 = load i32, ptr %1, align 8, !tbaa !190
  store i32 %8, ptr %7, align 8, !tbaa !190
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %7, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, i8 0, i64 16, i1 false)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %7, i64 0, i32 1
  store ptr %2, ptr %10, align 8, !tbaa !191
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !81
  %13 = icmp eq ptr %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %4
  %15 = invoke noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ESL_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %12, ptr noundef nonnull %7, ptr noundef nonnull align 8 dereferenceable(8) %3) #56
          to label %16 unwind label %18

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %7, i64 0, i32 3
  store ptr %15, ptr %17, align 8, !tbaa !81
  br label %20

18:                                               ; preds = %14
  %19 = landingpad { ptr, i32 }
          catch ptr null
  br label %45

20:                                               ; preds = %16, %4
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !186
  %23 = icmp eq ptr %22, null
  br i1 %23, label %57, label %24

24:                                               ; preds = %50, %20
  %25 = phi ptr [ %52, %50 ], [ %22, %20 ]
  %26 = phi ptr [ %28, %50 ], [ %7, %20 ]
  %27 = load ptr, ptr %3, align 8, !tbaa !572
  %28 = invoke noalias noundef nonnull dereferenceable(72) ptr @_Znwm(i64 noundef 72) #62
          to label %29 unwind label %43

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %25, i64 0, i32 1
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeIJRKSA_EEEvPSt13_Rb_tree_nodeISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %27, ptr noundef nonnull %28, ptr noundef nonnull align 8 dereferenceable(40) %30) #56
          to label %31 unwind label %43

31:                                               ; preds = %29
  %32 = load i32, ptr %25, align 8, !tbaa !190
  store i32 %32, ptr %28, align 8, !tbaa !190
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %28, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %33, i8 0, i64 16, i1 false)
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %26, i64 0, i32 2
  store ptr %28, ptr %34, align 8, !tbaa !186
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %28, i64 0, i32 1
  store ptr %26, ptr %35, align 8, !tbaa !191
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %25, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !81
  %38 = icmp eq ptr %37, null
  br i1 %38, label %50, label %39

39:                                               ; preds = %31
  %40 = invoke noundef ptr @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE7_M_copyILb0ENSG_11_Alloc_nodeEEEPSt13_Rb_tree_nodeISA_ESL_PSt18_Rb_tree_node_baseRT0_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %37, ptr noundef nonnull %28, ptr noundef nonnull align 8 dereferenceable(8) %3) #56
          to label %41 unwind label %43

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %28, i64 0, i32 3
  store ptr %40, ptr %42, align 8, !tbaa !81
  br label %50

43:                                               ; preds = %39, %29, %24
  %44 = landingpad { ptr, i32 }
          catch ptr null
  br label %45

45:                                               ; preds = %43, %18
  %46 = phi { ptr, i32 } [ %44, %43 ], [ %19, %18 ]
  %47 = extractvalue { ptr, i32 } %46, 0
  %48 = tail call ptr @__cxa_begin_catch(ptr %47) #57
  invoke void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull %7) #56
          to label %49 unwind label %54

49:                                               ; preds = %45
  invoke void @__cxa_rethrow() #64
          to label %61 unwind label %54

50:                                               ; preds = %41, %31
  %51 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %25, i64 0, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !186
  %53 = icmp eq ptr %52, null
  br i1 %53, label %57, label %24, !llvm.loop !574

54:                                               ; preds = %49, %45
  %55 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %56 unwind label %58

56:                                               ; preds = %54
  resume { ptr, i32 } %55

57:                                               ; preds = %50, %20
  ret ptr %7

58:                                               ; preds = %54
  %59 = landingpad { ptr, i32 }
          catch ptr null
  %60 = extractvalue { ptr, i32 } %59, 0
  tail call void @__clang_call_terminate(ptr %60) #60
  unreachable

61:                                               ; preds = %49
  unreachable
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE17_M_construct_nodeIJRKSA_EEEvPSt13_Rb_tree_nodeISA_EDpOT_(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(40) %2) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %1, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %1, i64 0, i32 1, i32 0, i64 16
  store ptr %5, ptr %4, align 8, !tbaa !78
  %6 = load ptr, ptr %2, align 8, !tbaa !23
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %2, i64 0, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !49
  %9 = getelementptr inbounds i8, ptr %6, i64 %8
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef %6, ptr noundef %9) #56
          to label %16 unwind label %10

10:                                               ; preds = %3
  %11 = landingpad { ptr, i32 }
          catch ptr null
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = tail call ptr @__cxa_begin_catch(ptr %12) #57
  tail call void @_ZdlPv(ptr noundef nonnull %1) #58
  invoke void @__cxa_rethrow() #64
          to label %24 unwind label %14

14:                                               ; preds = %10
  %15 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %20 unwind label %21

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_node.28", ptr %1, i64 0, i32 1, i32 0, i64 32
  %18 = getelementptr inbounds %"struct.std::pair.9", ptr %2, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !167
  store ptr %19, ptr %17, align 8, !tbaa !167
  ret void

20:                                               ; preds = %14
  resume { ptr, i32 } %15

21:                                               ; preds = %14
  %22 = landingpad { ptr, i32 }
          catch ptr null
  %23 = extractvalue { ptr, i32 } %22, 0
  tail call void @__clang_call_terminate(ptr %23) #60
  unreachable

24:                                               ; preds = %10
  unreachable
}

; Function Attrs: nofree nounwind optsize uwtable
define internal void @_ZN4CruxC2Eiib(ptr nocapture noundef nonnull align 4 dereferenceable(12) %0, i32 noundef %1, i32 noundef %2, i1 noundef zeroext %3) unnamed_addr #35 align 2 {
  %5 = alloca %struct.stat, align 8
  %6 = alloca [60 x i8], align 16
  store i32 %2, ptr %0, align 4, !tbaa !575
  %7 = getelementptr inbounds %class.Crux, ptr %0, i64 0, i32 1
  store i32 %1, ptr %7, align 4, !tbaa !577
  %8 = getelementptr inbounds %class.Crux, ptr %0, i64 0, i32 2
  store i32 0, ptr %8, align 4, !tbaa !578
  %9 = icmp ne i32 %1, 0
  %10 = or i1 %9, %3
  br i1 %10, label %11, label %18

11:                                               ; preds = %4
  store i8 1, ptr @do_crux_timing, align 1, !tbaa !540
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %5) #57
  %12 = call i32 @stat(ptr noundef nonnull @checkpoint_directory, ptr noundef nonnull %5) #59
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = tail call i32 @mkdir(ptr noundef nonnull @checkpoint_directory, i32 noundef 511) #59
  br label %16

16:                                               ; preds = %14, %11
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %5) #57
  %17 = load i32, ptr %0, align 4, !tbaa !575
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi i32 [ %2, %4 ], [ %17, %16 ]
  %20 = sext i32 %19 to i64
  %21 = shl nsw i64 %20, 3
  %22 = tail call noalias ptr @malloc(i64 noundef %21) #65
  store ptr %22, ptr @crux_data, align 8, !tbaa !29
  %23 = icmp sgt i32 %19, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = zext i32 %19 to i64
  br label %30

26:                                               ; preds = %30, %18
  %27 = tail call noalias ptr @malloc(i64 noundef %21) #65
  store ptr %27, ptr @crux_data_size, align 8, !tbaa !29
  %28 = load i8, ptr @do_crux_timing, align 1, !tbaa !540, !range !130, !noundef !131
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %39, label %36

30:                                               ; preds = %30, %24
  %31 = phi i64 [ 0, %24 ], [ %34, %30 ]
  %32 = load ptr, ptr @crux_data, align 8, !tbaa !29
  %33 = getelementptr inbounds ptr, ptr %32, i64 %31
  store ptr null, ptr %33, align 8, !tbaa !29
  %34 = add nuw nsw i64 %31, 1
  %35 = icmp eq i64 %34, %25
  br i1 %35, label %26, label %30, !llvm.loop !579

36:                                               ; preds = %26
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %6) #57
  %37 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %6, ptr noundef nonnull dereferenceable(1) @.str.31, ptr noundef nonnull @checkpoint_directory) #59
  %38 = call noalias ptr @fopen(ptr noundef nonnull %6, ptr noundef nonnull @.str.1.32) #56
  store ptr %38, ptr @crux_time_fp, align 8, !tbaa !29
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %6) #57
  br label %39

39:                                               ; preds = %36, %26
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @stat(ptr nocapture noundef readonly, ptr nocapture noundef) local_unnamed_addr #37

; Function Attrs: nofree nounwind optsize
declare noundef i32 @mkdir(ptr nocapture noundef readonly, i32 noundef) local_unnamed_addr #37

; Function Attrs: nofree nounwind optsize
declare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #37

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN4CruxD2Ev(ptr nocapture noundef nonnull readonly align 4 dereferenceable(12) %0) unnamed_addr #10 align 2 personality ptr @__gxx_personality_v0 {
  %2 = load i32, ptr %0, align 4, !tbaa !575
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %12, label %4

4:                                                ; preds = %12, %1
  %5 = load ptr, ptr @crux_data, align 8, !tbaa !29
  tail call void @free(ptr noundef %5) #59
  %6 = load ptr, ptr @crux_data_size, align 8, !tbaa !29
  tail call void @free(ptr noundef %6) #59
  %7 = load i8, ptr @do_crux_timing, align 1, !tbaa !540, !range !130, !noundef !131
  %8 = icmp ne i8 %7, 0
  %9 = load i32, ptr @checkpoint_timing_count, align 4
  %10 = icmp sgt i32 %9, 0
  %11 = select i1 %8, i1 %10, i1 false
  br i1 %11, label %21, label %46

12:                                               ; preds = %12, %1
  %13 = phi i64 [ %17, %12 ], [ 0, %1 ]
  %14 = load ptr, ptr @crux_data, align 8, !tbaa !29
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8, !tbaa !29
  tail call void @free(ptr noundef %16) #59
  %17 = add nuw nsw i64 %13, 1
  %18 = load i32, ptr %0, align 4, !tbaa !575
  %19 = sext i32 %18 to i64
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %12, label %4, !llvm.loop !580

21:                                               ; preds = %4
  %22 = load float, ptr @checkpoint_timing_sum, align 4, !tbaa !177
  %23 = sitofp i32 %9 to float
  %24 = fdiv float %22, %23
  %25 = fpext float %24 to double
  %26 = fmul double %25, 1.000000e+03
  %27 = load float, ptr @checkpoint_timing_size, align 4, !tbaa !177
  %28 = fdiv float %27, %22
  %29 = fpext float %28 to double
  %30 = fmul double %29, 0x3EB0C6F7A0B5ED8D
  %31 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.2.33, double noundef %26, double noundef %30) #56
  %32 = load ptr, ptr @crux_time_fp, align 8, !tbaa !29
  %33 = load float, ptr @checkpoint_timing_sum, align 4, !tbaa !177
  %34 = load i32, ptr @checkpoint_timing_count, align 4, !tbaa !68
  %35 = sitofp i32 %34 to float
  %36 = fdiv float %33, %35
  %37 = fpext float %36 to double
  %38 = fmul double %37, 1.000000e+03
  %39 = load float, ptr @checkpoint_timing_size, align 4, !tbaa !177
  %40 = fdiv float %39, %33
  %41 = fpext float %40 to double
  %42 = fmul double %41, 0x3EB0C6F7A0B5ED8D
  %43 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %32, ptr noundef nonnull @.str.2.33, double noundef %38, double noundef %42) #56
  %44 = load ptr, ptr @crux_time_fp, align 8, !tbaa !29
  %45 = tail call i32 @fclose(ptr noundef %44) #56
  br label %46

46:                                               ; preds = %21, %4
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN4Crux16store_MallocPlusE10MallocPlus(ptr nocapture noundef nonnull readnone align 4 dereferenceable(12) %0, ptr noundef nonnull %1) #13 align 2 {
  %3 = tail call noundef ptr @_ZN10MallocPlus26memory_entry_by_name_beginEv(ptr noundef nonnull align 8 dereferenceable(96) %1) #56
  br label %4

4:                                                ; preds = %45, %2
  %5 = phi ptr [ %3, %2 ], [ %46, %45 ]
  %6 = tail call noundef ptr @_ZN10MallocPlus24memory_entry_by_name_endEv(ptr noundef nonnull align 8 dereferenceable(96) %1) #56
  %7 = icmp eq ptr %5, %6
  br i1 %7, label %47, label %8

8:                                                ; preds = %4
  %9 = load ptr, ptr %5, align 8, !tbaa !153
  %10 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %5, i64 0, i32 5
  %11 = load i32, ptr %10, align 8, !tbaa !151
  %12 = and i32 %11, 16
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %45, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %5, i64 0, i32 3
  %16 = load i64, ptr %15, align 8, !tbaa !149
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %5, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !147
  br label %34

21:                                               ; preds = %34, %14
  %22 = phi i32 [ 1, %14 ], [ %41, %34 ]
  %23 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %5, i64 0, i32 6
  %24 = load ptr, ptr %23, align 8, !tbaa !154
  %25 = load ptr, ptr @store_fp, align 8, !tbaa !29
  %26 = tail call i64 @fwrite(ptr noundef %24, i64 noundef 1, i64 noundef 30, ptr noundef %25) #56
  %27 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %5, i64 0, i32 4
  %28 = load i64, ptr %27, align 8, !tbaa !150
  %29 = icmp eq i64 %28, 4
  %30 = sext i32 %22 to i64
  %31 = load ptr, ptr @store_fp, align 8, !tbaa !29
  %32 = select i1 %29, i64 4, i64 8
  %33 = tail call i64 @fwrite(ptr noundef %9, i64 noundef %32, i64 noundef %30, ptr noundef %31) #56
  br label %45

34:                                               ; preds = %34, %18
  %35 = phi i64 [ 0, %18 ], [ %43, %34 ]
  %36 = phi i32 [ 0, %18 ], [ %42, %34 ]
  %37 = phi i32 [ 1, %18 ], [ %41, %34 ]
  %38 = getelementptr inbounds i64, ptr %20, i64 %35
  %39 = load i64, ptr %38, align 8, !tbaa !85
  %40 = trunc i64 %39 to i32
  %41 = mul i32 %37, %40
  %42 = add i32 %36, 1
  %43 = zext i32 %42 to i64
  %44 = icmp ugt i64 %16, %43
  br i1 %44, label %34, label %21, !llvm.loop !581

45:                                               ; preds = %21, %8
  %46 = tail call noundef ptr @_ZN10MallocPlus25memory_entry_by_name_nextEv(ptr noundef nonnull align 8 dereferenceable(96) %1) #56
  br label %4, !llvm.loop !582

47:                                               ; preds = %4
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #37

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN4Crux11store_beginEmi(ptr nocapture noundef nonnull readonly align 4 dereferenceable(12) %0, i64 noundef %1, i32 noundef %2) #13 align 2 {
  %4 = alloca [60 x i8], align 16
  %5 = alloca [40 x i8], align 16
  %6 = alloca [60 x i8], align 16
  %7 = getelementptr inbounds %class.Crux, ptr %0, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !578
  %9 = load i32, ptr %0, align 4, !tbaa !575
  %10 = srem i32 %8, %9
  store i32 %10, ptr @cp_num, align 4, !tbaa !68
  tail call void @cpu_timer_start(ptr noundef nonnull @tcheckpoint_time) #56
  %11 = getelementptr inbounds %class.Crux, ptr %0, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !577
  switch i32 %12, label %47 [
    i32 2, label %13
    i32 1, label %35
  ]

13:                                               ; preds = %3
  %14 = load ptr, ptr @crux_data, align 8, !tbaa !29
  %15 = load i32, ptr @cp_num, align 4, !tbaa !68
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds ptr, ptr %14, i64 %16
  %18 = load ptr, ptr %17, align 8, !tbaa !29
  %19 = icmp eq ptr %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  tail call void @free(ptr noundef nonnull %18) #59
  %21 = load ptr, ptr @crux_data, align 8, !tbaa !29
  %22 = load i32, ptr @cp_num, align 4, !tbaa !68
  %23 = sext i32 %22 to i64
  br label %24

24:                                               ; preds = %20, %13
  %25 = phi i64 [ %23, %20 ], [ %16, %13 ]
  %26 = phi ptr [ %21, %20 ], [ %14, %13 ]
  %27 = tail call noalias ptr @malloc(i64 noundef %1) #65
  %28 = getelementptr inbounds ptr, ptr %26, i64 %25
  store ptr %27, ptr %28, align 8, !tbaa !29
  %29 = load ptr, ptr @crux_data_size, align 8, !tbaa !29
  %30 = getelementptr inbounds i64, ptr %29, i64 %25
  store i64 %1, ptr %30, align 8, !tbaa !85
  %31 = load ptr, ptr @crux_data, align 8, !tbaa !29
  %32 = getelementptr inbounds ptr, ptr %31, i64 %25
  %33 = load ptr, ptr %32, align 8, !tbaa !29
  %34 = tail call noalias ptr @fmemopen(ptr noundef %33, i64 noundef %1, ptr noundef nonnull @.str.1.32) #59
  store ptr %34, ptr @store_fp, align 8, !tbaa !29
  br label %47

35:                                               ; preds = %3
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %4) #57
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %5) #57
  %36 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %4, ptr noundef nonnull dereferenceable(1) @.str.3.38, ptr noundef nonnull @checkpoint_directory, i32 noundef %2) #59
  %37 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %5, ptr noundef nonnull dereferenceable(1) @.str.4.39, i32 noundef %2) #59
  %38 = call noalias ptr @fopen(ptr noundef nonnull %4, ptr noundef nonnull @.str.1.32) #56
  store ptr %38, ptr @store_fp, align 8, !tbaa !29
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  %41 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5, ptr noundef nonnull %4, i32 noundef %2) #56
  br label %42

42:                                               ; preds = %40, %35
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %6) #57
  %43 = load i32, ptr @cp_num, align 4, !tbaa !68
  %44 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %6, ptr noundef nonnull dereferenceable(1) @.str.6.40, ptr noundef nonnull @checkpoint_directory, i32 noundef %43) #59
  %45 = call i32 @unlink(ptr noundef nonnull %6) #59
  %46 = call i32 @symlink(ptr noundef nonnull %5, ptr noundef nonnull %6) #59
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %6) #57
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %4) #57
  br label %47

47:                                               ; preds = %42, %24, %3
  %48 = load i8, ptr @do_crux_timing, align 1, !tbaa !540, !range !130, !noundef !131
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %47
  %51 = uitofp i64 %1 to float
  %52 = load float, ptr @checkpoint_timing_size, align 4, !tbaa !177
  %53 = fadd float %52, %51
  store float %53, ptr @checkpoint_timing_size, align 4, !tbaa !177
  br label %54

54:                                               ; preds = %50, %47
  ret void
}

; Function Attrs: nounwind optsize
declare noalias ptr @fmemopen(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #8

; Function Attrs: nofree nounwind optsize
declare noundef i32 @unlink(ptr nocapture noundef readonly) local_unnamed_addr #37

; Function Attrs: nounwind optsize
declare i32 @symlink(ptr noundef, ptr noundef) local_unnamed_addr #8

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal void @_ZN4Crux16store_named_intsEPKciPim(ptr nocapture noundef nonnull readnone align 4 dereferenceable(12) %0, ptr nocapture noundef %1, i32 noundef %2, ptr nocapture noundef %3, i64 noundef %4) #39 align 2 {
  %6 = sext i32 %2 to i64
  %7 = load ptr, ptr @store_fp, align 8, !tbaa !29
  %8 = tail call i64 @fwrite(ptr noundef %1, i64 noundef 1, i64 noundef %6, ptr noundef %7) #56
  %9 = load ptr, ptr @store_fp, align 8, !tbaa !29
  %10 = tail call i64 @fwrite(ptr noundef %3, i64 noundef 4, i64 noundef %4, ptr noundef %9) #56
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal void @_ZN4Crux18restore_named_intsEPKciPim(ptr nocapture noundef nonnull readnone align 4 dereferenceable(12) %0, ptr nocapture noundef readnone %1, i32 noundef %2, ptr noundef %3, i64 noundef %4) #39 align 2 {
  %6 = alloca [512 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %6) #57
  call void @_ZN4Crux20restore_field_headerEPci(ptr nonnull align 4 poison, ptr noundef nonnull %6, i32 noundef %2) #56
  %7 = tail call noundef ptr @_ZN4Crux17restore_int_arrayEPim(ptr nonnull align 4 poison, ptr noundef %3, i64 noundef %4) #56
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %6) #57
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal void @_ZN4Crux20restore_field_headerEPci(ptr nocapture nonnull readnone align 4 %0, ptr nocapture noundef %1, i32 noundef %2) #39 align 2 {
  %4 = sext i32 %2 to i64
  %5 = load ptr, ptr @restore_fp, align 8, !tbaa !29
  %6 = tail call i64 @fread(ptr noundef %1, i64 noundef 1, i64 noundef %4, ptr noundef %5) #56
  %7 = trunc i64 %6 to i32
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.18.41, i32 noundef %7, i32 noundef %2) #56
  br label %11

11:                                               ; preds = %9, %3
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal noundef ptr @_ZN4Crux17restore_int_arrayEPim(ptr nocapture nonnull readnone align 4 %0, ptr noundef returned %1, i64 noundef %2) #39 align 2 {
  %4 = load ptr, ptr @restore_fp, align 8, !tbaa !29
  %5 = tail call i64 @fread(ptr noundef %1, i64 noundef 4, i64 noundef %2, ptr noundef %4) #56
  %6 = icmp eq i64 %5, %2
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.19, i64 noundef %5, i64 noundef %2) #56
  br label %9

9:                                                ; preds = %7, %3
  ret ptr %1
}

; Function Attrs: nofree nounwind optsize
declare noundef i64 @fread(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #37

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN4Crux9store_endEv(ptr nocapture noundef nonnull align 4 dereferenceable(12) %0) #13 align 2 {
  %2 = load ptr, ptr @store_fp, align 8, !tbaa !29
  %3 = tail call i32 @fclose(ptr noundef %2) #56
  %4 = load i64, ptr @tcheckpoint_time, align 8, !tbaa.struct !560
  %5 = load i64, ptr getelementptr inbounds (%struct.timeval, ptr @tcheckpoint_time, i64 0, i32 1), align 8, !tbaa.struct !561
  %6 = tail call double @cpu_timer_stop(i64 %4, i64 %5) #56
  %7 = load i8, ptr @do_crux_timing, align 1, !tbaa !540, !range !130, !noundef !131
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %1
  %10 = load ptr, ptr @crux_time_fp, align 8, !tbaa !29
  %11 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %10, ptr noundef nonnull @.str.7.44, double noundef %6) #56
  %12 = load i32, ptr @checkpoint_timing_count, align 4, !tbaa !68
  %13 = add nsw i32 %12, 1
  store i32 %13, ptr @checkpoint_timing_count, align 4, !tbaa !68
  %14 = load float, ptr @checkpoint_timing_sum, align 4, !tbaa !177
  %15 = fpext float %14 to double
  %16 = fadd double %6, %15
  %17 = fptrunc double %16 to float
  store float %17, ptr @checkpoint_timing_sum, align 4, !tbaa !177
  br label %18

18:                                               ; preds = %9, %1
  %19 = getelementptr inbounds %class.Crux, ptr %0, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !578
  %21 = add nsw i32 %20, 1
  store i32 %21, ptr %19, align 4, !tbaa !578
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN4Crux18restore_MallocPlusE10MallocPlus(ptr nocapture noundef nonnull readnone align 4 dereferenceable(12) %0, ptr noundef nonnull %1) #13 align 2 {
  %3 = alloca [34 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 34, ptr nonnull %3) #57
  %4 = tail call noundef ptr @_ZN10MallocPlus26memory_entry_by_name_beginEv(ptr noundef nonnull align 8 dereferenceable(96) %1) #56
  br label %5

5:                                                ; preds = %59, %2
  %6 = phi ptr [ %4, %2 ], [ %60, %59 ]
  %7 = tail call noundef ptr @_ZN10MallocPlus24memory_entry_by_name_endEv(ptr noundef nonnull align 8 dereferenceable(96) %1) #56
  %8 = icmp eq ptr %6, %7
  br i1 %8, label %61, label %9

9:                                                ; preds = %5
  %10 = load ptr, ptr %6, align 8, !tbaa !153
  %11 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %6, i64 0, i32 5
  %12 = load i32, ptr %11, align 8, !tbaa !151
  %13 = and i32 %12, 16
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %59, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %6, i64 0, i32 3
  %17 = load i64, ptr %16, align 8, !tbaa !149
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %6, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !147
  br label %28

22:                                               ; preds = %28, %15
  %23 = phi i32 [ 1, %15 ], [ %35, %28 ]
  call void @_ZN4Crux20restore_field_headerEPci(ptr nonnull align 4 poison, ptr noundef nonnull %3, i32 noundef 30) #56
  %24 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %6, i64 0, i32 6
  %25 = load ptr, ptr %24, align 8, !tbaa !154
  %26 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(1) %25) #63
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %41, label %39

28:                                               ; preds = %28, %19
  %29 = phi i64 [ 0, %19 ], [ %37, %28 ]
  %30 = phi i32 [ 0, %19 ], [ %36, %28 ]
  %31 = phi i32 [ 1, %19 ], [ %35, %28 ]
  %32 = getelementptr inbounds i64, ptr %21, i64 %29
  %33 = load i64, ptr %32, align 8, !tbaa !85
  %34 = trunc i64 %33 to i32
  %35 = mul i32 %31, %34
  %36 = add i32 %30, 1
  %37 = zext i32 %36 to i64
  %38 = icmp ugt i64 %17, %37
  br i1 %38, label %28, label %22, !llvm.loop !583

39:                                               ; preds = %22
  %.lcssa = phi ptr [ %25, %22 ]
  %40 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.8, ptr noundef nonnull %3, ptr noundef %.lcssa) #56
  call void @exit(i32 noundef -1) #67
  unreachable

41:                                               ; preds = %22
  %42 = load i32, ptr %11, align 8, !tbaa !151
  %43 = and i32 %42, 32
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %6, i64 0, i32 4
  %46 = load i64, ptr %45, align 8, !tbaa !150
  %47 = icmp eq i64 %46, 4
  %48 = sext i32 %23 to i64
  br i1 %44, label %54, label %49

49:                                               ; preds = %41
  br i1 %47, label %50, label %52

50:                                               ; preds = %49
  %51 = tail call noundef ptr @_ZN4Crux28restore_replicated_int_arrayEPim(ptr nonnull align 4 poison, ptr noundef %10, i64 noundef %48) #56
  br label %59

52:                                               ; preds = %49
  %53 = tail call noundef ptr @_ZN4Crux31restore_replicated_double_arrayEPdm(ptr nonnull align 4 poison, ptr noundef %10, i64 noundef %48) #56
  br label %59

54:                                               ; preds = %41
  br i1 %47, label %55, label %57

55:                                               ; preds = %54
  %56 = tail call noundef ptr @_ZN4Crux17restore_int_arrayEPim(ptr nonnull align 4 poison, ptr noundef %10, i64 noundef %48) #56
  br label %59

57:                                               ; preds = %54
  %58 = tail call noundef ptr @_ZN4Crux20restore_double_arrayEPdm(ptr nonnull align 4 poison, ptr noundef %10, i64 noundef %48) #56
  br label %59

59:                                               ; preds = %57, %55, %52, %50, %9
  %60 = tail call noundef ptr @_ZN10MallocPlus25memory_entry_by_name_nextEv(ptr noundef nonnull align 8 dereferenceable(96) %1) #56
  br label %5, !llvm.loop !584

61:                                               ; preds = %5
  call void @llvm.lifetime.end.p0(i64 34, ptr nonnull %3) #57
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #22

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal noundef ptr @_ZN4Crux28restore_replicated_int_arrayEPim(ptr nocapture nonnull readnone align 4 %0, ptr noundef returned %1, i64 noundef %2) #39 align 2 {
  %4 = load ptr, ptr @restore_fp, align 8, !tbaa !29
  %5 = tail call i64 @fread(ptr noundef %1, i64 noundef 4, i64 noundef %2, ptr noundef %4) #56
  %6 = icmp eq i64 %5, %2
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.19, i64 noundef %5, i64 noundef %2) #56
  br label %9

9:                                                ; preds = %7, %3
  ret ptr %1
}

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal noundef ptr @_ZN4Crux31restore_replicated_double_arrayEPdm(ptr nocapture nonnull readnone align 4 %0, ptr noundef returned %1, i64 noundef %2) #39 align 2 {
  %4 = load ptr, ptr @restore_fp, align 8, !tbaa !29
  %5 = tail call i64 @fread(ptr noundef %1, i64 noundef 8, i64 noundef %2, ptr noundef %4) #56
  %6 = icmp eq i64 %5, %2
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.19, i64 noundef %5, i64 noundef %2) #56
  br label %9

9:                                                ; preds = %7, %3
  ret ptr %1
}

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal noundef ptr @_ZN4Crux20restore_double_arrayEPdm(ptr nocapture nonnull readnone align 4 %0, ptr noundef returned %1, i64 noundef %2) #39 align 2 {
  %4 = load ptr, ptr @restore_fp, align 8, !tbaa !29
  %5 = tail call i64 @fread(ptr noundef %1, i64 noundef 8, i64 noundef %2, ptr noundef %4) #56
  %6 = icmp eq i64 %5, %2
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.19, i64 noundef %5, i64 noundef %2) #56
  br label %9

9:                                                ; preds = %7, %3
  ret ptr %1
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN4Crux13restore_beginEPci(ptr nocapture noundef nonnull readonly align 4 dereferenceable(12) %0, ptr noundef %1, i32 noundef %2) #13 align 2 {
  %4 = alloca [60 x i8], align 16
  %5 = load i32, ptr %0, align 4, !tbaa !575
  %6 = srem i32 %2, %5
  store i32 %6, ptr @rs_num, align 4, !tbaa !68
  tail call void @cpu_timer_start(ptr noundef nonnull @trestore_time) #56
  %7 = icmp eq ptr %1, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %3
  %9 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.49)
  %10 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.10.50, ptr noundef nonnull %1) #56
  %11 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.22.51)
  %12 = tail call noalias ptr @fopen(ptr noundef nonnull %1, ptr noundef nonnull @.str.12.52) #56
  store ptr %12, ptr @restore_fp, align 8, !tbaa !29
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %8
  %15 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.13.53, ptr noundef nonnull %1) #56
  br label %16

16:                                               ; preds = %14, %8
  store i32 1, ptr @restore_type, align 4, !tbaa !68
  br label %41

17:                                               ; preds = %3
  %18 = getelementptr inbounds %class.Crux, ptr %0, i64 0, i32 1
  %19 = load i32, ptr %18, align 4, !tbaa !577
  switch i32 %19, label %41 [
    i32 2, label %20
    i32 1, label %32
  ]

20:                                               ; preds = %17
  %21 = load i32, ptr @rs_num, align 4, !tbaa !68
  %22 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.14.54, i32 noundef %21, i32 noundef %2) #56
  %23 = load ptr, ptr @crux_data, align 8, !tbaa !29
  %24 = load i32, ptr @rs_num, align 4, !tbaa !68
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds ptr, ptr %23, i64 %25
  %27 = load ptr, ptr %26, align 8, !tbaa !29
  %28 = load ptr, ptr @crux_data_size, align 8, !tbaa !29
  %29 = getelementptr inbounds i64, ptr %28, i64 %25
  %30 = load i64, ptr %29, align 8, !tbaa !85
  %31 = tail call noalias ptr @fmemopen(ptr noundef %27, i64 noundef %30, ptr noundef nonnull @.str.12.52) #59
  store ptr %31, ptr @restore_fp, align 8, !tbaa !29
  store i32 2, ptr @restore_type, align 4, !tbaa !68
  br label %41

32:                                               ; preds = %17
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %4) #57
  %33 = load i32, ptr @rs_num, align 4, !tbaa !68
  %34 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %4, ptr noundef nonnull dereferenceable(1) @.str.15.55, ptr noundef nonnull @checkpoint_directory, i32 noundef %33) #59
  %35 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.16.56, ptr noundef nonnull %4, i32 noundef %2) #56
  %36 = call noalias ptr @fopen(ptr noundef nonnull %4, ptr noundef nonnull @.str.12.52) #56
  store ptr %36, ptr @restore_fp, align 8, !tbaa !29
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.17.57, ptr noundef nonnull %4) #56
  br label %40

40:                                               ; preds = %38, %32
  store i32 2, ptr @restore_type, align 4, !tbaa !68
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %4) #57
  br label %41

41:                                               ; preds = %40, %20, %17, %16
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN4Crux11restore_endEv(ptr nocapture noundef nonnull readnone align 4 dereferenceable(12) %0) #13 align 2 {
  %2 = load i64, ptr @trestore_time, align 8, !tbaa.struct !560
  %3 = load i64, ptr getelementptr inbounds (%struct.timeval, ptr @trestore_time, i64 0, i32 1), align 8, !tbaa.struct !561
  %4 = tail call double @cpu_timer_stop(i64 %2, i64 %3) #56
  %5 = load i8, ptr @do_crux_timing, align 1, !tbaa !540, !range !130, !noundef !131
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %1
  %8 = load i32, ptr @restore_type, align 4, !tbaa !68
  switch i32 %8, label %16 [
    i32 1, label %9
    i32 2, label %12
  ]

9:                                                ; preds = %7
  %10 = load ptr, ptr @crux_time_fp, align 8, !tbaa !29
  %11 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %10, ptr noundef nonnull @.str.20.60, double noundef %4) #56
  br label %16

12:                                               ; preds = %7
  %13 = load ptr, ptr @crux_time_fp, align 8, !tbaa !29
  %14 = load i32, ptr @rollback_attempt, align 4, !tbaa !68
  %15 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %13, ptr noundef nonnull @.str.21, i32 noundef %14, double noundef %4) #56
  br label %16

16:                                               ; preds = %12, %9, %7, %1
  %17 = load ptr, ptr @restore_fp, align 8, !tbaa !29
  %18 = tail call i32 @fclose(ptr noundef %17) #56
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define internal noundef i32 @_ZN4Crux19get_rollback_numberEv(ptr nocapture noundef nonnull readonly align 4 dereferenceable(12) %0) #31 align 2 {
  %2 = load i32, ptr @rollback_attempt, align 4, !tbaa !68
  %3 = add nsw i32 %2, 1
  store i32 %3, ptr @rollback_attempt, align 4, !tbaa !68
  %4 = getelementptr inbounds %class.Crux, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !578
  %6 = load i32, ptr %0, align 4, !tbaa !575
  %7 = srem i32 %5, %6
  ret i32 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: write) uwtable
define internal void @_ZN4Crux13set_crux_typeEi(ptr nocapture noundef nonnull writeonly align 4 dereferenceable(12) %0, i32 noundef %1) #2 align 2 {
  %3 = getelementptr inbounds %class.Crux, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !577
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(readwrite, argmem: none) uwtable
define internal ptr @genvector_p(i32 noundef %0, i64 noundef %1, ptr nocapture noundef readnone %2, i32 noundef %3) #40 {
  %5 = sext i32 %0 to i64
  %6 = mul i64 %5, %1
  %7 = tail call noalias ptr @calloc(i64 noundef %5, i64 noundef %1) #68
  %8 = load ptr, ptr @genmalloc_memory_head, align 8, !tbaa !585
  %9 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #65
  store ptr %9, ptr @genmalloc_memory_item, align 8, !tbaa !587
  store ptr %7, ptr %9, align 8, !tbaa !588
  %10 = getelementptr inbounds %struct.genmalloc_memory_entry, ptr %9, i64 0, i32 1
  store i64 %6, ptr %10, align 8, !tbaa !592
  %11 = getelementptr inbounds %struct.genmalloc_memory_entry, ptr %9, i64 0, i32 2
  store ptr %8, ptr %11, align 8, !tbaa !593
  store ptr %9, ptr @genmalloc_memory_head, align 8, !tbaa !585
  ret ptr %7
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #41

; Function Attrs: nounwind optsize uwtable
define internal void @genvectorfree_p(ptr noundef %0, ptr nocapture noundef readnone %1, i32 noundef %2) #10 {
  tail call void @genmalloc_memory_remove_p(ptr noundef %0, ptr nonnull poison, i32 poison) #56
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @genmalloc_memory_remove_p(ptr noundef %0, ptr nocapture readnone %1, i32 %2) #10 {
  %4 = load ptr, ptr @genmalloc_memory_head, align 8, !tbaa !587
  store ptr %4, ptr @genmalloc_memory_item, align 8, !tbaa !587
  %5 = icmp eq ptr %4, null
  br i1 %5, label %30, label %10

6:                                                ; preds = %10
  %7 = getelementptr inbounds %struct.genmalloc_memory_entry, ptr %11, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !587
  store ptr %8, ptr @genmalloc_memory_item, align 8, !tbaa !587
  %9 = icmp eq ptr %8, null
  br i1 %9, label %30, label %10, !llvm.loop !594

10:                                               ; preds = %6, %3
  %11 = phi ptr [ %8, %6 ], [ %4, %3 ]
  %12 = load ptr, ptr %11, align 8, !tbaa !588
  %13 = icmp eq ptr %12, %0
  br i1 %13, label %14, label %6

14:                                               ; preds = %10
  tail call void @free(ptr noundef %0) #59
  %15 = load ptr, ptr @genmalloc_memory_head, align 8, !tbaa !585
  %16 = load ptr, ptr @genmalloc_memory_item, align 8, !tbaa !587
  %17 = icmp eq ptr %15, %16
  br i1 %17, label %25, label %18

18:                                               ; preds = %18, %14
  %19 = phi ptr [ %21, %18 ], [ %15, %14 ]
  %20 = getelementptr inbounds %struct.genmalloc_memory_entry, ptr %19, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !593
  %22 = icmp eq ptr %21, %16
  br i1 %22, label %23, label %18, !llvm.loop !595

23:                                               ; preds = %18
  %.lcssa = phi ptr [ %19, %18 ]
  %24 = getelementptr inbounds %struct.genmalloc_memory_entry, ptr %.lcssa, i64 0, i32 2
  br label %25

25:                                               ; preds = %23, %14
  %26 = phi ptr [ %16, %23 ], [ %15, %14 ]
  %27 = phi ptr [ %24, %23 ], [ @genmalloc_memory_head, %14 ]
  %28 = getelementptr inbounds %struct.genmalloc_memory_entry, ptr %26, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !593
  store ptr %29, ptr %27, align 8, !tbaa !587
  tail call void @free(ptr noundef %16) #59
  br label %30

30:                                               ; preds = %25, %6, %3
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(readwrite, argmem: none, inaccessiblemem: none) uwtable
define internal i32 @glibc_compat_rand() #42 {
  %1 = load i32, ptr @next, align 4, !tbaa !132
  %2 = icmp slt i32 %1, 3
  %3 = select i1 %2, i32 341, i32 -3
  %4 = add nsw i32 %3, %1
  %5 = icmp slt i32 %1, 31
  %6 = select i1 %5, i32 313, i32 -31
  %7 = add nsw i32 %6, %1
  %8 = sext i32 %4 to i64
  %9 = getelementptr inbounds [344 x i32], ptr @table, i64 0, i64 %8
  %10 = load i32, ptr %9, align 4, !tbaa !132
  %11 = sext i32 %7 to i64
  %12 = getelementptr inbounds [344 x i32], ptr @table, i64 0, i64 %11
  %13 = load i32, ptr %12, align 4, !tbaa !132
  %14 = add i32 %13, %10
  %15 = sext i32 %1 to i64
  %16 = getelementptr inbounds [344 x i32], ptr @table, i64 0, i64 %15
  store i32 %14, ptr %16, align 4, !tbaa !132
  %17 = lshr i32 %14, 1
  %18 = add nsw i32 %1, 1
  %19 = icmp sgt i32 %1, 342
  %20 = select i1 %19, i32 0, i32 %18
  store i32 %20, ptr @next, align 4
  ret i32 %17
}

; Function Attrs: nofree nounwind optsize uwtable
define internal void @init_graphics_output() #35 {
  %1 = alloca %struct.stat, align 8
  %2 = load float, ptr @graphics_xmax, align 4, !tbaa !596
  %3 = load float, ptr @graphics_xmin, align 4, !tbaa !596
  %4 = fsub float %2, %3
  %5 = fpext float %4 to double
  %6 = fdiv double 8.000000e+02, %5
  store double %6, ptr @xconversion, align 8, !tbaa !7
  %7 = load float, ptr @graphics_ymax, align 4, !tbaa !596
  %8 = load float, ptr @graphics_ymin, align 4, !tbaa !596
  %9 = fsub float %7, %8
  %10 = fpext float %9 to double
  %11 = fdiv double 8.000000e+02, %10
  store double %11, ptr @yconversion, align 8, !tbaa !7
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %1) #57
  %12 = load ptr, ptr @graphics_directory, align 8, !tbaa !587
  %13 = call i32 @stat(ptr noundef %12, ptr noundef nonnull %1) #59
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %18

15:                                               ; preds = %0
  %16 = load ptr, ptr @graphics_directory, align 8, !tbaa !587
  %17 = tail call i32 @mkdir(ptr noundef %16, i32 noundef 511) #59
  br label %18

18:                                               ; preds = %15, %0
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %1) #57
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(none) uwtable
define internal void @terminate_graphics_output() #26 {
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define internal void @set_graphics_window(float noundef %0, float noundef %1, float noundef %2, float noundef %3) #43 {
  store float %0, ptr @graphics_xmin, align 4, !tbaa !596
  store float %1, ptr @graphics_xmax, align 4, !tbaa !596
  store float %2, ptr @graphics_ymin, align 4, !tbaa !596
  store float %3, ptr @graphics_ymax, align 4, !tbaa !596
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define internal void @set_graphics_cell_data_double(ptr noundef %0) #43 {
  store i1 true, ptr @data_type, align 4
  store ptr %0, ptr @data_double, align 8, !tbaa !587
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define internal void @set_graphics_cell_proc(ptr noundef %0) #43 {
  store ptr %0, ptr @graphics_proc, align 8, !tbaa !587
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define internal void @set_graphics_cell_coordinates_double(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #43 {
  store ptr %0, ptr @x_double, align 8, !tbaa !587
  store ptr %1, ptr @dx_double, align 8, !tbaa !587
  store ptr %2, ptr @y_double, align 8, !tbaa !587
  store ptr %3, ptr @dy_double, align 8, !tbaa !587
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define internal void @set_graphics_viewmode(i32 noundef %0) #43 {
  store i32 %0, ptr @graphics_view_mode, align 4, !tbaa !132
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define internal void @set_graphics_mysize(i32 noundef %0) #43 {
  store i32 %0, ptr @graphics_mysize, align 4, !tbaa !132
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(none) uwtable
define internal void @set_graphics_outline(i32 noundef %0) #26 {
  ret void
}

; Function Attrs: nofree nounwind optsize uwtable
define internal void @DrawSquaresToFile(i32 noundef %0, i32 noundef %1, double noundef %2, i32 noundef %3, i32 noundef %4) #35 {
  %6 = alloca [50 x i8], align 16
  %7 = alloca [50 x i8], align 16
  %8 = load i32, ptr @graphics_type, align 4, !tbaa !132
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %231

10:                                               ; preds = %5
  %11 = load ptr, ptr @graphics_proc, align 8, !tbaa !587
  %12 = load i32, ptr @graphics_mysize, align 4, !tbaa !132
  %13 = add nsw i32 %12, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, ptr %11, i64 %14
  %16 = load i32, ptr %15, align 4, !tbaa !132
  %17 = add nsw i32 %16, 1
  %18 = sdiv i32 256, %17
  call void @llvm.lifetime.start.p0(i64 50, ptr nonnull %6) #57
  call void @llvm.lifetime.start.p0(i64 50, ptr nonnull %7) #57
  %19 = icmp eq i32 %3, 0
  %20 = load ptr, ptr @graphics_directory, align 8, !tbaa !587
  br i1 %19, label %25, label %21

21:                                               ; preds = %10
  %22 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %6, ptr noundef nonnull dereferenceable(1) @.str.1.88, ptr noundef %20, i32 noundef %0, i32 noundef %4) #59
  %23 = load ptr, ptr @graphics_directory, align 8, !tbaa !587
  %24 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %7, ptr noundef nonnull dereferenceable(1) @.str.2.89, ptr noundef %23, i32 noundef %0, i32 noundef %4) #59
  br label %29

25:                                               ; preds = %10
  %26 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %6, ptr noundef nonnull dereferenceable(1) @.str.3.90, ptr noundef %20, i32 noundef %0) #59
  %27 = load ptr, ptr @graphics_directory, align 8, !tbaa !587
  %28 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %7, ptr noundef nonnull dereferenceable(1) @.str.4.91, ptr noundef %27, i32 noundef %0) #59
  br label %29

29:                                               ; preds = %25, %21
  %30 = call noalias ptr @fopen(ptr noundef nonnull %6, ptr noundef nonnull @.str.5.92) #56
  %31 = call noalias ptr @fopen(ptr noundef nonnull %7, ptr noundef nonnull @.str.5.92) #56
  %32 = icmp ne ptr %30, null
  %33 = icmp ne ptr %31, null
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %224

35:                                               ; preds = %29
  %36 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %30, ptr noundef nonnull @.str.6.93, i32 noundef %1, double noundef %2) #56
  %37 = load i1, ptr @data_type, align 4
  %38 = load i32, ptr @graphics_mysize, align 4, !tbaa !132
  %39 = icmp sgt i32 %38, 0
  br i1 %37, label %41, label %40

40:                                               ; preds = %35
  br i1 %39, label %129, label %219

41:                                               ; preds = %35
  br i1 %39, label %42, label %219

42:                                               ; preds = %42, %41
  %43 = phi i64 [ %125, %42 ], [ 0, %41 ]
  %44 = load ptr, ptr @x_double, align 8, !tbaa !587
  %45 = getelementptr inbounds double, ptr %44, i64 %43
  %46 = load double, ptr %45, align 8, !tbaa !7
  %47 = load float, ptr @graphics_xmin, align 4, !tbaa !596
  %48 = fpext float %47 to double
  %49 = fsub double %46, %48
  %50 = load double, ptr @xconversion, align 8, !tbaa !7
  %51 = fmul double %50, %49
  %52 = fptosi double %51 to i32
  %53 = load ptr, ptr @dx_double, align 8, !tbaa !587
  %54 = getelementptr inbounds double, ptr %53, i64 %43
  %55 = load double, ptr %54, align 8, !tbaa !7
  %56 = fadd double %46, %55
  %57 = fsub double %56, %48
  %58 = fmul double %50, %57
  %59 = sitofp i32 %52 to double
  %60 = fsub double %58, %59
  %61 = fptosi double %60 to i32
  %62 = load float, ptr @graphics_ymax, align 4, !tbaa !596
  %63 = fpext float %62 to double
  %64 = load ptr, ptr @y_double, align 8, !tbaa !587
  %65 = getelementptr inbounds double, ptr %64, i64 %43
  %66 = load double, ptr %65, align 8, !tbaa !7
  %67 = load ptr, ptr @dy_double, align 8, !tbaa !587
  %68 = getelementptr inbounds double, ptr %67, i64 %43
  %69 = load double, ptr %68, align 8, !tbaa !7
  %70 = fadd double %66, %69
  %71 = load double, ptr @yconversion, align 8, !tbaa !7
  %72 = insertelement <2 x double> poison, double %63, i64 0
  %73 = shufflevector <2 x double> %72, <2 x double> poison, <2 x i32> zeroinitializer
  %74 = insertelement <2 x double> poison, double %66, i64 0
  %75 = insertelement <2 x double> %74, double %70, i64 1
  %76 = fsub <2 x double> %73, %75
  %77 = insertelement <2 x double> poison, double %71, i64 0
  %78 = shufflevector <2 x double> %77, <2 x double> poison, <2 x i32> zeroinitializer
  %79 = fmul <2 x double> %76, %78
  %80 = fptosi <2 x double> %79 to <2 x i32>
  %81 = extractelement <2 x i32> %80, i64 0
  %82 = extractelement <2 x i32> %80, i64 1
  %83 = sub nsw i32 %81, %82
  %84 = load ptr, ptr @graphics_proc, align 8, !tbaa !587
  %85 = getelementptr inbounds i32, ptr %84, i64 %43
  %86 = load i32, ptr %85, align 4, !tbaa !132
  %87 = mul nsw i32 %86, %18
  %88 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %30, ptr noundef nonnull @.str.7.94, i32 noundef %52, i32 noundef %82, i32 noundef %61, i32 noundef %83, i32 noundef %87) #56
  %89 = load ptr, ptr @x_double, align 8, !tbaa !587
  %90 = getelementptr inbounds double, ptr %89, i64 %43
  %91 = load double, ptr %90, align 8, !tbaa !7
  %92 = load float, ptr @graphics_xmin, align 4, !tbaa !596
  %93 = fpext float %92 to double
  %94 = fsub double %91, %93
  %95 = load double, ptr @xconversion, align 8, !tbaa !7
  %96 = fmul double %95, %94
  %97 = fptosi double %96 to i32
  %98 = load ptr, ptr @dx_double, align 8, !tbaa !587
  %99 = getelementptr inbounds double, ptr %98, i64 %43
  %100 = load double, ptr %99, align 8, !tbaa !7
  %101 = fadd double %91, %100
  %102 = fsub double %101, %93
  %103 = fmul double %95, %102
  %104 = fptosi double %103 to i32
  %105 = load float, ptr @graphics_ymax, align 4, !tbaa !596
  %106 = fpext float %105 to double
  %107 = load ptr, ptr @y_double, align 8, !tbaa !587
  %108 = getelementptr inbounds double, ptr %107, i64 %43
  %109 = load double, ptr %108, align 8, !tbaa !7
  %110 = fsub double %106, %109
  %111 = load double, ptr @yconversion, align 8, !tbaa !7
  %112 = fmul double %110, %111
  %113 = fptosi double %112 to i32
  %114 = load ptr, ptr @dy_double, align 8, !tbaa !587
  %115 = getelementptr inbounds double, ptr %114, i64 %43
  %116 = load double, ptr %115, align 8, !tbaa !7
  %117 = fadd double %109, %116
  %118 = fsub double %106, %117
  %119 = fmul double %111, %118
  %120 = fptosi double %119 to i32
  %121 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %31, ptr noundef nonnull @.str.8.95, i32 noundef %97, i32 noundef %120, i32 noundef %104, i32 noundef %120) #56
  %122 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %31, ptr noundef nonnull @.str.8.95, i32 noundef %97, i32 noundef %113, i32 noundef %104, i32 noundef %113) #56
  %123 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %31, ptr noundef nonnull @.str.8.95, i32 noundef %97, i32 noundef %113, i32 noundef %97, i32 noundef %120) #56
  %124 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %31, ptr noundef nonnull @.str.8.95, i32 noundef %104, i32 noundef %113, i32 noundef %104, i32 noundef %120) #56
  %125 = add nuw nsw i64 %43, 1
  %126 = load i32, ptr @graphics_mysize, align 4, !tbaa !132
  %127 = sext i32 %126 to i64
  %128 = icmp slt i64 %125, %127
  br i1 %128, label %42, label %219, !llvm.loop !598

129:                                              ; preds = %129, %40
  %130 = phi i64 [ %215, %129 ], [ 0, %40 ]
  %131 = load ptr, ptr @x_float, align 8, !tbaa !587
  %132 = getelementptr inbounds float, ptr %131, i64 %130
  %133 = load float, ptr %132, align 4, !tbaa !596
  %134 = load float, ptr @graphics_xmin, align 4, !tbaa !596
  %135 = fsub float %133, %134
  %136 = fpext float %135 to double
  %137 = load double, ptr @xconversion, align 8, !tbaa !7
  %138 = fmul double %137, %136
  %139 = fptosi double %138 to i32
  %140 = load ptr, ptr @dx_float, align 8, !tbaa !587
  %141 = getelementptr inbounds float, ptr %140, i64 %130
  %142 = load float, ptr %141, align 4, !tbaa !596
  %143 = fadd float %133, %142
  %144 = fsub float %143, %134
  %145 = fpext float %144 to double
  %146 = fmul double %137, %145
  %147 = sitofp i32 %139 to double
  %148 = fsub double %146, %147
  %149 = fptosi double %148 to i32
  %150 = load float, ptr @graphics_ymax, align 4, !tbaa !596
  %151 = load ptr, ptr @y_float, align 8, !tbaa !587
  %152 = getelementptr inbounds float, ptr %151, i64 %130
  %153 = load float, ptr %152, align 4, !tbaa !596
  %154 = load ptr, ptr @dy_float, align 8, !tbaa !587
  %155 = getelementptr inbounds float, ptr %154, i64 %130
  %156 = load float, ptr %155, align 4, !tbaa !596
  %157 = fadd float %153, %156
  %158 = load double, ptr @yconversion, align 8, !tbaa !7
  %159 = insertelement <2 x float> poison, float %150, i64 0
  %160 = shufflevector <2 x float> %159, <2 x float> poison, <2 x i32> zeroinitializer
  %161 = insertelement <2 x float> poison, float %153, i64 0
  %162 = insertelement <2 x float> %161, float %157, i64 1
  %163 = fsub <2 x float> %160, %162
  %164 = fpext <2 x float> %163 to <2 x double>
  %165 = insertelement <2 x double> poison, double %158, i64 0
  %166 = shufflevector <2 x double> %165, <2 x double> poison, <2 x i32> zeroinitializer
  %167 = fmul <2 x double> %166, %164
  %168 = fptosi <2 x double> %167 to <2 x i32>
  %169 = extractelement <2 x i32> %168, i64 0
  %170 = extractelement <2 x i32> %168, i64 1
  %171 = sub nsw i32 %169, %170
  %172 = load ptr, ptr @graphics_proc, align 8, !tbaa !587
  %173 = getelementptr inbounds i32, ptr %172, i64 %130
  %174 = load i32, ptr %173, align 4, !tbaa !132
  %175 = mul nsw i32 %174, %18
  %176 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %30, ptr noundef nonnull @.str.7.94, i32 noundef %139, i32 noundef %170, i32 noundef %149, i32 noundef %171, i32 noundef %175) #56
  %177 = load ptr, ptr @x_float, align 8, !tbaa !587
  %178 = getelementptr inbounds float, ptr %177, i64 %130
  %179 = load float, ptr %178, align 4, !tbaa !596
  %180 = load float, ptr @graphics_xmin, align 4, !tbaa !596
  %181 = fsub float %179, %180
  %182 = fpext float %181 to double
  %183 = load double, ptr @xconversion, align 8, !tbaa !7
  %184 = fmul double %183, %182
  %185 = fptosi double %184 to i32
  %186 = load ptr, ptr @dx_float, align 8, !tbaa !587
  %187 = getelementptr inbounds float, ptr %186, i64 %130
  %188 = load float, ptr %187, align 4, !tbaa !596
  %189 = fadd float %179, %188
  %190 = fsub float %189, %180
  %191 = fpext float %190 to double
  %192 = fmul double %183, %191
  %193 = fptosi double %192 to i32
  %194 = load float, ptr @graphics_ymax, align 4, !tbaa !596
  %195 = load ptr, ptr @y_float, align 8, !tbaa !587
  %196 = getelementptr inbounds float, ptr %195, i64 %130
  %197 = load float, ptr %196, align 4, !tbaa !596
  %198 = fsub float %194, %197
  %199 = fpext float %198 to double
  %200 = load double, ptr @yconversion, align 8, !tbaa !7
  %201 = fmul double %200, %199
  %202 = fptosi double %201 to i32
  %203 = load ptr, ptr @dy_float, align 8, !tbaa !587
  %204 = getelementptr inbounds float, ptr %203, i64 %130
  %205 = load float, ptr %204, align 4, !tbaa !596
  %206 = fadd float %197, %205
  %207 = fsub float %194, %206
  %208 = fpext float %207 to double
  %209 = fmul double %200, %208
  %210 = fptosi double %209 to i32
  %211 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %31, ptr noundef nonnull @.str.8.95, i32 noundef %185, i32 noundef %210, i32 noundef %193, i32 noundef %210) #56
  %212 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %31, ptr noundef nonnull @.str.8.95, i32 noundef %185, i32 noundef %202, i32 noundef %193, i32 noundef %202) #56
  %213 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %31, ptr noundef nonnull @.str.8.95, i32 noundef %185, i32 noundef %202, i32 noundef %185, i32 noundef %210) #56
  %214 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %31, ptr noundef nonnull @.str.8.95, i32 noundef %193, i32 noundef %202, i32 noundef %193, i32 noundef %210) #56
  %215 = add nuw nsw i64 %130, 1
  %216 = load i32, ptr @graphics_mysize, align 4, !tbaa !132
  %217 = sext i32 %216 to i64
  %218 = icmp slt i64 %215, %217
  br i1 %218, label %129, label %219, !llvm.loop !599

219:                                              ; preds = %129, %42, %41, %40
  %220 = tail call i32 @fclose(ptr noundef nonnull %30) #56
  %221 = tail call i32 @fclose(ptr noundef nonnull %31) #56
  %222 = load i32, ptr @iteration, align 4, !tbaa !132
  %223 = add nsw i32 %222, 1
  store i32 %223, ptr @iteration, align 4, !tbaa !132
  br label %230

224:                                              ; preds = %29
  %225 = icmp eq ptr %30, null
  br i1 %225, label %226, label %228

226:                                              ; preds = %224
  %227 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.9.96, ptr noundef nonnull %6) #56
  br label %230

228:                                              ; preds = %224
  %229 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.9.96, ptr noundef nonnull %7) #56
  br label %230

230:                                              ; preds = %228, %226, %219
  call void @llvm.lifetime.end.p0(i64 50, ptr nonnull %7) #57
  call void @llvm.lifetime.end.p0(i64 50, ptr nonnull %6) #57
  br label %231

231:                                              ; preds = %230, %5
  ret void
}

; Function Attrs: nofree nounwind optsize uwtable
define internal void @DisplayStateToFile(i32 noundef %0, i32 noundef %1, double noundef %2, i32 noundef %3, i32 noundef %4) #35 {
  %6 = alloca [50 x i8], align 16
  %7 = alloca [50 x i8], align 16
  %8 = load i32, ptr @graphics_type, align 4, !tbaa !132
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %226

10:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 50, ptr nonnull %6) #57
  call void @llvm.lifetime.start.p0(i64 50, ptr nonnull %7) #57
  %11 = icmp eq i32 %3, 0
  %12 = load ptr, ptr @graphics_directory, align 8, !tbaa !587
  br i1 %11, label %17, label %13

13:                                               ; preds = %10
  %14 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %6, ptr noundef nonnull dereferenceable(1) @.str.1.88, ptr noundef %12, i32 noundef %0, i32 noundef %4) #59
  %15 = load ptr, ptr @graphics_directory, align 8, !tbaa !587
  %16 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %7, ptr noundef nonnull dereferenceable(1) @.str.2.89, ptr noundef %15, i32 noundef %0, i32 noundef %4) #59
  br label %21

17:                                               ; preds = %10
  %18 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %6, ptr noundef nonnull dereferenceable(1) @.str.3.90, ptr noundef %12, i32 noundef %0) #59
  %19 = load ptr, ptr @graphics_directory, align 8, !tbaa !587
  %20 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %7, ptr noundef nonnull dereferenceable(1) @.str.4.91, ptr noundef %19, i32 noundef %0) #59
  br label %21

21:                                               ; preds = %17, %13
  %22 = call noalias ptr @fopen(ptr noundef nonnull %6, ptr noundef nonnull @.str.5.92) #56
  %23 = call noalias ptr @fopen(ptr noundef nonnull %7, ptr noundef nonnull @.str.5.92) #56
  %24 = icmp ne ptr %22, null
  %25 = icmp ne ptr %23, null
  %26 = and i1 %24, %25
  br i1 %26, label %27, label %219

27:                                               ; preds = %21
  %28 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %22, ptr noundef nonnull @.str.6.93, i32 noundef %1, double noundef %2) #56
  %29 = load i32, ptr @graphics_mysize, align 4, !tbaa !132
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %214

31:                                               ; preds = %209, %27
  %32 = phi i64 [ %210, %209 ], [ 0, %27 ]
  %33 = load i1, ptr @data_type, align 4
  br i1 %33, label %34, label %39

34:                                               ; preds = %31
  %35 = load ptr, ptr @data_double, align 8, !tbaa !587
  %36 = getelementptr inbounds double, ptr %35, i64 %32
  %37 = load double, ptr %36, align 8, !tbaa !7
  %38 = fptosi double %37 to i32
  br label %44

39:                                               ; preds = %31
  %40 = load ptr, ptr @data_float, align 8, !tbaa !587
  %41 = getelementptr inbounds float, ptr %40, i64 %32
  %42 = load float, ptr %41, align 4, !tbaa !596
  %43 = fptosi float %42 to i32
  br label %44

44:                                               ; preds = %39, %34
  %45 = phi i32 [ %38, %34 ], [ %43, %39 ]
  %46 = sitofp i32 %45 to double
  %47 = fmul double %46, 1.024000e+01
  %48 = fptosi double %47 to i32
  %49 = sub nsw i32 256, %48
  %50 = tail call i32 @llvm.smax.i32(i32 %49, i32 0)
  %51 = tail call i32 @llvm.umin.i32(i32 %50, i32 255)
  %52 = load float, ptr @graphics_xmin, align 4, !tbaa !596
  %53 = load double, ptr @xconversion, align 8, !tbaa !7
  br i1 %33, label %54, label %130

54:                                               ; preds = %44
  %55 = load ptr, ptr @x_double, align 8, !tbaa !587
  %56 = getelementptr inbounds double, ptr %55, i64 %32
  %57 = load double, ptr %56, align 8, !tbaa !7
  %58 = fpext float %52 to double
  %59 = fsub double %57, %58
  %60 = fmul double %53, %59
  %61 = fptosi double %60 to i32
  %62 = load ptr, ptr @dx_double, align 8, !tbaa !587
  %63 = getelementptr inbounds double, ptr %62, i64 %32
  %64 = load double, ptr %63, align 8, !tbaa !7
  %65 = fadd double %57, %64
  %66 = fsub double %65, %58
  %67 = fmul double %53, %66
  %68 = sitofp i32 %61 to double
  %69 = fsub double %67, %68
  %70 = fptosi double %69 to i32
  %71 = load float, ptr @graphics_ymax, align 4, !tbaa !596
  %72 = fpext float %71 to double
  %73 = load ptr, ptr @y_double, align 8, !tbaa !587
  %74 = getelementptr inbounds double, ptr %73, i64 %32
  %75 = load double, ptr %74, align 8, !tbaa !7
  %76 = load ptr, ptr @dy_double, align 8, !tbaa !587
  %77 = getelementptr inbounds double, ptr %76, i64 %32
  %78 = load double, ptr %77, align 8, !tbaa !7
  %79 = fadd double %75, %78
  %80 = load double, ptr @yconversion, align 8, !tbaa !7
  %81 = insertelement <2 x double> poison, double %72, i64 0
  %82 = shufflevector <2 x double> %81, <2 x double> poison, <2 x i32> zeroinitializer
  %83 = insertelement <2 x double> poison, double %75, i64 0
  %84 = insertelement <2 x double> %83, double %79, i64 1
  %85 = fsub <2 x double> %82, %84
  %86 = insertelement <2 x double> poison, double %80, i64 0
  %87 = shufflevector <2 x double> %86, <2 x double> poison, <2 x i32> zeroinitializer
  %88 = fmul <2 x double> %85, %87
  %89 = fptosi <2 x double> %88 to <2 x i32>
  %90 = extractelement <2 x i32> %89, i64 0
  %91 = extractelement <2 x i32> %89, i64 1
  %92 = sub nsw i32 %90, %91
  %93 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %22, ptr noundef nonnull @.str.7.94, i32 noundef %61, i32 noundef %91, i32 noundef %70, i32 noundef %92, i32 noundef %51) #56
  %94 = load ptr, ptr @x_double, align 8, !tbaa !587
  %95 = getelementptr inbounds double, ptr %94, i64 %32
  %96 = load double, ptr %95, align 8, !tbaa !7
  %97 = load float, ptr @graphics_xmin, align 4, !tbaa !596
  %98 = fpext float %97 to double
  %99 = fsub double %96, %98
  %100 = load double, ptr @xconversion, align 8, !tbaa !7
  %101 = fmul double %100, %99
  %102 = fptosi double %101 to i32
  %103 = load ptr, ptr @dx_double, align 8, !tbaa !587
  %104 = getelementptr inbounds double, ptr %103, i64 %32
  %105 = load double, ptr %104, align 8, !tbaa !7
  %106 = fadd double %96, %105
  %107 = fsub double %106, %98
  %108 = fmul double %100, %107
  %109 = fptosi double %108 to i32
  %110 = load float, ptr @graphics_ymax, align 4, !tbaa !596
  %111 = fpext float %110 to double
  %112 = load ptr, ptr @y_double, align 8, !tbaa !587
  %113 = getelementptr inbounds double, ptr %112, i64 %32
  %114 = load double, ptr %113, align 8, !tbaa !7
  %115 = fsub double %111, %114
  %116 = load double, ptr @yconversion, align 8, !tbaa !7
  %117 = fmul double %115, %116
  %118 = fptosi double %117 to i32
  %119 = load ptr, ptr @dy_double, align 8, !tbaa !587
  %120 = getelementptr inbounds double, ptr %119, i64 %32
  %121 = load double, ptr %120, align 8, !tbaa !7
  %122 = fadd double %114, %121
  %123 = fsub double %111, %122
  %124 = fmul double %116, %123
  %125 = fptosi double %124 to i32
  %126 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %23, ptr noundef nonnull @.str.8.95, i32 noundef %102, i32 noundef %125, i32 noundef %109, i32 noundef %125) #56
  %127 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %23, ptr noundef nonnull @.str.8.95, i32 noundef %102, i32 noundef %118, i32 noundef %109, i32 noundef %118) #56
  %128 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %23, ptr noundef nonnull @.str.8.95, i32 noundef %102, i32 noundef %118, i32 noundef %102, i32 noundef %125) #56
  %129 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %23, ptr noundef nonnull @.str.8.95, i32 noundef %109, i32 noundef %118, i32 noundef %109, i32 noundef %125) #56
  br label %209

130:                                              ; preds = %44
  %131 = load ptr, ptr @x_float, align 8, !tbaa !587
  %132 = getelementptr inbounds float, ptr %131, i64 %32
  %133 = load float, ptr %132, align 4, !tbaa !596
  %134 = fsub float %133, %52
  %135 = fpext float %134 to double
  %136 = fmul double %53, %135
  %137 = fptosi double %136 to i32
  %138 = load ptr, ptr @dx_float, align 8, !tbaa !587
  %139 = getelementptr inbounds float, ptr %138, i64 %32
  %140 = load float, ptr %139, align 4, !tbaa !596
  %141 = fadd float %133, %140
  %142 = fsub float %141, %52
  %143 = fpext float %142 to double
  %144 = fmul double %53, %143
  %145 = sitofp i32 %137 to double
  %146 = fsub double %144, %145
  %147 = fptosi double %146 to i32
  %148 = load float, ptr @graphics_ymax, align 4, !tbaa !596
  %149 = load ptr, ptr @y_float, align 8, !tbaa !587
  %150 = getelementptr inbounds float, ptr %149, i64 %32
  %151 = load float, ptr %150, align 4, !tbaa !596
  %152 = load ptr, ptr @dy_float, align 8, !tbaa !587
  %153 = getelementptr inbounds float, ptr %152, i64 %32
  %154 = load float, ptr %153, align 4, !tbaa !596
  %155 = fadd float %151, %154
  %156 = load double, ptr @yconversion, align 8, !tbaa !7
  %157 = insertelement <2 x float> poison, float %148, i64 0
  %158 = shufflevector <2 x float> %157, <2 x float> poison, <2 x i32> zeroinitializer
  %159 = insertelement <2 x float> poison, float %151, i64 0
  %160 = insertelement <2 x float> %159, float %155, i64 1
  %161 = fsub <2 x float> %158, %160
  %162 = fpext <2 x float> %161 to <2 x double>
  %163 = insertelement <2 x double> poison, double %156, i64 0
  %164 = shufflevector <2 x double> %163, <2 x double> poison, <2 x i32> zeroinitializer
  %165 = fmul <2 x double> %164, %162
  %166 = fptosi <2 x double> %165 to <2 x i32>
  %167 = extractelement <2 x i32> %166, i64 0
  %168 = extractelement <2 x i32> %166, i64 1
  %169 = sub nsw i32 %167, %168
  %170 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %22, ptr noundef nonnull @.str.7.94, i32 noundef %137, i32 noundef %168, i32 noundef %147, i32 noundef %169, i32 noundef %51) #56
  %171 = load ptr, ptr @x_float, align 8, !tbaa !587
  %172 = getelementptr inbounds float, ptr %171, i64 %32
  %173 = load float, ptr %172, align 4, !tbaa !596
  %174 = load float, ptr @graphics_xmin, align 4, !tbaa !596
  %175 = fsub float %173, %174
  %176 = fpext float %175 to double
  %177 = load double, ptr @xconversion, align 8, !tbaa !7
  %178 = fmul double %177, %176
  %179 = fptosi double %178 to i32
  %180 = load ptr, ptr @dx_float, align 8, !tbaa !587
  %181 = getelementptr inbounds float, ptr %180, i64 %32
  %182 = load float, ptr %181, align 4, !tbaa !596
  %183 = fadd float %173, %182
  %184 = fsub float %183, %174
  %185 = fpext float %184 to double
  %186 = fmul double %177, %185
  %187 = fptosi double %186 to i32
  %188 = load float, ptr @graphics_ymax, align 4, !tbaa !596
  %189 = load ptr, ptr @y_float, align 8, !tbaa !587
  %190 = getelementptr inbounds float, ptr %189, i64 %32
  %191 = load float, ptr %190, align 4, !tbaa !596
  %192 = fsub float %188, %191
  %193 = fpext float %192 to double
  %194 = load double, ptr @yconversion, align 8, !tbaa !7
  %195 = fmul double %194, %193
  %196 = fptosi double %195 to i32
  %197 = load ptr, ptr @dy_float, align 8, !tbaa !587
  %198 = getelementptr inbounds float, ptr %197, i64 %32
  %199 = load float, ptr %198, align 4, !tbaa !596
  %200 = fadd float %191, %199
  %201 = fsub float %188, %200
  %202 = fpext float %201 to double
  %203 = fmul double %194, %202
  %204 = fptosi double %203 to i32
  %205 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %23, ptr noundef nonnull @.str.8.95, i32 noundef %179, i32 noundef %204, i32 noundef %187, i32 noundef %204) #56
  %206 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %23, ptr noundef nonnull @.str.8.95, i32 noundef %179, i32 noundef %196, i32 noundef %187, i32 noundef %196) #56
  %207 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %23, ptr noundef nonnull @.str.8.95, i32 noundef %179, i32 noundef %196, i32 noundef %179, i32 noundef %204) #56
  %208 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %23, ptr noundef nonnull @.str.8.95, i32 noundef %187, i32 noundef %196, i32 noundef %187, i32 noundef %204) #56
  br label %209

209:                                              ; preds = %130, %54
  %210 = add nuw nsw i64 %32, 1
  %211 = load i32, ptr @graphics_mysize, align 4, !tbaa !132
  %212 = sext i32 %211 to i64
  %213 = icmp slt i64 %210, %212
  br i1 %213, label %31, label %214, !llvm.loop !600

214:                                              ; preds = %209, %27
  %215 = tail call i32 @fclose(ptr noundef nonnull %22) #56
  %216 = tail call i32 @fclose(ptr noundef nonnull %23) #56
  %217 = load i32, ptr @iteration, align 4, !tbaa !132
  %218 = add nsw i32 %217, 1
  store i32 %218, ptr @iteration, align 4, !tbaa !132
  br label %225

219:                                              ; preds = %21
  %220 = icmp eq ptr %22, null
  br i1 %220, label %221, label %223

221:                                              ; preds = %219
  %222 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.10.97, ptr noundef nonnull %6) #56
  br label %225

223:                                              ; preds = %219
  %224 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.10.97, ptr noundef nonnull %7) #56
  br label %225

225:                                              ; preds = %223, %221, %214
  call void @llvm.lifetime.end.p0(i64 50, ptr nonnull %7) #57
  call void @llvm.lifetime.end.p0(i64 50, ptr nonnull %6) #57
  br label %226

226:                                              ; preds = %225, %5
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #21

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #21

; Function Attrs: nofree nounwind optsize uwtable
define internal void @write_graphics_info(i32 noundef %0, i32 noundef %1, double noundef %2, i32 noundef %3, i32 noundef %4) #35 {
  %6 = load i32, ptr @graphics_view_mode, align 4, !tbaa !132
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @DrawSquaresToFile(i32 noundef %0, i32 noundef %1, double noundef %2, i32 noundef %3, i32 noundef %4) #56
  br label %10

9:                                                ; preds = %5
  tail call void @DisplayStateToFile(i32 noundef %0, i32 noundef %1, double noundef %2, i32 noundef %3, i32 noundef %4) #56
  br label %10

10:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal ptr @compact_hash_init(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #10 {
  store i32 0, ptr @hash_ncells, align 4, !tbaa !132
  store i32 0, ptr @write_hash_collisions, align 4, !tbaa !132
  store i32 0, ptr @read_hash_collisions, align 4, !tbaa !132
  store i32 0, ptr @hash_queries, align 4, !tbaa !132
  store i32 %3, ptr @hash_report_level, align 4, !tbaa !132
  store i32 %1, ptr @hash_stride, align 4, !tbaa !132
  %5 = load i32, ptr @choose_hash_method, align 4, !tbaa !132
  %6 = icmp eq i32 %5, 0
  %7 = mul i32 %0, 3
  %8 = mul i32 %2, %1
  br i1 %6, label %10, label %9

9:                                                ; preds = %4
  store i32 %5, ptr @hash_method, align 4, !tbaa !132
  br label %35

10:                                               ; preds = %4
  %11 = load i32, ptr @hash_method, align 4, !tbaa !132
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %35

13:                                               ; preds = %10
  %14 = uitofp i32 %8 to double
  %15 = uitofp i32 %7 to double
  %16 = fdiv double %14, %15
  %17 = fptrunc double %16 to float
  %18 = load float, ptr @mem_opt_factor, align 4, !tbaa !596
  %19 = fcmp une float %18, 1.000000e+00
  %20 = fpext float %18 to double
  %21 = fmul double %20, 2.000000e-01
  %22 = fdiv double 2.000000e+01, %21
  %23 = fptrunc double %22 to float
  %24 = select i1 %19, float %23, float 2.000000e+01
  %25 = fcmp ogt float %24, %17
  %26 = select i1 %25, i32 1, i32 3
  store i32 %26, ptr @hash_method, align 4, !tbaa !132
  %27 = icmp ugt i32 %3, 1
  br i1 %27, label %29, label %28

28:                                               ; preds = %13
  br i1 %25, label %98, label %44

29:                                               ; preds = %13
  %30 = fpext float %17 to double
  %31 = fpext float %24 to double
  %32 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.100, i32 noundef %26, double noundef %30, double noundef %31, double noundef %20, i32 noundef %8, i32 noundef %7) #56
  %33 = load i32, ptr @hash_method, align 4, !tbaa !132
  %34 = load i32, ptr @hash_report_level, align 4, !tbaa !132
  br label %35

35:                                               ; preds = %29, %10, %9
  %36 = phi i32 [ %3, %10 ], [ %34, %29 ], [ %3, %9 ]
  %37 = phi i32 [ %11, %10 ], [ %33, %29 ], [ %5, %9 ]
  %38 = icmp ne i32 %37, 1
  %39 = icmp ugt i32 %36, 1
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = zext i1 %38 to i32
  %42 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.1.101, i32 noundef %41, i32 noundef %37, i32 noundef %8, i32 noundef %7) #56
  br i1 %38, label %44, label %98

43:                                               ; preds = %35
  br i1 %38, label %44, label %98

44:                                               ; preds = %43, %40, %28
  store i32 %7, ptr @hashtablesize, align 4, !tbaa !132
  %45 = tail call i32 @glibc_compat_rand() #59
  %46 = sitofp i32 %45 to double
  %47 = fdiv double %46, 0x41DFFFFFFFC00000
  %48 = fmul double %47, 0x41EFFFFFFF400000
  %49 = fadd double %48, 1.000000e+00
  %50 = fptoui double %49 to i64
  store i64 %50, ptr @AA, align 8, !tbaa !601
  %51 = tail call i32 @glibc_compat_rand() #59
  %52 = sitofp i32 %51 to double
  %53 = fdiv double %52, 0x41DFFFFFFFC00000
  %54 = fmul double %53, 0x41EFFFFFFF400000
  %55 = fadd double %54, 0.000000e+00
  %56 = fptoui double %55 to i64
  store i64 %56, ptr @BB, align 8, !tbaa !601
  %57 = load i64, ptr @AA, align 8, !tbaa !601
  %58 = icmp ugt i64 %57, 4294967290
  %59 = icmp ugt i64 %56, 4294967290
  %60 = select i1 %58, i1 true, i1 %59
  br i1 %60, label %61, label %62

61:                                               ; preds = %44
  tail call void @exit(i32 noundef 0) #67
  unreachable

62:                                               ; preds = %44
  %63 = load i32, ptr @hash_report_level, align 4, !tbaa !132
  %64 = icmp ugt i32 %63, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %62
  %66 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.2.102, i64 noundef %57, i64 noundef %56) #56
  br label %67

67:                                               ; preds = %65, %62
  %68 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %69 = shl i32 %68, 1
  %70 = tail call ptr @genvector_p(i32 noundef %69, i64 noundef 4, ptr noundef nonnull @.str.3.103, i32 noundef 98) #59
  %71 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %72 = shl i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %67
  %75 = zext i32 %72 to i64
  br label %78

76:                                               ; preds = %78, %67
  %77 = load i32, ptr @hash_method, align 4, !tbaa !132
  switch i32 %77, label %106 [
    i32 2, label %83
    i32 3, label %88
    i32 4, label %93
  ]

78:                                               ; preds = %78, %74
  %79 = phi i64 [ 0, %74 ], [ %81, %78 ]
  %80 = getelementptr inbounds i32, ptr %70, i64 %79
  store i32 -1, ptr %80, align 4, !tbaa !132
  %81 = add nuw nsw i64 %79, 2
  %82 = icmp ult i64 %81, %75
  br i1 %82, label %78, label %76, !llvm.loop !602

83:                                               ; preds = %76
  %84 = load i32, ptr @hash_report_level, align 4, !tbaa !132
  switch i32 %84, label %114 [
    i32 0, label %85
    i32 1, label %86
    i32 2, label %111
    i32 3, label %87
  ]

85:                                               ; preds = %83
  store ptr @read_hash_linear, ptr @read_hash, align 8, !tbaa !587
  store ptr @write_hash_linear, ptr @write_hash, align 8, !tbaa !587
  br label %123

86:                                               ; preds = %83
  store ptr @read_hash_linear_report_level_1, ptr @read_hash, align 8, !tbaa !587
  store ptr @write_hash_linear_report_level_1, ptr @write_hash, align 8, !tbaa !587
  br label %123

87:                                               ; preds = %83
  br label %111

88:                                               ; preds = %76
  %89 = load i32, ptr @hash_report_level, align 4, !tbaa !132
  switch i32 %89, label %114 [
    i32 0, label %90
    i32 1, label %91
    i32 2, label %111
    i32 3, label %92
  ]

90:                                               ; preds = %88
  store ptr @read_hash_quadratic, ptr @read_hash, align 8, !tbaa !587
  store ptr @write_hash_quadratic, ptr @write_hash, align 8, !tbaa !587
  br label %123

91:                                               ; preds = %88
  store ptr @read_hash_quadratic_report_level_1, ptr @read_hash, align 8, !tbaa !587
  store ptr @write_hash_quadratic_report_level_1, ptr @write_hash, align 8, !tbaa !587
  br label %123

92:                                               ; preds = %88
  br label %111

93:                                               ; preds = %76
  %94 = load i32, ptr @hash_report_level, align 4, !tbaa !132
  switch i32 %94, label %114 [
    i32 0, label %95
    i32 1, label %96
    i32 2, label %111
    i32 3, label %97
  ]

95:                                               ; preds = %93
  store ptr @read_hash_primejump, ptr @read_hash, align 8, !tbaa !587
  store ptr @write_hash_primejump, ptr @write_hash, align 8, !tbaa !587
  br label %123

96:                                               ; preds = %93
  store ptr @read_hash_primejump_report_level_1, ptr @read_hash, align 8, !tbaa !587
  store ptr @write_hash_primejump_report_level_1, ptr @write_hash, align 8, !tbaa !587
  br label %123

97:                                               ; preds = %93
  br label %111

98:                                               ; preds = %43, %40, %28
  store i32 %8, ptr @hashtablesize, align 4, !tbaa !132
  %99 = tail call ptr @genvector_p(i32 noundef %8, i64 noundef 4, ptr noundef nonnull @.str.3.103, i32 noundef 149) #59
  %100 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %98
  %103 = zext i32 %100 to i64
  %104 = shl nuw nsw i64 %103, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %99, i8 -1, i64 %104, i1 false), !tbaa !132
  br label %105

105:                                              ; preds = %102, %98
  store ptr @read_hash_perfect, ptr @read_hash, align 8, !tbaa !587
  store ptr @write_hash_perfect, ptr @write_hash, align 8, !tbaa !587
  br label %106

106:                                              ; preds = %105, %76
  %107 = phi i32 [ %71, %76 ], [ %100, %105 ]
  %108 = phi ptr [ %70, %76 ], [ %99, %105 ]
  %109 = load i32, ptr @hash_report_level, align 4, !tbaa !132
  %110 = icmp ugt i32 %109, 1
  br i1 %110, label %114, label %123

111:                                              ; preds = %97, %93, %92, %88, %87, %83
  %112 = phi ptr [ @read_hash_quadratic_report_level_3, %92 ], [ @read_hash_primejump_report_level_3, %97 ], [ @read_hash_linear_report_level_3, %87 ], [ @read_hash_linear_report_level_2, %83 ], [ @read_hash_quadratic_report_level_2, %88 ], [ @read_hash_primejump_report_level_2, %93 ]
  %113 = phi ptr [ @write_hash_quadratic_report_level_3, %92 ], [ @write_hash_primejump_report_level_3, %97 ], [ @write_hash_linear_report_level_3, %87 ], [ @write_hash_linear_report_level_2, %83 ], [ @write_hash_quadratic_report_level_2, %88 ], [ @write_hash_primejump_report_level_2, %93 ]
  store ptr %112, ptr @read_hash, align 8, !tbaa !587
  store ptr %113, ptr @write_hash, align 8, !tbaa !587
  br label %114

114:                                              ; preds = %111, %106, %93, %88, %83
  %115 = phi i32 [ %107, %106 ], [ %71, %93 ], [ %71, %88 ], [ %71, %83 ], [ %71, %111 ]
  %116 = phi ptr [ %108, %106 ], [ %70, %93 ], [ %70, %88 ], [ %70, %83 ], [ %70, %111 ]
  %117 = sub nsw i32 %8, %115
  %118 = uitofp i32 %115 to double
  %119 = uitofp i32 %8 to double
  %120 = fdiv double %118, %119
  %121 = fmul double %120, 1.000000e+02
  %122 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.4.104, i32 noundef %115, i32 noundef %8, i32 noundef %117, double noundef %121) #56
  br label %123

123:                                              ; preds = %114, %106, %96, %95, %91, %90, %86, %85
  %124 = phi ptr [ %116, %114 ], [ %108, %106 ], [ %70, %86 ], [ %70, %85 ], [ %70, %96 ], [ %70, %95 ], [ %70, %90 ], [ %70, %91 ]
  ret ptr %124
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(read, inaccessiblemem: none) uwtable
define internal i32 @read_hash_linear(i64 noundef %0, ptr nocapture noundef readonly %1) #33 {
  %3 = load i64, ptr @AA, align 8, !tbaa !601
  %4 = mul i64 %3, %0
  %5 = load i64, ptr @BB, align 8, !tbaa !601
  %6 = add i64 %4, %5
  %7 = urem i64 %6, 4294967291
  %8 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %9 = trunc i64 %7 to i32
  %10 = trunc i64 %0 to i32
  br label %11

11:                                               ; preds = %11, %2
  %12 = phi i32 [ %9, %2 ], [ %21, %11 ]
  %13 = urem i32 %12, %8
  %14 = shl i32 %13, 1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i32, ptr %1, i64 %15
  %17 = load i32, ptr %16, align 4, !tbaa !132
  %18 = icmp eq i32 %17, %10
  %19 = icmp eq i32 %17, -1
  %20 = or i1 %18, %19
  %21 = add nuw i32 %13, 1
  br i1 %20, label %22, label %11, !llvm.loop !603

22:                                               ; preds = %11
  %.lcssa1 = phi i32 [ %14, %11 ]
  %.lcssa = phi i1 [ %19, %11 ]
  br i1 %.lcssa, label %28, label %23

23:                                               ; preds = %22
  %24 = or i32 %.lcssa1, 1
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i32, ptr %1, i64 %25
  %27 = load i32, ptr %26, align 4, !tbaa !132
  br label %28

28:                                               ; preds = %23, %22
  %29 = phi i32 [ %27, %23 ], [ -1, %22 ]
  ret i32 %29
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @write_hash_linear(i32 noundef %0, i64 noundef %1, ptr nocapture noundef %2) #44 {
  %4 = load i64, ptr @AA, align 8, !tbaa !601
  %5 = mul i64 %4, %1
  %6 = load i64, ptr @BB, align 8, !tbaa !601
  %7 = add i64 %5, %6
  %8 = urem i64 %7, 4294967291
  %9 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %10 = trunc i64 %8 to i32
  %11 = trunc i64 %1 to i32
  br label %12

12:                                               ; preds = %12, %3
  %13 = phi i32 [ %10, %3 ], [ %22, %12 ]
  %14 = urem i32 %13, %9
  %15 = shl i32 %14, 1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i32, ptr %2, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !132
  %19 = icmp eq i32 %18, -1
  %20 = icmp eq i32 %18, %11
  %21 = or i1 %19, %20
  %22 = add nuw i32 %14, 1
  br i1 %21, label %23, label %12, !llvm.loop !604

23:                                               ; preds = %12
  %.lcssa1 = phi i32 [ %15, %12 ]
  %.lcssa = phi i64 [ %16, %12 ]
  %24 = getelementptr inbounds i32, ptr %2, i64 %.lcssa
  store i32 %11, ptr %24, align 4, !tbaa !132
  %25 = or i32 %.lcssa1, 1
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i32, ptr %2, i64 %26
  store i32 %0, ptr %27, align 4, !tbaa !132
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define internal i32 @read_hash_linear_report_level_1(i64 noundef %0, ptr nocapture noundef readonly %1) #45 {
  %3 = load i32, ptr @hash_queries, align 4, !tbaa !132
  %4 = add i32 %3, 1
  store i32 %4, ptr @hash_queries, align 4, !tbaa !132
  %5 = load i64, ptr @AA, align 8, !tbaa !601
  %6 = mul i64 %5, %0
  %7 = load i64, ptr @BB, align 8, !tbaa !601
  %8 = add i64 %6, %7
  %9 = urem i64 %8, 4294967291
  %10 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %11 = trunc i64 %9 to i32
  %12 = trunc i64 %0 to i32
  %13 = urem i32 %11, %10
  %14 = shl i32 %13, 1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i32, ptr %1, i64 %15
  %17 = load i32, ptr %16, align 4, !tbaa !132
  %18 = icmp eq i32 %17, %12
  %19 = icmp eq i32 %17, -1
  %20 = or i1 %18, %19
  br i1 %20, label %36, label %21

21:                                               ; preds = %21, %2
  %22 = phi i32 [ %28, %21 ], [ %13, %2 ]
  %23 = phi i32 [ %24, %21 ], [ 0, %2 ]
  %24 = add nuw nsw i32 %23, 1
  %25 = freeze i32 %22
  %26 = add i32 %25, 1
  %27 = icmp eq i32 %26, %10
  %28 = select i1 %27, i32 0, i32 %26
  %29 = shl i32 %28, 1
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i32, ptr %1, i64 %30
  %32 = load i32, ptr %31, align 4, !tbaa !132
  %33 = icmp eq i32 %32, %12
  %34 = icmp eq i32 %32, -1
  %35 = or i1 %33, %34
  br i1 %35, label %36, label %21, !llvm.loop !605

36:                                               ; preds = %21, %2
  %37 = phi i32 [ 0, %2 ], [ %24, %21 ]
  %38 = phi i32 [ %14, %2 ], [ %29, %21 ]
  %39 = phi i1 [ %19, %2 ], [ %34, %21 ]
  %40 = load i32, ptr @read_hash_collisions, align 4, !tbaa !132
  %41 = add i32 %40, %37
  store i32 %41, ptr @read_hash_collisions, align 4, !tbaa !132
  br i1 %39, label %47, label %42

42:                                               ; preds = %36
  %43 = or i32 %38, 1
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, ptr %1, i64 %44
  %46 = load i32, ptr %45, align 4, !tbaa !132
  br label %47

47:                                               ; preds = %42, %36
  %48 = phi i32 [ %46, %42 ], [ -1, %36 ]
  ret i32 %48
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @write_hash_linear_report_level_1(i32 noundef %0, i64 noundef %1, ptr nocapture noundef %2) #34 {
  %4 = load i32, ptr @hash_ncells, align 4, !tbaa !132
  %5 = add i32 %4, 1
  store i32 %5, ptr @hash_ncells, align 4, !tbaa !132
  %6 = load i64, ptr @AA, align 8, !tbaa !601
  %7 = mul i64 %6, %1
  %8 = load i64, ptr @BB, align 8, !tbaa !601
  %9 = add i64 %7, %8
  %10 = urem i64 %9, 4294967291
  %11 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %12 = trunc i64 %10 to i32
  %13 = trunc i64 %1 to i32
  %14 = urem i32 %12, %11
  %15 = shl i32 %14, 1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i32, ptr %2, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !132
  %19 = icmp eq i32 %18, -1
  %20 = icmp eq i32 %18, %13
  %21 = or i1 %19, %20
  br i1 %21, label %40, label %22

22:                                               ; preds = %3
  %23 = load i32, ptr @write_hash_collisions, align 4, !tbaa !132
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i32 [ %31, %24 ], [ %14, %22 ]
  %26 = phi i32 [ %27, %24 ], [ %23, %22 ]
  %27 = add i32 %26, 1
  %28 = freeze i32 %25
  %29 = add i32 %28, 1
  %30 = icmp eq i32 %29, %11
  %31 = select i1 %30, i32 0, i32 %29
  %32 = shl i32 %31, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i32, ptr %2, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !132
  %36 = icmp eq i32 %35, -1
  %37 = icmp eq i32 %35, %13
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %24, !llvm.loop !606

39:                                               ; preds = %24
  %.lcssa2 = phi i32 [ %27, %24 ]
  %.lcssa1 = phi i32 [ %32, %24 ]
  %.lcssa = phi i64 [ %33, %24 ]
  store i32 %.lcssa2, ptr @write_hash_collisions, align 4, !tbaa !132
  br label %40

40:                                               ; preds = %39, %3
  %41 = phi i64 [ %.lcssa, %39 ], [ %16, %3 ]
  %42 = phi i32 [ %.lcssa1, %39 ], [ %15, %3 ]
  %43 = getelementptr inbounds i32, ptr %2, i64 %41
  store i32 %13, ptr %43, align 4, !tbaa !132
  %44 = or i32 %42, 1
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i32, ptr %2, i64 %45
  store i32 %0, ptr %46, align 4, !tbaa !132
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(read, inaccessiblemem: none) uwtable
define internal i32 @read_hash_quadratic(i64 noundef %0, ptr nocapture noundef readonly %1) #33 {
  %3 = load i64, ptr @AA, align 8, !tbaa !601
  %4 = mul i64 %3, %0
  %5 = load i64, ptr @BB, align 8, !tbaa !601
  %6 = add i64 %4, %5
  %7 = urem i64 %6, 4294967291
  %8 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %9 = trunc i64 %7 to i32
  %10 = trunc i64 %0 to i32
  %11 = urem i32 %9, %8
  %12 = shl i32 %11, 1
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i32, ptr %1, i64 %13
  %15 = load i32, ptr %14, align 4, !tbaa !132
  %16 = icmp eq i32 %15, %10
  %17 = icmp eq i32 %15, -1
  %18 = or i1 %16, %17
  br i1 %18, label %33, label %19

19:                                               ; preds = %19, %2
  %20 = phi i32 [ %25, %19 ], [ %11, %2 ]
  %21 = phi i32 [ %22, %19 ], [ 0, %2 ]
  %22 = add nuw nsw i32 %21, 1
  %23 = mul nsw i32 %22, %22
  %24 = add i32 %23, %20
  %25 = urem i32 %24, %8
  %26 = shl i32 %25, 1
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i32, ptr %1, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !132
  %30 = icmp eq i32 %29, %10
  %31 = icmp eq i32 %29, -1
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %19, !llvm.loop !607

33:                                               ; preds = %19, %2
  %34 = phi i32 [ %12, %2 ], [ %26, %19 ]
  %35 = phi i1 [ %17, %2 ], [ %31, %19 ]
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = or i32 %34, 1
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i32, ptr %1, i64 %38
  %40 = load i32, ptr %39, align 4, !tbaa !132
  br label %41

41:                                               ; preds = %36, %33
  %42 = phi i32 [ %40, %36 ], [ -1, %33 ]
  ret i32 %42
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @write_hash_quadratic(i32 noundef %0, i64 noundef %1, ptr nocapture noundef %2) #44 {
  %4 = load i64, ptr @AA, align 8, !tbaa !601
  %5 = mul i64 %4, %1
  %6 = load i64, ptr @BB, align 8, !tbaa !601
  %7 = add i64 %5, %6
  %8 = urem i64 %7, 4294967291
  %9 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %10 = trunc i64 %8 to i32
  %11 = trunc i64 %1 to i32
  %12 = urem i32 %10, %9
  %13 = shl i32 %12, 1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i32, ptr %2, i64 %14
  %16 = load i32, ptr %15, align 4, !tbaa !132
  %17 = icmp eq i32 %16, -1
  %18 = icmp eq i32 %16, %11
  %19 = or i1 %17, %18
  br i1 %19, label %34, label %20

20:                                               ; preds = %20, %3
  %21 = phi i32 [ %26, %20 ], [ %12, %3 ]
  %22 = phi i32 [ %23, %20 ], [ 0, %3 ]
  %23 = add nuw nsw i32 %22, 1
  %24 = mul nsw i32 %23, %23
  %25 = add i32 %21, %24
  %26 = urem i32 %25, %9
  %27 = shl i32 %26, 1
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %2, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !132
  %31 = icmp eq i32 %30, -1
  %32 = icmp eq i32 %30, %11
  %33 = or i1 %31, %32
  br i1 %33, label %34, label %20, !llvm.loop !608

34:                                               ; preds = %20, %3
  %35 = phi i64 [ %14, %3 ], [ %28, %20 ]
  %36 = phi i32 [ %13, %3 ], [ %27, %20 ]
  %37 = getelementptr inbounds i32, ptr %2, i64 %35
  store i32 %11, ptr %37, align 4, !tbaa !132
  %38 = or i32 %36, 1
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i32, ptr %2, i64 %39
  store i32 %0, ptr %40, align 4, !tbaa !132
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define internal i32 @read_hash_quadratic_report_level_1(i64 noundef %0, ptr nocapture noundef readonly %1) #45 {
  %3 = load i32, ptr @hash_queries, align 4, !tbaa !132
  %4 = add i32 %3, 1
  store i32 %4, ptr @hash_queries, align 4, !tbaa !132
  %5 = load i64, ptr @AA, align 8, !tbaa !601
  %6 = mul i64 %5, %0
  %7 = load i64, ptr @BB, align 8, !tbaa !601
  %8 = add i64 %6, %7
  %9 = urem i64 %8, 4294967291
  %10 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %11 = trunc i64 %9 to i32
  %12 = trunc i64 %0 to i32
  %13 = urem i32 %11, %10
  %14 = shl i32 %13, 1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i32, ptr %1, i64 %15
  %17 = load i32, ptr %16, align 4, !tbaa !132
  %18 = icmp eq i32 %17, %12
  %19 = icmp eq i32 %17, -1
  %20 = or i1 %18, %19
  br i1 %20, label %35, label %21

21:                                               ; preds = %21, %2
  %22 = phi i32 [ %27, %21 ], [ %13, %2 ]
  %23 = phi i32 [ %24, %21 ], [ 0, %2 ]
  %24 = add nuw nsw i32 %23, 1
  %25 = mul nsw i32 %24, %24
  %26 = add i32 %25, %22
  %27 = urem i32 %26, %10
  %28 = shl i32 %27, 1
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i32, ptr %1, i64 %29
  %31 = load i32, ptr %30, align 4, !tbaa !132
  %32 = icmp eq i32 %31, %12
  %33 = icmp eq i32 %31, -1
  %34 = or i1 %32, %33
  br i1 %34, label %35, label %21, !llvm.loop !609

35:                                               ; preds = %21, %2
  %36 = phi i32 [ 0, %2 ], [ %24, %21 ]
  %37 = phi i32 [ %14, %2 ], [ %28, %21 ]
  %38 = phi i1 [ %19, %2 ], [ %33, %21 ]
  %39 = load i32, ptr @read_hash_collisions, align 4, !tbaa !132
  %40 = add i32 %39, %36
  store i32 %40, ptr @read_hash_collisions, align 4, !tbaa !132
  br i1 %38, label %46, label %41

41:                                               ; preds = %35
  %42 = or i32 %37, 1
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i32, ptr %1, i64 %43
  %45 = load i32, ptr %44, align 4, !tbaa !132
  br label %46

46:                                               ; preds = %41, %35
  %47 = phi i32 [ %45, %41 ], [ -1, %35 ]
  ret i32 %47
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @write_hash_quadratic_report_level_1(i32 noundef %0, i64 noundef %1, ptr nocapture noundef %2) #34 {
  %4 = load i32, ptr @hash_ncells, align 4, !tbaa !132
  %5 = add i32 %4, 1
  store i32 %5, ptr @hash_ncells, align 4, !tbaa !132
  %6 = load i64, ptr @AA, align 8, !tbaa !601
  %7 = mul i64 %6, %1
  %8 = load i64, ptr @BB, align 8, !tbaa !601
  %9 = add i64 %7, %8
  %10 = urem i64 %9, 4294967291
  %11 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %12 = trunc i64 %10 to i32
  %13 = trunc i64 %1 to i32
  %14 = urem i32 %12, %11
  %15 = shl i32 %14, 1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i32, ptr %2, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !132
  %19 = icmp eq i32 %18, -1
  %20 = icmp eq i32 %18, %13
  %21 = or i1 %19, %20
  br i1 %21, label %36, label %22

22:                                               ; preds = %22, %3
  %23 = phi i32 [ %28, %22 ], [ %14, %3 ]
  %24 = phi i32 [ %25, %22 ], [ 0, %3 ]
  %25 = add nuw nsw i32 %24, 1
  %26 = mul nsw i32 %25, %25
  %27 = add i32 %23, %26
  %28 = urem i32 %27, %11
  %29 = shl i32 %28, 1
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i32, ptr %2, i64 %30
  %32 = load i32, ptr %31, align 4, !tbaa !132
  %33 = icmp eq i32 %32, -1
  %34 = icmp eq i32 %32, %13
  %35 = or i1 %33, %34
  br i1 %35, label %36, label %22, !llvm.loop !610

36:                                               ; preds = %22, %3
  %37 = phi i64 [ %16, %3 ], [ %30, %22 ]
  %38 = phi i32 [ 0, %3 ], [ %25, %22 ]
  %39 = phi i32 [ %15, %3 ], [ %29, %22 ]
  %40 = getelementptr inbounds i32, ptr %2, i64 %37
  %41 = load i32, ptr @write_hash_collisions, align 4, !tbaa !132
  %42 = add i32 %41, %38
  store i32 %42, ptr @write_hash_collisions, align 4, !tbaa !132
  store i32 %13, ptr %40, align 4, !tbaa !132
  %43 = or i32 %39, 1
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, ptr %2, i64 %44
  store i32 %0, ptr %45, align 4, !tbaa !132
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(read, inaccessiblemem: none) uwtable
define internal i32 @read_hash_primejump(i64 noundef %0, ptr nocapture noundef readonly %1) #33 {
  %3 = urem i64 %0, 41
  %4 = trunc i64 %3 to i32
  %5 = add nuw nsw i32 %4, 1
  %6 = load i64, ptr @AA, align 8, !tbaa !601
  %7 = mul i64 %6, %0
  %8 = load i64, ptr @BB, align 8, !tbaa !601
  %9 = add i64 %7, %8
  %10 = urem i64 %9, 4294967291
  %11 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %12 = trunc i64 %10 to i32
  %13 = trunc i64 %0 to i32
  %14 = urem i32 %12, %11
  %15 = shl i32 %14, 1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i32, ptr %1, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !132
  %19 = icmp eq i32 %18, %13
  %20 = icmp eq i32 %18, -1
  %21 = or i1 %19, %20
  br i1 %21, label %36, label %22

22:                                               ; preds = %22, %2
  %23 = phi i32 [ %28, %22 ], [ %14, %2 ]
  %24 = phi i32 [ %25, %22 ], [ 0, %2 ]
  %25 = add nuw nsw i32 %24, 1
  %26 = mul i32 %25, %5
  %27 = add i32 %26, %23
  %28 = urem i32 %27, %11
  %29 = shl i32 %28, 1
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i32, ptr %1, i64 %30
  %32 = load i32, ptr %31, align 4, !tbaa !132
  %33 = icmp eq i32 %32, %13
  %34 = icmp eq i32 %32, -1
  %35 = or i1 %33, %34
  br i1 %35, label %36, label %22, !llvm.loop !611

36:                                               ; preds = %22, %2
  %37 = phi i32 [ %15, %2 ], [ %29, %22 ]
  %38 = phi i1 [ %20, %2 ], [ %34, %22 ]
  br i1 %38, label %44, label %39

39:                                               ; preds = %36
  %40 = or i32 %37, 1
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i32, ptr %1, i64 %41
  %43 = load i32, ptr %42, align 4, !tbaa !132
  br label %44

44:                                               ; preds = %39, %36
  %45 = phi i32 [ %43, %39 ], [ -1, %36 ]
  ret i32 %45
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @write_hash_primejump(i32 noundef %0, i64 noundef %1, ptr nocapture noundef %2) #44 {
  %4 = urem i64 %1, 41
  %5 = trunc i64 %4 to i32
  %6 = add nuw nsw i32 %5, 1
  %7 = load i64, ptr @AA, align 8, !tbaa !601
  %8 = mul i64 %7, %1
  %9 = load i64, ptr @BB, align 8, !tbaa !601
  %10 = add i64 %8, %9
  %11 = urem i64 %10, 4294967291
  %12 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %13 = trunc i64 %11 to i32
  %14 = trunc i64 %1 to i32
  %15 = urem i32 %13, %12
  %16 = shl i32 %15, 1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i32, ptr %2, i64 %17
  %19 = load i32, ptr %18, align 4, !tbaa !132
  %20 = icmp eq i32 %19, -1
  %21 = icmp eq i32 %19, %14
  %22 = or i1 %20, %21
  br i1 %22, label %37, label %23

23:                                               ; preds = %23, %3
  %24 = phi i32 [ %29, %23 ], [ %15, %3 ]
  %25 = phi i32 [ %26, %23 ], [ 0, %3 ]
  %26 = add nuw nsw i32 %25, 1
  %27 = mul i32 %26, %6
  %28 = add i32 %27, %24
  %29 = urem i32 %28, %12
  %30 = shl i32 %29, 1
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, ptr %2, i64 %31
  %33 = load i32, ptr %32, align 4, !tbaa !132
  %34 = icmp eq i32 %33, -1
  %35 = icmp eq i32 %33, %14
  %36 = or i1 %34, %35
  br i1 %36, label %37, label %23, !llvm.loop !612

37:                                               ; preds = %23, %3
  %38 = phi i64 [ %17, %3 ], [ %31, %23 ]
  %39 = phi i32 [ %16, %3 ], [ %30, %23 ]
  %40 = getelementptr inbounds i32, ptr %2, i64 %38
  store i32 %14, ptr %40, align 4, !tbaa !132
  %41 = or i32 %39, 1
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i32, ptr %2, i64 %42
  store i32 %0, ptr %43, align 4, !tbaa !132
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define internal i32 @read_hash_primejump_report_level_1(i64 noundef %0, ptr nocapture noundef readonly %1) #45 {
  %3 = urem i64 %0, 41
  %4 = trunc i64 %3 to i32
  %5 = add nuw nsw i32 %4, 1
  %6 = load i32, ptr @hash_queries, align 4, !tbaa !132
  %7 = add i32 %6, 1
  store i32 %7, ptr @hash_queries, align 4, !tbaa !132
  %8 = load i64, ptr @AA, align 8, !tbaa !601
  %9 = mul i64 %8, %0
  %10 = load i64, ptr @BB, align 8, !tbaa !601
  %11 = add i64 %9, %10
  %12 = urem i64 %11, 4294967291
  %13 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %14 = trunc i64 %12 to i32
  %15 = trunc i64 %0 to i32
  %16 = urem i32 %14, %13
  %17 = shl i32 %16, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i32, ptr %1, i64 %18
  %20 = load i32, ptr %19, align 4, !tbaa !132
  %21 = icmp eq i32 %20, %15
  %22 = icmp eq i32 %20, -1
  %23 = or i1 %21, %22
  br i1 %23, label %38, label %24

24:                                               ; preds = %24, %2
  %25 = phi i32 [ %30, %24 ], [ %16, %2 ]
  %26 = phi i32 [ %27, %24 ], [ 0, %2 ]
  %27 = add nuw nsw i32 %26, 1
  %28 = mul i32 %27, %5
  %29 = add i32 %28, %25
  %30 = urem i32 %29, %13
  %31 = shl i32 %30, 1
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i32, ptr %1, i64 %32
  %34 = load i32, ptr %33, align 4, !tbaa !132
  %35 = icmp eq i32 %34, %15
  %36 = icmp eq i32 %34, -1
  %37 = or i1 %35, %36
  br i1 %37, label %38, label %24, !llvm.loop !613

38:                                               ; preds = %24, %2
  %39 = phi i32 [ 0, %2 ], [ %27, %24 ]
  %40 = phi i32 [ %17, %2 ], [ %31, %24 ]
  %41 = phi i1 [ %22, %2 ], [ %36, %24 ]
  %42 = load i32, ptr @read_hash_collisions, align 4, !tbaa !132
  %43 = add i32 %42, %39
  store i32 %43, ptr @read_hash_collisions, align 4, !tbaa !132
  br i1 %41, label %49, label %44

44:                                               ; preds = %38
  %45 = or i32 %40, 1
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i32, ptr %1, i64 %46
  %48 = load i32, ptr %47, align 4, !tbaa !132
  br label %49

49:                                               ; preds = %44, %38
  %50 = phi i32 [ %48, %44 ], [ -1, %38 ]
  ret i32 %50
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @write_hash_primejump_report_level_1(i32 noundef %0, i64 noundef %1, ptr nocapture noundef %2) #34 {
  %4 = urem i64 %1, 41
  %5 = trunc i64 %4 to i32
  %6 = add nuw nsw i32 %5, 1
  %7 = load i32, ptr @hash_ncells, align 4, !tbaa !132
  %8 = add i32 %7, 1
  store i32 %8, ptr @hash_ncells, align 4, !tbaa !132
  %9 = load i64, ptr @AA, align 8, !tbaa !601
  %10 = mul i64 %9, %1
  %11 = load i64, ptr @BB, align 8, !tbaa !601
  %12 = add i64 %10, %11
  %13 = urem i64 %12, 4294967291
  %14 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %15 = trunc i64 %13 to i32
  %16 = trunc i64 %1 to i32
  %17 = urem i32 %15, %14
  %18 = shl i32 %17, 1
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i32, ptr %2, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !132
  %22 = icmp eq i32 %21, -1
  %23 = icmp eq i32 %21, %16
  %24 = or i1 %22, %23
  br i1 %24, label %39, label %25

25:                                               ; preds = %25, %3
  %26 = phi i32 [ %31, %25 ], [ %17, %3 ]
  %27 = phi i32 [ %28, %25 ], [ 0, %3 ]
  %28 = add nuw nsw i32 %27, 1
  %29 = mul i32 %28, %6
  %30 = add i32 %29, %26
  %31 = urem i32 %30, %14
  %32 = shl i32 %31, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i32, ptr %2, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !132
  %36 = icmp eq i32 %35, -1
  %37 = icmp eq i32 %35, %16
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %25, !llvm.loop !614

39:                                               ; preds = %25, %3
  %40 = phi i64 [ %19, %3 ], [ %33, %25 ]
  %41 = phi i32 [ 0, %3 ], [ %28, %25 ]
  %42 = phi i32 [ %18, %3 ], [ %32, %25 ]
  %43 = getelementptr inbounds i32, ptr %2, i64 %40
  %44 = load i32, ptr @write_hash_collisions, align 4, !tbaa !132
  %45 = add i32 %44, %41
  store i32 %45, ptr @write_hash_collisions, align 4, !tbaa !132
  store i32 %16, ptr %43, align 4, !tbaa !132
  %46 = or i32 %42, 1
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i32, ptr %2, i64 %47
  store i32 %0, ptr %48, align 4, !tbaa !132
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: read) uwtable
define internal i32 @read_hash_perfect(i64 noundef %0, ptr nocapture noundef readonly %1) #4 {
  %3 = getelementptr inbounds i32, ptr %1, i64 %0
  %4 = load i32, ptr %3, align 4, !tbaa !132
  ret i32 %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: write) uwtable
define internal void @write_hash_perfect(i32 noundef %0, i64 noundef %1, ptr nocapture noundef writeonly %2) #2 {
  %4 = getelementptr inbounds i32, ptr %2, i64 %1
  store i32 %0, ptr %4, align 4, !tbaa !132
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @read_hash_quadratic_report_level_3(i64 noundef %0, ptr nocapture noundef readonly %1) #10 {
  %3 = load i32, ptr @hash_queries, align 4, !tbaa !132
  %4 = add i32 %3, 1
  store i32 %4, ptr @hash_queries, align 4, !tbaa !132
  %5 = load i64, ptr @AA, align 8, !tbaa !601
  %6 = mul i64 %5, %0
  %7 = load i64, ptr @BB, align 8, !tbaa !601
  %8 = add i64 %6, %7
  %9 = urem i64 %8, 4294967291
  %10 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %11 = trunc i64 %9 to i32
  %12 = urem i32 %11, %10
  %13 = zext i32 %12 to i64
  %14 = shl nuw nsw i64 %13, 1
  %15 = and i64 %14, 4294967294
  %16 = getelementptr inbounds i32, ptr %1, i64 %15
  %17 = load i32, ptr %16, align 4, !tbaa !132
  %18 = load i32, ptr @hash_stride, align 4, !tbaa !132
  %19 = zext i32 %18 to i64
  %20 = urem i64 %0, %19
  %21 = udiv i64 %0, %19
  %22 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7.106, i32 noundef 0, i32 noundef %12, i32 noundef %17, i64 noundef %0, i64 noundef %20, i64 noundef %21) #56
  %23 = load i64, ptr @AA, align 8, !tbaa !601
  %24 = mul i64 %23, %0
  %25 = load i64, ptr @BB, align 8, !tbaa !601
  %26 = add i64 %24, %25
  %27 = urem i64 %26, 4294967291
  %28 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %29 = trunc i64 %27 to i32
  %30 = urem i32 %29, %28
  %31 = trunc i64 %0 to i32
  %32 = shl i32 %30, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i32, ptr %1, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !132
  %36 = icmp eq i32 %35, %31
  %37 = icmp eq i32 %35, -1
  %38 = or i1 %36, %37
  br i1 %38, label %70, label %39

39:                                               ; preds = %58, %2
  %40 = phi i32 [ %61, %58 ], [ %28, %2 ]
  %41 = phi i32 [ %43, %58 ], [ 0, %2 ]
  %42 = phi i32 [ %62, %58 ], [ %30, %2 ]
  %43 = add nuw nsw i32 %41, 1
  %44 = add i32 %42, 1
  %45 = urem i32 %44, %40
  %46 = shl i32 %45, 1
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i32, ptr %1, i64 %47
  %49 = load i32, ptr %48, align 4, !tbaa !132
  %50 = load i32, ptr @hash_stride, align 4, !tbaa !132
  %51 = zext i32 %50 to i64
  %52 = urem i64 %0, %51
  %53 = udiv i64 %0, %51
  %54 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7.106, i32 noundef %43, i32 noundef %45, i32 noundef %49, i64 noundef %0, i64 noundef %52, i64 noundef %53) #56
  %55 = icmp eq i32 %41, 1000
  br i1 %55, label %56, label %58

56:                                               ; preds = %39
  %57 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.24)
  tail call void @exit(i32 noundef 0) #67
  unreachable

58:                                               ; preds = %39
  %59 = mul nuw nsw i32 %43, %43
  %60 = add i32 %59, %42
  %61 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %62 = urem i32 %60, %61
  %63 = shl i32 %62, 1
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i32, ptr %1, i64 %64
  %66 = load i32, ptr %65, align 4, !tbaa !132
  %67 = icmp eq i32 %66, %31
  %68 = icmp eq i32 %66, -1
  %69 = or i1 %67, %68
  br i1 %69, label %70, label %39, !llvm.loop !615

70:                                               ; preds = %58, %2
  %71 = phi i32 [ 0, %2 ], [ %43, %58 ]
  %72 = phi i32 [ %32, %2 ], [ %63, %58 ]
  %73 = phi i1 [ %37, %2 ], [ %68, %58 ]
  %74 = load i32, ptr @read_hash_collisions, align 4, !tbaa !132
  %75 = add i32 %74, %71
  store i32 %75, ptr @read_hash_collisions, align 4, !tbaa !132
  br i1 %73, label %81, label %76

76:                                               ; preds = %70
  %77 = or i32 %72, 1
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i32, ptr %1, i64 %78
  %80 = load i32, ptr %79, align 4, !tbaa !132
  br label %81

81:                                               ; preds = %76, %70
  %82 = phi i32 [ %80, %76 ], [ -1, %70 ]
  ret i32 %82
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @read_hash_primejump_report_level_3(i64 noundef %0, ptr nocapture noundef readonly %1) #10 {
  %3 = urem i64 %0, 41
  %4 = trunc i64 %3 to i32
  %5 = add nuw nsw i32 %4, 1
  %6 = load i32, ptr @hash_queries, align 4, !tbaa !132
  %7 = add i32 %6, 1
  store i32 %7, ptr @hash_queries, align 4, !tbaa !132
  %8 = load i64, ptr @AA, align 8, !tbaa !601
  %9 = mul i64 %8, %0
  %10 = load i64, ptr @BB, align 8, !tbaa !601
  %11 = add i64 %9, %10
  %12 = urem i64 %11, 4294967291
  %13 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %14 = trunc i64 %12 to i32
  %15 = urem i32 %14, %13
  %16 = zext i32 %15 to i64
  %17 = shl nuw nsw i64 %16, 1
  %18 = and i64 %17, 4294967294
  %19 = getelementptr inbounds i32, ptr %1, i64 %18
  %20 = load i32, ptr %19, align 4, !tbaa !132
  %21 = load i32, ptr @hash_stride, align 4, !tbaa !132
  %22 = zext i32 %21 to i64
  %23 = urem i64 %0, %22
  %24 = udiv i64 %0, %22
  %25 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7.106, i32 noundef 0, i32 noundef %15, i32 noundef %20, i64 noundef %0, i64 noundef %23, i64 noundef %24) #56
  %26 = load i64, ptr @AA, align 8, !tbaa !601
  %27 = mul i64 %26, %0
  %28 = load i64, ptr @BB, align 8, !tbaa !601
  %29 = add i64 %27, %28
  %30 = urem i64 %29, 4294967291
  %31 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %32 = trunc i64 %30 to i32
  %33 = urem i32 %32, %31
  %34 = trunc i64 %0 to i32
  %35 = shl i32 %33, 1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i32, ptr %1, i64 %36
  %38 = load i32, ptr %37, align 4, !tbaa !132
  %39 = icmp eq i32 %38, %34
  %40 = icmp eq i32 %38, -1
  %41 = or i1 %39, %40
  br i1 %41, label %73, label %42

42:                                               ; preds = %61, %2
  %43 = phi i32 [ %64, %61 ], [ %31, %2 ]
  %44 = phi i32 [ %65, %61 ], [ %33, %2 ]
  %45 = phi i32 [ %46, %61 ], [ 0, %2 ]
  %46 = add nuw nsw i32 %45, 1
  %47 = add i32 %44, 1
  %48 = urem i32 %47, %43
  %49 = shl i32 %48, 1
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %1, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !132
  %53 = load i32, ptr @hash_stride, align 4, !tbaa !132
  %54 = zext i32 %53 to i64
  %55 = urem i64 %0, %54
  %56 = udiv i64 %0, %54
  %57 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7.106, i32 noundef %46, i32 noundef %48, i32 noundef %52, i64 noundef %0, i64 noundef %55, i64 noundef %56) #56
  %58 = icmp eq i32 %45, 1000
  br i1 %58, label %59, label %61

59:                                               ; preds = %42
  %60 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.24)
  tail call void @exit(i32 noundef 0) #67
  unreachable

61:                                               ; preds = %42
  %62 = mul i32 %46, %5
  %63 = add i32 %62, %44
  %64 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %65 = urem i32 %63, %64
  %66 = shl i32 %65, 1
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i32, ptr %1, i64 %67
  %69 = load i32, ptr %68, align 4, !tbaa !132
  %70 = icmp eq i32 %69, %34
  %71 = icmp eq i32 %69, -1
  %72 = or i1 %70, %71
  br i1 %72, label %73, label %42, !llvm.loop !616

73:                                               ; preds = %61, %2
  %74 = phi i32 [ 0, %2 ], [ %46, %61 ]
  %75 = phi i32 [ %35, %2 ], [ %66, %61 ]
  %76 = phi i1 [ %40, %2 ], [ %71, %61 ]
  %77 = load i32, ptr @read_hash_collisions, align 4, !tbaa !132
  %78 = add i32 %77, %74
  store i32 %78, ptr @read_hash_collisions, align 4, !tbaa !132
  br i1 %76, label %84, label %79

79:                                               ; preds = %73
  %80 = or i32 %75, 1
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i32, ptr %1, i64 %81
  %83 = load i32, ptr %82, align 4, !tbaa !132
  br label %84

84:                                               ; preds = %79, %73
  %85 = phi i32 [ %83, %79 ], [ -1, %73 ]
  ret i32 %85
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @read_hash_linear_report_level_3(i64 noundef %0, ptr nocapture noundef readonly %1) #10 {
  %3 = load i32, ptr @hash_queries, align 4, !tbaa !132
  %4 = add i32 %3, 1
  store i32 %4, ptr @hash_queries, align 4, !tbaa !132
  %5 = load i64, ptr @AA, align 8, !tbaa !601
  %6 = mul i64 %5, %0
  %7 = load i64, ptr @BB, align 8, !tbaa !601
  %8 = add i64 %6, %7
  %9 = urem i64 %8, 4294967291
  %10 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %11 = trunc i64 %9 to i32
  %12 = urem i32 %11, %10
  %13 = zext i32 %12 to i64
  %14 = shl nuw nsw i64 %13, 1
  %15 = and i64 %14, 4294967294
  %16 = getelementptr inbounds i32, ptr %1, i64 %15
  %17 = load i32, ptr %16, align 4, !tbaa !132
  %18 = load i32, ptr @hash_stride, align 4, !tbaa !132
  %19 = zext i32 %18 to i64
  %20 = urem i64 %0, %19
  %21 = udiv i64 %0, %19
  %22 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7.106, i32 noundef 0, i32 noundef %12, i32 noundef %17, i64 noundef %0, i64 noundef %20, i64 noundef %21) #56
  %23 = load i64, ptr @AA, align 8, !tbaa !601
  %24 = mul i64 %23, %0
  %25 = load i64, ptr @BB, align 8, !tbaa !601
  %26 = add i64 %24, %25
  %27 = urem i64 %26, 4294967291
  %28 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %29 = trunc i64 %27 to i32
  %30 = urem i32 %29, %28
  %31 = trunc i64 %0 to i32
  %32 = shl i32 %30, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i32, ptr %1, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !132
  %36 = icmp eq i32 %35, %31
  %37 = icmp eq i32 %35, -1
  %38 = or i1 %36, %37
  br i1 %38, label %68, label %39

39:                                               ; preds = %58, %2
  %40 = phi i32 [ %59, %58 ], [ %28, %2 ]
  %41 = phi i32 [ %43, %58 ], [ 0, %2 ]
  %42 = phi i32 [ %60, %58 ], [ %30, %2 ]
  %43 = add nuw nsw i32 %41, 1
  %44 = add i32 %42, 1
  %45 = urem i32 %44, %40
  %46 = shl i32 %45, 1
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i32, ptr %1, i64 %47
  %49 = load i32, ptr %48, align 4, !tbaa !132
  %50 = load i32, ptr @hash_stride, align 4, !tbaa !132
  %51 = zext i32 %50 to i64
  %52 = urem i64 %0, %51
  %53 = udiv i64 %0, %51
  %54 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7.106, i32 noundef %43, i32 noundef %45, i32 noundef %49, i64 noundef %0, i64 noundef %52, i64 noundef %53) #56
  %55 = icmp eq i32 %41, 1000
  br i1 %55, label %56, label %58

56:                                               ; preds = %39
  %57 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.24)
  tail call void @exit(i32 noundef 0) #67
  unreachable

58:                                               ; preds = %39
  %59 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %60 = urem i32 %44, %59
  %61 = shl i32 %60, 1
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i32, ptr %1, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !132
  %65 = icmp eq i32 %64, %31
  %66 = icmp eq i32 %64, -1
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %39, !llvm.loop !617

68:                                               ; preds = %58, %2
  %69 = phi i32 [ 0, %2 ], [ %43, %58 ]
  %70 = phi i32 [ %32, %2 ], [ %61, %58 ]
  %71 = phi i1 [ %37, %2 ], [ %66, %58 ]
  %72 = load i32, ptr @read_hash_collisions, align 4, !tbaa !132
  %73 = add i32 %72, %69
  store i32 %73, ptr @read_hash_collisions, align 4, !tbaa !132
  br i1 %71, label %79, label %74

74:                                               ; preds = %68
  %75 = or i32 %70, 1
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i32, ptr %1, i64 %76
  %78 = load i32, ptr %77, align 4, !tbaa !132
  br label %79

79:                                               ; preds = %74, %68
  %80 = phi i32 [ %78, %74 ], [ -1, %68 ]
  ret i32 %80
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @read_hash_linear_report_level_2(i64 noundef %0, ptr nocapture noundef readonly %1) #10 {
  %3 = load i32, ptr @hash_queries, align 4, !tbaa !132
  %4 = add i32 %3, 1
  store i32 %4, ptr @hash_queries, align 4, !tbaa !132
  %5 = load i64, ptr @AA, align 8, !tbaa !601
  %6 = mul i64 %5, %0
  %7 = load i64, ptr @BB, align 8, !tbaa !601
  %8 = add i64 %6, %7
  %9 = urem i64 %8, 4294967291
  %10 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %11 = trunc i64 %9 to i32
  %12 = trunc i64 %0 to i32
  %13 = urem i32 %11, %10
  %14 = shl i32 %13, 1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i32, ptr %1, i64 %15
  %17 = load i32, ptr %16, align 4, !tbaa !132
  %18 = icmp eq i32 %17, %12
  %19 = icmp eq i32 %17, -1
  %20 = or i1 %18, %19
  br i1 %20, label %40, label %21

21:                                               ; preds = %27, %2
  %22 = phi i32 [ %32, %27 ], [ %13, %2 ]
  %23 = phi i32 [ %28, %27 ], [ 0, %2 ]
  %24 = icmp eq i32 %23, 1000
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.24)
  tail call void @exit(i32 noundef 0) #67
  unreachable

27:                                               ; preds = %21
  %28 = add nuw nsw i32 %23, 1
  %29 = freeze i32 %22
  %30 = add i32 %29, 1
  %31 = icmp eq i32 %30, %10
  %32 = select i1 %31, i32 0, i32 %30
  %33 = shl i32 %32, 1
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i32, ptr %1, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !132
  %37 = icmp eq i32 %36, %12
  %38 = icmp eq i32 %36, -1
  %39 = or i1 %37, %38
  br i1 %39, label %40, label %21, !llvm.loop !618

40:                                               ; preds = %27, %2
  %41 = phi i32 [ 0, %2 ], [ %28, %27 ]
  %42 = phi i32 [ %14, %2 ], [ %33, %27 ]
  %43 = phi i1 [ %19, %2 ], [ %38, %27 ]
  %44 = load i32, ptr @read_hash_collisions, align 4, !tbaa !132
  %45 = add i32 %44, %41
  store i32 %45, ptr @read_hash_collisions, align 4, !tbaa !132
  br i1 %43, label %51, label %46

46:                                               ; preds = %40
  %47 = or i32 %42, 1
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %1, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !132
  br label %51

51:                                               ; preds = %46, %40
  %52 = phi i32 [ %50, %46 ], [ -1, %40 ]
  ret i32 %52
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @read_hash_quadratic_report_level_2(i64 noundef %0, ptr nocapture noundef readonly %1) #10 {
  %3 = load i32, ptr @hash_queries, align 4, !tbaa !132
  %4 = add i32 %3, 1
  store i32 %4, ptr @hash_queries, align 4, !tbaa !132
  %5 = load i64, ptr @AA, align 8, !tbaa !601
  %6 = mul i64 %5, %0
  %7 = load i64, ptr @BB, align 8, !tbaa !601
  %8 = add i64 %6, %7
  %9 = urem i64 %8, 4294967291
  %10 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %11 = trunc i64 %9 to i32
  %12 = trunc i64 %0 to i32
  %13 = urem i32 %11, %10
  %14 = shl i32 %13, 1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i32, ptr %1, i64 %15
  %17 = load i32, ptr %16, align 4, !tbaa !132
  %18 = icmp eq i32 %17, %12
  %19 = icmp eq i32 %17, -1
  %20 = or i1 %18, %19
  br i1 %20, label %39, label %21

21:                                               ; preds = %27, %2
  %22 = phi i32 [ %31, %27 ], [ %13, %2 ]
  %23 = phi i32 [ %28, %27 ], [ 0, %2 ]
  %24 = icmp eq i32 %23, 1000
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.24)
  tail call void @exit(i32 noundef 0) #67
  unreachable

27:                                               ; preds = %21
  %28 = add nuw nsw i32 %23, 1
  %29 = mul nuw nsw i32 %28, %28
  %30 = add i32 %29, %22
  %31 = urem i32 %30, %10
  %32 = shl i32 %31, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i32, ptr %1, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !132
  %36 = icmp eq i32 %35, %12
  %37 = icmp eq i32 %35, -1
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %21, !llvm.loop !619

39:                                               ; preds = %27, %2
  %40 = phi i32 [ 0, %2 ], [ %28, %27 ]
  %41 = phi i32 [ %14, %2 ], [ %32, %27 ]
  %42 = phi i1 [ %19, %2 ], [ %37, %27 ]
  %43 = load i32, ptr @read_hash_collisions, align 4, !tbaa !132
  %44 = add i32 %43, %40
  store i32 %44, ptr @read_hash_collisions, align 4, !tbaa !132
  br i1 %42, label %50, label %45

45:                                               ; preds = %39
  %46 = or i32 %41, 1
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i32, ptr %1, i64 %47
  %49 = load i32, ptr %48, align 4, !tbaa !132
  br label %50

50:                                               ; preds = %45, %39
  %51 = phi i32 [ %49, %45 ], [ -1, %39 ]
  ret i32 %51
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @read_hash_primejump_report_level_2(i64 noundef %0, ptr nocapture noundef readonly %1) #10 {
  %3 = urem i64 %0, 41
  %4 = trunc i64 %3 to i32
  %5 = add nuw nsw i32 %4, 1
  %6 = load i32, ptr @hash_queries, align 4, !tbaa !132
  %7 = add i32 %6, 1
  store i32 %7, ptr @hash_queries, align 4, !tbaa !132
  %8 = load i64, ptr @AA, align 8, !tbaa !601
  %9 = mul i64 %8, %0
  %10 = load i64, ptr @BB, align 8, !tbaa !601
  %11 = add i64 %9, %10
  %12 = urem i64 %11, 4294967291
  %13 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %14 = trunc i64 %12 to i32
  %15 = trunc i64 %0 to i32
  %16 = urem i32 %14, %13
  %17 = shl i32 %16, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i32, ptr %1, i64 %18
  %20 = load i32, ptr %19, align 4, !tbaa !132
  %21 = icmp eq i32 %20, %15
  %22 = icmp eq i32 %20, -1
  %23 = or i1 %21, %22
  br i1 %23, label %42, label %24

24:                                               ; preds = %30, %2
  %25 = phi i32 [ %34, %30 ], [ %16, %2 ]
  %26 = phi i32 [ %31, %30 ], [ 0, %2 ]
  %27 = icmp eq i32 %26, 1000
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.24)
  tail call void @exit(i32 noundef 0) #67
  unreachable

30:                                               ; preds = %24
  %31 = add nuw nsw i32 %26, 1
  %32 = mul i32 %31, %5
  %33 = add i32 %32, %25
  %34 = urem i32 %33, %13
  %35 = shl i32 %34, 1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i32, ptr %1, i64 %36
  %38 = load i32, ptr %37, align 4, !tbaa !132
  %39 = icmp eq i32 %38, %15
  %40 = icmp eq i32 %38, -1
  %41 = or i1 %39, %40
  br i1 %41, label %42, label %24, !llvm.loop !620

42:                                               ; preds = %30, %2
  %43 = phi i32 [ 0, %2 ], [ %31, %30 ]
  %44 = phi i32 [ %17, %2 ], [ %35, %30 ]
  %45 = phi i1 [ %22, %2 ], [ %40, %30 ]
  %46 = load i32, ptr @read_hash_collisions, align 4, !tbaa !132
  %47 = add i32 %46, %43
  store i32 %47, ptr @read_hash_collisions, align 4, !tbaa !132
  br i1 %45, label %53, label %48

48:                                               ; preds = %42
  %49 = or i32 %44, 1
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %1, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !132
  br label %53

53:                                               ; preds = %48, %42
  %54 = phi i32 [ %52, %48 ], [ -1, %42 ]
  ret i32 %54
}

; Function Attrs: nofree nounwind optsize uwtable
define internal void @write_hash_quadratic_report_level_3(i32 noundef %0, i64 noundef %1, ptr nocapture noundef %2) #35 {
  %4 = load i32, ptr @hash_ncells, align 4, !tbaa !132
  %5 = add i32 %4, 1
  store i32 %5, ptr @hash_ncells, align 4, !tbaa !132
  %6 = load i64, ptr @AA, align 8, !tbaa !601
  %7 = mul i64 %6, %1
  %8 = load i64, ptr @BB, align 8, !tbaa !601
  %9 = add i64 %7, %8
  %10 = urem i64 %9, 4294967291
  %11 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %12 = trunc i64 %10 to i32
  %13 = urem i32 %12, %11
  %14 = zext i32 %13 to i64
  %15 = shl nuw nsw i64 %14, 1
  %16 = and i64 %15, 4294967294
  %17 = getelementptr inbounds i32, ptr %2, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !132
  %19 = load i32, ptr @hash_stride, align 4, !tbaa !132
  %20 = zext i32 %19 to i64
  %21 = urem i64 %1, %20
  %22 = udiv i64 %1, %20
  %23 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5.105, i32 noundef 0, i32 noundef %0, i32 noundef %13, i32 noundef %18, i64 noundef %1, i64 noundef %21, i64 noundef %22) #56
  %24 = load i64, ptr @AA, align 8, !tbaa !601
  %25 = mul i64 %24, %1
  %26 = load i64, ptr @BB, align 8, !tbaa !601
  %27 = add i64 %25, %26
  %28 = urem i64 %27, 4294967291
  %29 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %30 = trunc i64 %28 to i32
  %31 = urem i32 %30, %29
  %32 = trunc i64 %1 to i32
  %33 = shl i32 %31, 1
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i32, ptr %2, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !132
  %37 = icmp eq i32 %36, -1
  %38 = icmp eq i32 %36, %32
  %39 = or i1 %37, %38
  br i1 %39, label %66, label %40

40:                                               ; preds = %40, %3
  %41 = phi i32 [ %57, %40 ], [ %29, %3 ]
  %42 = phi i32 [ %44, %40 ], [ 0, %3 ]
  %43 = phi i32 [ %58, %40 ], [ %31, %3 ]
  %44 = add nuw nsw i32 %42, 1
  %45 = mul nsw i32 %44, %44
  %46 = add i32 %45, %43
  %47 = urem i32 %46, %41
  %48 = shl nsw i32 %47, 1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %2, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !132
  %52 = load i32, ptr @hash_stride, align 4, !tbaa !132
  %53 = zext i32 %52 to i64
  %54 = urem i64 %1, %53
  %55 = udiv i64 %1, %53
  %56 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5.105, i32 noundef %44, i32 noundef %0, i32 noundef %47, i32 noundef %51, i64 noundef %1, i64 noundef %54, i64 noundef %55) #56
  %57 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %58 = urem i32 %46, %57
  %59 = shl i32 %58, 1
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i32, ptr %2, i64 %60
  %62 = load i32, ptr %61, align 4, !tbaa !132
  %63 = icmp eq i32 %62, -1
  %64 = icmp eq i32 %62, %32
  %65 = or i1 %63, %64
  br i1 %65, label %66, label %40, !llvm.loop !621

66:                                               ; preds = %40, %3
  %67 = phi i64 [ %34, %3 ], [ %60, %40 ]
  %68 = phi i32 [ 0, %3 ], [ %44, %40 ]
  %69 = phi i32 [ %33, %3 ], [ %59, %40 ]
  %70 = getelementptr inbounds i32, ptr %2, i64 %67
  %71 = load i32, ptr @write_hash_collisions, align 4, !tbaa !132
  %72 = add i32 %71, %68
  store i32 %72, ptr @write_hash_collisions, align 4, !tbaa !132
  store i32 %32, ptr %70, align 4, !tbaa !132
  %73 = or i32 %69, 1
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds i32, ptr %2, i64 %74
  store i32 %0, ptr %75, align 4, !tbaa !132
  ret void
}

; Function Attrs: nofree nounwind optsize uwtable
define internal void @write_hash_primejump_report_level_3(i32 noundef %0, i64 noundef %1, ptr nocapture noundef %2) #35 {
  %4 = urem i64 %1, 41
  %5 = trunc i64 %4 to i32
  %6 = add nuw nsw i32 %5, 1
  %7 = load i32, ptr @hash_ncells, align 4, !tbaa !132
  %8 = add i32 %7, 1
  store i32 %8, ptr @hash_ncells, align 4, !tbaa !132
  %9 = load i64, ptr @AA, align 8, !tbaa !601
  %10 = mul i64 %9, %1
  %11 = load i64, ptr @BB, align 8, !tbaa !601
  %12 = add i64 %10, %11
  %13 = urem i64 %12, 4294967291
  %14 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %15 = trunc i64 %13 to i32
  %16 = urem i32 %15, %14
  %17 = zext i32 %16 to i64
  %18 = shl nuw nsw i64 %17, 1
  %19 = and i64 %18, 4294967294
  %20 = getelementptr inbounds i32, ptr %2, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !132
  %22 = load i32, ptr @hash_stride, align 4, !tbaa !132
  %23 = zext i32 %22 to i64
  %24 = urem i64 %1, %23
  %25 = udiv i64 %1, %23
  %26 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5.105, i32 noundef 0, i32 noundef %0, i32 noundef %16, i32 noundef %21, i64 noundef %1, i64 noundef %24, i64 noundef %25) #56
  %27 = load i64, ptr @AA, align 8, !tbaa !601
  %28 = mul i64 %27, %1
  %29 = load i64, ptr @BB, align 8, !tbaa !601
  %30 = add i64 %28, %29
  %31 = urem i64 %30, 4294967291
  %32 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %33 = trunc i64 %31 to i32
  %34 = urem i32 %33, %32
  %35 = trunc i64 %1 to i32
  %36 = shl i32 %34, 1
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, ptr %2, i64 %37
  %39 = load i32, ptr %38, align 4, !tbaa !132
  %40 = icmp eq i32 %39, -1
  %41 = icmp eq i32 %39, %35
  %42 = or i1 %40, %41
  br i1 %42, label %70, label %43

43:                                               ; preds = %43, %3
  %44 = phi i32 [ %61, %43 ], [ %32, %3 ]
  %45 = phi i32 [ %47, %43 ], [ 0, %3 ]
  %46 = phi i32 [ %62, %43 ], [ %34, %3 ]
  %47 = add nuw nsw i32 %45, 1
  %48 = add i32 %46, 1
  %49 = urem i32 %48, %44
  %50 = shl nsw i32 %49, 1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %2, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !132
  %54 = load i32, ptr @hash_stride, align 4, !tbaa !132
  %55 = zext i32 %54 to i64
  %56 = urem i64 %1, %55
  %57 = udiv i64 %1, %55
  %58 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5.105, i32 noundef %47, i32 noundef %0, i32 noundef %49, i32 noundef %53, i64 noundef %1, i64 noundef %56, i64 noundef %57) #56
  %59 = mul i32 %47, %6
  %60 = add i32 %59, %46
  %61 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %62 = urem i32 %60, %61
  %63 = shl i32 %62, 1
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i32, ptr %2, i64 %64
  %66 = load i32, ptr %65, align 4, !tbaa !132
  %67 = icmp eq i32 %66, -1
  %68 = icmp eq i32 %66, %35
  %69 = or i1 %67, %68
  br i1 %69, label %70, label %43, !llvm.loop !622

70:                                               ; preds = %43, %3
  %71 = phi i64 [ %37, %3 ], [ %64, %43 ]
  %72 = phi i32 [ 0, %3 ], [ %47, %43 ]
  %73 = phi i32 [ %36, %3 ], [ %63, %43 ]
  %74 = getelementptr inbounds i32, ptr %2, i64 %71
  %75 = load i32, ptr @write_hash_collisions, align 4, !tbaa !132
  %76 = add i32 %75, %72
  store i32 %76, ptr @write_hash_collisions, align 4, !tbaa !132
  store i32 %35, ptr %74, align 4, !tbaa !132
  %77 = or i32 %73, 1
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i32, ptr %2, i64 %78
  store i32 %0, ptr %79, align 4, !tbaa !132
  ret void
}

; Function Attrs: nofree nounwind optsize uwtable
define internal void @write_hash_linear_report_level_3(i32 noundef %0, i64 noundef %1, ptr nocapture noundef %2) #35 {
  %4 = load i32, ptr @hash_ncells, align 4, !tbaa !132
  %5 = add i32 %4, 1
  store i32 %5, ptr @hash_ncells, align 4, !tbaa !132
  %6 = load i64, ptr @AA, align 8, !tbaa !601
  %7 = mul i64 %6, %1
  %8 = load i64, ptr @BB, align 8, !tbaa !601
  %9 = add i64 %7, %8
  %10 = urem i64 %9, 4294967291
  %11 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %12 = trunc i64 %10 to i32
  %13 = urem i32 %12, %11
  %14 = zext i32 %13 to i64
  %15 = shl nuw nsw i64 %14, 1
  %16 = and i64 %15, 4294967294
  %17 = getelementptr inbounds i32, ptr %2, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !132
  %19 = load i32, ptr @hash_stride, align 4, !tbaa !132
  %20 = zext i32 %19 to i64
  %21 = urem i64 %1, %20
  %22 = udiv i64 %1, %20
  %23 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5.105, i32 noundef 0, i32 noundef %0, i32 noundef %13, i32 noundef %18, i64 noundef %1, i64 noundef %21, i64 noundef %22) #56
  %24 = load i64, ptr @AA, align 8, !tbaa !601
  %25 = mul i64 %24, %1
  %26 = load i64, ptr @BB, align 8, !tbaa !601
  %27 = add i64 %25, %26
  %28 = urem i64 %27, 4294967291
  %29 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %30 = trunc i64 %28 to i32
  %31 = urem i32 %30, %29
  %32 = trunc i64 %1 to i32
  %33 = shl i32 %31, 1
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i32, ptr %2, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !132
  %37 = icmp eq i32 %36, -1
  %38 = icmp eq i32 %36, %32
  %39 = or i1 %37, %38
  br i1 %39, label %65, label %40

40:                                               ; preds = %40, %3
  %41 = phi i32 [ %56, %40 ], [ %29, %3 ]
  %42 = phi i32 [ %55, %40 ], [ 0, %3 ]
  %43 = phi i32 [ %57, %40 ], [ %31, %3 ]
  %44 = add i32 %43, 1
  %45 = urem i32 %44, %41
  %46 = shl nsw i32 %45, 1
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, ptr %2, i64 %47
  %49 = load i32, ptr %48, align 4, !tbaa !132
  %50 = load i32, ptr @hash_stride, align 4, !tbaa !132
  %51 = zext i32 %50 to i64
  %52 = urem i64 %1, %51
  %53 = udiv i64 %1, %51
  %54 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5.105, i32 noundef %42, i32 noundef %0, i32 noundef %45, i32 noundef %49, i64 noundef %1, i64 noundef %52, i64 noundef %53) #56
  %55 = add nuw nsw i32 %42, 1
  %56 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %57 = urem i32 %44, %56
  %58 = shl i32 %57, 1
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %2, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !132
  %62 = icmp eq i32 %61, -1
  %63 = icmp eq i32 %61, %32
  %64 = or i1 %62, %63
  br i1 %64, label %65, label %40, !llvm.loop !623

65:                                               ; preds = %40, %3
  %66 = phi i64 [ %34, %3 ], [ %59, %40 ]
  %67 = phi i32 [ 0, %3 ], [ %55, %40 ]
  %68 = phi i32 [ %33, %3 ], [ %58, %40 ]
  %69 = getelementptr inbounds i32, ptr %2, i64 %66
  %70 = load i32, ptr @write_hash_collisions, align 4, !tbaa !132
  %71 = add i32 %70, %67
  store i32 %71, ptr @write_hash_collisions, align 4, !tbaa !132
  store i32 %32, ptr %69, align 4, !tbaa !132
  %72 = or i32 %68, 1
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i32, ptr %2, i64 %73
  store i32 %0, ptr %74, align 4, !tbaa !132
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @write_hash_linear_report_level_2(i32 noundef %0, i64 noundef %1, ptr nocapture noundef %2) #34 {
  %4 = load i32, ptr @hash_ncells, align 4, !tbaa !132
  %5 = add i32 %4, 1
  store i32 %5, ptr @hash_ncells, align 4, !tbaa !132
  %6 = load i64, ptr @AA, align 8, !tbaa !601
  %7 = mul i64 %6, %1
  %8 = load i64, ptr @BB, align 8, !tbaa !601
  %9 = add i64 %7, %8
  %10 = urem i64 %9, 4294967291
  %11 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %12 = trunc i64 %10 to i32
  %13 = trunc i64 %1 to i32
  %14 = urem i32 %12, %11
  %15 = shl i32 %14, 1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i32, ptr %2, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !132
  %19 = icmp eq i32 %18, -1
  %20 = icmp eq i32 %18, %13
  %21 = or i1 %19, %20
  br i1 %21, label %40, label %22

22:                                               ; preds = %3
  %23 = load i32, ptr @write_hash_collisions, align 4, !tbaa !132
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i32 [ %31, %24 ], [ %14, %22 ]
  %26 = phi i32 [ %27, %24 ], [ %23, %22 ]
  %27 = add i32 %26, 1
  %28 = freeze i32 %25
  %29 = add i32 %28, 1
  %30 = icmp eq i32 %29, %11
  %31 = select i1 %30, i32 0, i32 %29
  %32 = shl i32 %31, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i32, ptr %2, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !132
  %36 = icmp eq i32 %35, -1
  %37 = icmp eq i32 %35, %13
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %24, !llvm.loop !624

39:                                               ; preds = %24
  %.lcssa2 = phi i32 [ %27, %24 ]
  %.lcssa1 = phi i32 [ %32, %24 ]
  %.lcssa = phi i64 [ %33, %24 ]
  store i32 %.lcssa2, ptr @write_hash_collisions, align 4, !tbaa !132
  br label %40

40:                                               ; preds = %39, %3
  %41 = phi i64 [ %.lcssa, %39 ], [ %16, %3 ]
  %42 = phi i32 [ %.lcssa1, %39 ], [ %15, %3 ]
  %43 = getelementptr inbounds i32, ptr %2, i64 %41
  store i32 %13, ptr %43, align 4, !tbaa !132
  %44 = or i32 %42, 1
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i32, ptr %2, i64 %45
  store i32 %0, ptr %46, align 4, !tbaa !132
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @write_hash_quadratic_report_level_2(i32 noundef %0, i64 noundef %1, ptr nocapture noundef %2) #34 {
  %4 = load i32, ptr @hash_ncells, align 4, !tbaa !132
  %5 = add i32 %4, 1
  store i32 %5, ptr @hash_ncells, align 4, !tbaa !132
  %6 = load i64, ptr @AA, align 8, !tbaa !601
  %7 = mul i64 %6, %1
  %8 = load i64, ptr @BB, align 8, !tbaa !601
  %9 = add i64 %7, %8
  %10 = urem i64 %9, 4294967291
  %11 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %12 = trunc i64 %10 to i32
  %13 = trunc i64 %1 to i32
  %14 = urem i32 %12, %11
  %15 = shl i32 %14, 1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i32, ptr %2, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !132
  %19 = icmp eq i32 %18, -1
  %20 = icmp eq i32 %18, %13
  %21 = or i1 %19, %20
  br i1 %21, label %36, label %22

22:                                               ; preds = %22, %3
  %23 = phi i32 [ %28, %22 ], [ %14, %3 ]
  %24 = phi i32 [ %25, %22 ], [ 0, %3 ]
  %25 = add nuw nsw i32 %24, 1
  %26 = mul nsw i32 %25, %25
  %27 = add i32 %23, %26
  %28 = urem i32 %27, %11
  %29 = shl i32 %28, 1
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i32, ptr %2, i64 %30
  %32 = load i32, ptr %31, align 4, !tbaa !132
  %33 = icmp eq i32 %32, -1
  %34 = icmp eq i32 %32, %13
  %35 = or i1 %33, %34
  br i1 %35, label %36, label %22, !llvm.loop !625

36:                                               ; preds = %22, %3
  %37 = phi i64 [ %16, %3 ], [ %30, %22 ]
  %38 = phi i32 [ 0, %3 ], [ %25, %22 ]
  %39 = phi i32 [ %15, %3 ], [ %29, %22 ]
  %40 = getelementptr inbounds i32, ptr %2, i64 %37
  %41 = load i32, ptr @write_hash_collisions, align 4, !tbaa !132
  %42 = add i32 %41, %38
  store i32 %42, ptr @write_hash_collisions, align 4, !tbaa !132
  store i32 %13, ptr %40, align 4, !tbaa !132
  %43 = or i32 %39, 1
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, ptr %2, i64 %44
  store i32 %0, ptr %45, align 4, !tbaa !132
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @write_hash_primejump_report_level_2(i32 noundef %0, i64 noundef %1, ptr nocapture noundef %2) #34 {
  %4 = urem i64 %1, 41
  %5 = trunc i64 %4 to i32
  %6 = add nuw nsw i32 %5, 1
  %7 = load i32, ptr @hash_ncells, align 4, !tbaa !132
  %8 = add i32 %7, 1
  store i32 %8, ptr @hash_ncells, align 4, !tbaa !132
  %9 = load i64, ptr @AA, align 8, !tbaa !601
  %10 = mul i64 %9, %1
  %11 = load i64, ptr @BB, align 8, !tbaa !601
  %12 = add i64 %10, %11
  %13 = urem i64 %12, 4294967291
  %14 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %15 = trunc i64 %13 to i32
  %16 = trunc i64 %1 to i32
  %17 = urem i32 %15, %14
  %18 = shl i32 %17, 1
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i32, ptr %2, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !132
  %22 = icmp eq i32 %21, -1
  %23 = icmp eq i32 %21, %16
  %24 = or i1 %22, %23
  br i1 %24, label %39, label %25

25:                                               ; preds = %25, %3
  %26 = phi i32 [ %31, %25 ], [ %17, %3 ]
  %27 = phi i32 [ %28, %25 ], [ 0, %3 ]
  %28 = add nuw nsw i32 %27, 1
  %29 = mul i32 %28, %6
  %30 = add i32 %29, %26
  %31 = urem i32 %30, %14
  %32 = shl i32 %31, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i32, ptr %2, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !132
  %36 = icmp eq i32 %35, -1
  %37 = icmp eq i32 %35, %16
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %25, !llvm.loop !626

39:                                               ; preds = %25, %3
  %40 = phi i64 [ %19, %3 ], [ %33, %25 ]
  %41 = phi i32 [ 0, %3 ], [ %28, %25 ]
  %42 = phi i32 [ %18, %3 ], [ %32, %25 ]
  %43 = getelementptr inbounds i32, ptr %2, i64 %40
  %44 = load i32, ptr @write_hash_collisions, align 4, !tbaa !132
  %45 = add i32 %44, %41
  store i32 %45, ptr @write_hash_collisions, align 4, !tbaa !132
  store i32 %16, ptr %43, align 4, !tbaa !132
  %46 = or i32 %42, 1
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i32, ptr %2, i64 %47
  store i32 %0, ptr %48, align 4, !tbaa !132
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @compact_hash_delete(ptr noundef %0) #10 {
  store ptr null, ptr @read_hash, align 8, !tbaa !587
  tail call void @genvectorfree_p(ptr noundef %0, ptr noundef nonnull @.str.3.103, i32 noundef 1011) #59
  store i32 0, ptr @hash_method, align 4, !tbaa !132
  ret void
}

; Function Attrs: nofree nounwind optsize uwtable
define internal void @write_hash_collision_report() #35 {
  %1 = load i32, ptr @hash_method, align 4, !tbaa !132
  %2 = icmp eq i32 %1, 1
  br i1 %2, label %22, label %3

3:                                                ; preds = %0
  %4 = load i32, ptr @hash_report_level, align 4, !tbaa !132
  switch i32 %4, label %15 [
    i32 1, label %5
    i32 0, label %22
  ]

5:                                                ; preds = %3
  %6 = load i32, ptr @write_hash_collisions, align 4, !tbaa !132
  %7 = uitofp i32 %6 to double
  %8 = load i32, ptr @hash_ncells, align 4, !tbaa !132
  %9 = uitofp i32 %8 to double
  %10 = fdiv double %7, %9
  %11 = load double, ptr @write_hash_collisions_runsum, align 8, !tbaa !7
  %12 = fadd double %11, %10
  store double %12, ptr @write_hash_collisions_runsum, align 8, !tbaa !7
  %13 = load i32, ptr @write_hash_collisions_count, align 4, !tbaa !132
  %14 = add i32 %13, 1
  store i32 %14, ptr @write_hash_collisions_count, align 4, !tbaa !132
  br label %22

15:                                               ; preds = %3
  %16 = load i32, ptr @write_hash_collisions, align 4, !tbaa !132
  %17 = uitofp i32 %16 to double
  %18 = load i32, ptr @hash_ncells, align 4, !tbaa !132
  %19 = uitofp i32 %18 to double
  %20 = fdiv double %17, %19
  %21 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.8.107, double noundef %20, i32 noundef %16, i32 noundef %18) #56
  br label %22

22:                                               ; preds = %15, %5, %3, %0
  ret void
}

; Function Attrs: nofree nounwind optsize uwtable
define internal void @read_hash_collision_report() #35 {
  %1 = load i32, ptr @hash_method, align 4, !tbaa !132
  %2 = icmp eq i32 %1, 1
  br i1 %2, label %22, label %3

3:                                                ; preds = %0
  %4 = load i32, ptr @hash_report_level, align 4, !tbaa !132
  switch i32 %4, label %15 [
    i32 1, label %5
    i32 0, label %22
  ]

5:                                                ; preds = %3
  %6 = load i32, ptr @read_hash_collisions, align 4, !tbaa !132
  %7 = uitofp i32 %6 to double
  %8 = load i32, ptr @hash_queries, align 4, !tbaa !132
  %9 = uitofp i32 %8 to double
  %10 = fdiv double %7, %9
  %11 = load double, ptr @read_hash_collisions_runsum, align 8, !tbaa !7
  %12 = fadd double %11, %10
  store double %12, ptr @read_hash_collisions_runsum, align 8, !tbaa !7
  %13 = load i32, ptr @read_hash_collisions_count, align 4, !tbaa !132
  %14 = add i32 %13, 1
  store i32 %14, ptr @read_hash_collisions_count, align 4, !tbaa !132
  br label %22

15:                                               ; preds = %3
  %16 = load i32, ptr @read_hash_collisions, align 4, !tbaa !132
  %17 = uitofp i32 %16 to double
  %18 = load i32, ptr @hash_queries, align 4, !tbaa !132
  %19 = uitofp i32 %18 to double
  %20 = fdiv double %17, %19
  %21 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.9.108, double noundef %20, i32 noundef %16, i32 noundef %18) #56
  store i32 0, ptr @hash_queries, align 4, !tbaa !132
  store i32 0, ptr @read_hash_collisions, align 4, !tbaa !132
  br label %22

22:                                               ; preds = %15, %5, %3, %0
  ret void
}

; Function Attrs: nofree nounwind optsize uwtable
define internal void @final_hash_collision_report() #35 {
  %1 = load i32, ptr @hashtablesize, align 4, !tbaa !132
  %2 = zext i32 %1 to i64
  %3 = shl nuw nsw i64 %2, 2
  %4 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.10.109, i64 noundef %3) #56
  %5 = load i32, ptr @hash_report_level, align 4, !tbaa !132
  %6 = icmp ne i32 %5, 0
  %7 = load i32, ptr @read_hash_collisions_count, align 4
  %8 = icmp ne i32 %7, 0
  %9 = select i1 %6, i1 %8, i1 false
  br i1 %9, label %10, label %19

10:                                               ; preds = %0
  %11 = load double, ptr @write_hash_collisions_runsum, align 8, !tbaa !7
  %12 = load i32, ptr @write_hash_collisions_count, align 4, !tbaa !132
  %13 = uitofp i32 %12 to double
  %14 = fdiv double %11, %13
  %15 = load double, ptr @read_hash_collisions_runsum, align 8, !tbaa !7
  %16 = uitofp i32 %7 to double
  %17 = fdiv double %15, %16
  %18 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.11.110, double noundef %14, double noundef %17) #56
  br label %19

19:                                               ; preds = %10, %0
  ret void
}

; Function Attrs: nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @hsfc2d(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef %2) #46 {
  %4 = alloca [4 x i8], align 1
  %5 = tail call i32 @llvm.umin.i32(i32 %1, i32 2)
  %6 = shl nuw nsw i32 %5, 4
  %7 = load i1, ptr @hsfc2d.init, align 4
  br i1 %7, label %40, label %8

8:                                                ; preds = %3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #57
  store i8 0, ptr %4, align 1, !tbaa !627
  br label %9

9:                                                ; preds = %27, %8
  %10 = phi i32 [ 1, %8 ], [ %28, %27 ]
  %11 = trunc i32 %10 to i8
  %12 = zext i32 %10 to i64
  br label %13

13:                                               ; preds = %13, %9
  %14 = phi i64 [ 0, %9 ], [ %15, %13 ]
  %15 = add nuw nsw i64 %14, 1
  %16 = trunc i64 %15 to i32
  %17 = sub i32 %10, %16
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds [4 x i8], ptr %4, i64 0, i64 %18
  %20 = load i8, ptr %19, align 1, !tbaa !627
  %21 = or i8 %20, %11
  %22 = trunc i64 %14 to i32
  %23 = add i32 %10, %22
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [4 x i8], ptr %4, i64 0, i64 %24
  store i8 %21, ptr %25, align 1, !tbaa !627
  %26 = icmp eq i64 %15, %12
  br i1 %26, label %27, label %13, !llvm.loop !628

27:                                               ; preds = %13
  %28 = shl i32 %10, 1
  %29 = icmp ult i32 %28, 4
  br i1 %29, label %9, label %30, !llvm.loop !629

30:                                               ; preds = %30, %27
  %31 = phi i64 [ %37, %30 ], [ 0, %27 ]
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds [4 x i8], ptr %4, i64 0, i64 %31
  %34 = load i8, ptr %33, align 1, !tbaa !627
  %35 = zext i8 %34 to i64
  %36 = getelementptr inbounds [4 x i8], ptr @hsfc2d.gray_inv, i64 0, i64 %35
  store i8 %32, ptr %36, align 1, !tbaa !627
  %37 = add nuw nsw i64 %31, 1
  %38 = icmp eq i64 %37, 4
  br i1 %38, label %39, label %30, !llvm.loop !630

39:                                               ; preds = %30
  store i1 true, ptr @hsfc2d.init, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #57
  br label %40

40:                                               ; preds = %39, %3
  %41 = icmp eq i32 %5, 0
  br i1 %41, label %95, label %42

42:                                               ; preds = %40
  %43 = tail call i32 @llvm.umin.i32(i32 %1, i32 2)
  %44 = shl nuw nsw i32 %43, 2
  %45 = zext i32 %44 to i64
  tail call void @llvm.memset.p0.i64(ptr align 4 %2, i8 0, i64 %45, i1 false), !tbaa !132
  %46 = getelementptr inbounds i32, ptr %0, i64 1
  %47 = or i32 %6, 1
  %48 = tail call i32 @llvm.umax.i32(i32 %47, i32 2)
  br label %49

49:                                               ; preds = %89, %42
  %50 = phi i32 [ 1, %42 ], [ %93, %89 ]
  %51 = phi i8 [ 1, %42 ], [ %92, %89 ]
  %52 = phi i8 [ 0, %42 ], [ %91, %89 ]
  %53 = phi i8 [ 0, %42 ], [ %90, %89 ]
  %54 = sub nuw nsw i32 32, %50
  %55 = zext i8 %53 to i32
  %56 = load i32, ptr %0, align 4, !tbaa !132
  %57 = lshr i32 %56, %54
  %58 = and i32 %57, 1
  %59 = zext i8 %52 to i32
  %60 = shl nuw nsw i32 %58, %59
  %61 = load i32, ptr %46, align 4, !tbaa !132
  %62 = lshr i32 %61, %54
  %63 = and i32 %62, 1
  %64 = zext i8 %51 to i32
  %65 = shl nuw nsw i32 %63, %64
  %66 = or i32 %65, %60
  %67 = xor i32 %66, %55
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds [4 x i8], ptr @hsfc2d.gray_inv, i64 0, i64 %68
  %70 = load i8, ptr %69, align 1, !tbaa !627
  %71 = zext i8 %70 to i32
  %72 = shl nuw i32 %50, 1
  %73 = lshr i32 %50, 4
  %74 = and i32 %72, 30
  %75 = icmp eq i32 %74, 0
  %76 = sub nuw nsw i32 32, %74
  %77 = sext i1 %75 to i32
  %78 = add nsw i32 %73, %77
  %79 = select i1 %75, i32 0, i32 %76
  %80 = shl i32 %71, %79
  %81 = zext i32 %78 to i64
  %82 = getelementptr inbounds i32, ptr %2, i64 %81
  %83 = load i32, ptr %82, align 4, !tbaa !132
  %84 = or i32 %83, %80
  store i32 %84, ptr %82, align 4, !tbaa !132
  switch i8 %70, label %89 [
    i8 3, label %85
    i8 0, label %87
  ]

85:                                               ; preds = %49
  %86 = xor i8 %53, 3
  br label %87

87:                                               ; preds = %85, %49
  %88 = phi i8 [ %53, %49 ], [ %86, %85 ]
  br label %89

89:                                               ; preds = %87, %49
  %90 = phi i8 [ %53, %49 ], [ %88, %87 ]
  %91 = phi i8 [ %52, %49 ], [ %51, %87 ]
  %92 = phi i8 [ %51, %49 ], [ %52, %87 ]
  %93 = add nuw nsw i32 %50, 1
  %94 = icmp eq i32 %93, %48
  br i1 %94, label %95, label %49, !llvm.loop !631

95:                                               ; preds = %89, %40
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #21

; Function Attrs: nounwind optsize uwtable
define internal void @hsfc2sort(i32 noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, ptr nocapture noundef writeonly %4, i32 noundef %5) #10 {
  %7 = alloca [2 x i32], align 8
  %8 = sext i32 %0 to i64
  %9 = mul nsw i64 %8, 12
  %10 = tail call noalias ptr @malloc(i64 noundef %9) #65
  %11 = icmp eq i32 %0, 0
  br i1 %11, label %72, label %12

12:                                               ; preds = %6
  %13 = zext i32 %0 to i64
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i64 [ 0, %12 ], [ %31, %14 ]
  %16 = phi i32 [ 0, %12 ], [ %32, %14 ]
  %17 = trunc i64 %15 to i32
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #57
  %18 = getelementptr inbounds double, ptr %1, i64 %15
  %19 = load double, ptr %18, align 8, !tbaa !7
  %20 = getelementptr inbounds double, ptr %2, i64 %15
  %21 = load double, ptr %20, align 8, !tbaa !7
  %22 = insertelement <2 x double> poison, double %19, i64 0
  %23 = insertelement <2 x double> %22, double %21, i64 1
  %24 = fmul <2 x double> %23, <double 0x41EFFFFFFFE00000, double 0x41EFFFFFFFE00000>
  %25 = fptoui <2 x double> %24 to <2 x i32>
  store <2 x i32> %25, ptr %7, align 8, !tbaa !132
  %26 = sext i32 %16 to i64
  %27 = getelementptr inbounds i32, ptr %10, i64 %26
  call void @hsfc2d(ptr noundef nonnull %7, i32 noundef 2, ptr noundef %27) #59
  %28 = add i32 %16, 2
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i32, ptr %10, i64 %29
  store i32 %17, ptr %30, align 4, !tbaa !132
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #57
  %31 = add nuw nsw i64 %15, 1
  %32 = add i32 %16, 3
  %33 = icmp eq i64 %31, %13
  br i1 %33, label %34, label %14, !llvm.loop !632

34:                                               ; preds = %14
  %35 = icmp ugt i32 %5, 2
  br i1 %35, label %36, label %57

36:                                               ; preds = %34
  br i1 %11, label %72, label %37

37:                                               ; preds = %37, %36
  %38 = phi i32 [ %53, %37 ], [ 0, %36 ]
  %39 = phi i32 [ %55, %37 ], [ 0, %36 ]
  %40 = phi i32 [ %54, %37 ], [ 1, %36 ]
  %41 = sext i32 %39 to i64
  %42 = getelementptr inbounds i32, ptr %10, i64 %41
  %43 = load i32, ptr %42, align 4, !tbaa !132
  %44 = sext i32 %40 to i64
  %45 = getelementptr inbounds i32, ptr %4, i64 %44
  store i32 %43, ptr %45, align 4, !tbaa !132
  %46 = add nsw i32 %39, 1
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, ptr %10, i64 %47
  %49 = load i32, ptr %48, align 4, !tbaa !132
  %50 = add nsw i32 %40, 1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %4, i64 %51
  store i32 %49, ptr %52, align 4, !tbaa !132
  %53 = add nuw nsw i32 %38, 1
  %54 = add i32 %40, %5
  %55 = add i32 %39, 3
  %56 = icmp eq i32 %53, %0
  br i1 %56, label %73, label %37, !llvm.loop !633

57:                                               ; preds = %34
  %58 = icmp eq i32 %5, 2
  br i1 %58, label %59, label %73

59:                                               ; preds = %59, %57
  %60 = phi i32 [ %68, %59 ], [ 0, %57 ]
  %61 = phi i32 [ %70, %59 ], [ 0, %57 ]
  %62 = phi i32 [ %69, %59 ], [ 1, %57 ]
  %63 = sext i32 %61 to i64
  %64 = getelementptr inbounds i32, ptr %10, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !132
  %66 = sext i32 %62 to i64
  %67 = getelementptr inbounds i32, ptr %4, i64 %66
  store i32 %65, ptr %67, align 4, !tbaa !132
  %68 = add nuw nsw i32 %60, 1
  %69 = add i32 %62, 2
  %70 = add i32 %61, 3
  %71 = icmp eq i32 %68, %0
  br i1 %71, label %73, label %59, !llvm.loop !634

72:                                               ; preds = %36, %6
  call void @qsort(ptr noundef %10, i64 noundef %8, i64 noundef 12, ptr noundef nonnull @ui2comp) #59
  br label %88

73:                                               ; preds = %59, %57, %37
  call void @qsort(ptr noundef nonnull %10, i64 noundef %8, i64 noundef 12, ptr noundef nonnull @ui2comp) #59
  br i1 %11, label %88, label %74

74:                                               ; preds = %74, %73
  %75 = phi i32 [ %84, %74 ], [ 0, %73 ]
  %76 = phi i32 [ %86, %74 ], [ 2, %73 ]
  %77 = phi i32 [ %85, %74 ], [ 0, %73 ]
  %78 = sext i32 %76 to i64
  %79 = getelementptr inbounds i32, ptr %10, i64 %78
  %80 = load i32, ptr %79, align 4, !tbaa !132
  %81 = add i32 %80, %3
  %82 = sext i32 %77 to i64
  %83 = getelementptr inbounds i32, ptr %4, i64 %82
  store i32 %81, ptr %83, align 4, !tbaa !132
  %84 = add nuw nsw i32 %75, 1
  %85 = add i32 %77, %5
  %86 = add i32 %76, 3
  %87 = icmp eq i32 %84, %0
  br i1 %87, label %88, label %74, !llvm.loop !635

88:                                               ; preds = %74, %73, %72
  call void @free(ptr noundef %10) #59
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: read) uwtable
define internal i32 @ui2comp(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #4 {
  %3 = load i32, ptr %0, align 4, !tbaa !132
  %4 = load i32, ptr %1, align 4, !tbaa !132
  %5 = icmp eq i32 %3, %4
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = icmp ult i32 %3, %4
  %8 = select i1 %7, i32 -1, i32 1
  br label %18

9:                                                ; preds = %2
  %10 = getelementptr inbounds i32, ptr %0, i64 1
  %11 = load i32, ptr %10, align 4, !tbaa !132
  %12 = getelementptr inbounds i32, ptr %1, i64 1
  %13 = load i32, ptr %12, align 4, !tbaa !132
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  %16 = icmp ult i32 %11, %13
  %17 = select i1 %16, i32 -1, i32 1
  br label %18

18:                                               ; preds = %15, %9, %6
  %19 = phi i32 [ %8, %6 ], [ %17, %15 ], [ 0, %9 ]
  ret i32 %19
}

; Function Attrs: nofree optsize
declare void @qsort(ptr noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #47

; Function Attrs: optsize uwtable
define internal void @_GLOBAL__sub_I_input.cpp() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit.112) #56
  %1 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit.112, ptr nonnull @__dso_handle) #57
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_Z10outputHelpv() #13 {
  %1 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.113, i64 noundef 67) #56
  %2 = load ptr, ptr @_ZSt4cout, align 8, !tbaa !51
  %3 = getelementptr i8, ptr %2, i64 -24
  %4 = load i64, ptr %3, align 8
  %5 = getelementptr inbounds i8, ptr @_ZSt4cout, i64 %4
  %6 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %5, i8 noundef signext 10) #56
  %7 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 noundef signext %6) #56
  %8 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %7) #56
  %9 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %8, ptr noundef nonnull @.str.1.114, i64 noundef 8) #56
  %10 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) @progName) #59
  %11 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %8, ptr noundef nonnull @progName, i64 noundef %10) #56
  %12 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %8, ptr noundef nonnull @.str.2.115, i64 noundef 13) #56
  %13 = load ptr, ptr %8, align 8, !tbaa !51
  %14 = getelementptr i8, ptr %13, i64 -24
  %15 = load i64, ptr %14, align 8
  %16 = getelementptr inbounds i8, ptr %8, i64 %15
  %17 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %16, i8 noundef signext 10) #56
  %18 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %8, i8 noundef signext %17) #56
  %19 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %18) #56
  %20 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %19, ptr noundef nonnull @.str.3.116, i64 noundef 77) #56
  %21 = load ptr, ptr %19, align 8, !tbaa !51
  %22 = getelementptr i8, ptr %21, i64 -24
  %23 = load i64, ptr %22, align 8
  %24 = getelementptr inbounds i8, ptr %19, i64 %23
  %25 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %24, i8 noundef signext 10) #56
  %26 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %19, i8 noundef signext %25) #56
  %27 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %26) #56
  %28 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %27, ptr noundef nonnull @.str.4.117, i64 noundef 61) #56
  %29 = load ptr, ptr %27, align 8, !tbaa !51
  %30 = getelementptr i8, ptr %29, i64 -24
  %31 = load i64, ptr %30, align 8
  %32 = getelementptr inbounds i8, ptr %27, i64 %31
  %33 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %32, i8 noundef signext 10) #56
  %34 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %27, i8 noundef signext %33) #56
  %35 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %34) #56
  %36 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %35, ptr noundef nonnull @.str.5.118, i64 noundef 63) #56
  %37 = load ptr, ptr %35, align 8, !tbaa !51
  %38 = getelementptr i8, ptr %37, i64 -24
  %39 = load i64, ptr %38, align 8
  %40 = getelementptr inbounds i8, ptr %35, i64 %39
  %41 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %40, i8 noundef signext 10) #56
  %42 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %35, i8 noundef signext %41) #56
  %43 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %42) #56
  %44 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %43, ptr noundef nonnull @.str.6.119, i64 noundef 36) #56
  %45 = load ptr, ptr %43, align 8, !tbaa !51
  %46 = getelementptr i8, ptr %45, i64 -24
  %47 = load i64, ptr %46, align 8
  %48 = getelementptr inbounds i8, ptr %43, i64 %47
  %49 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %48, i8 noundef signext 10) #56
  %50 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %43, i8 noundef signext %49) #56
  %51 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %50) #56
  %52 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %51, ptr noundef nonnull @.str.7.120, i64 noundef 65) #56
  %53 = load ptr, ptr %51, align 8, !tbaa !51
  %54 = getelementptr i8, ptr %53, i64 -24
  %55 = load i64, ptr %54, align 8
  %56 = getelementptr inbounds i8, ptr %51, i64 %55
  %57 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %56, i8 noundef signext 10) #56
  %58 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %51, i8 noundef signext %57) #56
  %59 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %58) #56
  %60 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %59, ptr noundef nonnull @.str.8.121, i64 noundef 62) #56
  %61 = load ptr, ptr %59, align 8, !tbaa !51
  %62 = getelementptr i8, ptr %61, i64 -24
  %63 = load i64, ptr %62, align 8
  %64 = getelementptr inbounds i8, ptr %59, i64 %63
  %65 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %64, i8 noundef signext 10) #56
  %66 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %59, i8 noundef signext %65) #56
  %67 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %66) #56
  %68 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %67, ptr noundef nonnull @.str.9.122, i64 noundef 15) #56
  %69 = load ptr, ptr %67, align 8, !tbaa !51
  %70 = getelementptr i8, ptr %69, i64 -24
  %71 = load i64, ptr %70, align 8
  %72 = getelementptr inbounds i8, ptr %67, i64 %71
  %73 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %72, i8 noundef signext 10) #56
  %74 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %67, i8 noundef signext %73) #56
  %75 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %74) #56
  %76 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %75, ptr noundef nonnull @.str.10.123, i64 noundef 14) #56
  %77 = load ptr, ptr %75, align 8, !tbaa !51
  %78 = getelementptr i8, ptr %77, i64 -24
  %79 = load i64, ptr %78, align 8
  %80 = getelementptr inbounds i8, ptr %75, i64 %79
  %81 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %80, i8 noundef signext 10) #56
  %82 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %75, i8 noundef signext %81) #56
  %83 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %82) #56
  %84 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %83, ptr noundef nonnull @.str.11.124, i64 noundef 17) #56
  %85 = load ptr, ptr %83, align 8, !tbaa !51
  %86 = getelementptr i8, ptr %85, i64 -24
  %87 = load i64, ptr %86, align 8
  %88 = getelementptr inbounds i8, ptr %83, i64 %87
  %89 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %88, i8 noundef signext 10) #56
  %90 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %83, i8 noundef signext %89) #56
  %91 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %90) #56
  %92 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %91, ptr noundef nonnull @.str.12.125, i64 noundef 18) #56
  %93 = load ptr, ptr %91, align 8, !tbaa !51
  %94 = getelementptr i8, ptr %93, i64 -24
  %95 = load i64, ptr %94, align 8
  %96 = getelementptr inbounds i8, ptr %91, i64 %95
  %97 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %96, i8 noundef signext 10) #56
  %98 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %91, i8 noundef signext %97) #56
  %99 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %98) #56
  %100 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %99, ptr noundef nonnull @.str.13.126, i64 noundef 49) #56
  %101 = load ptr, ptr %99, align 8, !tbaa !51
  %102 = getelementptr i8, ptr %101, i64 -24
  %103 = load i64, ptr %102, align 8
  %104 = getelementptr inbounds i8, ptr %99, i64 %103
  %105 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %104, i8 noundef signext 10) #56
  %106 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %99, i8 noundef signext %105) #56
  %107 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %106) #56
  %108 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %107, ptr noundef nonnull @.str.14.127, i64 noundef 91) #56
  %109 = load ptr, ptr %107, align 8, !tbaa !51
  %110 = getelementptr i8, ptr %109, i64 -24
  %111 = load i64, ptr %110, align 8
  %112 = getelementptr inbounds i8, ptr %107, i64 %111
  %113 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %112, i8 noundef signext 10) #56
  %114 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %107, i8 noundef signext %113) #56
  %115 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %114) #56
  %116 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %115, ptr noundef nonnull @.str.15.128, i64 noundef 67) #56
  %117 = load ptr, ptr %115, align 8, !tbaa !51
  %118 = getelementptr i8, ptr %117, i64 -24
  %119 = load i64, ptr %118, align 8
  %120 = getelementptr inbounds i8, ptr %115, i64 %119
  %121 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %120, i8 noundef signext 10) #56
  %122 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %115, i8 noundef signext %121) #56
  %123 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %122) #56
  %124 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %123, ptr noundef nonnull @.str.16.129, i64 noundef 11) #56
  %125 = load ptr, ptr %123, align 8, !tbaa !51
  %126 = getelementptr i8, ptr %125, i64 -24
  %127 = load i64, ptr %126, align 8
  %128 = getelementptr inbounds i8, ptr %123, i64 %127
  %129 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %128, i8 noundef signext 10) #56
  %130 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %123, i8 noundef signext %129) #56
  %131 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %130) #56
  %132 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %131, ptr noundef nonnull @.str.17.130, i64 noundef 11) #56
  %133 = load ptr, ptr %131, align 8, !tbaa !51
  %134 = getelementptr i8, ptr %133, i64 -24
  %135 = load i64, ptr %134, align 8
  %136 = getelementptr inbounds i8, ptr %131, i64 %135
  %137 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %136, i8 noundef signext 10) #56
  %138 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %131, i8 noundef signext %137) #56
  %139 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %138) #56
  %140 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %139, ptr noundef nonnull @.str.18.131, i64 noundef 12) #56
  %141 = load ptr, ptr %139, align 8, !tbaa !51
  %142 = getelementptr i8, ptr %141, i64 -24
  %143 = load i64, ptr %142, align 8
  %144 = getelementptr inbounds i8, ptr %139, i64 %143
  %145 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %144, i8 noundef signext 10) #56
  %146 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %139, i8 noundef signext %145) #56
  %147 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %146) #56
  %148 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %147, ptr noundef nonnull @.str.19.132, i64 noundef 12) #56
  %149 = load ptr, ptr %147, align 8, !tbaa !51
  %150 = getelementptr i8, ptr %149, i64 -24
  %151 = load i64, ptr %150, align 8
  %152 = getelementptr inbounds i8, ptr %147, i64 %151
  %153 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %152, i8 noundef signext 10) #56
  %154 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %147, i8 noundef signext %153) #56
  %155 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %154) #56
  %156 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %155, ptr noundef nonnull @.str.20.133, i64 noundef 11) #56
  %157 = load ptr, ptr %155, align 8, !tbaa !51
  %158 = getelementptr i8, ptr %157, i64 -24
  %159 = load i64, ptr %158, align 8
  %160 = getelementptr inbounds i8, ptr %155, i64 %159
  %161 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %160, i8 noundef signext 10) #56
  %162 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %155, i8 noundef signext %161) #56
  %163 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %162) #56
  %164 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %163, ptr noundef nonnull @.str.21.134, i64 noundef 11) #56
  %165 = load ptr, ptr %163, align 8, !tbaa !51
  %166 = getelementptr i8, ptr %165, i64 -24
  %167 = load i64, ptr %166, align 8
  %168 = getelementptr inbounds i8, ptr %163, i64 %167
  %169 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %168, i8 noundef signext 10) #56
  %170 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %163, i8 noundef signext %169) #56
  %171 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %170) #56
  %172 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %171, ptr noundef nonnull @.str.22, i64 noundef 11) #56
  %173 = load ptr, ptr %171, align 8, !tbaa !51
  %174 = getelementptr i8, ptr %173, i64 -24
  %175 = load i64, ptr %174, align 8
  %176 = getelementptr inbounds i8, ptr %171, i64 %175
  %177 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %176, i8 noundef signext 10) #56
  %178 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %171, i8 noundef signext %177) #56
  %179 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %178) #56
  %180 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %179, ptr noundef nonnull @.str.23, i64 noundef 12) #56
  %181 = load ptr, ptr %179, align 8, !tbaa !51
  %182 = getelementptr i8, ptr %181, i64 -24
  %183 = load i64, ptr %182, align 8
  %184 = getelementptr inbounds i8, ptr %179, i64 %183
  %185 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %184, i8 noundef signext 10) #56
  %186 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %179, i8 noundef signext %185) #56
  %187 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %186) #56
  %188 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %187, ptr noundef nonnull @.str.24, i64 noundef 46) #56
  %189 = load ptr, ptr %187, align 8, !tbaa !51
  %190 = getelementptr i8, ptr %189, i64 -24
  %191 = load i64, ptr %190, align 8
  %192 = getelementptr inbounds i8, ptr %187, i64 %191
  %193 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %192, i8 noundef signext 10) #56
  %194 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %187, i8 noundef signext %193) #56
  %195 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %194) #56
  %196 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %195, ptr noundef nonnull @.str.25, i64 noundef 57) #56
  %197 = load ptr, ptr %195, align 8, !tbaa !51
  %198 = getelementptr i8, ptr %197, i64 -24
  %199 = load i64, ptr %198, align 8
  %200 = getelementptr inbounds i8, ptr %195, i64 %199
  %201 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %200, i8 noundef signext 10) #56
  %202 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %195, i8 noundef signext %201) #56
  %203 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %202) #56
  %204 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %203, ptr noundef nonnull @.str.26, i64 noundef 41) #56
  %205 = load ptr, ptr %203, align 8, !tbaa !51
  %206 = getelementptr i8, ptr %205, i64 -24
  %207 = load i64, ptr %206, align 8
  %208 = getelementptr inbounds i8, ptr %203, i64 %207
  %209 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %208, i8 noundef signext 10) #56
  %210 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %203, i8 noundef signext %209) #56
  %211 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %210) #56
  %212 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %211, ptr noundef nonnull @.str.27, i64 noundef 110) #56
  %213 = load ptr, ptr %211, align 8, !tbaa !51
  %214 = getelementptr i8, ptr %213, i64 -24
  %215 = load i64, ptr %214, align 8
  %216 = getelementptr inbounds i8, ptr %211, i64 %215
  %217 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %216, i8 noundef signext 10) #56
  %218 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %211, i8 noundef signext %217) #56
  %219 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %218) #56
  %220 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %219, ptr noundef nonnull @.str.28.135, i64 noundef 51) #56
  %221 = load ptr, ptr %219, align 8, !tbaa !51
  %222 = getelementptr i8, ptr %221, i64 -24
  %223 = load i64, ptr %222, align 8
  %224 = getelementptr inbounds i8, ptr %219, i64 %223
  %225 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %224, i8 noundef signext 10) #56
  %226 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %219, i8 noundef signext %225) #56
  %227 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %226) #56
  %228 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %227, ptr noundef nonnull @.str.29, i64 noundef 23) #56
  %229 = load ptr, ptr %227, align 8, !tbaa !51
  %230 = getelementptr i8, ptr %229, i64 -24
  %231 = load i64, ptr %230, align 8
  %232 = getelementptr inbounds i8, ptr %227, i64 %231
  %233 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %232, i8 noundef signext 10) #56
  %234 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %227, i8 noundef signext %233) #56
  %235 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %234) #56
  %236 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %235, ptr noundef nonnull @.str.30, i64 noundef 26) #56
  %237 = load ptr, ptr %235, align 8, !tbaa !51
  %238 = getelementptr i8, ptr %237, i64 -24
  %239 = load i64, ptr %238, align 8
  %240 = getelementptr inbounds i8, ptr %235, i64 %239
  %241 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %240, i8 noundef signext 10) #56
  %242 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %235, i8 noundef signext %241) #56
  %243 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %242) #56
  %244 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %243, ptr noundef nonnull @.str.31.136, i64 noundef 47) #56
  %245 = load ptr, ptr %243, align 8, !tbaa !51
  %246 = getelementptr i8, ptr %245, i64 -24
  %247 = load i64, ptr %246, align 8
  %248 = getelementptr inbounds i8, ptr %243, i64 %247
  %249 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %248, i8 noundef signext 10) #56
  %250 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %243, i8 noundef signext %249) #56
  %251 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %250) #56
  %252 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %251, ptr noundef nonnull @.str.32, i64 noundef 18) #56
  %253 = load ptr, ptr %251, align 8, !tbaa !51
  %254 = getelementptr i8, ptr %253, i64 -24
  %255 = load i64, ptr %254, align 8
  %256 = getelementptr inbounds i8, ptr %251, i64 %255
  %257 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %256, i8 noundef signext 10) #56
  %258 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %251, i8 noundef signext %257) #56
  %259 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %258) #56
  %260 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %259, ptr noundef nonnull @.str.33, i64 noundef 14) #56
  %261 = load ptr, ptr %259, align 8, !tbaa !51
  %262 = getelementptr i8, ptr %261, i64 -24
  %263 = load i64, ptr %262, align 8
  %264 = getelementptr inbounds i8, ptr %259, i64 %263
  %265 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %264, i8 noundef signext 10) #56
  %266 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %259, i8 noundef signext %265) #56
  %267 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %266) #56
  %268 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %267, ptr noundef nonnull @.str.34, i64 noundef 58) #56
  %269 = load ptr, ptr %267, align 8, !tbaa !51
  %270 = getelementptr i8, ptr %269, i64 -24
  %271 = load i64, ptr %270, align 8
  %272 = getelementptr inbounds i8, ptr %267, i64 %271
  %273 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %272, i8 noundef signext 10) #56
  %274 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %267, i8 noundef signext %273) #56
  %275 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %274) #56
  %276 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %275, ptr noundef nonnull @.str.35, i64 noundef 38) #56
  %277 = load ptr, ptr %275, align 8, !tbaa !51
  %278 = getelementptr i8, ptr %277, i64 -24
  %279 = load i64, ptr %278, align 8
  %280 = getelementptr inbounds i8, ptr %275, i64 %279
  %281 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %280, i8 noundef signext 10) #56
  %282 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %275, i8 noundef signext %281) #56
  %283 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %282) #56
  %284 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %283, ptr noundef nonnull @.str.36, i64 noundef 44) #56
  %285 = load ptr, ptr %283, align 8, !tbaa !51
  %286 = getelementptr i8, ptr %285, i64 -24
  %287 = load i64, ptr %286, align 8
  %288 = getelementptr inbounds i8, ptr %283, i64 %287
  %289 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %288, i8 noundef signext 10) #56
  %290 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %283, i8 noundef signext %289) #56
  %291 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %290) #56
  %292 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %291, ptr noundef nonnull @.str.37, i64 noundef 22) #56
  %293 = load ptr, ptr %291, align 8, !tbaa !51
  %294 = getelementptr i8, ptr %293, i64 -24
  %295 = load i64, ptr %294, align 8
  %296 = getelementptr inbounds i8, ptr %291, i64 %295
  %297 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %296, i8 noundef signext 10) #56
  %298 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %291, i8 noundef signext %297) #56
  %299 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %298) #56
  %300 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %299, ptr noundef nonnull @.str.38, i64 noundef 20) #56
  %301 = load ptr, ptr %299, align 8, !tbaa !51
  %302 = getelementptr i8, ptr %301, i64 -24
  %303 = load i64, ptr %302, align 8
  %304 = getelementptr inbounds i8, ptr %299, i64 %303
  %305 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %304, i8 noundef signext 10) #56
  %306 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %299, i8 noundef signext %305) #56
  %307 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %306) #56
  %308 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %307, ptr noundef nonnull @.str.39, i64 noundef 25) #56
  %309 = load ptr, ptr %307, align 8, !tbaa !51
  %310 = getelementptr i8, ptr %309, i64 -24
  %311 = load i64, ptr %310, align 8
  %312 = getelementptr inbounds i8, ptr %307, i64 %311
  %313 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %312, i8 noundef signext 10) #56
  %314 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %307, i8 noundef signext %313) #56
  %315 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %314) #56
  %316 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %315, ptr noundef nonnull @.str.40, i64 noundef 15) #56
  %317 = load ptr, ptr %315, align 8, !tbaa !51
  %318 = getelementptr i8, ptr %317, i64 -24
  %319 = load i64, ptr %318, align 8
  %320 = getelementptr inbounds i8, ptr %315, i64 %319
  %321 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %320, i8 noundef signext 10) #56
  %322 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %315, i8 noundef signext %321) #56
  %323 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %322) #56
  %324 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %323, ptr noundef nonnull @.str.41, i64 noundef 51) #56
  %325 = load ptr, ptr %323, align 8, !tbaa !51
  %326 = getelementptr i8, ptr %325, i64 -24
  %327 = load i64, ptr %326, align 8
  %328 = getelementptr inbounds i8, ptr %323, i64 %327
  %329 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %328, i8 noundef signext 10) #56
  %330 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %323, i8 noundef signext %329) #56
  %331 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %330) #56
  %332 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %331, ptr noundef nonnull @.str.37, i64 noundef 22) #56
  %333 = load ptr, ptr %331, align 8, !tbaa !51
  %334 = getelementptr i8, ptr %333, i64 -24
  %335 = load i64, ptr %334, align 8
  %336 = getelementptr inbounds i8, ptr %331, i64 %335
  %337 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %336, i8 noundef signext 10) #56
  %338 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %331, i8 noundef signext %337) #56
  %339 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %338) #56
  %340 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %339, ptr noundef nonnull @.str.38, i64 noundef 20) #56
  %341 = load ptr, ptr %339, align 8, !tbaa !51
  %342 = getelementptr i8, ptr %341, i64 -24
  %343 = load i64, ptr %342, align 8
  %344 = getelementptr inbounds i8, ptr %339, i64 %343
  %345 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %344, i8 noundef signext 10) #56
  %346 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %339, i8 noundef signext %345) #56
  %347 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %346) #56
  %348 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %347, ptr noundef nonnull @.str.39, i64 noundef 25) #56
  %349 = load ptr, ptr %347, align 8, !tbaa !51
  %350 = getelementptr i8, ptr %349, i64 -24
  %351 = load i64, ptr %350, align 8
  %352 = getelementptr inbounds i8, ptr %347, i64 %351
  %353 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %352, i8 noundef signext 10) #56
  %354 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %347, i8 noundef signext %353) #56
  %355 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %354) #56
  %356 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %355, ptr noundef nonnull @.str.42, i64 noundef 21) #56
  %357 = load ptr, ptr %355, align 8, !tbaa !51
  %358 = getelementptr i8, ptr %357, i64 -24
  %359 = load i64, ptr %358, align 8
  %360 = getelementptr inbounds i8, ptr %355, i64 %359
  %361 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %360, i8 noundef signext 10) #56
  %362 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %355, i8 noundef signext %361) #56
  %363 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %362) #56
  %364 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %363, ptr noundef nonnull @.str.43, i64 noundef 19) #56
  %365 = load ptr, ptr %363, align 8, !tbaa !51
  %366 = getelementptr i8, ptr %365, i64 -24
  %367 = load i64, ptr %366, align 8
  %368 = getelementptr inbounds i8, ptr %363, i64 %367
  %369 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %368, i8 noundef signext 10) #56
  %370 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %363, i8 noundef signext %369) #56
  %371 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %370) #56
  %372 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %371, ptr noundef nonnull @.str.40, i64 noundef 15) #56
  %373 = load ptr, ptr %371, align 8, !tbaa !51
  %374 = getelementptr i8, ptr %373, i64 -24
  %375 = load i64, ptr %374, align 8
  %376 = getelementptr inbounds i8, ptr %371, i64 %375
  %377 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %376, i8 noundef signext 10) #56
  %378 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %371, i8 noundef signext %377) #56
  %379 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %378) #56
  %380 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %379, ptr noundef nonnull @.str.44, i64 noundef 32) #56
  %381 = load ptr, ptr %379, align 8, !tbaa !51
  %382 = getelementptr i8, ptr %381, i64 -24
  %383 = load i64, ptr %382, align 8
  %384 = getelementptr inbounds i8, ptr %379, i64 %383
  %385 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %384, i8 noundef signext 10) #56
  %386 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %379, i8 noundef signext %385) #56
  %387 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %386) #56
  %388 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %387, ptr noundef nonnull @.str.45, i64 noundef 78) #56
  %389 = load ptr, ptr %387, align 8, !tbaa !51
  %390 = getelementptr i8, ptr %389, i64 -24
  %391 = load i64, ptr %390, align 8
  %392 = getelementptr inbounds i8, ptr %387, i64 %391
  %393 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %392, i8 noundef signext 10) #56
  %394 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %387, i8 noundef signext %393) #56
  %395 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %394) #56
  %396 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %395, ptr noundef nonnull @.str.46, i64 noundef 70) #56
  %397 = load ptr, ptr %395, align 8, !tbaa !51
  %398 = getelementptr i8, ptr %397, i64 -24
  %399 = load i64, ptr %398, align 8
  %400 = getelementptr inbounds i8, ptr %395, i64 %399
  %401 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %400, i8 noundef signext 10) #56
  %402 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %395, i8 noundef signext %401) #56
  %403 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %402) #56
  %404 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %403, ptr noundef nonnull @.str.47, i64 noundef 57) #56
  %405 = load ptr, ptr %403, align 8, !tbaa !51
  %406 = getelementptr i8, ptr %405, i64 -24
  %407 = load i64, ptr %406, align 8
  %408 = getelementptr inbounds i8, ptr %403, i64 %407
  %409 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %408, i8 noundef signext 10) #56
  %410 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %403, i8 noundef signext %409) #56
  %411 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %410) #56
  %412 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %411, ptr noundef nonnull @.str.48, i64 noundef 72) #56
  %413 = load ptr, ptr %411, align 8, !tbaa !51
  %414 = getelementptr i8, ptr %413, i64 -24
  %415 = load i64, ptr %414, align 8
  %416 = getelementptr inbounds i8, ptr %411, i64 %415
  %417 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %416, i8 noundef signext 10) #56
  %418 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %411, i8 noundef signext %417) #56
  %419 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %418) #56
  %420 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %419, ptr noundef nonnull @.str.49, i64 noundef 37) #56
  %421 = load ptr, ptr %419, align 8, !tbaa !51
  %422 = getelementptr i8, ptr %421, i64 -24
  %423 = load i64, ptr %422, align 8
  %424 = getelementptr inbounds i8, ptr %419, i64 %423
  %425 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %424, i8 noundef signext 10) #56
  %426 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %419, i8 noundef signext %425) #56
  %427 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %426) #56
  %428 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %427, ptr noundef nonnull @.str.50, i64 noundef 48) #56
  %429 = load ptr, ptr %427, align 8, !tbaa !51
  %430 = getelementptr i8, ptr %429, i64 -24
  %431 = load i64, ptr %430, align 8
  %432 = getelementptr inbounds i8, ptr %427, i64 %431
  %433 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %432, i8 noundef signext 10) #56
  %434 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %427, i8 noundef signext %433) #56
  %435 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %434) #56
  %436 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %435, ptr noundef nonnull @.str.51, i64 noundef 91) #56
  %437 = load ptr, ptr %435, align 8, !tbaa !51
  %438 = getelementptr i8, ptr %437, i64 -24
  %439 = load i64, ptr %438, align 8
  %440 = getelementptr inbounds i8, ptr %435, i64 %439
  %441 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %440, i8 noundef signext 10) #56
  %442 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %435, i8 noundef signext %441) #56
  %443 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %442) #56
  %444 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %443, ptr noundef nonnull @.str.52, i64 noundef 68) #56
  %445 = load ptr, ptr %443, align 8, !tbaa !51
  %446 = getelementptr i8, ptr %445, i64 -24
  %447 = load i64, ptr %446, align 8
  %448 = getelementptr inbounds i8, ptr %443, i64 %447
  %449 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %448, i8 noundef signext 10) #56
  %450 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %443, i8 noundef signext %449) #56
  %451 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %450) #56
  %452 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %451, ptr noundef nonnull @.str.53, i64 noundef 39) #56
  %453 = load ptr, ptr %451, align 8, !tbaa !51
  %454 = getelementptr i8, ptr %453, i64 -24
  %455 = load i64, ptr %454, align 8
  %456 = getelementptr inbounds i8, ptr %451, i64 %455
  %457 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %456, i8 noundef signext 10) #56
  %458 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %451, i8 noundef signext %457) #56
  %459 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %458) #56
  %460 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %459, ptr noundef nonnull @.str.54, i64 noundef 48) #56
  %461 = load ptr, ptr %459, align 8, !tbaa !51
  %462 = getelementptr i8, ptr %461, i64 -24
  %463 = load i64, ptr %462, align 8
  %464 = getelementptr inbounds i8, ptr %459, i64 %463
  %465 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %464, i8 noundef signext 10) #56
  %466 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %459, i8 noundef signext %465) #56
  %467 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %466) #56
  %468 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %467, ptr noundef nonnull @.str.55, i64 noundef 53) #56
  %469 = load ptr, ptr %467, align 8, !tbaa !51
  %470 = getelementptr i8, ptr %469, i64 -24
  %471 = load i64, ptr %470, align 8
  %472 = getelementptr inbounds i8, ptr %467, i64 %471
  %473 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %472, i8 noundef signext 10) #56
  %474 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) %467, i8 noundef signext %473) #56
  %475 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %474) #56
  ret void
}

; Function Attrs: optsize
declare noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef, i64 noundef) local_unnamed_addr #7

; Function Attrs: inlinehint mustprogress optsize uwtable
define available_externally noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr noundef %1) local_unnamed_addr #16 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %4, label %12

4:                                                ; preds = %2
  %5 = load ptr, ptr %0, align 8, !tbaa !51
  %6 = getelementptr i8, ptr %5, i64 -24
  %7 = load i64, ptr %6, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 %7
  %9 = getelementptr inbounds %"class.std::ios_base", ptr %8, i64 0, i32 5
  %10 = load i32, ptr %9, align 8, !tbaa !491
  %11 = or i32 %10, 1
  tail call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(ptr noundef nonnull align 8 dereferenceable(264) %8, i32 noundef %11) #56
  br label %15

12:                                               ; preds = %2
  %13 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #59
  %14 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr noundef nonnull %1, i64 noundef %13) #56
  br label %15

15:                                               ; preds = %12, %4
  ret ptr %0
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_Z13outputVersionv() #13 {
  %1 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) @progName) #59
  %2 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @progName, i64 noundef %1) #56
  %3 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.56, i64 noundef 1) #56
  %4 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) @progVers) #59
  %5 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @progVers, i64 noundef %4) #56
  %6 = load ptr, ptr @_ZSt4cout, align 8, !tbaa !51
  %7 = getelementptr i8, ptr %6, i64 -24
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds i8, ptr @_ZSt4cout, i64 %8
  %10 = tail call noundef signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(ptr noundef nonnull align 8 dereferenceable(264) %9, i8 noundef signext 10) #56
  %11 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo3putEc(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 noundef signext %10) #56
  %12 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) %11) #56
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_Z10parseInputiPPc(i32 noundef %0, ptr nocapture noundef readonly %1) #13 {
  %3 = alloca %struct.stat, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(6) @progName, ptr noundef nonnull align 1 dereferenceable(6) @.str.57, i64 6, i1 false) #59
  store i8 0, ptr @verbose, align 1, !tbaa !540
  store i8 1, ptr @localStencil, align 1, !tbaa !540
  store i8 1, ptr @outline, align 1, !tbaa !540
  store i8 0, ptr @dynamic_load_balance_on, align 1, !tbaa !540
  store i32 0, ptr @crux_type, align 4, !tbaa !68
  store i8 0, ptr @face_based, align 1, !tbaa !540
  store i8 0, ptr @restart, align 1, !tbaa !540
  store ptr null, ptr @restart_file, align 8, !tbaa !29
  store i32 100, ptr @outputInterval, align 4, !tbaa !68
  store i32 128, ptr @nx, align 4, !tbaa !68
  store i32 128, ptr @ny, align 4, !tbaa !68
  store i32 3000, ptr @niter, align 4, !tbaa !68
  store i8 1, ptr @neighbor_remap, align 1, !tbaa !540
  store i32 0, ptr @measure_type, align 4, !tbaa !68
  store i32 0, ptr @calc_neighbor_type, align 4, !tbaa !68
  store i32 0, ptr @choose_hash_method, align 4, !tbaa !68
  store i32 1, ptr @initial_order, align 4, !tbaa !68
  store i32 0, ptr @cycle_reorder, align 4, !tbaa !68
  store i32 2147483647, ptr @graphic_outputInterval, align 4, !tbaa !68
  store i32 0, ptr @graphics_type, align 4, !tbaa !68
  store i32 2147483647, ptr @checkpoint_outputInterval, align 4, !tbaa !68
  store i32 2, ptr @num_of_rollback_states, align 4, !tbaa !68
  store i32 1, ptr @levmx, align 4, !tbaa !68
  store float 1.000000e+00, ptr @mem_opt_factor, align 4, !tbaa !177
  store double -1.000000e+00, ptr @upper_mass_diff_percentage, align 8, !tbaa !171
  store i32 1, ptr @enhanced_precision_sum, align 4, !tbaa !68
  %4 = icmp sgt i32 %0, 1
  br i1 %4, label %5, label %269

5:                                                ; preds = %2
  %6 = getelementptr inbounds ptr, ptr %1, i64 1
  %7 = load ptr, ptr %6, align 8, !tbaa !29
  %8 = tail call ptr @strtok(ptr noundef %7, ptr noundef nonnull @.str.58) #59
  %9 = icmp eq ptr %8, null
  br i1 %9, label %269, label %10

10:                                               ; preds = %261, %5
  %11 = phi i32 [ %263, %261 ], [ 2, %5 ]
  %12 = phi ptr [ %267, %261 ], [ %8, %5 ]
  %13 = load i8, ptr %12, align 1, !tbaa !50
  %14 = sext i8 %13 to i32
  switch i32 %14, label %256 [
    i32 98, label %15
    i32 99, label %31
    i32 67, label %38
    i32 100, label %261
    i32 68, label %261
    i32 101, label %45
    i32 102, label %66
    i32 103, label %67
    i32 71, label %77
    i32 104, label %92
    i32 105, label %94
    i32 108, label %101
    i32 77, label %108
    i32 109, label %116
    i32 78, label %141
    i32 110, label %154
    i32 111, label %161
    i32 80, label %162
    i32 112, label %183
    i32 113, label %261
    i32 114, label %212
    i32 82, label %227
    i32 115, label %261
    i32 84, label %261
    i32 116, label %238
    i32 117, label %245
    i32 86, label %252
    i32 118, label %253
    i32 122, label %255
  ]

15:                                               ; preds = %10
  store i16 48, ptr %12, align 1
  %16 = icmp slt i32 %11, %0
  br i1 %16, label %17, label %23

17:                                               ; preds = %15
  %18 = add nsw i32 %11, 1
  %19 = sext i32 %11 to i64
  %20 = getelementptr inbounds ptr, ptr %1, i64 %19
  %21 = load ptr, ptr %20, align 8, !tbaa !29
  %22 = tail call ptr @strtok(ptr noundef %21, ptr noundef nonnull @.str.60) #59
  br label %23

23:                                               ; preds = %17, %15
  %24 = phi ptr [ %22, %17 ], [ %12, %15 ]
  %25 = phi i32 [ %18, %17 ], [ %11, %15 ]
  %26 = tail call i32 @atoi(ptr nocapture noundef %24) #63
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.139)
  br label %261

30:                                               ; preds = %23
  store i32 %26, ptr @num_of_rollback_states, align 4, !tbaa !68
  br label %261

31:                                               ; preds = %10
  %32 = add nsw i32 %11, 1
  %33 = sext i32 %11 to i64
  %34 = getelementptr inbounds ptr, ptr %1, i64 %33
  %35 = load ptr, ptr %34, align 8, !tbaa !29
  %36 = tail call ptr @strtok(ptr noundef %35, ptr noundef nonnull @.str.58) #59
  %37 = tail call i32 @atoi(ptr nocapture noundef %36) #63
  store i32 %37, ptr @checkpoint_outputInterval, align 4, !tbaa !68
  store i32 1, ptr @crux_type, align 4, !tbaa !68
  br label %261

38:                                               ; preds = %10
  %39 = add nsw i32 %11, 1
  %40 = sext i32 %11 to i64
  %41 = getelementptr inbounds ptr, ptr %1, i64 %40
  %42 = load ptr, ptr %41, align 8, !tbaa !29
  %43 = tail call ptr @strtok(ptr noundef %42, ptr noundef nonnull @.str.58) #59
  %44 = tail call i32 @atoi(ptr nocapture noundef %43) #63
  store i32 %44, ptr @checkpoint_outputInterval, align 4, !tbaa !68
  store i32 2, ptr @crux_type, align 4, !tbaa !68
  br label %261

45:                                               ; preds = %10
  %46 = add nsw i32 %11, 1
  %47 = sext i32 %11 to i64
  %48 = getelementptr inbounds ptr, ptr %1, i64 %47
  %49 = load ptr, ptr %48, align 8, !tbaa !29
  %50 = tail call ptr @strtok(ptr noundef %49, ptr noundef nonnull @.str.60) #59
  %51 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %50, ptr noundef nonnull dereferenceable(8) @.str.62) #63
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %45
  store i32 1, ptr @choose_hash_method, align 4, !tbaa !68
  br label %261

54:                                               ; preds = %45
  %55 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %50, ptr noundef nonnull dereferenceable(7) @.str.63) #63
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  store i32 2, ptr @choose_hash_method, align 4, !tbaa !68
  br label %261

58:                                               ; preds = %54
  %59 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %50, ptr noundef nonnull dereferenceable(10) @.str.64) #63
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  store i32 3, ptr @choose_hash_method, align 4, !tbaa !68
  br label %261

62:                                               ; preds = %58
  %63 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %50, ptr noundef nonnull dereferenceable(11) @.str.65) #63
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %261

65:                                               ; preds = %62
  store i32 4, ptr @choose_hash_method, align 4, !tbaa !68
  br label %261

66:                                               ; preds = %10
  store i8 1, ptr @face_based, align 1, !tbaa !540
  br label %261

67:                                               ; preds = %10
  %68 = add nsw i32 %11, 1
  %69 = sext i32 %11 to i64
  %70 = getelementptr inbounds ptr, ptr %1, i64 %69
  %71 = load ptr, ptr %70, align 8, !tbaa !29
  %72 = tail call ptr @strtok(ptr noundef %71, ptr noundef nonnull @.str.58) #59
  %73 = tail call i32 @atoi(ptr nocapture noundef %72) #63
  store i32 %73, ptr @graphic_outputInterval, align 4, !tbaa !68
  %74 = load i32, ptr @graphics_type, align 4, !tbaa !68
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %261

76:                                               ; preds = %67
  store i32 1, ptr @graphics_type, align 4, !tbaa !68
  br label %261

77:                                               ; preds = %10
  %78 = add nsw i32 %11, 1
  %79 = sext i32 %11 to i64
  %80 = getelementptr inbounds ptr, ptr %1, i64 %79
  %81 = load ptr, ptr %80, align 8, !tbaa !29
  %82 = tail call ptr @strtok(ptr noundef %81, ptr noundef nonnull @.str.58) #59
  %83 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %82, ptr noundef nonnull dereferenceable(5) @.str.66) #63
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %77
  store i32 0, ptr @graphics_type, align 4, !tbaa !68
  store i32 2147483647, ptr @graphic_outputInterval, align 4, !tbaa !68
  br label %261

86:                                               ; preds = %77
  %87 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %82, ptr noundef nonnull dereferenceable(5) @.str.67) #63
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  store i32 1, ptr @graphics_type, align 4, !tbaa !68
  br label %261

90:                                               ; preds = %86
  %.lcssa7 = phi ptr [ %82, %86 ]
  %91 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.68, ptr noundef %.lcssa7) #56
  tail call void @exit(i32 noundef -1) #67
  unreachable

92:                                               ; preds = %10
  tail call void @_Z10outputHelpv() #56
  %93 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout) #56
  tail call void @exit(i32 noundef 0) #67
  unreachable

94:                                               ; preds = %10
  %95 = add nsw i32 %11, 1
  %96 = sext i32 %11 to i64
  %97 = getelementptr inbounds ptr, ptr %1, i64 %96
  %98 = load ptr, ptr %97, align 8, !tbaa !29
  %99 = tail call ptr @strtok(ptr noundef %98, ptr noundef nonnull @.str.58) #59
  %100 = tail call i32 @atoi(ptr nocapture noundef %99) #63
  store i32 %100, ptr @outputInterval, align 4, !tbaa !68
  br label %261

101:                                              ; preds = %10
  %102 = add nsw i32 %11, 1
  %103 = sext i32 %11 to i64
  %104 = getelementptr inbounds ptr, ptr %1, i64 %103
  %105 = load ptr, ptr %104, align 8, !tbaa !29
  %106 = tail call ptr @strtok(ptr noundef %105, ptr noundef nonnull @.str.60) #59
  %107 = tail call i32 @atoi(ptr nocapture noundef %106) #63
  store i32 %107, ptr @levmx, align 4, !tbaa !68
  br label %261

108:                                              ; preds = %10
  %109 = add nsw i32 %11, 1
  %110 = sext i32 %11 to i64
  %111 = getelementptr inbounds ptr, ptr %1, i64 %110
  %112 = load ptr, ptr %111, align 8, !tbaa !29
  %113 = tail call ptr @strtok(ptr noundef %112, ptr noundef nonnull @.str.60) #59
  %114 = tail call double @atof(ptr noundef %113) #63
  %115 = fptrunc double %114 to float
  store float %115, ptr @mem_opt_factor, align 4, !tbaa !177
  br label %261

116:                                              ; preds = %10
  %117 = add nsw i32 %11, 1
  %118 = sext i32 %11 to i64
  %119 = getelementptr inbounds ptr, ptr %1, i64 %118
  %120 = load ptr, ptr %119, align 8, !tbaa !29
  %121 = tail call ptr @strtok(ptr noundef %120, ptr noundef nonnull @.str.60) #59
  %122 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %121, ptr noundef nonnull dereferenceable(21) @.str.69) #63
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %116
  store i32 0, ptr @measure_type, align 4, !tbaa !68
  br label %261

125:                                              ; preds = %116
  %126 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %121, ptr noundef nonnull dereferenceable(16) @.str.70) #63
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  store i32 1, ptr @measure_type, align 4, !tbaa !68
  br label %261

129:                                              ; preds = %125
  %130 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %121, ptr noundef nonnull dereferenceable(19) @.str.71.140) #63
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  store i32 2, ptr @measure_type, align 4, !tbaa !68
  br label %261

133:                                              ; preds = %129
  %134 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %121, ptr noundef nonnull dereferenceable(7) @.str.72) #63
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  store i32 3, ptr @measure_type, align 4, !tbaa !68
  br label %261

137:                                              ; preds = %133
  %138 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %121, ptr noundef nonnull dereferenceable(11) @.str.73) #63
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %261

140:                                              ; preds = %137
  store i32 4, ptr @measure_type, align 4, !tbaa !68
  br label %261

141:                                              ; preds = %10
  %142 = add nsw i32 %11, 1
  %143 = sext i32 %11 to i64
  %144 = getelementptr inbounds ptr, ptr %1, i64 %143
  %145 = load ptr, ptr %144, align 8, !tbaa !29
  %146 = tail call ptr @strtok(ptr noundef %145, ptr noundef nonnull @.str.60) #59
  %147 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %146, ptr noundef nonnull dereferenceable(11) @.str.74) #63
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %141
  store i32 0, ptr @calc_neighbor_type, align 4, !tbaa !68
  br label %261

150:                                              ; preds = %141
  %151 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %146, ptr noundef nonnull dereferenceable(7) @.str.75) #63
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %261

153:                                              ; preds = %150
  store i32 1, ptr @calc_neighbor_type, align 4, !tbaa !68
  br label %261

154:                                              ; preds = %10
  %155 = add nsw i32 %11, 1
  %156 = sext i32 %11 to i64
  %157 = getelementptr inbounds ptr, ptr %1, i64 %156
  %158 = load ptr, ptr %157, align 8, !tbaa !29
  %159 = tail call ptr @strtok(ptr noundef %158, ptr noundef nonnull @.str.60) #59
  %160 = tail call i32 @atoi(ptr nocapture noundef %159) #63
  store i32 %160, ptr @nx, align 4, !tbaa !68
  store i32 %160, ptr @ny, align 4, !tbaa !68
  br label %261

161:                                              ; preds = %10
  store i8 0, ptr @outline, align 1, !tbaa !540
  br label %261

162:                                              ; preds = %10
  %163 = add nsw i32 %11, 1
  %164 = sext i32 %11 to i64
  %165 = getelementptr inbounds ptr, ptr %1, i64 %164
  %166 = load ptr, ptr %165, align 8, !tbaa !29
  %167 = tail call ptr @strtok(ptr noundef %166, ptr noundef nonnull @.str.60) #59
  %168 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %167, ptr noundef nonnull dereferenceable(15) @.str.76) #63
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %162
  store i32 0, ptr @initial_order, align 4, !tbaa !68
  br label %261

171:                                              ; preds = %162
  %172 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %167, ptr noundef nonnull dereferenceable(13) @.str.77) #63
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  store i32 1, ptr @initial_order, align 4, !tbaa !68
  br label %261

175:                                              ; preds = %171
  %176 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %167, ptr noundef nonnull dereferenceable(18) @.str.78) #63
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  store i32 2, ptr @initial_order, align 4, !tbaa !68
  br label %261

179:                                              ; preds = %175
  %180 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %167, ptr noundef nonnull dereferenceable(8) @.str.79) #63
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %261

182:                                              ; preds = %179
  store i32 3, ptr @initial_order, align 4, !tbaa !68
  br label %261

183:                                              ; preds = %10
  %184 = add nsw i32 %11, 1
  %185 = sext i32 %11 to i64
  %186 = getelementptr inbounds ptr, ptr %1, i64 %185
  %187 = load ptr, ptr %186, align 8, !tbaa !29
  %188 = tail call ptr @strtok(ptr noundef %187, ptr noundef nonnull @.str.60) #59
  %189 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %188, ptr noundef nonnull dereferenceable(15) @.str.76) #63
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %183
  store i32 0, ptr @cycle_reorder, align 4, !tbaa !68
  store i8 0, ptr @localStencil, align 1, !tbaa !540
  br label %261

192:                                              ; preds = %183
  %193 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %188, ptr noundef nonnull dereferenceable(13) @.str.77) #63
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  store i32 1, ptr @cycle_reorder, align 4, !tbaa !68
  store i8 0, ptr @localStencil, align 1, !tbaa !540
  br label %261

196:                                              ; preds = %192
  %197 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %188, ptr noundef nonnull dereferenceable(18) @.str.78) #63
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  store i32 2, ptr @cycle_reorder, align 4, !tbaa !68
  store i8 0, ptr @localStencil, align 1, !tbaa !540
  br label %261

200:                                              ; preds = %196
  %201 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %188, ptr noundef nonnull dereferenceable(14) @.str.80) #63
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  store i32 0, ptr @cycle_reorder, align 4, !tbaa !68
  store i8 1, ptr @localStencil, align 1, !tbaa !540
  br label %261

204:                                              ; preds = %200
  %205 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %188, ptr noundef nonnull dereferenceable(12) @.str.81) #63
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  store i32 0, ptr @cycle_reorder, align 4, !tbaa !68
  store i8 0, ptr @localStencil, align 1, !tbaa !540
  br label %261

208:                                              ; preds = %204
  %209 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %188, ptr noundef nonnull dereferenceable(8) @.str.79) #63
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %261

211:                                              ; preds = %208
  store i32 3, ptr @cycle_reorder, align 4, !tbaa !68
  store i8 0, ptr @localStencil, align 1, !tbaa !540
  br label %261

212:                                              ; preds = %10
  %213 = add nsw i32 %11, 1
  %214 = sext i32 %11 to i64
  %215 = getelementptr inbounds ptr, ptr %1, i64 %214
  %216 = load ptr, ptr %215, align 8, !tbaa !29
  %217 = tail call ptr @strtok(ptr noundef %216, ptr noundef nonnull @.str.60) #59
  %218 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %217, ptr noundef nonnull dereferenceable(12) @.str.82) #63
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %221

220:                                              ; preds = %212
  store i32 0, ptr @enhanced_precision_sum, align 4, !tbaa !68
  br label %261

221:                                              ; preds = %212
  %222 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %217, ptr noundef nonnull dereferenceable(10) @.str.83) #63
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %221
  store i32 1, ptr @enhanced_precision_sum, align 4, !tbaa !68
  br label %261

225:                                              ; preds = %221
  %.lcssa = phi ptr [ %217, %221 ]
  %226 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.84, ptr noundef %.lcssa) #56
  tail call void @exit(i32 noundef 0) #67
  unreachable

227:                                              ; preds = %10
  store i8 1, ptr @restart, align 1, !tbaa !540
  %228 = add nsw i32 %11, 1
  %229 = sext i32 %11 to i64
  %230 = getelementptr inbounds ptr, ptr %1, i64 %229
  %231 = load ptr, ptr %230, align 8, !tbaa !29
  %232 = tail call ptr @strtok(ptr noundef %231, ptr noundef nonnull @.str.60) #59
  store ptr %232, ptr @restart_file, align 8, !tbaa !29
  %233 = call i32 @stat(ptr noundef %232, ptr noundef nonnull %3) #59
  %234 = icmp eq i32 %233, -1
  br i1 %234, label %235, label %261

235:                                              ; preds = %227
  %236 = load ptr, ptr @restart_file, align 8, !tbaa !29
  %237 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.85, ptr noundef %236) #56
  tail call void @exit(i32 noundef 0) #67
  unreachable

238:                                              ; preds = %10
  %239 = add nsw i32 %11, 1
  %240 = sext i32 %11 to i64
  %241 = getelementptr inbounds ptr, ptr %1, i64 %240
  %242 = load ptr, ptr %241, align 8, !tbaa !29
  %243 = tail call ptr @strtok(ptr noundef %242, ptr noundef nonnull @.str.58) #59
  %244 = tail call i32 @atoi(ptr nocapture noundef %243) #63
  store i32 %244, ptr @niter, align 4, !tbaa !68
  br label %261

245:                                              ; preds = %10
  %246 = add nsw i32 %11, 1
  %247 = sext i32 %11 to i64
  %248 = getelementptr inbounds ptr, ptr %1, i64 %247
  %249 = load ptr, ptr %248, align 8, !tbaa !29
  %250 = tail call ptr @strtok(ptr noundef %249, ptr noundef nonnull @.str.60) #59
  %251 = tail call double @atof(ptr noundef %250) #63
  store double %251, ptr @upper_mass_diff_percentage, align 8, !tbaa !171
  br label %261

252:                                              ; preds = %10
  store i8 1, ptr @verbose, align 1, !tbaa !540
  br label %261

253:                                              ; preds = %10
  tail call void @_Z13outputVersionv() #56
  %254 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout) #56
  tail call void @exit(i32 noundef 0) #67
  unreachable

255:                                              ; preds = %10
  store i8 0, ptr @neighbor_remap, align 1, !tbaa !540
  br label %261

256:                                              ; preds = %10
  %.lcssa1 = phi ptr [ %12, %10 ]
  %257 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef nonnull @.str.86) #56
  %258 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %257, ptr noundef nonnull %.lcssa1) #56
  %259 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(ptr noundef nonnull align 8 dereferenceable(8) %258) #56
  tail call void @_Z10outputHelpv() #56
  %260 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSo5flushEv(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout) #56
  tail call void @exit(i32 noundef 1) #67
  unreachable

261:                                              ; preds = %255, %252, %245, %238, %227, %224, %220, %211, %208, %207, %203, %199, %195, %191, %182, %179, %178, %174, %170, %161, %154, %153, %150, %149, %140, %137, %136, %132, %128, %124, %108, %101, %94, %89, %85, %76, %67, %66, %65, %62, %61, %57, %53, %38, %31, %30, %28, %10, %10, %10, %10, %10
  %262 = phi i32 [ %11, %255 ], [ %11, %252 ], [ %246, %245 ], [ %239, %238 ], [ %228, %227 ], [ %213, %224 ], [ %213, %220 ], [ %184, %208 ], [ %184, %211 ], [ %184, %207 ], [ %184, %203 ], [ %184, %199 ], [ %184, %195 ], [ %184, %191 ], [ %163, %179 ], [ %163, %182 ], [ %163, %178 ], [ %163, %174 ], [ %163, %170 ], [ %11, %161 ], [ %155, %154 ], [ %142, %150 ], [ %142, %153 ], [ %142, %149 ], [ %117, %137 ], [ %117, %140 ], [ %117, %136 ], [ %117, %132 ], [ %117, %128 ], [ %117, %124 ], [ %109, %108 ], [ %102, %101 ], [ %95, %94 ], [ %78, %89 ], [ %78, %85 ], [ %68, %76 ], [ %68, %67 ], [ %11, %66 ], [ %46, %62 ], [ %46, %65 ], [ %46, %61 ], [ %46, %57 ], [ %46, %53 ], [ %11, %10 ], [ %11, %10 ], [ %11, %10 ], [ %11, %10 ], [ %11, %10 ], [ %39, %38 ], [ %32, %31 ], [ %25, %28 ], [ %25, %30 ]
  %263 = add nsw i32 %262, 1
  %264 = sext i32 %262 to i64
  %265 = getelementptr inbounds ptr, ptr %1, i64 %264
  %266 = load ptr, ptr %265, align 8, !tbaa !29
  %267 = tail call ptr @strtok(ptr noundef %266, ptr noundef nonnull @.str.58) #59
  %268 = icmp eq ptr %267, null
  br i1 %268, label %269, label %10, !llvm.loop !636

269:                                              ; preds = %261, %5, %2
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn
declare ptr @strtok(ptr noundef, ptr nocapture noundef readonly) local_unnamed_addr #48

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(read)
declare i32 @atoi(ptr nocapture noundef) local_unnamed_addr #20

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(read)
declare double @atof(ptr nocapture noundef) local_unnamed_addr #20

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN4Mesh8allocateEm(ptr noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %1) #13 align 2 {
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %4 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %3, i64 noundef %1, i64 noundef 4, ptr noundef nonnull @.str.50.141, i32 noundef 16) #56
  %5 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  store ptr %4, ptr %5, align 8, !tbaa !637
  %6 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %3, i64 noundef %1, i64 noundef 4, ptr noundef nonnull @.str.51.142, i32 noundef 16) #56
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  store ptr %6, ptr %7, align 8, !tbaa !638
  %8 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %3, i64 noundef %1, i64 noundef 4, ptr noundef nonnull @.str.52.143, i32 noundef 16) #56
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  store ptr %8, ptr %9, align 8, !tbaa !639
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN4Mesh24calc_spatial_coordinatesEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %1) #13 align 2 {
  %3 = alloca %struct.timeval, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #57
  call void @cpu_timer_start(ptr noundef nonnull %3) #56
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %5 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %6 = load i64, ptr %5, align 8, !tbaa !543
  call void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %4, i64 noundef %6) #56
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %8 = load i64, ptr %5, align 8, !tbaa !543
  call void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %7, i64 noundef %8) #56
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %10 = load i64, ptr %5, align 8, !tbaa !543
  call void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %9, i64 noundef %10) #56
  %11 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %12 = load i64, ptr %5, align 8, !tbaa !543
  call void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %11, i64 noundef %12) #56
  call void @_ZN4Mesh10set_boundsEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 poison) #56
  %13 = load i64, ptr %5, align 8, !tbaa !543
  %14 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 37
  %15 = load i32, ptr %14, align 4, !tbaa !640
  %16 = icmp eq i32 %15, 0
  %17 = and i64 %13, 4294967295
  %18 = icmp eq i64 %17, 0
  br i1 %16, label %38, label %19

19:                                               ; preds = %2
  br i1 %18, label %127, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %22 = load ptr, ptr %21, align 8, !tbaa !639
  %23 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 48
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 33
  %25 = load ptr, ptr %24, align 8, !tbaa !109
  %26 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %27 = load ptr, ptr %26, align 8, !tbaa !637
  %28 = load ptr, ptr %4, align 8, !tbaa !109
  %29 = load ptr, ptr %7, align 8, !tbaa !109
  %30 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 50
  %31 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 34
  %32 = load ptr, ptr %31, align 8, !tbaa !109
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %34 = load ptr, ptr %33, align 8, !tbaa !638
  %35 = load ptr, ptr %9, align 8, !tbaa !109
  %36 = load ptr, ptr %11, align 8, !tbaa !109
  %37 = and i64 %13, 4294967295
  br label %61

38:                                               ; preds = %2
  br i1 %18, label %127, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %41 = load ptr, ptr %40, align 8, !tbaa !639
  %42 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 48
  %43 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 33
  %44 = load ptr, ptr %43, align 8, !tbaa !109
  %45 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %46 = load ptr, ptr %45, align 8, !tbaa !637
  %47 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 26
  %48 = load ptr, ptr %47, align 8, !tbaa !65
  %49 = load ptr, ptr %4, align 8, !tbaa !109
  %50 = load ptr, ptr %7, align 8, !tbaa !109
  %51 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 50
  %52 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 34
  %53 = load ptr, ptr %52, align 8, !tbaa !109
  %54 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %55 = load ptr, ptr %54, align 8, !tbaa !638
  %56 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 28
  %57 = load ptr, ptr %56, align 8, !tbaa !65
  %58 = load ptr, ptr %9, align 8, !tbaa !109
  %59 = load ptr, ptr %11, align 8, !tbaa !109
  %60 = and i64 %13, 4294967295
  br label %92

61:                                               ; preds = %61, %20
  %62 = phi i64 [ 0, %20 ], [ %90, %61 ]
  %63 = getelementptr inbounds i32, ptr %22, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !68
  %65 = load double, ptr %23, align 8, !tbaa !562
  %66 = sext i32 %64 to i64
  %67 = getelementptr inbounds double, ptr %25, i64 %66
  %68 = load double, ptr %67, align 8, !tbaa !171
  %69 = getelementptr inbounds i32, ptr %27, i64 %62
  %70 = load i32, ptr %69, align 4, !tbaa !68
  %71 = sub nsw i32 %70, %1
  %72 = sitofp i32 %71 to double
  %73 = fmul double %68, %72
  %74 = fadd double %65, %73
  %75 = getelementptr inbounds double, ptr %28, i64 %62
  store double %74, ptr %75, align 8, !tbaa !171
  %76 = load double, ptr %67, align 8, !tbaa !171
  %77 = getelementptr inbounds double, ptr %29, i64 %62
  store double %76, ptr %77, align 8, !tbaa !171
  %78 = load double, ptr %30, align 8, !tbaa !564
  %79 = getelementptr inbounds double, ptr %32, i64 %66
  %80 = load double, ptr %79, align 8, !tbaa !171
  %81 = getelementptr inbounds i32, ptr %34, i64 %62
  %82 = load i32, ptr %81, align 4, !tbaa !68
  %83 = sub nsw i32 %82, %1
  %84 = sitofp i32 %83 to double
  %85 = fmul double %80, %84
  %86 = fadd double %78, %85
  %87 = getelementptr inbounds double, ptr %35, i64 %62
  store double %86, ptr %87, align 8, !tbaa !171
  %88 = load double, ptr %79, align 8, !tbaa !171
  %89 = getelementptr inbounds double, ptr %36, i64 %62
  store double %88, ptr %89, align 8, !tbaa !171
  %90 = add nuw nsw i64 %62, 1
  %91 = icmp eq i64 %90, %37
  br i1 %91, label %127, label %61, !llvm.loop !641

92:                                               ; preds = %92, %39
  %93 = phi i64 [ 0, %39 ], [ %125, %92 ]
  %94 = getelementptr inbounds i32, ptr %41, i64 %93
  %95 = load i32, ptr %94, align 4, !tbaa !68
  %96 = load double, ptr %42, align 8, !tbaa !562
  %97 = sext i32 %95 to i64
  %98 = getelementptr inbounds double, ptr %44, i64 %97
  %99 = load double, ptr %98, align 8, !tbaa !171
  %100 = getelementptr inbounds i32, ptr %46, i64 %93
  %101 = load i32, ptr %100, align 4, !tbaa !68
  %102 = getelementptr inbounds i32, ptr %48, i64 %97
  %103 = load i32, ptr %102, align 4, !tbaa !68
  %104 = sub nsw i32 %101, %103
  %105 = sitofp i32 %104 to double
  %106 = fmul double %99, %105
  %107 = fadd double %96, %106
  %108 = getelementptr inbounds double, ptr %49, i64 %93
  store double %107, ptr %108, align 8, !tbaa !171
  %109 = load double, ptr %98, align 8, !tbaa !171
  %110 = getelementptr inbounds double, ptr %50, i64 %93
  store double %109, ptr %110, align 8, !tbaa !171
  %111 = load double, ptr %51, align 8, !tbaa !564
  %112 = getelementptr inbounds double, ptr %53, i64 %97
  %113 = load double, ptr %112, align 8, !tbaa !171
  %114 = getelementptr inbounds i32, ptr %55, i64 %93
  %115 = load i32, ptr %114, align 4, !tbaa !68
  %116 = getelementptr inbounds i32, ptr %57, i64 %97
  %117 = load i32, ptr %116, align 4, !tbaa !68
  %118 = sub nsw i32 %115, %117
  %119 = sitofp i32 %118 to double
  %120 = fmul double %113, %119
  %121 = fadd double %111, %120
  %122 = getelementptr inbounds double, ptr %58, i64 %93
  store double %121, ptr %122, align 8, !tbaa !171
  %123 = load double, ptr %112, align 8, !tbaa !171
  %124 = getelementptr inbounds double, ptr %59, i64 %93
  store double %123, ptr %124, align 8, !tbaa !171
  %125 = add nuw nsw i64 %93, 1
  %126 = icmp eq i64 %125, %60
  br i1 %126, label %127, label %92, !llvm.loop !642

127:                                              ; preds = %92, %61, %38, %19
  %128 = load i64, ptr %3, align 8, !tbaa.struct !560
  %129 = getelementptr inbounds i8, ptr %3, i64 8
  %130 = load i64, ptr %129, align 8, !tbaa.struct !561
  %131 = call double @cpu_timer_stop(i64 %128, i64 %130) #56
  %132 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 22
  %133 = load double, ptr %132, align 8, !tbaa !171
  %134 = fadd double %131, %133
  store double %134, ptr %132, align 8, !tbaa !171
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #57
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !107
  %5 = load ptr, ptr %0, align 8, !tbaa !109
  %6 = ptrtoint ptr %4 to i64
  %7 = ptrtoint ptr %5 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = sub i64 %1, %9
  tail call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %12) #56
  br label %19

13:                                               ; preds = %2
  %14 = icmp ugt i64 %9, %1
  br i1 %14, label %15, label %19

15:                                               ; preds = %13
  %16 = getelementptr inbounds double, ptr %5, i64 %1
  %17 = icmp eq ptr %4, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  store ptr %16, ptr %3, align 8, !tbaa !107
  br label %19

19:                                               ; preds = %18, %15, %13, %11
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(write, argmem: readwrite, inaccessiblemem: readwrite) uwtable
define internal void @_ZN4Mesh10set_boundsEi(ptr nocapture noundef nonnull align 8 dereferenceable(2288) %0, i32 %1) #49 align 2 {
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 14
  %4 = load ptr, ptr %3, align 8, !tbaa !643
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call noalias dereferenceable_or_null(4) ptr @malloc(i64 noundef 4) #65
  store ptr %7, ptr %3, align 8, !tbaa !643
  br label %8

8:                                                ; preds = %6, %2
  %9 = phi ptr [ %7, %6 ], [ %4, %2 ]
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 15
  %11 = load ptr, ptr %10, align 8, !tbaa !644
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = tail call noalias dereferenceable_or_null(4) ptr @malloc(i64 noundef 4) #65
  store ptr %14, ptr %10, align 8, !tbaa !644
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi ptr [ %14, %13 ], [ %11, %8 ]
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %18 = load i64, ptr %17, align 8, !tbaa !543
  %19 = trunc i64 %18 to i32
  store i32 0, ptr %9, align 4, !tbaa !68
  store i32 %19, ptr %16, align 4, !tbaa !68
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1) #13 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %59, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !107
  %7 = load ptr, ptr %0, align 8, !tbaa !109
  %8 = ptrtoint ptr %6 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !645
  %14 = ptrtoint ptr %13 to i64
  %15 = sub i64 %14, %8
  %16 = ashr exact i64 %15, 3
  %17 = icmp sgt i64 %10, -1
  tail call void @llvm.assume(i1 %17)
  %18 = xor i64 %11, 1152921504606846975
  %19 = icmp ule i64 %16, %18
  tail call void @llvm.assume(i1 %19)
  %20 = icmp ult i64 %16, %1
  br i1 %20, label %30, label %21

21:                                               ; preds = %4
  store double 0.000000e+00, ptr %6, align 8, !tbaa !171
  %22 = getelementptr double, ptr %6, i64 1
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = shl i64 %1, 3
  %26 = add i64 %25, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %22, i8 0, i64 %26, i1 false), !tbaa !171
  %27 = getelementptr inbounds double, ptr %6, i64 %1
  br label %28

28:                                               ; preds = %24, %21
  %29 = phi ptr [ %22, %21 ], [ %27, %24 ]
  store ptr %29, ptr %5, align 8, !tbaa !107
  br label %59

30:                                               ; preds = %4
  %31 = tail call noundef i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1, ptr noundef nonnull @.str.141.148) #56
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = tail call noundef ptr @_ZNSt15__new_allocatorIdE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %31, ptr noundef null) #56
  br label %35

35:                                               ; preds = %33, %30
  %36 = phi ptr [ %34, %33 ], [ null, %30 ]
  %37 = getelementptr inbounds double, ptr %36, i64 %11
  store double 0.000000e+00, ptr %37, align 8, !tbaa !171
  %38 = icmp eq i64 %1, 1
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = getelementptr double, ptr %37, i64 1
  %41 = shl i64 %1, 3
  %42 = add i64 %41, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %40, i8 0, i64 %42, i1 false), !tbaa !171
  br label %43

43:                                               ; preds = %39, %35
  %44 = load ptr, ptr %0, align 8, !tbaa !109
  %45 = load ptr, ptr %5, align 8, !tbaa !107
  %46 = ptrtoint ptr %45 to i64
  %47 = ptrtoint ptr %44 to i64
  %48 = sub i64 %46, %47
  %49 = icmp sgt i64 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %43
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %36, ptr align 8 %44, i64 %48, i1 false)
  %51 = load ptr, ptr %0, align 8, !tbaa !109
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi ptr [ %44, %43 ], [ %51, %50 ]
  %54 = icmp eq ptr %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %52
  tail call void @_ZdlPv(ptr noundef nonnull %53) #58
  br label %56

56:                                               ; preds = %55, %52
  store ptr %36, ptr %0, align 8, !tbaa !109
  %57 = getelementptr inbounds double, ptr %37, i64 %1
  store ptr %57, ptr %5, align 8, !tbaa !107
  %58 = getelementptr inbounds double, ptr %36, i64 %31
  store ptr %58, ptr %12, align 8, !tbaa !645
  br label %59

59:                                               ; preds = %56, %28, %2
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt6vectorIiSaIiEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !65
  %3 = icmp eq ptr %2, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %2) #58
  br label %5

5:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt6vectorIdSaIdEEC2EmRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1, ptr noundef nonnull align 1 dereferenceable(1) %2) unnamed_addr #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = icmp ugt i64 %1, 1152921504606846975
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.142.149) #61
  unreachable

6:                                                ; preds = %3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  br label %18

9:                                                ; preds = %6
  %10 = tail call noundef ptr @_ZNSt15__new_allocatorIdE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %1, ptr noundef null) #56
  store ptr %10, ptr %0, align 8, !tbaa !109
  %11 = getelementptr inbounds double, ptr %10, i64 %1
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %11, ptr %12, align 8, !tbaa !645
  store double 0.000000e+00, ptr %10, align 8, !tbaa !171
  %13 = getelementptr double, ptr %10, i64 1
  %14 = icmp eq i64 %1, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  %16 = shl nuw nsw i64 %1, 3
  %17 = add nsw i64 %16, -8
  tail call void @llvm.memset.p0.i64(ptr align 8 %13, i8 0, i64 %17, i1 false), !tbaa !171
  br label %18

18:                                               ; preds = %15, %9, %8
  %19 = phi ptr [ %13, %9 ], [ %11, %15 ], [ null, %8 ]
  %20 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %19, ptr %20, align 8, !tbaa !107
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZN4MeshC2Eiiiiddiii(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, double noundef %5, double noundef %6, i32 noundef %7, i32 noundef %8, i32 %9) unnamed_addr #6 align 2 personality ptr @__gxx_personality_v0 {
  %11 = alloca [4 x i32], align 16
  %12 = alloca [4 x i32], align 16
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 0, ptr %15, align 8, !tbaa !181
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %16, align 8, !tbaa !71
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %15, ptr %17, align 8, !tbaa !84
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %15, ptr %18, align 8, !tbaa !182
  %19 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %19, align 8, !tbaa !80
  %20 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  store i32 0, ptr %20, align 8, !tbaa !181
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %21, align 8, !tbaa !71
  %22 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %20, ptr %22, align 8, !tbaa !84
  %23 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %20, ptr %23, align 8, !tbaa !182
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %24, align 8, !tbaa !80
  %25 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store i32 0, ptr %25, align 8, !tbaa !181
  %26 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %26, align 8, !tbaa !71
  %27 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %25, ptr %27, align 8, !tbaa !84
  %28 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %25, ptr %28, align 8, !tbaa !182
  %29 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %29, align 8, !tbaa !80
  %30 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  store i32 0, ptr %30, align 8, !tbaa !181
  %31 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %31, align 8, !tbaa !71
  %32 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %30, ptr %32, align 8, !tbaa !84
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %30, ptr %33, align 8, !tbaa !182
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1, i32 1
  %35 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 19
  %36 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 20
  %37 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 21
  %38 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 22
  %39 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 25
  %40 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 26
  %41 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 27
  %42 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 28
  %43 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 29
  %44 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 30
  %45 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 31
  %46 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 32
  %47 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 33
  %48 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 34
  %49 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 35
  %50 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %50, i8 0, i64 24, i1 false)
  %51 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %52 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %53 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %54 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %55 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 79
  %56 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 80
  %57 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83
  %58 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84
  %59 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85
  %60 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86
  %61 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87
  %62 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 88
  %63 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 89
  %64 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 90
  %65 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 91
  %66 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 92
  %67 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 93
  %68 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 94
  %69 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 95
  %70 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 96
  %71 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 97
  %72 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98
  %73 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99
  %74 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100
  %75 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101
  %76 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102
  %77 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 103
  %78 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 104
  %79 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 105
  %80 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 106
  %81 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 107
  %82 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 108
  %83 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 109
  %84 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 110
  %85 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 111
  %86 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 112
  %87 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 14
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(424) %34, i8 0, i64 424, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %87, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(96) %35, i8 0, i64 96, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(264) %39, i8 0, i64 264, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(144) %51, i8 0, i64 144, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(720) %57, i8 0, i64 720, i1 false)
  store i32 %4, ptr %0, align 8, !tbaa !646
  %88 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  store i32 %3, ptr %88, align 8, !tbaa !647
  %89 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 17
  store double 0.000000e+00, ptr %89, align 8, !tbaa !648
  %90 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 18
  store i32 1, ptr %90, align 8, !tbaa !649
  %91 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  store i32 0, ptr %91, align 4, !tbaa !650
  %92 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  store i32 1, ptr %92, align 8, !tbaa !651
  %93 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  store i64 0, ptr %93, align 8, !tbaa !543
  %94 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  store i64 0, ptr %94, align 8, !tbaa !652
  %95 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 11
  store i32 %8, ptr %95, align 4, !tbaa !653
  %96 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 13
  store i32 0, ptr %96, align 4, !tbaa !654
  %97 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 16
  %98 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 12
  store i32 0, ptr %98, align 8, !tbaa !655
  store float 1.000000e+00, ptr %97, align 8, !tbaa !656
  %99 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 60
  store double %5, ptr %99, align 8, !tbaa !657
  %100 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 61
  store double %6, ptr %100, align 8, !tbaa !658
  %101 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 37
  store i32 %7, ptr %101, align 4, !tbaa !640
  %102 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 39
  store i32 0, ptr %102, align 4, !tbaa !659
  %103 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 41
  store i32 0, ptr %103, align 4, !tbaa !660
  %104 = add nsw i32 %1, 1
  %105 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 40
  store i32 %104, ptr %105, align 8, !tbaa !661
  %106 = add nsw i32 %2, 1
  %107 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 42
  store i32 %106, ptr %107, align 8, !tbaa !662
  %108 = icmp eq i32 %7, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %10
  %110 = add nsw i32 %1, 2
  %111 = add nsw i32 %2, 2
  store i32 0, ptr %102, align 4, !tbaa !659
  store i32 0, ptr %103, align 4, !tbaa !660
  store i32 %104, ptr %105, align 8, !tbaa !661
  store i32 %106, ptr %107, align 8, !tbaa !662
  br label %112

112:                                              ; preds = %109, %10
  %113 = phi i32 [ %110, %109 ], [ %1, %10 ]
  %114 = phi i32 [ %111, %109 ], [ %2, %10 ]
  %115 = insertelement <2 x double> poison, double %5, i64 0
  %116 = shufflevector <2 x double> %115, <2 x double> poison, <2 x i32> zeroinitializer
  %117 = fmul <2 x double> %116, <double -5.000000e-01, double 5.000000e-01>
  %118 = sitofp i32 %113 to double
  %119 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 48
  %120 = insertelement <2 x double> poison, double %6, i64 0
  %121 = shufflevector <2 x double> %120, <2 x double> poison, <2 x i32> zeroinitializer
  %122 = fmul <2 x double> %121, <double -5.000000e-01, double 5.000000e-01>
  %123 = sitofp i32 %114 to double
  %124 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 50
  %125 = insertelement <2 x double> poison, double %118, i64 0
  %126 = shufflevector <2 x double> %125, <2 x double> poison, <2 x i32> zeroinitializer
  %127 = fmul <2 x double> %117, %126
  store <2 x double> %127, ptr %119, align 8, !tbaa !171
  %128 = insertelement <2 x double> poison, double %123, i64 0
  %129 = shufflevector <2 x double> %128, <2 x double> poison, <2 x i32> zeroinitializer
  %130 = fmul <2 x double> %122, %129
  store <2 x double> %130, ptr %124, align 8, !tbaa !171
  %131 = add nsw i32 %3, 1
  %132 = sext i32 %131 to i64
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %46, i64 noundef %132) #56
          to label %133 unwind label %163

133:                                              ; preds = %112
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %40, i64 noundef %132) #56
          to label %134 unwind label %163

134:                                              ; preds = %133
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %42, i64 noundef %132) #56
          to label %135 unwind label %163

135:                                              ; preds = %134
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %41, i64 noundef %132) #56
          to label %136 unwind label %163

136:                                              ; preds = %135
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %43, i64 noundef %132) #56
          to label %137 unwind label %163

137:                                              ; preds = %136
  invoke void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %47, i64 noundef %132) #56
          to label %138 unwind label %163

138:                                              ; preds = %137
  invoke void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %48, i64 noundef %132) #56
          to label %139 unwind label %163

139:                                              ; preds = %138
  %140 = load i32, ptr %102, align 4, !tbaa !659
  %141 = add nsw i32 %140, 1
  %142 = load ptr, ptr %40, align 8, !tbaa !65
  store i32 %141, ptr %142, align 4, !tbaa !68
  %143 = load i32, ptr %105, align 8, !tbaa !661
  %144 = add nsw i32 %143, -1
  %145 = load ptr, ptr %41, align 8, !tbaa !65
  store i32 %144, ptr %145, align 4, !tbaa !68
  %146 = load i32, ptr %103, align 4, !tbaa !660
  %147 = add nsw i32 %146, 1
  %148 = load ptr, ptr %42, align 8, !tbaa !65
  store i32 %147, ptr %148, align 4, !tbaa !68
  %149 = load i32, ptr %107, align 8, !tbaa !662
  %150 = add nsw i32 %149, -1
  %151 = load ptr, ptr %43, align 8, !tbaa !65
  store i32 %150, ptr %151, align 4, !tbaa !68
  %152 = load double, ptr %99, align 8, !tbaa !657
  %153 = load ptr, ptr %47, align 8, !tbaa !109
  store double %152, ptr %153, align 8, !tbaa !171
  %154 = load double, ptr %100, align 8, !tbaa !658
  %155 = load ptr, ptr %48, align 8, !tbaa !109
  store double %154, ptr %155, align 8, !tbaa !171
  %156 = load i32, ptr %88, align 8, !tbaa !647
  %157 = icmp slt i32 %156, 1
  br i1 %157, label %158, label %165

158:                                              ; preds = %165, %139
  %159 = phi i32 [ %156, %139 ], [ %195, %165 ]
  %160 = icmp eq i32 %131, 0
  br i1 %160, label %200, label %161

161:                                              ; preds = %158
  %162 = load ptr, ptr %46, align 8, !tbaa !65
  br label %215

163:                                              ; preds = %138, %137, %136, %135, %134, %133, %112
  %164 = landingpad { ptr, i32 }
          cleanup
  br label %292

165:                                              ; preds = %165, %139
  %166 = phi i64 [ %194, %165 ], [ 1, %139 ]
  %167 = add nsw i64 %166, -1
  %168 = getelementptr inbounds i32, ptr %142, i64 %167
  %169 = load i32, ptr %168, align 4, !tbaa !68
  %170 = shl nsw i32 %169, 1
  %171 = getelementptr inbounds i32, ptr %142, i64 %166
  store i32 %170, ptr %171, align 4, !tbaa !68
  %172 = getelementptr inbounds i32, ptr %145, i64 %167
  %173 = load i32, ptr %172, align 4, !tbaa !68
  %174 = shl nsw i32 %173, 1
  %175 = or i32 %174, 1
  %176 = getelementptr inbounds i32, ptr %145, i64 %166
  store i32 %175, ptr %176, align 4, !tbaa !68
  %177 = getelementptr inbounds i32, ptr %148, i64 %167
  %178 = load i32, ptr %177, align 4, !tbaa !68
  %179 = shl nsw i32 %178, 1
  %180 = getelementptr inbounds i32, ptr %148, i64 %166
  store i32 %179, ptr %180, align 4, !tbaa !68
  %181 = getelementptr inbounds i32, ptr %151, i64 %167
  %182 = load i32, ptr %181, align 4, !tbaa !68
  %183 = shl nsw i32 %182, 1
  %184 = or i32 %183, 1
  %185 = getelementptr inbounds i32, ptr %151, i64 %166
  store i32 %184, ptr %185, align 4, !tbaa !68
  %186 = getelementptr inbounds double, ptr %153, i64 %167
  %187 = load double, ptr %186, align 8, !tbaa !171
  %188 = fmul double %187, 5.000000e-01
  %189 = getelementptr inbounds double, ptr %153, i64 %166
  store double %188, ptr %189, align 8, !tbaa !171
  %190 = getelementptr inbounds double, ptr %155, i64 %167
  %191 = load double, ptr %190, align 8, !tbaa !171
  %192 = fmul double %191, 5.000000e-01
  %193 = getelementptr inbounds double, ptr %155, i64 %166
  store double %192, ptr %193, align 8, !tbaa !171
  %194 = add nuw nsw i64 %166, 1
  %195 = load i32, ptr %88, align 8, !tbaa !647
  %196 = sext i32 %195 to i64
  %197 = icmp slt i64 %166, %196
  br i1 %197, label %165, label %158, !llvm.loop !663

198:                                              ; preds = %215
  %199 = load i32, ptr %88, align 8, !tbaa !647
  br label %200

200:                                              ; preds = %198, %158
  %201 = phi i32 [ %199, %198 ], [ %159, %158 ]
  %202 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 38
  store i32 0, ptr %202, align 8, !tbaa !664
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11) #57
  store i32 0, ptr %11, align 16, !tbaa !68
  %203 = getelementptr inbounds i32, ptr %11, i64 1
  store i32 0, ptr %203, align 4, !tbaa !68
  %204 = getelementptr inbounds i32, ptr %11, i64 2
  %205 = load i32, ptr %105, align 8, !tbaa !661
  store i32 %205, ptr %204, align 8, !tbaa !68
  %206 = getelementptr inbounds i32, ptr %11, i64 3
  store i32 %205, ptr %206, align 4, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12) #57
  store i32 0, ptr %12, align 16, !tbaa !68
  %207 = getelementptr inbounds i32, ptr %12, i64 1
  %208 = load i32, ptr %107, align 8, !tbaa !662
  store i32 %208, ptr %207, align 4, !tbaa !68
  %209 = getelementptr inbounds i32, ptr %12, i64 2
  store i32 0, ptr %209, align 8, !tbaa !68
  %210 = getelementptr inbounds i32, ptr %12, i64 3
  store i32 %208, ptr %210, align 4, !tbaa !68
  %211 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %212 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2
  %213 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1
  %214 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 2
  br label %227

215:                                              ; preds = %215, %161
  %216 = phi i64 [ 0, %161 ], [ %221, %215 ]
  %217 = phi i32 [ 0, %161 ], [ %220, %215 ]
  %218 = shl i32 2, %217
  %219 = getelementptr inbounds i32, ptr %162, i64 %216
  store i32 %218, ptr %219, align 4, !tbaa !68
  %220 = add i32 %217, 1
  %221 = zext i32 %220 to i64
  %222 = icmp ult i64 %221, %132
  br i1 %222, label %215, label %198, !llvm.loop !665

223:                                              ; preds = %242
  %224 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 7
  store i8 1, ptr %224, align 8, !tbaa !666
  %225 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 8
  store i8 1, ptr %225, align 1, !tbaa !667
  %226 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %226, i8 0, i64 40, i1 false)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #57
  ret void

227:                                              ; preds = %242, %200
  %228 = phi i32 [ %201, %200 ], [ %243, %242 ]
  %229 = phi i32 [ %201, %200 ], [ %244, %242 ]
  %230 = phi i64 [ 0, %200 ], [ %245, %242 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #57
  %231 = getelementptr inbounds [4 x i32], ptr %12, i64 0, i64 %230
  %232 = load i32, ptr %231, align 4, !tbaa !68
  %233 = shl i32 2, %229
  %234 = mul nsw i32 %233, %232
  %235 = add nsw i32 %232, 1
  store i32 %234, ptr %13, align 4, !tbaa !68
  %236 = mul nsw i32 %233, %235
  %237 = icmp slt i32 %234, %236
  br i1 %237, label %238, label %242

238:                                              ; preds = %227
  %239 = getelementptr inbounds [4 x i32], ptr %11, i64 0, i64 %230
  %240 = load i32, ptr %239, align 4, !tbaa !68
  %241 = add nsw i32 %240, 1
  br label %247

242:                                              ; preds = %260, %227
  %243 = phi i32 [ %228, %227 ], [ %262, %260 ]
  %244 = phi i32 [ %229, %227 ], [ %262, %260 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #57
  %245 = add nuw nsw i64 %230, 1
  %246 = icmp eq i64 %245, 4
  br i1 %246, label %223, label %227, !llvm.loop !668

247:                                              ; preds = %260, %238
  %248 = phi i32 [ %228, %238 ], [ %262, %260 ]
  %249 = phi i32 [ %234, %238 ], [ %264, %260 ]
  %250 = phi i32 [ %229, %238 ], [ %262, %260 ]
  %251 = phi i32 [ %233, %238 ], [ %261, %260 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #57
  %252 = mul nsw i32 %240, %251
  store i32 %252, ptr %14, align 4, !tbaa !68
  %253 = shl i32 2, %250
  %254 = mul nsw i32 %253, %241
  %255 = icmp slt i32 %252, %254
  br i1 %255, label %267, label %256

256:                                              ; preds = %247
  %257 = shl i32 2, %248
  br label %260

258:                                              ; preds = %283
  %.lcssa1 = phi i32 [ %286, %283 ]
  %.lcssa = phi i32 [ %287, %283 ]
  %259 = load i32, ptr %13, align 4, !tbaa !68
  br label %260

260:                                              ; preds = %258, %256
  %261 = phi i32 [ %257, %256 ], [ %.lcssa, %258 ]
  %262 = phi i32 [ %248, %256 ], [ %.lcssa1, %258 ]
  %263 = phi i32 [ %249, %256 ], [ %259, %258 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #57
  %264 = add nsw i32 %263, 1
  store i32 %264, ptr %13, align 4, !tbaa !68
  %265 = mul nsw i32 %261, %235
  %266 = icmp slt i32 %264, %265
  br i1 %266, label %247, label %242, !llvm.loop !669

267:                                              ; preds = %283, %247
  %268 = phi i32 [ %285, %283 ], [ %252, %247 ]
  %269 = load ptr, ptr %211, align 8, !tbaa !29
  %270 = load ptr, ptr %212, align 8, !tbaa !67
  %271 = icmp eq ptr %269, %270
  br i1 %271, label %274, label %272

272:                                              ; preds = %267
  store i32 %268, ptr %269, align 4, !tbaa !68
  %273 = getelementptr inbounds i32, ptr %269, i64 1
  store ptr %273, ptr %211, align 8, !tbaa !70
  br label %275

274:                                              ; preds = %267
  invoke void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr %269, ptr noundef nonnull align 4 dereferenceable(4) %14) #56
          to label %275 unwind label %290

275:                                              ; preds = %274, %272
  %276 = load ptr, ptr %213, align 8, !tbaa !29
  %277 = load ptr, ptr %214, align 8, !tbaa !67
  %278 = icmp eq ptr %276, %277
  br i1 %278, label %282, label %279

279:                                              ; preds = %275
  %280 = load i32, ptr %13, align 4, !tbaa !68
  store i32 %280, ptr %276, align 4, !tbaa !68
  %281 = getelementptr inbounds i32, ptr %276, i64 1
  store ptr %281, ptr %213, align 8, !tbaa !70
  br label %283

282:                                              ; preds = %275
  invoke void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %36, ptr %276, ptr noundef nonnull align 4 dereferenceable(4) %13) #56
          to label %283 unwind label %290

283:                                              ; preds = %282, %279
  %284 = load i32, ptr %14, align 4, !tbaa !68
  %285 = add nsw i32 %284, 1
  store i32 %285, ptr %14, align 4, !tbaa !68
  %286 = load i32, ptr %88, align 8, !tbaa !647
  %287 = shl i32 2, %286
  %288 = mul nsw i32 %287, %241
  %289 = icmp slt i32 %285, %288
  br i1 %289, label %267, label %258, !llvm.loop !670

290:                                              ; preds = %282, %274
  %291 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #57
  br label %292

292:                                              ; preds = %290, %163
  %293 = phi { ptr, i32 } [ %291, %290 ], [ %164, %163 ]
  %294 = load ptr, ptr %86, align 8, !tbaa !65
  %295 = icmp eq ptr %294, null
  br i1 %295, label %297, label %296

296:                                              ; preds = %292
  call void @_ZdlPv(ptr noundef nonnull %294) #58
  br label %297

297:                                              ; preds = %296, %292
  %298 = load ptr, ptr %85, align 8, !tbaa !65
  %299 = icmp eq ptr %298, null
  br i1 %299, label %301, label %300

300:                                              ; preds = %297
  call void @_ZdlPv(ptr noundef nonnull %298) #58
  br label %301

301:                                              ; preds = %300, %297
  %302 = load ptr, ptr %84, align 8, !tbaa !65
  %303 = icmp eq ptr %302, null
  br i1 %303, label %305, label %304

304:                                              ; preds = %301
  call void @_ZdlPv(ptr noundef nonnull %302) #58
  br label %305

305:                                              ; preds = %304, %301
  %306 = load ptr, ptr %83, align 8, !tbaa !65
  %307 = icmp eq ptr %306, null
  br i1 %307, label %309, label %308

308:                                              ; preds = %305
  call void @_ZdlPv(ptr noundef nonnull %306) #58
  br label %309

309:                                              ; preds = %308, %305
  %310 = load ptr, ptr %82, align 8, !tbaa !65
  %311 = icmp eq ptr %310, null
  br i1 %311, label %313, label %312

312:                                              ; preds = %309
  call void @_ZdlPv(ptr noundef nonnull %310) #58
  br label %313

313:                                              ; preds = %312, %309
  %314 = load ptr, ptr %81, align 8, !tbaa !65
  %315 = icmp eq ptr %314, null
  br i1 %315, label %317, label %316

316:                                              ; preds = %313
  call void @_ZdlPv(ptr noundef nonnull %314) #58
  br label %317

317:                                              ; preds = %316, %313
  %318 = load ptr, ptr %80, align 8, !tbaa !65
  %319 = icmp eq ptr %318, null
  br i1 %319, label %321, label %320

320:                                              ; preds = %317
  call void @_ZdlPv(ptr noundef nonnull %318) #58
  br label %321

321:                                              ; preds = %320, %317
  %322 = load ptr, ptr %79, align 8, !tbaa !65
  %323 = icmp eq ptr %322, null
  br i1 %323, label %325, label %324

324:                                              ; preds = %321
  call void @_ZdlPv(ptr noundef nonnull %322) #58
  br label %325

325:                                              ; preds = %324, %321
  %326 = load ptr, ptr %78, align 8, !tbaa !65
  %327 = icmp eq ptr %326, null
  br i1 %327, label %329, label %328

328:                                              ; preds = %325
  call void @_ZdlPv(ptr noundef nonnull %326) #58
  br label %329

329:                                              ; preds = %328, %325
  %330 = load ptr, ptr %77, align 8, !tbaa !65
  %331 = icmp eq ptr %330, null
  br i1 %331, label %333, label %332

332:                                              ; preds = %329
  call void @_ZdlPv(ptr noundef nonnull %330) #58
  br label %333

333:                                              ; preds = %332, %329
  %334 = load ptr, ptr %76, align 8, !tbaa !65
  %335 = icmp eq ptr %334, null
  br i1 %335, label %337, label %336

336:                                              ; preds = %333
  call void @_ZdlPv(ptr noundef nonnull %334) #58
  br label %337

337:                                              ; preds = %336, %333
  %338 = load ptr, ptr %75, align 8, !tbaa !65
  %339 = icmp eq ptr %338, null
  br i1 %339, label %341, label %340

340:                                              ; preds = %337
  call void @_ZdlPv(ptr noundef nonnull %338) #58
  br label %341

341:                                              ; preds = %340, %337
  %342 = load ptr, ptr %74, align 8, !tbaa !65
  %343 = icmp eq ptr %342, null
  br i1 %343, label %345, label %344

344:                                              ; preds = %341
  call void @_ZdlPv(ptr noundef nonnull %342) #58
  br label %345

345:                                              ; preds = %344, %341
  %346 = load ptr, ptr %73, align 8, !tbaa !65
  %347 = icmp eq ptr %346, null
  br i1 %347, label %349, label %348

348:                                              ; preds = %345
  call void @_ZdlPv(ptr noundef nonnull %346) #58
  br label %349

349:                                              ; preds = %348, %345
  %350 = load ptr, ptr %72, align 8, !tbaa !65
  %351 = icmp eq ptr %350, null
  br i1 %351, label %353, label %352

352:                                              ; preds = %349
  call void @_ZdlPv(ptr noundef nonnull %350) #58
  br label %353

353:                                              ; preds = %352, %349
  %354 = load ptr, ptr %71, align 8, !tbaa !65
  %355 = icmp eq ptr %354, null
  br i1 %355, label %357, label %356

356:                                              ; preds = %353
  call void @_ZdlPv(ptr noundef nonnull %354) #58
  br label %357

357:                                              ; preds = %356, %353
  %358 = load ptr, ptr %70, align 8, !tbaa !65
  %359 = icmp eq ptr %358, null
  br i1 %359, label %361, label %360

360:                                              ; preds = %357
  call void @_ZdlPv(ptr noundef nonnull %358) #58
  br label %361

361:                                              ; preds = %360, %357
  %362 = load ptr, ptr %69, align 8, !tbaa !65
  %363 = icmp eq ptr %362, null
  br i1 %363, label %365, label %364

364:                                              ; preds = %361
  call void @_ZdlPv(ptr noundef nonnull %362) #58
  br label %365

365:                                              ; preds = %364, %361
  %366 = load ptr, ptr %68, align 8, !tbaa !65
  %367 = icmp eq ptr %366, null
  br i1 %367, label %369, label %368

368:                                              ; preds = %365
  call void @_ZdlPv(ptr noundef nonnull %366) #58
  br label %369

369:                                              ; preds = %368, %365
  %370 = load ptr, ptr %67, align 8, !tbaa !65
  %371 = icmp eq ptr %370, null
  br i1 %371, label %373, label %372

372:                                              ; preds = %369
  call void @_ZdlPv(ptr noundef nonnull %370) #58
  br label %373

373:                                              ; preds = %372, %369
  %374 = load ptr, ptr %66, align 8, !tbaa !65
  %375 = icmp eq ptr %374, null
  br i1 %375, label %377, label %376

376:                                              ; preds = %373
  call void @_ZdlPv(ptr noundef nonnull %374) #58
  br label %377

377:                                              ; preds = %376, %373
  %378 = load ptr, ptr %65, align 8, !tbaa !65
  %379 = icmp eq ptr %378, null
  br i1 %379, label %381, label %380

380:                                              ; preds = %377
  call void @_ZdlPv(ptr noundef nonnull %378) #58
  br label %381

381:                                              ; preds = %380, %377
  %382 = load ptr, ptr %64, align 8, !tbaa !65
  %383 = icmp eq ptr %382, null
  br i1 %383, label %385, label %384

384:                                              ; preds = %381
  call void @_ZdlPv(ptr noundef nonnull %382) #58
  br label %385

385:                                              ; preds = %384, %381
  %386 = load ptr, ptr %63, align 8, !tbaa !65
  %387 = icmp eq ptr %386, null
  br i1 %387, label %389, label %388

388:                                              ; preds = %385
  call void @_ZdlPv(ptr noundef nonnull %386) #58
  br label %389

389:                                              ; preds = %388, %385
  %390 = load ptr, ptr %62, align 8, !tbaa !65
  %391 = icmp eq ptr %390, null
  br i1 %391, label %393, label %392

392:                                              ; preds = %389
  call void @_ZdlPv(ptr noundef nonnull %390) #58
  br label %393

393:                                              ; preds = %392, %389
  %394 = load ptr, ptr %61, align 8, !tbaa !65
  %395 = icmp eq ptr %394, null
  br i1 %395, label %397, label %396

396:                                              ; preds = %393
  call void @_ZdlPv(ptr noundef nonnull %394) #58
  br label %397

397:                                              ; preds = %396, %393
  %398 = load ptr, ptr %60, align 8, !tbaa !65
  %399 = icmp eq ptr %398, null
  br i1 %399, label %401, label %400

400:                                              ; preds = %397
  call void @_ZdlPv(ptr noundef nonnull %398) #58
  br label %401

401:                                              ; preds = %400, %397
  %402 = load ptr, ptr %59, align 8, !tbaa !65
  %403 = icmp eq ptr %402, null
  br i1 %403, label %405, label %404

404:                                              ; preds = %401
  call void @_ZdlPv(ptr noundef nonnull %402) #58
  br label %405

405:                                              ; preds = %404, %401
  %406 = load ptr, ptr %58, align 8, !tbaa !65
  %407 = icmp eq ptr %406, null
  br i1 %407, label %409, label %408

408:                                              ; preds = %405
  call void @_ZdlPv(ptr noundef nonnull %406) #58
  br label %409

409:                                              ; preds = %408, %405
  %410 = load ptr, ptr %57, align 8, !tbaa !65
  %411 = icmp eq ptr %410, null
  br i1 %411, label %413, label %412

412:                                              ; preds = %409
  call void @_ZdlPv(ptr noundef nonnull %410) #58
  br label %413

413:                                              ; preds = %412, %409
  %414 = load ptr, ptr %56, align 8, !tbaa !109
  %415 = icmp eq ptr %414, null
  br i1 %415, label %417, label %416

416:                                              ; preds = %413
  call void @_ZdlPv(ptr noundef nonnull %414) #58
  br label %417

417:                                              ; preds = %416, %413
  %418 = load ptr, ptr %55, align 8, !tbaa !109
  %419 = icmp eq ptr %418, null
  br i1 %419, label %421, label %420

420:                                              ; preds = %417
  call void @_ZdlPv(ptr noundef nonnull %418) #58
  br label %421

421:                                              ; preds = %420, %417
  %422 = load ptr, ptr %54, align 8, !tbaa !109
  %423 = icmp eq ptr %422, null
  br i1 %423, label %425, label %424

424:                                              ; preds = %421
  call void @_ZdlPv(ptr noundef nonnull %422) #58
  br label %425

425:                                              ; preds = %424, %421
  %426 = load ptr, ptr %53, align 8, !tbaa !109
  %427 = icmp eq ptr %426, null
  br i1 %427, label %429, label %428

428:                                              ; preds = %425
  call void @_ZdlPv(ptr noundef nonnull %426) #58
  br label %429

429:                                              ; preds = %428, %425
  %430 = load ptr, ptr %52, align 8, !tbaa !109
  %431 = icmp eq ptr %430, null
  br i1 %431, label %433, label %432

432:                                              ; preds = %429
  call void @_ZdlPv(ptr noundef nonnull %430) #58
  br label %433

433:                                              ; preds = %432, %429
  %434 = load ptr, ptr %51, align 8, !tbaa !109
  %435 = icmp eq ptr %434, null
  br i1 %435, label %437, label %436

436:                                              ; preds = %433
  call void @_ZdlPv(ptr noundef nonnull %434) #58
  br label %437

437:                                              ; preds = %436, %433
  %438 = load ptr, ptr %50, align 8, !tbaa !65
  %439 = icmp eq ptr %438, null
  br i1 %439, label %441, label %440

440:                                              ; preds = %437
  call void @_ZdlPv(ptr noundef nonnull %438) #58
  br label %441

441:                                              ; preds = %440, %437
  %442 = load ptr, ptr %49, align 8, !tbaa !109
  %443 = icmp eq ptr %442, null
  br i1 %443, label %445, label %444

444:                                              ; preds = %441
  call void @_ZdlPv(ptr noundef nonnull %442) #58
  br label %445

445:                                              ; preds = %444, %441
  %446 = load ptr, ptr %48, align 8, !tbaa !109
  %447 = icmp eq ptr %446, null
  br i1 %447, label %449, label %448

448:                                              ; preds = %445
  call void @_ZdlPv(ptr noundef nonnull %446) #58
  br label %449

449:                                              ; preds = %448, %445
  %450 = load ptr, ptr %47, align 8, !tbaa !109
  %451 = icmp eq ptr %450, null
  br i1 %451, label %453, label %452

452:                                              ; preds = %449
  call void @_ZdlPv(ptr noundef nonnull %450) #58
  br label %453

453:                                              ; preds = %452, %449
  %454 = load ptr, ptr %46, align 8, !tbaa !65
  %455 = icmp eq ptr %454, null
  br i1 %455, label %457, label %456

456:                                              ; preds = %453
  call void @_ZdlPv(ptr noundef nonnull %454) #58
  br label %457

457:                                              ; preds = %456, %453
  %458 = load ptr, ptr %45, align 8, !tbaa !65
  %459 = icmp eq ptr %458, null
  br i1 %459, label %461, label %460

460:                                              ; preds = %457
  call void @_ZdlPv(ptr noundef nonnull %458) #58
  br label %461

461:                                              ; preds = %460, %457
  %462 = load ptr, ptr %44, align 8, !tbaa !65
  %463 = icmp eq ptr %462, null
  br i1 %463, label %465, label %464

464:                                              ; preds = %461
  call void @_ZdlPv(ptr noundef nonnull %462) #58
  br label %465

465:                                              ; preds = %464, %461
  %466 = load ptr, ptr %43, align 8, !tbaa !65
  %467 = icmp eq ptr %466, null
  br i1 %467, label %469, label %468

468:                                              ; preds = %465
  call void @_ZdlPv(ptr noundef nonnull %466) #58
  br label %469

469:                                              ; preds = %468, %465
  %470 = load ptr, ptr %42, align 8, !tbaa !65
  %471 = icmp eq ptr %470, null
  br i1 %471, label %473, label %472

472:                                              ; preds = %469
  call void @_ZdlPv(ptr noundef nonnull %470) #58
  br label %473

473:                                              ; preds = %472, %469
  %474 = load ptr, ptr %41, align 8, !tbaa !65
  %475 = icmp eq ptr %474, null
  br i1 %475, label %477, label %476

476:                                              ; preds = %473
  call void @_ZdlPv(ptr noundef nonnull %474) #58
  br label %477

477:                                              ; preds = %476, %473
  %478 = load ptr, ptr %40, align 8, !tbaa !65
  %479 = icmp eq ptr %478, null
  br i1 %479, label %481, label %480

480:                                              ; preds = %477
  call void @_ZdlPv(ptr noundef nonnull %478) #58
  br label %481

481:                                              ; preds = %480, %477
  %482 = load ptr, ptr %39, align 8, !tbaa !65
  %483 = icmp eq ptr %482, null
  br i1 %483, label %485, label %484

484:                                              ; preds = %481
  call void @_ZdlPv(ptr noundef nonnull %482) #58
  br label %485

485:                                              ; preds = %484, %481
  %486 = load ptr, ptr %38, align 8, !tbaa !65
  %487 = icmp eq ptr %486, null
  br i1 %487, label %489, label %488

488:                                              ; preds = %485
  call void @_ZdlPv(ptr noundef nonnull %486) #58
  br label %489

489:                                              ; preds = %488, %485
  %490 = load ptr, ptr %37, align 8, !tbaa !65
  %491 = icmp eq ptr %490, null
  br i1 %491, label %493, label %492

492:                                              ; preds = %489
  call void @_ZdlPv(ptr noundef nonnull %490) #58
  br label %493

493:                                              ; preds = %492, %489
  %494 = load ptr, ptr %36, align 8, !tbaa !65
  %495 = icmp eq ptr %494, null
  br i1 %495, label %497, label %496

496:                                              ; preds = %493
  call void @_ZdlPv(ptr noundef nonnull %494) #58
  br label %497

497:                                              ; preds = %496, %493
  %498 = load ptr, ptr %35, align 8, !tbaa !65
  %499 = icmp eq ptr %498, null
  br i1 %499, label %501, label %500

500:                                              ; preds = %497
  call void @_ZdlPv(ptr noundef nonnull %498) #58
  br label %501

501:                                              ; preds = %500, %497
  %502 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2
  %503 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %504 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 2, i32 1
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %504) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %502) #59
  %505 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %505) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %503) #59
  resume { ptr, i32 } %293
}

; Function Attrs: optsize uwtable
define internal void @_ZN4Mesh4initEiid16partition_methodi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %1, i32 noundef %2, double noundef %3, i32 noundef %4, i32 noundef %5) #6 align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::vector", align 8
  %9 = alloca %"class.std::ios_base::Init", align 1
  %10 = alloca %"class.std::vector", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::ios_base::Init", align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %class.MallocPlus, align 8
  %16 = alloca %"class.std::vector", align 8
  %17 = alloca [4 x i32], align 16
  %18 = alloca [4 x i32], align 16
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %22 = load i64, ptr %21, align 8, !tbaa !543
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %48, label %24

24:                                               ; preds = %6
  %25 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 21
  %26 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  %27 = load i32, ptr %26, align 8, !tbaa !651
  %28 = sext i32 %27 to i64
  tail call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %25, i64 noundef %28) #56
  %29 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 22
  %30 = load i32, ptr %26, align 8, !tbaa !651
  %31 = sext i32 %30 to i64
  tail call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %29, i64 noundef %31) #56
  %32 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 11
  %33 = load i32, ptr %32, align 4, !tbaa !653
  %34 = icmp ne i32 %33, 0
  %35 = load i32, ptr %26, align 8
  %36 = icmp sgt i32 %35, 1
  %37 = select i1 %34, i1 %36, i1 false
  br i1 %37, label %44, label %38

38:                                               ; preds = %24
  %39 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 13
  store i32 0, ptr %39, align 4, !tbaa !654
  %40 = load i64, ptr %21, align 8, !tbaa !543
  %41 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 46
  store i64 %40, ptr %41, align 8, !tbaa !671
  %42 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 25
  tail call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %42, i64 noundef %40) #56
  %43 = load i32, ptr %26, align 8, !tbaa !651
  tail call void @_ZN4Mesh17calc_distributionEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %43) #56
  br label %44

44:                                               ; preds = %38, %24
  %45 = load i64, ptr %21, align 8, !tbaa !543
  tail call void @_ZN4Mesh13calc_celltypeEm(ptr noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %45) #56
  %46 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %47 = load i32, ptr %46, align 8, !tbaa !647
  br label %326

48:                                               ; preds = %6
  %49 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 37
  %50 = load i32, ptr %49, align 4, !tbaa !640
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %48
  %53 = add nsw i32 %1, 1
  %54 = add nsw i32 %2, 1
  %55 = add nsw i32 %1, 2
  %56 = add nsw i32 %2, 2
  br label %57

57:                                               ; preds = %52, %48
  %58 = phi i32 [ %54, %52 ], [ %2, %48 ]
  %59 = phi i32 [ %55, %52 ], [ %1, %48 ]
  %60 = phi i32 [ %56, %52 ], [ %2, %48 ]
  %61 = phi i32 [ %53, %52 ], [ %1, %48 ]
  %62 = phi i32 [ 0, %52 ], [ 1, %48 ]
  %63 = load i32, ptr %0, align 8, !tbaa !646
  %64 = icmp eq i32 %63, 2
  %65 = mul nsw i32 %60, %59
  %66 = shl nsw i32 %50, 2
  %67 = select i1 %64, i32 %66, i32 0
  %68 = sub nsw i32 %65, %67
  %69 = sext i32 %68 to i64
  store i64 %69, ptr %21, align 8, !tbaa !543
  %70 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 13
  store i32 0, ptr %70, align 4, !tbaa !654
  %71 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 11
  %72 = load i32, ptr %71, align 4, !tbaa !653
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %135, label %74

74:                                               ; preds = %57
  %75 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 46
  store i64 %69, ptr %75, align 8, !tbaa !671
  %76 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 21
  %77 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  %78 = load i32, ptr %77, align 8, !tbaa !651
  %79 = sext i32 %78 to i64
  tail call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %76, i64 noundef %79) #56
  %80 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 22
  %81 = load i32, ptr %77, align 8, !tbaa !651
  %82 = sext i32 %81 to i64
  tail call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %80, i64 noundef %82) #56
  %83 = load i32, ptr %77, align 8, !tbaa !651
  %84 = icmp sgt i32 %83, 0
  %85 = load ptr, ptr %76, align 8, !tbaa !65
  br i1 %84, label %86, label %88

86:                                               ; preds = %74
  %87 = load i64, ptr %75, align 8, !tbaa !671
  br label %92

88:                                               ; preds = %109, %74
  %89 = load ptr, ptr %80, align 8, !tbaa !65
  store i32 0, ptr %89, align 4, !tbaa !68
  %90 = load i32, ptr %77, align 8, !tbaa !651
  %91 = icmp sgt i32 %90, 1
  br i1 %91, label %123, label %114

92:                                               ; preds = %109, %86
  %93 = phi i64 [ 0, %86 ], [ %112, %109 ]
  %94 = phi i32 [ %83, %86 ], [ %111, %109 ]
  %95 = sext i32 %94 to i64
  %96 = udiv i64 %87, %95
  %97 = trunc i64 %96 to i32
  %98 = getelementptr inbounds i32, ptr %85, i64 %93
  store i32 %97, ptr %98, align 4, !tbaa !68
  %99 = load i32, ptr %77, align 8, !tbaa !651
  %100 = sext i32 %99 to i64
  %101 = urem i64 %87, %100
  %102 = shl i64 %101, 32
  %103 = ashr exact i64 %102, 32
  %104 = icmp slt i64 %93, %103
  br i1 %104, label %105, label %109

105:                                              ; preds = %92
  %106 = add nsw i32 %97, 1
  store i32 %106, ptr %98, align 4, !tbaa !68
  %107 = load i32, ptr %77, align 8, !tbaa !651
  %108 = sext i32 %107 to i64
  br label %109

109:                                              ; preds = %105, %92
  %110 = phi i64 [ %100, %92 ], [ %108, %105 ]
  %111 = phi i32 [ %99, %92 ], [ %107, %105 ]
  %112 = add nuw nsw i64 %93, 1
  %113 = icmp slt i64 %112, %110
  br i1 %113, label %92, label %88, !llvm.loop !672

114:                                              ; preds = %123, %88
  %115 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %116 = load i32, ptr %115, align 4, !tbaa !650
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, ptr %85, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !68
  %120 = sext i32 %119 to i64
  store i64 %120, ptr %21, align 8, !tbaa !543
  %121 = getelementptr inbounds i32, ptr %89, i64 %117
  %122 = load i32, ptr %121, align 4, !tbaa !68
  store i32 %122, ptr %70, align 4, !tbaa !654
  br label %135

123:                                              ; preds = %123, %88
  %124 = phi i32 [ %129, %123 ], [ 0, %88 ]
  %125 = phi i64 [ %131, %123 ], [ 1, %88 ]
  %126 = add nsw i64 %125, -1
  %127 = getelementptr inbounds i32, ptr %85, i64 %126
  %128 = load i32, ptr %127, align 4, !tbaa !68
  %129 = add nsw i32 %128, %124
  %130 = getelementptr inbounds i32, ptr %89, i64 %125
  store i32 %129, ptr %130, align 4, !tbaa !68
  %131 = add nuw nsw i64 %125, 1
  %132 = load i32, ptr %77, align 8, !tbaa !651
  %133 = sext i32 %132 to i64
  %134 = icmp slt i64 %131, %133
  br i1 %134, label %123, label %114, !llvm.loop !673

135:                                              ; preds = %114, %57
  %136 = phi i64 [ %120, %114 ], [ %69, %57 ]
  tail call void @_ZN4Mesh8allocateEm(ptr noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %136) #56
  %137 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63
  %138 = load i64, ptr %21, align 8, !tbaa !543
  tail call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %137, i64 noundef %138) #56
  %139 = icmp sgt i32 %62, %58
  br i1 %139, label %158, label %140

140:                                              ; preds = %135
  %141 = icmp sgt i32 %62, %61
  %142 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %143 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %144 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  br label %145

145:                                              ; preds = %184, %140
  %146 = phi i32 [ %62, %140 ], [ %186, %184 ]
  %147 = phi i32 [ 0, %140 ], [ %185, %184 ]
  br i1 %141, label %184, label %148

148:                                              ; preds = %145
  %149 = icmp eq i32 %146, 0
  %150 = icmp eq i32 %146, %58
  %151 = select i1 %149, i1 true, i1 %150
  %152 = load i64, ptr %21, align 8
  %153 = trunc i64 %152 to i32
  %154 = load ptr, ptr %137, align 8
  %155 = load ptr, ptr %142, align 8
  %156 = load ptr, ptr %143, align 8
  %157 = load ptr, ptr %144, align 8
  br label %188

158:                                              ; preds = %184, %135
  %159 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  %160 = load i32, ptr %159, align 8, !tbaa !651
  tail call void @_ZN4Mesh15partition_cellsEiRSt6vectorIiSaIiEE16partition_method(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %160, ptr noundef nonnull align 8 dereferenceable(24) %137, i32 noundef %4) #56
  %161 = load i64, ptr %21, align 8, !tbaa !543
  tail call void @_ZN4Mesh13calc_celltypeEm(ptr noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %161) #56
  tail call void @_ZN4Mesh24calc_spatial_coordinatesEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef 0) #56
  %162 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %163 = load i32, ptr %162, align 8, !tbaa !647
  %164 = icmp slt i32 %163, 1
  br i1 %164, label %222, label %165

165:                                              ; preds = %158
  %166 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  %167 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 24
  %168 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %169 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %170 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %171 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %172 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %173 = getelementptr inbounds i8, ptr %15, i64 8
  %174 = getelementptr inbounds i8, ptr %15, i64 16
  %175 = getelementptr inbounds i8, ptr %15, i64 24
  %176 = getelementptr inbounds i8, ptr %15, i64 32
  %177 = getelementptr inbounds i8, ptr %15, i64 40
  %178 = getelementptr inbounds %class.MallocPlus, ptr %15, i64 0, i32 1, i32 0, i32 0, i32 1
  %179 = getelementptr inbounds %class.MallocPlus, ptr %15, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %180 = getelementptr inbounds %class.MallocPlus, ptr %15, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2
  %181 = getelementptr inbounds %class.MallocPlus, ptr %15, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3
  %182 = getelementptr inbounds %class.MallocPlus, ptr %15, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %183 = getelementptr inbounds %class.MallocPlus, ptr %15, i64 0, i32 1
  br label %232

184:                                              ; preds = %218, %145
  %185 = phi i32 [ %147, %145 ], [ %219, %218 ]
  %186 = add nuw i32 %146, 1
  %187 = icmp eq i32 %146, %58
  br i1 %187, label %158, label %145, !llvm.loop !674

188:                                              ; preds = %218, %148
  %189 = phi i32 [ %62, %148 ], [ %220, %218 ]
  %190 = phi i32 [ %147, %148 ], [ %219, %218 ]
  %191 = load i32, ptr %49, align 4, !tbaa !640
  %192 = icmp ne i32 %191, 0
  %193 = icmp eq i32 %189, 0
  %194 = and i1 %193, %192
  %195 = select i1 %194, i1 %151, i1 false
  br i1 %195, label %218, label %196

196:                                              ; preds = %188
  %197 = icmp eq i32 %189, %61
  %198 = and i1 %149, %197
  %199 = select i1 %192, i1 %198, i1 false
  %200 = select i1 %192, i1 %197, i1 false
  %201 = select i1 %200, i1 %150, i1 false
  %202 = select i1 %199, i1 true, i1 %201
  br i1 %202, label %218, label %203

203:                                              ; preds = %196
  %204 = load i32, ptr %70, align 4, !tbaa !654
  %205 = icmp sge i32 %190, %204
  %206 = add i32 %204, %153
  %207 = icmp slt i32 %190, %206
  %208 = select i1 %205, i1 %207, i1 false
  br i1 %208, label %209, label %216

209:                                              ; preds = %203
  %210 = sub nsw i32 %190, %204
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i32, ptr %154, i64 %211
  store i32 %190, ptr %212, align 4, !tbaa !68
  %213 = getelementptr inbounds i32, ptr %155, i64 %211
  store i32 %189, ptr %213, align 4, !tbaa !68
  %214 = getelementptr inbounds i32, ptr %156, i64 %211
  store i32 %146, ptr %214, align 4, !tbaa !68
  %215 = getelementptr inbounds i32, ptr %157, i64 %211
  store i32 0, ptr %215, align 4, !tbaa !68
  br label %216

216:                                              ; preds = %209, %203
  %217 = add nsw i32 %190, 1
  br label %218

218:                                              ; preds = %216, %196, %188
  %219 = phi i32 [ %190, %188 ], [ %217, %216 ], [ %190, %196 ]
  %220 = add nuw i32 %189, 1
  %221 = icmp eq i32 %189, %61
  br i1 %221, label %184, label %188, !llvm.loop !675

222:                                              ; preds = %294, %158
  %223 = phi i32 [ %163, %158 ], [ %296, %294 ]
  %224 = load ptr, ptr %137, align 8, !tbaa !65
  %225 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63, i32 0, i32 0, i32 0, i32 1
  %226 = load ptr, ptr %225, align 8, !tbaa !70
  %227 = icmp eq ptr %226, %224
  br i1 %227, label %229, label %228

228:                                              ; preds = %222
  store ptr %224, ptr %225, align 8, !tbaa !70
  br label %229

229:                                              ; preds = %228, %222
  %230 = load i64, ptr %21, align 8, !tbaa !543
  %231 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  store i64 %230, ptr %231, align 8, !tbaa !652
  br label %326

232:                                              ; preds = %294, %165
  %233 = phi i32 [ 1, %165 ], [ %295, %294 ]
  %234 = load i64, ptr %21, align 8, !tbaa !543
  store i64 %234, ptr %166, align 8, !tbaa !652
  call void @_ZN4Mesh20calc_neighbors_localEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) #56
  call void @_ZN4Mesh12kdtree_setupEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) #56
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #57
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #57
  %235 = load i64, ptr %21, align 8, !tbaa !543
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %9) #57
  call void @_ZNSt6vectorIiSaIiEEC2EmRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %8, i64 noundef %235, ptr noundef nonnull align 1 dereferenceable(1) %9) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9) #57
  %236 = load ptr, ptr %8, align 8, !tbaa !65
  %237 = load i64, ptr %21, align 8, !tbaa !543
  %238 = trunc i64 %237 to i32
  %239 = load ptr, ptr %168, align 8, !tbaa !109
  %240 = load ptr, ptr %169, align 8, !tbaa !109
  %241 = load ptr, ptr %170, align 8, !tbaa !109
  %242 = load ptr, ptr %171, align 8, !tbaa !109
  invoke void @KDTree_QueryCircleIntersect_Double(ptr noundef nonnull %167, ptr noundef nonnull %7, ptr noundef nonnull %236, double noundef %3, i32 noundef %238, ptr noundef nonnull %239, ptr noundef nonnull %240, ptr noundef nonnull %241, ptr noundef nonnull %242) #56
          to label %243 unwind label %253

243:                                              ; preds = %232
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #57
  %244 = load i64, ptr %166, align 8, !tbaa !652
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #57
  store i32 0, ptr %11, align 4, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %12) #57
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %10, i64 noundef %244, ptr noundef nonnull align 4 dereferenceable(4) %11, ptr noundef nonnull align 1 dereferenceable(1) %12) #56
          to label %245 unwind label %255

245:                                              ; preds = %243
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %12) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #57
  %246 = load i32, ptr %7, align 4, !tbaa !68
  %247 = icmp sgt i32 %246, 0
  br i1 %247, label %248, label %252

248:                                              ; preds = %245
  %249 = load ptr, ptr %172, align 8, !tbaa !639
  %250 = load ptr, ptr %8, align 8, !tbaa !65
  %251 = load ptr, ptr %10, align 8
  br label %257

252:                                              ; preds = %270, %245
  invoke void @KDTree_Destroy(ptr noundef nonnull %167) #56
          to label %275 unwind label %298

253:                                              ; preds = %232
  %254 = landingpad { ptr, i32 }
          cleanup
  br label %320

255:                                              ; preds = %243
  %256 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %12) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #57
  br label %318

257:                                              ; preds = %270, %248
  %258 = phi i32 [ %246, %248 ], [ %271, %270 ]
  %259 = phi i64 [ 0, %248 ], [ %272, %270 ]
  %260 = getelementptr inbounds i32, ptr %250, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !68
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds i32, ptr %249, i64 %262
  %264 = load i32, ptr %263, align 4, !tbaa !68
  %265 = load i32, ptr %162, align 8, !tbaa !647
  %266 = icmp slt i32 %264, %265
  br i1 %266, label %267, label %270

267:                                              ; preds = %257
  %268 = getelementptr inbounds i32, ptr %251, i64 %262
  store i32 1, ptr %268, align 4, !tbaa !68
  %269 = load i32, ptr %7, align 4, !tbaa !68
  br label %270

270:                                              ; preds = %267, %257
  %271 = phi i32 [ %258, %257 ], [ %269, %267 ]
  %272 = add nuw nsw i64 %259, 1
  %273 = sext i32 %271 to i64
  %274 = icmp slt i64 %272, %273
  br i1 %274, label %257, label %252, !llvm.loop !676

275:                                              ; preds = %252
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #57
  store i32 0, ptr %13, align 4, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #57
  store i32 0, ptr %14, align 4, !tbaa !68
  %276 = invoke noundef i64 @_ZN4Mesh13refine_smoothERSt6vectorIiSaIiEERiS4_(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef nonnull align 8 dereferenceable(24) %10, ptr noundef nonnull align 4 dereferenceable(4) %13, ptr noundef nonnull align 4 dereferenceable(4) %14) #56
          to label %277 unwind label %300, !range !677

277:                                              ; preds = %275
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %15) #57
  store i32 0, ptr %173, align 8, !tbaa !181
  store ptr null, ptr %174, align 8, !tbaa !71
  store ptr %173, ptr %175, align 8, !tbaa !84
  store ptr %173, ptr %176, align 8, !tbaa !182
  store i64 0, ptr %177, align 8, !tbaa !80
  store i32 0, ptr %178, align 8, !tbaa !181
  store ptr null, ptr %179, align 8, !tbaa !71
  store ptr %178, ptr %180, align 8, !tbaa !84
  store ptr %178, ptr %181, align 8, !tbaa !182
  store i64 0, ptr %182, align 8, !tbaa !80
  %278 = load i32, ptr %13, align 4, !tbaa !68
  %279 = load i32, ptr %14, align 4, !tbaa !68
  invoke void @_ZNSt6vectorIiSaIiEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %16, ptr noundef nonnull align 8 dereferenceable(24) %10) #56
          to label %280 unwind label %302

280:                                              ; preds = %277
  invoke void @_ZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlus(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %278, i32 noundef %279, ptr noundef nonnull %16, i32 noundef 0, ptr noundef nonnull align 8 dereferenceable(96) %15) #56
          to label %281 unwind label %304

281:                                              ; preds = %280
  %282 = load ptr, ptr %16, align 8, !tbaa !65
  %283 = icmp eq ptr %282, null
  br i1 %283, label %285, label %284

284:                                              ; preds = %281
  call void @_ZdlPv(ptr noundef nonnull %282) #58
  br label %285

285:                                              ; preds = %284, %281
  store i64 %276, ptr %21, align 8, !tbaa !543
  invoke void @_ZN4Mesh24calc_spatial_coordinatesEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef 0) #56
          to label %286 unwind label %302

286:                                              ; preds = %285
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %183) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %15) #59
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %15) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #57
  %287 = load ptr, ptr %10, align 8, !tbaa !65
  %288 = icmp eq ptr %287, null
  br i1 %288, label %290, label %289

289:                                              ; preds = %286
  call void @_ZdlPv(ptr noundef nonnull %287) #58
  br label %290

290:                                              ; preds = %289, %286
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #57
  %291 = load ptr, ptr %8, align 8, !tbaa !65
  %292 = icmp eq ptr %291, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %290
  call void @_ZdlPv(ptr noundef nonnull %291) #58
  br label %294

294:                                              ; preds = %293, %290
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #57
  %295 = add nuw nsw i32 %233, 1
  %296 = load i32, ptr %162, align 8, !tbaa !647
  %297 = icmp slt i32 %233, %296
  br i1 %297, label %232, label %222, !llvm.loop !678

298:                                              ; preds = %252
  %299 = landingpad { ptr, i32 }
          cleanup
  br label %313

300:                                              ; preds = %275
  %301 = landingpad { ptr, i32 }
          cleanup
  br label %311

302:                                              ; preds = %285, %277
  %303 = landingpad { ptr, i32 }
          cleanup
  br label %309

304:                                              ; preds = %280
  %305 = landingpad { ptr, i32 }
          cleanup
  %306 = load ptr, ptr %16, align 8, !tbaa !65
  %307 = icmp eq ptr %306, null
  br i1 %307, label %309, label %308

308:                                              ; preds = %304
  call void @_ZdlPv(ptr noundef nonnull %306) #58
  br label %309

309:                                              ; preds = %308, %304, %302
  %310 = phi { ptr, i32 } [ %303, %302 ], [ %305, %304 ], [ %305, %308 ]
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %183) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %15) #59
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %15) #57
  br label %311

311:                                              ; preds = %309, %300
  %312 = phi { ptr, i32 } [ %310, %309 ], [ %301, %300 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #57
  br label %313

313:                                              ; preds = %311, %298
  %314 = phi { ptr, i32 } [ %312, %311 ], [ %299, %298 ]
  %315 = load ptr, ptr %10, align 8, !tbaa !65
  %316 = icmp eq ptr %315, null
  br i1 %316, label %318, label %317

317:                                              ; preds = %313
  call void @_ZdlPv(ptr noundef nonnull %315) #58
  br label %318

318:                                              ; preds = %317, %313, %255
  %319 = phi { ptr, i32 } [ %256, %255 ], [ %314, %313 ], [ %314, %317 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #57
  br label %320

320:                                              ; preds = %318, %253
  %321 = phi { ptr, i32 } [ %319, %318 ], [ %254, %253 ]
  %322 = load ptr, ptr %8, align 8, !tbaa !65
  %323 = icmp eq ptr %322, null
  br i1 %323, label %325, label %324

324:                                              ; preds = %320
  call void @_ZdlPv(ptr noundef nonnull %322) #58
  br label %325

325:                                              ; preds = %324, %320
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #57
  resume { ptr, i32 } %321

326:                                              ; preds = %229, %44
  %327 = phi i32 [ %223, %229 ], [ %47, %44 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %17) #57
  store i32 0, ptr %17, align 16, !tbaa !68
  %328 = getelementptr inbounds i32, ptr %17, i64 1
  store i32 0, ptr %328, align 4, !tbaa !68
  %329 = getelementptr inbounds i32, ptr %17, i64 2
  %330 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 40
  %331 = load i32, ptr %330, align 8, !tbaa !661
  store i32 %331, ptr %329, align 8, !tbaa !68
  %332 = getelementptr inbounds i32, ptr %17, i64 3
  store i32 %331, ptr %332, align 4, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %18) #57
  store i32 0, ptr %18, align 16, !tbaa !68
  %333 = getelementptr inbounds i32, ptr %18, i64 1
  %334 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 42
  %335 = load i32, ptr %334, align 8, !tbaa !662
  store i32 %335, ptr %333, align 4, !tbaa !68
  %336 = getelementptr inbounds i32, ptr %18, i64 2
  store i32 0, ptr %336, align 8, !tbaa !68
  %337 = getelementptr inbounds i32, ptr %18, i64 3
  store i32 %335, ptr %337, align 4, !tbaa !68
  %338 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %339 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %340 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2
  %341 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 19
  %342 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1
  %343 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 2
  %344 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 20
  br label %346

345:                                              ; preds = %361
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %18) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %17) #57
  ret void

346:                                              ; preds = %361, %326
  %347 = phi i32 [ %327, %326 ], [ %362, %361 ]
  %348 = phi i32 [ %327, %326 ], [ %363, %361 ]
  %349 = phi i64 [ 0, %326 ], [ %364, %361 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %19) #57
  %350 = getelementptr inbounds [4 x i32], ptr %18, i64 0, i64 %349
  %351 = load i32, ptr %350, align 4, !tbaa !68
  %352 = shl i32 2, %348
  %353 = mul nsw i32 %352, %351
  %354 = add nsw i32 %351, 1
  store i32 %353, ptr %19, align 4, !tbaa !68
  %355 = mul nsw i32 %352, %354
  %356 = icmp slt i32 %353, %355
  br i1 %356, label %357, label %361

357:                                              ; preds = %346
  %358 = getelementptr inbounds [4 x i32], ptr %17, i64 0, i64 %349
  %359 = load i32, ptr %358, align 4, !tbaa !68
  %360 = add nsw i32 %359, 1
  br label %366

361:                                              ; preds = %379, %346
  %362 = phi i32 [ %347, %346 ], [ %381, %379 ]
  %363 = phi i32 [ %348, %346 ], [ %381, %379 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %19) #57
  %364 = add nuw nsw i64 %349, 1
  %365 = icmp eq i64 %364, 4
  br i1 %365, label %345, label %346, !llvm.loop !679

366:                                              ; preds = %379, %357
  %367 = phi i32 [ %347, %357 ], [ %381, %379 ]
  %368 = phi i32 [ %353, %357 ], [ %383, %379 ]
  %369 = phi i32 [ %348, %357 ], [ %381, %379 ]
  %370 = phi i32 [ %352, %357 ], [ %380, %379 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %20) #57
  %371 = mul nsw i32 %359, %370
  store i32 %371, ptr %20, align 4, !tbaa !68
  %372 = shl i32 2, %369
  %373 = mul nsw i32 %372, %360
  %374 = icmp slt i32 %371, %373
  br i1 %374, label %386, label %375

375:                                              ; preds = %366
  %376 = shl i32 2, %367
  br label %379

377:                                              ; preds = %402
  %.lcssa1 = phi i32 [ %405, %402 ]
  %.lcssa = phi i32 [ %406, %402 ]
  %378 = load i32, ptr %19, align 4, !tbaa !68
  br label %379

379:                                              ; preds = %377, %375
  %380 = phi i32 [ %376, %375 ], [ %.lcssa, %377 ]
  %381 = phi i32 [ %367, %375 ], [ %.lcssa1, %377 ]
  %382 = phi i32 [ %368, %375 ], [ %378, %377 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %20) #57
  %383 = add nsw i32 %382, 1
  store i32 %383, ptr %19, align 4, !tbaa !68
  %384 = mul nsw i32 %380, %354
  %385 = icmp slt i32 %383, %384
  br i1 %385, label %366, label %361, !llvm.loop !680

386:                                              ; preds = %402, %366
  %387 = phi i32 [ %404, %402 ], [ %371, %366 ]
  %388 = load ptr, ptr %339, align 8, !tbaa !29
  %389 = load ptr, ptr %340, align 8, !tbaa !67
  %390 = icmp eq ptr %388, %389
  br i1 %390, label %393, label %391

391:                                              ; preds = %386
  store i32 %387, ptr %388, align 4, !tbaa !68
  %392 = getelementptr inbounds i32, ptr %388, i64 1
  store ptr %392, ptr %339, align 8, !tbaa !70
  br label %394

393:                                              ; preds = %386
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %341, ptr %388, ptr noundef nonnull align 4 dereferenceable(4) %20) #56
  br label %394

394:                                              ; preds = %393, %391
  %395 = load ptr, ptr %342, align 8, !tbaa !29
  %396 = load ptr, ptr %343, align 8, !tbaa !67
  %397 = icmp eq ptr %395, %396
  br i1 %397, label %401, label %398

398:                                              ; preds = %394
  %399 = load i32, ptr %19, align 4, !tbaa !68
  store i32 %399, ptr %395, align 4, !tbaa !68
  %400 = getelementptr inbounds i32, ptr %395, i64 1
  store ptr %400, ptr %342, align 8, !tbaa !70
  br label %402

401:                                              ; preds = %394
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %344, ptr %395, ptr noundef nonnull align 4 dereferenceable(4) %19) #56
  br label %402

402:                                              ; preds = %401, %398
  %403 = load i32, ptr %20, align 4, !tbaa !68
  %404 = add nsw i32 %403, 1
  store i32 %404, ptr %20, align 4, !tbaa !68
  %405 = load i32, ptr %338, align 8, !tbaa !647
  %406 = shl i32 2, %405
  %407 = mul nsw i32 %406, %360
  %408 = icmp slt i32 %404, %407
  br i1 %408, label %386, label %377, !llvm.loop !681
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN4Mesh13calc_celltypeEm(ptr noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %1) #13 align 2 {
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %4 = load ptr, ptr %3, align 8, !tbaa !682
  %5 = icmp eq ptr %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %8 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %7, ptr noundef nonnull %4) #56
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = load ptr, ptr %3, align 8, !tbaa !682
  %12 = icmp eq ptr %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  %14 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %7, ptr noundef nonnull %11) #56
  store ptr %14, ptr %3, align 8, !tbaa !682
  br label %15

15:                                               ; preds = %13, %10, %2
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %17 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %16, i64 noundef %1, i64 noundef 4, ptr noundef nonnull @.str.49.170, i32 noundef 0) #56
  store ptr %17, ptr %3, align 8, !tbaa !682
  br label %18

18:                                               ; preds = %15, %6
  %19 = icmp eq i64 %1, 0
  br i1 %19, label %36, label %20

20:                                               ; preds = %18
  %21 = load ptr, ptr %3, align 8, !tbaa !682
  %22 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %23 = load ptr, ptr %22, align 8, !tbaa !637
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 26
  %25 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %26 = load ptr, ptr %25, align 8, !tbaa !639
  %27 = load ptr, ptr %24, align 8, !tbaa !65
  %28 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 27
  %29 = load ptr, ptr %28, align 8, !tbaa !65
  %30 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %31 = load ptr, ptr %30, align 8, !tbaa !638
  %32 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 28
  %33 = load ptr, ptr %32, align 8, !tbaa !65
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 29
  %35 = load ptr, ptr %34, align 8, !tbaa !65
  br label %37

36:                                               ; preds = %81, %18
  ret void

37:                                               ; preds = %81, %20
  %38 = phi i64 [ 0, %20 ], [ %83, %81 ]
  %39 = phi i32 [ 0, %20 ], [ %82, %81 ]
  %40 = getelementptr inbounds i32, ptr %21, i64 %38
  store i32 1, ptr %40, align 4, !tbaa !68
  %41 = sext i32 %39 to i64
  %42 = getelementptr inbounds i32, ptr %23, i64 %41
  %43 = load i32, ptr %42, align 4, !tbaa !68
  %44 = getelementptr inbounds i32, ptr %26, i64 %41
  %45 = load i32, ptr %44, align 4, !tbaa !68
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i32, ptr %27, i64 %46
  %48 = load i32, ptr %47, align 4, !tbaa !68
  %49 = icmp slt i32 %43, %48
  br i1 %49, label %50, label %54

50:                                               ; preds = %37
  store i32 -1, ptr %40, align 4, !tbaa !68
  %51 = load i32, ptr %42, align 4, !tbaa !68
  %52 = load i32, ptr %44, align 4, !tbaa !68
  %53 = sext i32 %52 to i64
  br label %54

54:                                               ; preds = %50, %37
  %55 = phi i64 [ %53, %50 ], [ %46, %37 ]
  %56 = phi i32 [ %51, %50 ], [ %43, %37 ]
  %57 = getelementptr inbounds i32, ptr %29, i64 %55
  %58 = load i32, ptr %57, align 4, !tbaa !68
  %59 = icmp sgt i32 %56, %58
  br i1 %59, label %60, label %63

60:                                               ; preds = %54
  store i32 -2, ptr %40, align 4, !tbaa !68
  %61 = load i32, ptr %44, align 4, !tbaa !68
  %62 = sext i32 %61 to i64
  br label %63

63:                                               ; preds = %60, %54
  %64 = phi i64 [ %62, %60 ], [ %55, %54 ]
  %65 = getelementptr inbounds i32, ptr %31, i64 %41
  %66 = load i32, ptr %65, align 4, !tbaa !68
  %67 = getelementptr inbounds i32, ptr %33, i64 %64
  %68 = load i32, ptr %67, align 4, !tbaa !68
  %69 = icmp slt i32 %66, %68
  br i1 %69, label %70, label %74

70:                                               ; preds = %63
  store i32 -3, ptr %40, align 4, !tbaa !68
  %71 = load i32, ptr %65, align 4, !tbaa !68
  %72 = load i32, ptr %44, align 4, !tbaa !68
  %73 = sext i32 %72 to i64
  br label %74

74:                                               ; preds = %70, %63
  %75 = phi i64 [ %73, %70 ], [ %64, %63 ]
  %76 = phi i32 [ %71, %70 ], [ %66, %63 ]
  %77 = getelementptr inbounds i32, ptr %35, i64 %75
  %78 = load i32, ptr %77, align 4, !tbaa !68
  %79 = icmp sgt i32 %76, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %74
  store i32 -4, ptr %40, align 4, !tbaa !68
  br label %81

81:                                               ; preds = %80, %74
  %82 = add i32 %39, 1
  %83 = zext i32 %82 to i64
  %84 = icmp ult i64 %83, %1
  br i1 %84, label %37, label %36, !llvm.loop !683
}

; Function Attrs: optsize uwtable
define internal void @_ZN4Mesh20calc_neighbors_localEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) #6 align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %struct.timeval, align 8
  %3 = alloca %struct.timeval, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = alloca %struct.TBounds, align 8
  %6 = alloca %"class.std::vector", align 8
  %7 = alloca %"class.std::ios_base::Init", align 1
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #57
  call void @cpu_timer_start(ptr noundef nonnull %2) #56
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 7
  %10 = load i8, ptr %9, align 8, !tbaa !666, !range !130, !noundef !131
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %793, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5, i64 2
  %14 = load i32, ptr %13, align 8, !tbaa !68
  %15 = add nsw i32 %14, 1
  store i32 %15, ptr %13, align 8, !tbaa !68
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %18 = load ptr, ptr %17, align 8, !tbaa !684
  %19 = call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %16, ptr noundef %18) #56
  %20 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %21 = load i64, ptr %20, align 8, !tbaa !543
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %23, label %55

23:                                               ; preds = %12
  %24 = load ptr, ptr %17, align 8, !tbaa !684
  %25 = icmp eq ptr %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %23
  %27 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %16, ptr noundef nonnull %24) #56
  store ptr %27, ptr %17, align 8, !tbaa !684
  br label %28

28:                                               ; preds = %26, %23
  %29 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %30 = load ptr, ptr %29, align 8, !tbaa !685
  %31 = icmp eq ptr %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %16, ptr noundef nonnull %30) #56
  store ptr %33, ptr %29, align 8, !tbaa !685
  br label %34

34:                                               ; preds = %32, %28
  %35 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %36 = load ptr, ptr %35, align 8, !tbaa !686
  %37 = icmp eq ptr %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %16, ptr noundef nonnull %36) #56
  store ptr %39, ptr %35, align 8, !tbaa !686
  br label %40

40:                                               ; preds = %38, %34
  %41 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %42 = load ptr, ptr %41, align 8, !tbaa !687
  %43 = icmp eq ptr %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %16, ptr noundef nonnull %42) #56
  store ptr %45, ptr %41, align 8, !tbaa !687
  br label %46

46:                                               ; preds = %44, %40
  %47 = load i64, ptr %20, align 8, !tbaa !543
  %48 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %16, i64 noundef %47, i64 noundef 4, ptr noundef nonnull @.str.42.164, i32 noundef 4) #56
  store ptr %48, ptr %17, align 8, !tbaa !684
  %49 = load i64, ptr %20, align 8, !tbaa !543
  %50 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %16, i64 noundef %49, i64 noundef 4, ptr noundef nonnull @.str.43.165, i32 noundef 4) #56
  store ptr %50, ptr %29, align 8, !tbaa !685
  %51 = load i64, ptr %20, align 8, !tbaa !543
  %52 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %16, i64 noundef %51, i64 noundef 4, ptr noundef nonnull @.str.44.166, i32 noundef 4) #56
  store ptr %52, ptr %35, align 8, !tbaa !686
  %53 = load i64, ptr %20, align 8, !tbaa !543
  %54 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %16, i64 noundef %53, i64 noundef 4, ptr noundef nonnull @.str.45.167, i32 noundef 4) #56
  store ptr %54, ptr %41, align 8, !tbaa !687
  br label %55

55:                                               ; preds = %46, %12
  call void @_ZN4Mesh10set_boundsEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 poison) #56
  %56 = load i64, ptr %20, align 8, !tbaa !543
  %57 = trunc i64 %56 to i32
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %68

59:                                               ; preds = %55
  %60 = load ptr, ptr %17, align 8, !tbaa !684
  %61 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %62 = load ptr, ptr %61, align 8, !tbaa !685
  %63 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %64 = load ptr, ptr %63, align 8, !tbaa !686
  %65 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %66 = load ptr, ptr %65, align 8, !tbaa !687
  %67 = and i64 %56, 4294967295
  br label %70

68:                                               ; preds = %70, %55
  %69 = load i32, ptr @calc_neighbor_type, align 4, !tbaa !68
  switch i32 %69, label %793 [
    i32 0, label %78
    i32 1, label %589
  ]

70:                                               ; preds = %70, %59
  %71 = phi i64 [ 0, %59 ], [ %76, %70 ]
  %72 = getelementptr inbounds i32, ptr %60, i64 %71
  store i32 -98, ptr %72, align 4, !tbaa !68
  %73 = getelementptr inbounds i32, ptr %62, i64 %71
  store i32 -98, ptr %73, align 4, !tbaa !68
  %74 = getelementptr inbounds i32, ptr %64, i64 %71
  store i32 -98, ptr %74, align 4, !tbaa !68
  %75 = getelementptr inbounds i32, ptr %66, i64 %71
  store i32 -98, ptr %75, align 4, !tbaa !68
  %76 = add nuw nsw i64 %71, 1
  %77 = icmp eq i64 %76, %67
  br i1 %77, label %68, label %70, !llvm.loop !688

78:                                               ; preds = %68
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #57
  call void @cpu_timer_start(ptr noundef nonnull %3) #56
  %79 = load i64, ptr %20, align 8, !tbaa !543
  %80 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  store i64 %79, ptr %80, align 8, !tbaa !652
  %81 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 42
  %82 = load i32, ptr %81, align 8, !tbaa !662
  %83 = add nsw i32 %82, 1
  %84 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %85 = load i32, ptr %84, align 8, !tbaa !647
  %86 = shl i32 2, %85
  %87 = mul nsw i32 %86, %83
  %88 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 40
  %89 = load i32, ptr %88, align 8, !tbaa !661
  %90 = add nsw i32 %89, 1
  %91 = mul nsw i32 %90, %86
  %92 = icmp eq i64 %79, 0
  br i1 %92, label %135, label %93

93:                                               ; preds = %78
  %94 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %95 = load ptr, ptr %94, align 8, !tbaa !639
  %96 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %97 = load ptr, ptr %96, align 8, !tbaa !638
  %98 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %99 = load ptr, ptr %98, align 8, !tbaa !637
  br label %105

100:                                              ; preds = %105
  %.lcssa3 = phi i32 [ %119, %105 ]
  %.lcssa2 = phi i32 [ %123, %105 ]
  %.lcssa1 = phi i32 [ %127, %105 ]
  %.lcssa = phi i32 [ %131, %105 ]
  %101 = call i32 @llvm.smin.i32(i32 %.lcssa3, i32 %87)
  %102 = call i32 @llvm.smin.i32(i32 %.lcssa1, i32 %91)
  %103 = call i32 @llvm.smax.i32(i32 %.lcssa2, i32 0)
  %104 = call i32 @llvm.smax.i32(i32 %.lcssa, i32 0)
  br label %135

105:                                              ; preds = %105, %93
  %106 = phi i64 [ 0, %93 ], [ %133, %105 ]
  %107 = phi i32 [ %87, %93 ], [ %119, %105 ]
  %108 = phi i32 [ %91, %93 ], [ %127, %105 ]
  %109 = phi i32 [ 0, %93 ], [ %123, %105 ]
  %110 = phi i32 [ 0, %93 ], [ %131, %105 ]
  %111 = phi i32 [ 0, %93 ], [ %132, %105 ]
  %112 = getelementptr inbounds i32, ptr %95, i64 %106
  %113 = load i32, ptr %112, align 4, !tbaa !68
  %114 = getelementptr inbounds i32, ptr %97, i64 %106
  %115 = load i32, ptr %114, align 4, !tbaa !68
  %116 = sub nsw i32 %85, %113
  %117 = shl i32 2, %116
  %118 = mul nsw i32 %115, %117
  %119 = call i32 @llvm.smin.i32(i32 %118, i32 %107)
  %120 = add nsw i32 %115, 1
  %121 = mul nsw i32 %120, %117
  %122 = add nsw i32 %121, -1
  %123 = call i32 @llvm.smax.i32(i32 %122, i32 %109)
  %124 = getelementptr inbounds i32, ptr %99, i64 %106
  %125 = load i32, ptr %124, align 4, !tbaa !68
  %126 = mul nsw i32 %125, %117
  %127 = call i32 @llvm.smin.i32(i32 %126, i32 %108)
  %128 = add nsw i32 %125, 1
  %129 = mul nsw i32 %128, %117
  %130 = add nsw i32 %129, -1
  %131 = call i32 @llvm.smax.i32(i32 %130, i32 %110)
  %132 = add i32 %111, 1
  %133 = zext i32 %132 to i64
  %134 = icmp ugt i64 %79, %133
  br i1 %134, label %105, label %100, !llvm.loop !689

135:                                              ; preds = %100, %78
  %136 = phi i32 [ 0, %78 ], [ %103, %100 ]
  %137 = phi i32 [ %87, %78 ], [ %101, %100 ]
  %138 = phi i32 [ %91, %78 ], [ %102, %100 ]
  %139 = phi i32 [ 0, %78 ], [ %104, %100 ]
  %140 = shl i32 -4, %85
  %141 = add i32 %137, %140
  %142 = call i32 @llvm.smax.i32(i32 %141, i32 0)
  %143 = shl i32 4, %85
  %144 = add nsw i32 %136, %143
  %145 = call i32 @llvm.smin.i32(i32 %87, i32 %144)
  %146 = add i32 %138, %140
  %147 = call i32 @llvm.smax.i32(i32 %146, i32 0)
  %148 = add nsw i32 %139, %143
  %149 = call i32 @llvm.smin.i32(i32 %91, i32 %148)
  %150 = trunc i64 %79 to i32
  %151 = sub nsw i32 %149, %147
  %152 = sub nsw i32 %145, %142
  %153 = call ptr @compact_hash_init(i32 noundef %150, i32 noundef %151, i32 noundef %152, i32 noundef 0) #56
  store ptr %153, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %154 = load i64, ptr %20, align 8, !tbaa !543
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %161, label %156

156:                                              ; preds = %135
  %157 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 13
  %158 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %159 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %160 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  br label %189

161:                                              ; preds = %189, %135
  %162 = load i64, ptr %3, align 8, !tbaa.struct !560
  %163 = getelementptr inbounds i8, ptr %3, i64 8
  %164 = load i64, ptr %163, align 8, !tbaa.struct !561
  %165 = call double @cpu_timer_stop(i64 %162, i64 %164) #56
  %166 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 2
  %167 = load double, ptr %166, align 8, !tbaa !171
  %168 = fadd double %165, %167
  store double %168, ptr %166, align 8, !tbaa !171
  call void @cpu_timer_start(ptr noundef nonnull %3) #56
  %169 = load i32, ptr %81, align 8, !tbaa !662
  %170 = add nsw i32 %169, 1
  %171 = load i32, ptr %84, align 8, !tbaa !647
  %172 = shl i32 2, %171
  %173 = mul nsw i32 %172, %170
  store i32 %173, ptr @_ZZN4Mesh20calc_neighbors_localEvE8jmaxcalc, align 4, !tbaa !68
  %174 = load i32, ptr %88, align 8, !tbaa !661
  %175 = add nsw i32 %174, 1
  %176 = mul nsw i32 %175, %172
  store i32 %176, ptr @_ZZN4Mesh20calc_neighbors_localEvE8imaxcalc, align 4, !tbaa !68
  %177 = load i64, ptr %20, align 8, !tbaa !543
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %219, label %179

179:                                              ; preds = %161
  %180 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %181 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %182 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %183 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 13
  %184 = xor i32 %147, -1
  %185 = xor i32 %142, -1
  %186 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %187 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %188 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  br label %227

189:                                              ; preds = %189, %156
  %190 = phi i64 [ 0, %156 ], [ %216, %189 ]
  %191 = phi i32 [ 0, %156 ], [ %215, %189 ]
  %192 = load i32, ptr %157, align 4, !tbaa !654
  %193 = add i32 %192, %191
  %194 = load ptr, ptr %158, align 8, !tbaa !639
  %195 = getelementptr inbounds i32, ptr %194, i64 %190
  %196 = load i32, ptr %195, align 4, !tbaa !68
  %197 = load i32, ptr %84, align 8, !tbaa !647
  %198 = sub nsw i32 %197, %196
  %199 = shl i32 2, %198
  %200 = load ptr, ptr %159, align 8, !tbaa !637
  %201 = getelementptr inbounds i32, ptr %200, i64 %190
  %202 = load i32, ptr %201, align 4, !tbaa !68
  %203 = mul nsw i32 %202, %199
  %204 = sub i32 %203, %147
  %205 = load ptr, ptr %160, align 8, !tbaa !638
  %206 = getelementptr inbounds i32, ptr %205, i64 %190
  %207 = load i32, ptr %206, align 4, !tbaa !68
  %208 = mul nsw i32 %207, %199
  %209 = sub nsw i32 %208, %142
  %210 = load ptr, ptr @write_hash, align 8, !tbaa !29
  %211 = mul nsw i32 %209, %151
  %212 = add nsw i32 %204, %211
  %213 = sext i32 %212 to i64
  %214 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  call void %210(i32 noundef %193, i64 noundef %213, ptr noundef %214) #56
  %215 = add i32 %191, 1
  %216 = zext i32 %215 to i64
  %217 = load i64, ptr %20, align 8, !tbaa !543
  %218 = icmp ugt i64 %217, %216
  br i1 %218, label %189, label %161, !llvm.loop !690

219:                                              ; preds = %572, %161
  %220 = load i64, ptr %3, align 8, !tbaa.struct !560
  %221 = load i64, ptr %163, align 8, !tbaa.struct !561
  %222 = call double @cpu_timer_stop(i64 %220, i64 %221) #56
  %223 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 3
  %224 = load double, ptr %223, align 8, !tbaa !171
  %225 = fadd double %222, %224
  store double %225, ptr %223, align 8, !tbaa !171
  call void @cpu_timer_start(ptr noundef nonnull %3) #56
  call void @write_hash_collision_report() #56
  call void @read_hash_collision_report() #56
  %226 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  call void @compact_hash_delete(ptr noundef %226) #56
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #57
  br label %793

227:                                              ; preds = %572, %179
  %228 = phi i64 [ 0, %179 ], [ %586, %572 ]
  %229 = phi i32 [ 0, %179 ], [ %585, %572 ]
  %230 = load ptr, ptr %180, align 8, !tbaa !637
  %231 = getelementptr inbounds i32, ptr %230, i64 %228
  %232 = load i32, ptr %231, align 4, !tbaa !68
  %233 = load ptr, ptr %181, align 8, !tbaa !638
  %234 = getelementptr inbounds i32, ptr %233, i64 %228
  %235 = load i32, ptr %234, align 4, !tbaa !68
  %236 = load ptr, ptr %182, align 8, !tbaa !639
  %237 = getelementptr inbounds i32, ptr %236, i64 %228
  %238 = load i32, ptr %237, align 4, !tbaa !68
  %239 = load i32, ptr %84, align 8, !tbaa !647
  %240 = sub nsw i32 %239, %238
  %241 = shl i32 2, %240
  %242 = mul nsw i32 %241, %232
  %243 = sub nsw i32 %242, %147
  %244 = add nsw i32 %232, -1
  %245 = mul nsw i32 %241, %244
  %246 = call i32 @llvm.smax.i32(i32 %245, i32 0)
  %247 = sub nsw i32 %246, %147
  %248 = add nsw i32 %232, 1
  %249 = mul nsw i32 %241, %248
  %250 = load i32, ptr @_ZZN4Mesh20calc_neighbors_localEvE8imaxcalc, align 4, !tbaa !68
  %251 = add nsw i32 %250, -1
  %252 = call i32 @llvm.smin.i32(i32 %251, i32 %249)
  %253 = sub nsw i32 %252, %147
  %254 = mul nsw i32 %241, %235
  %255 = sub nsw i32 %254, %142
  %256 = add nsw i32 %235, -1
  %257 = mul nsw i32 %241, %256
  %258 = call i32 @llvm.smax.i32(i32 %257, i32 0)
  %259 = sub nsw i32 %258, %142
  %260 = add nsw i32 %235, 1
  %261 = mul nsw i32 %241, %260
  %262 = load i32, ptr @_ZZN4Mesh20calc_neighbors_localEvE8jmaxcalc, align 4, !tbaa !68
  %263 = add nsw i32 %262, -1
  %264 = call i32 @llvm.smin.i32(i32 %263, i32 %261)
  %265 = sub nsw i32 %264, %142
  %266 = shl i32 2, %239
  %267 = icmp sge i32 %242, %266
  %268 = load i32, ptr %183, align 4
  %269 = add i32 %268, %229
  %270 = select i1 %267, i32 -1, i32 %269
  %271 = icmp sge i32 %254, %266
  %272 = select i1 %271, i32 -1, i32 %269
  %273 = load i32, ptr %88, align 8, !tbaa !661
  %274 = mul nsw i32 %273, %266
  %275 = add i32 %274, %184
  %276 = icmp sgt i32 %243, %275
  %277 = select i1 %276, i32 %269, i32 -1
  %278 = load i32, ptr %81, align 8, !tbaa !662
  %279 = mul nsw i32 %278, %266
  %280 = add i32 %279, %185
  %281 = icmp sgt i32 %255, %280
  %282 = select i1 %281, i32 %269, i32 -1
  %283 = icmp eq i32 %242, %266
  %284 = icmp slt i32 %254, %279
  %285 = select i1 %271, i1 %284, i1 false
  %286 = select i1 %285, i32 %270, i32 %269
  %287 = select i1 %283, i32 %286, i32 %270
  %288 = icmp eq i32 %254, %266
  %289 = icmp slt i32 %242, %274
  %290 = select i1 %267, i1 %289, i1 false
  %291 = select i1 %290, i32 %272, i32 %269
  %292 = select i1 %288, i32 %291, i32 %272
  %293 = icmp eq i32 %252, %274
  %294 = select i1 %285, i32 %277, i32 %269
  %295 = select i1 %293, i32 %294, i32 %277
  %296 = icmp eq i32 %264, %279
  %297 = select i1 %290, i32 %282, i32 %269
  %298 = select i1 %296, i32 %297, i32 %282
  %299 = icmp eq i32 %238, %239
  br i1 %299, label %325, label %300

300:                                              ; preds = %227
  %301 = sub nsw i32 %255, %259
  %302 = sdiv i32 %301, -2
  %303 = add i32 %302, %255
  %304 = icmp slt i32 %287, 0
  br i1 %304, label %305, label %315

305:                                              ; preds = %300
  %306 = sub nsw i32 %243, %247
  %307 = sdiv i32 %306, -2
  %308 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %309 = mul nsw i32 %255, %151
  %310 = add i32 %309, %243
  %311 = add i32 %310, %307
  %312 = sext i32 %311 to i64
  %313 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %314 = call i32 %308(i64 noundef %312, ptr noundef %313) #56
  br label %315

315:                                              ; preds = %305, %300
  %316 = phi i32 [ %314, %305 ], [ %287, %300 ]
  %317 = icmp slt i32 %292, 0
  br i1 %317, label %318, label %325

318:                                              ; preds = %315
  %319 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %320 = mul nsw i32 %303, %151
  %321 = add nsw i32 %320, %243
  %322 = sext i32 %321 to i64
  %323 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %324 = call i32 %319(i64 noundef %322, ptr noundef %323) #56
  br label %325

325:                                              ; preds = %318, %315, %227
  %326 = phi i32 [ %292, %227 ], [ %324, %318 ], [ %292, %315 ]
  %327 = phi i32 [ %287, %227 ], [ %316, %318 ], [ %316, %315 ]
  %328 = icmp slt i32 %327, 0
  br i1 %328, label %329, label %348

329:                                              ; preds = %325
  %330 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %331 = mul nsw i32 %255, %151
  %332 = add nsw i32 %331, %247
  %333 = sext i32 %332 to i64
  %334 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %335 = call i32 %330(i64 noundef %333, ptr noundef %334) #56
  %336 = icmp sgt i32 %335, -1
  %337 = load i64, ptr %20, align 8
  %338 = trunc i64 %337 to i32
  %339 = icmp slt i32 %335, %338
  %340 = select i1 %336, i1 %339, i1 false
  br i1 %340, label %341, label %348

341:                                              ; preds = %329
  %342 = load ptr, ptr %182, align 8, !tbaa !639
  %343 = zext i32 %335 to i64
  %344 = getelementptr inbounds i32, ptr %342, i64 %343
  %345 = load i32, ptr %344, align 4, !tbaa !68
  %346 = icmp eq i32 %345, %238
  %347 = select i1 %346, i32 %335, i32 %327
  br label %348

348:                                              ; preds = %341, %329, %325
  %349 = phi i32 [ %327, %325 ], [ %327, %329 ], [ %347, %341 ]
  %350 = icmp slt i32 %295, 0
  br i1 %350, label %351, label %358

351:                                              ; preds = %348
  %352 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %353 = mul nsw i32 %255, %151
  %354 = add nsw i32 %353, %253
  %355 = sext i32 %354 to i64
  %356 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %357 = call i32 %352(i64 noundef %355, ptr noundef %356) #56
  br label %358

358:                                              ; preds = %351, %348
  %359 = phi i32 [ %357, %351 ], [ %295, %348 ]
  %360 = icmp slt i32 %326, 0
  br i1 %360, label %361, label %380

361:                                              ; preds = %358
  %362 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %363 = mul nsw i32 %259, %151
  %364 = add nsw i32 %363, %243
  %365 = sext i32 %364 to i64
  %366 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %367 = call i32 %362(i64 noundef %365, ptr noundef %366) #56
  %368 = icmp sgt i32 %367, -1
  %369 = load i64, ptr %20, align 8
  %370 = trunc i64 %369 to i32
  %371 = icmp slt i32 %367, %370
  %372 = select i1 %368, i1 %371, i1 false
  br i1 %372, label %373, label %380

373:                                              ; preds = %361
  %374 = load ptr, ptr %182, align 8, !tbaa !639
  %375 = zext i32 %367 to i64
  %376 = getelementptr inbounds i32, ptr %374, i64 %375
  %377 = load i32, ptr %376, align 4, !tbaa !68
  %378 = icmp eq i32 %377, %238
  %379 = select i1 %378, i32 %367, i32 %326
  br label %380

380:                                              ; preds = %373, %361, %358
  %381 = phi i32 [ %326, %358 ], [ %326, %361 ], [ %379, %373 ]
  %382 = icmp slt i32 %298, 0
  br i1 %382, label %383, label %390

383:                                              ; preds = %380
  %384 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %385 = mul nsw i32 %265, %151
  %386 = add nsw i32 %385, %243
  %387 = sext i32 %386 to i64
  %388 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %389 = call i32 %384(i64 noundef %387, ptr noundef %388) #56
  br label %390

390:                                              ; preds = %383, %380
  %391 = phi i32 [ %389, %383 ], [ %298, %380 ]
  %392 = load i32, ptr %84, align 8, !tbaa !647
  %393 = icmp eq i32 %238, %392
  br i1 %393, label %455, label %394

394:                                              ; preds = %390
  %395 = shl i32 2, %392
  %396 = icmp slt i32 %255, %395
  br i1 %396, label %397, label %423

397:                                              ; preds = %394
  %398 = icmp slt i32 %359, 0
  br i1 %398, label %399, label %408

399:                                              ; preds = %397
  %400 = add nsw i32 %265, %255
  %401 = sdiv i32 %400, 2
  %402 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %403 = mul nsw i32 %401, %151
  %404 = add nsw i32 %403, %253
  %405 = sext i32 %404 to i64
  %406 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %407 = call i32 %402(i64 noundef %405, ptr noundef %406) #56
  br label %408

408:                                              ; preds = %399, %397
  %409 = phi i32 [ %407, %399 ], [ %359, %397 ]
  %410 = icmp slt i32 %349, 0
  br i1 %410, label %411, label %423

411:                                              ; preds = %408
  %412 = sub nsw i32 %243, %247
  %413 = sdiv i32 %412, -2
  %414 = add i32 %413, %243
  %415 = add nsw i32 %265, %255
  %416 = sdiv i32 %415, 2
  %417 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %418 = mul nsw i32 %416, %151
  %419 = add nsw i32 %414, %418
  %420 = sext i32 %419 to i64
  %421 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %422 = call i32 %417(i64 noundef %420, ptr noundef %421) #56
  br label %423

423:                                              ; preds = %411, %408, %394
  %424 = phi i32 [ %409, %411 ], [ %409, %408 ], [ %359, %394 ]
  %425 = phi i32 [ %422, %411 ], [ %349, %408 ], [ %349, %394 ]
  %426 = load i32, ptr %84, align 8, !tbaa !647
  %427 = shl i32 2, %426
  %428 = icmp slt i32 %243, %427
  br i1 %428, label %429, label %455

429:                                              ; preds = %423
  %430 = icmp slt i32 %391, 0
  br i1 %430, label %431, label %440

431:                                              ; preds = %429
  %432 = add nsw i32 %253, %243
  %433 = sdiv i32 %432, 2
  %434 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %435 = mul nsw i32 %265, %151
  %436 = add nsw i32 %433, %435
  %437 = sext i32 %436 to i64
  %438 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %439 = call i32 %434(i64 noundef %437, ptr noundef %438) #56
  br label %440

440:                                              ; preds = %431, %429
  %441 = phi i32 [ %439, %431 ], [ %391, %429 ]
  %442 = icmp slt i32 %381, 0
  br i1 %442, label %443, label %455

443:                                              ; preds = %440
  %444 = add nsw i32 %253, %243
  %445 = sdiv i32 %444, 2
  %446 = sub nsw i32 %255, %259
  %447 = sdiv i32 %446, -2
  %448 = add i32 %447, %255
  %449 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %450 = mul nsw i32 %448, %151
  %451 = add nsw i32 %450, %445
  %452 = sext i32 %451 to i64
  %453 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %454 = call i32 %449(i64 noundef %452, ptr noundef %453) #56
  br label %455

455:                                              ; preds = %443, %440, %423, %390
  %456 = phi i32 [ %441, %443 ], [ %441, %440 ], [ %391, %423 ], [ %391, %390 ]
  %457 = phi i32 [ %454, %443 ], [ %381, %440 ], [ %381, %423 ], [ %381, %390 ]
  %458 = phi i32 [ %424, %443 ], [ %424, %440 ], [ %424, %423 ], [ %359, %390 ]
  %459 = phi i32 [ %425, %443 ], [ %425, %440 ], [ %425, %423 ], [ %349, %390 ]
  %460 = icmp eq i32 %238, 0
  br i1 %460, label %572, label %461

461:                                              ; preds = %455
  %462 = icmp slt i32 %459, 0
  br i1 %462, label %463, label %489

463:                                              ; preds = %461
  %464 = sdiv i32 %235, 2
  %465 = shl nsw i32 %464, 1
  %466 = mul nsw i32 %465, %241
  %467 = sub nsw i32 %466, %142
  %468 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %469 = mul nsw i32 %467, %151
  %470 = shl i32 %247, 1
  %471 = sub i32 %469, %243
  %472 = add i32 %471, %470
  %473 = sext i32 %472 to i64
  %474 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %475 = call i32 %468(i64 noundef %473, ptr noundef %474) #56
  %476 = icmp sgt i32 %475, -1
  %477 = load i64, ptr %20, align 8
  %478 = trunc i64 %477 to i32
  %479 = icmp slt i32 %475, %478
  %480 = select i1 %476, i1 %479, i1 false
  br i1 %480, label %481, label %489

481:                                              ; preds = %463
  %482 = load ptr, ptr %182, align 8, !tbaa !639
  %483 = zext i32 %475 to i64
  %484 = getelementptr inbounds i32, ptr %482, i64 %483
  %485 = load i32, ptr %484, align 4, !tbaa !68
  %486 = add nsw i32 %238, -1
  %487 = icmp eq i32 %485, %486
  %488 = select i1 %487, i32 %475, i32 %459
  br label %489

489:                                              ; preds = %481, %463, %461
  %490 = phi i32 [ %459, %461 ], [ %459, %463 ], [ %488, %481 ]
  %491 = icmp slt i32 %458, 0
  br i1 %491, label %492, label %516

492:                                              ; preds = %489
  %493 = sdiv i32 %235, 2
  %494 = shl nsw i32 %493, 1
  %495 = mul nsw i32 %494, %241
  %496 = sub nsw i32 %495, %142
  %497 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %498 = mul nsw i32 %496, %151
  %499 = add nsw i32 %498, %253
  %500 = sext i32 %499 to i64
  %501 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %502 = call i32 %497(i64 noundef %500, ptr noundef %501) #56
  %503 = icmp sgt i32 %502, -1
  %504 = load i64, ptr %20, align 8
  %505 = trunc i64 %504 to i32
  %506 = icmp slt i32 %502, %505
  %507 = select i1 %503, i1 %506, i1 false
  br i1 %507, label %508, label %516

508:                                              ; preds = %492
  %509 = load ptr, ptr %182, align 8, !tbaa !639
  %510 = zext i32 %502 to i64
  %511 = getelementptr inbounds i32, ptr %509, i64 %510
  %512 = load i32, ptr %511, align 4, !tbaa !68
  %513 = add nsw i32 %238, -1
  %514 = icmp eq i32 %512, %513
  %515 = select i1 %514, i32 %502, i32 %458
  br label %516

516:                                              ; preds = %508, %492, %489
  %517 = phi i32 [ %458, %489 ], [ %458, %492 ], [ %515, %508 ]
  %518 = icmp slt i32 %457, 0
  br i1 %518, label %519, label %545

519:                                              ; preds = %516
  %520 = shl i32 %259, 1
  %521 = sub i32 %520, %255
  %522 = sdiv i32 %232, 2
  %523 = shl nsw i32 %522, 1
  %524 = mul nsw i32 %523, %241
  %525 = sub i32 %524, %147
  %526 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %527 = mul nsw i32 %521, %151
  %528 = add nsw i32 %525, %527
  %529 = sext i32 %528 to i64
  %530 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %531 = call i32 %526(i64 noundef %529, ptr noundef %530) #56
  %532 = icmp sgt i32 %531, -1
  %533 = load i64, ptr %20, align 8
  %534 = trunc i64 %533 to i32
  %535 = icmp slt i32 %531, %534
  %536 = select i1 %532, i1 %535, i1 false
  br i1 %536, label %537, label %545

537:                                              ; preds = %519
  %538 = load ptr, ptr %182, align 8, !tbaa !639
  %539 = zext i32 %531 to i64
  %540 = getelementptr inbounds i32, ptr %538, i64 %539
  %541 = load i32, ptr %540, align 4, !tbaa !68
  %542 = add nsw i32 %238, -1
  %543 = icmp eq i32 %541, %542
  %544 = select i1 %543, i32 %531, i32 %457
  br label %545

545:                                              ; preds = %537, %519, %516
  %546 = phi i32 [ %457, %516 ], [ %457, %519 ], [ %544, %537 ]
  %547 = icmp slt i32 %456, 0
  br i1 %547, label %548, label %572

548:                                              ; preds = %545
  %549 = sdiv i32 %232, 2
  %550 = shl nsw i32 %549, 1
  %551 = mul nsw i32 %550, %241
  %552 = sub i32 %551, %147
  %553 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %554 = mul nsw i32 %265, %151
  %555 = add nsw i32 %552, %554
  %556 = sext i32 %555 to i64
  %557 = load ptr, ptr @_ZZN4Mesh20calc_neighbors_localEvE4hash, align 8, !tbaa !29
  %558 = call i32 %553(i64 noundef %556, ptr noundef %557) #56
  %559 = icmp sgt i32 %558, -1
  %560 = load i64, ptr %20, align 8
  %561 = trunc i64 %560 to i32
  %562 = icmp slt i32 %558, %561
  %563 = select i1 %559, i1 %562, i1 false
  br i1 %563, label %564, label %572

564:                                              ; preds = %548
  %565 = load ptr, ptr %182, align 8, !tbaa !639
  %566 = zext i32 %558 to i64
  %567 = getelementptr inbounds i32, ptr %565, i64 %566
  %568 = load i32, ptr %567, align 4, !tbaa !68
  %569 = add nsw i32 %238, -1
  %570 = icmp eq i32 %568, %569
  %571 = select i1 %570, i32 %558, i32 %456
  br label %572

572:                                              ; preds = %564, %548, %545, %455
  %573 = phi i32 [ %456, %545 ], [ %456, %455 ], [ %456, %548 ], [ %571, %564 ]
  %574 = phi i32 [ %546, %545 ], [ %457, %455 ], [ %546, %548 ], [ %546, %564 ]
  %575 = phi i32 [ %517, %545 ], [ %458, %455 ], [ %517, %548 ], [ %517, %564 ]
  %576 = phi i32 [ %490, %545 ], [ %459, %455 ], [ %490, %548 ], [ %490, %564 ]
  %577 = load ptr, ptr %17, align 8, !tbaa !684
  %578 = getelementptr inbounds i32, ptr %577, i64 %228
  store i32 %576, ptr %578, align 4, !tbaa !68
  %579 = load ptr, ptr %186, align 8, !tbaa !685
  %580 = getelementptr inbounds i32, ptr %579, i64 %228
  store i32 %575, ptr %580, align 4, !tbaa !68
  %581 = load ptr, ptr %187, align 8, !tbaa !686
  %582 = getelementptr inbounds i32, ptr %581, i64 %228
  store i32 %574, ptr %582, align 4, !tbaa !68
  %583 = load ptr, ptr %188, align 8, !tbaa !687
  %584 = getelementptr inbounds i32, ptr %583, i64 %228
  store i32 %573, ptr %584, align 4, !tbaa !68
  %585 = add i32 %229, 1
  %586 = zext i32 %585 to i64
  %587 = load i64, ptr %20, align 8, !tbaa !543
  %588 = icmp ugt i64 %587, %586
  br i1 %588, label %227, label %219, !llvm.loop !691

589:                                              ; preds = %68
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #57
  call void @cpu_timer_start(ptr noundef nonnull %4) #56
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #57
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #57
  %590 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %591 = load i32, ptr %590, align 8, !tbaa !647
  %592 = mul nsw i32 %591, %591
  %593 = shl i32 2, %592
  %594 = sext i32 %593 to i64
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %7) #57
  call void @_ZNSt6vectorIiSaIiEEC2EmRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %6, i64 noundef %594, ptr noundef nonnull align 1 dereferenceable(1) %7) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #57
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #57
  %595 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 38
  store i32 0, ptr %595, align 8, !tbaa !664
  invoke void @_ZN4Mesh24calc_spatial_coordinatesEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef 0) #56
          to label %596 unwind label %623

596:                                              ; preds = %589
  invoke void @_ZN4Mesh12kdtree_setupEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) #56
          to label %597 unwind label %623

597:                                              ; preds = %596
  %598 = load i64, ptr %4, align 8, !tbaa.struct !560
  %599 = getelementptr inbounds i8, ptr %4, i64 8
  %600 = load i64, ptr %599, align 8, !tbaa.struct !561
  %601 = invoke double @cpu_timer_stop(i64 %598, i64 %600) #56
          to label %602 unwind label %623

602:                                              ; preds = %597
  %603 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 17
  %604 = load double, ptr %603, align 8, !tbaa !171
  %605 = fadd double %601, %604
  store double %605, ptr %603, align 8, !tbaa !171
  invoke void @cpu_timer_start(ptr noundef nonnull %4) #56
          to label %606 unwind label %623

606:                                              ; preds = %602
  %607 = load i64, ptr %20, align 8, !tbaa !543
  %608 = icmp eq i64 %607, 0
  br i1 %608, label %621, label %609

609:                                              ; preds = %606
  %610 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %611 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %612 = getelementptr inbounds %struct.TBounds, ptr %5, i64 0, i32 1
  %613 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %614 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %615 = getelementptr inbounds %struct.TVector, ptr %5, i64 0, i32 1
  %616 = getelementptr inbounds %struct.TBounds, ptr %5, i64 0, i32 1, i32 1
  %617 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 24
  %618 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %619 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %620 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  br label %625

621:                                              ; preds = %770, %606
  %622 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 24
  invoke void @KDTree_Destroy(ptr noundef nonnull %622) #56
          to label %775 unwind label %623

623:                                              ; preds = %775, %621, %602, %597, %596, %589
  %624 = landingpad { ptr, i32 }
          cleanup
  br label %787

625:                                              ; preds = %770, %609
  %626 = phi i64 [ 0, %609 ], [ %772, %770 ]
  %627 = phi i32 [ 0, %609 ], [ %771, %770 ]
  %628 = load ptr, ptr %17, align 8, !tbaa !684
  %629 = getelementptr inbounds i32, ptr %628, i64 %626
  store i32 %627, ptr %629, align 4, !tbaa !68
  %630 = load ptr, ptr %610, align 8, !tbaa !109
  %631 = getelementptr inbounds double, ptr %630, i64 %626
  %632 = load double, ptr %631, align 8, !tbaa !171
  %633 = load ptr, ptr %611, align 8, !tbaa !109
  %634 = getelementptr inbounds double, ptr %633, i64 %626
  %635 = load double, ptr %634, align 8, !tbaa !171
  %636 = fmul double %635, 2.500000e-01
  %637 = fsub double %632, %636
  store double %637, ptr %5, align 8, !tbaa !692
  %638 = load double, ptr %631, align 8, !tbaa !171
  %639 = load double, ptr %634, align 8, !tbaa !171
  %640 = fmul double %639, 2.500000e-01
  %641 = fsub double %638, %640
  store double %641, ptr %612, align 8, !tbaa !693
  %642 = load ptr, ptr %613, align 8, !tbaa !109
  %643 = getelementptr inbounds double, ptr %642, i64 %626
  %644 = load double, ptr %643, align 8, !tbaa !171
  %645 = load ptr, ptr %614, align 8, !tbaa !109
  %646 = getelementptr inbounds double, ptr %645, i64 %626
  %647 = load double, ptr %646, align 8, !tbaa !171
  %648 = fmul double %647, 2.500000e-01
  %649 = fadd double %644, %648
  store double %649, ptr %615, align 8, !tbaa !694
  %650 = load double, ptr %643, align 8, !tbaa !171
  %651 = load double, ptr %646, align 8, !tbaa !171
  %652 = fmul double %651, 2.500000e-01
  %653 = fadd double %650, %652
  store double %653, ptr %616, align 8, !tbaa !695
  %654 = load ptr, ptr %6, align 8, !tbaa !65
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %617, ptr noundef nonnull %8, ptr noundef nonnull %654, ptr noundef nonnull %5) #56
          to label %655 unwind label %663

655:                                              ; preds = %625
  %656 = load i32, ptr %8, align 4, !tbaa !68
  %657 = icmp eq i32 %656, 1
  %658 = load ptr, ptr %6, align 8, !tbaa !65
  br i1 %657, label %659, label %665

659:                                              ; preds = %655
  %660 = load i32, ptr %658, align 4, !tbaa !68
  %661 = load ptr, ptr %17, align 8, !tbaa !684
  %662 = getelementptr inbounds i32, ptr %661, i64 %626
  store i32 %660, ptr %662, align 4, !tbaa !68
  br label %665

663:                                              ; preds = %735, %700, %665, %625
  %664 = landingpad { ptr, i32 }
          cleanup
  br label %787

665:                                              ; preds = %659, %655
  %666 = load ptr, ptr %618, align 8, !tbaa !685
  %667 = getelementptr inbounds i32, ptr %666, i64 %626
  store i32 %627, ptr %667, align 4, !tbaa !68
  %668 = load ptr, ptr %610, align 8, !tbaa !109
  %669 = getelementptr inbounds double, ptr %668, i64 %626
  %670 = load double, ptr %669, align 8, !tbaa !171
  %671 = load ptr, ptr %611, align 8, !tbaa !109
  %672 = getelementptr inbounds double, ptr %671, i64 %626
  %673 = load double, ptr %672, align 8, !tbaa !171
  %674 = fmul double %673, 1.250000e+00
  %675 = fadd double %670, %674
  store double %675, ptr %5, align 8, !tbaa !692
  %676 = load double, ptr %669, align 8, !tbaa !171
  %677 = load double, ptr %672, align 8, !tbaa !171
  %678 = fmul double %677, 1.250000e+00
  %679 = fadd double %676, %678
  store double %679, ptr %612, align 8, !tbaa !693
  %680 = load ptr, ptr %613, align 8, !tbaa !109
  %681 = getelementptr inbounds double, ptr %680, i64 %626
  %682 = load double, ptr %681, align 8, !tbaa !171
  %683 = load ptr, ptr %614, align 8, !tbaa !109
  %684 = getelementptr inbounds double, ptr %683, i64 %626
  %685 = load double, ptr %684, align 8, !tbaa !171
  %686 = fmul double %685, 2.500000e-01
  %687 = fadd double %682, %686
  store double %687, ptr %615, align 8, !tbaa !694
  %688 = load double, ptr %681, align 8, !tbaa !171
  %689 = load double, ptr %684, align 8, !tbaa !171
  %690 = fmul double %689, 2.500000e-01
  %691 = fadd double %688, %690
  store double %691, ptr %616, align 8, !tbaa !695
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %617, ptr noundef nonnull %8, ptr noundef nonnull %658, ptr noundef nonnull %5) #56
          to label %692 unwind label %663

692:                                              ; preds = %665
  %693 = load i32, ptr %8, align 4, !tbaa !68
  %694 = icmp eq i32 %693, 1
  %695 = load ptr, ptr %6, align 8, !tbaa !65
  br i1 %694, label %696, label %700

696:                                              ; preds = %692
  %697 = load i32, ptr %695, align 4, !tbaa !68
  %698 = load ptr, ptr %618, align 8, !tbaa !685
  %699 = getelementptr inbounds i32, ptr %698, i64 %626
  store i32 %697, ptr %699, align 4, !tbaa !68
  br label %700

700:                                              ; preds = %696, %692
  %701 = load ptr, ptr %619, align 8, !tbaa !686
  %702 = getelementptr inbounds i32, ptr %701, i64 %626
  store i32 %627, ptr %702, align 4, !tbaa !68
  %703 = load ptr, ptr %610, align 8, !tbaa !109
  %704 = getelementptr inbounds double, ptr %703, i64 %626
  %705 = load double, ptr %704, align 8, !tbaa !171
  %706 = load ptr, ptr %611, align 8, !tbaa !109
  %707 = getelementptr inbounds double, ptr %706, i64 %626
  %708 = load double, ptr %707, align 8, !tbaa !171
  %709 = fmul double %708, 2.500000e-01
  %710 = fadd double %705, %709
  store double %710, ptr %5, align 8, !tbaa !692
  %711 = load double, ptr %704, align 8, !tbaa !171
  %712 = load double, ptr %707, align 8, !tbaa !171
  %713 = fmul double %712, 2.500000e-01
  %714 = fadd double %711, %713
  store double %714, ptr %612, align 8, !tbaa !693
  %715 = load ptr, ptr %613, align 8, !tbaa !109
  %716 = getelementptr inbounds double, ptr %715, i64 %626
  %717 = load double, ptr %716, align 8, !tbaa !171
  %718 = load ptr, ptr %614, align 8, !tbaa !109
  %719 = getelementptr inbounds double, ptr %718, i64 %626
  %720 = load double, ptr %719, align 8, !tbaa !171
  %721 = fmul double %720, 2.500000e-01
  %722 = fsub double %717, %721
  store double %722, ptr %615, align 8, !tbaa !694
  %723 = load double, ptr %716, align 8, !tbaa !171
  %724 = load double, ptr %719, align 8, !tbaa !171
  %725 = fmul double %724, 2.500000e-01
  %726 = fsub double %723, %725
  store double %726, ptr %616, align 8, !tbaa !695
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %617, ptr noundef nonnull %8, ptr noundef nonnull %695, ptr noundef nonnull %5) #56
          to label %727 unwind label %663

727:                                              ; preds = %700
  %728 = load i32, ptr %8, align 4, !tbaa !68
  %729 = icmp eq i32 %728, 1
  %730 = load ptr, ptr %6, align 8, !tbaa !65
  br i1 %729, label %731, label %735

731:                                              ; preds = %727
  %732 = load i32, ptr %730, align 4, !tbaa !68
  %733 = load ptr, ptr %619, align 8, !tbaa !686
  %734 = getelementptr inbounds i32, ptr %733, i64 %626
  store i32 %732, ptr %734, align 4, !tbaa !68
  br label %735

735:                                              ; preds = %731, %727
  %736 = load ptr, ptr %620, align 8, !tbaa !687
  %737 = getelementptr inbounds i32, ptr %736, i64 %626
  store i32 %627, ptr %737, align 4, !tbaa !68
  %738 = load ptr, ptr %610, align 8, !tbaa !109
  %739 = getelementptr inbounds double, ptr %738, i64 %626
  %740 = load double, ptr %739, align 8, !tbaa !171
  %741 = load ptr, ptr %611, align 8, !tbaa !109
  %742 = getelementptr inbounds double, ptr %741, i64 %626
  %743 = load double, ptr %742, align 8, !tbaa !171
  %744 = fmul double %743, 2.500000e-01
  %745 = fadd double %740, %744
  store double %745, ptr %5, align 8, !tbaa !692
  %746 = load double, ptr %739, align 8, !tbaa !171
  %747 = load double, ptr %742, align 8, !tbaa !171
  %748 = fmul double %747, 2.500000e-01
  %749 = fadd double %746, %748
  store double %749, ptr %612, align 8, !tbaa !693
  %750 = load ptr, ptr %613, align 8, !tbaa !109
  %751 = getelementptr inbounds double, ptr %750, i64 %626
  %752 = load double, ptr %751, align 8, !tbaa !171
  %753 = load ptr, ptr %614, align 8, !tbaa !109
  %754 = getelementptr inbounds double, ptr %753, i64 %626
  %755 = load double, ptr %754, align 8, !tbaa !171
  %756 = fmul double %755, 1.250000e+00
  %757 = fadd double %752, %756
  store double %757, ptr %615, align 8, !tbaa !694
  %758 = load double, ptr %751, align 8, !tbaa !171
  %759 = load double, ptr %754, align 8, !tbaa !171
  %760 = fmul double %759, 1.250000e+00
  %761 = fadd double %758, %760
  store double %761, ptr %616, align 8, !tbaa !695
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %617, ptr noundef nonnull %8, ptr noundef nonnull %730, ptr noundef nonnull %5) #56
          to label %762 unwind label %663

762:                                              ; preds = %735
  %763 = load i32, ptr %8, align 4, !tbaa !68
  %764 = icmp eq i32 %763, 1
  br i1 %764, label %765, label %770

765:                                              ; preds = %762
  %766 = load ptr, ptr %6, align 8, !tbaa !65
  %767 = load i32, ptr %766, align 4, !tbaa !68
  %768 = load ptr, ptr %620, align 8, !tbaa !687
  %769 = getelementptr inbounds i32, ptr %768, i64 %626
  store i32 %767, ptr %769, align 4, !tbaa !68
  br label %770

770:                                              ; preds = %765, %762
  %771 = add i32 %627, 1
  %772 = zext i32 %771 to i64
  %773 = load i64, ptr %20, align 8, !tbaa !543
  %774 = icmp ugt i64 %773, %772
  br i1 %774, label %625, label %621, !llvm.loop !696

775:                                              ; preds = %621
  %776 = load i64, ptr %4, align 8, !tbaa.struct !560
  %777 = load i64, ptr %599, align 8, !tbaa.struct !561
  %778 = invoke double @cpu_timer_stop(i64 %776, i64 %777) #56
          to label %779 unwind label %623

779:                                              ; preds = %775
  %780 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 18
  %781 = load double, ptr %780, align 8, !tbaa !171
  %782 = fadd double %778, %781
  store double %782, ptr %780, align 8, !tbaa !171
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #57
  %783 = load ptr, ptr %6, align 8, !tbaa !65
  %784 = icmp eq ptr %783, null
  br i1 %784, label %786, label %785

785:                                              ; preds = %779
  call void @_ZdlPv(ptr noundef nonnull %783) #58
  br label %786

786:                                              ; preds = %785, %779
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #57
  br label %793

787:                                              ; preds = %663, %623
  %788 = phi { ptr, i32 } [ %664, %663 ], [ %624, %623 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #57
  %789 = load ptr, ptr %6, align 8, !tbaa !65
  %790 = icmp eq ptr %789, null
  br i1 %790, label %792, label %791

791:                                              ; preds = %787
  call void @_ZdlPv(ptr noundef nonnull %789) #58
  br label %792

792:                                              ; preds = %791, %787
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #57
  resume { ptr, i32 } %788

793:                                              ; preds = %786, %219, %68, %1
  %794 = load i64, ptr %2, align 8, !tbaa.struct !560
  %795 = getelementptr inbounds i8, ptr %2, i64 8
  %796 = load i64, ptr %795, align 8, !tbaa.struct !561
  %797 = call double @cpu_timer_stop(i64 %794, i64 %796) #56
  %798 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 1
  %799 = load double, ptr %798, align 8, !tbaa !171
  %800 = fadd double %797, %799
  store double %800, ptr %798, align 8, !tbaa !171
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #57
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN4Mesh12kdtree_setupEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) #13 align 2 {
  %2 = alloca %struct.TBounds, align 8
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 24
  tail call void @KDTree_Initialize(ptr noundef nonnull %3) #56
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #57
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %5 = load i64, ptr %4, align 8, !tbaa !543
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %10 = getelementptr inbounds %struct.TBounds, ptr %2, i64 0, i32 1
  %11 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %12 = getelementptr inbounds %struct.TVector, ptr %2, i64 0, i32 1
  %13 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %14 = getelementptr inbounds %struct.TBounds, ptr %2, i64 0, i32 1, i32 1
  br label %16

15:                                               ; preds = %16, %1
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #57
  ret void

16:                                               ; preds = %16, %7
  %17 = phi i64 [ 0, %7 ], [ %36, %16 ]
  %18 = phi i32 [ 0, %7 ], [ %35, %16 ]
  %19 = load ptr, ptr %8, align 8, !tbaa !109
  %20 = getelementptr inbounds double, ptr %19, i64 %17
  %21 = load double, ptr %20, align 8, !tbaa !171
  store double %21, ptr %2, align 8, !tbaa !692
  %22 = load double, ptr %20, align 8, !tbaa !171
  %23 = load ptr, ptr %9, align 8, !tbaa !109
  %24 = getelementptr inbounds double, ptr %23, i64 %17
  %25 = load double, ptr %24, align 8, !tbaa !171
  %26 = fadd double %22, %25
  store double %26, ptr %10, align 8, !tbaa !693
  %27 = load ptr, ptr %11, align 8, !tbaa !109
  %28 = getelementptr inbounds double, ptr %27, i64 %17
  %29 = load double, ptr %28, align 8, !tbaa !171
  store double %29, ptr %12, align 8, !tbaa !694
  %30 = load double, ptr %28, align 8, !tbaa !171
  %31 = load ptr, ptr %13, align 8, !tbaa !109
  %32 = getelementptr inbounds double, ptr %31, i64 %17
  %33 = load double, ptr %32, align 8, !tbaa !171
  %34 = fadd double %30, %33
  store double %34, ptr %14, align 8, !tbaa !695
  call void @KDTree_AddElement(ptr noundef nonnull %3, ptr noundef nonnull %2) #56
  %35 = add i32 %18, 1
  %36 = zext i32 %35 to i64
  %37 = load i64, ptr %4, align 8, !tbaa !543
  %38 = icmp ugt i64 %37, %36
  br i1 %38, label %16, label %15, !llvm.loop !697
}

; Function Attrs: optsize uwtable
define internal noundef i64 @_ZN4Mesh13refine_smoothERSt6vectorIiSaIiEERiS4_(ptr nocapture noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr nocapture noundef nonnull align 4 dereferenceable(4) %2, ptr nocapture noundef nonnull align 4 dereferenceable(4) %3) #6 align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.std::vector", align 8
  %6 = alloca %struct.timeval, align 8
  %7 = alloca %"class.std::vector", align 8
  %8 = alloca %"class.std::vector", align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #57
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #57
  invoke void @_ZNSt6vectorIiSaIiEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %1) #56
          to label %9 unwind label %56

9:                                                ; preds = %4
  %10 = call noundef i32 @_ZN4Mesh12rezone_countESt6vectorIiSaIiEERiS3_(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef nonnull %7, ptr noundef nonnull align 4 dereferenceable(4) %2, ptr noundef nonnull align 4 dereferenceable(4) %3) #56
  %11 = load ptr, ptr %7, align 8, !tbaa !65
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  call void @_ZdlPv(ptr noundef nonnull %11) #58
  br label %14

14:                                               ; preds = %13, %9
  %15 = load i32, ptr %2, align 4, !tbaa !68
  invoke void @cpu_timer_start(ptr noundef nonnull %6) #56
          to label %16 unwind label %56

16:                                               ; preds = %14
  %17 = icmp sgt i32 %15, 0
  br i1 %17, label %18, label %253

18:                                               ; preds = %16
  %19 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %20 = load i32, ptr %19, align 8, !tbaa !647
  %21 = icmp sgt i32 %20, 1
  br i1 %21, label %22, label %253

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 11
  %25 = load i32, ptr %24, align 4, !tbaa !653
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  %28 = load i64, ptr %23, align 8
  %29 = load i64, ptr %27, align 8
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5, i64 1
  %32 = load i32, ptr %31, align 4, !tbaa !68
  %33 = add nsw i32 %32, 1
  store i32 %33, ptr %31, align 4, !tbaa !68
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %5, i64 noundef %30) #56
          to label %34 unwind label %80

34:                                               ; preds = %22
  %35 = load i32, ptr %19, align 8
  %36 = icmp sgt i32 %35, 1
  br i1 %36, label %37, label %253

37:                                               ; preds = %34
  %38 = load ptr, ptr %5, align 8, !tbaa !65
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %1, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %1, i64 0, i32 2
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %5, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %5, i64 0, i32 2
  %43 = load i64, ptr %23, align 8, !tbaa !543
  %44 = icmp eq i64 %43, 0
  %45 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %48 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %49 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %50 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %51 = load ptr, ptr %41, align 8, !tbaa !70
  %52 = load ptr, ptr %42, align 8, !tbaa !67
  %53 = load ptr, ptr %1, align 8, !tbaa !65
  %54 = load ptr, ptr %39, align 8, !tbaa !70
  %55 = load ptr, ptr %40, align 8, !tbaa !67
  br label %58

56:                                               ; preds = %566, %538, %259, %14, %4
  %57 = landingpad { ptr, i32 }
          cleanup
  br label %589

58:                                               ; preds = %72, %37
  %59 = phi ptr [ %55, %37 ], [ %62, %72 ]
  %60 = phi ptr [ %54, %37 ], [ %63, %72 ]
  %61 = phi ptr [ %53, %37 ], [ %65, %72 ]
  %62 = phi ptr [ %52, %37 ], [ %59, %72 ]
  %63 = phi ptr [ %51, %37 ], [ %60, %72 ]
  %64 = phi i32 [ 1, %37 ], [ %66, %72 ]
  %65 = phi ptr [ %38, %37 ], [ %61, %72 ]
  %66 = add nuw nsw i32 %64, 1
  store ptr %65, ptr %1, align 8, !tbaa !65
  store ptr %63, ptr %39, align 8, !tbaa !70
  store ptr %62, ptr %40, align 8, !tbaa !67
  br i1 %44, label %72, label %67

67:                                               ; preds = %58
  %68 = load ptr, ptr %47, align 8
  %69 = load ptr, ptr %48, align 8
  %70 = load ptr, ptr %49, align 8
  %71 = load ptr, ptr %50, align 8
  br label %82

72:                                               ; preds = %247, %58
  %73 = phi i32 [ 0, %58 ], [ %248, %247 ]
  %74 = load i32, ptr %2, align 4, !tbaa !68
  %75 = add nsw i32 %74, %73
  store i32 %75, ptr %2, align 4, !tbaa !68
  %76 = icmp sgt i32 %73, 0
  %77 = load i32, ptr %19, align 8
  %78 = icmp slt i32 %66, %77
  %79 = select i1 %76, i1 %78, i1 false
  br i1 %79, label %58, label %252, !llvm.loop !698

80:                                               ; preds = %22
  %81 = landingpad { ptr, i32 }
          cleanup
  br label %589

82:                                               ; preds = %247, %67
  %83 = phi i64 [ 0, %67 ], [ %250, %247 ]
  %84 = phi i32 [ 0, %67 ], [ %248, %247 ]
  %85 = phi i32 [ 0, %67 ], [ %249, %247 ]
  %86 = getelementptr inbounds i32, ptr %46, i64 %83
  %87 = load i32, ptr %86, align 4, !tbaa !68
  %88 = getelementptr inbounds i32, ptr %61, i64 %83
  %89 = load i32, ptr %88, align 4, !tbaa !68
  %90 = getelementptr inbounds i32, ptr %65, i64 %83
  store i32 %89, ptr %90, align 4, !tbaa !68
  %91 = load i32, ptr %88, align 4, !tbaa !68
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %247, label %93

93:                                               ; preds = %82
  %94 = getelementptr inbounds i32, ptr %68, i64 %83
  %95 = load i32, ptr %94, align 4, !tbaa !68
  %96 = icmp sgt i32 %95, -1
  br i1 %96, label %97, label %131

97:                                               ; preds = %93
  %98 = load i64, ptr %27, align 8
  %99 = trunc i64 %98 to i32
  %100 = icmp slt i32 %95, %99
  br i1 %100, label %101, label %131

101:                                              ; preds = %97
  %102 = zext i32 %95 to i64
  %103 = getelementptr inbounds i32, ptr %46, i64 %102
  %104 = load i32, ptr %103, align 4, !tbaa !68
  %105 = getelementptr inbounds i32, ptr %61, i64 %102
  %106 = load i32, ptr %105, align 4, !tbaa !68
  %107 = icmp sgt i32 %106, 0
  %108 = zext i1 %107 to i32
  %109 = sub i32 %104, %87
  %110 = add i32 %109, %108
  %111 = icmp sgt i32 %110, 1
  br i1 %111, label %245, label %112

112:                                              ; preds = %101
  %113 = icmp sgt i32 %104, %87
  br i1 %113, label %114, label %131

114:                                              ; preds = %112
  %115 = getelementptr inbounds i32, ptr %69, i64 %102
  %116 = load i32, ptr %115, align 4, !tbaa !68
  %117 = icmp sgt i32 %116, -1
  %118 = icmp slt i32 %116, %99
  %119 = and i1 %117, %118
  br i1 %119, label %120, label %131

120:                                              ; preds = %114
  %121 = zext i32 %116 to i64
  %122 = getelementptr inbounds i32, ptr %46, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !68
  %124 = getelementptr inbounds i32, ptr %61, i64 %121
  %125 = load i32, ptr %124, align 4, !tbaa !68
  %126 = icmp sgt i32 %125, 0
  %127 = zext i1 %126 to i32
  %128 = sub i32 %123, %87
  %129 = add i32 %128, %127
  %130 = icmp slt i32 %129, 2
  br i1 %130, label %131, label %245

131:                                              ; preds = %120, %114, %112, %97, %93
  %132 = getelementptr inbounds i32, ptr %70, i64 %83
  %133 = load i32, ptr %132, align 4, !tbaa !68
  %134 = icmp sgt i32 %133, -1
  br i1 %134, label %135, label %169

135:                                              ; preds = %131
  %136 = load i64, ptr %27, align 8
  %137 = trunc i64 %136 to i32
  %138 = icmp slt i32 %133, %137
  br i1 %138, label %139, label %169

139:                                              ; preds = %135
  %140 = zext i32 %133 to i64
  %141 = getelementptr inbounds i32, ptr %46, i64 %140
  %142 = load i32, ptr %141, align 4, !tbaa !68
  %143 = getelementptr inbounds i32, ptr %61, i64 %140
  %144 = load i32, ptr %143, align 4, !tbaa !68
  %145 = icmp sgt i32 %144, 0
  %146 = zext i1 %145 to i32
  %147 = sub i32 %142, %87
  %148 = add i32 %147, %146
  %149 = icmp sgt i32 %148, 1
  br i1 %149, label %245, label %150

150:                                              ; preds = %139
  %151 = icmp sgt i32 %142, %87
  br i1 %151, label %152, label %169

152:                                              ; preds = %150
  %153 = getelementptr inbounds i32, ptr %69, i64 %140
  %154 = load i32, ptr %153, align 4, !tbaa !68
  %155 = icmp sgt i32 %154, -1
  %156 = icmp slt i32 %154, %137
  %157 = and i1 %155, %156
  br i1 %157, label %158, label %169

158:                                              ; preds = %152
  %159 = zext i32 %154 to i64
  %160 = getelementptr inbounds i32, ptr %46, i64 %159
  %161 = load i32, ptr %160, align 4, !tbaa !68
  %162 = getelementptr inbounds i32, ptr %61, i64 %159
  %163 = load i32, ptr %162, align 4, !tbaa !68
  %164 = icmp sgt i32 %163, 0
  %165 = zext i1 %164 to i32
  %166 = sub i32 %161, %87
  %167 = add i32 %166, %165
  %168 = icmp slt i32 %167, 2
  br i1 %168, label %169, label %245

169:                                              ; preds = %158, %152, %150, %135, %131
  %170 = getelementptr inbounds i32, ptr %69, i64 %83
  %171 = load i32, ptr %170, align 4, !tbaa !68
  %172 = icmp sgt i32 %171, -1
  br i1 %172, label %173, label %207

173:                                              ; preds = %169
  %174 = load i64, ptr %27, align 8
  %175 = trunc i64 %174 to i32
  %176 = icmp slt i32 %171, %175
  br i1 %176, label %177, label %207

177:                                              ; preds = %173
  %178 = zext i32 %171 to i64
  %179 = getelementptr inbounds i32, ptr %46, i64 %178
  %180 = load i32, ptr %179, align 4, !tbaa !68
  %181 = getelementptr inbounds i32, ptr %61, i64 %178
  %182 = load i32, ptr %181, align 4, !tbaa !68
  %183 = icmp sgt i32 %182, 0
  %184 = zext i1 %183 to i32
  %185 = sub i32 %180, %87
  %186 = add i32 %185, %184
  %187 = icmp sgt i32 %186, 1
  br i1 %187, label %245, label %188

188:                                              ; preds = %177
  %189 = icmp sgt i32 %180, %87
  br i1 %189, label %190, label %207

190:                                              ; preds = %188
  %191 = getelementptr inbounds i32, ptr %70, i64 %178
  %192 = load i32, ptr %191, align 4, !tbaa !68
  %193 = icmp sgt i32 %192, -1
  %194 = icmp slt i32 %192, %175
  %195 = and i1 %193, %194
  br i1 %195, label %196, label %207

196:                                              ; preds = %190
  %197 = zext i32 %192 to i64
  %198 = getelementptr inbounds i32, ptr %46, i64 %197
  %199 = load i32, ptr %198, align 4, !tbaa !68
  %200 = getelementptr inbounds i32, ptr %61, i64 %197
  %201 = load i32, ptr %200, align 4, !tbaa !68
  %202 = icmp sgt i32 %201, 0
  %203 = zext i1 %202 to i32
  %204 = sub i32 %199, %87
  %205 = add i32 %204, %203
  %206 = icmp slt i32 %205, 2
  br i1 %206, label %207, label %245

207:                                              ; preds = %196, %190, %188, %173, %169
  %208 = getelementptr inbounds i32, ptr %71, i64 %83
  %209 = load i32, ptr %208, align 4, !tbaa !68
  %210 = icmp sgt i32 %209, -1
  br i1 %210, label %211, label %247

211:                                              ; preds = %207
  %212 = load i64, ptr %27, align 8
  %213 = trunc i64 %212 to i32
  %214 = icmp slt i32 %209, %213
  br i1 %214, label %215, label %247

215:                                              ; preds = %211
  %216 = zext i32 %209 to i64
  %217 = getelementptr inbounds i32, ptr %46, i64 %216
  %218 = load i32, ptr %217, align 4, !tbaa !68
  %219 = getelementptr inbounds i32, ptr %61, i64 %216
  %220 = load i32, ptr %219, align 4, !tbaa !68
  %221 = icmp sgt i32 %220, 0
  %222 = zext i1 %221 to i32
  %223 = sub i32 %218, %87
  %224 = add i32 %223, %222
  %225 = icmp sgt i32 %224, 1
  br i1 %225, label %245, label %226

226:                                              ; preds = %215
  %227 = icmp sgt i32 %218, %87
  br i1 %227, label %228, label %247

228:                                              ; preds = %226
  %229 = getelementptr inbounds i32, ptr %70, i64 %216
  %230 = load i32, ptr %229, align 4, !tbaa !68
  %231 = icmp sgt i32 %230, -1
  %232 = icmp slt i32 %230, %213
  %233 = and i1 %231, %232
  br i1 %233, label %234, label %247

234:                                              ; preds = %228
  %235 = zext i32 %230 to i64
  %236 = getelementptr inbounds i32, ptr %46, i64 %235
  %237 = load i32, ptr %236, align 4, !tbaa !68
  %238 = getelementptr inbounds i32, ptr %61, i64 %235
  %239 = load i32, ptr %238, align 4, !tbaa !68
  %240 = icmp sgt i32 %239, 0
  %241 = zext i1 %240 to i32
  %242 = sub i32 %237, %87
  %243 = add i32 %242, %241
  %244 = icmp slt i32 %243, 2
  br i1 %244, label %247, label %245

245:                                              ; preds = %234, %215, %196, %177, %158, %139, %120, %101
  store i32 1, ptr %90, align 4, !tbaa !68
  %246 = add nsw i32 %84, 1
  br label %247

247:                                              ; preds = %245, %234, %228, %226, %211, %207, %82
  %248 = phi i32 [ %84, %82 ], [ %84, %211 ], [ %84, %207 ], [ %84, %226 ], [ %84, %228 ], [ %84, %234 ], [ %246, %245 ]
  %249 = add i32 %85, 1
  %250 = zext i32 %249 to i64
  %251 = icmp ugt i64 %43, %250
  br i1 %251, label %82, label %72, !llvm.loop !699

252:                                              ; preds = %72
  %.lcssa2 = phi ptr [ %59, %72 ]
  %.lcssa1 = phi ptr [ %60, %72 ]
  %.lcssa = phi ptr [ %61, %72 ]
  store ptr %.lcssa1, ptr %41, align 8, !tbaa !70
  store ptr %.lcssa2, ptr %42, align 8, !tbaa !67
  store ptr %.lcssa, ptr %5, align 8, !tbaa !65
  br label %253

253:                                              ; preds = %252, %34, %18, %16
  %254 = load ptr, ptr %5, align 8, !tbaa !65
  %255 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %5, i64 0, i32 1
  %256 = load ptr, ptr %255, align 8, !tbaa !70
  %257 = icmp eq ptr %256, %254
  br i1 %257, label %259, label %258

258:                                              ; preds = %253
  store ptr %254, ptr %255, align 8, !tbaa !70
  br label %259

259:                                              ; preds = %258, %253
  %260 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  %261 = load i64, ptr %260, align 8, !tbaa !652
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %5, i64 noundef %261) #56
          to label %262 unwind label %56

262:                                              ; preds = %259
  %263 = load ptr, ptr %5, align 8, !tbaa !65
  %264 = load ptr, ptr %1, align 8, !tbaa !65
  %265 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %1, i64 0, i32 1
  %266 = load ptr, ptr %265, align 8, !tbaa !70
  %267 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %1, i64 0, i32 2
  %268 = load ptr, ptr %267, align 8, !tbaa !67
  store ptr %263, ptr %1, align 8, !tbaa !65
  %269 = load <2 x ptr>, ptr %255, align 8, !tbaa !29
  store <2 x ptr> %269, ptr %265, align 8, !tbaa !29
  %270 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %271 = load i64, ptr %270, align 8, !tbaa !543
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %262
  store ptr %264, ptr %1, align 8, !tbaa !65
  store ptr %266, ptr %265, align 8, !tbaa !70
  store ptr %268, ptr %267, align 8, !tbaa !67
  br label %538

274:                                              ; preds = %262
  %275 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %276 = load ptr, ptr %275, align 8
  %277 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %278 = load ptr, ptr %277, align 8
  %279 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %280 = load ptr, ptr %279, align 8
  %281 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %282 = load ptr, ptr %281, align 8
  %283 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %284 = load ptr, ptr %283, align 8
  %285 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %286 = load ptr, ptr %285, align 8
  %287 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %288 = load ptr, ptr %287, align 8
  br label %304

289:                                              ; preds = %439
  store ptr %264, ptr %1, align 8, !tbaa !65
  store ptr %266, ptr %265, align 8, !tbaa !70
  store ptr %268, ptr %267, align 8, !tbaa !67
  %290 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %291 = load ptr, ptr %290, align 8
  %292 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %293 = load ptr, ptr %292, align 8
  %294 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %295 = load ptr, ptr %294, align 8
  %296 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %297 = load ptr, ptr %296, align 8
  %298 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %299 = load ptr, ptr %298, align 8
  %300 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %301 = load ptr, ptr %300, align 8
  %302 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %303 = load ptr, ptr %302, align 8
  br label %454

304:                                              ; preds = %439, %274
  %305 = phi i64 [ 0, %274 ], [ %441, %439 ]
  %306 = phi i32 [ 0, %274 ], [ %440, %439 ]
  %307 = getelementptr inbounds i32, ptr %264, i64 %305
  %308 = load i32, ptr %307, align 4, !tbaa !68
  %309 = getelementptr inbounds i32, ptr %263, i64 %305
  store i32 %308, ptr %309, align 4, !tbaa !68
  %310 = load i32, ptr %307, align 4, !tbaa !68
  %311 = icmp ult i32 %310, -999999
  br i1 %311, label %439, label %312

312:                                              ; preds = %304
  %313 = getelementptr inbounds i32, ptr %276, i64 %305
  %314 = load i32, ptr %313, align 4, !tbaa !68
  %315 = getelementptr inbounds i32, ptr %278, i64 %305
  %316 = load i32, ptr %315, align 4, !tbaa !68
  %317 = and i32 %314, -2147483647
  %318 = icmp eq i32 %317, 1
  %319 = and i32 %316, -2147483647
  %320 = icmp eq i32 %319, 1
  %321 = and i1 %318, %320
  br i1 %321, label %322, label %348

322:                                              ; preds = %312
  %323 = getelementptr inbounds i32, ptr %286, i64 %305
  %324 = load i32, ptr %323, align 4, !tbaa !68
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds i32, ptr %282, i64 %325
  %327 = load i32, ptr %326, align 4, !tbaa !68
  %328 = getelementptr inbounds i32, ptr %264, i64 %325
  %329 = load i32, ptr %328, align 4, !tbaa !68
  %330 = icmp sgt i32 %329, 0
  %331 = zext i1 %330 to i32
  %332 = add nsw i32 %327, %331
  %333 = getelementptr inbounds i32, ptr %288, i64 %305
  %334 = load i32, ptr %333, align 4, !tbaa !68
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds i32, ptr %282, i64 %335
  %337 = load i32, ptr %336, align 4, !tbaa !68
  %338 = getelementptr inbounds i32, ptr %264, i64 %335
  %339 = load i32, ptr %338, align 4, !tbaa !68
  %340 = icmp sgt i32 %339, 0
  %341 = zext i1 %340 to i32
  %342 = add nsw i32 %337, %341
  %343 = getelementptr inbounds i32, ptr %282, i64 %305
  %344 = load i32, ptr %343, align 4, !tbaa !68
  %345 = icmp sgt i32 %332, %344
  %346 = icmp sgt i32 %342, %344
  %347 = select i1 %345, i1 true, i1 %346
  br i1 %347, label %438, label %439

348:                                              ; preds = %312
  %349 = and i32 %314, 1
  %350 = icmp eq i32 %349, 0
  %351 = and i1 %350, %320
  br i1 %351, label %352, label %378

352:                                              ; preds = %348
  %353 = getelementptr inbounds i32, ptr %280, i64 %305
  %354 = load i32, ptr %353, align 4, !tbaa !68
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds i32, ptr %282, i64 %355
  %357 = load i32, ptr %356, align 4, !tbaa !68
  %358 = getelementptr inbounds i32, ptr %264, i64 %355
  %359 = load i32, ptr %358, align 4, !tbaa !68
  %360 = icmp sgt i32 %359, 0
  %361 = zext i1 %360 to i32
  %362 = add nsw i32 %357, %361
  %363 = getelementptr inbounds i32, ptr %288, i64 %305
  %364 = load i32, ptr %363, align 4, !tbaa !68
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds i32, ptr %282, i64 %365
  %367 = load i32, ptr %366, align 4, !tbaa !68
  %368 = getelementptr inbounds i32, ptr %264, i64 %365
  %369 = load i32, ptr %368, align 4, !tbaa !68
  %370 = icmp sgt i32 %369, 0
  %371 = zext i1 %370 to i32
  %372 = add nsw i32 %367, %371
  %373 = getelementptr inbounds i32, ptr %282, i64 %305
  %374 = load i32, ptr %373, align 4, !tbaa !68
  %375 = icmp sgt i32 %362, %374
  %376 = icmp sgt i32 %372, %374
  %377 = select i1 %375, i1 true, i1 %376
  br i1 %377, label %438, label %439

378:                                              ; preds = %348
  %379 = and i32 %316, 1
  %380 = icmp eq i32 %379, 0
  %381 = and i1 %318, %380
  br i1 %381, label %382, label %408

382:                                              ; preds = %378
  %383 = getelementptr inbounds i32, ptr %286, i64 %305
  %384 = load i32, ptr %383, align 4, !tbaa !68
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds i32, ptr %282, i64 %385
  %387 = load i32, ptr %386, align 4, !tbaa !68
  %388 = getelementptr inbounds i32, ptr %264, i64 %385
  %389 = load i32, ptr %388, align 4, !tbaa !68
  %390 = icmp sgt i32 %389, 0
  %391 = zext i1 %390 to i32
  %392 = add nsw i32 %387, %391
  %393 = getelementptr inbounds i32, ptr %284, i64 %305
  %394 = load i32, ptr %393, align 4, !tbaa !68
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds i32, ptr %282, i64 %395
  %397 = load i32, ptr %396, align 4, !tbaa !68
  %398 = getelementptr inbounds i32, ptr %264, i64 %395
  %399 = load i32, ptr %398, align 4, !tbaa !68
  %400 = icmp sgt i32 %399, 0
  %401 = zext i1 %400 to i32
  %402 = add nsw i32 %397, %401
  %403 = getelementptr inbounds i32, ptr %282, i64 %305
  %404 = load i32, ptr %403, align 4, !tbaa !68
  %405 = icmp sgt i32 %392, %404
  %406 = icmp sgt i32 %402, %404
  %407 = select i1 %405, i1 true, i1 %406
  br i1 %407, label %438, label %439

408:                                              ; preds = %378
  %409 = or i32 %314, %316
  %410 = and i32 %409, 1
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %439

412:                                              ; preds = %408
  %413 = getelementptr inbounds i32, ptr %280, i64 %305
  %414 = load i32, ptr %413, align 4, !tbaa !68
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds i32, ptr %282, i64 %415
  %417 = load i32, ptr %416, align 4, !tbaa !68
  %418 = getelementptr inbounds i32, ptr %264, i64 %415
  %419 = load i32, ptr %418, align 4, !tbaa !68
  %420 = icmp sgt i32 %419, 0
  %421 = zext i1 %420 to i32
  %422 = add nsw i32 %417, %421
  %423 = getelementptr inbounds i32, ptr %284, i64 %305
  %424 = load i32, ptr %423, align 4, !tbaa !68
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds i32, ptr %282, i64 %425
  %427 = load i32, ptr %426, align 4, !tbaa !68
  %428 = getelementptr inbounds i32, ptr %264, i64 %425
  %429 = load i32, ptr %428, align 4, !tbaa !68
  %430 = icmp sgt i32 %429, 0
  %431 = zext i1 %430 to i32
  %432 = add nsw i32 %427, %431
  %433 = getelementptr inbounds i32, ptr %282, i64 %305
  %434 = load i32, ptr %433, align 4, !tbaa !68
  %435 = icmp sgt i32 %422, %434
  %436 = icmp sgt i32 %432, %434
  %437 = select i1 %435, i1 true, i1 %436
  br i1 %437, label %438, label %439

438:                                              ; preds = %412, %382, %352, %322
  store i32 0, ptr %309, align 4, !tbaa !68
  br label %439

439:                                              ; preds = %438, %412, %408, %382, %352, %322, %304
  %440 = add i32 %306, 1
  %441 = zext i32 %440 to i64
  %442 = icmp ugt i64 %271, %441
  br i1 %442, label %304, label %289, !llvm.loop !700

443:                                              ; preds = %534
  %444 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %445 = load ptr, ptr %444, align 8, !tbaa !682
  %446 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %447 = load ptr, ptr %446, align 8
  %448 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %449 = load ptr, ptr %448, align 8
  %450 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %451 = load ptr, ptr %450, align 8
  %452 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %453 = load ptr, ptr %452, align 8
  br label %539

454:                                              ; preds = %534, %289
  %455 = phi i64 [ 0, %289 ], [ %536, %534 ]
  %456 = phi i32 [ 0, %289 ], [ %535, %534 ]
  %457 = getelementptr inbounds i32, ptr %263, i64 %455
  %458 = load i32, ptr %457, align 4, !tbaa !68
  %459 = getelementptr inbounds i32, ptr %264, i64 %455
  store i32 %458, ptr %459, align 4, !tbaa !68
  %460 = load i32, ptr %457, align 4, !tbaa !68
  %461 = icmp ult i32 %460, -999999
  br i1 %461, label %534, label %462

462:                                              ; preds = %454
  %463 = getelementptr inbounds i32, ptr %291, i64 %455
  %464 = load i32, ptr %463, align 4, !tbaa !68
  %465 = getelementptr inbounds i32, ptr %293, i64 %455
  %466 = load i32, ptr %465, align 4, !tbaa !68
  %467 = and i32 %464, -2147483647
  %468 = icmp eq i32 %467, 1
  %469 = and i32 %466, -2147483647
  %470 = icmp eq i32 %469, 1
  %471 = and i1 %468, %470
  br i1 %471, label %484, label %472

472:                                              ; preds = %462
  %473 = and i32 %464, 1
  %474 = icmp eq i32 %473, 0
  %475 = and i1 %474, %470
  br i1 %475, label %484, label %476

476:                                              ; preds = %472
  %477 = and i32 %466, 1
  %478 = icmp eq i32 %477, 0
  %479 = and i1 %468, %478
  br i1 %479, label %484, label %480

480:                                              ; preds = %476
  %481 = or i32 %464, %466
  %482 = and i32 %481, 1
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %484, label %495

484:                                              ; preds = %480, %476, %472, %462
  %485 = phi ptr [ %301, %462 ], [ %301, %472 ], [ %295, %476 ], [ %295, %480 ]
  %486 = phi ptr [ %299, %462 ], [ %297, %472 ], [ %299, %476 ], [ %297, %480 ]
  %487 = getelementptr inbounds i32, ptr %485, i64 %455
  %488 = load i32, ptr %487, align 4, !tbaa !68
  %489 = getelementptr inbounds i32, ptr %486, i64 %455
  %490 = sext i32 %488 to i64
  %491 = getelementptr inbounds i32, ptr %486, i64 %490
  %492 = load i32, ptr %491, align 4, !tbaa !68
  %493 = load i32, ptr %489, align 4, !tbaa !68
  %494 = icmp slt i32 %492, 0
  br i1 %494, label %533, label %495

495:                                              ; preds = %484, %480
  %496 = phi i32 [ %492, %484 ], [ 0, %480 ]
  %497 = phi i32 [ %493, %484 ], [ 0, %480 ]
  %498 = phi i32 [ %488, %484 ], [ 0, %480 ]
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds i32, ptr %263, i64 %499
  %501 = load i32, ptr %500, align 4, !tbaa !68
  %502 = icmp eq i32 %501, -1
  br i1 %502, label %503, label %533

503:                                              ; preds = %495
  %504 = zext i32 %496 to i64
  %505 = getelementptr inbounds i32, ptr %263, i64 %504
  %506 = load i32, ptr %505, align 4, !tbaa !68
  %507 = icmp sgt i32 %506, 0
  %508 = getelementptr inbounds i32, ptr %303, i64 %504
  %509 = load i32, ptr %508, align 4, !tbaa !68
  %510 = zext i1 %507 to i32
  %511 = add nsw i32 %509, %510
  %512 = sext i32 %497 to i64
  %513 = getelementptr inbounds i32, ptr %263, i64 %512
  %514 = load i32, ptr %513, align 4, !tbaa !68
  %515 = icmp sgt i32 %514, 0
  %516 = getelementptr inbounds i32, ptr %303, i64 %512
  %517 = load i32, ptr %516, align 4, !tbaa !68
  %518 = zext i1 %515 to i32
  %519 = add nsw i32 %517, %518
  %520 = getelementptr inbounds i32, ptr %303, i64 %499
  %521 = load i32, ptr %520, align 4, !tbaa !68
  %522 = getelementptr inbounds i32, ptr %303, i64 %455
  %523 = load i32, ptr %522, align 4, !tbaa !68
  %524 = icmp eq i32 %521, %523
  %525 = icmp eq i32 %514, -1
  %526 = select i1 %524, i1 %525, i1 false
  %527 = icmp eq i32 %519, %523
  %528 = select i1 %526, i1 %527, i1 false
  %529 = icmp eq i32 %506, -1
  %530 = select i1 %528, i1 %529, i1 false
  %531 = icmp eq i32 %511, %523
  %532 = select i1 %530, i1 %531, i1 false
  br i1 %532, label %534, label %533

533:                                              ; preds = %503, %495, %484
  store i32 0, ptr %459, align 4, !tbaa !68
  br label %534

534:                                              ; preds = %533, %503, %454
  %535 = add i32 %456, 1
  %536 = zext i32 %535 to i64
  %537 = icmp ugt i64 %271, %536
  br i1 %537, label %454, label %443, !llvm.loop !701

538:                                              ; preds = %557, %273
  invoke void @_ZNSt6vectorIiSaIiEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %1) #56
          to label %561 unwind label %56

539:                                              ; preds = %557, %443
  %540 = phi i64 [ 0, %443 ], [ %559, %557 ]
  %541 = phi i32 [ 0, %443 ], [ %558, %557 ]
  %542 = getelementptr inbounds i32, ptr %445, i64 %540
  %543 = load i32, ptr %542, align 4, !tbaa !68
  %544 = icmp slt i32 %543, 0
  br i1 %544, label %545, label %557

545:                                              ; preds = %539
  switch i32 %543, label %557 [
    i32 -1, label %549
    i32 -2, label %546
    i32 -3, label %547
    i32 -4, label %548
  ]

546:                                              ; preds = %545
  br label %549

547:                                              ; preds = %545
  br label %549

548:                                              ; preds = %545
  br label %549

549:                                              ; preds = %548, %547, %546, %545
  %550 = phi ptr [ %447, %548 ], [ %449, %547 ], [ %451, %546 ], [ %453, %545 ]
  %551 = getelementptr inbounds i32, ptr %550, i64 %540
  %552 = load i32, ptr %551, align 4, !tbaa !68
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds i32, ptr %264, i64 %553
  %555 = load i32, ptr %554, align 4, !tbaa !68
  %556 = getelementptr inbounds i32, ptr %264, i64 %540
  store i32 %555, ptr %556, align 4, !tbaa !68
  br label %557

557:                                              ; preds = %549, %545, %539
  %558 = add i32 %541, 1
  %559 = zext i32 %558 to i64
  %560 = icmp ugt i64 %271, %559
  br i1 %560, label %539, label %538, !llvm.loop !702

561:                                              ; preds = %538
  %562 = call noundef i32 @_ZN4Mesh12rezone_countESt6vectorIiSaIiEERiS3_(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef nonnull %8, ptr noundef nonnull align 4 dereferenceable(4) %2, ptr noundef nonnull align 4 dereferenceable(4) %3) #56
  %563 = load ptr, ptr %8, align 8, !tbaa !65
  %564 = icmp eq ptr %563, null
  br i1 %564, label %566, label %565

565:                                              ; preds = %561
  call void @_ZdlPv(ptr noundef nonnull %563) #58
  br label %566

566:                                              ; preds = %565, %561
  %567 = load i32, ptr %2, align 4, !tbaa !68
  %568 = icmp ne i32 %567, 0
  %569 = load i32, ptr %3, align 4
  %570 = icmp ne i32 %569, 0
  %571 = select i1 %568, i1 true, i1 %570
  %572 = zext i1 %571 to i8
  %573 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 7
  store i8 %572, ptr %573, align 8, !tbaa !666
  %574 = load i64, ptr %6, align 8, !tbaa.struct !560
  %575 = getelementptr inbounds i8, ptr %6, i64 8
  %576 = load i64, ptr %575, align 8, !tbaa.struct !561
  %577 = invoke double @cpu_timer_stop(i64 %574, i64 %576) #56
          to label %578 unwind label %56

578:                                              ; preds = %566
  %579 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 19
  %580 = load double, ptr %579, align 8, !tbaa !171
  %581 = fadd double %577, %580
  store double %581, ptr %579, align 8, !tbaa !171
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #57
  %582 = load ptr, ptr %5, align 8, !tbaa !65
  %583 = icmp eq ptr %582, null
  br i1 %583, label %585, label %584

584:                                              ; preds = %578
  call void @_ZdlPv(ptr noundef nonnull %582) #58
  br label %585

585:                                              ; preds = %584, %578
  %586 = trunc i64 %271 to i32
  %587 = add i32 %562, %586
  %588 = sext i32 %587 to i64
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #57
  ret i64 %588

589:                                              ; preds = %80, %56
  %590 = phi { ptr, i32 } [ %57, %56 ], [ %81, %80 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #57
  %591 = load ptr, ptr %5, align 8, !tbaa !65
  %592 = icmp eq ptr %591, null
  br i1 %592, label %594, label %593

593:                                              ; preds = %589
  call void @_ZdlPv(ptr noundef nonnull %591) #58
  br label %594

594:                                              ; preds = %593, %589
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #57
  resume { ptr, i32 } %590
}

; Function Attrs: optsize uwtable
define internal void @_ZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlus(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3, i32 noundef %4, ptr noundef nonnull align 8 dereferenceable(96) %5) #6 align 2 personality ptr @__gxx_personality_v0 {
  %7 = alloca %struct.timeval, align 8
  %8 = alloca i32, align 4
  %9 = alloca %class.MallocPlus, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #57
  call void @cpu_timer_start(ptr noundef nonnull %7) #56
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 7
  %11 = load i8, ptr %10, align 8, !tbaa !666, !range !130, !noundef !131
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %34

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63
  %15 = load ptr, ptr %14, align 8, !tbaa !65
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !70
  %18 = icmp eq ptr %17, %15
  br i1 %18, label %20, label %19

19:                                               ; preds = %13
  store ptr %15, ptr %16, align 8, !tbaa !70
  br label %20

20:                                               ; preds = %19, %13
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %22 = load i64, ptr %21, align 8, !tbaa !543
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %14, i64 noundef %22) #56
  %23 = load i64, ptr %21, align 8, !tbaa !543
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %890, label %25

25:                                               ; preds = %20
  %26 = load ptr, ptr %14, align 8, !tbaa !65
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i64 [ 0, %25 ], [ %32, %27 ]
  %29 = phi i32 [ 0, %25 ], [ %31, %27 ]
  %30 = getelementptr inbounds i32, ptr %26, i64 %28
  store i32 %29, ptr %30, align 4, !tbaa !68
  %31 = add i32 %29, 1
  %32 = zext i32 %31 to i64
  %33 = icmp ugt i64 %23, %32
  br i1 %33, label %27, label %890, !llvm.loop !703

34:                                               ; preds = %6
  %35 = call i32 @llvm.abs.i32(i32 %2, i1 true)
  %36 = sub nsw i32 %1, %35
  %37 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5
  %38 = load i32, ptr %37, align 8, !tbaa !68
  %39 = add nsw i32 %38, 1
  store i32 %39, ptr %37, align 8, !tbaa !68
  %40 = load atomic i8, ptr @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save acquire, align 8
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %47, !prof !704

42:                                               ; preds = %34
  %43 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save) #57
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, i8 0, i64 24, i1 false)
  %46 = call i32 @__cxa_atexit(ptr nonnull @_ZNSt6vectorIiSaIiEED2Ev, ptr nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, ptr nonnull @__dso_handle) #57
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save) #57
  br label %47

47:                                               ; preds = %45, %42, %34
  %48 = load atomic i8, ptr @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE6new_ic acquire, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %55, !prof !704

50:                                               ; preds = %47
  %51 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE6new_ic) #57
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %50
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE6new_ic, i8 0, i64 24, i1 false)
  %54 = call i32 @__cxa_atexit(ptr nonnull @_ZNSt6vectorIiSaIiEED2Ev, ptr nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE6new_ic, ptr nonnull @__dso_handle) #57
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE6new_ic) #57
  br label %55

55:                                               ; preds = %53, %50, %47
  %56 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %57 = load i64, ptr %56, align 8, !tbaa !543
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, i64 noundef %57) #56
  %58 = icmp eq i32 %4, 0
  %59 = load i64, ptr %56, align 8, !tbaa !543
  %60 = trunc i64 %59 to i32
  br i1 %58, label %120, label %61

61:                                               ; preds = %55
  %62 = icmp sgt i32 %60, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %61
  %64 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %65 = load ptr, ptr %64, align 8, !tbaa !682
  %66 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, align 8, !tbaa !65
  %67 = and i64 %59, 4294967295
  br label %68

68:                                               ; preds = %68, %63
  %69 = phi i64 [ 0, %63 ], [ %73, %68 ]
  %70 = getelementptr inbounds i32, ptr %65, i64 %69
  %71 = load i32, ptr %70, align 4, !tbaa !68
  %72 = getelementptr inbounds i32, ptr %66, i64 %69
  store i32 %71, ptr %72, align 4, !tbaa !68
  %73 = add nuw nsw i64 %69, 1
  %74 = icmp eq i64 %73, %67
  br i1 %74, label %75, label %68, !llvm.loop !705

75:                                               ; preds = %68, %61
  %76 = add i32 %36, %60
  store i32 %76, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !68
  %77 = icmp eq i64 %59, 0
  br i1 %77, label %122, label %78

78:                                               ; preds = %75
  %79 = load ptr, ptr %3, align 8, !tbaa !65
  %80 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %81 = load ptr, ptr %80, align 8
  %82 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %83 = load ptr, ptr %82, align 8
  %84 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %85 = load ptr, ptr %84, align 8
  br label %86

86:                                               ; preds = %116, %78
  %87 = phi i64 [ 0, %78 ], [ %118, %116 ]
  %88 = phi i32 [ 0, %78 ], [ %117, %116 ]
  %89 = getelementptr inbounds i32, ptr %79, i64 %87
  %90 = load i32, ptr %89, align 4, !tbaa !68
  %91 = icmp slt i32 %90, 0
  br i1 %91, label %92, label %116

92:                                               ; preds = %86
  %93 = getelementptr inbounds i32, ptr %81, i64 %87
  %94 = load i32, ptr %93, align 4, !tbaa !68
  %95 = getelementptr inbounds i32, ptr %83, i64 %87
  %96 = load i32, ptr %95, align 4, !tbaa !68
  %97 = and i32 %94, 1
  %98 = icmp ne i32 %97, 0
  %99 = and i32 %96, 1
  %100 = icmp ne i32 %99, 0
  %101 = select i1 %98, i1 true, i1 %100
  br i1 %101, label %103, label %102

102:                                              ; preds = %92
  store i32 -2, ptr %89, align 4, !tbaa !68
  br label %103

103:                                              ; preds = %102, %92
  %104 = getelementptr inbounds i32, ptr %85, i64 %87
  %105 = load i32, ptr %104, align 4, !tbaa !68
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %116, label %107

107:                                              ; preds = %103
  %108 = load i32, ptr %93, align 4, !tbaa !68
  %109 = load i32, ptr %95, align 4, !tbaa !68
  %110 = and i32 %108, -2147483647
  %111 = icmp ne i32 %110, 1
  %112 = and i32 %109, -2147483647
  %113 = icmp ne i32 %112, 1
  %114 = or i1 %111, %113
  br i1 %114, label %116, label %115

115:                                              ; preds = %107
  store i32 -3, ptr %89, align 4, !tbaa !68
  br label %116

116:                                              ; preds = %115, %107, %103, %86
  %117 = add i32 %88, 1
  %118 = zext i32 %117 to i64
  %119 = icmp ugt i64 %59, %118
  br i1 %119, label %86, label %122, !llvm.loop !706

120:                                              ; preds = %55
  %121 = add i32 %36, %60
  store i32 %121, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !68
  br label %122

122:                                              ; preds = %120, %116, %75
  %123 = phi i32 [ %76, %75 ], [ %121, %120 ], [ %76, %116 ]
  %124 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %125 = sext i32 %123 to i64
  %126 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %124, i64 noundef %125, i64 noundef 4, ptr noundef nonnull @.str.33.152, i32 noundef 16) #56
  store ptr %126, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !29
  %127 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !68
  %128 = sext i32 %127 to i64
  %129 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %124, i64 noundef %128, i64 noundef 4, ptr noundef nonnull @.str.34.153, i32 noundef 16) #56
  store ptr %129, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !29
  %130 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !68
  %131 = sext i32 %130 to i64
  %132 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %124, i64 noundef %131, i64 noundef 4, ptr noundef nonnull @.str.35.154, i32 noundef 16) #56
  store ptr %132, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !29
  %133 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  call void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef nonnull %133, ptr noundef nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old) #56
  %134 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  call void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef nonnull %134, ptr noundef nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old) #56
  %135 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  call void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef nonnull %135, ptr noundef nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old) #56
  %136 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63
  %137 = load ptr, ptr %136, align 8, !tbaa !65
  %138 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 63, i32 0, i32 0, i32 0, i32 1
  %139 = load ptr, ptr %138, align 8, !tbaa !70
  %140 = icmp eq ptr %139, %137
  br i1 %140, label %142, label %141

141:                                              ; preds = %122
  store ptr %137, ptr %138, align 8, !tbaa !70
  br label %142

142:                                              ; preds = %141, %122
  %143 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !68
  %144 = sext i32 %143 to i64
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %136, i64 noundef %144) #56
  %145 = load atomic i8, ptr @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order acquire, align 8
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %152, !prof !704

147:                                              ; preds = %142
  %148 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order) #57
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %147
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order, i8 0, i64 24, i1 false)
  %151 = call i32 @__cxa_atexit(ptr nonnull @_ZNSt6vectorIiSaIiEED2Ev, ptr nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order, ptr nonnull @__dso_handle) #57
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order) #57
  br label %152

152:                                              ; preds = %150, %147, %142
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #57
  store i32 -1, ptr %8, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order, i64 noundef 4, ptr noundef nonnull align 4 dereferenceable(4) %8) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #57
  %153 = load i64, ptr %56, align 8, !tbaa !543
  %154 = trunc i64 %153 to i32
  %155 = icmp sgt i32 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  %157 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  br label %167

158:                                              ; preds = %425, %152
  %159 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !29
  %160 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef %159) #56
  %161 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !29
  %162 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef %161) #56
  %163 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !29
  %164 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef %163) #56
  %165 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !68
  %166 = sext i32 %165 to i64
  call void @_ZN4Mesh13calc_celltypeEm(ptr noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %166) #56
  br i1 %58, label %681, label %432

167:                                              ; preds = %425, %156
  %168 = phi i64 [ %153, %156 ], [ %426, %425 ]
  %169 = phi i64 [ 0, %156 ], [ %428, %425 ]
  %170 = phi i32 [ 0, %156 ], [ %427, %425 ]
  %171 = load ptr, ptr %3, align 8, !tbaa !65
  %172 = getelementptr inbounds i32, ptr %171, i64 %169
  %173 = load i32, ptr %172, align 4, !tbaa !68
  switch i32 %173, label %194 [
    i32 0, label %174
    i32 -1000000, label %174
  ]

174:                                              ; preds = %167, %167
  %175 = load ptr, ptr %136, align 8, !tbaa !65
  %176 = getelementptr inbounds i32, ptr %175, i64 %169
  store i32 %170, ptr %176, align 4, !tbaa !68
  %177 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !29
  %178 = getelementptr inbounds i32, ptr %177, i64 %169
  %179 = load i32, ptr %178, align 4, !tbaa !68
  %180 = load ptr, ptr %133, align 8, !tbaa !637
  %181 = sext i32 %170 to i64
  %182 = getelementptr inbounds i32, ptr %180, i64 %181
  store i32 %179, ptr %182, align 4, !tbaa !68
  %183 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !29
  %184 = getelementptr inbounds i32, ptr %183, i64 %169
  %185 = load i32, ptr %184, align 4, !tbaa !68
  %186 = load ptr, ptr %134, align 8, !tbaa !638
  %187 = getelementptr inbounds i32, ptr %186, i64 %181
  store i32 %185, ptr %187, align 4, !tbaa !68
  %188 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !29
  %189 = getelementptr inbounds i32, ptr %188, i64 %169
  %190 = load i32, ptr %189, align 4, !tbaa !68
  %191 = load ptr, ptr %135, align 8, !tbaa !639
  %192 = getelementptr inbounds i32, ptr %191, i64 %181
  store i32 %190, ptr %192, align 4, !tbaa !68
  %193 = add nsw i32 %170, 1
  br label %425

194:                                              ; preds = %167
  %195 = icmp slt i32 %173, 0
  %196 = load ptr, ptr %136, align 8, !tbaa !65
  %197 = getelementptr inbounds i32, ptr %196, i64 %169
  store i32 %170, ptr %197, align 4, !tbaa !68
  br i1 %195, label %198, label %222

198:                                              ; preds = %194
  %199 = load i32, ptr %172, align 4, !tbaa !68
  %200 = icmp slt i32 %199, -1
  br i1 %200, label %201, label %425

201:                                              ; preds = %198
  %202 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !29
  %203 = getelementptr inbounds i32, ptr %202, i64 %169
  %204 = load i32, ptr %203, align 4, !tbaa !68
  %205 = sdiv i32 %204, 2
  %206 = load ptr, ptr %133, align 8, !tbaa !637
  %207 = sext i32 %170 to i64
  %208 = getelementptr inbounds i32, ptr %206, i64 %207
  store i32 %205, ptr %208, align 4, !tbaa !68
  %209 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !29
  %210 = getelementptr inbounds i32, ptr %209, i64 %169
  %211 = load i32, ptr %210, align 4, !tbaa !68
  %212 = sdiv i32 %211, 2
  %213 = load ptr, ptr %134, align 8, !tbaa !638
  %214 = getelementptr inbounds i32, ptr %213, i64 %207
  store i32 %212, ptr %214, align 4, !tbaa !68
  %215 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !29
  %216 = getelementptr inbounds i32, ptr %215, i64 %169
  %217 = load i32, ptr %216, align 4, !tbaa !68
  %218 = add nsw i32 %217, -1
  %219 = load ptr, ptr %135, align 8, !tbaa !639
  %220 = getelementptr inbounds i32, ptr %219, i64 %207
  store i32 %218, ptr %220, align 4, !tbaa !68
  %221 = add nsw i32 %170, 1
  br label %425

222:                                              ; preds = %194
  %223 = load ptr, ptr %157, align 8, !tbaa !682
  %224 = getelementptr inbounds i32, ptr %223, i64 %169
  %225 = load i32, ptr %224, align 4, !tbaa !68
  switch i32 %225, label %425 [
    i32 1, label %226
    i32 -1, label %287
    i32 -2, label %322
    i32 -3, label %355
    i32 -4, label %390
  ]

226:                                              ; preds = %222
  %227 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order, align 8, !tbaa !65
  %228 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !29
  %229 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !29
  %230 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !29
  %231 = trunc i64 %169 to i32
  call void @_ZN4Mesh20set_refinement_orderEPiiiiiiiiS0_S0_S0_(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef nonnull %227, i32 noundef %231, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef %228, ptr noundef %229, ptr noundef %230) #56
  %232 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !29
  %233 = getelementptr inbounds i32, ptr %232, i64 %169
  %234 = load ptr, ptr %135, align 8, !tbaa !639
  %235 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5order, align 8, !tbaa !65
  %236 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8
  %237 = getelementptr inbounds i32, ptr %236, i64 %169
  %238 = load ptr, ptr %133, align 8
  %239 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8
  %240 = getelementptr inbounds i32, ptr %239, i64 %169
  %241 = load ptr, ptr %134, align 8
  br label %242

242:                                              ; preds = %283, %226
  %243 = phi i64 [ 0, %226 ], [ %285, %283 ]
  %244 = phi i32 [ %170, %226 ], [ %284, %283 ]
  %245 = load i32, ptr %233, align 4, !tbaa !68
  %246 = add nsw i32 %245, 1
  %247 = sext i32 %244 to i64
  %248 = getelementptr inbounds i32, ptr %234, i64 %247
  store i32 %246, ptr %248, align 4, !tbaa !68
  %249 = getelementptr inbounds i32, ptr %235, i64 %243
  %250 = load i32, ptr %249, align 4, !tbaa !68
  switch i32 %250, label %283 [
    i32 0, label %251
    i32 3, label %257
    i32 1, label %264
    i32 2, label %271
  ]

251:                                              ; preds = %242
  %252 = load i32, ptr %237, align 4, !tbaa !68
  %253 = shl nsw i32 %252, 1
  %254 = getelementptr inbounds i32, ptr %238, i64 %247
  store i32 %253, ptr %254, align 4, !tbaa !68
  %255 = load i32, ptr %240, align 4, !tbaa !68
  %256 = shl nsw i32 %255, 1
  br label %279

257:                                              ; preds = %242
  %258 = load i32, ptr %237, align 4, !tbaa !68
  %259 = shl nsw i32 %258, 1
  %260 = or i32 %259, 1
  %261 = getelementptr inbounds i32, ptr %238, i64 %247
  store i32 %260, ptr %261, align 4, !tbaa !68
  %262 = load i32, ptr %240, align 4, !tbaa !68
  %263 = shl nsw i32 %262, 1
  br label %279

264:                                              ; preds = %242
  %265 = load i32, ptr %237, align 4, !tbaa !68
  %266 = shl nsw i32 %265, 1
  %267 = getelementptr inbounds i32, ptr %238, i64 %247
  store i32 %266, ptr %267, align 4, !tbaa !68
  %268 = load i32, ptr %240, align 4, !tbaa !68
  %269 = shl nsw i32 %268, 1
  %270 = or i32 %269, 1
  br label %279

271:                                              ; preds = %242
  %272 = load i32, ptr %237, align 4, !tbaa !68
  %273 = shl nsw i32 %272, 1
  %274 = or i32 %273, 1
  %275 = getelementptr inbounds i32, ptr %238, i64 %247
  store i32 %274, ptr %275, align 4, !tbaa !68
  %276 = load i32, ptr %240, align 4, !tbaa !68
  %277 = shl nsw i32 %276, 1
  %278 = or i32 %277, 1
  br label %279

279:                                              ; preds = %271, %264, %257, %251
  %280 = phi i32 [ %256, %251 ], [ %263, %257 ], [ %270, %264 ], [ %278, %271 ]
  %281 = getelementptr inbounds i32, ptr %241, i64 %247
  store i32 %280, ptr %281, align 4, !tbaa !68
  %282 = add nsw i32 %244, 1
  br label %283

283:                                              ; preds = %279, %242
  %284 = phi i32 [ %244, %242 ], [ %282, %279 ]
  %285 = add nuw nsw i64 %243, 1
  %286 = icmp eq i64 %285, 4
  br i1 %286, label %423, label %242, !llvm.loop !707

287:                                              ; preds = %222
  %288 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !29
  %289 = getelementptr inbounds i32, ptr %288, i64 %169
  %290 = load i32, ptr %289, align 4, !tbaa !68
  %291 = shl nsw i32 %290, 1
  %292 = or i32 %291, 1
  %293 = load ptr, ptr %133, align 8, !tbaa !637
  %294 = sext i32 %170 to i64
  %295 = getelementptr inbounds i32, ptr %293, i64 %294
  store i32 %292, ptr %295, align 4, !tbaa !68
  %296 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !29
  %297 = getelementptr inbounds i32, ptr %296, i64 %169
  %298 = load i32, ptr %297, align 4, !tbaa !68
  %299 = shl nsw i32 %298, 1
  %300 = load ptr, ptr %134, align 8, !tbaa !638
  %301 = getelementptr inbounds i32, ptr %300, i64 %294
  store i32 %299, ptr %301, align 4, !tbaa !68
  %302 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !29
  %303 = getelementptr inbounds i32, ptr %302, i64 %169
  %304 = load i32, ptr %303, align 4, !tbaa !68
  %305 = add nsw i32 %304, 1
  %306 = load ptr, ptr %135, align 8, !tbaa !639
  %307 = getelementptr inbounds i32, ptr %306, i64 %294
  store i32 %305, ptr %307, align 4, !tbaa !68
  %308 = add nsw i32 %170, 1
  %309 = load i32, ptr %289, align 4, !tbaa !68
  %310 = shl nsw i32 %309, 1
  %311 = or i32 %310, 1
  %312 = sext i32 %308 to i64
  %313 = getelementptr inbounds i32, ptr %293, i64 %312
  store i32 %311, ptr %313, align 4, !tbaa !68
  %314 = load i32, ptr %297, align 4, !tbaa !68
  %315 = shl nsw i32 %314, 1
  %316 = or i32 %315, 1
  %317 = getelementptr inbounds i32, ptr %300, i64 %312
  store i32 %316, ptr %317, align 4, !tbaa !68
  %318 = load i32, ptr %303, align 4, !tbaa !68
  %319 = add nsw i32 %318, 1
  %320 = getelementptr inbounds i32, ptr %306, i64 %312
  store i32 %319, ptr %320, align 4, !tbaa !68
  %321 = add nsw i32 %170, 2
  br label %425

322:                                              ; preds = %222
  %323 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !29
  %324 = getelementptr inbounds i32, ptr %323, i64 %169
  %325 = load i32, ptr %324, align 4, !tbaa !68
  %326 = shl nsw i32 %325, 1
  %327 = load ptr, ptr %133, align 8, !tbaa !637
  %328 = sext i32 %170 to i64
  %329 = getelementptr inbounds i32, ptr %327, i64 %328
  store i32 %326, ptr %329, align 4, !tbaa !68
  %330 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !29
  %331 = getelementptr inbounds i32, ptr %330, i64 %169
  %332 = load i32, ptr %331, align 4, !tbaa !68
  %333 = shl nsw i32 %332, 1
  %334 = load ptr, ptr %134, align 8, !tbaa !638
  %335 = getelementptr inbounds i32, ptr %334, i64 %328
  store i32 %333, ptr %335, align 4, !tbaa !68
  %336 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !29
  %337 = getelementptr inbounds i32, ptr %336, i64 %169
  %338 = load i32, ptr %337, align 4, !tbaa !68
  %339 = add nsw i32 %338, 1
  %340 = load ptr, ptr %135, align 8, !tbaa !639
  %341 = getelementptr inbounds i32, ptr %340, i64 %328
  store i32 %339, ptr %341, align 4, !tbaa !68
  %342 = add nsw i32 %170, 1
  %343 = load i32, ptr %324, align 4, !tbaa !68
  %344 = shl nsw i32 %343, 1
  %345 = sext i32 %342 to i64
  %346 = getelementptr inbounds i32, ptr %327, i64 %345
  store i32 %344, ptr %346, align 4, !tbaa !68
  %347 = load i32, ptr %331, align 4, !tbaa !68
  %348 = shl nsw i32 %347, 1
  %349 = or i32 %348, 1
  %350 = getelementptr inbounds i32, ptr %334, i64 %345
  store i32 %349, ptr %350, align 4, !tbaa !68
  %351 = load i32, ptr %337, align 4, !tbaa !68
  %352 = add nsw i32 %351, 1
  %353 = getelementptr inbounds i32, ptr %340, i64 %345
  store i32 %352, ptr %353, align 4, !tbaa !68
  %354 = add nsw i32 %170, 2
  br label %425

355:                                              ; preds = %222
  %356 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !29
  %357 = getelementptr inbounds i32, ptr %356, i64 %169
  %358 = load i32, ptr %357, align 4, !tbaa !68
  %359 = shl nsw i32 %358, 1
  %360 = load ptr, ptr %133, align 8, !tbaa !637
  %361 = sext i32 %170 to i64
  %362 = getelementptr inbounds i32, ptr %360, i64 %361
  store i32 %359, ptr %362, align 4, !tbaa !68
  %363 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !29
  %364 = getelementptr inbounds i32, ptr %363, i64 %169
  %365 = load i32, ptr %364, align 4, !tbaa !68
  %366 = shl nsw i32 %365, 1
  %367 = or i32 %366, 1
  %368 = load ptr, ptr %134, align 8, !tbaa !638
  %369 = getelementptr inbounds i32, ptr %368, i64 %361
  store i32 %367, ptr %369, align 4, !tbaa !68
  %370 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !29
  %371 = getelementptr inbounds i32, ptr %370, i64 %169
  %372 = load i32, ptr %371, align 4, !tbaa !68
  %373 = add nsw i32 %372, 1
  %374 = load ptr, ptr %135, align 8, !tbaa !639
  %375 = getelementptr inbounds i32, ptr %374, i64 %361
  store i32 %373, ptr %375, align 4, !tbaa !68
  %376 = add nsw i32 %170, 1
  %377 = load i32, ptr %357, align 4, !tbaa !68
  %378 = shl nsw i32 %377, 1
  %379 = or i32 %378, 1
  %380 = sext i32 %376 to i64
  %381 = getelementptr inbounds i32, ptr %360, i64 %380
  store i32 %379, ptr %381, align 4, !tbaa !68
  %382 = load i32, ptr %364, align 4, !tbaa !68
  %383 = shl nsw i32 %382, 1
  %384 = or i32 %383, 1
  %385 = getelementptr inbounds i32, ptr %368, i64 %380
  store i32 %384, ptr %385, align 4, !tbaa !68
  %386 = load i32, ptr %371, align 4, !tbaa !68
  %387 = add nsw i32 %386, 1
  %388 = getelementptr inbounds i32, ptr %374, i64 %380
  store i32 %387, ptr %388, align 4, !tbaa !68
  %389 = add nsw i32 %170, 2
  br label %425

390:                                              ; preds = %222
  %391 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5i_old, align 8, !tbaa !29
  %392 = getelementptr inbounds i32, ptr %391, i64 %169
  %393 = load i32, ptr %392, align 4, !tbaa !68
  %394 = shl nsw i32 %393, 1
  %395 = or i32 %394, 1
  %396 = load ptr, ptr %133, align 8, !tbaa !637
  %397 = sext i32 %170 to i64
  %398 = getelementptr inbounds i32, ptr %396, i64 %397
  store i32 %395, ptr %398, align 4, !tbaa !68
  %399 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE5j_old, align 8, !tbaa !29
  %400 = getelementptr inbounds i32, ptr %399, i64 %169
  %401 = load i32, ptr %400, align 4, !tbaa !68
  %402 = shl nsw i32 %401, 1
  %403 = load ptr, ptr %134, align 8, !tbaa !638
  %404 = getelementptr inbounds i32, ptr %403, i64 %397
  store i32 %402, ptr %404, align 4, !tbaa !68
  %405 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE9level_old, align 8, !tbaa !29
  %406 = getelementptr inbounds i32, ptr %405, i64 %169
  %407 = load i32, ptr %406, align 4, !tbaa !68
  %408 = add nsw i32 %407, 1
  %409 = load ptr, ptr %135, align 8, !tbaa !639
  %410 = getelementptr inbounds i32, ptr %409, i64 %397
  store i32 %408, ptr %410, align 4, !tbaa !68
  %411 = add nsw i32 %170, 1
  %412 = load i32, ptr %392, align 4, !tbaa !68
  %413 = shl nsw i32 %412, 1
  %414 = sext i32 %411 to i64
  %415 = getelementptr inbounds i32, ptr %396, i64 %414
  store i32 %413, ptr %415, align 4, !tbaa !68
  %416 = load i32, ptr %400, align 4, !tbaa !68
  %417 = shl nsw i32 %416, 1
  %418 = getelementptr inbounds i32, ptr %403, i64 %414
  store i32 %417, ptr %418, align 4, !tbaa !68
  %419 = load i32, ptr %406, align 4, !tbaa !68
  %420 = add nsw i32 %419, 1
  %421 = getelementptr inbounds i32, ptr %409, i64 %414
  store i32 %420, ptr %421, align 4, !tbaa !68
  %422 = add nsw i32 %170, 2
  br label %425

423:                                              ; preds = %283
  %.lcssa = phi i32 [ %284, %283 ]
  %424 = load i64, ptr %56, align 8, !tbaa !543
  br label %425

425:                                              ; preds = %423, %390, %355, %322, %287, %222, %201, %198, %174
  %426 = phi i64 [ %168, %174 ], [ %168, %201 ], [ %168, %198 ], [ %168, %287 ], [ %168, %322 ], [ %168, %355 ], [ %168, %390 ], [ %168, %222 ], [ %424, %423 ]
  %427 = phi i32 [ %193, %174 ], [ %221, %201 ], [ %170, %198 ], [ %321, %287 ], [ %354, %322 ], [ %389, %355 ], [ %422, %390 ], [ %170, %222 ], [ %.lcssa, %423 ]
  %428 = add nuw nsw i64 %169, 1
  %429 = shl i64 %426, 32
  %430 = ashr exact i64 %429, 32
  %431 = icmp slt i64 %428, %430
  br i1 %431, label %167, label %158, !llvm.loop !708

432:                                              ; preds = %158
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9) #57
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EEC2ERKSG_(ptr noundef nonnull align 8 dereferenceable(48) %9, ptr noundef nonnull align 8 dereferenceable(48) %5) #56
  %433 = getelementptr inbounds %class.MallocPlus, ptr %9, i64 0, i32 1
  %434 = getelementptr inbounds %class.MallocPlus, ptr %5, i64 0, i32 1
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EEC2ERKSB_(ptr noundef nonnull align 8 dereferenceable(48) %433, ptr noundef nonnull align 8 dereferenceable(48) %434) #56
          to label %437 unwind label %435

435:                                              ; preds = %432
  %436 = landingpad { ptr, i32 }
          cleanup
  br label %679

437:                                              ; preds = %432
  %438 = invoke noundef ptr @_ZN10MallocPlus26memory_entry_by_name_beginEv(ptr noundef nonnull align 8 dereferenceable(96) %9) #56
          to label %439 unwind label %473

439:                                              ; preds = %437
  %440 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %441 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %442 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %443 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  br label %444

444:                                              ; preds = %674, %439
  %445 = phi ptr [ %675, %674 ], [ %438, %439 ]
  %446 = invoke noundef ptr @_ZN10MallocPlus24memory_entry_by_name_endEv(ptr noundef nonnull align 8 dereferenceable(96) %9) #56
          to label %447 unwind label %471

447:                                              ; preds = %444
  %448 = icmp eq ptr %445, %446
  br i1 %448, label %676, label %449

449:                                              ; preds = %447
  %450 = getelementptr inbounds %struct.malloc_plus_memory_entry, ptr %445, i64 0, i32 4
  %451 = load i64, ptr %450, align 8, !tbaa !150
  switch i64 %451, label %674 [
    i64 8, label %452
    i64 4, label %565
  ]

452:                                              ; preds = %449
  %453 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !68
  %454 = sext i32 %453 to i64
  %455 = invoke noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %5, i64 noundef %454, i64 noundef 8, ptr noundef nonnull @.str.36.155, i32 noundef 16) #56
          to label %456 unwind label %475

456:                                              ; preds = %452
  %457 = load ptr, ptr %445, align 8, !tbaa !153
  %458 = load i64, ptr %56, align 8, !tbaa !543
  %459 = trunc i64 %458 to i32
  %460 = icmp sgt i32 %459, 0
  br i1 %460, label %461, label %469

461:                                              ; preds = %456
  %462 = load ptr, ptr %3, align 8, !tbaa !65
  %463 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, align 8
  %464 = load ptr, ptr %440, align 8
  %465 = load ptr, ptr %441, align 8
  %466 = load ptr, ptr %442, align 8
  %467 = load ptr, ptr %443, align 8
  %468 = and i64 %458, 4294967295
  br label %477

469:                                              ; preds = %559, %456
  %470 = invoke noundef ptr @_ZN10MallocPlus14memory_replaceEPvS0_(ptr noundef nonnull align 8 dereferenceable(96) %5, ptr noundef %457, ptr noundef %455) #56
          to label %674 unwind label %563

471:                                              ; preds = %674, %444
  %472 = landingpad { ptr, i32 }
          cleanup
  br label %677

473:                                              ; preds = %437
  %474 = landingpad { ptr, i32 }
          cleanup
  br label %677

475:                                              ; preds = %452
  %476 = landingpad { ptr, i32 }
          cleanup
  br label %677

477:                                              ; preds = %559, %461
  %478 = phi i64 [ 0, %461 ], [ %561, %559 ]
  %479 = phi i32 [ 0, %461 ], [ %560, %559 ]
  %480 = getelementptr inbounds i32, ptr %462, i64 %478
  %481 = load i32, ptr %480, align 4, !tbaa !68
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %483, label %486

483:                                              ; preds = %477
  %484 = getelementptr inbounds double, ptr %457, i64 %478
  %485 = load double, ptr %484, align 8, !tbaa !171
  br label %552

486:                                              ; preds = %477
  %487 = icmp slt i32 %481, 0
  br i1 %487, label %488, label %533

488:                                              ; preds = %486
  switch i32 %481, label %559 [
    i32 -2, label %489
    i32 -3, label %511
  ]

489:                                              ; preds = %488
  %490 = getelementptr inbounds i32, ptr %466, i64 %478
  %491 = load i32, ptr %490, align 4, !tbaa !68
  %492 = getelementptr inbounds i32, ptr %467, i64 %478
  %493 = load i32, ptr %492, align 4, !tbaa !68
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i32, ptr %466, i64 %494
  %496 = load i32, ptr %495, align 4, !tbaa !68
  %497 = getelementptr inbounds double, ptr %457, i64 %478
  %498 = load double, ptr %497, align 8, !tbaa !171
  %499 = sext i32 %491 to i64
  %500 = getelementptr inbounds double, ptr %457, i64 %499
  %501 = load double, ptr %500, align 8, !tbaa !171
  %502 = fadd double %498, %501
  %503 = getelementptr inbounds double, ptr %457, i64 %494
  %504 = load double, ptr %503, align 8, !tbaa !171
  %505 = fadd double %502, %504
  %506 = sext i32 %496 to i64
  %507 = getelementptr inbounds double, ptr %457, i64 %506
  %508 = load double, ptr %507, align 8, !tbaa !171
  %509 = fadd double %505, %508
  %510 = fmul double %509, 2.500000e-01
  br label %552

511:                                              ; preds = %488
  %512 = getelementptr inbounds i32, ptr %464, i64 %478
  %513 = load i32, ptr %512, align 4, !tbaa !68
  %514 = getelementptr inbounds i32, ptr %465, i64 %478
  %515 = load i32, ptr %514, align 4, !tbaa !68
  %516 = sext i32 %515 to i64
  %517 = getelementptr inbounds i32, ptr %464, i64 %516
  %518 = load i32, ptr %517, align 4, !tbaa !68
  %519 = getelementptr inbounds double, ptr %457, i64 %478
  %520 = load double, ptr %519, align 8, !tbaa !171
  %521 = sext i32 %513 to i64
  %522 = getelementptr inbounds double, ptr %457, i64 %521
  %523 = load double, ptr %522, align 8, !tbaa !171
  %524 = fadd double %520, %523
  %525 = getelementptr inbounds double, ptr %457, i64 %516
  %526 = load double, ptr %525, align 8, !tbaa !171
  %527 = fadd double %524, %526
  %528 = sext i32 %518 to i64
  %529 = getelementptr inbounds double, ptr %457, i64 %528
  %530 = load double, ptr %529, align 8, !tbaa !171
  %531 = fadd double %527, %530
  %532 = fmul double %531, 2.500000e-01
  br label %552

533:                                              ; preds = %486
  %534 = getelementptr inbounds double, ptr %457, i64 %478
  %535 = load double, ptr %534, align 8, !tbaa !171
  %536 = sext i32 %479 to i64
  %537 = getelementptr inbounds double, ptr %455, i64 %536
  store double %535, ptr %537, align 8, !tbaa !171
  %538 = add nsw i32 %479, 1
  %539 = load double, ptr %534, align 8, !tbaa !171
  %540 = sext i32 %538 to i64
  %541 = getelementptr inbounds double, ptr %455, i64 %540
  store double %539, ptr %541, align 8, !tbaa !171
  %542 = add nsw i32 %479, 2
  %543 = getelementptr inbounds i32, ptr %463, i64 %478
  %544 = load i32, ptr %543, align 4, !tbaa !68
  %545 = icmp eq i32 %544, 1
  br i1 %545, label %546, label %559

546:                                              ; preds = %533
  %547 = load double, ptr %534, align 8, !tbaa !171
  %548 = sext i32 %542 to i64
  %549 = getelementptr inbounds double, ptr %455, i64 %548
  store double %547, ptr %549, align 8, !tbaa !171
  %550 = add nsw i32 %479, 3
  %551 = load double, ptr %534, align 8, !tbaa !171
  br label %552

552:                                              ; preds = %546, %511, %489, %483
  %553 = phi i32 [ %479, %489 ], [ %479, %483 ], [ %550, %546 ], [ %479, %511 ]
  %554 = phi double [ %510, %489 ], [ %485, %483 ], [ %551, %546 ], [ %532, %511 ]
  %555 = phi i32 [ 1, %489 ], [ 1, %483 ], [ 4, %546 ], [ 1, %511 ]
  %556 = sext i32 %553 to i64
  %557 = getelementptr inbounds double, ptr %455, i64 %556
  store double %554, ptr %557, align 8, !tbaa !171
  %558 = add nsw i32 %479, %555
  br label %559

559:                                              ; preds = %552, %533, %488
  %560 = phi i32 [ %542, %533 ], [ %479, %488 ], [ %558, %552 ]
  %561 = add nuw nsw i64 %478, 1
  %562 = icmp eq i64 %561, %468
  br i1 %562, label %469, label %477, !llvm.loop !709

563:                                              ; preds = %469
  %564 = landingpad { ptr, i32 }
          cleanup
  br label %677

565:                                              ; preds = %449
  %566 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !68
  %567 = sext i32 %566 to i64
  %568 = invoke noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %5, i64 noundef %567, i64 noundef 4, ptr noundef nonnull @.str.37.156, i32 noundef 16) #56
          to label %569 unwind label %584

569:                                              ; preds = %565
  %570 = load ptr, ptr %445, align 8, !tbaa !153
  %571 = load i64, ptr %56, align 8, !tbaa !543
  %572 = trunc i64 %571 to i32
  %573 = icmp sgt i32 %572, 0
  br i1 %573, label %574, label %582

574:                                              ; preds = %569
  %575 = load ptr, ptr %3, align 8, !tbaa !65
  %576 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE13celltype_save, align 8
  %577 = load ptr, ptr %440, align 8
  %578 = load ptr, ptr %441, align 8
  %579 = load ptr, ptr %442, align 8
  %580 = load ptr, ptr %443, align 8
  %581 = and i64 %571, 4294967295
  br label %586

582:                                              ; preds = %668, %569
  %583 = invoke noundef ptr @_ZN10MallocPlus14memory_replaceEPvS0_(ptr noundef nonnull align 8 dereferenceable(96) %5, ptr noundef %570, ptr noundef %568) #56
          to label %674 unwind label %672

584:                                              ; preds = %565
  %585 = landingpad { ptr, i32 }
          cleanup
  br label %677

586:                                              ; preds = %668, %574
  %587 = phi i64 [ 0, %574 ], [ %670, %668 ]
  %588 = phi i32 [ 0, %574 ], [ %669, %668 ]
  %589 = getelementptr inbounds i32, ptr %575, i64 %587
  %590 = load i32, ptr %589, align 4, !tbaa !68
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %592, label %595

592:                                              ; preds = %586
  %593 = getelementptr inbounds float, ptr %570, i64 %587
  %594 = load float, ptr %593, align 4, !tbaa !177
  br label %661

595:                                              ; preds = %586
  %596 = icmp slt i32 %590, 0
  br i1 %596, label %597, label %642

597:                                              ; preds = %595
  switch i32 %590, label %668 [
    i32 -2, label %598
    i32 -3, label %620
  ]

598:                                              ; preds = %597
  %599 = getelementptr inbounds i32, ptr %579, i64 %587
  %600 = load i32, ptr %599, align 4, !tbaa !68
  %601 = getelementptr inbounds i32, ptr %580, i64 %587
  %602 = load i32, ptr %601, align 4, !tbaa !68
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds i32, ptr %579, i64 %603
  %605 = load i32, ptr %604, align 4, !tbaa !68
  %606 = getelementptr inbounds float, ptr %570, i64 %587
  %607 = load float, ptr %606, align 4, !tbaa !177
  %608 = sext i32 %600 to i64
  %609 = getelementptr inbounds float, ptr %570, i64 %608
  %610 = load float, ptr %609, align 4, !tbaa !177
  %611 = fadd float %607, %610
  %612 = getelementptr inbounds float, ptr %570, i64 %603
  %613 = load float, ptr %612, align 4, !tbaa !177
  %614 = fadd float %611, %613
  %615 = sext i32 %605 to i64
  %616 = getelementptr inbounds float, ptr %570, i64 %615
  %617 = load float, ptr %616, align 4, !tbaa !177
  %618 = fadd float %614, %617
  %619 = fmul float %618, 2.500000e-01
  br label %661

620:                                              ; preds = %597
  %621 = getelementptr inbounds i32, ptr %577, i64 %587
  %622 = load i32, ptr %621, align 4, !tbaa !68
  %623 = getelementptr inbounds i32, ptr %578, i64 %587
  %624 = load i32, ptr %623, align 4, !tbaa !68
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds i32, ptr %577, i64 %625
  %627 = load i32, ptr %626, align 4, !tbaa !68
  %628 = getelementptr inbounds float, ptr %570, i64 %587
  %629 = load float, ptr %628, align 4, !tbaa !177
  %630 = sext i32 %622 to i64
  %631 = getelementptr inbounds float, ptr %570, i64 %630
  %632 = load float, ptr %631, align 4, !tbaa !177
  %633 = fadd float %629, %632
  %634 = getelementptr inbounds float, ptr %570, i64 %625
  %635 = load float, ptr %634, align 4, !tbaa !177
  %636 = fadd float %633, %635
  %637 = sext i32 %627 to i64
  %638 = getelementptr inbounds float, ptr %570, i64 %637
  %639 = load float, ptr %638, align 4, !tbaa !177
  %640 = fadd float %636, %639
  %641 = fmul float %640, 2.500000e-01
  br label %661

642:                                              ; preds = %595
  %643 = getelementptr inbounds float, ptr %570, i64 %587
  %644 = load float, ptr %643, align 4, !tbaa !177
  %645 = sext i32 %588 to i64
  %646 = getelementptr inbounds float, ptr %568, i64 %645
  store float %644, ptr %646, align 4, !tbaa !177
  %647 = add nsw i32 %588, 1
  %648 = load float, ptr %643, align 4, !tbaa !177
  %649 = sext i32 %647 to i64
  %650 = getelementptr inbounds float, ptr %568, i64 %649
  store float %648, ptr %650, align 4, !tbaa !177
  %651 = add nsw i32 %588, 2
  %652 = getelementptr inbounds i32, ptr %576, i64 %587
  %653 = load i32, ptr %652, align 4, !tbaa !68
  %654 = icmp eq i32 %653, 1
  br i1 %654, label %655, label %668

655:                                              ; preds = %642
  %656 = load float, ptr %643, align 4, !tbaa !177
  %657 = sext i32 %651 to i64
  %658 = getelementptr inbounds float, ptr %568, i64 %657
  store float %656, ptr %658, align 4, !tbaa !177
  %659 = add nsw i32 %588, 3
  %660 = load float, ptr %643, align 4, !tbaa !177
  br label %661

661:                                              ; preds = %655, %620, %598, %592
  %662 = phi i32 [ %588, %598 ], [ %588, %592 ], [ %659, %655 ], [ %588, %620 ]
  %663 = phi float [ %619, %598 ], [ %594, %592 ], [ %660, %655 ], [ %641, %620 ]
  %664 = phi i32 [ 1, %598 ], [ 1, %592 ], [ 4, %655 ], [ 1, %620 ]
  %665 = sext i32 %662 to i64
  %666 = getelementptr inbounds float, ptr %568, i64 %665
  store float %663, ptr %666, align 4, !tbaa !177
  %667 = add nsw i32 %588, %664
  br label %668

668:                                              ; preds = %661, %642, %597
  %669 = phi i32 [ %651, %642 ], [ %588, %597 ], [ %667, %661 ]
  %670 = add nuw nsw i64 %587, 1
  %671 = icmp eq i64 %670, %581
  br i1 %671, label %582, label %586, !llvm.loop !710

672:                                              ; preds = %582
  %673 = landingpad { ptr, i32 }
          cleanup
  br label %677

674:                                              ; preds = %582, %469, %449
  %675 = invoke noundef ptr @_ZN10MallocPlus25memory_entry_by_name_nextEv(ptr noundef nonnull align 8 dereferenceable(96) %9) #56
          to label %444 unwind label %471, !llvm.loop !711

676:                                              ; preds = %447
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %433) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %9) #59
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9) #57
  br label %681

677:                                              ; preds = %672, %584, %563, %475, %473, %471
  %678 = phi { ptr, i32 } [ %564, %563 ], [ %476, %475 ], [ %673, %672 ], [ %585, %584 ], [ %472, %471 ], [ %474, %473 ]
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %433) #59
  br label %679

679:                                              ; preds = %677, %435
  %680 = phi { ptr, i32 } [ %678, %677 ], [ %436, %435 ]
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %9) #59
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #57
  resume { ptr, i32 } %680

681:                                              ; preds = %676, %158
  %682 = load i8, ptr @neighbor_remap, align 1, !tbaa !540, !range !130, !noundef !131
  %683 = icmp eq i8 %682, 0
  br i1 %683, label %875, label %684

684:                                              ; preds = %681
  %685 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !68
  %686 = sext i32 %685 to i64
  %687 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %124, i64 noundef %686, i64 noundef 4, ptr noundef nonnull @.str.38.159, i32 noundef 0) #56
  store ptr %687, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nlft_old, align 8, !tbaa !29
  %688 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !68
  %689 = sext i32 %688 to i64
  %690 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %124, i64 noundef %689, i64 noundef 4, ptr noundef nonnull @.str.39.160, i32 noundef 0) #56
  store ptr %690, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nrht_old, align 8, !tbaa !29
  %691 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !68
  %692 = sext i32 %691 to i64
  %693 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %124, i64 noundef %692, i64 noundef 4, ptr noundef nonnull @.str.40.161, i32 noundef 0) #56
  store ptr %693, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nbot_old, align 8, !tbaa !29
  %694 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !68
  %695 = sext i32 %694 to i64
  %696 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %124, i64 noundef %695, i64 noundef 4, ptr noundef nonnull @.str.41.162, i32 noundef 0) #56
  store ptr %696, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8ntop_old, align 8, !tbaa !29
  %697 = load i32, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE10new_ncells, align 4, !tbaa !68
  %698 = icmp sgt i32 %697, 0
  br i1 %698, label %699, label %704

699:                                              ; preds = %684
  %700 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nlft_old, align 8, !tbaa !29
  %701 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nrht_old, align 8, !tbaa !29
  %702 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nbot_old, align 8, !tbaa !29
  %703 = zext i32 %697 to i64
  br label %726

704:                                              ; preds = %726, %684
  %705 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  call void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef nonnull %705, ptr noundef nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nlft_old) #56
  %706 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  call void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef nonnull %706, ptr noundef nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nrht_old) #56
  %707 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  call void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef nonnull %707, ptr noundef nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nbot_old) #56
  %708 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  call void @_ZN10MallocPlus11memory_swapEPPiS1_(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef nonnull %708, ptr noundef nonnull @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8ntop_old) #56
  %709 = load i64, ptr %56, align 8, !tbaa !543
  %710 = trunc i64 %709 to i32
  %711 = icmp sgt i32 %710, 0
  %712 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nlft_old, align 8
  br i1 %711, label %713, label %734

713:                                              ; preds = %704
  %714 = load ptr, ptr %136, align 8, !tbaa !65
  %715 = load ptr, ptr %3, align 8, !tbaa !65
  %716 = load ptr, ptr %705, align 8
  %717 = load ptr, ptr %706, align 8
  %718 = load ptr, ptr %707, align 8
  %719 = load ptr, ptr %708, align 8
  %720 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %721 = load ptr, ptr %720, align 8
  %722 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nrht_old, align 8
  %723 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nbot_old, align 8
  %724 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8ntop_old, align 8
  %725 = and i64 %709, 4294967295
  br label %740

726:                                              ; preds = %726, %699
  %727 = phi i64 [ 0, %699 ], [ %732, %726 ]
  %728 = getelementptr inbounds i32, ptr %700, i64 %727
  store i32 -1, ptr %728, align 4, !tbaa !68
  %729 = getelementptr inbounds i32, ptr %701, i64 %727
  store i32 -1, ptr %729, align 4, !tbaa !68
  %730 = getelementptr inbounds i32, ptr %702, i64 %727
  store i32 -1, ptr %730, align 4, !tbaa !68
  %731 = getelementptr inbounds i32, ptr %696, i64 %727
  store i32 -1, ptr %731, align 4, !tbaa !68
  %732 = add nuw nsw i64 %727, 1
  %733 = icmp eq i64 %732, %703
  br i1 %733, label %704, label %726, !llvm.loop !712

734:                                              ; preds = %872, %704
  %735 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef %712) #56
  store ptr %735, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nlft_old, align 8, !tbaa !29
  %736 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nrht_old, align 8, !tbaa !29
  %737 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef %736) #56
  store ptr %737, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nrht_old, align 8, !tbaa !29
  %738 = load ptr, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nbot_old, align 8, !tbaa !29
  %739 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef %738) #56
  store ptr %739, ptr @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8nbot_old, align 8, !tbaa !29
  br label %886

740:                                              ; preds = %872, %713
  %741 = phi i64 [ 0, %713 ], [ %873, %872 ]
  %742 = getelementptr inbounds i32, ptr %714, i64 %741
  %743 = load i32, ptr %742, align 4, !tbaa !68
  %744 = getelementptr inbounds i32, ptr %715, i64 %741
  %745 = load i32, ptr %744, align 4, !tbaa !68
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %747, label %818

747:                                              ; preds = %740
  %748 = getelementptr inbounds i32, ptr %712, i64 %741
  %749 = load i32, ptr %748, align 4, !tbaa !68
  %750 = icmp slt i32 %749, %710
  %751 = icmp sgt i32 %749, -1
  %752 = and i1 %750, %751
  br i1 %752, label %753, label %765

753:                                              ; preds = %747
  %754 = zext i32 %749 to i64
  %755 = getelementptr inbounds i32, ptr %715, i64 %754
  %756 = load i32, ptr %755, align 4, !tbaa !68
  %757 = icmp eq i32 %756, 0
  br i1 %757, label %758, label %761

758:                                              ; preds = %753
  %759 = getelementptr inbounds i32, ptr %714, i64 %754
  %760 = load i32, ptr %759, align 4, !tbaa !68
  br label %761

761:                                              ; preds = %758, %753
  %762 = phi i32 [ %760, %758 ], [ -1, %753 ]
  %763 = sext i32 %743 to i64
  %764 = getelementptr inbounds i32, ptr %716, i64 %763
  store i32 %762, ptr %764, align 4, !tbaa !68
  br label %765

765:                                              ; preds = %761, %747
  %766 = getelementptr inbounds i32, ptr %722, i64 %741
  %767 = load i32, ptr %766, align 4, !tbaa !68
  %768 = icmp slt i32 %767, %710
  %769 = icmp sgt i32 %767, -1
  %770 = and i1 %768, %769
  br i1 %770, label %771, label %783

771:                                              ; preds = %765
  %772 = zext i32 %767 to i64
  %773 = getelementptr inbounds i32, ptr %715, i64 %772
  %774 = load i32, ptr %773, align 4, !tbaa !68
  %775 = icmp eq i32 %774, 0
  br i1 %775, label %776, label %779

776:                                              ; preds = %771
  %777 = getelementptr inbounds i32, ptr %714, i64 %772
  %778 = load i32, ptr %777, align 4, !tbaa !68
  br label %779

779:                                              ; preds = %776, %771
  %780 = phi i32 [ %778, %776 ], [ -1, %771 ]
  %781 = sext i32 %743 to i64
  %782 = getelementptr inbounds i32, ptr %717, i64 %781
  store i32 %780, ptr %782, align 4, !tbaa !68
  br label %783

783:                                              ; preds = %779, %765
  %784 = getelementptr inbounds i32, ptr %723, i64 %741
  %785 = load i32, ptr %784, align 4, !tbaa !68
  %786 = icmp slt i32 %785, %710
  %787 = icmp sgt i32 %785, -1
  %788 = and i1 %786, %787
  br i1 %788, label %789, label %801

789:                                              ; preds = %783
  %790 = zext i32 %785 to i64
  %791 = getelementptr inbounds i32, ptr %715, i64 %790
  %792 = load i32, ptr %791, align 4, !tbaa !68
  %793 = icmp eq i32 %792, 0
  br i1 %793, label %794, label %797

794:                                              ; preds = %789
  %795 = getelementptr inbounds i32, ptr %714, i64 %790
  %796 = load i32, ptr %795, align 4, !tbaa !68
  br label %797

797:                                              ; preds = %794, %789
  %798 = phi i32 [ %796, %794 ], [ -1, %789 ]
  %799 = sext i32 %743 to i64
  %800 = getelementptr inbounds i32, ptr %718, i64 %799
  store i32 %798, ptr %800, align 4, !tbaa !68
  br label %801

801:                                              ; preds = %797, %783
  %802 = getelementptr inbounds i32, ptr %724, i64 %741
  %803 = load i32, ptr %802, align 4, !tbaa !68
  %804 = icmp slt i32 %803, %710
  %805 = icmp sgt i32 %803, -1
  %806 = and i1 %804, %805
  br i1 %806, label %807, label %858

807:                                              ; preds = %801
  %808 = zext i32 %803 to i64
  %809 = getelementptr inbounds i32, ptr %715, i64 %808
  %810 = load i32, ptr %809, align 4, !tbaa !68
  %811 = icmp eq i32 %810, 0
  br i1 %811, label %812, label %815

812:                                              ; preds = %807
  %813 = getelementptr inbounds i32, ptr %714, i64 %808
  %814 = load i32, ptr %813, align 4, !tbaa !68
  br label %815

815:                                              ; preds = %812, %807
  %816 = phi i32 [ %814, %812 ], [ -1, %807 ]
  %817 = sext i32 %743 to i64
  br label %854

818:                                              ; preds = %740
  %819 = icmp slt i32 %745, -1
  br i1 %819, label %820, label %825

820:                                              ; preds = %818
  %821 = sext i32 %743 to i64
  %822 = getelementptr inbounds i32, ptr %716, i64 %821
  store i32 -1, ptr %822, align 4, !tbaa !68
  %823 = getelementptr inbounds i32, ptr %717, i64 %821
  store i32 -1, ptr %823, align 4, !tbaa !68
  %824 = getelementptr inbounds i32, ptr %718, i64 %821
  store i32 -1, ptr %824, align 4, !tbaa !68
  br label %854

825:                                              ; preds = %818
  %826 = icmp sgt i32 %745, 0
  br i1 %826, label %827, label %858

827:                                              ; preds = %825
  %828 = sext i32 %743 to i64
  %829 = getelementptr inbounds i32, ptr %716, i64 %828
  store i32 -1, ptr %829, align 4, !tbaa !68
  %830 = add nsw i32 %743, 1
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds i32, ptr %716, i64 %831
  store i32 -1, ptr %832, align 4, !tbaa !68
  %833 = getelementptr inbounds i32, ptr %717, i64 %828
  store i32 -1, ptr %833, align 4, !tbaa !68
  %834 = getelementptr inbounds i32, ptr %717, i64 %831
  store i32 -1, ptr %834, align 4, !tbaa !68
  %835 = getelementptr inbounds i32, ptr %718, i64 %828
  store i32 -1, ptr %835, align 4, !tbaa !68
  %836 = getelementptr inbounds i32, ptr %718, i64 %831
  store i32 -1, ptr %836, align 4, !tbaa !68
  %837 = getelementptr inbounds i32, ptr %719, i64 %828
  store i32 -1, ptr %837, align 4, !tbaa !68
  %838 = getelementptr inbounds i32, ptr %719, i64 %831
  store i32 -1, ptr %838, align 4, !tbaa !68
  %839 = getelementptr inbounds i32, ptr %721, i64 %828
  %840 = load i32, ptr %839, align 4, !tbaa !68
  %841 = icmp eq i32 %840, 1
  br i1 %841, label %842, label %858

842:                                              ; preds = %827
  %843 = add nsw i32 %743, 2
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds i32, ptr %716, i64 %844
  store i32 -1, ptr %845, align 4, !tbaa !68
  %846 = add nsw i32 %743, 3
  %847 = sext i32 %846 to i64
  %848 = getelementptr inbounds i32, ptr %716, i64 %847
  store i32 -1, ptr %848, align 4, !tbaa !68
  %849 = getelementptr inbounds i32, ptr %717, i64 %844
  store i32 -1, ptr %849, align 4, !tbaa !68
  %850 = getelementptr inbounds i32, ptr %717, i64 %847
  store i32 -1, ptr %850, align 4, !tbaa !68
  %851 = getelementptr inbounds i32, ptr %718, i64 %844
  store i32 -1, ptr %851, align 4, !tbaa !68
  %852 = getelementptr inbounds i32, ptr %718, i64 %847
  store i32 -1, ptr %852, align 4, !tbaa !68
  %853 = getelementptr inbounds i32, ptr %719, i64 %844
  store i32 -1, ptr %853, align 4, !tbaa !68
  br label %854

854:                                              ; preds = %842, %820, %815
  %855 = phi i64 [ %821, %820 ], [ %847, %842 ], [ %817, %815 ]
  %856 = phi i32 [ -1, %820 ], [ -1, %842 ], [ %816, %815 ]
  %857 = getelementptr inbounds i32, ptr %719, i64 %855
  store i32 %856, ptr %857, align 4, !tbaa !68
  br label %858

858:                                              ; preds = %854, %827, %825, %801
  %859 = load i32, ptr %744, align 4, !tbaa !68
  %860 = icmp sgt i32 %859, 0
  br i1 %860, label %861, label %872

861:                                              ; preds = %858
  %862 = add nsw i32 %743, 1
  %863 = sext i32 %862 to i64
  %864 = getelementptr inbounds i32, ptr %721, i64 %863
  %865 = load i32, ptr %864, align 4, !tbaa !68
  switch i32 %865, label %872 [
    i32 -1, label %869
    i32 -2, label %866
    i32 -3, label %867
    i32 -4, label %868
  ]

866:                                              ; preds = %861
  br label %869

867:                                              ; preds = %861
  br label %869

868:                                              ; preds = %861
  br label %869

869:                                              ; preds = %868, %867, %866, %861
  %870 = phi ptr [ %717, %866 ], [ %718, %867 ], [ %719, %868 ], [ %716, %861 ]
  %871 = getelementptr inbounds i32, ptr %870, i64 %863
  store i32 %862, ptr %871, align 4, !tbaa !68
  br label %872

872:                                              ; preds = %869, %861, %858
  %873 = add nuw nsw i64 %741, 1
  %874 = icmp eq i64 %873, %725
  br i1 %874, label %734, label %740, !llvm.loop !713

875:                                              ; preds = %681
  %876 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %877 = load ptr, ptr %876, align 8, !tbaa !684
  %878 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef %877) #56
  store ptr %878, ptr %876, align 8, !tbaa !684
  %879 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %880 = load ptr, ptr %879, align 8, !tbaa !685
  %881 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef %880) #56
  store ptr %881, ptr %879, align 8, !tbaa !685
  %882 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %883 = load ptr, ptr %882, align 8, !tbaa !686
  %884 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef %883) #56
  store ptr %884, ptr %882, align 8, !tbaa !686
  %885 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  br label %886

886:                                              ; preds = %875, %734
  %887 = phi ptr [ %885, %875 ], [ @_ZZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlusE8ntop_old, %734 ]
  %888 = load ptr, ptr %887, align 8, !tbaa !29
  %889 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %124, ptr noundef %888) #56
  store ptr %889, ptr %887, align 8, !tbaa !29
  br label %890

890:                                              ; preds = %886, %27, %20
  %891 = load i64, ptr %7, align 8
  %892 = getelementptr inbounds i8, ptr %7, i64 8
  %893 = load i64, ptr %892, align 8
  %894 = call double @cpu_timer_stop(i64 %891, i64 %893) #56
  %895 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 20
  %896 = load double, ptr %895, align 8, !tbaa !171
  %897 = fadd double %894, %896
  store double %897, ptr %895, align 8, !tbaa !171
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #57
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #21

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(ptr) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(ptr) local_unnamed_addr #9

; Function Attrs: optsize uwtable
define internal void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1, ptr noundef nonnull align 4 dereferenceable(4) %2) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !29
  %6 = load ptr, ptr %0, align 8, !tbaa !65
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = sub i64 %1, %10
  tail call void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %5, i64 noundef %13, ptr noundef nonnull align 4 dereferenceable(4) %2) #56
  br label %20

14:                                               ; preds = %3
  %15 = icmp ugt i64 %10, %1
  br i1 %15, label %16, label %20

16:                                               ; preds = %14
  %17 = getelementptr inbounds i32, ptr %6, i64 %1
  %18 = icmp eq ptr %5, %17
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  store ptr %17, ptr %4, align 8, !tbaa !70
  br label %20

20:                                               ; preds = %19, %16, %14, %12
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal void @_ZN4Mesh20set_refinement_orderEPiiiiiiiiS0_S0_S0_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, ptr noundef writeonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, ptr nocapture noundef readonly %9, ptr nocapture noundef readonly %10, ptr nocapture noundef readonly %11) #39 align 2 {
  %13 = load i8, ptr @localStencil, align 1, !tbaa !540, !range !130, !noundef !131
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %381, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %17 = load i32, ptr %16, align 8, !tbaa !647
  %18 = sext i32 %2 to i64
  %19 = getelementptr inbounds i32, ptr %11, i64 %18
  %20 = load i32, ptr %19, align 4, !tbaa !68
  %21 = sub nsw i32 %17, %20
  %22 = shl i32 2, %21
  %23 = icmp eq i32 %2, 0
  br i1 %23, label %37, label %24

24:                                               ; preds = %15
  %25 = add nsw i32 %2, -1
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, ptr %9, i64 %26
  %28 = load i32, ptr %27, align 4, !tbaa !68
  %29 = getelementptr inbounds i32, ptr %11, i64 %26
  %30 = load i32, ptr %29, align 4, !tbaa !68
  %31 = sub nsw i32 %17, %30
  %32 = shl i32 2, %31
  %33 = mul nsw i32 %32, %28
  %34 = getelementptr inbounds i32, ptr %10, i64 %26
  %35 = load i32, ptr %34, align 4, !tbaa !68
  %36 = mul nsw i32 %32, %35
  br label %42

37:                                               ; preds = %15
  %38 = sub nsw i32 %17, %7
  %39 = shl i32 2, %38
  %40 = mul nsw i32 %39, %3
  %41 = mul nsw i32 %39, %5
  br label %42

42:                                               ; preds = %37, %24
  %43 = phi i32 [ %36, %24 ], [ %41, %37 ]
  %44 = phi i32 [ %33, %24 ], [ %40, %37 ]
  %45 = getelementptr inbounds i32, ptr %9, i64 %18
  %46 = load i32, ptr %45, align 4, !tbaa !68
  %47 = mul nsw i32 %46, %22
  %48 = getelementptr inbounds i32, ptr %10, i64 %18
  %49 = load i32, ptr %48, align 4, !tbaa !68
  %50 = mul nsw i32 %49, %22
  %51 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %52 = load i64, ptr %51, align 8, !tbaa !543
  %53 = trunc i64 %52 to i32
  %54 = add nsw i32 %53, -1
  %55 = icmp eq i32 %54, %2
  br i1 %55, label %69, label %56

56:                                               ; preds = %42
  %57 = add nsw i32 %2, 1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, ptr %9, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !68
  %61 = getelementptr inbounds i32, ptr %11, i64 %58
  %62 = load i32, ptr %61, align 4, !tbaa !68
  %63 = sub nsw i32 %17, %62
  %64 = shl i32 2, %63
  %65 = mul nsw i32 %64, %60
  %66 = getelementptr inbounds i32, ptr %10, i64 %58
  %67 = load i32, ptr %66, align 4, !tbaa !68
  %68 = mul nsw i32 %64, %67
  br label %74

69:                                               ; preds = %42
  %70 = sub nsw i32 %17, %8
  %71 = shl i32 2, %70
  %72 = mul nsw i32 %71, %4
  %73 = mul nsw i32 %71, %6
  br label %74

74:                                               ; preds = %69, %56
  %75 = phi i32 [ %68, %56 ], [ %73, %69 ]
  %76 = phi i32 [ %65, %56 ], [ %72, %69 ]
  %77 = sub nsw i32 %47, %44
  %78 = sub nsw i32 %47, %76
  %79 = sub nsw i32 %50, %43
  %80 = sub nsw i32 %50, %75
  %81 = icmp eq i32 %50, %43
  br i1 %81, label %82, label %92

82:                                               ; preds = %74
  %83 = sitofp i32 %77 to double
  %84 = sitofp i32 %22 to double
  %85 = fmul double %84, 5.000000e-01
  %86 = fcmp oeq double %85, %83
  %87 = icmp eq i32 %77, %22
  %88 = select i1 %86, i1 true, i1 %87
  %89 = shl i32 4, %21
  %90 = icmp eq i32 %77, %89
  %91 = select i1 %88, i1 true, i1 %90
  br i1 %91, label %171, label %92

92:                                               ; preds = %82, %74
  %93 = sitofp i32 %79 to double
  %94 = sub nsw i32 0, %22
  %95 = sitofp i32 %94 to double
  %96 = fmul double %95, 5.000000e-01
  %97 = fcmp oeq double %96, %93
  br i1 %97, label %98, label %103

98:                                               ; preds = %92
  %99 = sitofp i32 %77 to double
  %100 = sitofp i32 %22 to double
  %101 = fmul double %100, 5.000000e-01
  %102 = fcmp oeq double %101, %99
  br i1 %102, label %171, label %103

103:                                              ; preds = %98, %92
  %104 = icmp eq i32 %79, %22
  %105 = shl i32 4, %21
  %106 = icmp eq i32 %77, %105
  %107 = select i1 %104, i1 %106, i1 false
  br i1 %107, label %171, label %108

108:                                              ; preds = %103
  %109 = icmp eq i32 %47, %44
  br i1 %109, label %110, label %117

110:                                              ; preds = %108
  %111 = sitofp i32 %22 to double
  %112 = fmul double %111, 5.000000e-01
  %113 = fcmp oeq double %112, %93
  %114 = or i1 %104, %113
  %115 = icmp eq i32 %79, %105
  %116 = select i1 %114, i1 true, i1 %115
  br i1 %116, label %171, label %117

117:                                              ; preds = %110, %108
  %118 = sitofp i32 %77 to double
  %119 = fcmp oeq double %96, %118
  br i1 %119, label %120, label %124

120:                                              ; preds = %117
  %121 = sitofp i32 %22 to double
  %122 = fmul double %121, 5.000000e-01
  %123 = fcmp oeq double %122, %93
  br i1 %123, label %171, label %124

124:                                              ; preds = %120, %117
  %125 = icmp eq i32 %77, %22
  %126 = icmp eq i32 %79, %105
  %127 = select i1 %125, i1 %126, i1 false
  br i1 %127, label %171, label %128

128:                                              ; preds = %124
  %129 = icmp eq i32 %77, %94
  br i1 %129, label %130, label %139

130:                                              ; preds = %128
  %131 = or i1 %81, %97
  br i1 %131, label %171, label %132

132:                                              ; preds = %130
  br i1 %104, label %133, label %139

133:                                              ; preds = %132
  %134 = add nsw i32 %2, -1
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i32, ptr %11, i64 %135
  %137 = load i32, ptr %136, align 4, !tbaa !68
  %138 = icmp slt i32 %137, %20
  br i1 %138, label %171, label %139

139:                                              ; preds = %133, %132, %128
  %140 = icmp eq i32 %79, %94
  br i1 %140, label %141, label %150

141:                                              ; preds = %139
  %142 = or i1 %109, %119
  br i1 %142, label %171, label %143

143:                                              ; preds = %141
  br i1 %125, label %144, label %150

144:                                              ; preds = %143
  %145 = add nsw i32 %2, -1
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i32, ptr %11, i64 %146
  %148 = load i32, ptr %147, align 4, !tbaa !68
  %149 = icmp slt i32 %148, %20
  br i1 %149, label %171, label %150

150:                                              ; preds = %144, %143, %139
  %151 = icmp sgt i32 %77, 0
  %152 = and i1 %151, %81
  br i1 %152, label %171, label %153

153:                                              ; preds = %150
  %154 = icmp slt i32 %77, 0
  %155 = and i1 %154, %81
  br i1 %155, label %171, label %156

156:                                              ; preds = %153
  %157 = icmp sgt i32 %79, 0
  %158 = and i1 %109, %157
  br i1 %158, label %171, label %159

159:                                              ; preds = %156
  %160 = icmp slt i32 %79, 0
  %161 = and i1 %109, %160
  br i1 %161, label %171, label %162

162:                                              ; preds = %159
  %163 = and i1 %151, %157
  br i1 %163, label %171, label %164

164:                                              ; preds = %162
  %165 = and i1 %151, %160
  br i1 %165, label %171, label %166

166:                                              ; preds = %164
  %167 = and i1 %154, %157
  br i1 %167, label %171, label %168

168:                                              ; preds = %166
  %169 = and i32 %79, %77
  %170 = icmp slt i32 %169, 0
  br label %171

171:                                              ; preds = %168, %166, %164, %162, %159, %156, %153, %150, %144, %141, %133, %130, %124, %120, %110, %103, %98, %82
  %172 = phi i1 [ true, %103 ], [ true, %98 ], [ true, %82 ], [ false, %124 ], [ false, %110 ], [ false, %120 ], [ false, %133 ], [ false, %130 ], [ false, %144 ], [ false, %141 ], [ true, %150 ], [ false, %153 ], [ false, %156 ], [ false, %159 ], [ false, %162 ], [ false, %164 ], [ false, %166 ], [ false, %168 ]
  %173 = phi i1 [ false, %103 ], [ false, %98 ], [ false, %82 ], [ true, %124 ], [ true, %110 ], [ true, %120 ], [ false, %133 ], [ false, %130 ], [ false, %144 ], [ false, %141 ], [ false, %150 ], [ false, %153 ], [ true, %156 ], [ false, %159 ], [ false, %162 ], [ false, %164 ], [ false, %166 ], [ false, %168 ]
  %174 = phi i1 [ false, %103 ], [ false, %98 ], [ false, %82 ], [ false, %124 ], [ false, %110 ], [ false, %120 ], [ true, %133 ], [ true, %130 ], [ false, %144 ], [ false, %141 ], [ false, %150 ], [ true, %153 ], [ false, %156 ], [ false, %159 ], [ false, %162 ], [ false, %164 ], [ false, %166 ], [ false, %168 ]
  %175 = phi i1 [ false, %103 ], [ false, %98 ], [ false, %82 ], [ false, %124 ], [ false, %110 ], [ false, %120 ], [ false, %133 ], [ false, %130 ], [ true, %144 ], [ true, %141 ], [ false, %150 ], [ false, %153 ], [ false, %156 ], [ true, %159 ], [ false, %162 ], [ false, %164 ], [ false, %166 ], [ false, %168 ]
  %176 = phi i1 [ false, %103 ], [ false, %98 ], [ false, %82 ], [ false, %124 ], [ false, %110 ], [ false, %120 ], [ false, %133 ], [ false, %130 ], [ false, %144 ], [ false, %141 ], [ false, %150 ], [ false, %153 ], [ false, %156 ], [ false, %159 ], [ true, %162 ], [ false, %164 ], [ false, %166 ], [ false, %168 ]
  %177 = phi i1 [ false, %103 ], [ false, %98 ], [ false, %82 ], [ false, %124 ], [ false, %110 ], [ false, %120 ], [ false, %133 ], [ false, %130 ], [ false, %144 ], [ false, %141 ], [ false, %150 ], [ false, %153 ], [ false, %156 ], [ false, %159 ], [ false, %162 ], [ true, %164 ], [ false, %166 ], [ false, %168 ]
  %178 = phi i1 [ false, %103 ], [ false, %98 ], [ false, %82 ], [ false, %124 ], [ false, %110 ], [ false, %120 ], [ false, %133 ], [ false, %130 ], [ false, %144 ], [ false, %141 ], [ false, %150 ], [ false, %153 ], [ false, %156 ], [ false, %159 ], [ false, %162 ], [ false, %164 ], [ true, %166 ], [ false, %168 ]
  %179 = phi i1 [ false, %103 ], [ false, %98 ], [ false, %82 ], [ false, %124 ], [ false, %110 ], [ false, %120 ], [ false, %133 ], [ false, %130 ], [ false, %144 ], [ false, %141 ], [ false, %150 ], [ false, %153 ], [ false, %156 ], [ false, %159 ], [ false, %162 ], [ false, %164 ], [ false, %166 ], [ %170, %168 ]
  %180 = icmp eq i32 %50, %75
  br i1 %180, label %181, label %191

181:                                              ; preds = %171
  %182 = sitofp i32 %78 to double
  %183 = sitofp i32 %22 to double
  %184 = fmul double %183, 5.000000e-01
  %185 = fcmp oeq double %184, %182
  %186 = icmp eq i32 %78, %22
  %187 = select i1 %185, i1 true, i1 %186
  %188 = shl i32 4, %21
  %189 = icmp eq i32 %78, %188
  %190 = select i1 %187, i1 true, i1 %189
  br i1 %190, label %270, label %191

191:                                              ; preds = %181, %171
  %192 = sitofp i32 %80 to double
  %193 = sub nsw i32 0, %22
  %194 = sitofp i32 %193 to double
  %195 = fmul double %194, 5.000000e-01
  %196 = fcmp oeq double %195, %192
  br i1 %196, label %197, label %202

197:                                              ; preds = %191
  %198 = sitofp i32 %78 to double
  %199 = sitofp i32 %22 to double
  %200 = fmul double %199, 5.000000e-01
  %201 = fcmp oeq double %200, %198
  br i1 %201, label %270, label %202

202:                                              ; preds = %197, %191
  %203 = icmp eq i32 %80, %22
  %204 = shl i32 4, %21
  %205 = icmp eq i32 %78, %204
  %206 = select i1 %203, i1 %205, i1 false
  br i1 %206, label %270, label %207

207:                                              ; preds = %202
  %208 = icmp eq i32 %47, %76
  br i1 %208, label %209, label %216

209:                                              ; preds = %207
  %210 = sitofp i32 %22 to double
  %211 = fmul double %210, 5.000000e-01
  %212 = fcmp oeq double %211, %192
  %213 = or i1 %203, %212
  %214 = icmp eq i32 %80, %204
  %215 = select i1 %213, i1 true, i1 %214
  br i1 %215, label %270, label %216

216:                                              ; preds = %209, %207
  %217 = sitofp i32 %78 to double
  %218 = fcmp oeq double %195, %217
  br i1 %218, label %219, label %223

219:                                              ; preds = %216
  %220 = sitofp i32 %22 to double
  %221 = fmul double %220, 5.000000e-01
  %222 = fcmp oeq double %221, %192
  br i1 %222, label %270, label %223

223:                                              ; preds = %219, %216
  %224 = icmp eq i32 %78, %22
  %225 = icmp eq i32 %80, %204
  %226 = select i1 %224, i1 %225, i1 false
  br i1 %226, label %270, label %227

227:                                              ; preds = %223
  %228 = icmp eq i32 %78, %193
  br i1 %228, label %229, label %238

229:                                              ; preds = %227
  %230 = or i1 %180, %196
  br i1 %230, label %270, label %231

231:                                              ; preds = %229
  br i1 %203, label %232, label %238

232:                                              ; preds = %231
  %233 = add nsw i32 %2, 1
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds i32, ptr %11, i64 %234
  %236 = load i32, ptr %235, align 4, !tbaa !68
  %237 = icmp slt i32 %236, %20
  br i1 %237, label %270, label %238

238:                                              ; preds = %232, %231, %227
  %239 = icmp eq i32 %80, %193
  br i1 %239, label %240, label %249

240:                                              ; preds = %238
  %241 = or i1 %208, %218
  br i1 %241, label %270, label %242

242:                                              ; preds = %240
  br i1 %224, label %243, label %249

243:                                              ; preds = %242
  %244 = add nsw i32 %2, 1
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds i32, ptr %11, i64 %245
  %247 = load i32, ptr %246, align 4, !tbaa !68
  %248 = icmp slt i32 %247, %20
  br i1 %248, label %270, label %249

249:                                              ; preds = %243, %242, %238
  %250 = icmp sgt i32 %78, 0
  %251 = and i1 %180, %250
  br i1 %251, label %270, label %252

252:                                              ; preds = %249
  %253 = icmp slt i32 %78, 0
  %254 = and i1 %180, %253
  br i1 %254, label %270, label %255

255:                                              ; preds = %252
  %256 = icmp sgt i32 %80, 0
  %257 = and i1 %256, %208
  br i1 %257, label %270, label %258

258:                                              ; preds = %255
  %259 = icmp slt i32 %80, 0
  %260 = and i1 %259, %208
  br i1 %260, label %270, label %261

261:                                              ; preds = %258
  %262 = and i1 %256, %250
  br i1 %262, label %270, label %263

263:                                              ; preds = %261
  %264 = and i1 %259, %250
  br i1 %264, label %270, label %265

265:                                              ; preds = %263
  %266 = and i1 %256, %253
  br i1 %266, label %270, label %267

267:                                              ; preds = %265
  %268 = and i32 %78, %80
  %269 = icmp slt i32 %268, 0
  br label %270

270:                                              ; preds = %267, %265, %263, %261, %258, %255, %252, %249, %243, %240, %232, %229, %223, %219, %209, %202, %197, %181
  %271 = phi i1 [ false, %202 ], [ false, %197 ], [ false, %181 ], [ false, %223 ], [ false, %209 ], [ false, %219 ], [ false, %232 ], [ false, %229 ], [ false, %243 ], [ false, %240 ], [ false, %249 ], [ false, %252 ], [ false, %255 ], [ false, %258 ], [ true, %261 ], [ false, %263 ], [ false, %265 ], [ false, %267 ]
  %272 = phi i1 [ false, %202 ], [ false, %197 ], [ false, %181 ], [ false, %223 ], [ false, %209 ], [ false, %219 ], [ false, %232 ], [ false, %229 ], [ false, %243 ], [ false, %240 ], [ false, %249 ], [ false, %252 ], [ false, %255 ], [ false, %258 ], [ false, %261 ], [ false, %263 ], [ false, %265 ], [ %269, %267 ]
  %273 = phi i1 [ false, %202 ], [ false, %197 ], [ false, %181 ], [ false, %223 ], [ false, %209 ], [ false, %219 ], [ false, %232 ], [ false, %229 ], [ false, %243 ], [ false, %240 ], [ false, %249 ], [ false, %252 ], [ false, %255 ], [ false, %258 ], [ false, %261 ], [ false, %263 ], [ true, %265 ], [ false, %267 ]
  %274 = phi i1 [ false, %202 ], [ false, %197 ], [ false, %181 ], [ false, %223 ], [ false, %209 ], [ false, %219 ], [ false, %232 ], [ false, %229 ], [ false, %243 ], [ false, %240 ], [ false, %249 ], [ false, %252 ], [ false, %255 ], [ false, %258 ], [ false, %261 ], [ true, %263 ], [ false, %265 ], [ false, %267 ]
  %275 = phi i1 [ false, %202 ], [ false, %197 ], [ false, %181 ], [ false, %223 ], [ false, %209 ], [ false, %219 ], [ true, %232 ], [ true, %229 ], [ false, %243 ], [ false, %240 ], [ false, %249 ], [ true, %252 ], [ false, %255 ], [ false, %258 ], [ false, %261 ], [ false, %263 ], [ false, %265 ], [ false, %267 ]
  %276 = phi i1 [ false, %202 ], [ false, %197 ], [ false, %181 ], [ true, %223 ], [ true, %209 ], [ true, %219 ], [ false, %232 ], [ false, %229 ], [ false, %243 ], [ false, %240 ], [ false, %249 ], [ false, %252 ], [ true, %255 ], [ false, %258 ], [ false, %261 ], [ false, %263 ], [ false, %265 ], [ false, %267 ]
  %277 = phi i1 [ true, %202 ], [ true, %197 ], [ true, %181 ], [ false, %223 ], [ false, %209 ], [ false, %219 ], [ false, %232 ], [ false, %229 ], [ false, %243 ], [ false, %240 ], [ true, %249 ], [ false, %252 ], [ false, %255 ], [ false, %258 ], [ false, %261 ], [ false, %263 ], [ false, %265 ], [ false, %267 ]
  %278 = phi i1 [ false, %202 ], [ false, %197 ], [ false, %181 ], [ false, %223 ], [ false, %209 ], [ false, %219 ], [ false, %232 ], [ false, %229 ], [ true, %243 ], [ true, %240 ], [ false, %249 ], [ false, %252 ], [ false, %255 ], [ true, %258 ], [ false, %261 ], [ false, %263 ], [ false, %265 ], [ false, %267 ]
  %279 = or i1 %275, %276
  %280 = or i1 %273, %279
  %281 = and i1 %172, %280
  br i1 %281, label %282, label %283

282:                                              ; preds = %270
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, ptr %1, align 4, !tbaa !68
  br label %382

283:                                              ; preds = %270
  %284 = or i1 %274, %278
  %285 = and i1 %172, %284
  br i1 %285, label %286, label %287

286:                                              ; preds = %283
  store <4 x i32> <i32 0, i32 3, i32 2, i32 1>, ptr %1, align 4, !tbaa !68
  br label %382

287:                                              ; preds = %283
  %288 = and i1 %172, %271
  br i1 %288, label %289, label %290

289:                                              ; preds = %287
  store <4 x i32> <i32 1, i32 2, i32 3, i32 0>, ptr %1, align 4, !tbaa !68
  br label %382

290:                                              ; preds = %287
  %291 = and i1 %172, %272
  br i1 %291, label %292, label %293

292:                                              ; preds = %290
  store <4 x i32> <i32 0, i32 3, i32 1, i32 2>, ptr %1, align 4, !tbaa !68
  br label %382

293:                                              ; preds = %290
  %294 = or i1 %273, %275
  %295 = and i1 %173, %294
  br i1 %295, label %296, label %297

296:                                              ; preds = %293
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, ptr %1, align 4, !tbaa !68
  br label %382

297:                                              ; preds = %293
  %298 = or i1 %277, %278
  %299 = or i1 %274, %298
  %300 = and i1 %173, %299
  br i1 %300, label %301, label %302

301:                                              ; preds = %297
  store <4 x i32> <i32 0, i32 3, i32 2, i32 1>, ptr %1, align 4, !tbaa !68
  br label %382

302:                                              ; preds = %297
  %303 = and i1 %173, %271
  br i1 %303, label %304, label %305

304:                                              ; preds = %302
  store <4 x i32> <i32 3, i32 2, i32 1, i32 0>, ptr %1, align 4, !tbaa !68
  br label %382

305:                                              ; preds = %302
  %306 = and i1 %173, %272
  br i1 %306, label %307, label %308

307:                                              ; preds = %305
  store <4 x i32> <i32 0, i32 1, i32 3, i32 2>, ptr %1, align 4, !tbaa !68
  br label %382

308:                                              ; preds = %305
  %309 = and i1 %174, %299
  br i1 %309, label %310, label %311

310:                                              ; preds = %308
  store <4 x i32> <i32 2, i32 3, i32 0, i32 1>, ptr %1, align 4, !tbaa !68
  br label %382

311:                                              ; preds = %308
  %312 = or i1 %273, %276
  %313 = and i1 %174, %312
  br i1 %313, label %314, label %315

314:                                              ; preds = %311
  store <4 x i32> <i32 2, i32 1, i32 0, i32 3>, ptr %1, align 4, !tbaa !68
  br label %382

315:                                              ; preds = %311
  %316 = and i1 %174, %271
  br i1 %316, label %317, label %318

317:                                              ; preds = %315
  store <4 x i32> <i32 2, i32 1, i32 3, i32 0>, ptr %1, align 4, !tbaa !68
  br label %382

318:                                              ; preds = %315
  %319 = and i1 %174, %272
  br i1 %319, label %320, label %321

320:                                              ; preds = %318
  store <4 x i32> <i32 3, i32 0, i32 1, i32 2>, ptr %1, align 4, !tbaa !68
  br label %382

321:                                              ; preds = %318
  %322 = or i1 %274, %277
  %323 = and i1 %175, %322
  br i1 %323, label %324, label %325

324:                                              ; preds = %321
  store <4 x i32> <i32 2, i32 3, i32 0, i32 1>, ptr %1, align 4, !tbaa !68
  br label %382

325:                                              ; preds = %321
  %326 = and i1 %175, %280
  br i1 %326, label %327, label %328

327:                                              ; preds = %325
  store <4 x i32> <i32 2, i32 1, i32 0, i32 3>, ptr %1, align 4, !tbaa !68
  br label %382

328:                                              ; preds = %325
  %329 = and i1 %175, %271
  br i1 %329, label %330, label %331

330:                                              ; preds = %328
  store <4 x i32> <i32 2, i32 3, i32 1, i32 0>, ptr %1, align 4, !tbaa !68
  br label %382

331:                                              ; preds = %328
  %332 = and i1 %175, %272
  br i1 %332, label %333, label %334

333:                                              ; preds = %331
  store <4 x i32> <i32 1, i32 0, i32 3, i32 2>, ptr %1, align 4, !tbaa !68
  br label %382

334:                                              ; preds = %331
  %335 = or i1 %322, %278
  %336 = and i1 %176, %335
  br i1 %336, label %337, label %338

337:                                              ; preds = %334
  store <4 x i32> <i32 0, i32 3, i32 2, i32 1>, ptr %1, align 4, !tbaa !68
  br label %382

338:                                              ; preds = %334
  %339 = or i1 %294, %276
  %340 = and i1 %176, %339
  br i1 %340, label %341, label %342

341:                                              ; preds = %338
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, ptr %1, align 4, !tbaa !68
  br label %382

342:                                              ; preds = %338
  %343 = and i1 %176, %272
  br i1 %343, label %344, label %345

344:                                              ; preds = %342
  store <4 x i32> <i32 0, i32 3, i32 1, i32 2>, ptr %1, align 4, !tbaa !68
  br label %382

345:                                              ; preds = %342
  %346 = or i1 %271, %277
  %347 = or i1 %276, %346
  %348 = and i1 %177, %347
  br i1 %348, label %349, label %350

349:                                              ; preds = %345
  store <4 x i32> <i32 1, i32 2, i32 3, i32 0>, ptr %1, align 4, !tbaa !68
  br label %382

350:                                              ; preds = %345
  %351 = or i1 %272, %275
  %352 = or i1 %351, %278
  %353 = and i1 %177, %352
  br i1 %353, label %354, label %355

354:                                              ; preds = %350
  store <4 x i32> <i32 1, i32 0, i32 3, i32 2>, ptr %1, align 4, !tbaa !68
  br label %382

355:                                              ; preds = %350
  %356 = and i1 %177, %273
  br i1 %356, label %357, label %358

357:                                              ; preds = %355
  store <4 x i32> <i32 1, i32 2, i32 0, i32 3>, ptr %1, align 4, !tbaa !68
  br label %382

358:                                              ; preds = %355
  %359 = and i1 %178, %347
  br i1 %359, label %360, label %361

360:                                              ; preds = %358
  store <4 x i32> <i32 3, i32 2, i32 1, i32 0>, ptr %1, align 4, !tbaa !68
  br label %382

361:                                              ; preds = %358
  %362 = and i1 %178, %352
  br i1 %362, label %363, label %364

363:                                              ; preds = %361
  store <4 x i32> <i32 3, i32 0, i32 1, i32 2>, ptr %1, align 4, !tbaa !68
  br label %382

364:                                              ; preds = %361
  %365 = and i1 %178, %274
  br i1 %365, label %366, label %367

366:                                              ; preds = %364
  store <4 x i32> <i32 3, i32 2, i32 0, i32 1>, ptr %1, align 4, !tbaa !68
  br label %382

367:                                              ; preds = %364
  %368 = and i1 %179, %299
  br i1 %368, label %369, label %370

369:                                              ; preds = %367
  store <4 x i32> <i32 2, i32 3, i32 0, i32 1>, ptr %1, align 4, !tbaa !68
  br label %382

370:                                              ; preds = %367
  %371 = and i1 %179, %280
  br i1 %371, label %372, label %373

372:                                              ; preds = %370
  store <4 x i32> <i32 2, i32 1, i32 0, i32 3>, ptr %1, align 4, !tbaa !68
  br label %382

373:                                              ; preds = %370
  %374 = and i1 %179, %271
  br i1 %374, label %375, label %376

375:                                              ; preds = %373
  store <4 x i32> <i32 2, i32 3, i32 1, i32 0>, ptr %1, align 4, !tbaa !68
  br label %382

376:                                              ; preds = %373
  store <4 x i32> <i32 1, i32 3, i32 0, i32 2>, ptr %1, align 4, !tbaa !68
  %377 = load i32, ptr @do_stencil_warning, align 4, !tbaa !68
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %382, label %379

379:                                              ; preds = %376
  %380 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.146)
  br label %382

381:                                              ; preds = %12
  store <4 x i32> <i32 0, i32 3, i32 1, i32 2>, ptr %1, align 4, !tbaa !68
  br label %382

382:                                              ; preds = %381, %379, %376, %375, %372, %369, %366, %363, %360, %357, %354, %349, %344, %341, %337, %333, %330, %327, %324, %320, %317, %314, %310, %307, %304, %301, %296, %292, %289, %286, %282
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, i64 noundef %2, ptr noundef nonnull align 4 dereferenceable(4) %3) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %104, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !67
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !29
  %11 = ptrtoint ptr %8 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %62, label %16

16:                                               ; preds = %6
  %17 = load i32, ptr %3, align 4, !tbaa !68
  %18 = ptrtoint ptr %1 to i64
  %19 = sub i64 %12, %18
  %20 = ashr exact i64 %19, 2
  %21 = icmp ugt i64 %20, %2
  br i1 %21, label %22, label %41

22:                                               ; preds = %16
  %23 = sub i64 0, %2
  %24 = getelementptr inbounds i32, ptr %10, i64 %23
  %25 = shl i64 %2, 2
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %10, ptr nonnull align 4 %24, i64 %25, i1 false)
  %26 = load ptr, ptr %9, align 8, !tbaa !70
  %27 = getelementptr inbounds i32, ptr %26, i64 %2
  store ptr %27, ptr %9, align 8, !tbaa !70
  %28 = icmp eq ptr %24, %1
  br i1 %28, label %35, label %29

29:                                               ; preds = %22
  %30 = ptrtoint ptr %24 to i64
  %31 = sub i64 %30, %18
  %32 = ashr exact i64 %31, 2
  %33 = sub nsw i64 0, %32
  %34 = getelementptr inbounds i32, ptr %10, i64 %33
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %34, ptr align 4 %1, i64 %31, i1 false)
  br label %35

35:                                               ; preds = %29, %22
  %36 = getelementptr inbounds i32, ptr %1, i64 %2
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi ptr [ %39, %37 ], [ %1, %35 ]
  store i32 %17, ptr %38, align 4, !tbaa !68
  %39 = getelementptr inbounds i32, ptr %38, i64 1
  %40 = icmp eq ptr %39, %36
  br i1 %40, label %104, label %37, !llvm.loop !714

41:                                               ; preds = %16
  %42 = icmp eq i64 %20, %2
  br i1 %42, label %50, label %43

43:                                               ; preds = %41
  %44 = sub i64 %2, %20
  %45 = getelementptr inbounds i32, ptr %10, i64 %44
  br label %46

46:                                               ; preds = %46, %43
  %47 = phi ptr [ %48, %46 ], [ %10, %43 ]
  store i32 %17, ptr %47, align 4, !tbaa !68
  %48 = getelementptr inbounds i32, ptr %47, i64 1
  %49 = icmp eq ptr %48, %45
  br i1 %49, label %50, label %46, !llvm.loop !714

50:                                               ; preds = %46, %41
  %51 = phi ptr [ %10, %41 ], [ %45, %46 ]
  store ptr %51, ptr %9, align 8, !tbaa !70
  %52 = icmp eq ptr %10, %1
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = getelementptr inbounds i32, ptr %51, i64 %20
  store ptr %54, ptr %9, align 8, !tbaa !70
  br label %104

55:                                               ; preds = %50
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %51, ptr align 4 %1, i64 %19, i1 false)
  %56 = load ptr, ptr %9, align 8, !tbaa !70
  %57 = getelementptr inbounds i32, ptr %56, i64 %20
  store ptr %57, ptr %9, align 8, !tbaa !70
  br label %58

58:                                               ; preds = %58, %55
  %59 = phi ptr [ %60, %58 ], [ %1, %55 ]
  store i32 %17, ptr %59, align 4, !tbaa !68
  %60 = getelementptr inbounds i32, ptr %59, i64 1
  %61 = icmp eq ptr %60, %10
  br i1 %61, label %104, label %58, !llvm.loop !714

62:                                               ; preds = %6
  %63 = tail call noundef i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %2, ptr noundef nonnull @.str.144.163) #56
  %64 = load ptr, ptr %0, align 8, !tbaa !29
  %65 = ptrtoint ptr %1 to i64
  %66 = ptrtoint ptr %64 to i64
  %67 = sub i64 %65, %66
  %68 = ashr exact i64 %67, 2
  %69 = icmp eq i64 %63, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %62
  %71 = tail call noundef ptr @_ZNSt15__new_allocatorIiE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %0, i64 noundef %63, ptr noundef null) #56
  br label %72

72:                                               ; preds = %70, %62
  %73 = phi ptr [ %71, %70 ], [ null, %62 ]
  %74 = getelementptr inbounds i32, ptr %73, i64 %68
  %75 = getelementptr inbounds i32, ptr %74, i64 %2
  %76 = load i32, ptr %3, align 4, !tbaa !68
  br label %77

77:                                               ; preds = %77, %72
  %78 = phi ptr [ %79, %77 ], [ %74, %72 ]
  store i32 %76, ptr %78, align 4, !tbaa !68
  %79 = getelementptr inbounds i32, ptr %78, i64 1
  %80 = icmp eq ptr %79, %75
  br i1 %80, label %81, label %77, !llvm.loop !714

81:                                               ; preds = %77
  %82 = load ptr, ptr %0, align 8, !tbaa !65
  %83 = ptrtoint ptr %82 to i64
  %84 = sub i64 %65, %83
  %85 = icmp eq ptr %82, %1
  br i1 %85, label %87, label %86

86:                                               ; preds = %81
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %73, ptr align 4 %82, i64 %84, i1 false)
  br label %87

87:                                               ; preds = %86, %81
  %88 = ashr exact i64 %84, 2
  %89 = getelementptr inbounds i32, ptr %73, i64 %88
  %90 = getelementptr inbounds i32, ptr %89, i64 %2
  %91 = load ptr, ptr %9, align 8, !tbaa !70
  %92 = ptrtoint ptr %91 to i64
  %93 = sub i64 %92, %65
  %94 = icmp eq ptr %91, %1
  br i1 %94, label %96, label %95

95:                                               ; preds = %87
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %90, ptr align 4 %1, i64 %93, i1 false)
  br label %96

96:                                               ; preds = %95, %87
  %97 = ashr exact i64 %93, 2
  %98 = getelementptr inbounds i32, ptr %90, i64 %97
  %99 = load ptr, ptr %0, align 8, !tbaa !65
  %100 = icmp eq ptr %99, null
  br i1 %100, label %102, label %101

101:                                              ; preds = %96
  tail call void @_ZdlPv(ptr noundef nonnull %99) #58
  br label %102

102:                                              ; preds = %101, %96
  store ptr %73, ptr %0, align 8, !tbaa !65
  store ptr %98, ptr %9, align 8, !tbaa !70
  %103 = getelementptr inbounds i32, ptr %73, i64 %63
  store ptr %103, ptr %7, align 8, !tbaa !67
  br label %104

104:                                              ; preds = %102, %58, %53, %37, %4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal noundef i32 @_ZN4Mesh12rezone_countESt6vectorIiSaIiEERiS3_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, ptr nocapture noundef readonly %1, ptr nocapture noundef nonnull align 4 dereferenceable(4) %2, ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %3) #50 align 2 {
  %5 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %6 = load i64, ptr %5, align 8, !tbaa !543
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = load ptr, ptr %1, align 8, !tbaa !65
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %15 = load ptr, ptr %14, align 8
  br label %21

16:                                               ; preds = %65, %4
  %17 = phi i32 [ 0, %4 ], [ %67, %65 ]
  %18 = phi i32 [ 0, %4 ], [ %66, %65 ]
  store i32 %17, ptr %2, align 4, !tbaa !68
  store i32 %18, ptr %3, align 4, !tbaa !68
  %19 = load i32, ptr %2, align 4, !tbaa !68
  %20 = add nsw i32 %19, %18
  ret i32 %20

21:                                               ; preds = %65, %8
  %22 = phi i64 [ 0, %8 ], [ %69, %65 ]
  %23 = phi i32 [ 0, %8 ], [ %68, %65 ]
  %24 = phi i32 [ 0, %8 ], [ %66, %65 ]
  %25 = phi i32 [ 0, %8 ], [ %67, %65 ]
  %26 = getelementptr inbounds i32, ptr %9, i64 %22
  %27 = load i32, ptr %26, align 4, !tbaa !68
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %55

29:                                               ; preds = %21
  %30 = getelementptr inbounds i32, ptr %11, i64 %22
  %31 = load i32, ptr %30, align 4, !tbaa !68
  %32 = icmp eq i32 %31, 1
  %33 = getelementptr inbounds i32, ptr %13, i64 %22
  %34 = load i32, ptr %33, align 4, !tbaa !68
  %35 = getelementptr inbounds i32, ptr %15, i64 %22
  %36 = load i32, ptr %35, align 4, !tbaa !68
  br i1 %32, label %37, label %45

37:                                               ; preds = %29
  %38 = and i32 %34, 1
  %39 = icmp ne i32 %38, 0
  %40 = and i32 %36, 1
  %41 = icmp ne i32 %40, 0
  %42 = select i1 %39, i1 true, i1 %41
  %43 = sext i1 %42 to i32
  %44 = add nsw i32 %24, %43
  br label %65

45:                                               ; preds = %29
  %46 = and i32 %34, -2147483647
  %47 = icmp ne i32 %46, 1
  %48 = and i32 %36, -2147483647
  %49 = icmp ne i32 %48, 1
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %65

51:                                               ; preds = %45
  %52 = or i32 %36, %34
  %53 = and i32 %52, 1
  %54 = sub i32 %24, %53
  br label %65

55:                                               ; preds = %21
  %56 = icmp eq i32 %27, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds i32, ptr %11, i64 %22
  %59 = load i32, ptr %58, align 4, !tbaa !68
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  %62 = add nsw i32 %25, 3
  br label %65

63:                                               ; preds = %57
  %64 = add nsw i32 %25, 1
  br label %65

65:                                               ; preds = %63, %61, %55, %51, %45, %37
  %66 = phi i32 [ %24, %61 ], [ %24, %63 ], [ %24, %55 ], [ %54, %51 ], [ %44, %37 ], [ %24, %45 ]
  %67 = phi i32 [ %62, %61 ], [ %64, %63 ], [ %25, %55 ], [ %25, %51 ], [ %25, %37 ], [ %25, %45 ]
  %68 = add i32 %23, 1
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %6, %69
  br i1 %70, label %21, label %16, !llvm.loop !715
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: readwrite) uwtable
define internal void @_ZN4Mesh10get_boundsERiS0_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %1, ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %2) #3 align 2 {
  store i32 0, ptr %1, align 4, !tbaa !68
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %5 = load i64, ptr %4, align 8, !tbaa !543
  %6 = trunc i64 %5 to i32
  store i32 %6, ptr %2, align 4, !tbaa !68
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN4Mesh9terminateEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) #13 align 2 {
  %2 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %4 = load ptr, ptr %3, align 8, !tbaa !637
  %5 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %4) #56
  %6 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %7 = load ptr, ptr %6, align 8, !tbaa !638
  %8 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %7) #56
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %10 = load ptr, ptr %9, align 8, !tbaa !639
  %11 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %10) #56
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %13 = load ptr, ptr %12, align 8, !tbaa !682
  %14 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %13) #56
  %15 = load i8, ptr @neighbor_remap, align 1, !tbaa !540, !range !130, !noundef !131
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %19 = load ptr, ptr %18, align 8, !tbaa !684
  %20 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %19) #56
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %22 = load ptr, ptr %21, align 8, !tbaa !685
  %23 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %22) #56
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %25 = load ptr, ptr %24, align 8, !tbaa !686
  %26 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %25) #56
  %27 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %28 = load ptr, ptr %27, align 8, !tbaa !687
  %29 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef %28) #56
  br label %30

30:                                               ; preds = %17, %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @_ZN4Mesh17calc_centerminmaxEv(ptr nocapture noundef nonnull align 8 dereferenceable(2288) %0) #50 align 2 {
  %2 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 54
  %3 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 56
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 58
  %5 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 55
  store <2 x double> <double 1.000000e+30, double -1.000000e+30>, ptr %2, align 8, !tbaa !171
  %6 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 57
  store <2 x double> <double 1.000000e+30, double -1.000000e+30>, ptr %3, align 8, !tbaa !171
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 59
  store <2 x double> <double 1.000000e+30, double -1.000000e+30>, ptr %4, align 8, !tbaa !171
  %8 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %9 = load i64, ptr %8, align 8, !tbaa !543
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %96, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %13 = load ptr, ptr %12, align 8, !tbaa !109
  %14 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %15 = load ptr, ptr %14, align 8, !tbaa !109
  br label %21

16:                                               ; preds = %38
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %18 = load ptr, ptr %17, align 8, !tbaa !109
  %19 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %20 = load ptr, ptr %19, align 8, !tbaa !109
  br label %52

21:                                               ; preds = %38, %11
  %22 = phi i64 [ 0, %11 ], [ %41, %38 ]
  %23 = phi i32 [ 0, %11 ], [ %40, %38 ]
  %24 = phi double [ 1.000000e+30, %11 ], [ %35, %38 ]
  %25 = phi double [ -1.000000e+30, %11 ], [ %39, %38 ]
  %26 = getelementptr inbounds double, ptr %13, i64 %22
  %27 = load double, ptr %26, align 8, !tbaa !171
  %28 = getelementptr inbounds double, ptr %15, i64 %22
  %29 = load double, ptr %28, align 8, !tbaa !171
  %30 = fmul double %29, 5.000000e-01
  %31 = fadd double %27, %30
  %32 = fcmp olt double %31, %24
  br i1 %32, label %33, label %34

33:                                               ; preds = %21
  store double %31, ptr %2, align 8, !tbaa !716
  br label %34

34:                                               ; preds = %33, %21
  %35 = phi double [ %31, %33 ], [ %24, %21 ]
  %36 = fcmp ogt double %31, %25
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  store double %31, ptr %5, align 8, !tbaa !717
  br label %38

38:                                               ; preds = %37, %34
  %39 = phi double [ %25, %34 ], [ %31, %37 ]
  %40 = add i32 %23, 1
  %41 = zext i32 %40 to i64
  %42 = icmp ugt i64 %9, %41
  br i1 %42, label %21, label %16, !llvm.loop !718

43:                                               ; preds = %69
  %44 = load i32, ptr %0, align 8, !tbaa !646
  %45 = icmp slt i32 %44, 3
  %46 = or i1 %45, %10
  br i1 %46, label %96, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 79
  %49 = load ptr, ptr %48, align 8, !tbaa !109
  %50 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 80
  %51 = load ptr, ptr %50, align 8, !tbaa !109
  br label %74

52:                                               ; preds = %69, %16
  %53 = phi i64 [ 0, %16 ], [ %72, %69 ]
  %54 = phi i32 [ 0, %16 ], [ %71, %69 ]
  %55 = phi double [ 1.000000e+30, %16 ], [ %66, %69 ]
  %56 = phi double [ -1.000000e+30, %16 ], [ %70, %69 ]
  %57 = getelementptr inbounds double, ptr %18, i64 %53
  %58 = load double, ptr %57, align 8, !tbaa !171
  %59 = getelementptr inbounds double, ptr %20, i64 %53
  %60 = load double, ptr %59, align 8, !tbaa !171
  %61 = fmul double %60, 5.000000e-01
  %62 = fadd double %58, %61
  %63 = fcmp olt double %62, %55
  br i1 %63, label %64, label %65

64:                                               ; preds = %52
  store double %62, ptr %3, align 8, !tbaa !719
  br label %65

65:                                               ; preds = %64, %52
  %66 = phi double [ %62, %64 ], [ %55, %52 ]
  %67 = fcmp ogt double %62, %56
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  store double %62, ptr %6, align 8, !tbaa !720
  br label %69

69:                                               ; preds = %68, %65
  %70 = phi double [ %56, %65 ], [ %62, %68 ]
  %71 = add i32 %54, 1
  %72 = zext i32 %71 to i64
  %73 = icmp ugt i64 %9, %72
  br i1 %73, label %52, label %43, !llvm.loop !721

74:                                               ; preds = %91, %47
  %75 = phi i64 [ 0, %47 ], [ %94, %91 ]
  %76 = phi i32 [ 0, %47 ], [ %93, %91 ]
  %77 = phi double [ 1.000000e+30, %47 ], [ %88, %91 ]
  %78 = phi double [ -1.000000e+30, %47 ], [ %92, %91 ]
  %79 = getelementptr inbounds double, ptr %49, i64 %75
  %80 = load double, ptr %79, align 8, !tbaa !171
  %81 = getelementptr inbounds double, ptr %51, i64 %75
  %82 = load double, ptr %81, align 8, !tbaa !171
  %83 = fmul double %82, 5.000000e-01
  %84 = fadd double %80, %83
  %85 = fcmp olt double %84, %77
  br i1 %85, label %86, label %87

86:                                               ; preds = %74
  store double %84, ptr %4, align 8, !tbaa !722
  br label %87

87:                                               ; preds = %86, %74
  %88 = phi double [ %84, %86 ], [ %77, %74 ]
  %89 = fcmp ogt double %84, %78
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  store double %84, ptr %7, align 8, !tbaa !723
  br label %91

91:                                               ; preds = %90, %87
  %92 = phi double [ %78, %87 ], [ %84, %90 ]
  %93 = add i32 %76, 1
  %94 = zext i32 %93 to i64
  %95 = icmp ugt i64 %9, %94
  br i1 %95, label %74, label %96, !llvm.loop !724

96:                                               ; preds = %91, %43, %1
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZN4Mesh14calc_neighborsEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %1) #6 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %struct.timeval, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = alloca %struct.timeval, align 8
  %6 = alloca %struct.TBounds, align 8
  %7 = alloca %"class.std::vector", align 8
  %8 = alloca %"class.std::ios_base::Init", align 1
  %9 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #57
  call void @cpu_timer_start(ptr noundef nonnull %3) #56
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 7
  %11 = load i8, ptr %10, align 8, !tbaa !666, !range !130, !noundef !131
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %700, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5, i64 2
  %15 = load i32, ptr %14, align 8, !tbaa !68
  %16 = add nsw i32 %15, 1
  store i32 %16, ptr %14, align 8, !tbaa !68
  %17 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %18 = load ptr, ptr %17, align 8, !tbaa !684
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = load i32, ptr @_ZZN4Mesh14calc_neighborsEiE9nlft_size, align 4, !tbaa !68
  br label %26

22:                                               ; preds = %13
  %23 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %24 = call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %23, ptr noundef nonnull %18) #56
  %25 = trunc i64 %24 to i32
  store i32 %25, ptr @_ZZN4Mesh14calc_neighborsEiE9nlft_size, align 4, !tbaa !68
  br label %26

26:                                               ; preds = %22, %20
  %27 = phi i32 [ %21, %20 ], [ %25, %22 ]
  %28 = icmp slt i32 %27, %1
  br i1 %28, label %29, label %55

29:                                               ; preds = %26
  %30 = load ptr, ptr %17, align 8, !tbaa !684
  %31 = icmp eq ptr %30, null
  br i1 %31, label %44, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %34 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %33, ptr noundef nonnull %30) #56
  store ptr %34, ptr %17, align 8, !tbaa !684
  %35 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %36 = load ptr, ptr %35, align 8, !tbaa !685
  %37 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %33, ptr noundef %36) #56
  store ptr %37, ptr %35, align 8, !tbaa !685
  %38 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %39 = load ptr, ptr %38, align 8, !tbaa !686
  %40 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %33, ptr noundef %39) #56
  store ptr %40, ptr %38, align 8, !tbaa !686
  %41 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %42 = load ptr, ptr %41, align 8, !tbaa !687
  %43 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %33, ptr noundef %42) #56
  store ptr %43, ptr %41, align 8, !tbaa !687
  br label %44

44:                                               ; preds = %32, %29
  %45 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %46 = sext i32 %1 to i64
  %47 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %45, i64 noundef %46, i64 noundef 4, ptr noundef nonnull @.str.42.164, i32 noundef 4) #56
  store ptr %47, ptr %17, align 8, !tbaa !684
  %48 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %45, i64 noundef %46, i64 noundef 4, ptr noundef nonnull @.str.43.165, i32 noundef 4) #56
  %49 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  store ptr %48, ptr %49, align 8, !tbaa !685
  %50 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %45, i64 noundef %46, i64 noundef 4, ptr noundef nonnull @.str.44.166, i32 noundef 4) #56
  %51 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  store ptr %50, ptr %51, align 8, !tbaa !686
  %52 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %45, i64 noundef %46, i64 noundef 4, ptr noundef nonnull @.str.45.167, i32 noundef 4) #56
  %53 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  store ptr %52, ptr %53, align 8, !tbaa !687
  %54 = load i32, ptr @_ZZN4Mesh14calc_neighborsEiE9nlft_size, align 4, !tbaa !68
  br label %55

55:                                               ; preds = %44, %26
  %56 = phi i32 [ %54, %44 ], [ %27, %26 ]
  %57 = icmp slt i32 %56, %1
  br i1 %57, label %58, label %80

58:                                               ; preds = %55
  %59 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %60 = load i64, ptr %59, align 8, !tbaa !543
  %61 = trunc i64 %60 to i32
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %80

63:                                               ; preds = %58
  %64 = load ptr, ptr %17, align 8, !tbaa !684
  %65 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %66 = load ptr, ptr %65, align 8, !tbaa !685
  %67 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %68 = load ptr, ptr %67, align 8, !tbaa !686
  %69 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %70 = load ptr, ptr %69, align 8, !tbaa !687
  %71 = and i64 %60, 4294967295
  br label %72

72:                                               ; preds = %72, %63
  %73 = phi i64 [ 0, %63 ], [ %78, %72 ]
  %74 = getelementptr inbounds i32, ptr %64, i64 %73
  store i32 -1, ptr %74, align 4, !tbaa !68
  %75 = getelementptr inbounds i32, ptr %66, i64 %73
  store i32 -1, ptr %75, align 4, !tbaa !68
  %76 = getelementptr inbounds i32, ptr %68, i64 %73
  store i32 -1, ptr %76, align 4, !tbaa !68
  %77 = getelementptr inbounds i32, ptr %70, i64 %73
  store i32 -1, ptr %77, align 4, !tbaa !68
  %78 = add nuw nsw i64 %73, 1
  %79 = icmp eq i64 %78, %71
  br i1 %79, label %80, label %72, !llvm.loop !725

80:                                               ; preds = %72, %58, %55
  %81 = load i32, ptr @calc_neighbor_type, align 4, !tbaa !68
  switch i32 %81, label %697 [
    i32 0, label %82
    i32 1, label %495
  ]

82:                                               ; preds = %80
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #57
  call void @cpu_timer_start(ptr noundef nonnull %4) #56
  %83 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 42
  %84 = load i32, ptr %83, align 8, !tbaa !662
  %85 = add nsw i32 %84, 1
  %86 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %87 = load i32, ptr %86, align 8, !tbaa !647
  %88 = shl i32 2, %87
  %89 = mul nsw i32 %88, %85
  %90 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 40
  %91 = load i32, ptr %90, align 8, !tbaa !661
  %92 = add nsw i32 %91, 1
  %93 = mul nsw i32 %92, %88
  %94 = call ptr @compact_hash_init(i32 noundef %1, i32 noundef %93, i32 noundef %89, i32 noundef 0) #56
  %95 = icmp sgt i32 %1, 0
  br i1 %95, label %96, label %104

96:                                               ; preds = %82
  %97 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %98 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %99 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %100 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %101 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %102 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %103 = zext i32 %1 to i64
  br label %127

104:                                              ; preds = %203, %82
  %105 = load i64, ptr %4, align 8, !tbaa.struct !560
  %106 = getelementptr inbounds i8, ptr %4, i64 8
  %107 = load i64, ptr %106, align 8, !tbaa.struct !561
  %108 = call double @cpu_timer_stop(i64 %105, i64 %107) #56
  %109 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 2
  %110 = load double, ptr %109, align 8, !tbaa !171
  %111 = fadd double %108, %110
  store double %111, ptr %109, align 8, !tbaa !171
  call void @cpu_timer_start(ptr noundef nonnull %4) #56
  br i1 %95, label %112, label %206

112:                                              ; preds = %104
  %113 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %114 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %115 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %116 = add nsw i32 %93, -1
  %117 = add nsw i32 %89, -1
  %118 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %119 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %120 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %121 = shl i32 %93, 1
  %122 = zext i32 %1 to i64
  %123 = load ptr, ptr %17, align 8, !tbaa !684
  %124 = load ptr, ptr %118, align 8, !tbaa !685
  %125 = load ptr, ptr %119, align 8, !tbaa !686
  %126 = load ptr, ptr %120, align 8, !tbaa !687
  br label %213

127:                                              ; preds = %203, %96
  %128 = phi i64 [ 0, %96 ], [ %204, %203 ]
  %129 = load ptr, ptr %97, align 8, !tbaa !639
  %130 = getelementptr inbounds i32, ptr %129, i64 %128
  %131 = load i32, ptr %130, align 4, !tbaa !68
  %132 = load ptr, ptr %17, align 8, !tbaa !684
  %133 = getelementptr inbounds i32, ptr %132, i64 %128
  %134 = load i32, ptr %133, align 4, !tbaa !68
  %135 = icmp eq i32 %134, -1
  br i1 %135, label %187, label %136

136:                                              ; preds = %127
  %137 = load ptr, ptr %98, align 8, !tbaa !685
  %138 = getelementptr inbounds i32, ptr %137, i64 %128
  %139 = load i32, ptr %138, align 4, !tbaa !68
  %140 = icmp eq i32 %139, -1
  br i1 %140, label %187, label %141

141:                                              ; preds = %136
  %142 = load ptr, ptr %99, align 8, !tbaa !686
  %143 = getelementptr inbounds i32, ptr %142, i64 %128
  %144 = load i32, ptr %143, align 4, !tbaa !68
  %145 = icmp eq i32 %144, -1
  br i1 %145, label %187, label %146

146:                                              ; preds = %141
  %147 = load ptr, ptr %100, align 8, !tbaa !687
  %148 = getelementptr inbounds i32, ptr %147, i64 %128
  %149 = load i32, ptr %148, align 4, !tbaa !68
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %187, label %151

151:                                              ; preds = %146
  %152 = sext i32 %134 to i64
  %153 = getelementptr inbounds i32, ptr %129, i64 %152
  %154 = load i32, ptr %153, align 4, !tbaa !68
  %155 = icmp sgt i32 %154, %131
  br i1 %155, label %156, label %160

156:                                              ; preds = %151
  %157 = getelementptr inbounds i32, ptr %147, i64 %152
  %158 = load i32, ptr %157, align 4, !tbaa !68
  %159 = icmp eq i32 %158, -1
  br i1 %159, label %187, label %160

160:                                              ; preds = %156, %151
  %161 = sext i32 %139 to i64
  %162 = getelementptr inbounds i32, ptr %129, i64 %161
  %163 = load i32, ptr %162, align 4, !tbaa !68
  %164 = icmp sgt i32 %163, %131
  br i1 %164, label %165, label %169

165:                                              ; preds = %160
  %166 = getelementptr inbounds i32, ptr %147, i64 %161
  %167 = load i32, ptr %166, align 4, !tbaa !68
  %168 = icmp eq i32 %167, -1
  br i1 %168, label %187, label %169

169:                                              ; preds = %165, %160
  %170 = sext i32 %144 to i64
  %171 = getelementptr inbounds i32, ptr %129, i64 %170
  %172 = load i32, ptr %171, align 4, !tbaa !68
  %173 = icmp sgt i32 %172, %131
  br i1 %173, label %174, label %178

174:                                              ; preds = %169
  %175 = getelementptr inbounds i32, ptr %137, i64 %170
  %176 = load i32, ptr %175, align 4, !tbaa !68
  %177 = icmp eq i32 %176, -1
  br i1 %177, label %187, label %178

178:                                              ; preds = %174, %169
  %179 = sext i32 %149 to i64
  %180 = getelementptr inbounds i32, ptr %129, i64 %179
  %181 = load i32, ptr %180, align 4, !tbaa !68
  %182 = icmp sgt i32 %181, %131
  br i1 %182, label %183, label %203

183:                                              ; preds = %178
  %184 = getelementptr inbounds i32, ptr %137, i64 %179
  %185 = load i32, ptr %184, align 4, !tbaa !68
  %186 = icmp eq i32 %185, -1
  br i1 %186, label %187, label %203

187:                                              ; preds = %183, %174, %165, %156, %146, %141, %136, %127
  %188 = load i32, ptr %86, align 8, !tbaa !647
  %189 = sub nsw i32 %188, %131
  %190 = shl i32 2, %189
  %191 = load ptr, ptr %101, align 8, !tbaa !637
  %192 = getelementptr inbounds i32, ptr %191, i64 %128
  %193 = load i32, ptr %192, align 4, !tbaa !68
  %194 = load ptr, ptr %102, align 8, !tbaa !638
  %195 = getelementptr inbounds i32, ptr %194, i64 %128
  %196 = load i32, ptr %195, align 4, !tbaa !68
  %197 = load ptr, ptr @write_hash, align 8, !tbaa !29
  %198 = mul i32 %196, %93
  %199 = add i32 %198, %193
  %200 = mul i32 %199, %190
  %201 = sext i32 %200 to i64
  %202 = trunc i64 %128 to i32
  call void %197(i32 noundef %202, i64 noundef %201, ptr noundef %94) #56
  br label %203

203:                                              ; preds = %187, %183, %178
  %204 = add nuw nsw i64 %128, 1
  %205 = icmp eq i64 %204, %103
  br i1 %205, label %104, label %127, !llvm.loop !726

206:                                              ; preds = %480, %104
  call void @write_hash_collision_report() #56
  call void @read_hash_collision_report() #56
  call void @compact_hash_delete(ptr noundef %94) #56
  %207 = load i64, ptr %4, align 8, !tbaa.struct !560
  %208 = load i64, ptr %106, align 8, !tbaa.struct !561
  %209 = call double @cpu_timer_stop(i64 %207, i64 %208) #56
  %210 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 3
  %211 = load double, ptr %210, align 8, !tbaa !171
  %212 = fadd double %209, %211
  store double %212, ptr %210, align 8, !tbaa !171
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #57
  br label %697

213:                                              ; preds = %480, %112
  %214 = phi ptr [ %126, %112 ], [ %491, %480 ]
  %215 = phi ptr [ %125, %112 ], [ %489, %480 ]
  %216 = phi ptr [ %124, %112 ], [ %487, %480 ]
  %217 = phi ptr [ %123, %112 ], [ %485, %480 ]
  %218 = phi i64 [ 0, %112 ], [ %493, %480 ]
  %219 = load ptr, ptr %113, align 8, !tbaa !637
  %220 = getelementptr inbounds i32, ptr %219, i64 %218
  %221 = load i32, ptr %220, align 4, !tbaa !68
  %222 = load ptr, ptr %114, align 8, !tbaa !638
  %223 = getelementptr inbounds i32, ptr %222, i64 %218
  %224 = load i32, ptr %223, align 4, !tbaa !68
  %225 = load ptr, ptr %115, align 8, !tbaa !639
  %226 = getelementptr inbounds i32, ptr %225, i64 %218
  %227 = load i32, ptr %226, align 4, !tbaa !68
  %228 = load i32, ptr %86, align 8
  %229 = sub nsw i32 %228, %227
  %230 = shl i32 2, %229
  %231 = mul nsw i32 %230, %221
  %232 = add nsw i32 %221, -1
  %233 = mul nsw i32 %230, %232
  %234 = call i32 @llvm.smax.i32(i32 %233, i32 0)
  %235 = add nsw i32 %221, 1
  %236 = mul nsw i32 %230, %235
  %237 = call i32 @llvm.smin.i32(i32 %116, i32 %236)
  %238 = mul nsw i32 %230, %224
  %239 = add nsw i32 %224, -1
  %240 = mul nsw i32 %230, %239
  %241 = call i32 @llvm.smax.i32(i32 %240, i32 0)
  %242 = add nsw i32 %224, 1
  %243 = mul nsw i32 %230, %242
  %244 = call i32 @llvm.smin.i32(i32 %117, i32 %243)
  %245 = getelementptr inbounds i32, ptr %217, i64 %218
  %246 = load i32, ptr %245, align 4, !tbaa !68
  %247 = getelementptr inbounds i32, ptr %216, i64 %218
  %248 = load i32, ptr %247, align 4, !tbaa !68
  %249 = getelementptr inbounds i32, ptr %215, i64 %218
  %250 = load i32, ptr %249, align 4, !tbaa !68
  %251 = getelementptr inbounds i32, ptr %214, i64 %218
  %252 = load i32, ptr %251, align 4, !tbaa !68
  %253 = icmp slt i32 %246, 0
  %254 = shl i32 2, %228
  %255 = icmp slt i32 %231, %254
  %256 = select i1 %253, i1 %255, i1 false
  %257 = trunc i64 %218 to i32
  %258 = select i1 %256, i32 %257, i32 %246
  %259 = icmp slt i32 %250, 0
  %260 = icmp slt i32 %238, %254
  %261 = select i1 %259, i1 %260, i1 false
  %262 = select i1 %261, i32 %257, i32 %250
  %263 = icmp slt i32 %248, 0
  %264 = load i32, ptr %90, align 8
  %265 = mul nsw i32 %264, %254
  %266 = icmp sge i32 %231, %265
  %267 = select i1 %263, i1 %266, i1 false
  %268 = select i1 %267, i32 %257, i32 %248
  %269 = icmp slt i32 %252, 0
  %270 = load i32, ptr %83, align 8
  %271 = mul nsw i32 %270, %254
  %272 = icmp sge i32 %238, %271
  %273 = select i1 %269, i1 %272, i1 false
  %274 = select i1 %273, i32 %257, i32 %252
  %275 = icmp slt i32 %258, 0
  %276 = icmp eq i32 %231, %254
  %277 = select i1 %275, i1 %276, i1 false
  %278 = mul nsw i32 %270, %231
  %279 = icmp sge i32 %238, %278
  %280 = select i1 %260, i1 true, i1 %279
  %281 = select i1 %277, i1 %280, i1 false
  %282 = select i1 %281, i32 %257, i32 %258
  %283 = icmp slt i32 %262, 0
  %284 = icmp eq i32 %238, %254
  %285 = select i1 %283, i1 %284, i1 false
  %286 = mul nsw i32 %264, %238
  %287 = icmp sge i32 %231, %286
  %288 = select i1 %255, i1 true, i1 %287
  %289 = select i1 %285, i1 %288, i1 false
  %290 = select i1 %289, i32 %257, i32 %262
  %291 = icmp slt i32 %268, 0
  %292 = icmp eq i32 %237, %265
  %293 = select i1 %291, i1 %292, i1 false
  %294 = select i1 %260, i1 true, i1 %272
  %295 = select i1 %293, i1 %294, i1 false
  %296 = select i1 %295, i32 %257, i32 %268
  %297 = icmp slt i32 %274, 0
  %298 = icmp eq i32 %244, %271
  %299 = select i1 %297, i1 %298, i1 false
  %300 = select i1 %255, i1 true, i1 %266
  %301 = select i1 %299, i1 %300, i1 false
  %302 = select i1 %301, i32 %257, i32 %274
  %303 = icmp eq i32 %227, %228
  br i1 %303, label %327, label %304

304:                                              ; preds = %213
  %305 = sub nsw i32 %238, %241
  %306 = ashr exact i32 %305, 1
  %307 = sub i32 %238, %306
  %308 = icmp slt i32 %282, 0
  br i1 %308, label %309, label %318

309:                                              ; preds = %304
  %310 = sub nsw i32 %231, %234
  %311 = ashr exact i32 %310, 1
  %312 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %313 = mul nsw i32 %238, %93
  %314 = add i32 %313, %231
  %315 = sub i32 %314, %311
  %316 = sext i32 %315 to i64
  %317 = call i32 %312(i64 noundef %316, ptr noundef %94) #56
  br label %318

318:                                              ; preds = %309, %304
  %319 = phi i32 [ %317, %309 ], [ %282, %304 ]
  %320 = icmp slt i32 %290, 0
  br i1 %320, label %321, label %327

321:                                              ; preds = %318
  %322 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %323 = mul nsw i32 %307, %93
  %324 = add nsw i32 %323, %231
  %325 = sext i32 %324 to i64
  %326 = call i32 %322(i64 noundef %325, ptr noundef %94) #56
  br label %327

327:                                              ; preds = %321, %318, %213
  %328 = phi i32 [ %290, %213 ], [ %326, %321 ], [ %290, %318 ]
  %329 = phi i32 [ %282, %213 ], [ %319, %321 ], [ %319, %318 ]
  %330 = icmp slt i32 %329, 0
  br i1 %330, label %331, label %337

331:                                              ; preds = %327
  %332 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %333 = mul nsw i32 %238, %93
  %334 = add nsw i32 %333, %234
  %335 = sext i32 %334 to i64
  %336 = call i32 %332(i64 noundef %335, ptr noundef %94) #56
  br label %337

337:                                              ; preds = %331, %327
  %338 = phi i32 [ %336, %331 ], [ %329, %327 ]
  %339 = icmp slt i32 %296, 0
  br i1 %339, label %340, label %346

340:                                              ; preds = %337
  %341 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %342 = mul nsw i32 %238, %93
  %343 = add nsw i32 %342, %237
  %344 = sext i32 %343 to i64
  %345 = call i32 %341(i64 noundef %344, ptr noundef %94) #56
  br label %346

346:                                              ; preds = %340, %337
  %347 = phi i32 [ %345, %340 ], [ %296, %337 ]
  %348 = icmp slt i32 %328, 0
  br i1 %348, label %349, label %355

349:                                              ; preds = %346
  %350 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %351 = mul nsw i32 %241, %93
  %352 = add nsw i32 %351, %231
  %353 = sext i32 %352 to i64
  %354 = call i32 %350(i64 noundef %353, ptr noundef %94) #56
  br label %355

355:                                              ; preds = %349, %346
  %356 = phi i32 [ %354, %349 ], [ %328, %346 ]
  %357 = icmp slt i32 %302, 0
  br i1 %357, label %358, label %364

358:                                              ; preds = %355
  %359 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %360 = mul nsw i32 %244, %93
  %361 = add nsw i32 %360, %231
  %362 = sext i32 %361 to i64
  %363 = call i32 %359(i64 noundef %362, ptr noundef %94) #56
  br label %364

364:                                              ; preds = %358, %355
  %365 = phi i32 [ %363, %358 ], [ %302, %355 ]
  %366 = load i32, ptr %86, align 8, !tbaa !647
  %367 = icmp eq i32 %227, %366
  br i1 %367, label %425, label %368

368:                                              ; preds = %364
  %369 = shl i32 2, %366
  %370 = icmp slt i32 %238, %369
  br i1 %370, label %371, label %395

371:                                              ; preds = %368
  %372 = icmp slt i32 %347, 0
  br i1 %372, label %373, label %381

373:                                              ; preds = %371
  %374 = add nsw i32 %244, %238
  %375 = sdiv i32 %374, 2
  %376 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %377 = mul nsw i32 %375, %93
  %378 = add nsw i32 %377, %237
  %379 = sext i32 %378 to i64
  %380 = call i32 %376(i64 noundef %379, ptr noundef %94) #56
  br label %381

381:                                              ; preds = %373, %371
  %382 = phi i32 [ %380, %373 ], [ %347, %371 ]
  %383 = icmp slt i32 %338, 0
  br i1 %383, label %384, label %395

384:                                              ; preds = %381
  %385 = sub nsw i32 %231, %234
  %386 = ashr exact i32 %385, 1
  %387 = sub i32 %231, %386
  %388 = add nsw i32 %244, %238
  %389 = sdiv i32 %388, 2
  %390 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %391 = mul nsw i32 %389, %93
  %392 = add nsw i32 %387, %391
  %393 = sext i32 %392 to i64
  %394 = call i32 %390(i64 noundef %393, ptr noundef %94) #56
  br label %395

395:                                              ; preds = %384, %381, %368
  %396 = phi i32 [ %382, %384 ], [ %382, %381 ], [ %347, %368 ]
  %397 = phi i32 [ %394, %384 ], [ %338, %381 ], [ %338, %368 ]
  %398 = load i32, ptr %86, align 8, !tbaa !647
  %399 = shl i32 2, %398
  %400 = icmp slt i32 %231, %399
  br i1 %400, label %401, label %425

401:                                              ; preds = %395
  %402 = icmp slt i32 %365, 0
  br i1 %402, label %403, label %411

403:                                              ; preds = %401
  %404 = add nsw i32 %237, %231
  %405 = sdiv i32 %404, 2
  %406 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %407 = mul nsw i32 %244, %93
  %408 = add nsw i32 %405, %407
  %409 = sext i32 %408 to i64
  %410 = call i32 %406(i64 noundef %409, ptr noundef %94) #56
  br label %411

411:                                              ; preds = %403, %401
  %412 = phi i32 [ %410, %403 ], [ %365, %401 ]
  %413 = icmp slt i32 %356, 0
  br i1 %413, label %414, label %425

414:                                              ; preds = %411
  %415 = add nsw i32 %237, %231
  %416 = sdiv i32 %415, 2
  %417 = sub nsw i32 %238, %241
  %418 = ashr exact i32 %417, 1
  %419 = sub i32 %238, %418
  %420 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %421 = mul nsw i32 %419, %93
  %422 = add nsw i32 %421, %416
  %423 = sext i32 %422 to i64
  %424 = call i32 %420(i64 noundef %423, ptr noundef %94) #56
  br label %425

425:                                              ; preds = %414, %411, %395, %364
  %426 = phi i32 [ %412, %414 ], [ %412, %411 ], [ %365, %395 ], [ %365, %364 ]
  %427 = phi i32 [ %424, %414 ], [ %356, %411 ], [ %356, %395 ], [ %356, %364 ]
  %428 = phi i32 [ %396, %414 ], [ %396, %411 ], [ %396, %395 ], [ %347, %364 ]
  %429 = phi i32 [ %397, %414 ], [ %397, %411 ], [ %397, %395 ], [ %338, %364 ]
  %430 = icmp eq i32 %227, 0
  br i1 %430, label %480, label %431

431:                                              ; preds = %425
  %432 = icmp slt i32 %429, 0
  br i1 %432, label %433, label %443

433:                                              ; preds = %431
  %434 = sdiv i32 %224, 2
  %435 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %436 = mul i32 %434, %93
  %437 = mul i32 %436, %230
  %438 = add i32 %234, %437
  %439 = shl i32 %438, 1
  %440 = sub i32 %439, %231
  %441 = sext i32 %440 to i64
  %442 = call i32 %435(i64 noundef %441, ptr noundef %94) #56
  br label %443

443:                                              ; preds = %433, %431
  %444 = phi i32 [ %442, %433 ], [ %429, %431 ]
  %445 = icmp slt i32 %428, 0
  br i1 %445, label %446, label %454

446:                                              ; preds = %443
  %447 = sdiv i32 %224, 2
  %448 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %449 = mul i32 %121, %447
  %450 = mul i32 %449, %230
  %451 = add nsw i32 %450, %237
  %452 = sext i32 %451 to i64
  %453 = call i32 %448(i64 noundef %452, ptr noundef %94) #56
  br label %454

454:                                              ; preds = %446, %443
  %455 = phi i32 [ %453, %446 ], [ %428, %443 ]
  %456 = icmp slt i32 %427, 0
  br i1 %456, label %457, label %468

457:                                              ; preds = %454
  %458 = shl nuw i32 %241, 1
  %459 = sub i32 %458, %238
  %460 = sdiv i32 %221, 2
  %461 = shl nsw i32 %460, 1
  %462 = mul nsw i32 %461, %230
  %463 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %464 = mul nsw i32 %459, %93
  %465 = add nsw i32 %464, %462
  %466 = sext i32 %465 to i64
  %467 = call i32 %463(i64 noundef %466, ptr noundef %94) #56
  br label %468

468:                                              ; preds = %457, %454
  %469 = phi i32 [ %467, %457 ], [ %427, %454 ]
  %470 = icmp slt i32 %426, 0
  br i1 %470, label %471, label %480

471:                                              ; preds = %468
  %472 = sdiv i32 %221, 2
  %473 = shl nsw i32 %472, 1
  %474 = mul nsw i32 %473, %230
  %475 = load ptr, ptr @read_hash, align 8, !tbaa !29
  %476 = mul nsw i32 %244, %93
  %477 = add nsw i32 %476, %474
  %478 = sext i32 %477 to i64
  %479 = call i32 %475(i64 noundef %478, ptr noundef %94) #56
  br label %480

480:                                              ; preds = %471, %468, %425
  %481 = phi i32 [ %479, %471 ], [ %426, %468 ], [ %426, %425 ]
  %482 = phi i32 [ %469, %471 ], [ %469, %468 ], [ %427, %425 ]
  %483 = phi i32 [ %455, %471 ], [ %455, %468 ], [ %428, %425 ]
  %484 = phi i32 [ %444, %471 ], [ %444, %468 ], [ %429, %425 ]
  %485 = load ptr, ptr %17, align 8, !tbaa !684
  %486 = getelementptr inbounds i32, ptr %485, i64 %218
  store i32 %484, ptr %486, align 4, !tbaa !68
  %487 = load ptr, ptr %118, align 8, !tbaa !685
  %488 = getelementptr inbounds i32, ptr %487, i64 %218
  store i32 %483, ptr %488, align 4, !tbaa !68
  %489 = load ptr, ptr %119, align 8, !tbaa !686
  %490 = getelementptr inbounds i32, ptr %489, i64 %218
  store i32 %482, ptr %490, align 4, !tbaa !68
  %491 = load ptr, ptr %120, align 8, !tbaa !687
  %492 = getelementptr inbounds i32, ptr %491, i64 %218
  store i32 %481, ptr %492, align 4, !tbaa !68
  %493 = add nuw nsw i64 %218, 1
  %494 = icmp eq i64 %493, %122
  br i1 %494, label %206, label %213, !llvm.loop !727

495:                                              ; preds = %80
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #57
  call void @cpu_timer_start(ptr noundef nonnull %5) #56
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #57
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #57
  %496 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %497 = load i32, ptr %496, align 8, !tbaa !647
  %498 = mul nsw i32 %497, %497
  %499 = shl i32 2, %498
  %500 = sext i32 %499 to i64
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %8) #57
  call void @_ZNSt6vectorIiSaIiEEC2EmRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %7, i64 noundef %500, ptr noundef nonnull align 1 dereferenceable(1) %8) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %8) #57
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #57
  %501 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 38
  store i32 0, ptr %501, align 8, !tbaa !664
  invoke void @_ZN4Mesh24calc_spatial_coordinatesEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef 0) #56
          to label %502 unwind label %529

502:                                              ; preds = %495
  invoke void @_ZN4Mesh12kdtree_setupEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) #56
          to label %503 unwind label %529

503:                                              ; preds = %502
  %504 = load i64, ptr %5, align 8, !tbaa.struct !560
  %505 = getelementptr inbounds i8, ptr %5, i64 8
  %506 = load i64, ptr %505, align 8, !tbaa.struct !561
  %507 = invoke double @cpu_timer_stop(i64 %504, i64 %506) #56
          to label %508 unwind label %529

508:                                              ; preds = %503
  %509 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 17
  %510 = load double, ptr %509, align 8, !tbaa !171
  %511 = fadd double %507, %510
  store double %511, ptr %509, align 8, !tbaa !171
  invoke void @cpu_timer_start(ptr noundef nonnull %5) #56
          to label %512 unwind label %529

512:                                              ; preds = %508
  %513 = icmp sgt i32 %1, 0
  br i1 %513, label %514, label %527

514:                                              ; preds = %512
  %515 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %516 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %517 = getelementptr inbounds %struct.TBounds, ptr %6, i64 0, i32 1
  %518 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %519 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %520 = getelementptr inbounds %struct.TVector, ptr %6, i64 0, i32 1
  %521 = getelementptr inbounds %struct.TBounds, ptr %6, i64 0, i32 1, i32 1
  %522 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 24
  %523 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %524 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %525 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %526 = zext i32 %1 to i64
  br label %531

527:                                              ; preds = %676, %512
  %528 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 24
  invoke void @KDTree_Destroy(ptr noundef nonnull %528) #56
          to label %679 unwind label %529

529:                                              ; preds = %679, %527, %508, %503, %502, %495
  %530 = landingpad { ptr, i32 }
          cleanup
  br label %691

531:                                              ; preds = %676, %514
  %532 = phi i64 [ 0, %514 ], [ %677, %676 ]
  %533 = load ptr, ptr %17, align 8, !tbaa !684
  %534 = getelementptr inbounds i32, ptr %533, i64 %532
  %535 = trunc i64 %532 to i32
  store i32 %535, ptr %534, align 4, !tbaa !68
  %536 = load ptr, ptr %515, align 8, !tbaa !109
  %537 = getelementptr inbounds double, ptr %536, i64 %532
  %538 = load double, ptr %537, align 8, !tbaa !171
  %539 = load ptr, ptr %516, align 8, !tbaa !109
  %540 = getelementptr inbounds double, ptr %539, i64 %532
  %541 = load double, ptr %540, align 8, !tbaa !171
  %542 = fmul double %541, 2.500000e-01
  %543 = fsub double %538, %542
  store double %543, ptr %6, align 8, !tbaa !692
  %544 = load double, ptr %537, align 8, !tbaa !171
  %545 = load double, ptr %540, align 8, !tbaa !171
  %546 = fmul double %545, 2.500000e-01
  %547 = fsub double %544, %546
  store double %547, ptr %517, align 8, !tbaa !693
  %548 = load ptr, ptr %518, align 8, !tbaa !109
  %549 = getelementptr inbounds double, ptr %548, i64 %532
  %550 = load double, ptr %549, align 8, !tbaa !171
  %551 = load ptr, ptr %519, align 8, !tbaa !109
  %552 = getelementptr inbounds double, ptr %551, i64 %532
  %553 = load double, ptr %552, align 8, !tbaa !171
  %554 = fmul double %553, 2.500000e-01
  %555 = fadd double %550, %554
  store double %555, ptr %520, align 8, !tbaa !694
  %556 = load double, ptr %549, align 8, !tbaa !171
  %557 = load double, ptr %552, align 8, !tbaa !171
  %558 = fmul double %557, 2.500000e-01
  %559 = fadd double %556, %558
  store double %559, ptr %521, align 8, !tbaa !695
  %560 = load ptr, ptr %7, align 8, !tbaa !65
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %522, ptr noundef nonnull %9, ptr noundef nonnull %560, ptr noundef nonnull %6) #56
          to label %561 unwind label %569

561:                                              ; preds = %531
  %562 = load i32, ptr %9, align 4, !tbaa !68
  %563 = icmp eq i32 %562, 1
  %564 = load ptr, ptr %7, align 8, !tbaa !65
  br i1 %563, label %565, label %571

565:                                              ; preds = %561
  %566 = load i32, ptr %564, align 4, !tbaa !68
  %567 = load ptr, ptr %17, align 8, !tbaa !684
  %568 = getelementptr inbounds i32, ptr %567, i64 %532
  store i32 %566, ptr %568, align 4, !tbaa !68
  br label %571

569:                                              ; preds = %641, %606, %571, %531
  %570 = landingpad { ptr, i32 }
          cleanup
  br label %691

571:                                              ; preds = %565, %561
  %572 = load ptr, ptr %523, align 8, !tbaa !685
  %573 = getelementptr inbounds i32, ptr %572, i64 %532
  store i32 %535, ptr %573, align 4, !tbaa !68
  %574 = load ptr, ptr %515, align 8, !tbaa !109
  %575 = getelementptr inbounds double, ptr %574, i64 %532
  %576 = load double, ptr %575, align 8, !tbaa !171
  %577 = load ptr, ptr %516, align 8, !tbaa !109
  %578 = getelementptr inbounds double, ptr %577, i64 %532
  %579 = load double, ptr %578, align 8, !tbaa !171
  %580 = fmul double %579, 1.250000e+00
  %581 = fadd double %576, %580
  store double %581, ptr %6, align 8, !tbaa !692
  %582 = load double, ptr %575, align 8, !tbaa !171
  %583 = load double, ptr %578, align 8, !tbaa !171
  %584 = fmul double %583, 1.250000e+00
  %585 = fadd double %582, %584
  store double %585, ptr %517, align 8, !tbaa !693
  %586 = load ptr, ptr %518, align 8, !tbaa !109
  %587 = getelementptr inbounds double, ptr %586, i64 %532
  %588 = load double, ptr %587, align 8, !tbaa !171
  %589 = load ptr, ptr %519, align 8, !tbaa !109
  %590 = getelementptr inbounds double, ptr %589, i64 %532
  %591 = load double, ptr %590, align 8, !tbaa !171
  %592 = fmul double %591, 2.500000e-01
  %593 = fadd double %588, %592
  store double %593, ptr %520, align 8, !tbaa !694
  %594 = load double, ptr %587, align 8, !tbaa !171
  %595 = load double, ptr %590, align 8, !tbaa !171
  %596 = fmul double %595, 2.500000e-01
  %597 = fadd double %594, %596
  store double %597, ptr %521, align 8, !tbaa !695
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %522, ptr noundef nonnull %9, ptr noundef nonnull %564, ptr noundef nonnull %6) #56
          to label %598 unwind label %569

598:                                              ; preds = %571
  %599 = load i32, ptr %9, align 4, !tbaa !68
  %600 = icmp eq i32 %599, 1
  %601 = load ptr, ptr %7, align 8, !tbaa !65
  br i1 %600, label %602, label %606

602:                                              ; preds = %598
  %603 = load i32, ptr %601, align 4, !tbaa !68
  %604 = load ptr, ptr %523, align 8, !tbaa !685
  %605 = getelementptr inbounds i32, ptr %604, i64 %532
  store i32 %603, ptr %605, align 4, !tbaa !68
  br label %606

606:                                              ; preds = %602, %598
  %607 = load ptr, ptr %524, align 8, !tbaa !686
  %608 = getelementptr inbounds i32, ptr %607, i64 %532
  store i32 %535, ptr %608, align 4, !tbaa !68
  %609 = load ptr, ptr %515, align 8, !tbaa !109
  %610 = getelementptr inbounds double, ptr %609, i64 %532
  %611 = load double, ptr %610, align 8, !tbaa !171
  %612 = load ptr, ptr %516, align 8, !tbaa !109
  %613 = getelementptr inbounds double, ptr %612, i64 %532
  %614 = load double, ptr %613, align 8, !tbaa !171
  %615 = fmul double %614, 2.500000e-01
  %616 = fadd double %611, %615
  store double %616, ptr %6, align 8, !tbaa !692
  %617 = load double, ptr %610, align 8, !tbaa !171
  %618 = load double, ptr %613, align 8, !tbaa !171
  %619 = fmul double %618, 2.500000e-01
  %620 = fadd double %617, %619
  store double %620, ptr %517, align 8, !tbaa !693
  %621 = load ptr, ptr %518, align 8, !tbaa !109
  %622 = getelementptr inbounds double, ptr %621, i64 %532
  %623 = load double, ptr %622, align 8, !tbaa !171
  %624 = load ptr, ptr %519, align 8, !tbaa !109
  %625 = getelementptr inbounds double, ptr %624, i64 %532
  %626 = load double, ptr %625, align 8, !tbaa !171
  %627 = fmul double %626, 2.500000e-01
  %628 = fsub double %623, %627
  store double %628, ptr %520, align 8, !tbaa !694
  %629 = load double, ptr %622, align 8, !tbaa !171
  %630 = load double, ptr %625, align 8, !tbaa !171
  %631 = fmul double %630, 2.500000e-01
  %632 = fsub double %629, %631
  store double %632, ptr %521, align 8, !tbaa !695
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %522, ptr noundef nonnull %9, ptr noundef nonnull %601, ptr noundef nonnull %6) #56
          to label %633 unwind label %569

633:                                              ; preds = %606
  %634 = load i32, ptr %9, align 4, !tbaa !68
  %635 = icmp eq i32 %634, 1
  %636 = load ptr, ptr %7, align 8, !tbaa !65
  br i1 %635, label %637, label %641

637:                                              ; preds = %633
  %638 = load i32, ptr %636, align 4, !tbaa !68
  %639 = load ptr, ptr %524, align 8, !tbaa !686
  %640 = getelementptr inbounds i32, ptr %639, i64 %532
  store i32 %638, ptr %640, align 4, !tbaa !68
  br label %641

641:                                              ; preds = %637, %633
  %642 = load ptr, ptr %525, align 8, !tbaa !687
  %643 = getelementptr inbounds i32, ptr %642, i64 %532
  store i32 %535, ptr %643, align 4, !tbaa !68
  %644 = load ptr, ptr %515, align 8, !tbaa !109
  %645 = getelementptr inbounds double, ptr %644, i64 %532
  %646 = load double, ptr %645, align 8, !tbaa !171
  %647 = load ptr, ptr %516, align 8, !tbaa !109
  %648 = getelementptr inbounds double, ptr %647, i64 %532
  %649 = load double, ptr %648, align 8, !tbaa !171
  %650 = fmul double %649, 2.500000e-01
  %651 = fadd double %646, %650
  store double %651, ptr %6, align 8, !tbaa !692
  %652 = load double, ptr %645, align 8, !tbaa !171
  %653 = load double, ptr %648, align 8, !tbaa !171
  %654 = fmul double %653, 2.500000e-01
  %655 = fadd double %652, %654
  store double %655, ptr %517, align 8, !tbaa !693
  %656 = load ptr, ptr %518, align 8, !tbaa !109
  %657 = getelementptr inbounds double, ptr %656, i64 %532
  %658 = load double, ptr %657, align 8, !tbaa !171
  %659 = load ptr, ptr %519, align 8, !tbaa !109
  %660 = getelementptr inbounds double, ptr %659, i64 %532
  %661 = load double, ptr %660, align 8, !tbaa !171
  %662 = fmul double %661, 1.250000e+00
  %663 = fadd double %658, %662
  store double %663, ptr %520, align 8, !tbaa !694
  %664 = load double, ptr %657, align 8, !tbaa !171
  %665 = load double, ptr %660, align 8, !tbaa !171
  %666 = fmul double %665, 1.250000e+00
  %667 = fadd double %664, %666
  store double %667, ptr %521, align 8, !tbaa !695
  invoke void @KDTree_QueryBoxIntersect(ptr noundef nonnull %522, ptr noundef nonnull %9, ptr noundef nonnull %636, ptr noundef nonnull %6) #56
          to label %668 unwind label %569

668:                                              ; preds = %641
  %669 = load i32, ptr %9, align 4, !tbaa !68
  %670 = icmp eq i32 %669, 1
  br i1 %670, label %671, label %676

671:                                              ; preds = %668
  %672 = load ptr, ptr %7, align 8, !tbaa !65
  %673 = load i32, ptr %672, align 4, !tbaa !68
  %674 = load ptr, ptr %525, align 8, !tbaa !687
  %675 = getelementptr inbounds i32, ptr %674, i64 %532
  store i32 %673, ptr %675, align 4, !tbaa !68
  br label %676

676:                                              ; preds = %671, %668
  %677 = add nuw nsw i64 %532, 1
  %678 = icmp eq i64 %677, %526
  br i1 %678, label %527, label %531, !llvm.loop !728

679:                                              ; preds = %527
  %680 = load i64, ptr %5, align 8, !tbaa.struct !560
  %681 = load i64, ptr %505, align 8, !tbaa.struct !561
  %682 = invoke double @cpu_timer_stop(i64 %680, i64 %681) #56
          to label %683 unwind label %529

683:                                              ; preds = %679
  %684 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 18
  %685 = load double, ptr %684, align 8, !tbaa !171
  %686 = fadd double %682, %685
  store double %686, ptr %684, align 8, !tbaa !171
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #57
  %687 = load ptr, ptr %7, align 8, !tbaa !65
  %688 = icmp eq ptr %687, null
  br i1 %688, label %690, label %689

689:                                              ; preds = %683
  call void @_ZdlPv(ptr noundef nonnull %687) #58
  br label %690

690:                                              ; preds = %689, %683
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #57
  br label %697

691:                                              ; preds = %569, %529
  %692 = phi { ptr, i32 } [ %570, %569 ], [ %530, %529 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #57
  %693 = load ptr, ptr %7, align 8, !tbaa !65
  %694 = icmp eq ptr %693, null
  br i1 %694, label %696, label %695

695:                                              ; preds = %691
  call void @_ZdlPv(ptr noundef nonnull %693) #58
  br label %696

696:                                              ; preds = %695, %691
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #57
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #57
  resume { ptr, i32 } %692

697:                                              ; preds = %690, %206, %80
  %698 = sext i32 %1 to i64
  %699 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  store i64 %698, ptr %699, align 8, !tbaa !652
  br label %700

700:                                              ; preds = %697, %2
  %701 = load i64, ptr %3, align 8, !tbaa.struct !560
  %702 = getelementptr inbounds i8, ptr %3, i64 8
  %703 = load i64, ptr %702, align 8, !tbaa.struct !561
  %704 = call double @cpu_timer_stop(i64 %701, i64 %703) #56
  %705 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 1
  %706 = load double, ptr %705, align 8, !tbaa !171
  %707 = fadd double %704, %706
  store double %707, ptr %705, align 8, !tbaa !171
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #57
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN4Mesh24print_calc_neighbor_typeEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0) #13 align 2 {
  %2 = load i32, ptr @calc_neighbor_type, align 4, !tbaa !68
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %17

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %6 = load i32, ptr %5, align 4, !tbaa !650
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %32

8:                                                ; preds = %4
  %9 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.148)
  %10 = load i32, ptr %5, align 4, !tbaa !650
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  %13 = load i32, ptr %12, align 8
  %14 = icmp eq i32 %13, 1
  %15 = select i1 %11, i1 %14, i1 false
  br i1 %15, label %16, label %32

16:                                               ; preds = %8
  tail call void @final_hash_collision_report() #56
  br label %32

17:                                               ; preds = %1
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %19 = load i64, ptr %18, align 8, !tbaa !543
  %20 = uitofp i64 %19 to double
  %21 = tail call double @log(double noundef %20) #59
  %22 = fptosi double %21 to i32
  %23 = sext i32 %22 to i64
  %24 = shl i64 %19, 2
  %25 = mul i64 %24, %23
  %26 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.47.177, i64 noundef %25) #56
  %27 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %28 = load i32, ptr %27, align 4, !tbaa !650
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %17
  %31 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.147)
  br label %32

32:                                               ; preds = %30, %17, %16, %8, %4
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(write)
declare double @log(double noundef) local_unnamed_addr #51

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN4Mesh17memory_reset_ptrsEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) #13 align 2 {
  %2 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %3 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.50.141) #56
  %4 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  store ptr %3, ptr %4, align 8, !tbaa !637
  %5 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.51.142) #56
  %6 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  store ptr %5, ptr %6, align 8, !tbaa !638
  %7 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.52.143) #56
  %8 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  store ptr %7, ptr %8, align 8, !tbaa !639
  %9 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.49.170) #56
  %10 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  store ptr %9, ptr %10, align 8, !tbaa !682
  %11 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.42.164) #56
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  store ptr %11, ptr %12, align 8, !tbaa !684
  %13 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.43.165) #56
  %14 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  store ptr %13, ptr %14, align 8, !tbaa !685
  %15 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.44.166) #56
  %16 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  store ptr %15, ptr %16, align 8, !tbaa !686
  %17 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull @.str.45.167) #56
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  store ptr %17, ptr %18, align 8, !tbaa !687
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZN4Mesh24calc_face_list_wbidirmapEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) #6 align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86
  %35 = load ptr, ptr %34, align 8, !tbaa !65
  %36 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86, i32 0, i32 0, i32 0, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !70
  %38 = icmp eq ptr %37, %35
  br i1 %38, label %40, label %39

39:                                               ; preds = %1
  store ptr %35, ptr %36, align 8, !tbaa !70
  br label %40

40:                                               ; preds = %39, %1
  %41 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87
  %42 = load ptr, ptr %41, align 8, !tbaa !65
  %43 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87, i32 0, i32 0, i32 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !70
  %45 = icmp eq ptr %44, %42
  br i1 %45, label %47, label %46

46:                                               ; preds = %40
  store ptr %42, ptr %43, align 8, !tbaa !70
  br label %47

47:                                               ; preds = %46, %40
  %48 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 88
  %49 = load ptr, ptr %48, align 8, !tbaa !65
  %50 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 88, i32 0, i32 0, i32 0, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !70
  %52 = icmp eq ptr %51, %49
  br i1 %52, label %54, label %53

53:                                               ; preds = %47
  store ptr %49, ptr %50, align 8, !tbaa !70
  br label %54

54:                                               ; preds = %53, %47
  %55 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 89
  %56 = load ptr, ptr %55, align 8, !tbaa !65
  %57 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 89, i32 0, i32 0, i32 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !70
  %59 = icmp eq ptr %58, %56
  br i1 %59, label %61, label %60

60:                                               ; preds = %54
  store ptr %56, ptr %57, align 8, !tbaa !70
  br label %61

61:                                               ; preds = %60, %54
  %62 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 90
  %63 = load ptr, ptr %62, align 8, !tbaa !65
  %64 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 90, i32 0, i32 0, i32 0, i32 1
  %65 = load ptr, ptr %64, align 8, !tbaa !70
  %66 = icmp eq ptr %65, %63
  br i1 %66, label %68, label %67

67:                                               ; preds = %61
  store ptr %63, ptr %64, align 8, !tbaa !70
  br label %68

68:                                               ; preds = %67, %61
  %69 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 91
  %70 = load ptr, ptr %69, align 8, !tbaa !65
  %71 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 91, i32 0, i32 0, i32 0, i32 1
  %72 = load ptr, ptr %71, align 8, !tbaa !70
  %73 = icmp eq ptr %72, %70
  br i1 %73, label %75, label %74

74:                                               ; preds = %68
  store ptr %70, ptr %71, align 8, !tbaa !70
  br label %75

75:                                               ; preds = %74, %68
  %76 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %77 = load i64, ptr %76, align 8, !tbaa !543
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #57
  store i32 -1, ptr %2, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %48, i64 noundef %77, ptr noundef nonnull align 4 dereferenceable(4) %2) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #57
  %78 = load i64, ptr %76, align 8, !tbaa !543
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #57
  store i32 -1, ptr %3, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %55, i64 noundef %78, ptr noundef nonnull align 4 dereferenceable(4) %3) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #57
  %79 = load i64, ptr %76, align 8, !tbaa !543
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #57
  store i32 -1, ptr %4, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %62, i64 noundef %79, ptr noundef nonnull align 4 dereferenceable(4) %4) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #57
  %80 = load i64, ptr %76, align 8, !tbaa !543
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #57
  store i32 -1, ptr %5, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %69, i64 noundef %80, ptr noundef nonnull align 4 dereferenceable(4) %5) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #57
  %81 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83
  %82 = load ptr, ptr %81, align 8, !tbaa !65
  %83 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83, i32 0, i32 0, i32 0, i32 1
  %84 = load ptr, ptr %83, align 8, !tbaa !70
  %85 = icmp eq ptr %84, %82
  br i1 %85, label %87, label %86

86:                                               ; preds = %75
  store ptr %82, ptr %83, align 8, !tbaa !70
  br label %87

87:                                               ; preds = %86, %75
  %88 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84
  %89 = load ptr, ptr %88, align 8, !tbaa !65
  %90 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84, i32 0, i32 0, i32 0, i32 1
  %91 = load ptr, ptr %90, align 8, !tbaa !70
  %92 = icmp eq ptr %91, %89
  br i1 %92, label %94, label %93

93:                                               ; preds = %87
  store ptr %89, ptr %90, align 8, !tbaa !70
  br label %94

94:                                               ; preds = %93, %87
  %95 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85
  %96 = load ptr, ptr %95, align 8, !tbaa !65
  %97 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85, i32 0, i32 0, i32 0, i32 1
  %98 = load ptr, ptr %97, align 8, !tbaa !70
  %99 = icmp eq ptr %98, %96
  br i1 %99, label %101, label %100

100:                                              ; preds = %94
  store ptr %96, ptr %97, align 8, !tbaa !70
  br label %101

101:                                              ; preds = %100, %94
  %102 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 92
  %103 = load ptr, ptr %102, align 8, !tbaa !65
  %104 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 92, i32 0, i32 0, i32 0, i32 1
  %105 = load ptr, ptr %104, align 8, !tbaa !70
  %106 = icmp eq ptr %105, %103
  br i1 %106, label %108, label %107

107:                                              ; preds = %101
  store ptr %103, ptr %104, align 8, !tbaa !70
  br label %108

108:                                              ; preds = %107, %101
  %109 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 93
  %110 = load ptr, ptr %109, align 8, !tbaa !65
  %111 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 93, i32 0, i32 0, i32 0, i32 1
  %112 = load ptr, ptr %111, align 8, !tbaa !70
  %113 = icmp eq ptr %112, %110
  br i1 %113, label %115, label %114

114:                                              ; preds = %108
  store ptr %110, ptr %111, align 8, !tbaa !70
  br label %115

115:                                              ; preds = %114, %108
  %116 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 94
  %117 = load ptr, ptr %116, align 8, !tbaa !65
  %118 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 94, i32 0, i32 0, i32 0, i32 1
  %119 = load ptr, ptr %118, align 8, !tbaa !70
  %120 = icmp eq ptr %119, %117
  br i1 %120, label %122, label %121

121:                                              ; preds = %115
  store ptr %117, ptr %118, align 8, !tbaa !70
  br label %122

122:                                              ; preds = %121, %115
  %123 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 95
  %124 = load ptr, ptr %123, align 8, !tbaa !65
  %125 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 95, i32 0, i32 0, i32 0, i32 1
  %126 = load ptr, ptr %125, align 8, !tbaa !70
  %127 = icmp eq ptr %126, %124
  br i1 %127, label %129, label %128

128:                                              ; preds = %122
  store ptr %124, ptr %125, align 8, !tbaa !70
  br label %129

129:                                              ; preds = %128, %122
  %130 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %131 = load i32, ptr %130, align 8, !tbaa !647
  %132 = add nsw i32 %131, 1
  %133 = sext i32 %132 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #57
  store i32 9999999, ptr %6, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %102, i64 noundef %133, ptr noundef nonnull align 4 dereferenceable(4) %6) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #57
  %134 = load i32, ptr %130, align 8, !tbaa !647
  %135 = add nsw i32 %134, 1
  %136 = sext i32 %135 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #57
  store i32 -9999999, ptr %7, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %109, i64 noundef %136, ptr noundef nonnull align 4 dereferenceable(4) %7) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #57
  %137 = load i32, ptr %130, align 8, !tbaa !647
  %138 = add nsw i32 %137, 1
  %139 = sext i32 %138 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #57
  store i32 9999999, ptr %8, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %116, i64 noundef %139, ptr noundef nonnull align 4 dereferenceable(4) %8) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #57
  %140 = load i32, ptr %130, align 8, !tbaa !647
  %141 = add nsw i32 %140, 1
  %142 = sext i32 %141 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #57
  store i32 -9999999, ptr %9, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %123, i64 noundef %142, ptr noundef nonnull align 4 dereferenceable(4) %9) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #57
  %143 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 96
  %144 = load ptr, ptr %143, align 8, !tbaa !65
  %145 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 96, i32 0, i32 0, i32 0, i32 1
  %146 = load ptr, ptr %145, align 8, !tbaa !70
  %147 = icmp eq ptr %146, %144
  br i1 %147, label %149, label %148

148:                                              ; preds = %129
  store ptr %144, ptr %145, align 8, !tbaa !70
  br label %149

149:                                              ; preds = %148, %129
  %150 = load i32, ptr %130, align 8, !tbaa !647
  %151 = add nsw i32 %150, 1
  %152 = sext i32 %151 to i64
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %143, i64 noundef %152) #56
  %153 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 97
  %154 = load ptr, ptr %153, align 8, !tbaa !65
  %155 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 97, i32 0, i32 0, i32 0, i32 1
  %156 = load ptr, ptr %155, align 8, !tbaa !70
  %157 = icmp eq ptr %156, %154
  br i1 %157, label %159, label %158

158:                                              ; preds = %149
  store ptr %154, ptr %155, align 8, !tbaa !70
  br label %159

159:                                              ; preds = %158, %149
  %160 = load i32, ptr %130, align 8, !tbaa !647
  %161 = add nsw i32 %160, 1
  %162 = sext i32 %161 to i64
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %153, i64 noundef %162) #56
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #57
  store i32 0, ptr %10, align 4, !tbaa !68
  %163 = load i64, ptr %76, align 8, !tbaa !543
  %164 = trunc i64 %163 to i32
  %165 = icmp sgt i32 %164, 0
  br i1 %165, label %168, label %166

166:                                              ; preds = %159
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #57
  %167 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 81
  store i32 0, ptr %167, align 8, !tbaa !729
  br label %405

168:                                              ; preds = %159
  %169 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %170 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %171 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 86, i32 0, i32 0, i32 0, i32 2
  %172 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 87, i32 0, i32 0, i32 0, i32 2
  %173 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 85, i32 0, i32 0, i32 0, i32 2
  %174 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %175 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 83, i32 0, i32 0, i32 0, i32 2
  %176 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %177 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 84, i32 0, i32 0, i32 0, i32 2
  %178 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  br label %196

179:                                              ; preds = %398
  %.lcssa7 = phi i32 [ %400, %398 ]
  %.lcssa6 = phi i64 [ %402, %398 ]
  %.lcssa5 = phi i32 [ %403, %398 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #57
  %180 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 81
  store i32 %.lcssa7, ptr %180, align 8, !tbaa !729
  %181 = icmp sgt i32 %.lcssa5, 0
  br i1 %181, label %182, label %405

182:                                              ; preds = %179
  %183 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %184 = load ptr, ptr %183, align 8, !tbaa !684
  %185 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %186 = load ptr, ptr %185, align 8
  %187 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %188 = load ptr, ptr %187, align 8
  %189 = load ptr, ptr %62, align 8
  %190 = load ptr, ptr %48, align 8
  %191 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %192 = load ptr, ptr %191, align 8
  %193 = load ptr, ptr %55, align 8
  %194 = load ptr, ptr %69, align 8
  %195 = and i64 %.lcssa6, 4294967295
  br label %550

196:                                              ; preds = %398, %168
  %197 = phi i32 [ 0, %168 ], [ %400, %398 ]
  %198 = phi i32 [ 0, %168 ], [ %401, %398 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #57
  %199 = load ptr, ptr %169, align 8, !tbaa !685
  %200 = sext i32 %198 to i64
  %201 = getelementptr inbounds i32, ptr %199, i64 %200
  %202 = load i32, ptr %201, align 4, !tbaa !68
  store i32 %202, ptr %11, align 4, !tbaa !68
  %203 = icmp eq i32 %202, %198
  br i1 %203, label %398, label %204

204:                                              ; preds = %196
  %205 = load ptr, ptr %170, align 8, !tbaa !639
  %206 = sext i32 %202 to i64
  %207 = getelementptr inbounds i32, ptr %205, i64 %206
  %208 = load i32, ptr %207, align 4, !tbaa !68
  %209 = getelementptr inbounds i32, ptr %205, i64 %200
  %210 = load i32, ptr %209, align 4, !tbaa !68
  %211 = icmp slt i32 %208, %210
  %212 = load ptr, ptr %36, align 8, !tbaa !29
  %213 = load ptr, ptr %171, align 8, !tbaa !67
  %214 = icmp eq ptr %212, %213
  br i1 %214, label %217, label %215

215:                                              ; preds = %204
  store i32 %198, ptr %212, align 4, !tbaa !68
  %216 = getelementptr inbounds i32, ptr %212, i64 1
  store ptr %216, ptr %36, align 8, !tbaa !70
  br label %218

217:                                              ; preds = %204
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr %212, ptr noundef nonnull align 4 dereferenceable(4) %10) #56
  br label %218

218:                                              ; preds = %217, %215
  %219 = load ptr, ptr %43, align 8, !tbaa !29
  %220 = load ptr, ptr %172, align 8, !tbaa !67
  %221 = icmp eq ptr %219, %220
  br i1 %221, label %225, label %222

222:                                              ; preds = %218
  %223 = load i32, ptr %11, align 4, !tbaa !68
  store i32 %223, ptr %219, align 4, !tbaa !68
  %224 = getelementptr inbounds i32, ptr %219, i64 1
  store ptr %224, ptr %43, align 8, !tbaa !70
  br label %226

225:                                              ; preds = %218
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %41, ptr %219, ptr noundef nonnull align 4 dereferenceable(4) %11) #56
  br label %226

226:                                              ; preds = %225, %222
  %227 = load ptr, ptr %170, align 8, !tbaa !639
  %228 = load i32, ptr %10, align 4, !tbaa !68
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds i32, ptr %227, i64 %229
  %231 = load i32, ptr %230, align 4, !tbaa !68
  %232 = load i32, ptr %11, align 4, !tbaa !68
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds i32, ptr %227, i64 %233
  %235 = load i32, ptr %234, align 4, !tbaa !68
  %236 = load ptr, ptr %97, align 8, !tbaa !29
  %237 = load ptr, ptr %173, align 8, !tbaa !67
  %238 = icmp eq ptr %236, %237
  br i1 %238, label %242, label %239

239:                                              ; preds = %226
  %240 = call i32 @llvm.smax.i32(i32 %231, i32 %235)
  store i32 %240, ptr %236, align 4, !tbaa !68
  %241 = getelementptr inbounds i32, ptr %236, i64 1
  store ptr %241, ptr %97, align 8, !tbaa !70
  br label %245

242:                                              ; preds = %226
  %243 = icmp sgt i32 %231, %235
  %244 = select i1 %243, ptr %230, ptr %234
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %95, ptr %236, ptr noundef nonnull align 4 dereferenceable(4) %244) #56
  br label %245

245:                                              ; preds = %242, %239
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #57
  %246 = load ptr, ptr %174, align 8, !tbaa !637
  %247 = load i32, ptr %11, align 4, !tbaa !68
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i32, ptr %246, i64 %248
  %250 = load i32, ptr %249, align 4, !tbaa !68
  %251 = zext i1 %211 to i32
  %252 = shl i32 %250, %251
  store i32 %252, ptr %12, align 4, !tbaa !68
  %253 = load ptr, ptr %83, align 8, !tbaa !29
  %254 = load ptr, ptr %175, align 8, !tbaa !67
  %255 = icmp eq ptr %253, %254
  br i1 %255, label %258, label %256

256:                                              ; preds = %245
  store i32 %252, ptr %253, align 4, !tbaa !68
  %257 = getelementptr inbounds i32, ptr %253, i64 1
  store ptr %257, ptr %83, align 8, !tbaa !70
  br label %259

258:                                              ; preds = %245
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %81, ptr %253, ptr noundef nonnull align 4 dereferenceable(4) %12) #56
  br label %259

259:                                              ; preds = %258, %256
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #57
  %260 = load ptr, ptr %170, align 8, !tbaa !639
  %261 = load i32, ptr %11, align 4, !tbaa !68
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds i32, ptr %260, i64 %262
  %264 = load i32, ptr %263, align 4, !tbaa !68
  %265 = load i32, ptr %10, align 4, !tbaa !68
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds i32, ptr %260, i64 %266
  %268 = load i32, ptr %267, align 4, !tbaa !68
  %269 = icmp slt i32 %264, %268
  %270 = load ptr, ptr %176, align 8, !tbaa !638
  br i1 %269, label %273, label %271

271:                                              ; preds = %259
  %272 = load ptr, ptr %177, align 8, !tbaa !67
  br label %290

273:                                              ; preds = %259
  %274 = getelementptr inbounds i32, ptr %270, i64 %266
  %275 = load i32, ptr %274, align 4, !tbaa !68
  %276 = and i32 %275, -2147483647
  %277 = icmp eq i32 %276, 1
  %278 = load ptr, ptr %177, align 8, !tbaa !67
  br i1 %277, label %279, label %290

279:                                              ; preds = %273
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #57
  %280 = getelementptr inbounds i32, ptr %270, i64 %262
  %281 = load i32, ptr %280, align 4, !tbaa !68
  %282 = shl i32 %281, %251
  %283 = add nsw i32 %282, 1
  store i32 %283, ptr %13, align 4, !tbaa !68
  %284 = load ptr, ptr %90, align 8, !tbaa !29
  %285 = icmp eq ptr %284, %278
  br i1 %285, label %288, label %286

286:                                              ; preds = %279
  store i32 %283, ptr %284, align 4, !tbaa !68
  %287 = getelementptr inbounds i32, ptr %284, i64 1
  store ptr %287, ptr %90, align 8, !tbaa !70
  br label %289

288:                                              ; preds = %279
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %88, ptr %278, ptr noundef nonnull align 4 dereferenceable(4) %13) #56
  br label %289

289:                                              ; preds = %288, %286
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #57
  br label %301

290:                                              ; preds = %273, %271
  %291 = phi ptr [ %272, %271 ], [ %278, %273 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #57
  %292 = getelementptr inbounds i32, ptr %270, i64 %262
  %293 = load i32, ptr %292, align 4, !tbaa !68
  %294 = shl i32 %293, %251
  store i32 %294, ptr %14, align 4, !tbaa !68
  %295 = load ptr, ptr %90, align 8, !tbaa !29
  %296 = icmp eq ptr %295, %291
  br i1 %296, label %299, label %297

297:                                              ; preds = %290
  store i32 %294, ptr %295, align 4, !tbaa !68
  %298 = getelementptr inbounds i32, ptr %295, i64 1
  store ptr %298, ptr %90, align 8, !tbaa !70
  br label %300

299:                                              ; preds = %290
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %88, ptr %291, ptr noundef nonnull align 4 dereferenceable(4) %14) #56
  br label %300

300:                                              ; preds = %299, %297
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #57
  br label %301

301:                                              ; preds = %300, %289
  %302 = load i32, ptr %10, align 4, !tbaa !68
  %303 = sext i32 %302 to i64
  %304 = load ptr, ptr %62, align 8, !tbaa !65
  %305 = getelementptr inbounds i32, ptr %304, i64 %303
  store i32 %197, ptr %305, align 4, !tbaa !68
  %306 = add nsw i32 %197, 1
  %307 = load ptr, ptr %170, align 8, !tbaa !639
  %308 = load i32, ptr %11, align 4, !tbaa !68
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i32, ptr %307, i64 %309
  %311 = load i32, ptr %310, align 4, !tbaa !68
  %312 = load i32, ptr %10, align 4, !tbaa !68
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds i32, ptr %307, i64 %313
  %315 = load i32, ptr %314, align 4, !tbaa !68
  %316 = icmp sgt i32 %311, %315
  br i1 %316, label %317, label %398

317:                                              ; preds = %301
  %318 = load ptr, ptr %176, align 8, !tbaa !638
  %319 = getelementptr inbounds i32, ptr %318, i64 %309
  %320 = load i32, ptr %319, align 4, !tbaa !68
  %321 = and i32 %320, 1
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %398

323:                                              ; preds = %317
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #57
  %324 = load ptr, ptr %178, align 8, !tbaa !687
  %325 = getelementptr inbounds i32, ptr %324, i64 %309
  %326 = load i32, ptr %325, align 4, !tbaa !68
  store i32 %326, ptr %15, align 4, !tbaa !68
  %327 = icmp eq i32 %326, %308
  br i1 %327, label %395, label %328

328:                                              ; preds = %323
  %329 = load ptr, ptr %36, align 8, !tbaa !29
  %330 = load ptr, ptr %171, align 8, !tbaa !67
  %331 = icmp eq ptr %329, %330
  br i1 %331, label %334, label %332

332:                                              ; preds = %328
  store i32 %312, ptr %329, align 4, !tbaa !68
  %333 = getelementptr inbounds i32, ptr %329, i64 1
  store ptr %333, ptr %36, align 8, !tbaa !70
  br label %335

334:                                              ; preds = %328
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr %329, ptr noundef nonnull align 4 dereferenceable(4) %10) #56
  br label %335

335:                                              ; preds = %334, %332
  %336 = load ptr, ptr %43, align 8, !tbaa !29
  %337 = load ptr, ptr %172, align 8, !tbaa !67
  %338 = icmp eq ptr %336, %337
  br i1 %338, label %342, label %339

339:                                              ; preds = %335
  %340 = load i32, ptr %15, align 4, !tbaa !68
  store i32 %340, ptr %336, align 4, !tbaa !68
  %341 = getelementptr inbounds i32, ptr %336, i64 1
  store ptr %341, ptr %43, align 8, !tbaa !70
  br label %343

342:                                              ; preds = %335
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %41, ptr %336, ptr noundef nonnull align 4 dereferenceable(4) %15) #56
  br label %343

343:                                              ; preds = %342, %339
  %344 = load ptr, ptr %170, align 8, !tbaa !639
  %345 = load i32, ptr %10, align 4, !tbaa !68
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds i32, ptr %344, i64 %346
  %348 = load i32, ptr %347, align 4, !tbaa !68
  %349 = load i32, ptr %15, align 4, !tbaa !68
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds i32, ptr %344, i64 %350
  %352 = load i32, ptr %351, align 4, !tbaa !68
  %353 = load ptr, ptr %97, align 8, !tbaa !29
  %354 = load ptr, ptr %173, align 8, !tbaa !67
  %355 = icmp eq ptr %353, %354
  br i1 %355, label %359, label %356

356:                                              ; preds = %343
  %357 = call i32 @llvm.smax.i32(i32 %348, i32 %352)
  store i32 %357, ptr %353, align 4, !tbaa !68
  %358 = getelementptr inbounds i32, ptr %353, i64 1
  store ptr %358, ptr %97, align 8, !tbaa !70
  br label %362

359:                                              ; preds = %343
  %360 = icmp sgt i32 %348, %352
  %361 = select i1 %360, ptr %347, ptr %351
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %95, ptr %353, ptr noundef nonnull align 4 dereferenceable(4) %361) #56
  br label %362

362:                                              ; preds = %359, %356
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %16) #57
  %363 = load ptr, ptr %174, align 8, !tbaa !637
  %364 = load i32, ptr %15, align 4, !tbaa !68
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds i32, ptr %363, i64 %365
  %367 = load i32, ptr %366, align 4, !tbaa !68
  %368 = shl i32 %367, %251
  store i32 %368, ptr %16, align 4, !tbaa !68
  %369 = load ptr, ptr %83, align 8, !tbaa !29
  %370 = load ptr, ptr %175, align 8, !tbaa !67
  %371 = icmp eq ptr %369, %370
  br i1 %371, label %374, label %372

372:                                              ; preds = %362
  store i32 %368, ptr %369, align 4, !tbaa !68
  %373 = getelementptr inbounds i32, ptr %369, i64 1
  store ptr %373, ptr %83, align 8, !tbaa !70
  br label %375

374:                                              ; preds = %362
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %81, ptr %369, ptr noundef nonnull align 4 dereferenceable(4) %16) #56
  br label %375

375:                                              ; preds = %374, %372
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %16) #57
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #57
  %376 = load ptr, ptr %176, align 8, !tbaa !638
  %377 = load i32, ptr %15, align 4, !tbaa !68
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds i32, ptr %376, i64 %378
  %380 = load i32, ptr %379, align 4, !tbaa !68
  %381 = shl i32 %380, %251
  store i32 %381, ptr %17, align 4, !tbaa !68
  %382 = load ptr, ptr %90, align 8, !tbaa !29
  %383 = load ptr, ptr %177, align 8, !tbaa !67
  %384 = icmp eq ptr %382, %383
  br i1 %384, label %387, label %385

385:                                              ; preds = %375
  store i32 %381, ptr %382, align 4, !tbaa !68
  %386 = getelementptr inbounds i32, ptr %382, i64 1
  store ptr %386, ptr %90, align 8, !tbaa !70
  br label %388

387:                                              ; preds = %375
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %88, ptr %382, ptr noundef nonnull align 4 dereferenceable(4) %17) #56
  br label %388

388:                                              ; preds = %387, %385
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #57
  %389 = load i32, ptr %10, align 4, !tbaa !68
  %390 = sext i32 %389 to i64
  %391 = load ptr, ptr %69, align 8, !tbaa !65
  %392 = getelementptr inbounds i32, ptr %391, i64 %390
  store i32 %306, ptr %392, align 4, !tbaa !68
  %393 = add nsw i32 %197, 2
  %394 = load i32, ptr %10, align 4, !tbaa !68
  br label %395

395:                                              ; preds = %388, %323
  %396 = phi i32 [ %394, %388 ], [ %312, %323 ]
  %397 = phi i32 [ %393, %388 ], [ %306, %323 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #57
  br label %398

398:                                              ; preds = %395, %317, %301, %196
  %399 = phi i32 [ %198, %196 ], [ %396, %395 ], [ %312, %317 ], [ %312, %301 ]
  %400 = phi i32 [ %197, %196 ], [ %397, %395 ], [ %306, %317 ], [ %306, %301 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #57
  %401 = add nsw i32 %399, 1
  store i32 %401, ptr %10, align 4, !tbaa !68
  %402 = load i64, ptr %76, align 8, !tbaa !543
  %403 = trunc i64 %402 to i32
  %404 = icmp slt i32 %401, %403
  br i1 %404, label %196, label %179, !llvm.loop !730

405:                                              ; preds = %587, %179, %166
  %406 = phi ptr [ %167, %166 ], [ %180, %179 ], [ %180, %587 ]
  %407 = phi i64 [ %163, %166 ], [ %.lcssa6, %179 ], [ %.lcssa6, %587 ]
  %408 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101
  %409 = load ptr, ptr %408, align 8, !tbaa !65
  %410 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101, i32 0, i32 0, i32 0, i32 1
  %411 = load ptr, ptr %410, align 8, !tbaa !70
  %412 = icmp eq ptr %411, %409
  br i1 %412, label %414, label %413

413:                                              ; preds = %405
  store ptr %409, ptr %410, align 8, !tbaa !70
  br label %414

414:                                              ; preds = %413, %405
  %415 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102
  %416 = load ptr, ptr %415, align 8, !tbaa !65
  %417 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102, i32 0, i32 0, i32 0, i32 1
  %418 = load ptr, ptr %417, align 8, !tbaa !70
  %419 = icmp eq ptr %418, %416
  br i1 %419, label %421, label %420

420:                                              ; preds = %414
  store ptr %416, ptr %417, align 8, !tbaa !70
  br label %421

421:                                              ; preds = %420, %414
  %422 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 103
  %423 = load ptr, ptr %422, align 8, !tbaa !65
  %424 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 103, i32 0, i32 0, i32 0, i32 1
  %425 = load ptr, ptr %424, align 8, !tbaa !70
  %426 = icmp eq ptr %425, %423
  br i1 %426, label %428, label %427

427:                                              ; preds = %421
  store ptr %423, ptr %424, align 8, !tbaa !70
  br label %428

428:                                              ; preds = %427, %421
  %429 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 104
  %430 = load ptr, ptr %429, align 8, !tbaa !65
  %431 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 104, i32 0, i32 0, i32 0, i32 1
  %432 = load ptr, ptr %431, align 8, !tbaa !70
  %433 = icmp eq ptr %432, %430
  br i1 %433, label %435, label %434

434:                                              ; preds = %428
  store ptr %430, ptr %431, align 8, !tbaa !70
  br label %435

435:                                              ; preds = %434, %428
  %436 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 105
  %437 = load ptr, ptr %436, align 8, !tbaa !65
  %438 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 105, i32 0, i32 0, i32 0, i32 1
  %439 = load ptr, ptr %438, align 8, !tbaa !70
  %440 = icmp eq ptr %439, %437
  br i1 %440, label %442, label %441

441:                                              ; preds = %435
  store ptr %437, ptr %438, align 8, !tbaa !70
  br label %442

442:                                              ; preds = %441, %435
  %443 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 106
  %444 = load ptr, ptr %443, align 8, !tbaa !65
  %445 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 106, i32 0, i32 0, i32 0, i32 1
  %446 = load ptr, ptr %445, align 8, !tbaa !70
  %447 = icmp eq ptr %446, %444
  br i1 %447, label %449, label %448

448:                                              ; preds = %442
  store ptr %444, ptr %445, align 8, !tbaa !70
  br label %449

449:                                              ; preds = %448, %442
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #57
  store i32 -1, ptr %18, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %422, i64 noundef %407, ptr noundef nonnull align 4 dereferenceable(4) %18) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #57
  %450 = load i64, ptr %76, align 8, !tbaa !543
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %19) #57
  store i32 -1, ptr %19, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %429, i64 noundef %450, ptr noundef nonnull align 4 dereferenceable(4) %19) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %19) #57
  %451 = load i64, ptr %76, align 8, !tbaa !543
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %20) #57
  store i32 -1, ptr %20, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %436, i64 noundef %451, ptr noundef nonnull align 4 dereferenceable(4) %20) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %20) #57
  %452 = load i64, ptr %76, align 8, !tbaa !543
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %21) #57
  store i32 -1, ptr %21, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %443, i64 noundef %452, ptr noundef nonnull align 4 dereferenceable(4) %21) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #57
  %453 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98
  %454 = load ptr, ptr %453, align 8, !tbaa !65
  %455 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98, i32 0, i32 0, i32 0, i32 1
  %456 = load ptr, ptr %455, align 8, !tbaa !70
  %457 = icmp eq ptr %456, %454
  br i1 %457, label %459, label %458

458:                                              ; preds = %449
  store ptr %454, ptr %455, align 8, !tbaa !70
  br label %459

459:                                              ; preds = %458, %449
  %460 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99
  %461 = load ptr, ptr %460, align 8, !tbaa !65
  %462 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99, i32 0, i32 0, i32 0, i32 1
  %463 = load ptr, ptr %462, align 8, !tbaa !70
  %464 = icmp eq ptr %463, %461
  br i1 %464, label %466, label %465

465:                                              ; preds = %459
  store ptr %461, ptr %462, align 8, !tbaa !70
  br label %466

466:                                              ; preds = %465, %459
  %467 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100
  %468 = load ptr, ptr %467, align 8, !tbaa !65
  %469 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100, i32 0, i32 0, i32 0, i32 1
  %470 = load ptr, ptr %469, align 8, !tbaa !70
  %471 = icmp eq ptr %470, %468
  br i1 %471, label %473, label %472

472:                                              ; preds = %466
  store ptr %468, ptr %469, align 8, !tbaa !70
  br label %473

473:                                              ; preds = %472, %466
  %474 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 107
  %475 = load ptr, ptr %474, align 8, !tbaa !65
  %476 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 107, i32 0, i32 0, i32 0, i32 1
  %477 = load ptr, ptr %476, align 8, !tbaa !70
  %478 = icmp eq ptr %477, %475
  br i1 %478, label %480, label %479

479:                                              ; preds = %473
  store ptr %475, ptr %476, align 8, !tbaa !70
  br label %480

480:                                              ; preds = %479, %473
  %481 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 108
  %482 = load ptr, ptr %481, align 8, !tbaa !65
  %483 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 108, i32 0, i32 0, i32 0, i32 1
  %484 = load ptr, ptr %483, align 8, !tbaa !70
  %485 = icmp eq ptr %484, %482
  br i1 %485, label %487, label %486

486:                                              ; preds = %480
  store ptr %482, ptr %483, align 8, !tbaa !70
  br label %487

487:                                              ; preds = %486, %480
  %488 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 109
  %489 = load ptr, ptr %488, align 8, !tbaa !65
  %490 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 109, i32 0, i32 0, i32 0, i32 1
  %491 = load ptr, ptr %490, align 8, !tbaa !70
  %492 = icmp eq ptr %491, %489
  br i1 %492, label %494, label %493

493:                                              ; preds = %487
  store ptr %489, ptr %490, align 8, !tbaa !70
  br label %494

494:                                              ; preds = %493, %487
  %495 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 110
  %496 = load ptr, ptr %495, align 8, !tbaa !65
  %497 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 110, i32 0, i32 0, i32 0, i32 1
  %498 = load ptr, ptr %497, align 8, !tbaa !70
  %499 = icmp eq ptr %498, %496
  br i1 %499, label %501, label %500

500:                                              ; preds = %494
  store ptr %496, ptr %497, align 8, !tbaa !70
  br label %501

501:                                              ; preds = %500, %494
  %502 = load i32, ptr %130, align 8, !tbaa !647
  %503 = add nsw i32 %502, 1
  %504 = sext i32 %503 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %22) #57
  store i32 9999999, ptr %22, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %474, i64 noundef %504, ptr noundef nonnull align 4 dereferenceable(4) %22) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %22) #57
  %505 = load i32, ptr %130, align 8, !tbaa !647
  %506 = add nsw i32 %505, 1
  %507 = sext i32 %506 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %23) #57
  store i32 -9999999, ptr %23, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %481, i64 noundef %507, ptr noundef nonnull align 4 dereferenceable(4) %23) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %23) #57
  %508 = load i32, ptr %130, align 8, !tbaa !647
  %509 = add nsw i32 %508, 1
  %510 = sext i32 %509 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %24) #57
  store i32 9999999, ptr %24, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %488, i64 noundef %510, ptr noundef nonnull align 4 dereferenceable(4) %24) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %24) #57
  %511 = load i32, ptr %130, align 8, !tbaa !647
  %512 = add nsw i32 %511, 1
  %513 = sext i32 %512 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %25) #57
  store i32 -9999999, ptr %25, align 4, !tbaa !68
  call void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %495, i64 noundef %513, ptr noundef nonnull align 4 dereferenceable(4) %25) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %25) #57
  %514 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 111
  %515 = load ptr, ptr %514, align 8, !tbaa !65
  %516 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 111, i32 0, i32 0, i32 0, i32 1
  %517 = load ptr, ptr %516, align 8, !tbaa !70
  %518 = icmp eq ptr %517, %515
  br i1 %518, label %520, label %519

519:                                              ; preds = %501
  store ptr %515, ptr %516, align 8, !tbaa !70
  br label %520

520:                                              ; preds = %519, %501
  %521 = load i32, ptr %130, align 8, !tbaa !647
  %522 = add nsw i32 %521, 1
  %523 = sext i32 %522 to i64
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %514, i64 noundef %523) #56
  %524 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 112
  %525 = load ptr, ptr %524, align 8, !tbaa !65
  %526 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 112, i32 0, i32 0, i32 0, i32 1
  %527 = load ptr, ptr %526, align 8, !tbaa !70
  %528 = icmp eq ptr %527, %525
  br i1 %528, label %530, label %529

529:                                              ; preds = %520
  store ptr %525, ptr %526, align 8, !tbaa !70
  br label %530

530:                                              ; preds = %529, %520
  %531 = load i32, ptr %130, align 8, !tbaa !647
  %532 = add nsw i32 %531, 1
  %533 = sext i32 %532 to i64
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %524, i64 noundef %533) #56
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %26) #57
  store i32 0, ptr %26, align 4, !tbaa !68
  %534 = load i64, ptr %76, align 8, !tbaa !543
  %535 = trunc i64 %534 to i32
  %536 = icmp sgt i32 %535, 0
  br i1 %536, label %539, label %537

537:                                              ; preds = %530
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %26) #57
  %538 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 82
  store i32 0, ptr %538, align 4, !tbaa !731
  br label %817

539:                                              ; preds = %530
  %540 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %541 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %542 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 101, i32 0, i32 0, i32 0, i32 2
  %543 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 102, i32 0, i32 0, i32 0, i32 2
  %544 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 100, i32 0, i32 0, i32 0, i32 2
  %545 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %546 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 99, i32 0, i32 0, i32 0, i32 2
  %547 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %548 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 98, i32 0, i32 0, i32 0, i32 2
  %549 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  br label %607

550:                                              ; preds = %587, %182
  %551 = phi i64 [ 0, %182 ], [ %588, %587 ]
  %552 = getelementptr inbounds i32, ptr %184, i64 %551
  %553 = load i32, ptr %552, align 4, !tbaa !68
  %554 = zext i32 %553 to i64
  %555 = icmp eq i64 %551, %554
  br i1 %555, label %587, label %556

556:                                              ; preds = %550
  %557 = sext i32 %553 to i64
  %558 = getelementptr inbounds i32, ptr %186, i64 %557
  %559 = load i32, ptr %558, align 4, !tbaa !68
  %560 = getelementptr inbounds i32, ptr %186, i64 %551
  %561 = load i32, ptr %560, align 4, !tbaa !68
  %562 = icmp slt i32 %559, %561
  br i1 %562, label %563, label %570

563:                                              ; preds = %556
  %564 = getelementptr inbounds i32, ptr %188, i64 %551
  %565 = load i32, ptr %564, align 4, !tbaa !68
  %566 = and i32 %565, -2147483647
  %567 = icmp eq i32 %566, 1
  br i1 %567, label %568, label %570

568:                                              ; preds = %563
  %569 = getelementptr inbounds i32, ptr %194, i64 %557
  br label %582

570:                                              ; preds = %563, %556
  %571 = getelementptr inbounds i32, ptr %189, i64 %557
  %572 = load i32, ptr %571, align 4, !tbaa !68
  %573 = getelementptr inbounds i32, ptr %190, i64 %551
  store i32 %572, ptr %573, align 4, !tbaa !68
  %574 = load i32, ptr %558, align 4, !tbaa !68
  %575 = load i32, ptr %560, align 4, !tbaa !68
  %576 = icmp sgt i32 %574, %575
  br i1 %576, label %577, label %587

577:                                              ; preds = %570
  %578 = getelementptr inbounds i32, ptr %192, i64 %557
  %579 = load i32, ptr %578, align 4, !tbaa !68
  %580 = sext i32 %579 to i64
  %581 = getelementptr inbounds i32, ptr %189, i64 %580
  br label %582

582:                                              ; preds = %577, %568
  %583 = phi ptr [ %569, %568 ], [ %581, %577 ]
  %584 = phi ptr [ %190, %568 ], [ %193, %577 ]
  %585 = load i32, ptr %583, align 4, !tbaa !68
  %586 = getelementptr inbounds i32, ptr %584, i64 %551
  store i32 %585, ptr %586, align 4, !tbaa !68
  br label %587

587:                                              ; preds = %582, %570, %550
  %588 = add nuw nsw i64 %551, 1
  %589 = icmp eq i64 %588, %195
  br i1 %589, label %405, label %550, !llvm.loop !732

590:                                              ; preds = %810
  %.lcssa4 = phi i32 [ %812, %810 ]
  %.lcssa3 = phi i64 [ %814, %810 ]
  %.lcssa2 = phi i32 [ %815, %810 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %26) #57
  %591 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 82
  store i32 %.lcssa4, ptr %591, align 4, !tbaa !731
  %592 = icmp sgt i32 %.lcssa2, 0
  br i1 %592, label %593, label %817

593:                                              ; preds = %590
  %594 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %595 = load ptr, ptr %594, align 8, !tbaa !686
  %596 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %597 = load ptr, ptr %596, align 8
  %598 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %599 = load ptr, ptr %598, align 8
  %600 = load ptr, ptr %436, align 8
  %601 = load ptr, ptr %422, align 8
  %602 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %603 = load ptr, ptr %602, align 8
  %604 = load ptr, ptr %429, align 8
  %605 = load ptr, ptr %443, align 8
  %606 = and i64 %.lcssa3, 4294967295
  br label %829

607:                                              ; preds = %810, %539
  %608 = phi i32 [ 0, %539 ], [ %812, %810 ]
  %609 = phi i32 [ 0, %539 ], [ %813, %810 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %27) #57
  %610 = load ptr, ptr %540, align 8, !tbaa !687
  %611 = sext i32 %609 to i64
  %612 = getelementptr inbounds i32, ptr %610, i64 %611
  %613 = load i32, ptr %612, align 4, !tbaa !68
  store i32 %613, ptr %27, align 4, !tbaa !68
  %614 = icmp eq i32 %613, %609
  br i1 %614, label %810, label %615

615:                                              ; preds = %607
  %616 = load ptr, ptr %541, align 8, !tbaa !639
  %617 = sext i32 %613 to i64
  %618 = getelementptr inbounds i32, ptr %616, i64 %617
  %619 = load i32, ptr %618, align 4, !tbaa !68
  %620 = getelementptr inbounds i32, ptr %616, i64 %611
  %621 = load i32, ptr %620, align 4, !tbaa !68
  %622 = icmp slt i32 %619, %621
  %623 = load ptr, ptr %410, align 8, !tbaa !29
  %624 = load ptr, ptr %542, align 8, !tbaa !67
  %625 = icmp eq ptr %623, %624
  br i1 %625, label %628, label %626

626:                                              ; preds = %615
  store i32 %609, ptr %623, align 4, !tbaa !68
  %627 = getelementptr inbounds i32, ptr %623, i64 1
  store ptr %627, ptr %410, align 8, !tbaa !70
  br label %629

628:                                              ; preds = %615
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %408, ptr %623, ptr noundef nonnull align 4 dereferenceable(4) %26) #56
  br label %629

629:                                              ; preds = %628, %626
  %630 = load ptr, ptr %417, align 8, !tbaa !29
  %631 = load ptr, ptr %543, align 8, !tbaa !67
  %632 = icmp eq ptr %630, %631
  br i1 %632, label %636, label %633

633:                                              ; preds = %629
  %634 = load i32, ptr %27, align 4, !tbaa !68
  store i32 %634, ptr %630, align 4, !tbaa !68
  %635 = getelementptr inbounds i32, ptr %630, i64 1
  store ptr %635, ptr %417, align 8, !tbaa !70
  br label %637

636:                                              ; preds = %629
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %415, ptr %630, ptr noundef nonnull align 4 dereferenceable(4) %27) #56
  br label %637

637:                                              ; preds = %636, %633
  %638 = load ptr, ptr %541, align 8, !tbaa !639
  %639 = load i32, ptr %26, align 4, !tbaa !68
  %640 = sext i32 %639 to i64
  %641 = getelementptr inbounds i32, ptr %638, i64 %640
  %642 = load i32, ptr %641, align 4, !tbaa !68
  %643 = load i32, ptr %27, align 4, !tbaa !68
  %644 = sext i32 %643 to i64
  %645 = getelementptr inbounds i32, ptr %638, i64 %644
  %646 = load i32, ptr %645, align 4, !tbaa !68
  %647 = load ptr, ptr %469, align 8, !tbaa !29
  %648 = load ptr, ptr %544, align 8, !tbaa !67
  %649 = icmp eq ptr %647, %648
  br i1 %649, label %653, label %650

650:                                              ; preds = %637
  %651 = call i32 @llvm.smax.i32(i32 %642, i32 %646)
  store i32 %651, ptr %647, align 4, !tbaa !68
  %652 = getelementptr inbounds i32, ptr %647, i64 1
  store ptr %652, ptr %469, align 8, !tbaa !70
  br label %656

653:                                              ; preds = %637
  %654 = icmp sgt i32 %642, %646
  %655 = select i1 %654, ptr %641, ptr %645
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %467, ptr %647, ptr noundef nonnull align 4 dereferenceable(4) %655) #56
  br label %656

656:                                              ; preds = %653, %650
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %28) #57
  %657 = load ptr, ptr %545, align 8, !tbaa !638
  %658 = load i32, ptr %27, align 4, !tbaa !68
  %659 = sext i32 %658 to i64
  %660 = getelementptr inbounds i32, ptr %657, i64 %659
  %661 = load i32, ptr %660, align 4, !tbaa !68
  %662 = zext i1 %622 to i32
  %663 = shl i32 %661, %662
  store i32 %663, ptr %28, align 4, !tbaa !68
  %664 = load ptr, ptr %462, align 8, !tbaa !29
  %665 = load ptr, ptr %546, align 8, !tbaa !67
  %666 = icmp eq ptr %664, %665
  br i1 %666, label %669, label %667

667:                                              ; preds = %656
  store i32 %663, ptr %664, align 4, !tbaa !68
  %668 = getelementptr inbounds i32, ptr %664, i64 1
  store ptr %668, ptr %462, align 8, !tbaa !70
  br label %670

669:                                              ; preds = %656
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %460, ptr %664, ptr noundef nonnull align 4 dereferenceable(4) %28) #56
  br label %670

670:                                              ; preds = %669, %667
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %28) #57
  %671 = load ptr, ptr %541, align 8, !tbaa !639
  %672 = load i32, ptr %27, align 4, !tbaa !68
  %673 = sext i32 %672 to i64
  %674 = getelementptr inbounds i32, ptr %671, i64 %673
  %675 = load i32, ptr %674, align 4, !tbaa !68
  %676 = load i32, ptr %26, align 4, !tbaa !68
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds i32, ptr %671, i64 %677
  %679 = load i32, ptr %678, align 4, !tbaa !68
  %680 = icmp slt i32 %675, %679
  %681 = load ptr, ptr %547, align 8, !tbaa !637
  br i1 %680, label %685, label %682

682:                                              ; preds = %670
  %683 = load ptr, ptr %455, align 8, !tbaa !29
  %684 = load ptr, ptr %548, align 8, !tbaa !67
  br label %702

685:                                              ; preds = %670
  %686 = getelementptr inbounds i32, ptr %681, i64 %677
  %687 = load i32, ptr %686, align 4, !tbaa !68
  %688 = and i32 %687, -2147483647
  %689 = icmp eq i32 %688, 1
  %690 = load ptr, ptr %455, align 8, !tbaa !29
  %691 = load ptr, ptr %548, align 8, !tbaa !67
  br i1 %689, label %692, label %702

692:                                              ; preds = %685
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %29) #57
  %693 = getelementptr inbounds i32, ptr %681, i64 %673
  %694 = load i32, ptr %693, align 4, !tbaa !68
  %695 = shl i32 %694, %662
  %696 = add nsw i32 %695, 1
  store i32 %696, ptr %29, align 4, !tbaa !68
  %697 = icmp eq ptr %690, %691
  br i1 %697, label %700, label %698

698:                                              ; preds = %692
  store i32 %696, ptr %690, align 4, !tbaa !68
  %699 = getelementptr inbounds i32, ptr %690, i64 1
  store ptr %699, ptr %455, align 8, !tbaa !70
  br label %701

700:                                              ; preds = %692
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %453, ptr %690, ptr noundef nonnull align 4 dereferenceable(4) %29) #56
  br label %701

701:                                              ; preds = %700, %698
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %29) #57
  br label %713

702:                                              ; preds = %685, %682
  %703 = phi ptr [ %684, %682 ], [ %691, %685 ]
  %704 = phi ptr [ %683, %682 ], [ %690, %685 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %30) #57
  %705 = getelementptr inbounds i32, ptr %681, i64 %673
  %706 = load i32, ptr %705, align 4, !tbaa !68
  %707 = shl i32 %706, %662
  store i32 %707, ptr %30, align 4, !tbaa !68
  %708 = icmp eq ptr %704, %703
  br i1 %708, label %711, label %709

709:                                              ; preds = %702
  store i32 %707, ptr %704, align 4, !tbaa !68
  %710 = getelementptr inbounds i32, ptr %704, i64 1
  store ptr %710, ptr %455, align 8, !tbaa !70
  br label %712

711:                                              ; preds = %702
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %453, ptr %703, ptr noundef nonnull align 4 dereferenceable(4) %30) #56
  br label %712

712:                                              ; preds = %711, %709
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %30) #57
  br label %713

713:                                              ; preds = %712, %701
  %714 = load i32, ptr %26, align 4, !tbaa !68
  %715 = sext i32 %714 to i64
  %716 = load ptr, ptr %436, align 8, !tbaa !65
  %717 = getelementptr inbounds i32, ptr %716, i64 %715
  store i32 %608, ptr %717, align 4, !tbaa !68
  %718 = add nsw i32 %608, 1
  %719 = load ptr, ptr %541, align 8, !tbaa !639
  %720 = load i32, ptr %27, align 4, !tbaa !68
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds i32, ptr %719, i64 %721
  %723 = load i32, ptr %722, align 4, !tbaa !68
  %724 = load i32, ptr %26, align 4, !tbaa !68
  %725 = sext i32 %724 to i64
  %726 = getelementptr inbounds i32, ptr %719, i64 %725
  %727 = load i32, ptr %726, align 4, !tbaa !68
  %728 = icmp sgt i32 %723, %727
  br i1 %728, label %729, label %810

729:                                              ; preds = %713
  %730 = load ptr, ptr %547, align 8, !tbaa !637
  %731 = getelementptr inbounds i32, ptr %730, i64 %721
  %732 = load i32, ptr %731, align 4, !tbaa !68
  %733 = and i32 %732, 1
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %735, label %810

735:                                              ; preds = %729
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %31) #57
  %736 = load ptr, ptr %549, align 8, !tbaa !685
  %737 = getelementptr inbounds i32, ptr %736, i64 %721
  %738 = load i32, ptr %737, align 4, !tbaa !68
  store i32 %738, ptr %31, align 4, !tbaa !68
  %739 = icmp eq i32 %738, %720
  br i1 %739, label %807, label %740

740:                                              ; preds = %735
  %741 = load ptr, ptr %410, align 8, !tbaa !29
  %742 = load ptr, ptr %542, align 8, !tbaa !67
  %743 = icmp eq ptr %741, %742
  br i1 %743, label %746, label %744

744:                                              ; preds = %740
  store i32 %724, ptr %741, align 4, !tbaa !68
  %745 = getelementptr inbounds i32, ptr %741, i64 1
  store ptr %745, ptr %410, align 8, !tbaa !70
  br label %747

746:                                              ; preds = %740
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %408, ptr %741, ptr noundef nonnull align 4 dereferenceable(4) %26) #56
  br label %747

747:                                              ; preds = %746, %744
  %748 = load ptr, ptr %417, align 8, !tbaa !29
  %749 = load ptr, ptr %543, align 8, !tbaa !67
  %750 = icmp eq ptr %748, %749
  br i1 %750, label %754, label %751

751:                                              ; preds = %747
  %752 = load i32, ptr %31, align 4, !tbaa !68
  store i32 %752, ptr %748, align 4, !tbaa !68
  %753 = getelementptr inbounds i32, ptr %748, i64 1
  store ptr %753, ptr %417, align 8, !tbaa !70
  br label %755

754:                                              ; preds = %747
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %415, ptr %748, ptr noundef nonnull align 4 dereferenceable(4) %31) #56
  br label %755

755:                                              ; preds = %754, %751
  %756 = load ptr, ptr %541, align 8, !tbaa !639
  %757 = load i32, ptr %26, align 4, !tbaa !68
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds i32, ptr %756, i64 %758
  %760 = load i32, ptr %759, align 4, !tbaa !68
  %761 = load i32, ptr %31, align 4, !tbaa !68
  %762 = sext i32 %761 to i64
  %763 = getelementptr inbounds i32, ptr %756, i64 %762
  %764 = load i32, ptr %763, align 4, !tbaa !68
  %765 = load ptr, ptr %469, align 8, !tbaa !29
  %766 = load ptr, ptr %544, align 8, !tbaa !67
  %767 = icmp eq ptr %765, %766
  br i1 %767, label %771, label %768

768:                                              ; preds = %755
  %769 = call i32 @llvm.smax.i32(i32 %760, i32 %764)
  store i32 %769, ptr %765, align 4, !tbaa !68
  %770 = getelementptr inbounds i32, ptr %765, i64 1
  store ptr %770, ptr %469, align 8, !tbaa !70
  br label %774

771:                                              ; preds = %755
  %772 = icmp sgt i32 %760, %764
  %773 = select i1 %772, ptr %759, ptr %763
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %467, ptr %765, ptr noundef nonnull align 4 dereferenceable(4) %773) #56
  br label %774

774:                                              ; preds = %771, %768
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %32) #57
  %775 = load ptr, ptr %545, align 8, !tbaa !638
  %776 = load i32, ptr %31, align 4, !tbaa !68
  %777 = sext i32 %776 to i64
  %778 = getelementptr inbounds i32, ptr %775, i64 %777
  %779 = load i32, ptr %778, align 4, !tbaa !68
  %780 = shl i32 %779, %662
  store i32 %780, ptr %32, align 4, !tbaa !68
  %781 = load ptr, ptr %462, align 8, !tbaa !29
  %782 = load ptr, ptr %546, align 8, !tbaa !67
  %783 = icmp eq ptr %781, %782
  br i1 %783, label %786, label %784

784:                                              ; preds = %774
  store i32 %780, ptr %781, align 4, !tbaa !68
  %785 = getelementptr inbounds i32, ptr %781, i64 1
  store ptr %785, ptr %462, align 8, !tbaa !70
  br label %787

786:                                              ; preds = %774
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %460, ptr %781, ptr noundef nonnull align 4 dereferenceable(4) %32) #56
  br label %787

787:                                              ; preds = %786, %784
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %32) #57
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %33) #57
  %788 = load ptr, ptr %547, align 8, !tbaa !637
  %789 = load i32, ptr %31, align 4, !tbaa !68
  %790 = sext i32 %789 to i64
  %791 = getelementptr inbounds i32, ptr %788, i64 %790
  %792 = load i32, ptr %791, align 4, !tbaa !68
  %793 = shl i32 %792, %662
  store i32 %793, ptr %33, align 4, !tbaa !68
  %794 = load ptr, ptr %455, align 8, !tbaa !29
  %795 = load ptr, ptr %548, align 8, !tbaa !67
  %796 = icmp eq ptr %794, %795
  br i1 %796, label %799, label %797

797:                                              ; preds = %787
  store i32 %793, ptr %794, align 4, !tbaa !68
  %798 = getelementptr inbounds i32, ptr %794, i64 1
  store ptr %798, ptr %455, align 8, !tbaa !70
  br label %800

799:                                              ; preds = %787
  call void @_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_(ptr noundef nonnull align 8 dereferenceable(24) %453, ptr %794, ptr noundef nonnull align 4 dereferenceable(4) %33) #56
  br label %800

800:                                              ; preds = %799, %797
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %33) #57
  %801 = load i32, ptr %26, align 4, !tbaa !68
  %802 = sext i32 %801 to i64
  %803 = load ptr, ptr %443, align 8, !tbaa !65
  %804 = getelementptr inbounds i32, ptr %803, i64 %802
  store i32 %718, ptr %804, align 4, !tbaa !68
  %805 = add nsw i32 %608, 2
  %806 = load i32, ptr %26, align 4, !tbaa !68
  br label %807

807:                                              ; preds = %800, %735
  %808 = phi i32 [ %806, %800 ], [ %724, %735 ]
  %809 = phi i32 [ %805, %800 ], [ %718, %735 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %31) #57
  br label %810

810:                                              ; preds = %807, %729, %713, %607
  %811 = phi i32 [ %609, %607 ], [ %808, %807 ], [ %724, %729 ], [ %724, %713 ]
  %812 = phi i32 [ %608, %607 ], [ %809, %807 ], [ %718, %729 ], [ %718, %713 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %27) #57
  %813 = add nsw i32 %811, 1
  store i32 %813, ptr %26, align 4, !tbaa !68
  %814 = load i64, ptr %76, align 8, !tbaa !543
  %815 = trunc i64 %814 to i32
  %816 = icmp slt i32 %813, %815
  br i1 %816, label %607, label %590, !llvm.loop !733

817:                                              ; preds = %866, %590, %537
  %818 = phi ptr [ %538, %537 ], [ %591, %590 ], [ %591, %866 ]
  %819 = load i32, ptr %406, align 8, !tbaa !729
  %820 = icmp sgt i32 %819, 0
  br i1 %820, label %821, label %911

821:                                              ; preds = %817
  %822 = load ptr, ptr %95, align 8, !tbaa !65
  %823 = load ptr, ptr %81, align 8, !tbaa !65
  %824 = load ptr, ptr %102, align 8, !tbaa !65
  %825 = load ptr, ptr %109, align 8, !tbaa !65
  %826 = load ptr, ptr %88, align 8, !tbaa !65
  %827 = load ptr, ptr %116, align 8, !tbaa !65
  %828 = load ptr, ptr %123, align 8, !tbaa !65
  br label %878

829:                                              ; preds = %866, %593
  %830 = phi i64 [ 0, %593 ], [ %867, %866 ]
  %831 = getelementptr inbounds i32, ptr %595, i64 %830
  %832 = load i32, ptr %831, align 4, !tbaa !68
  %833 = zext i32 %832 to i64
  %834 = icmp eq i64 %830, %833
  br i1 %834, label %866, label %835

835:                                              ; preds = %829
  %836 = sext i32 %832 to i64
  %837 = getelementptr inbounds i32, ptr %597, i64 %836
  %838 = load i32, ptr %837, align 4, !tbaa !68
  %839 = getelementptr inbounds i32, ptr %597, i64 %830
  %840 = load i32, ptr %839, align 4, !tbaa !68
  %841 = icmp slt i32 %838, %840
  br i1 %841, label %842, label %849

842:                                              ; preds = %835
  %843 = getelementptr inbounds i32, ptr %599, i64 %830
  %844 = load i32, ptr %843, align 4, !tbaa !68
  %845 = and i32 %844, -2147483647
  %846 = icmp eq i32 %845, 1
  br i1 %846, label %847, label %849

847:                                              ; preds = %842
  %848 = getelementptr inbounds i32, ptr %605, i64 %836
  br label %861

849:                                              ; preds = %842, %835
  %850 = getelementptr inbounds i32, ptr %600, i64 %836
  %851 = load i32, ptr %850, align 4, !tbaa !68
  %852 = getelementptr inbounds i32, ptr %601, i64 %830
  store i32 %851, ptr %852, align 4, !tbaa !68
  %853 = load i32, ptr %837, align 4, !tbaa !68
  %854 = load i32, ptr %839, align 4, !tbaa !68
  %855 = icmp sgt i32 %853, %854
  br i1 %855, label %856, label %866

856:                                              ; preds = %849
  %857 = getelementptr inbounds i32, ptr %603, i64 %836
  %858 = load i32, ptr %857, align 4, !tbaa !68
  %859 = sext i32 %858 to i64
  %860 = getelementptr inbounds i32, ptr %600, i64 %859
  br label %861

861:                                              ; preds = %856, %847
  %862 = phi ptr [ %848, %847 ], [ %860, %856 ]
  %863 = phi ptr [ %601, %847 ], [ %604, %856 ]
  %864 = load i32, ptr %862, align 4, !tbaa !68
  %865 = getelementptr inbounds i32, ptr %863, i64 %830
  store i32 %864, ptr %865, align 4, !tbaa !68
  br label %866

866:                                              ; preds = %861, %849, %829
  %867 = add nuw nsw i64 %830, 1
  %868 = icmp eq i64 %867, %606
  br i1 %868, label %817, label %829, !llvm.loop !734

869:                                              ; preds = %906
  %.lcssa1 = phi i32 [ %908, %906 ]
  %870 = icmp sgt i32 %.lcssa1, 0
  br i1 %870, label %871, label %911

871:                                              ; preds = %869
  %872 = load ptr, ptr %95, align 8, !tbaa !65
  %873 = load ptr, ptr %109, align 8, !tbaa !65
  %874 = load ptr, ptr %102, align 8, !tbaa !65
  %875 = load ptr, ptr %81, align 8
  %876 = load ptr, ptr %116, align 8
  %877 = load ptr, ptr %88, align 8
  br label %921

878:                                              ; preds = %906, %821
  %879 = phi i64 [ 0, %821 ], [ %907, %906 ]
  %880 = getelementptr inbounds i32, ptr %822, i64 %879
  %881 = load i32, ptr %880, align 4, !tbaa !68
  %882 = getelementptr inbounds i32, ptr %823, i64 %879
  %883 = load i32, ptr %882, align 4, !tbaa !68
  %884 = sext i32 %881 to i64
  %885 = getelementptr inbounds i32, ptr %824, i64 %884
  %886 = load i32, ptr %885, align 4, !tbaa !68
  %887 = icmp slt i32 %883, %886
  br i1 %887, label %888, label %889

888:                                              ; preds = %878
  store i32 %883, ptr %885, align 4, !tbaa !68
  br label %889

889:                                              ; preds = %888, %878
  %890 = getelementptr inbounds i32, ptr %825, i64 %884
  %891 = load i32, ptr %890, align 4, !tbaa !68
  %892 = icmp sgt i32 %883, %891
  br i1 %892, label %893, label %894

893:                                              ; preds = %889
  store i32 %883, ptr %890, align 4, !tbaa !68
  br label %894

894:                                              ; preds = %893, %889
  %895 = getelementptr inbounds i32, ptr %826, i64 %879
  %896 = load i32, ptr %895, align 4, !tbaa !68
  %897 = getelementptr inbounds i32, ptr %827, i64 %884
  %898 = load i32, ptr %897, align 4, !tbaa !68
  %899 = icmp slt i32 %896, %898
  br i1 %899, label %900, label %901

900:                                              ; preds = %894
  store i32 %896, ptr %897, align 4, !tbaa !68
  br label %901

901:                                              ; preds = %900, %894
  %902 = getelementptr inbounds i32, ptr %828, i64 %884
  %903 = load i32, ptr %902, align 4, !tbaa !68
  %904 = icmp sgt i32 %896, %903
  br i1 %904, label %905, label %906

905:                                              ; preds = %901
  store i32 %896, ptr %902, align 4, !tbaa !68
  br label %906

906:                                              ; preds = %905, %901
  %907 = add nuw nsw i64 %879, 1
  %908 = load i32, ptr %406, align 8, !tbaa !729
  %909 = sext i32 %908 to i64
  %910 = icmp slt i64 %907, %909
  br i1 %910, label %878, label %869, !llvm.loop !735

911:                                              ; preds = %942, %869, %817
  %912 = load i32, ptr %130, align 8, !tbaa !647
  %913 = icmp slt i32 %912, 0
  br i1 %913, label %947, label %914

914:                                              ; preds = %911
  %915 = load ptr, ptr %102, align 8, !tbaa !65
  %916 = load ptr, ptr %143, align 8, !tbaa !65
  %917 = load ptr, ptr %116, align 8, !tbaa !65
  %918 = load ptr, ptr %153, align 8, !tbaa !65
  %919 = load ptr, ptr %109, align 8, !tbaa !65
  %920 = load ptr, ptr %123, align 8, !tbaa !65
  br label %958

921:                                              ; preds = %942, %871
  %922 = phi i32 [ %.lcssa1, %871 ], [ %943, %942 ]
  %923 = phi i64 [ 0, %871 ], [ %944, %942 ]
  %924 = getelementptr inbounds i32, ptr %872, i64 %923
  %925 = load i32, ptr %924, align 4, !tbaa !68
  %926 = sext i32 %925 to i64
  %927 = getelementptr inbounds i32, ptr %873, i64 %926
  %928 = load i32, ptr %927, align 4, !tbaa !68
  %929 = getelementptr inbounds i32, ptr %874, i64 %926
  %930 = load i32, ptr %929, align 4, !tbaa !68
  %931 = icmp slt i32 %928, %930
  br i1 %931, label %942, label %932

932:                                              ; preds = %921
  %933 = getelementptr inbounds i32, ptr %875, i64 %923
  %934 = load i32, ptr %933, align 4, !tbaa !68
  %935 = sub nsw i32 %934, %930
  store i32 %935, ptr %933, align 4, !tbaa !68
  %936 = getelementptr inbounds i32, ptr %876, i64 %926
  %937 = load i32, ptr %936, align 4, !tbaa !68
  %938 = getelementptr inbounds i32, ptr %877, i64 %923
  %939 = load i32, ptr %938, align 4, !tbaa !68
  %940 = sub nsw i32 %939, %937
  store i32 %940, ptr %938, align 4, !tbaa !68
  %941 = load i32, ptr %406, align 8, !tbaa !729
  br label %942

942:                                              ; preds = %932, %921
  %943 = phi i32 [ %922, %921 ], [ %941, %932 ]
  %944 = add nuw nsw i64 %923, 1
  %945 = sext i32 %943 to i64
  %946 = icmp slt i64 %944, %945
  br i1 %946, label %921, label %911, !llvm.loop !736

947:                                              ; preds = %958, %911
  %948 = load i32, ptr %818, align 4, !tbaa !731
  %949 = icmp sgt i32 %948, 0
  br i1 %949, label %950, label %1020

950:                                              ; preds = %947
  %951 = load ptr, ptr %467, align 8, !tbaa !65
  %952 = load ptr, ptr %453, align 8, !tbaa !65
  %953 = load ptr, ptr %474, align 8, !tbaa !65
  %954 = load ptr, ptr %481, align 8, !tbaa !65
  %955 = load ptr, ptr %460, align 8, !tbaa !65
  %956 = load ptr, ptr %488, align 8, !tbaa !65
  %957 = load ptr, ptr %495, align 8, !tbaa !65
  br label %987

958:                                              ; preds = %958, %914
  %959 = phi i64 [ 0, %914 ], [ %974, %958 ]
  %960 = getelementptr inbounds i32, ptr %915, i64 %959
  %961 = load i32, ptr %960, align 4, !tbaa !68
  %962 = getelementptr inbounds i32, ptr %916, i64 %959
  store i32 %961, ptr %962, align 4, !tbaa !68
  %963 = getelementptr inbounds i32, ptr %917, i64 %959
  %964 = load i32, ptr %963, align 4, !tbaa !68
  %965 = getelementptr inbounds i32, ptr %918, i64 %959
  store i32 %964, ptr %965, align 4, !tbaa !68
  %966 = load i32, ptr %960, align 4, !tbaa !68
  %967 = getelementptr inbounds i32, ptr %919, i64 %959
  %968 = load i32, ptr %967, align 4, !tbaa !68
  %969 = sub nsw i32 %968, %966
  store i32 %969, ptr %967, align 4, !tbaa !68
  %970 = load i32, ptr %963, align 4, !tbaa !68
  %971 = getelementptr inbounds i32, ptr %920, i64 %959
  %972 = load i32, ptr %971, align 4, !tbaa !68
  %973 = sub nsw i32 %972, %970
  store i32 %973, ptr %971, align 4, !tbaa !68
  store i32 0, ptr %960, align 4, !tbaa !68
  store i32 0, ptr %963, align 4, !tbaa !68
  %974 = add nuw nsw i64 %959, 1
  %975 = load i32, ptr %130, align 8, !tbaa !647
  %976 = sext i32 %975 to i64
  %977 = icmp slt i64 %959, %976
  br i1 %977, label %958, label %947, !llvm.loop !737

978:                                              ; preds = %1015
  %.lcssa = phi i32 [ %1017, %1015 ]
  %979 = icmp sgt i32 %.lcssa, 0
  br i1 %979, label %980, label %1020

980:                                              ; preds = %978
  %981 = load ptr, ptr %467, align 8, !tbaa !65
  %982 = load ptr, ptr %481, align 8, !tbaa !65
  %983 = load ptr, ptr %474, align 8, !tbaa !65
  %984 = load ptr, ptr %453, align 8
  %985 = load ptr, ptr %488, align 8
  %986 = load ptr, ptr %460, align 8
  br label %1030

987:                                              ; preds = %1015, %950
  %988 = phi i64 [ 0, %950 ], [ %1016, %1015 ]
  %989 = getelementptr inbounds i32, ptr %951, i64 %988
  %990 = load i32, ptr %989, align 4, !tbaa !68
  %991 = getelementptr inbounds i32, ptr %952, i64 %988
  %992 = load i32, ptr %991, align 4, !tbaa !68
  %993 = sext i32 %990 to i64
  %994 = getelementptr inbounds i32, ptr %953, i64 %993
  %995 = load i32, ptr %994, align 4, !tbaa !68
  %996 = icmp slt i32 %992, %995
  br i1 %996, label %997, label %998

997:                                              ; preds = %987
  store i32 %992, ptr %994, align 4, !tbaa !68
  br label %998

998:                                              ; preds = %997, %987
  %999 = getelementptr inbounds i32, ptr %954, i64 %993
  %1000 = load i32, ptr %999, align 4, !tbaa !68
  %1001 = icmp sgt i32 %992, %1000
  br i1 %1001, label %1002, label %1003

1002:                                             ; preds = %998
  store i32 %992, ptr %999, align 4, !tbaa !68
  br label %1003

1003:                                             ; preds = %1002, %998
  %1004 = getelementptr inbounds i32, ptr %955, i64 %988
  %1005 = load i32, ptr %1004, align 4, !tbaa !68
  %1006 = getelementptr inbounds i32, ptr %956, i64 %993
  %1007 = load i32, ptr %1006, align 4, !tbaa !68
  %1008 = icmp slt i32 %1005, %1007
  br i1 %1008, label %1009, label %1010

1009:                                             ; preds = %1003
  store i32 %1005, ptr %1006, align 4, !tbaa !68
  br label %1010

1010:                                             ; preds = %1009, %1003
  %1011 = getelementptr inbounds i32, ptr %957, i64 %993
  %1012 = load i32, ptr %1011, align 4, !tbaa !68
  %1013 = icmp sgt i32 %1005, %1012
  br i1 %1013, label %1014, label %1015

1014:                                             ; preds = %1010
  store i32 %1005, ptr %1011, align 4, !tbaa !68
  br label %1015

1015:                                             ; preds = %1014, %1010
  %1016 = add nuw nsw i64 %988, 1
  %1017 = load i32, ptr %818, align 4, !tbaa !731
  %1018 = sext i32 %1017 to i64
  %1019 = icmp slt i64 %1016, %1018
  br i1 %1019, label %987, label %978, !llvm.loop !738

1020:                                             ; preds = %1051, %978, %947
  %1021 = load i32, ptr %130, align 8, !tbaa !647
  %1022 = icmp slt i32 %1021, 0
  br i1 %1022, label %1056, label %1023

1023:                                             ; preds = %1020
  %1024 = load ptr, ptr %474, align 8, !tbaa !65
  %1025 = load ptr, ptr %514, align 8, !tbaa !65
  %1026 = load ptr, ptr %488, align 8, !tbaa !65
  %1027 = load ptr, ptr %524, align 8, !tbaa !65
  %1028 = load ptr, ptr %481, align 8, !tbaa !65
  %1029 = load ptr, ptr %495, align 8, !tbaa !65
  br label %1057

1030:                                             ; preds = %1051, %980
  %1031 = phi i32 [ %.lcssa, %980 ], [ %1052, %1051 ]
  %1032 = phi i64 [ 0, %980 ], [ %1053, %1051 ]
  %1033 = getelementptr inbounds i32, ptr %981, i64 %1032
  %1034 = load i32, ptr %1033, align 4, !tbaa !68
  %1035 = sext i32 %1034 to i64
  %1036 = getelementptr inbounds i32, ptr %982, i64 %1035
  %1037 = load i32, ptr %1036, align 4, !tbaa !68
  %1038 = getelementptr inbounds i32, ptr %983, i64 %1035
  %1039 = load i32, ptr %1038, align 4, !tbaa !68
  %1040 = icmp slt i32 %1037, %1039
  br i1 %1040, label %1051, label %1041

1041:                                             ; preds = %1030
  %1042 = getelementptr inbounds i32, ptr %984, i64 %1032
  %1043 = load i32, ptr %1042, align 4, !tbaa !68
  %1044 = sub nsw i32 %1043, %1039
  store i32 %1044, ptr %1042, align 4, !tbaa !68
  %1045 = getelementptr inbounds i32, ptr %985, i64 %1035
  %1046 = load i32, ptr %1045, align 4, !tbaa !68
  %1047 = getelementptr inbounds i32, ptr %986, i64 %1032
  %1048 = load i32, ptr %1047, align 4, !tbaa !68
  %1049 = sub nsw i32 %1048, %1046
  store i32 %1049, ptr %1047, align 4, !tbaa !68
  %1050 = load i32, ptr %818, align 4, !tbaa !731
  br label %1051

1051:                                             ; preds = %1041, %1030
  %1052 = phi i32 [ %1031, %1030 ], [ %1050, %1041 ]
  %1053 = add nuw nsw i64 %1032, 1
  %1054 = sext i32 %1052 to i64
  %1055 = icmp slt i64 %1053, %1054
  br i1 %1055, label %1030, label %1020, !llvm.loop !739

1056:                                             ; preds = %1057, %1020
  ret void

1057:                                             ; preds = %1057, %1023
  %1058 = phi i64 [ 0, %1023 ], [ %1073, %1057 ]
  %1059 = getelementptr inbounds i32, ptr %1024, i64 %1058
  %1060 = load i32, ptr %1059, align 4, !tbaa !68
  %1061 = getelementptr inbounds i32, ptr %1025, i64 %1058
  store i32 %1060, ptr %1061, align 4, !tbaa !68
  %1062 = getelementptr inbounds i32, ptr %1026, i64 %1058
  %1063 = load i32, ptr %1062, align 4, !tbaa !68
  %1064 = getelementptr inbounds i32, ptr %1027, i64 %1058
  store i32 %1063, ptr %1064, align 4, !tbaa !68
  %1065 = load i32, ptr %1059, align 4, !tbaa !68
  %1066 = getelementptr inbounds i32, ptr %1028, i64 %1058
  %1067 = load i32, ptr %1066, align 4, !tbaa !68
  %1068 = sub nsw i32 %1067, %1065
  store i32 %1068, ptr %1066, align 4, !tbaa !68
  %1069 = load i32, ptr %1062, align 4, !tbaa !68
  %1070 = getelementptr inbounds i32, ptr %1029, i64 %1058
  %1071 = load i32, ptr %1070, align 4, !tbaa !68
  %1072 = sub nsw i32 %1071, %1069
  store i32 %1072, ptr %1070, align 4, !tbaa !68
  store i32 0, ptr %1059, align 4, !tbaa !68
  store i32 0, ptr %1062, align 4, !tbaa !68
  %1073 = add nuw nsw i64 %1058, 1
  %1074 = load i32, ptr %130, align 8, !tbaa !647
  %1075 = sext i32 %1074 to i64
  %1076 = icmp slt i64 %1058, %1075
  br i1 %1076, label %1057, label %1056, !llvm.loop !740
}

; Function Attrs: optsize uwtable
define internal void @_ZN4Mesh15parallel_outputEPKcdiS1_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, ptr noundef %1, double noundef %2, i32 noundef %3, ptr noundef %4) #6 align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca %"class.std::vector", align 8
  %7 = alloca %"class.std::ios_base::Init", align 1
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #57
  %8 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  %9 = load i32, ptr %8, align 8, !tbaa !651
  %10 = sext i32 %9 to i64
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %7) #57
  call void @_ZNSt6vectorIdSaIdEEC2EmRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %6, i64 noundef %10, ptr noundef nonnull align 1 dereferenceable(1) %7) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #57
  %11 = load ptr, ptr %6, align 8, !tbaa !109
  store double %2, ptr %11, align 8, !tbaa !171
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %13 = load i32, ptr %12, align 4, !tbaa !650
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %89

15:                                               ; preds = %5
  %16 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.79.178, ptr noundef %1) #56
  %17 = load i32, ptr %8, align 8, !tbaa !651
  %18 = icmp slt i32 %17, 5
  br i1 %18, label %19, label %40

19:                                               ; preds = %15
  %20 = icmp sgt i32 %17, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = shl nsw i32 %3, 1
  br label %30

23:                                               ; preds = %30, %19
  %24 = call i32 @puts(ptr nonnull dereferenceable(1) %4)
  br label %86

25:                                               ; preds = %53, %45
  %26 = landingpad { ptr, i32 }
          cleanup
  %27 = load ptr, ptr %6, align 8, !tbaa !109
  %28 = icmp eq ptr %27, null
  br i1 %28, label %92, label %29

29:                                               ; preds = %25
  call void @_ZdlPv(ptr noundef nonnull %27) #58
  br label %92

30:                                               ; preds = %30, %21
  %31 = phi i64 [ 0, %21 ], [ %36, %30 ]
  %32 = load ptr, ptr %6, align 8, !tbaa !109
  %33 = getelementptr inbounds double, ptr %32, i64 %31
  %34 = load double, ptr %33, align 8, !tbaa !171
  %35 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.80.179, i32 noundef %22, ptr noundef nonnull @.str.75.180, double noundef %34) #56
  %36 = add nuw nsw i64 %31, 1
  %37 = load i32, ptr %8, align 8, !tbaa !651
  %38 = sext i32 %37 to i64
  %39 = icmp slt i64 %36, %38
  br i1 %39, label %30, label %23, !llvm.loop !741

40:                                               ; preds = %15
  %41 = load ptr, ptr %6, align 8, !tbaa !29
  %42 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", ptr %6, i64 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !29
  %44 = icmp eq ptr %41, %43
  br i1 %44, label %56, label %45

45:                                               ; preds = %40
  %46 = ptrtoint ptr %43 to i64
  %47 = ptrtoint ptr %41 to i64
  %48 = sub i64 %46, %47
  %49 = ashr exact i64 %48, 3
  %50 = call i64 @llvm.ctlz.i64(i64 %49, i1 true), !range !742
  %51 = shl nuw nsw i64 %50, 1
  %52 = xor i64 %51, 126
  invoke void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr %41, ptr %43, i64 noundef %52) #56
          to label %53 unwind label %25

53:                                               ; preds = %45
  invoke void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %41, ptr %43) #56
          to label %54 unwind label %25

54:                                               ; preds = %53
  %55 = load i32, ptr %8, align 8, !tbaa !651
  br label %56

56:                                               ; preds = %54, %40
  %57 = phi i32 [ %55, %54 ], [ %17, %40 ]
  %58 = sdiv i32 %57, 2
  %59 = and i32 %57, 1
  %60 = icmp eq i32 %59, 0
  %61 = load ptr, ptr %6, align 8, !tbaa !109
  br i1 %60, label %62, label %72

62:                                               ; preds = %56
  %63 = add nsw i32 %58, -1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds double, ptr %61, i64 %64
  %66 = load double, ptr %65, align 8, !tbaa !171
  %67 = sext i32 %58 to i64
  %68 = getelementptr inbounds double, ptr %61, i64 %67
  %69 = load double, ptr %68, align 8, !tbaa !171
  %70 = fadd double %66, %69
  %71 = fmul double %70, 5.000000e-01
  br label %77

72:                                               ; preds = %56
  %73 = add nsw i32 %58, 1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds double, ptr %61, i64 %74
  %76 = load double, ptr %75, align 8, !tbaa !171
  br label %77

77:                                               ; preds = %72, %62
  %78 = phi double [ %71, %62 ], [ %76, %72 ]
  %79 = shl nsw i32 %3, 1
  %80 = load double, ptr %61, align 8, !tbaa !171
  %81 = add nsw i32 %57, -1
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds double, ptr %61, i64 %82
  %84 = load double, ptr %83, align 8, !tbaa !171
  %85 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.82.181, i32 noundef %79, ptr noundef nonnull @.str.75.180, double noundef %80, i32 noundef %79, ptr noundef nonnull @.str.75.180, double noundef %78, i32 noundef %79, ptr noundef nonnull @.str.75.180, double noundef %84, ptr noundef %4) #56
  br label %86

86:                                               ; preds = %77, %23
  %87 = load ptr, ptr %6, align 8, !tbaa !109
  %88 = icmp eq ptr %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %86, %5
  %90 = phi ptr [ %87, %86 ], [ %11, %5 ]
  call void @_ZdlPv(ptr noundef nonnull %90) #58
  br label %91

91:                                               ; preds = %89, %86
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #57
  ret void

92:                                               ; preds = %29, %25
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #57
  resume { ptr, i32 } %26
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #21

; Function Attrs: optsize uwtable
define internal void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr %0, ptr %1, i64 noundef %2) #6 comdat {
  %4 = alloca %"class.std::ios_base::Init", align 1
  %5 = alloca %"class.std::ios_base::Init", align 1
  %6 = ptrtoint ptr %0 to i64
  %7 = ptrtoint ptr %1 to i64
  %8 = sub i64 %7, %6
  %9 = icmp sgt i64 %8, 128
  br i1 %9, label %10, label %44

10:                                               ; preds = %3
  %11 = getelementptr inbounds double, ptr %0, i64 1
  br label %12

12:                                               ; preds = %39, %10
  %13 = phi i64 [ %8, %10 ], [ %42, %39 ]
  %14 = phi i64 [ %2, %10 ], [ %40, %39 ]
  %15 = phi ptr [ %1, %10 ], [ %.lcssa2.lcssa.lcssa, %39 ]
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %12
  %.lcssa5 = phi ptr [ %15, %12 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5)
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_(ptr %0, ptr %.lcssa5, ptr noundef nonnull align 1 dereferenceable(1) %4) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  call void @_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_(ptr %0, ptr %.lcssa5, ptr noundef nonnull align 1 dereferenceable(1) %5) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5)
  br label %44

18:                                               ; preds = %12
  %19 = lshr i64 %13, 4
  %20 = getelementptr inbounds double, ptr %0, i64 %19
  %21 = getelementptr inbounds double, ptr %15, i64 -1
  tail call void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_S9_T0_(ptr %0, ptr nonnull %11, ptr %20, ptr nonnull %21) #56
  br label %22

22:                                               ; preds = %38, %18
  %23 = phi ptr [ %11, %18 ], [ %.lcssa.lcssa, %38 ]
  %24 = phi ptr [ %15, %18 ], [ %.lcssa4, %38 ]
  %25 = load double, ptr %0, align 8, !tbaa !171
  br label %26

26:                                               ; preds = %26, %22
  %27 = phi ptr [ %23, %22 ], [ %30, %26 ]
  %28 = load double, ptr %27, align 8, !tbaa !171
  %29 = fcmp olt double %28, %25
  %30 = getelementptr inbounds double, ptr %27, i64 1
  br i1 %29, label %26, label %31, !llvm.loop !743

31:                                               ; preds = %31, %26
  %.lcssa2 = phi ptr [ %.lcssa2, %31 ], [ %27, %26 ]
  %.lcssa1 = phi double [ %.lcssa1, %31 ], [ %28, %26 ]
  %.lcssa = phi ptr [ %.lcssa, %31 ], [ %30, %26 ]
  %32 = phi ptr [ %33, %31 ], [ %24, %26 ]
  %33 = getelementptr inbounds double, ptr %32, i64 -1
  %34 = load double, ptr %33, align 8, !tbaa !171
  %35 = fcmp olt double %25, %34
  br i1 %35, label %31, label %36, !llvm.loop !744

36:                                               ; preds = %31
  %.lcssa4 = phi ptr [ %33, %31 ]
  %.lcssa3 = phi double [ %34, %31 ]
  %.lcssa2.lcssa = phi ptr [ %.lcssa2, %31 ]
  %.lcssa1.lcssa = phi double [ %.lcssa1, %31 ]
  %.lcssa.lcssa = phi ptr [ %.lcssa, %31 ]
  %37 = icmp ult ptr %.lcssa2.lcssa, %.lcssa4
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  store double %.lcssa3, ptr %.lcssa2.lcssa, align 8, !tbaa !171
  store double %.lcssa1.lcssa, ptr %.lcssa4, align 8, !tbaa !171
  br label %22, !llvm.loop !745

39:                                               ; preds = %36
  %.lcssa2.lcssa.lcssa = phi ptr [ %.lcssa2.lcssa, %36 ]
  %40 = add nsw i64 %14, -1
  tail call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(ptr nonnull %.lcssa2.lcssa.lcssa, ptr %15, i64 noundef %40) #56
  %41 = ptrtoint ptr %.lcssa2.lcssa.lcssa to i64
  %42 = sub i64 %41, %6
  %43 = icmp sgt i64 %42, 128
  br i1 %43, label %12, label %44, !llvm.loop !746

44:                                               ; preds = %39, %17, %3
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %0, ptr %1) #6 comdat {
  %3 = ptrtoint ptr %1 to i64
  %4 = ptrtoint ptr %0 to i64
  %5 = sub i64 %3, %4
  %6 = icmp sgt i64 %5, 128
  br i1 %6, label %7, label %27

7:                                                ; preds = %2
  %8 = getelementptr inbounds double, ptr %0, i64 16
  tail call void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %0, ptr nonnull %8) #56
  %9 = icmp eq ptr %8, %1
  br i1 %9, label %28, label %10

10:                                               ; preds = %23, %7
  %11 = phi ptr [ %25, %23 ], [ %8, %7 ]
  %12 = load double, ptr %11, align 8, !tbaa !171
  %13 = getelementptr inbounds double, ptr %11, i64 -1
  %14 = load double, ptr %13, align 8, !tbaa !171
  %15 = fcmp olt double %12, %14
  br i1 %15, label %16, label %23

16:                                               ; preds = %16, %10
  %17 = phi double [ %21, %16 ], [ %14, %10 ]
  %18 = phi ptr [ %20, %16 ], [ %13, %10 ]
  %19 = phi ptr [ %18, %16 ], [ %11, %10 ]
  store double %17, ptr %19, align 8, !tbaa !171
  %20 = getelementptr inbounds double, ptr %18, i64 -1
  %21 = load double, ptr %20, align 8, !tbaa !171
  %22 = fcmp olt double %12, %21
  br i1 %22, label %16, label %23, !llvm.loop !747

23:                                               ; preds = %16, %10
  %24 = phi ptr [ %11, %10 ], [ %18, %16 ]
  store double %12, ptr %24, align 8, !tbaa !171
  %25 = getelementptr inbounds double, ptr %11, i64 1
  %26 = icmp eq ptr %25, %1
  br i1 %26, label %28, label %10, !llvm.loop !748

27:                                               ; preds = %2
  tail call void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %0, ptr %1) #56
  br label %28

28:                                               ; preds = %27, %23, %7
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(ptr %0, ptr %1) #6 comdat {
  %3 = icmp eq ptr %0, %1
  br i1 %3, label %38, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds double, ptr %0, i64 1
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %38, label %7

7:                                                ; preds = %4
  %8 = ptrtoint ptr %0 to i64
  br label %9

9:                                                ; preds = %34, %7
  %10 = phi ptr [ %5, %7 ], [ %36, %34 ]
  %11 = phi ptr [ %0, %7 ], [ %10, %34 ]
  %12 = load double, ptr %10, align 8, !tbaa !171
  %13 = load double, ptr %0, align 8, !tbaa !171
  %14 = fcmp olt double %12, %13
  br i1 %14, label %15, label %24

15:                                               ; preds = %9
  %16 = icmp eq ptr %10, %0
  br i1 %16, label %34, label %17

17:                                               ; preds = %15
  %18 = ptrtoint ptr %10 to i64
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 3
  %21 = sub nsw i64 0, %20
  %22 = getelementptr inbounds double, ptr %11, i64 2
  %23 = getelementptr inbounds double, ptr %22, i64 %21
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %23, ptr nonnull align 8 %0, i64 %19, i1 false)
  br label %34

24:                                               ; preds = %9
  %25 = load double, ptr %11, align 8, !tbaa !171
  %26 = fcmp olt double %12, %25
  br i1 %26, label %27, label %34

27:                                               ; preds = %27, %24
  %28 = phi double [ %32, %27 ], [ %25, %24 ]
  %29 = phi ptr [ %31, %27 ], [ %11, %24 ]
  %30 = phi ptr [ %29, %27 ], [ %10, %24 ]
  store double %28, ptr %30, align 8, !tbaa !171
  %31 = getelementptr inbounds double, ptr %29, i64 -1
  %32 = load double, ptr %31, align 8, !tbaa !171
  %33 = fcmp olt double %12, %32
  br i1 %33, label %27, label %34, !llvm.loop !747

34:                                               ; preds = %27, %24, %17, %15
  %35 = phi ptr [ %0, %15 ], [ %0, %17 ], [ %10, %24 ], [ %29, %27 ]
  store double %12, ptr %35, align 8, !tbaa !171
  %36 = getelementptr inbounds double, ptr %10, i64 1
  %37 = icmp eq ptr %36, %1
  br i1 %37, label %38, label %9, !llvm.loop !749

38:                                               ; preds = %34, %4, %2
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_(ptr %0, ptr %1, ptr noundef nonnull align 1 dereferenceable(1) %2) #6 comdat {
  %4 = ptrtoint ptr %1 to i64
  %5 = ptrtoint ptr %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = icmp slt i64 %6, 16
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = add nsw i64 %7, -2
  %11 = lshr i64 %10, 1
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi i64 [ %11, %9 ], [ %17, %12 ]
  %14 = getelementptr inbounds double, ptr %0, i64 %13
  %15 = load double, ptr %14, align 8, !tbaa !171
  tail call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_(ptr %0, i64 noundef %13, i64 noundef %7, double noundef %15) #56
  %16 = icmp eq i64 %13, 0
  %17 = add nsw i64 %13, -1
  br i1 %16, label %18, label %12, !llvm.loop !750

18:                                               ; preds = %12, %3
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_(ptr %0, ptr %1, ptr noundef nonnull align 1 dereferenceable(1) %2) #13 comdat {
  %4 = ptrtoint ptr %0 to i64
  %5 = ptrtoint ptr %1 to i64
  %6 = sub i64 %5, %4
  %7 = icmp sgt i64 %6, 8
  br i1 %7, label %8, label %17

8:                                                ; preds = %8, %3
  %9 = phi ptr [ %10, %8 ], [ %1, %3 ]
  %10 = getelementptr inbounds double, ptr %9, i64 -1
  %11 = load double, ptr %10, align 8, !tbaa !171
  %12 = load double, ptr %0, align 8, !tbaa !171
  store double %12, ptr %10, align 8, !tbaa !171
  %13 = ptrtoint ptr %10 to i64
  %14 = sub i64 %13, %4
  %15 = ashr exact i64 %14, 3
  tail call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_(ptr nonnull %0, i64 noundef 0, i64 noundef %15, double noundef %11) #56
  %16 = icmp sgt i64 %14, 8
  br i1 %16, label %8, label %17, !llvm.loop !751

17:                                               ; preds = %8, %3
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_S9_T0_(ptr %0, ptr %1, ptr %2, ptr %3) #13 comdat {
  %5 = load double, ptr %1, align 8, !tbaa !171
  %6 = load double, ptr %2, align 8, !tbaa !171
  %7 = fcmp olt double %5, %6
  %8 = load double, ptr %3, align 8, !tbaa !171
  br i1 %7, label %9, label %18

9:                                                ; preds = %4
  %10 = fcmp olt double %6, %8
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = load double, ptr %0, align 8, !tbaa !171
  store double %6, ptr %0, align 8, !tbaa !171
  store double %12, ptr %2, align 8, !tbaa !171
  br label %27

13:                                               ; preds = %9
  %14 = fcmp olt double %5, %8
  %15 = load double, ptr %0, align 8, !tbaa !171
  br i1 %14, label %16, label %17

16:                                               ; preds = %13
  store double %8, ptr %0, align 8, !tbaa !171
  store double %15, ptr %3, align 8, !tbaa !171
  br label %27

17:                                               ; preds = %13
  store double %5, ptr %0, align 8, !tbaa !171
  store double %15, ptr %1, align 8, !tbaa !171
  br label %27

18:                                               ; preds = %4
  %19 = fcmp olt double %5, %8
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = load double, ptr %0, align 8, !tbaa !171
  store double %5, ptr %0, align 8, !tbaa !171
  store double %21, ptr %1, align 8, !tbaa !171
  br label %27

22:                                               ; preds = %18
  %23 = fcmp olt double %6, %8
  %24 = load double, ptr %0, align 8, !tbaa !171
  br i1 %23, label %25, label %26

25:                                               ; preds = %22
  store double %8, ptr %0, align 8, !tbaa !171
  store double %24, ptr %3, align 8, !tbaa !171
  br label %27

26:                                               ; preds = %22
  store double %6, ptr %0, align 8, !tbaa !171
  store double %24, ptr %2, align 8, !tbaa !171
  br label %27

27:                                               ; preds = %26, %25, %20, %17, %16, %11
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_(ptr %0, i64 noundef %1, i64 noundef %2, double noundef %3) #6 comdat {
  %5 = add nsw i64 %2, -1
  %6 = sdiv i64 %5, 2
  %7 = icmp sgt i64 %6, %1
  br i1 %7, label %8, label %23

8:                                                ; preds = %8, %4
  %9 = phi i64 [ %18, %8 ], [ %1, %4 ]
  %10 = shl i64 %9, 1
  %11 = add i64 %10, 2
  %12 = getelementptr inbounds double, ptr %0, i64 %11
  %13 = or i64 %10, 1
  %14 = getelementptr inbounds double, ptr %0, i64 %13
  %15 = load double, ptr %12, align 8, !tbaa !171
  %16 = load double, ptr %14, align 8, !tbaa !171
  %17 = fcmp olt double %15, %16
  %18 = select i1 %17, i64 %13, i64 %11
  %19 = getelementptr inbounds double, ptr %0, i64 %18
  %20 = load double, ptr %19, align 8, !tbaa !171
  %21 = getelementptr inbounds double, ptr %0, i64 %9
  store double %20, ptr %21, align 8, !tbaa !171
  %22 = icmp slt i64 %18, %6
  br i1 %22, label %8, label %23, !llvm.loop !752

23:                                               ; preds = %8, %4
  %24 = phi i64 [ %1, %4 ], [ %18, %8 ]
  %25 = and i64 %2, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %23
  %28 = add nsw i64 %2, -2
  %29 = sdiv i64 %28, 2
  %30 = icmp eq i64 %24, %29
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = shl i64 %24, 1
  %33 = or i64 %32, 1
  %34 = getelementptr inbounds double, ptr %0, i64 %33
  %35 = load double, ptr %34, align 8, !tbaa !171
  %36 = getelementptr inbounds double, ptr %0, i64 %24
  store double %35, ptr %36, align 8, !tbaa !171
  br label %37

37:                                               ; preds = %31, %27, %23
  %38 = phi i64 [ %33, %31 ], [ %24, %27 ], [ %24, %23 ]
  %39 = icmp sgt i64 %38, %1
  br i1 %39, label %40, label %50

40:                                               ; preds = %47, %37
  %41 = phi i64 [ %43, %47 ], [ %38, %37 ]
  %42 = add nsw i64 %41, -1
  %43 = sdiv i64 %42, 2
  %44 = getelementptr inbounds double, ptr %0, i64 %43
  %45 = load double, ptr %44, align 8, !tbaa !171
  %46 = fcmp olt double %45, %3
  br i1 %46, label %47, label %50

47:                                               ; preds = %40
  %48 = getelementptr inbounds double, ptr %0, i64 %41
  store double %45, ptr %48, align 8, !tbaa !171
  %49 = icmp sgt i64 %43, %1
  br i1 %49, label %40, label %50, !llvm.loop !753

50:                                               ; preds = %47, %40, %37
  %51 = phi i64 [ %38, %37 ], [ %41, %40 ], [ %43, %47 ]
  %52 = getelementptr inbounds double, ptr %0, i64 %51
  store double %3, ptr %52, align 8, !tbaa !171
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: read) uwtable
define internal noundef i64 @_ZN4Mesh19get_checkpoint_sizeEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0) #4 align 2 {
  %2 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %3 = load i64, ptr %2, align 8, !tbaa !543
  %4 = mul i64 %3, 12
  %5 = add i64 %4, 448
  ret i64 %5
}

; Function Attrs: optsize uwtable
define internal void @_ZN4Mesh16store_checkpointEP4Crux(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef %1) #6 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i32, align 4
  %4 = alloca [3 x i32], align 4
  %5 = alloca [3 x i32], align 4
  %6 = alloca [1 x double], align 8
  %7 = alloca %class.MallocPlus, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #57
  %8 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %10 = load ptr, ptr %9, align 8, !tbaa !639
  %11 = tail call noundef i64 @_ZN10MallocPlus19get_memory_capacityEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef %10) #56
  %12 = trunc i64 %11 to i32
  store i32 %12, ptr %3, align 4, !tbaa !68
  call void @_ZN4Crux16store_named_intsEPKciPim(ptr noundef nonnull align 4 dereferenceable(12) %1, ptr noundef nonnull @.str.87, i32 noundef 7, ptr noundef nonnull %3, i64 noundef 1) #56
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #57
  store i32 103, ptr %4, align 4, !tbaa !68
  %13 = load i32, ptr %0, align 8, !tbaa !646
  %14 = getelementptr inbounds [3 x i32], ptr %4, i64 0, i64 1
  store i32 %13, ptr %14, align 4, !tbaa !68
  %15 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %16 = load i32, ptr %15, align 8, !tbaa !647
  %17 = getelementptr inbounds [3 x i32], ptr %4, i64 0, i64 2
  store i32 %16, ptr %17, align 4, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #57
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %19 = load i64, ptr %18, align 8, !tbaa !543
  %20 = trunc i64 %19 to i32
  store i32 %20, ptr %5, align 4, !tbaa !68
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  %22 = load i64, ptr %21, align 8, !tbaa !652
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds [3 x i32], ptr %5, i64 0, i64 1
  store i32 %23, ptr %24, align 4, !tbaa !68
  %25 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 18
  %26 = load i32, ptr %25, align 8, !tbaa !649
  %27 = getelementptr inbounds [3 x i32], ptr %5, i64 0, i64 2
  store i32 %26, ptr %27, align 4, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #57
  %28 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 17
  %29 = load double, ptr %28, align 8, !tbaa !648
  store double %29, ptr %6, align 8, !tbaa !171
  %30 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %5, i64 noundef 3, i64 noundef 4, ptr noundef nonnull @.str.88, i32 noundef 16) #56
  %31 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %4, i64 noundef 3, i64 noundef 4, ptr noundef nonnull @.str.89, i32 noundef 48) #56
  %32 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %6, i64 noundef 1, i64 noundef 8, ptr noundef nonnull @.str.90, i32 noundef 16) #56
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5
  %34 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %33, i64 noundef 4, i64 noundef 4, ptr noundef nonnull @.str.91, i32 noundef 16) #56
  %35 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 6
  %36 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %35, i64 noundef 4, i64 noundef 4, ptr noundef nonnull @.str.92, i32 noundef 16) #56
  %37 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3
  %38 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %37, i64 noundef 24, i64 noundef 8, ptr noundef nonnull @.str.93, i32 noundef 16) #56
  %39 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4
  %40 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %39, i64 noundef 24, i64 noundef 8, ptr noundef nonnull @.str.94, i32 noundef 16) #56
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EEC2ERKSG_(ptr noundef nonnull align 8 dereferenceable(48) %7, ptr noundef nonnull align 8 dereferenceable(48) %8) #56
  %41 = getelementptr inbounds %class.MallocPlus, ptr %7, i64 0, i32 1
  %42 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EEC2ERKSB_(ptr noundef nonnull align 8 dereferenceable(48) %41, ptr noundef nonnull align 8 dereferenceable(48) %42) #56
          to label %47 unwind label %45

43:                                               ; preds = %49, %45
  %44 = phi { ptr, i32 } [ %46, %45 ], [ %50, %49 ]
  resume { ptr, i32 } %44

45:                                               ; preds = %2
  %46 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %7) #59
  br label %43

47:                                               ; preds = %2
  invoke void @_ZN4Crux16store_MallocPlusE10MallocPlus(ptr noundef nonnull align 4 dereferenceable(12) %1, ptr noundef nonnull %7) #56
          to label %48 unwind label %49

48:                                               ; preds = %47
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %41) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %7) #59
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %5) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %4) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %6) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %33) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %35) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %37) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %39) #56
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #57
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #57
  ret void

49:                                               ; preds = %47
  %50 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %41) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %7) #59
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #57
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #57
  br label %43
}

; Function Attrs: optsize uwtable
define internal void @_ZN4Mesh18restore_checkpointEP4Crux(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef nonnull %1) #6 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i32, align 4
  %4 = alloca [3 x i32], align 4
  %5 = alloca [3 x i32], align 4
  %6 = alloca [1 x double], align 8
  %7 = alloca %class.MallocPlus, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #57
  call void @_ZN4Crux18restore_named_intsEPKciPim(ptr noundef nonnull align 4 dereferenceable(12) %1, ptr noundef nonnull @.str.87, i32 noundef 7, ptr noundef nonnull %3, i64 noundef 1) #56
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #57
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #57
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #57
  %8 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %10 = load ptr, ptr %9, align 8, !tbaa !684
  %11 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef %10) #56
  %12 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %13 = load ptr, ptr %12, align 8, !tbaa !685
  %14 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef %13) #56
  %15 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %16 = load ptr, ptr %15, align 8, !tbaa !686
  %17 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef %16) #56
  %18 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %19 = load ptr, ptr %18, align 8, !tbaa !687
  %20 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef %19) #56
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 68
  %22 = load ptr, ptr %21, align 8, !tbaa !682
  %23 = call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef %22) #56
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %21, i8 0, i64 40, i1 false)
  %24 = load i32, ptr %3, align 4, !tbaa !68
  %25 = sext i32 %24 to i64
  call void @_ZN4Mesh8allocateEm(ptr noundef nonnull align 8 dereferenceable(2288) %0, i64 noundef %25) #56
  %26 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %4, i64 noundef 3, i64 noundef 4, ptr noundef nonnull @.str.88, i32 noundef 16) #56
  %27 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %5, i64 noundef 3, i64 noundef 4, ptr noundef nonnull @.str.89, i32 noundef 48) #56
  %28 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %6, i64 noundef 1, i64 noundef 8, ptr noundef nonnull @.str.90, i32 noundef 48) #56
  %29 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5
  %30 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %29, i64 noundef 4, i64 noundef 4, ptr noundef nonnull @.str.91, i32 noundef 16) #56
  %31 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 6
  %32 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %31, i64 noundef 4, i64 noundef 4, ptr noundef nonnull @.str.92, i32 noundef 16) #56
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3
  %34 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %33, i64 noundef 24, i64 noundef 8, ptr noundef nonnull @.str.93, i32 noundef 16) #56
  %35 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4
  %36 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %35, i64 noundef 24, i64 noundef 8, ptr noundef nonnull @.str.94, i32 noundef 16) #56
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EEC2ERKSG_(ptr noundef nonnull align 8 dereferenceable(48) %7, ptr noundef nonnull align 8 dereferenceable(48) %8) #56
  %37 = getelementptr inbounds %class.MallocPlus, ptr %7, i64 0, i32 1
  %38 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1, i32 1
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EEC2ERKSB_(ptr noundef nonnull align 8 dereferenceable(48) %37, ptr noundef nonnull align 8 dereferenceable(48) %38) #56
          to label %43 unwind label %41

39:                                               ; preds = %49, %41
  %40 = phi { ptr, i32 } [ %42, %41 ], [ %50, %49 ]
  resume { ptr, i32 } %40

41:                                               ; preds = %2
  %42 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %7) #59
  br label %39

43:                                               ; preds = %2
  invoke void @_ZN4Crux18restore_MallocPlusE10MallocPlus(ptr noundef nonnull align 4 dereferenceable(12) %1, ptr noundef nonnull %7) #56
          to label %44 unwind label %49

44:                                               ; preds = %43
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %37) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %7) #59
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %4) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %5) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %6) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %29) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %31) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %33) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %8, ptr noundef nonnull %35) #56
  %45 = load i32, ptr %5, align 4, !tbaa !68
  %46 = icmp eq i32 %45, 103
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.95, i32 noundef %45, i32 noundef 103) #56
  call void @exit(i32 noundef 0) #67
  unreachable

49:                                               ; preds = %43
  %50 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %37) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %7) #59
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #57
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #57
  br label %39

51:                                               ; preds = %44
  %52 = load i32, ptr %4, align 4, !tbaa !68
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  store i64 %53, ptr %54, align 8, !tbaa !543
  %55 = getelementptr inbounds [3 x i32], ptr %4, i64 0, i64 1
  %56 = load i32, ptr %55, align 4, !tbaa !68
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 47
  store i64 %57, ptr %58, align 8, !tbaa !652
  %59 = getelementptr inbounds [3 x i32], ptr %4, i64 0, i64 2
  %60 = load i32, ptr %59, align 4, !tbaa !68
  %61 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 18
  store i32 %60, ptr %61, align 8, !tbaa !649
  %62 = getelementptr inbounds [3 x i32], ptr %5, i64 0, i64 1
  %63 = load i32, ptr %62, align 4, !tbaa !68
  store i32 %63, ptr %0, align 8, !tbaa !646
  %64 = getelementptr inbounds [3 x i32], ptr %5, i64 0, i64 2
  %65 = load i32, ptr %64, align 4, !tbaa !68
  %66 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  store i32 %65, ptr %66, align 8, !tbaa !647
  %67 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %68 = load i32, ptr %67, align 4, !tbaa !650
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %51
  %71 = load double, ptr %6, align 8, !tbaa !171
  %72 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 17
  store double %71, ptr %72, align 8, !tbaa !648
  br label %171

73:                                               ; preds = %51
  %74 = call i32 @putchar(i32 10)
  %75 = call i32 @puts(ptr nonnull dereferenceable(1) @str.160)
  br label %78

76:                                               ; preds = %78
  %77 = call i32 @puts(ptr nonnull dereferenceable(1) @str.162)
  br label %87

78:                                               ; preds = %78, %73
  %79 = phi i64 [ 0, %73 ], [ %85, %78 ]
  %80 = getelementptr inbounds [3 x ptr], ptr @__const._ZN4Mesh18restore_checkpointEP4Crux.int_dist_vals_descriptor, i64 0, i64 %79
  %81 = load ptr, ptr %80, align 8, !tbaa !29
  %82 = getelementptr inbounds [3 x i32], ptr %4, i64 0, i64 %79
  %83 = load i32, ptr %82, align 4, !tbaa !68
  %84 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef %81, i32 noundef %83) #56
  %85 = add nuw nsw i64 %79, 1
  %86 = icmp eq i64 %85, 3
  br i1 %86, label %76, label %78, !llvm.loop !754

87:                                               ; preds = %87, %76
  %88 = phi i64 [ 0, %76 ], [ %94, %87 ]
  %89 = getelementptr inbounds [3 x ptr], ptr @__const._ZN4Mesh18restore_checkpointEP4Crux.int_vals_descriptor, i64 0, i64 %88
  %90 = load ptr, ptr %89, align 8, !tbaa !29
  %91 = getelementptr inbounds [3 x i32], ptr %5, i64 0, i64 %88
  %92 = load i32, ptr %91, align 4, !tbaa !68
  %93 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef %90, i32 noundef %92) #56
  %94 = add nuw nsw i64 %88, 1
  %95 = icmp eq i64 %94, 3
  br i1 %95, label %96, label %87, !llvm.loop !755

96:                                               ; preds = %87
  %97 = call i32 @puts(ptr nonnull dereferenceable(1) @str.162)
  %98 = call i32 @putchar(i32 10)
  %99 = load i32, ptr %67, align 4, !tbaa !650
  %100 = load double, ptr %6, align 8, !tbaa !171
  %101 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 17
  store double %100, ptr %101, align 8, !tbaa !648
  %102 = icmp eq i32 %99, 0
  br i1 %102, label %103, label %171

103:                                              ; preds = %96
  %104 = call i32 @putchar(i32 10)
  %105 = call i32 @puts(ptr nonnull dereferenceable(1) @str.159)
  %106 = load double, ptr %6, align 8, !tbaa !171
  %107 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef nonnull @.str.105, double noundef %106) #56
  %108 = call i32 @puts(ptr nonnull dereferenceable(1) @str.159)
  %109 = call i32 @putchar(i32 10)
  %110 = load i32, ptr %67, align 4, !tbaa !650
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %171

112:                                              ; preds = %103
  %113 = call i32 @puts(ptr nonnull dereferenceable(1) @str.155)
  br label %117

114:                                              ; preds = %117
  %115 = call i32 @puts(ptr nonnull dereferenceable(1) @str.155)
  %116 = call i32 @puts(ptr nonnull dereferenceable(1) @str.157)
  br label %126

117:                                              ; preds = %117, %112
  %118 = phi i64 [ 0, %112 ], [ %124, %117 ]
  %119 = getelementptr inbounds [4 x ptr], ptr @_ZL23mesh_counter_descriptor, i64 0, i64 %118
  %120 = load ptr, ptr %119, align 8, !tbaa !29
  %121 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 5, i64 %118
  %122 = load i32, ptr %121, align 4, !tbaa !68
  %123 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef %120, i32 noundef %122) #56
  %124 = add nuw nsw i64 %118, 1
  %125 = icmp eq i64 %124, 4
  br i1 %125, label %114, label %117, !llvm.loop !756

126:                                              ; preds = %126, %114
  %127 = phi i64 [ 0, %114 ], [ %133, %126 ]
  %128 = getelementptr inbounds [4 x ptr], ptr @_ZL23mesh_counter_descriptor, i64 0, i64 %127
  %129 = load ptr, ptr %128, align 8, !tbaa !29
  %130 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 6, i64 %127
  %131 = load i32, ptr %130, align 4, !tbaa !68
  %132 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.103, ptr noundef %129, i32 noundef %131) #56
  %133 = add nuw nsw i64 %127, 1
  %134 = icmp eq i64 %133, 4
  br i1 %134, label %135, label %126, !llvm.loop !757

135:                                              ; preds = %126
  %136 = call i32 @puts(ptr nonnull dereferenceable(1) @str.157)
  %137 = call i32 @putchar(i32 10)
  %138 = load i32, ptr %67, align 4, !tbaa !650
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %171

140:                                              ; preds = %135
  %141 = call i32 @puts(ptr nonnull dereferenceable(1) @str.153)
  br label %142

142:                                              ; preds = %142, %140
  %143 = phi i64 [ 0, %140 ], [ %149, %142 ]
  %144 = getelementptr inbounds [24 x ptr], ptr @_ZL21mesh_timer_descriptor, i64 0, i64 %143
  %145 = load ptr, ptr %144, align 8, !tbaa !29
  %146 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 %143
  %147 = load double, ptr %146, align 8, !tbaa !171
  %148 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.107, ptr noundef %145, double noundef %147) #56
  %149 = add nuw nsw i64 %143, 1
  %150 = icmp eq i64 %149, 24
  br i1 %150, label %151, label %142, !llvm.loop !758

151:                                              ; preds = %142
  %152 = call i32 @puts(ptr nonnull dereferenceable(1) @str.153)
  %153 = call i32 @putchar(i32 10)
  %154 = load i32, ptr %67, align 4, !tbaa !650
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %171

156:                                              ; preds = %151
  %157 = call i32 @putchar(i32 10)
  %158 = call i32 @puts(ptr nonnull dereferenceable(1) @str.151)
  br label %162

159:                                              ; preds = %162
  %160 = call i32 @puts(ptr nonnull dereferenceable(1) @str.151)
  %161 = call i32 @putchar(i32 10)
  br label %171

162:                                              ; preds = %162, %156
  %163 = phi i64 [ 0, %156 ], [ %169, %162 ]
  %164 = getelementptr inbounds [24 x ptr], ptr @_ZL21mesh_timer_descriptor, i64 0, i64 %163
  %165 = load ptr, ptr %164, align 8, !tbaa !29
  %166 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 4, i64 %163
  %167 = load i64, ptr %166, align 8, !tbaa !759
  %168 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.112, ptr noundef %165, i64 noundef %167) #56
  %169 = add nuw nsw i64 %163, 1
  %170 = icmp eq i64 %169, 24
  br i1 %170, label %159, label %162, !llvm.loop !761

171:                                              ; preds = %159, %151, %135, %103, %96, %70
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #57
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #57
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #9

; Function Attrs: optsize uwtable
define internal void @_ZN4Mesh17partition_measureEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0) #6 align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::list", align 8
  %3 = alloca %"class.std::__cxx11::list", align 8
  %4 = alloca %"class.std::__cxx11::list", align 8
  %5 = alloca %"class.std::__cxx11::list", align 8
  %6 = load i32, ptr @measure_type, align 4, !tbaa !68
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %917, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %10 = load i64, ptr %9, align 8, !tbaa !543
  %11 = add i64 %10, 127
  %12 = lshr i64 %11, 7
  %13 = trunc i64 %12 to i32
  switch i32 %6, label %907 [
    i32 1, label %46
    i32 2, label %36
    i32 3, label %26
    i32 4, label %14
  ]

14:                                               ; preds = %8
  %15 = icmp eq i32 %13, 0
  br i1 %15, label %907, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %4, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %4, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %5, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %5, i64 0, i32 1
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %22 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %23 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %25 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  br label %579

26:                                               ; preds = %8
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %907, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %3, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %3, i64 0, i32 1
  %31 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %32 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %34 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %35 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  br label %375

36:                                               ; preds = %8
  %37 = icmp eq i32 %13, 0
  br i1 %37, label %907, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %2, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %2, i64 0, i32 1
  %41 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %42 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %43 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %44 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %45 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  br label %171

46:                                               ; preds = %8
  %47 = icmp eq i32 %13, 0
  br i1 %47, label %907, label %48

48:                                               ; preds = %46
  %49 = load double, ptr @_ZZN4Mesh17partition_measureEvE13offtile_ratio, align 8, !tbaa !171
  %50 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %51 = load ptr, ptr %50, align 8
  %52 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %55 = load ptr, ptr %54, align 8
  %56 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %57 = load ptr, ptr %56, align 8
  %58 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %59 = load ptr, ptr %58, align 8
  br label %60

60:                                               ; preds = %70, %48
  %61 = phi i32 [ 128, %48 ], [ %75, %70 ]
  %62 = phi i64 [ 0, %48 ], [ %71, %70 ]
  %63 = phi i32 [ 0, %48 ], [ %66, %70 ]
  %64 = phi double [ %49, %48 ], [ %74, %70 ]
  %65 = shl i32 %63, 7
  %66 = add nuw i32 %63, 1
  %67 = shl i32 %66, 7
  %68 = shl i64 %62, 32
  %69 = ashr exact i64 %68, 32
  br label %77

70:                                               ; preds = %166
  %.lcssa = phi i32 [ %167, %166 ]
  %71 = add nsw i64 %69, 128
  %72 = sitofp i32 %.lcssa to double
  %73 = fmul double %72, 7.812500e-03
  %74 = fadd double %73, %64
  %75 = add i32 %61, 128
  %76 = icmp eq i32 %66, %13
  br i1 %76, label %906, label %60, !llvm.loop !762

77:                                               ; preds = %166, %60
  %78 = phi i64 [ %69, %60 ], [ %168, %166 ]
  %79 = phi i32 [ 0, %60 ], [ %167, %166 ]
  %80 = icmp ugt i64 %10, %78
  br i1 %80, label %81, label %166

81:                                               ; preds = %77
  %82 = getelementptr inbounds i32, ptr %51, i64 %78
  %83 = load i32, ptr %82, align 4, !tbaa !68
  %84 = icmp slt i32 %83, %65
  %85 = icmp sge i32 %83, %67
  %86 = or i1 %84, %85
  %87 = zext i1 %86 to i32
  %88 = add nsw i32 %79, %87
  %89 = sext i32 %83 to i64
  %90 = getelementptr inbounds i32, ptr %53, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !68
  %92 = getelementptr inbounds i32, ptr %53, i64 %78
  %93 = load i32, ptr %92, align 4, !tbaa !68
  %94 = icmp sgt i32 %91, %93
  br i1 %94, label %95, label %103

95:                                               ; preds = %81
  %96 = getelementptr inbounds i32, ptr %55, i64 %89
  %97 = load i32, ptr %96, align 4, !tbaa !68
  %98 = icmp slt i32 %97, %65
  %99 = icmp sge i32 %97, %67
  %100 = or i1 %98, %99
  %101 = zext i1 %100 to i32
  %102 = add nsw i32 %88, %101
  br label %103

103:                                              ; preds = %95, %81
  %104 = phi i32 [ %88, %81 ], [ %102, %95 ]
  %105 = getelementptr inbounds i32, ptr %57, i64 %78
  %106 = load i32, ptr %105, align 4, !tbaa !68
  %107 = icmp slt i32 %106, %65
  %108 = icmp sge i32 %106, %67
  %109 = or i1 %107, %108
  %110 = zext i1 %109 to i32
  %111 = add nsw i32 %104, %110
  %112 = sext i32 %106 to i64
  %113 = getelementptr inbounds i32, ptr %53, i64 %112
  %114 = load i32, ptr %113, align 4, !tbaa !68
  %115 = icmp sgt i32 %114, %93
  br i1 %115, label %116, label %124

116:                                              ; preds = %103
  %117 = getelementptr inbounds i32, ptr %55, i64 %112
  %118 = load i32, ptr %117, align 4, !tbaa !68
  %119 = icmp slt i32 %118, %65
  %120 = icmp sge i32 %118, %67
  %121 = or i1 %119, %120
  %122 = zext i1 %121 to i32
  %123 = add nsw i32 %111, %122
  br label %124

124:                                              ; preds = %116, %103
  %125 = phi i32 [ %111, %103 ], [ %123, %116 ]
  %126 = getelementptr inbounds i32, ptr %59, i64 %78
  %127 = load i32, ptr %126, align 4, !tbaa !68
  %128 = icmp slt i32 %127, %65
  %129 = icmp sge i32 %127, %67
  %130 = or i1 %128, %129
  %131 = zext i1 %130 to i32
  %132 = add nsw i32 %125, %131
  %133 = sext i32 %127 to i64
  %134 = getelementptr inbounds i32, ptr %53, i64 %133
  %135 = load i32, ptr %134, align 4, !tbaa !68
  %136 = icmp sgt i32 %135, %93
  br i1 %136, label %137, label %145

137:                                              ; preds = %124
  %138 = getelementptr inbounds i32, ptr %57, i64 %133
  %139 = load i32, ptr %138, align 4, !tbaa !68
  %140 = icmp slt i32 %139, %65
  %141 = icmp sge i32 %139, %67
  %142 = or i1 %140, %141
  %143 = zext i1 %142 to i32
  %144 = add nsw i32 %132, %143
  br label %145

145:                                              ; preds = %137, %124
  %146 = phi i32 [ %132, %124 ], [ %144, %137 ]
  %147 = getelementptr inbounds i32, ptr %55, i64 %78
  %148 = load i32, ptr %147, align 4, !tbaa !68
  %149 = icmp slt i32 %148, %65
  %150 = icmp sge i32 %148, %67
  %151 = or i1 %149, %150
  %152 = zext i1 %151 to i32
  %153 = add nsw i32 %146, %152
  %154 = sext i32 %148 to i64
  %155 = getelementptr inbounds i32, ptr %53, i64 %154
  %156 = load i32, ptr %155, align 4, !tbaa !68
  %157 = icmp sgt i32 %156, %93
  br i1 %157, label %158, label %166

158:                                              ; preds = %145
  %159 = getelementptr inbounds i32, ptr %57, i64 %154
  %160 = load i32, ptr %159, align 4, !tbaa !68
  %161 = icmp slt i32 %160, %65
  %162 = icmp sge i32 %160, %67
  %163 = or i1 %161, %162
  %164 = zext i1 %163 to i32
  %165 = add nsw i32 %153, %164
  br label %166

166:                                              ; preds = %158, %145, %77
  %167 = phi i32 [ %79, %77 ], [ %153, %145 ], [ %165, %158 ]
  %168 = add nsw i64 %78, 1
  %169 = trunc i64 %168 to i32
  %170 = icmp eq i32 %61, %169
  br i1 %170, label %70, label %77, !llvm.loop !763

171:                                              ; preds = %362, %38
  %172 = phi i32 [ 0, %38 ], [ %178, %362 ]
  %173 = phi i32 [ 0, %38 ], [ %175, %362 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #57
  store ptr %2, ptr %39, align 8, !tbaa !764
  store ptr %2, ptr %2, align 8, !tbaa !766
  store i64 0, ptr %40, align 8, !tbaa !767
  %174 = shl i32 %173, 7
  %175 = add nuw i32 %173, 1
  %176 = shl i32 %175, 7
  %177 = sext i32 %172 to i64
  %178 = add i32 %172, 128
  br label %180

179:                                              ; preds = %346
  invoke void @_ZNSt7__cxx114listIiSaIiEE4sortEv(ptr noundef nonnull align 8 dereferenceable(24) %2) #56
          to label %350 unwind label %364

180:                                              ; preds = %346, %171
  %181 = phi i64 [ %177, %171 ], [ %347, %346 ]
  %182 = load i64, ptr %9, align 8, !tbaa !543
  %183 = icmp ugt i64 %182, %181
  br i1 %183, label %184, label %346

184:                                              ; preds = %180
  %185 = load ptr, ptr %41, align 8, !tbaa !684
  %186 = getelementptr inbounds i32, ptr %185, i64 %181
  %187 = load i32, ptr %186, align 4, !tbaa !68
  %188 = icmp sge i32 %187, %174
  %189 = icmp slt i32 %187, %176
  %190 = and i1 %188, %189
  br i1 %190, label %203, label %191

191:                                              ; preds = %184
  %192 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %193 unwind label %201

193:                                              ; preds = %191
  %194 = getelementptr inbounds %"struct.std::_List_node", ptr %192, i64 0, i32 1
  %195 = load i32, ptr %186, align 4, !tbaa !68
  store i32 %195, ptr %194, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %192, ptr noundef nonnull %2) #59
  %196 = load i64, ptr %40, align 8, !tbaa !769
  %197 = add i64 %196, 1
  store i64 %197, ptr %40, align 8, !tbaa !769
  %198 = load ptr, ptr %41, align 8, !tbaa !684
  %199 = getelementptr inbounds i32, ptr %198, i64 %181
  %200 = load i32, ptr %199, align 4, !tbaa !68
  br label %203

201:                                              ; preds = %339, %313, %299, %273, %259, %233, %219, %191
  %202 = landingpad { ptr, i32 }
          cleanup
  br label %366

203:                                              ; preds = %193, %184
  %204 = phi i32 [ %200, %193 ], [ %187, %184 ]
  %205 = load ptr, ptr %42, align 8, !tbaa !639
  %206 = sext i32 %204 to i64
  %207 = getelementptr inbounds i32, ptr %205, i64 %206
  %208 = load i32, ptr %207, align 4, !tbaa !68
  %209 = getelementptr inbounds i32, ptr %205, i64 %181
  %210 = load i32, ptr %209, align 4, !tbaa !68
  %211 = icmp sgt i32 %208, %210
  br i1 %211, label %212, label %226

212:                                              ; preds = %203
  %213 = load ptr, ptr %43, align 8, !tbaa !687
  %214 = getelementptr inbounds i32, ptr %213, i64 %206
  %215 = load i32, ptr %214, align 4, !tbaa !68
  %216 = icmp sge i32 %215, %174
  %217 = icmp slt i32 %215, %176
  %218 = and i1 %216, %217
  br i1 %218, label %226, label %219

219:                                              ; preds = %212
  %220 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %221 unwind label %201

221:                                              ; preds = %219
  %222 = getelementptr inbounds %"struct.std::_List_node", ptr %220, i64 0, i32 1
  %223 = load i32, ptr %214, align 4, !tbaa !68
  store i32 %223, ptr %222, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %220, ptr noundef nonnull %2) #59
  %224 = load i64, ptr %40, align 8, !tbaa !769
  %225 = add i64 %224, 1
  store i64 %225, ptr %40, align 8, !tbaa !769
  br label %226

226:                                              ; preds = %221, %212, %203
  %227 = load ptr, ptr %44, align 8, !tbaa !685
  %228 = getelementptr inbounds i32, ptr %227, i64 %181
  %229 = load i32, ptr %228, align 4, !tbaa !68
  %230 = icmp sge i32 %229, %174
  %231 = icmp slt i32 %229, %176
  %232 = and i1 %230, %231
  br i1 %232, label %243, label %233

233:                                              ; preds = %226
  %234 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %235 unwind label %201

235:                                              ; preds = %233
  %236 = getelementptr inbounds %"struct.std::_List_node", ptr %234, i64 0, i32 1
  %237 = load i32, ptr %228, align 4, !tbaa !68
  store i32 %237, ptr %236, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %234, ptr noundef nonnull %2) #59
  %238 = load i64, ptr %40, align 8, !tbaa !769
  %239 = add i64 %238, 1
  store i64 %239, ptr %40, align 8, !tbaa !769
  %240 = load ptr, ptr %44, align 8, !tbaa !685
  %241 = getelementptr inbounds i32, ptr %240, i64 %181
  %242 = load i32, ptr %241, align 4, !tbaa !68
  br label %243

243:                                              ; preds = %235, %226
  %244 = phi i32 [ %242, %235 ], [ %229, %226 ]
  %245 = load ptr, ptr %42, align 8, !tbaa !639
  %246 = sext i32 %244 to i64
  %247 = getelementptr inbounds i32, ptr %245, i64 %246
  %248 = load i32, ptr %247, align 4, !tbaa !68
  %249 = getelementptr inbounds i32, ptr %245, i64 %181
  %250 = load i32, ptr %249, align 4, !tbaa !68
  %251 = icmp sgt i32 %248, %250
  br i1 %251, label %252, label %266

252:                                              ; preds = %243
  %253 = load ptr, ptr %43, align 8, !tbaa !687
  %254 = getelementptr inbounds i32, ptr %253, i64 %246
  %255 = load i32, ptr %254, align 4, !tbaa !68
  %256 = icmp sge i32 %255, %174
  %257 = icmp slt i32 %255, %176
  %258 = and i1 %256, %257
  br i1 %258, label %266, label %259

259:                                              ; preds = %252
  %260 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %261 unwind label %201

261:                                              ; preds = %259
  %262 = getelementptr inbounds %"struct.std::_List_node", ptr %260, i64 0, i32 1
  %263 = load i32, ptr %254, align 4, !tbaa !68
  store i32 %263, ptr %262, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %260, ptr noundef nonnull %2) #59
  %264 = load i64, ptr %40, align 8, !tbaa !769
  %265 = add i64 %264, 1
  store i64 %265, ptr %40, align 8, !tbaa !769
  br label %266

266:                                              ; preds = %261, %252, %243
  %267 = load ptr, ptr %45, align 8, !tbaa !686
  %268 = getelementptr inbounds i32, ptr %267, i64 %181
  %269 = load i32, ptr %268, align 4, !tbaa !68
  %270 = icmp sge i32 %269, %174
  %271 = icmp slt i32 %269, %176
  %272 = and i1 %270, %271
  br i1 %272, label %283, label %273

273:                                              ; preds = %266
  %274 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %275 unwind label %201

275:                                              ; preds = %273
  %276 = getelementptr inbounds %"struct.std::_List_node", ptr %274, i64 0, i32 1
  %277 = load i32, ptr %268, align 4, !tbaa !68
  store i32 %277, ptr %276, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %274, ptr noundef nonnull %2) #59
  %278 = load i64, ptr %40, align 8, !tbaa !769
  %279 = add i64 %278, 1
  store i64 %279, ptr %40, align 8, !tbaa !769
  %280 = load ptr, ptr %45, align 8, !tbaa !686
  %281 = getelementptr inbounds i32, ptr %280, i64 %181
  %282 = load i32, ptr %281, align 4, !tbaa !68
  br label %283

283:                                              ; preds = %275, %266
  %284 = phi i32 [ %282, %275 ], [ %269, %266 ]
  %285 = load ptr, ptr %42, align 8, !tbaa !639
  %286 = sext i32 %284 to i64
  %287 = getelementptr inbounds i32, ptr %285, i64 %286
  %288 = load i32, ptr %287, align 4, !tbaa !68
  %289 = getelementptr inbounds i32, ptr %285, i64 %181
  %290 = load i32, ptr %289, align 4, !tbaa !68
  %291 = icmp sgt i32 %288, %290
  br i1 %291, label %292, label %306

292:                                              ; preds = %283
  %293 = load ptr, ptr %44, align 8, !tbaa !685
  %294 = getelementptr inbounds i32, ptr %293, i64 %286
  %295 = load i32, ptr %294, align 4, !tbaa !68
  %296 = icmp sge i32 %295, %174
  %297 = icmp slt i32 %295, %176
  %298 = and i1 %296, %297
  br i1 %298, label %306, label %299

299:                                              ; preds = %292
  %300 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %301 unwind label %201

301:                                              ; preds = %299
  %302 = getelementptr inbounds %"struct.std::_List_node", ptr %300, i64 0, i32 1
  %303 = load i32, ptr %294, align 4, !tbaa !68
  store i32 %303, ptr %302, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %300, ptr noundef nonnull %2) #59
  %304 = load i64, ptr %40, align 8, !tbaa !769
  %305 = add i64 %304, 1
  store i64 %305, ptr %40, align 8, !tbaa !769
  br label %306

306:                                              ; preds = %301, %292, %283
  %307 = load ptr, ptr %43, align 8, !tbaa !687
  %308 = getelementptr inbounds i32, ptr %307, i64 %181
  %309 = load i32, ptr %308, align 4, !tbaa !68
  %310 = icmp sge i32 %309, %174
  %311 = icmp slt i32 %309, %176
  %312 = and i1 %310, %311
  br i1 %312, label %323, label %313

313:                                              ; preds = %306
  %314 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %315 unwind label %201

315:                                              ; preds = %313
  %316 = getelementptr inbounds %"struct.std::_List_node", ptr %314, i64 0, i32 1
  %317 = load i32, ptr %308, align 4, !tbaa !68
  store i32 %317, ptr %316, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %314, ptr noundef nonnull %2) #59
  %318 = load i64, ptr %40, align 8, !tbaa !769
  %319 = add i64 %318, 1
  store i64 %319, ptr %40, align 8, !tbaa !769
  %320 = load ptr, ptr %43, align 8, !tbaa !687
  %321 = getelementptr inbounds i32, ptr %320, i64 %181
  %322 = load i32, ptr %321, align 4, !tbaa !68
  br label %323

323:                                              ; preds = %315, %306
  %324 = phi i32 [ %322, %315 ], [ %309, %306 ]
  %325 = load ptr, ptr %42, align 8, !tbaa !639
  %326 = sext i32 %324 to i64
  %327 = getelementptr inbounds i32, ptr %325, i64 %326
  %328 = load i32, ptr %327, align 4, !tbaa !68
  %329 = getelementptr inbounds i32, ptr %325, i64 %181
  %330 = load i32, ptr %329, align 4, !tbaa !68
  %331 = icmp sgt i32 %328, %330
  br i1 %331, label %332, label %346

332:                                              ; preds = %323
  %333 = load ptr, ptr %44, align 8, !tbaa !685
  %334 = getelementptr inbounds i32, ptr %333, i64 %326
  %335 = load i32, ptr %334, align 4, !tbaa !68
  %336 = icmp sge i32 %335, %174
  %337 = icmp slt i32 %335, %176
  %338 = and i1 %336, %337
  br i1 %338, label %346, label %339

339:                                              ; preds = %332
  %340 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %341 unwind label %201

341:                                              ; preds = %339
  %342 = getelementptr inbounds %"struct.std::_List_node", ptr %340, i64 0, i32 1
  %343 = load i32, ptr %334, align 4, !tbaa !68
  store i32 %343, ptr %342, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %340, ptr noundef nonnull %2) #59
  %344 = load i64, ptr %40, align 8, !tbaa !769
  %345 = add i64 %344, 1
  store i64 %345, ptr %40, align 8, !tbaa !769
  br label %346

346:                                              ; preds = %341, %332, %323, %180
  %347 = add nsw i64 %181, 1
  %348 = trunc i64 %347 to i32
  %349 = icmp eq i32 %178, %348
  br i1 %349, label %179, label %180, !llvm.loop !772

350:                                              ; preds = %179
  call void @_ZNSt7__cxx114listIiSaIiEE6uniqueEv(ptr noundef nonnull align 8 dereferenceable(24) %2) #56
  %351 = load i64, ptr %40, align 8, !tbaa !769
  %352 = uitofp i64 %351 to double
  %353 = fmul double %352, 7.812500e-03
  %354 = load double, ptr @_ZZN4Mesh17partition_measureEvE13offtile_ratio, align 8, !tbaa !171
  %355 = fadd double %354, %353
  store double %355, ptr @_ZZN4Mesh17partition_measureEvE13offtile_ratio, align 8, !tbaa !171
  %356 = load ptr, ptr %2, align 8, !tbaa !766
  %357 = icmp eq ptr %356, %2
  br i1 %357, label %362, label %358

358:                                              ; preds = %358, %350
  %359 = phi ptr [ %360, %358 ], [ %356, %350 ]
  %360 = load ptr, ptr %359, align 8, !tbaa !766
  call void @_ZdlPv(ptr noundef %359) #58
  %361 = icmp eq ptr %360, %2
  br i1 %361, label %362, label %358, !llvm.loop !773

362:                                              ; preds = %358, %350
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #57
  %363 = icmp eq i32 %175, %13
  br i1 %363, label %907, label %171, !llvm.loop !774

364:                                              ; preds = %179
  %365 = landingpad { ptr, i32 }
          cleanup
  br label %366

366:                                              ; preds = %364, %201
  %367 = phi { ptr, i32 } [ %202, %201 ], [ %365, %364 ]
  %368 = load ptr, ptr %2, align 8, !tbaa !766
  %369 = icmp eq ptr %368, %2
  br i1 %369, label %374, label %370

370:                                              ; preds = %370, %366
  %371 = phi ptr [ %372, %370 ], [ %368, %366 ]
  %372 = load ptr, ptr %371, align 8, !tbaa !766
  call void @_ZdlPv(ptr noundef %371) #58
  %373 = icmp eq ptr %372, %2
  br i1 %373, label %374, label %370, !llvm.loop !773

374:                                              ; preds = %370, %366
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #57
  br label %915

375:                                              ; preds = %566, %28
  %376 = phi i32 [ 0, %28 ], [ %379, %566 ]
  %377 = phi i32 [ 0, %28 ], [ %382, %566 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #57
  store ptr %3, ptr %29, align 8, !tbaa !764
  store ptr %3, ptr %3, align 8, !tbaa !766
  store i64 0, ptr %30, align 8, !tbaa !767
  %378 = shl i32 %376, 7
  %379 = add nuw i32 %376, 1
  %380 = shl i32 %379, 7
  %381 = sext i32 %377 to i64
  %382 = add i32 %377, 128
  br label %384

383:                                              ; preds = %550
  invoke void @_ZNSt7__cxx114listIiSaIiEE4sortEv(ptr noundef nonnull align 8 dereferenceable(24) %3) #56
          to label %554 unwind label %568

384:                                              ; preds = %550, %375
  %385 = phi i64 [ %381, %375 ], [ %551, %550 ]
  %386 = load i64, ptr %9, align 8, !tbaa !543
  %387 = icmp ugt i64 %386, %385
  br i1 %387, label %388, label %550

388:                                              ; preds = %384
  %389 = load ptr, ptr %31, align 8, !tbaa !684
  %390 = getelementptr inbounds i32, ptr %389, i64 %385
  %391 = load i32, ptr %390, align 4, !tbaa !68
  %392 = icmp sge i32 %391, %378
  %393 = icmp slt i32 %391, %380
  %394 = and i1 %392, %393
  br i1 %394, label %407, label %395

395:                                              ; preds = %388
  %396 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %397 unwind label %405

397:                                              ; preds = %395
  %398 = getelementptr inbounds %"struct.std::_List_node", ptr %396, i64 0, i32 1
  %399 = load i32, ptr %390, align 4, !tbaa !68
  store i32 %399, ptr %398, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %396, ptr noundef nonnull %3) #59
  %400 = load i64, ptr %30, align 8, !tbaa !769
  %401 = add i64 %400, 1
  store i64 %401, ptr %30, align 8, !tbaa !769
  %402 = load ptr, ptr %31, align 8, !tbaa !684
  %403 = getelementptr inbounds i32, ptr %402, i64 %385
  %404 = load i32, ptr %403, align 4, !tbaa !68
  br label %407

405:                                              ; preds = %543, %517, %503, %477, %463, %437, %423, %395
  %406 = landingpad { ptr, i32 }
          cleanup
  br label %570

407:                                              ; preds = %397, %388
  %408 = phi i32 [ %404, %397 ], [ %391, %388 ]
  %409 = load ptr, ptr %32, align 8, !tbaa !639
  %410 = sext i32 %408 to i64
  %411 = getelementptr inbounds i32, ptr %409, i64 %410
  %412 = load i32, ptr %411, align 4, !tbaa !68
  %413 = getelementptr inbounds i32, ptr %409, i64 %385
  %414 = load i32, ptr %413, align 4, !tbaa !68
  %415 = icmp sgt i32 %412, %414
  br i1 %415, label %416, label %430

416:                                              ; preds = %407
  %417 = load ptr, ptr %33, align 8, !tbaa !687
  %418 = getelementptr inbounds i32, ptr %417, i64 %410
  %419 = load i32, ptr %418, align 4, !tbaa !68
  %420 = icmp sge i32 %419, %378
  %421 = icmp slt i32 %419, %380
  %422 = and i1 %420, %421
  br i1 %422, label %430, label %423

423:                                              ; preds = %416
  %424 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %425 unwind label %405

425:                                              ; preds = %423
  %426 = getelementptr inbounds %"struct.std::_List_node", ptr %424, i64 0, i32 1
  %427 = load i32, ptr %418, align 4, !tbaa !68
  store i32 %427, ptr %426, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %424, ptr noundef nonnull %3) #59
  %428 = load i64, ptr %30, align 8, !tbaa !769
  %429 = add i64 %428, 1
  store i64 %429, ptr %30, align 8, !tbaa !769
  br label %430

430:                                              ; preds = %425, %416, %407
  %431 = load ptr, ptr %34, align 8, !tbaa !685
  %432 = getelementptr inbounds i32, ptr %431, i64 %385
  %433 = load i32, ptr %432, align 4, !tbaa !68
  %434 = icmp sge i32 %433, %378
  %435 = icmp slt i32 %433, %380
  %436 = and i1 %434, %435
  br i1 %436, label %447, label %437

437:                                              ; preds = %430
  %438 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %439 unwind label %405

439:                                              ; preds = %437
  %440 = getelementptr inbounds %"struct.std::_List_node", ptr %438, i64 0, i32 1
  %441 = load i32, ptr %432, align 4, !tbaa !68
  store i32 %441, ptr %440, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %438, ptr noundef nonnull %3) #59
  %442 = load i64, ptr %30, align 8, !tbaa !769
  %443 = add i64 %442, 1
  store i64 %443, ptr %30, align 8, !tbaa !769
  %444 = load ptr, ptr %34, align 8, !tbaa !685
  %445 = getelementptr inbounds i32, ptr %444, i64 %385
  %446 = load i32, ptr %445, align 4, !tbaa !68
  br label %447

447:                                              ; preds = %439, %430
  %448 = phi i32 [ %446, %439 ], [ %433, %430 ]
  %449 = load ptr, ptr %32, align 8, !tbaa !639
  %450 = sext i32 %448 to i64
  %451 = getelementptr inbounds i32, ptr %449, i64 %450
  %452 = load i32, ptr %451, align 4, !tbaa !68
  %453 = getelementptr inbounds i32, ptr %449, i64 %385
  %454 = load i32, ptr %453, align 4, !tbaa !68
  %455 = icmp sgt i32 %452, %454
  br i1 %455, label %456, label %470

456:                                              ; preds = %447
  %457 = load ptr, ptr %33, align 8, !tbaa !687
  %458 = getelementptr inbounds i32, ptr %457, i64 %450
  %459 = load i32, ptr %458, align 4, !tbaa !68
  %460 = icmp sge i32 %459, %378
  %461 = icmp slt i32 %459, %380
  %462 = and i1 %460, %461
  br i1 %462, label %470, label %463

463:                                              ; preds = %456
  %464 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %465 unwind label %405

465:                                              ; preds = %463
  %466 = getelementptr inbounds %"struct.std::_List_node", ptr %464, i64 0, i32 1
  %467 = load i32, ptr %458, align 4, !tbaa !68
  store i32 %467, ptr %466, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %464, ptr noundef nonnull %3) #59
  %468 = load i64, ptr %30, align 8, !tbaa !769
  %469 = add i64 %468, 1
  store i64 %469, ptr %30, align 8, !tbaa !769
  br label %470

470:                                              ; preds = %465, %456, %447
  %471 = load ptr, ptr %35, align 8, !tbaa !686
  %472 = getelementptr inbounds i32, ptr %471, i64 %385
  %473 = load i32, ptr %472, align 4, !tbaa !68
  %474 = icmp sge i32 %473, %378
  %475 = icmp slt i32 %473, %380
  %476 = and i1 %474, %475
  br i1 %476, label %487, label %477

477:                                              ; preds = %470
  %478 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %479 unwind label %405

479:                                              ; preds = %477
  %480 = getelementptr inbounds %"struct.std::_List_node", ptr %478, i64 0, i32 1
  %481 = load i32, ptr %472, align 4, !tbaa !68
  store i32 %481, ptr %480, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %478, ptr noundef nonnull %3) #59
  %482 = load i64, ptr %30, align 8, !tbaa !769
  %483 = add i64 %482, 1
  store i64 %483, ptr %30, align 8, !tbaa !769
  %484 = load ptr, ptr %35, align 8, !tbaa !686
  %485 = getelementptr inbounds i32, ptr %484, i64 %385
  %486 = load i32, ptr %485, align 4, !tbaa !68
  br label %487

487:                                              ; preds = %479, %470
  %488 = phi i32 [ %486, %479 ], [ %473, %470 ]
  %489 = load ptr, ptr %32, align 8, !tbaa !639
  %490 = sext i32 %488 to i64
  %491 = getelementptr inbounds i32, ptr %489, i64 %490
  %492 = load i32, ptr %491, align 4, !tbaa !68
  %493 = getelementptr inbounds i32, ptr %489, i64 %385
  %494 = load i32, ptr %493, align 4, !tbaa !68
  %495 = icmp sgt i32 %492, %494
  br i1 %495, label %496, label %510

496:                                              ; preds = %487
  %497 = load ptr, ptr %34, align 8, !tbaa !685
  %498 = getelementptr inbounds i32, ptr %497, i64 %490
  %499 = load i32, ptr %498, align 4, !tbaa !68
  %500 = icmp sge i32 %499, %378
  %501 = icmp slt i32 %499, %380
  %502 = and i1 %500, %501
  br i1 %502, label %510, label %503

503:                                              ; preds = %496
  %504 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %505 unwind label %405

505:                                              ; preds = %503
  %506 = getelementptr inbounds %"struct.std::_List_node", ptr %504, i64 0, i32 1
  %507 = load i32, ptr %498, align 4, !tbaa !68
  store i32 %507, ptr %506, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %504, ptr noundef nonnull %3) #59
  %508 = load i64, ptr %30, align 8, !tbaa !769
  %509 = add i64 %508, 1
  store i64 %509, ptr %30, align 8, !tbaa !769
  br label %510

510:                                              ; preds = %505, %496, %487
  %511 = load ptr, ptr %33, align 8, !tbaa !687
  %512 = getelementptr inbounds i32, ptr %511, i64 %385
  %513 = load i32, ptr %512, align 4, !tbaa !68
  %514 = icmp sge i32 %513, %378
  %515 = icmp slt i32 %513, %380
  %516 = and i1 %514, %515
  br i1 %516, label %527, label %517

517:                                              ; preds = %510
  %518 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %519 unwind label %405

519:                                              ; preds = %517
  %520 = getelementptr inbounds %"struct.std::_List_node", ptr %518, i64 0, i32 1
  %521 = load i32, ptr %512, align 4, !tbaa !68
  store i32 %521, ptr %520, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %518, ptr noundef nonnull %3) #59
  %522 = load i64, ptr %30, align 8, !tbaa !769
  %523 = add i64 %522, 1
  store i64 %523, ptr %30, align 8, !tbaa !769
  %524 = load ptr, ptr %33, align 8, !tbaa !687
  %525 = getelementptr inbounds i32, ptr %524, i64 %385
  %526 = load i32, ptr %525, align 4, !tbaa !68
  br label %527

527:                                              ; preds = %519, %510
  %528 = phi i32 [ %526, %519 ], [ %513, %510 ]
  %529 = load ptr, ptr %32, align 8, !tbaa !639
  %530 = sext i32 %528 to i64
  %531 = getelementptr inbounds i32, ptr %529, i64 %530
  %532 = load i32, ptr %531, align 4, !tbaa !68
  %533 = getelementptr inbounds i32, ptr %529, i64 %385
  %534 = load i32, ptr %533, align 4, !tbaa !68
  %535 = icmp sgt i32 %532, %534
  br i1 %535, label %536, label %550

536:                                              ; preds = %527
  %537 = load ptr, ptr %34, align 8, !tbaa !685
  %538 = getelementptr inbounds i32, ptr %537, i64 %530
  %539 = load i32, ptr %538, align 4, !tbaa !68
  %540 = icmp sge i32 %539, %378
  %541 = icmp slt i32 %539, %380
  %542 = and i1 %540, %541
  br i1 %542, label %550, label %543

543:                                              ; preds = %536
  %544 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %545 unwind label %405

545:                                              ; preds = %543
  %546 = getelementptr inbounds %"struct.std::_List_node", ptr %544, i64 0, i32 1
  %547 = load i32, ptr %538, align 4, !tbaa !68
  store i32 %547, ptr %546, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %544, ptr noundef nonnull %3) #59
  %548 = load i64, ptr %30, align 8, !tbaa !769
  %549 = add i64 %548, 1
  store i64 %549, ptr %30, align 8, !tbaa !769
  br label %550

550:                                              ; preds = %545, %536, %527, %384
  %551 = add nsw i64 %385, 1
  %552 = trunc i64 %551 to i32
  %553 = icmp eq i32 %382, %552
  br i1 %553, label %383, label %384, !llvm.loop !775

554:                                              ; preds = %383
  call void @_ZNSt7__cxx114listIiSaIiEE6uniqueEv(ptr noundef nonnull align 8 dereferenceable(24) %3) #56
  %555 = load i64, ptr %30, align 8, !tbaa !769
  %556 = uitofp i64 %555 to double
  %557 = fdiv double %556, 0x4046A09E667F3BCD
  %558 = load double, ptr @_ZZN4Mesh17partition_measureEvE13offtile_ratio, align 8, !tbaa !171
  %559 = fadd double %558, %557
  store double %559, ptr @_ZZN4Mesh17partition_measureEvE13offtile_ratio, align 8, !tbaa !171
  %560 = load ptr, ptr %3, align 8, !tbaa !766
  %561 = icmp eq ptr %560, %3
  br i1 %561, label %566, label %562

562:                                              ; preds = %562, %554
  %563 = phi ptr [ %564, %562 ], [ %560, %554 ]
  %564 = load ptr, ptr %563, align 8, !tbaa !766
  call void @_ZdlPv(ptr noundef %563) #58
  %565 = icmp eq ptr %564, %3
  br i1 %565, label %566, label %562, !llvm.loop !773

566:                                              ; preds = %562, %554
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #57
  %567 = icmp eq i32 %379, %13
  br i1 %567, label %907, label %375, !llvm.loop !776

568:                                              ; preds = %383
  %569 = landingpad { ptr, i32 }
          cleanup
  br label %570

570:                                              ; preds = %568, %405
  %571 = phi { ptr, i32 } [ %406, %405 ], [ %569, %568 ]
  %572 = load ptr, ptr %3, align 8, !tbaa !766
  %573 = icmp eq ptr %572, %3
  br i1 %573, label %578, label %574

574:                                              ; preds = %574, %570
  %575 = phi ptr [ %576, %574 ], [ %572, %570 ]
  %576 = load ptr, ptr %575, align 8, !tbaa !766
  call void @_ZdlPv(ptr noundef %575) #58
  %577 = icmp eq ptr %576, %3
  br i1 %577, label %578, label %574, !llvm.loop !773

578:                                              ; preds = %574, %570
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #57
  br label %915

579:                                              ; preds = %886, %16
  %580 = phi i32 [ 0, %16 ], [ %583, %886 ]
  %581 = phi i32 [ 0, %16 ], [ %586, %886 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #57
  store ptr %4, ptr %17, align 8, !tbaa !764
  store ptr %4, ptr %4, align 8, !tbaa !766
  store i64 0, ptr %18, align 8, !tbaa !767
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #57
  store ptr %5, ptr %19, align 8, !tbaa !764
  store ptr %5, ptr %5, align 8, !tbaa !766
  store i64 0, ptr %20, align 8, !tbaa !767
  %582 = shl i32 %580, 7
  %583 = add nuw i32 %580, 1
  %584 = shl i32 %583, 7
  %585 = sext i32 %581 to i64
  %586 = add i32 %581, 128
  br label %588

587:                                              ; preds = %858
  invoke void @_ZNSt7__cxx114listIiSaIiEE4sortEv(ptr noundef nonnull align 8 dereferenceable(24) %4) #56
          to label %862 unwind label %888

588:                                              ; preds = %858, %579
  %589 = phi i64 [ %585, %579 ], [ %859, %858 ]
  %590 = load i64, ptr %9, align 8, !tbaa !543
  %591 = icmp ugt i64 %590, %589
  br i1 %591, label %592, label %858

592:                                              ; preds = %588
  %593 = load ptr, ptr %21, align 8, !tbaa !684
  %594 = getelementptr inbounds i32, ptr %593, i64 %589
  %595 = load i32, ptr %594, align 4, !tbaa !68
  %596 = icmp sge i32 %595, %582
  %597 = icmp slt i32 %595, %584
  %598 = and i1 %596, %597
  br i1 %598, label %622, label %599

599:                                              ; preds = %592
  %600 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %601 unwind label %618

601:                                              ; preds = %599
  %602 = getelementptr inbounds %"struct.std::_List_node", ptr %600, i64 0, i32 1
  %603 = load i32, ptr %594, align 4, !tbaa !68
  store i32 %603, ptr %602, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %600, ptr noundef nonnull %4) #59
  %604 = load i64, ptr %18, align 8, !tbaa !769
  %605 = add i64 %604, 1
  store i64 %605, ptr %18, align 8, !tbaa !769
  %606 = load ptr, ptr %21, align 8, !tbaa !684
  %607 = getelementptr inbounds i32, ptr %606, i64 %589
  %608 = load i32, ptr %607, align 4, !tbaa !68
  %609 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %610 unwind label %620

610:                                              ; preds = %601
  %611 = sdiv i32 %608, 4
  %612 = getelementptr inbounds %"struct.std::_List_node", ptr %609, i64 0, i32 1
  store i32 %611, ptr %612, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %609, ptr noundef nonnull %5) #59
  %613 = load i64, ptr %20, align 8, !tbaa !769
  %614 = add i64 %613, 1
  store i64 %614, ptr %20, align 8, !tbaa !769
  %615 = load ptr, ptr %21, align 8, !tbaa !684
  %616 = getelementptr inbounds i32, ptr %615, i64 %589
  %617 = load i32, ptr %616, align 4, !tbaa !68
  br label %622

618:                                              ; preds = %836, %799, %770, %733, %704, %667, %638, %599
  %619 = landingpad { ptr, i32 }
          cleanup
  br label %890

620:                                              ; preds = %601
  %621 = landingpad { ptr, i32 }
          cleanup
  br label %890

622:                                              ; preds = %610, %592
  %623 = phi i32 [ %595, %592 ], [ %617, %610 ]
  %624 = load ptr, ptr %22, align 8, !tbaa !639
  %625 = sext i32 %623 to i64
  %626 = getelementptr inbounds i32, ptr %624, i64 %625
  %627 = load i32, ptr %626, align 4, !tbaa !68
  %628 = getelementptr inbounds i32, ptr %624, i64 %589
  %629 = load i32, ptr %628, align 4, !tbaa !68
  %630 = icmp sgt i32 %627, %629
  br i1 %630, label %631, label %660

631:                                              ; preds = %622
  %632 = load ptr, ptr %23, align 8, !tbaa !687
  %633 = getelementptr inbounds i32, ptr %632, i64 %625
  %634 = load i32, ptr %633, align 4, !tbaa !68
  %635 = icmp sge i32 %634, %582
  %636 = icmp slt i32 %634, %584
  %637 = and i1 %635, %636
  br i1 %637, label %660, label %638

638:                                              ; preds = %631
  %639 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %640 unwind label %618

640:                                              ; preds = %638
  %641 = getelementptr inbounds %"struct.std::_List_node", ptr %639, i64 0, i32 1
  %642 = load i32, ptr %633, align 4, !tbaa !68
  store i32 %642, ptr %641, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %639, ptr noundef nonnull %4) #59
  %643 = load i64, ptr %18, align 8, !tbaa !769
  %644 = add i64 %643, 1
  store i64 %644, ptr %18, align 8, !tbaa !769
  %645 = load ptr, ptr %23, align 8, !tbaa !687
  %646 = load ptr, ptr %21, align 8, !tbaa !684
  %647 = getelementptr inbounds i32, ptr %646, i64 %589
  %648 = load i32, ptr %647, align 4, !tbaa !68
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds i32, ptr %645, i64 %649
  %651 = load i32, ptr %650, align 4, !tbaa !68
  %652 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %653 unwind label %658

653:                                              ; preds = %640
  %654 = sdiv i32 %651, 4
  %655 = getelementptr inbounds %"struct.std::_List_node", ptr %652, i64 0, i32 1
  store i32 %654, ptr %655, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %652, ptr noundef nonnull %5) #59
  %656 = load i64, ptr %20, align 8, !tbaa !769
  %657 = add i64 %656, 1
  store i64 %657, ptr %20, align 8, !tbaa !769
  br label %660

658:                                              ; preds = %640
  %659 = landingpad { ptr, i32 }
          cleanup
  br label %890

660:                                              ; preds = %653, %631, %622
  %661 = load ptr, ptr %24, align 8, !tbaa !685
  %662 = getelementptr inbounds i32, ptr %661, i64 %589
  %663 = load i32, ptr %662, align 4, !tbaa !68
  %664 = icmp sge i32 %663, %582
  %665 = icmp slt i32 %663, %584
  %666 = and i1 %664, %665
  br i1 %666, label %688, label %667

667:                                              ; preds = %660
  %668 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %669 unwind label %618

669:                                              ; preds = %667
  %670 = getelementptr inbounds %"struct.std::_List_node", ptr %668, i64 0, i32 1
  %671 = load i32, ptr %662, align 4, !tbaa !68
  store i32 %671, ptr %670, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %668, ptr noundef nonnull %4) #59
  %672 = load i64, ptr %18, align 8, !tbaa !769
  %673 = add i64 %672, 1
  store i64 %673, ptr %18, align 8, !tbaa !769
  %674 = load ptr, ptr %24, align 8, !tbaa !685
  %675 = getelementptr inbounds i32, ptr %674, i64 %589
  %676 = load i32, ptr %675, align 4, !tbaa !68
  %677 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %678 unwind label %686

678:                                              ; preds = %669
  %679 = sdiv i32 %676, 4
  %680 = getelementptr inbounds %"struct.std::_List_node", ptr %677, i64 0, i32 1
  store i32 %679, ptr %680, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %677, ptr noundef nonnull %5) #59
  %681 = load i64, ptr %20, align 8, !tbaa !769
  %682 = add i64 %681, 1
  store i64 %682, ptr %20, align 8, !tbaa !769
  %683 = load ptr, ptr %24, align 8, !tbaa !685
  %684 = getelementptr inbounds i32, ptr %683, i64 %589
  %685 = load i32, ptr %684, align 4, !tbaa !68
  br label %688

686:                                              ; preds = %669
  %687 = landingpad { ptr, i32 }
          cleanup
  br label %890

688:                                              ; preds = %678, %660
  %689 = phi i32 [ %663, %660 ], [ %685, %678 ]
  %690 = load ptr, ptr %22, align 8, !tbaa !639
  %691 = sext i32 %689 to i64
  %692 = getelementptr inbounds i32, ptr %690, i64 %691
  %693 = load i32, ptr %692, align 4, !tbaa !68
  %694 = getelementptr inbounds i32, ptr %690, i64 %589
  %695 = load i32, ptr %694, align 4, !tbaa !68
  %696 = icmp sgt i32 %693, %695
  br i1 %696, label %697, label %726

697:                                              ; preds = %688
  %698 = load ptr, ptr %23, align 8, !tbaa !687
  %699 = getelementptr inbounds i32, ptr %698, i64 %691
  %700 = load i32, ptr %699, align 4, !tbaa !68
  %701 = icmp sge i32 %700, %582
  %702 = icmp slt i32 %700, %584
  %703 = and i1 %701, %702
  br i1 %703, label %726, label %704

704:                                              ; preds = %697
  %705 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %706 unwind label %618

706:                                              ; preds = %704
  %707 = getelementptr inbounds %"struct.std::_List_node", ptr %705, i64 0, i32 1
  %708 = load i32, ptr %699, align 4, !tbaa !68
  store i32 %708, ptr %707, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %705, ptr noundef nonnull %4) #59
  %709 = load i64, ptr %18, align 8, !tbaa !769
  %710 = add i64 %709, 1
  store i64 %710, ptr %18, align 8, !tbaa !769
  %711 = load ptr, ptr %23, align 8, !tbaa !687
  %712 = load ptr, ptr %24, align 8, !tbaa !685
  %713 = getelementptr inbounds i32, ptr %712, i64 %589
  %714 = load i32, ptr %713, align 4, !tbaa !68
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds i32, ptr %711, i64 %715
  %717 = load i32, ptr %716, align 4, !tbaa !68
  %718 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %719 unwind label %724

719:                                              ; preds = %706
  %720 = sdiv i32 %717, 4
  %721 = getelementptr inbounds %"struct.std::_List_node", ptr %718, i64 0, i32 1
  store i32 %720, ptr %721, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %718, ptr noundef nonnull %5) #59
  %722 = load i64, ptr %20, align 8, !tbaa !769
  %723 = add i64 %722, 1
  store i64 %723, ptr %20, align 8, !tbaa !769
  br label %726

724:                                              ; preds = %706
  %725 = landingpad { ptr, i32 }
          cleanup
  br label %890

726:                                              ; preds = %719, %697, %688
  %727 = load ptr, ptr %25, align 8, !tbaa !686
  %728 = getelementptr inbounds i32, ptr %727, i64 %589
  %729 = load i32, ptr %728, align 4, !tbaa !68
  %730 = icmp sge i32 %729, %582
  %731 = icmp slt i32 %729, %584
  %732 = and i1 %730, %731
  br i1 %732, label %754, label %733

733:                                              ; preds = %726
  %734 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %735 unwind label %618

735:                                              ; preds = %733
  %736 = getelementptr inbounds %"struct.std::_List_node", ptr %734, i64 0, i32 1
  %737 = load i32, ptr %728, align 4, !tbaa !68
  store i32 %737, ptr %736, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %734, ptr noundef nonnull %4) #59
  %738 = load i64, ptr %18, align 8, !tbaa !769
  %739 = add i64 %738, 1
  store i64 %739, ptr %18, align 8, !tbaa !769
  %740 = load ptr, ptr %25, align 8, !tbaa !686
  %741 = getelementptr inbounds i32, ptr %740, i64 %589
  %742 = load i32, ptr %741, align 4, !tbaa !68
  %743 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %744 unwind label %752

744:                                              ; preds = %735
  %745 = sdiv i32 %742, 4
  %746 = getelementptr inbounds %"struct.std::_List_node", ptr %743, i64 0, i32 1
  store i32 %745, ptr %746, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %743, ptr noundef nonnull %5) #59
  %747 = load i64, ptr %20, align 8, !tbaa !769
  %748 = add i64 %747, 1
  store i64 %748, ptr %20, align 8, !tbaa !769
  %749 = load ptr, ptr %25, align 8, !tbaa !686
  %750 = getelementptr inbounds i32, ptr %749, i64 %589
  %751 = load i32, ptr %750, align 4, !tbaa !68
  br label %754

752:                                              ; preds = %735
  %753 = landingpad { ptr, i32 }
          cleanup
  br label %890

754:                                              ; preds = %744, %726
  %755 = phi i32 [ %729, %726 ], [ %751, %744 ]
  %756 = load ptr, ptr %22, align 8, !tbaa !639
  %757 = sext i32 %755 to i64
  %758 = getelementptr inbounds i32, ptr %756, i64 %757
  %759 = load i32, ptr %758, align 4, !tbaa !68
  %760 = getelementptr inbounds i32, ptr %756, i64 %589
  %761 = load i32, ptr %760, align 4, !tbaa !68
  %762 = icmp sgt i32 %759, %761
  br i1 %762, label %763, label %792

763:                                              ; preds = %754
  %764 = load ptr, ptr %24, align 8, !tbaa !685
  %765 = getelementptr inbounds i32, ptr %764, i64 %757
  %766 = load i32, ptr %765, align 4, !tbaa !68
  %767 = icmp sge i32 %766, %582
  %768 = icmp slt i32 %766, %584
  %769 = and i1 %767, %768
  br i1 %769, label %792, label %770

770:                                              ; preds = %763
  %771 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %772 unwind label %618

772:                                              ; preds = %770
  %773 = getelementptr inbounds %"struct.std::_List_node", ptr %771, i64 0, i32 1
  %774 = load i32, ptr %765, align 4, !tbaa !68
  store i32 %774, ptr %773, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %771, ptr noundef nonnull %4) #59
  %775 = load i64, ptr %18, align 8, !tbaa !769
  %776 = add i64 %775, 1
  store i64 %776, ptr %18, align 8, !tbaa !769
  %777 = load ptr, ptr %24, align 8, !tbaa !685
  %778 = load ptr, ptr %25, align 8, !tbaa !686
  %779 = getelementptr inbounds i32, ptr %778, i64 %589
  %780 = load i32, ptr %779, align 4, !tbaa !68
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds i32, ptr %777, i64 %781
  %783 = load i32, ptr %782, align 4, !tbaa !68
  %784 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %785 unwind label %790

785:                                              ; preds = %772
  %786 = sdiv i32 %783, 4
  %787 = getelementptr inbounds %"struct.std::_List_node", ptr %784, i64 0, i32 1
  store i32 %786, ptr %787, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %784, ptr noundef nonnull %5) #59
  %788 = load i64, ptr %20, align 8, !tbaa !769
  %789 = add i64 %788, 1
  store i64 %789, ptr %20, align 8, !tbaa !769
  br label %792

790:                                              ; preds = %772
  %791 = landingpad { ptr, i32 }
          cleanup
  br label %890

792:                                              ; preds = %785, %763, %754
  %793 = load ptr, ptr %23, align 8, !tbaa !687
  %794 = getelementptr inbounds i32, ptr %793, i64 %589
  %795 = load i32, ptr %794, align 4, !tbaa !68
  %796 = icmp sge i32 %795, %582
  %797 = icmp slt i32 %795, %584
  %798 = and i1 %796, %797
  br i1 %798, label %820, label %799

799:                                              ; preds = %792
  %800 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %801 unwind label %618

801:                                              ; preds = %799
  %802 = getelementptr inbounds %"struct.std::_List_node", ptr %800, i64 0, i32 1
  %803 = load i32, ptr %794, align 4, !tbaa !68
  store i32 %803, ptr %802, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %800, ptr noundef nonnull %4) #59
  %804 = load i64, ptr %18, align 8, !tbaa !769
  %805 = add i64 %804, 1
  store i64 %805, ptr %18, align 8, !tbaa !769
  %806 = load ptr, ptr %23, align 8, !tbaa !687
  %807 = getelementptr inbounds i32, ptr %806, i64 %589
  %808 = load i32, ptr %807, align 4, !tbaa !68
  %809 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %810 unwind label %818

810:                                              ; preds = %801
  %811 = sdiv i32 %808, 4
  %812 = getelementptr inbounds %"struct.std::_List_node", ptr %809, i64 0, i32 1
  store i32 %811, ptr %812, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %809, ptr noundef nonnull %5) #59
  %813 = load i64, ptr %20, align 8, !tbaa !769
  %814 = add i64 %813, 1
  store i64 %814, ptr %20, align 8, !tbaa !769
  %815 = load ptr, ptr %23, align 8, !tbaa !687
  %816 = getelementptr inbounds i32, ptr %815, i64 %589
  %817 = load i32, ptr %816, align 4, !tbaa !68
  br label %820

818:                                              ; preds = %801
  %819 = landingpad { ptr, i32 }
          cleanup
  br label %890

820:                                              ; preds = %810, %792
  %821 = phi i32 [ %795, %792 ], [ %817, %810 ]
  %822 = load ptr, ptr %22, align 8, !tbaa !639
  %823 = sext i32 %821 to i64
  %824 = getelementptr inbounds i32, ptr %822, i64 %823
  %825 = load i32, ptr %824, align 4, !tbaa !68
  %826 = getelementptr inbounds i32, ptr %822, i64 %589
  %827 = load i32, ptr %826, align 4, !tbaa !68
  %828 = icmp sgt i32 %825, %827
  br i1 %828, label %829, label %858

829:                                              ; preds = %820
  %830 = load ptr, ptr %24, align 8, !tbaa !685
  %831 = getelementptr inbounds i32, ptr %830, i64 %823
  %832 = load i32, ptr %831, align 4, !tbaa !68
  %833 = icmp sge i32 %832, %582
  %834 = icmp slt i32 %832, %584
  %835 = and i1 %833, %834
  br i1 %835, label %858, label %836

836:                                              ; preds = %829
  %837 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %838 unwind label %618

838:                                              ; preds = %836
  %839 = getelementptr inbounds %"struct.std::_List_node", ptr %837, i64 0, i32 1
  %840 = load i32, ptr %831, align 4, !tbaa !68
  store i32 %840, ptr %839, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %837, ptr noundef nonnull %4) #59
  %841 = load i64, ptr %18, align 8, !tbaa !769
  %842 = add i64 %841, 1
  store i64 %842, ptr %18, align 8, !tbaa !769
  %843 = load ptr, ptr %24, align 8, !tbaa !685
  %844 = load ptr, ptr %23, align 8, !tbaa !687
  %845 = getelementptr inbounds i32, ptr %844, i64 %589
  %846 = load i32, ptr %845, align 4, !tbaa !68
  %847 = sext i32 %846 to i64
  %848 = getelementptr inbounds i32, ptr %843, i64 %847
  %849 = load i32, ptr %848, align 4, !tbaa !68
  %850 = invoke noalias noundef nonnull dereferenceable(24) ptr @_Znwm(i64 noundef 24) #62
          to label %851 unwind label %856

851:                                              ; preds = %838
  %852 = sdiv i32 %849, 4
  %853 = getelementptr inbounds %"struct.std::_List_node", ptr %850, i64 0, i32 1
  store i32 %852, ptr %853, align 4, !tbaa !68
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %850, ptr noundef nonnull %5) #59
  %854 = load i64, ptr %20, align 8, !tbaa !769
  %855 = add i64 %854, 1
  store i64 %855, ptr %20, align 8, !tbaa !769
  br label %858

856:                                              ; preds = %838
  %857 = landingpad { ptr, i32 }
          cleanup
  br label %890

858:                                              ; preds = %851, %829, %820, %588
  %859 = add nsw i64 %589, 1
  %860 = trunc i64 %859 to i32
  %861 = icmp eq i32 %586, %860
  br i1 %861, label %587, label %588, !llvm.loop !777

862:                                              ; preds = %587
  call void @_ZNSt7__cxx114listIiSaIiEE6uniqueEv(ptr noundef nonnull align 8 dereferenceable(24) %4) #56
  invoke void @_ZNSt7__cxx114listIiSaIiEE4sortEv(ptr noundef nonnull align 8 dereferenceable(24) %5) #56
          to label %863 unwind label %888

863:                                              ; preds = %862
  call void @_ZNSt7__cxx114listIiSaIiEE6uniqueEv(ptr noundef nonnull align 8 dereferenceable(24) %5) #56
  %864 = load i64, ptr %18, align 8, !tbaa !769
  %865 = uitofp i64 %864 to double
  %866 = load i64, ptr %20, align 8, !tbaa !769
  %867 = uitofp i64 %866 to double
  %868 = fmul double %865, %867
  %869 = fmul double %868, 4.000000e+00
  %870 = fdiv double %869, 0x40B087C3B666FB67
  %871 = load double, ptr @_ZZN4Mesh17partition_measureEvE13offtile_ratio, align 8, !tbaa !171
  %872 = fadd double %871, %870
  store double %872, ptr @_ZZN4Mesh17partition_measureEvE13offtile_ratio, align 8, !tbaa !171
  %873 = load ptr, ptr %5, align 8, !tbaa !766
  %874 = icmp eq ptr %873, %5
  br i1 %874, label %879, label %875

875:                                              ; preds = %875, %863
  %876 = phi ptr [ %877, %875 ], [ %873, %863 ]
  %877 = load ptr, ptr %876, align 8, !tbaa !766
  call void @_ZdlPv(ptr noundef %876) #58
  %878 = icmp eq ptr %877, %5
  br i1 %878, label %879, label %875, !llvm.loop !773

879:                                              ; preds = %875, %863
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #57
  %880 = load ptr, ptr %4, align 8, !tbaa !766
  %881 = icmp eq ptr %880, %4
  br i1 %881, label %886, label %882

882:                                              ; preds = %882, %879
  %883 = phi ptr [ %884, %882 ], [ %880, %879 ]
  %884 = load ptr, ptr %883, align 8, !tbaa !766
  call void @_ZdlPv(ptr noundef %883) #58
  %885 = icmp eq ptr %884, %4
  br i1 %885, label %886, label %882, !llvm.loop !773

886:                                              ; preds = %882, %879
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #57
  %887 = icmp eq i32 %583, %13
  br i1 %887, label %907, label %579, !llvm.loop !778

888:                                              ; preds = %862, %587
  %889 = landingpad { ptr, i32 }
          cleanup
  br label %890

890:                                              ; preds = %888, %856, %818, %790, %752, %724, %686, %658, %620, %618
  %891 = phi { ptr, i32 } [ %889, %888 ], [ %857, %856 ], [ %619, %618 ], [ %819, %818 ], [ %791, %790 ], [ %753, %752 ], [ %725, %724 ], [ %687, %686 ], [ %659, %658 ], [ %621, %620 ]
  %892 = load ptr, ptr %5, align 8, !tbaa !766
  %893 = icmp eq ptr %892, %5
  br i1 %893, label %898, label %894

894:                                              ; preds = %894, %890
  %895 = phi ptr [ %896, %894 ], [ %892, %890 ]
  %896 = load ptr, ptr %895, align 8, !tbaa !766
  call void @_ZdlPv(ptr noundef %895) #58
  %897 = icmp eq ptr %896, %5
  br i1 %897, label %898, label %894, !llvm.loop !773

898:                                              ; preds = %894, %890
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #57
  %899 = load ptr, ptr %4, align 8, !tbaa !766
  %900 = icmp eq ptr %899, %4
  br i1 %900, label %905, label %901

901:                                              ; preds = %901, %898
  %902 = phi ptr [ %903, %901 ], [ %899, %898 ]
  %903 = load ptr, ptr %902, align 8, !tbaa !766
  call void @_ZdlPv(ptr noundef %902) #58
  %904 = icmp eq ptr %903, %4
  br i1 %904, label %905, label %901, !llvm.loop !773

905:                                              ; preds = %901, %898
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #57
  br label %915

906:                                              ; preds = %70
  %.lcssa1 = phi double [ %74, %70 ]
  store double %.lcssa1, ptr @_ZZN4Mesh17partition_measureEvE13offtile_ratio, align 8, !tbaa !171
  br label %907

907:                                              ; preds = %906, %886, %566, %362, %46, %36, %26, %14, %8
  %908 = load i32, ptr @meas_count, align 4, !tbaa !68
  %909 = add nsw i32 %908, 1
  store i32 %909, ptr @meas_count, align 4, !tbaa !68
  %910 = load double, ptr @_ZZN4Mesh17partition_measureEvE13offtile_ratio, align 8, !tbaa !171
  %911 = uitofp i32 %13 to double
  %912 = fdiv double %910, %911
  %913 = load double, ptr @meas_sum_average, align 8, !tbaa !171
  %914 = fadd double %913, %912
  store double %914, ptr @meas_sum_average, align 8, !tbaa !171
  br label %917

915:                                              ; preds = %905, %578, %374
  %916 = phi { ptr, i32 } [ %367, %374 ], [ %571, %578 ], [ %891, %905 ]
  resume { ptr, i32 } %916

917:                                              ; preds = %907, %1
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZNSt7__cxx114listIiSaIiEE4sortEv(ptr noundef nonnull align 8 dereferenceable(24) %0) #6 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"struct.std::__detail::_Scratch_list", align 8
  %3 = alloca [64 x %"struct.std::__detail::_Scratch_list"], align 16
  %4 = load ptr, ptr %0, align 8, !tbaa !766
  %5 = icmp eq ptr %4, %0
  br i1 %5, label %71, label %6

6:                                                ; preds = %1
  %7 = load ptr, ptr %4, align 8, !tbaa !766
  %8 = icmp eq ptr %7, %0
  br i1 %8, label %71, label %9

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #57
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %2, i64 0, i32 1
  store ptr %2, ptr %10, align 8, !tbaa !764
  store ptr %2, ptr %2, align 8, !tbaa !766
  call void @llvm.lifetime.start.p0(i64 1024, ptr nonnull %3) #57
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi i64 [ 0, %9 ], [ %15, %11 ]
  %13 = getelementptr inbounds %"struct.std::__detail::_Scratch_list", ptr %3, i64 %12
  %14 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %13, i64 0, i32 1
  store ptr %13, ptr %14, align 8, !tbaa !764
  store ptr %13, ptr %13, align 16, !tbaa !766
  %15 = add nuw nsw i64 %12, 1
  %16 = icmp eq i64 %15, 64
  br i1 %16, label %17, label %11

17:                                               ; preds = %43, %11
  %18 = phi ptr [ %48, %43 ], [ %4, %11 ]
  %19 = phi ptr [ %47, %43 ], [ %3, %11 ]
  %20 = load ptr, ptr %18, align 8, !tbaa !766
  call void @_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull %18, ptr noundef %20) #59
  %21 = icmp eq ptr %3, %19
  br i1 %21, label %43, label %22

22:                                               ; preds = %27, %17
  %23 = phi ptr [ %28, %27 ], [ %3, %17 ]
  %24 = load ptr, ptr %23, align 8, !tbaa !766
  %25 = icmp ne ptr %24, %23
  br i1 %25, label %26, label %43

26:                                               ; preds = %22
  invoke void @_ZNSt8__detail13_Scratch_list5mergeINS0_8_Ptr_cmpISt14_List_iteratorIiEvEEEEvRNS_15_List_node_baseET_(ptr noundef nonnull align 8 dereferenceable(16) %23, ptr noundef nonnull align 8 dereferenceable(16) %2) #56
          to label %27 unwind label %32

27:                                               ; preds = %26
  call void @_ZNSt8__detail15_List_node_base4swapERS0_S1_(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %23) #59
  %28 = getelementptr inbounds %"struct.std::__detail::_Scratch_list", ptr %23, i64 1
  %29 = icmp eq ptr %28, %19
  br i1 %29, label %43, label %22, !llvm.loop !779

30:                                               ; preds = %54
  %31 = landingpad { ptr, i32 }
          catch ptr null
  br label %34

32:                                               ; preds = %26
  %33 = landingpad { ptr, i32 }
          catch ptr null
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi { ptr, i32 } [ %31, %30 ], [ %33, %32 ]
  %36 = extractvalue { ptr, i32 } %35, 0
  %37 = call ptr @__cxa_begin_catch(ptr %36) #57
  %38 = load ptr, ptr %2, align 8, !tbaa !766
  %39 = icmp eq ptr %38, %2
  br i1 %39, label %41, label %40

40:                                               ; preds = %34
  call void @_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %38, ptr noundef nonnull %2) #59
  br label %41

41:                                               ; preds = %40, %34
  br label %59

42:                                               ; preds = %65
  invoke void @__cxa_rethrow() #64
          to label %75 unwind label %68

43:                                               ; preds = %27, %22, %17
  %44 = phi ptr [ %3, %17 ], [ %19, %27 ], [ %23, %22 ]
  %45 = phi i1 [ true, %17 ], [ %25, %27 ], [ %25, %22 ]
  call void @_ZNSt8__detail15_List_node_base4swapERS0_S1_(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %44) #59
  %46 = zext i1 %45 to i64
  %47 = getelementptr inbounds %"struct.std::__detail::_Scratch_list", ptr %19, i64 %46
  %48 = load ptr, ptr %0, align 8, !tbaa !766
  %49 = icmp eq ptr %48, %0
  br i1 %49, label %50, label %17, !llvm.loop !780

50:                                               ; preds = %54, %43
  %.lcssa4 = phi i1 [ %.lcssa4, %54 ], [ %45, %43 ]
  %.lcssa3 = phi ptr [ %.lcssa3, %54 ], [ %47, %43 ]
  %.lcssa1 = phi ptr [ %.lcssa1, %54 ], [ %19, %43 ]
  %51 = phi ptr [ %52, %54 ], [ %3, %43 ]
  %52 = getelementptr inbounds %"struct.std::__detail::_Scratch_list", ptr %51, i64 1
  %53 = icmp eq ptr %52, %.lcssa3
  br i1 %53, label %55, label %54

54:                                               ; preds = %50
  invoke void @_ZNSt8__detail13_Scratch_list5mergeINS0_8_Ptr_cmpISt14_List_iteratorIiEvEEEEvRNS_15_List_node_baseET_(ptr noundef nonnull align 8 dereferenceable(16) %52, ptr noundef nonnull align 8 dereferenceable(16) %51) #56
          to label %50 unwind label %30, !llvm.loop !781

55:                                               ; preds = %50
  %.lcssa4.lcssa = phi i1 [ %.lcssa4, %50 ]
  %.lcssa1.lcssa = phi ptr [ %.lcssa1, %50 ]
  %56 = xor i1 %.lcssa4.lcssa, true
  %57 = sext i1 %56 to i64
  %58 = getelementptr inbounds %"struct.std::__detail::_Scratch_list", ptr %.lcssa1.lcssa, i64 %57
  call void @_ZNSt8__detail15_List_node_base4swapERS0_S1_(ptr noundef nonnull align 8 dereferenceable(16) %58, ptr noundef nonnull align 8 dereferenceable(16) %0) #59
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %3) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #57
  br label %71

59:                                               ; preds = %65, %41
  %60 = phi i64 [ %66, %65 ], [ 0, %41 ]
  %61 = getelementptr inbounds [64 x %"struct.std::__detail::_Scratch_list"], ptr %3, i64 0, i64 %60
  %62 = load ptr, ptr %61, align 16, !tbaa !766
  %63 = icmp eq ptr %62, %61
  br i1 %63, label %65, label %64

64:                                               ; preds = %59
  call void @_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %62, ptr noundef nonnull %61) #59
  br label %65

65:                                               ; preds = %64, %59
  %66 = add nuw nsw i64 %60, 1
  %67 = icmp eq i64 %66, 64
  br i1 %67, label %42, label %59, !llvm.loop !782

68:                                               ; preds = %42
  %69 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %70 unwind label %72

70:                                               ; preds = %68
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %3) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #57
  resume { ptr, i32 } %69

71:                                               ; preds = %55, %6, %1
  ret void

72:                                               ; preds = %68
  %73 = landingpad { ptr, i32 }
          catch ptr null
  %74 = extractvalue { ptr, i32 } %73, 0
  call void @__clang_call_terminate(ptr %74) #60
  unreachable

75:                                               ; preds = %42
  unreachable
}

; Function Attrs: nounwind optsize
declare void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef) local_unnamed_addr #8

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt7__cxx114listIiSaIiEE6uniqueEv(ptr noundef nonnull align 8 dereferenceable(24) %0) #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.std::__cxx11::list", align 8
  %3 = load ptr, ptr %0, align 8, !tbaa !766
  %4 = icmp eq ptr %3, %0
  br i1 %4, label %43, label %5

5:                                                ; preds = %1
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #57
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, PP::Variable>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, PP::Variable>>, std::less<std::__cxx11::basic_string<char>>>::_Auto_node", ptr %2, i64 0, i32 1
  store ptr %2, ptr %6, align 8, !tbaa !764
  store ptr %2, ptr %2, align 8, !tbaa !766
  %7 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %2, i64 0, i32 1
  store i64 0, ptr %7, align 8, !tbaa !767
  %8 = load ptr, ptr %3, align 8, !tbaa !766
  %9 = icmp eq ptr %8, %0
  br i1 %9, label %42, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %0, i64 0, i32 1
  br label %12

12:                                               ; preds = %31, %10
  %13 = phi ptr [ %8, %10 ], [ %33, %31 ]
  %14 = phi ptr [ %3, %10 ], [ %32, %31 ]
  %15 = getelementptr inbounds %"struct.std::_List_node", ptr %14, i64 0, i32 1
  %16 = load i32, ptr %15, align 4, !tbaa !68
  %17 = getelementptr inbounds %"struct.std::_List_node", ptr %13, i64 0, i32 1
  %18 = load i32, ptr %17, align 4, !tbaa !68
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %31

20:                                               ; preds = %12
  %21 = load ptr, ptr %2, align 8, !tbaa !766
  %22 = load ptr, ptr %13, align 8, !tbaa !766
  %23 = icmp eq ptr %21, %13
  %24 = icmp eq ptr %22, %21
  %25 = select i1 %23, i1 true, i1 %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %20
  call void @_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_(ptr noundef nonnull align 8 dereferenceable(16) %21, ptr noundef nonnull %13, ptr noundef %22) #59
  %27 = load i64, ptr %7, align 8, !tbaa !769
  %28 = add i64 %27, 1
  store i64 %28, ptr %7, align 8, !tbaa !769
  %29 = load i64, ptr %11, align 8, !tbaa !769
  %30 = add i64 %29, -1
  store i64 %30, ptr %11, align 8, !tbaa !769
  br label %31

31:                                               ; preds = %26, %20, %12
  %32 = phi ptr [ %14, %20 ], [ %14, %26 ], [ %13, %12 ]
  %33 = load ptr, ptr %32, align 8, !tbaa !766
  %34 = icmp eq ptr %33, %0
  br i1 %34, label %35, label %12, !llvm.loop !783

35:                                               ; preds = %31
  %36 = load ptr, ptr %2, align 8, !tbaa !766
  %37 = icmp eq ptr %36, %2
  br i1 %37, label %42, label %38

38:                                               ; preds = %38, %35
  %39 = phi ptr [ %40, %38 ], [ %36, %35 ]
  %40 = load ptr, ptr %39, align 8, !tbaa !766
  call void @_ZdlPv(ptr noundef %39) #58
  %41 = icmp eq ptr %40, %2
  br i1 %41, label %42, label %38, !llvm.loop !773

42:                                               ; preds = %38, %35, %5
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #57
  br label %43

43:                                               ; preds = %42, %1
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef, ptr noundef) local_unnamed_addr #8

; Function Attrs: optsize uwtable
define internal void @_ZNSt8__detail13_Scratch_list5mergeINS0_8_Ptr_cmpISt14_List_iteratorIiEvEEEEvRNS_15_List_node_baseET_(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) #6 comdat align 2 {
  %3 = load ptr, ptr %0, align 8, !tbaa !766
  %4 = load ptr, ptr %1, align 8, !tbaa !766
  %5 = icmp ne ptr %3, %0
  %6 = icmp ne ptr %4, %1
  %7 = select i1 %5, i1 %6, i1 false
  br i1 %7, label %8, label %26

8:                                                ; preds = %20, %2
  %9 = phi ptr [ %22, %20 ], [ %3, %2 ]
  %10 = phi ptr [ %21, %20 ], [ %4, %2 ]
  %11 = getelementptr inbounds %"struct.std::_List_node", ptr %10, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !68
  %13 = getelementptr inbounds %"struct.std::_List_node", ptr %9, i64 0, i32 1
  %14 = load i32, ptr %13, align 4, !tbaa !68
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load ptr, ptr %10, align 8, !tbaa !766
  tail call void @_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_(ptr noundef nonnull align 8 dereferenceable(16) %9, ptr noundef nonnull %10, ptr noundef %17) #59
  br label %20

18:                                               ; preds = %8
  %19 = load ptr, ptr %9, align 8, !tbaa !766
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi ptr [ %17, %16 ], [ %10, %18 ]
  %22 = phi ptr [ %9, %16 ], [ %19, %18 ]
  %23 = icmp ne ptr %22, %0
  %24 = icmp ne ptr %21, %1
  %25 = and i1 %23, %24
  br i1 %25, label %8, label %26, !llvm.loop !784

26:                                               ; preds = %20, %2
  %27 = phi ptr [ %4, %2 ], [ %21, %20 ]
  %28 = phi i1 [ %6, %2 ], [ %24, %20 ]
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %27, ptr noundef nonnull %1) #59
  br label %30

30:                                               ; preds = %29, %26
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt8__detail15_List_node_base4swapERS0_S1_(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef nonnull align 8 dereferenceable(16)) local_unnamed_addr #8

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN4Mesh23print_partition_measureEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) #13 align 2 {
  %2 = load i32, ptr @meas_count, align 4, !tbaa !68
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %28, label %4

4:                                                ; preds = %1
  %5 = load i32, ptr @measure_type, align 4, !tbaa !68
  switch i32 %5, label %28 [
    i32 0, label %6
    i32 1, label %12
    i32 2, label %16
    i32 3, label %20
    i32 4, label %24
  ]

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %8 = load i32, ptr %7, align 4, !tbaa !650
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %28

10:                                               ; preds = %6
  %11 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.212)
  br label %28

12:                                               ; preds = %4
  %13 = load double, ptr @meas_sum_average, align 8, !tbaa !171
  %14 = sitofp i32 %2 to double
  %15 = fdiv double %13, %14
  tail call void @_ZN4Mesh15parallel_outputEPKcdiS1_(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef nonnull @.str.1.213, double noundef %15, i32 noundef 0, ptr noundef nonnull @.str.2.214) #56
  br label %28

16:                                               ; preds = %4
  %17 = load double, ptr @meas_sum_average, align 8, !tbaa !171
  %18 = sitofp i32 %2 to double
  %19 = fdiv double %17, %18
  tail call void @_ZN4Mesh15parallel_outputEPKcdiS1_(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef nonnull @.str.1.213, double noundef %19, i32 noundef 0, ptr noundef nonnull @.str.3.215) #56
  br label %28

20:                                               ; preds = %4
  %21 = load double, ptr @meas_sum_average, align 8, !tbaa !171
  %22 = sitofp i32 %2 to double
  %23 = fdiv double %21, %22
  tail call void @_ZN4Mesh15parallel_outputEPKcdiS1_(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef nonnull @.str.4.216, double noundef %23, i32 noundef 0, ptr noundef nonnull @.str.5.217) #56
  br label %28

24:                                               ; preds = %4
  %25 = load double, ptr @meas_sum_average, align 8, !tbaa !171
  %26 = sitofp i32 %2 to double
  %27 = fdiv double %25, %26
  tail call void @_ZN4Mesh15parallel_outputEPKcdiS1_(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef nonnull @.str.6.218, double noundef %27, i32 noundef 0, ptr noundef nonnull @.str.5.217) #56
  br label %28

28:                                               ; preds = %24, %20, %16, %12, %10, %6, %4, %1
  %29 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 10
  %30 = load i32, ptr %29, align 8, !tbaa !651
  %31 = icmp sgt i32 %30, 1
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 17
  %34 = load double, ptr %33, align 8, !tbaa !648
  tail call void @_ZN4Mesh15parallel_outputEPKcdiS1_(ptr noundef nonnull align 8 dereferenceable(2288) %0, ptr noundef nonnull @.str.7.219, double noundef %34, i32 noundef 0, ptr noundef nonnull @.str.3.215) #56
  br label %35

35:                                               ; preds = %32, %28
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal void @_ZN4Mesh20print_partition_typeEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0) #39 align 2 {
  %2 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 9
  %3 = load i32, ptr %2, align 4, !tbaa !650
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = load i32, ptr @initial_order, align 4, !tbaa !68
  %7 = icmp ult i32 %6, 4
  br i1 %7, label %8, label %13

8:                                                ; preds = %5
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds [4 x ptr], ptr @switch.table._ZN4Mesh20print_partition_typeEv, i64 0, i64 %9
  %11 = load ptr, ptr %10, align 8
  %12 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) %11) #56
  br label %13

13:                                               ; preds = %8, %5
  %14 = load i32, ptr @cycle_reorder, align 4, !tbaa !68
  %15 = icmp ult i32 %14, 4
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds [4 x ptr], ptr @switch.table._ZN4Mesh20print_partition_typeEv.22, i64 0, i64 %17
  %19 = load ptr, ptr %18, align 8
  %20 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) %19) #56
  br label %21

21:                                               ; preds = %16, %13
  %22 = load i8, ptr @localStencil, align 1, !tbaa !540, !range !130, !noundef !131
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.21.222)
  br label %28

26:                                               ; preds = %21
  %27 = tail call i32 @putchar(i32 10)
  br label %28

28:                                               ; preds = %26, %24, %1
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZN4Mesh15partition_cellsEiRSt6vectorIiSaIiEE16partition_method(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %1, ptr nocapture noundef nonnull readonly align 8 dereferenceable(24) %2, i32 noundef %3) #6 align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.std::vector", align 8
  %6 = alloca %"class.std::vector", align 8
  %7 = alloca %"class.std::vector", align 8
  %8 = alloca %"class.std::vector", align 8
  %9 = alloca %"class.std::vector", align 8
  %10 = alloca %struct.timeval, align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::vector", align 8
  %13 = alloca %"class.std::ios_base::Init", align 1
  %14 = alloca %"class.std::vector", align 8
  %15 = alloca %"class.std::ios_base::Init", align 1
  %16 = alloca %"class.std::vector", align 8
  %17 = alloca %"class.std::ios_base::Init", align 1
  %18 = alloca %"class.std::vector", align 8
  %19 = alloca %"class.std::ios_base::Init", align 1
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #57
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #57
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #57
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #57
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #57
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %9, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %10) #57
  invoke void @cpu_timer_start(ptr noundef nonnull %10) #56
          to label %20 unwind label %27

20:                                               ; preds = %4
  %21 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 45
  %22 = load i64, ptr %21, align 8, !tbaa !543
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #57
  store i32 0, ptr %11, align 4, !tbaa !68
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEmRKi(ptr noundef nonnull align 8 dereferenceable(24) %5, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(4) %11) #56
          to label %23 unwind label %29

23:                                               ; preds = %20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #57
  %24 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 11
  %25 = load i32, ptr %24, align 4, !tbaa !653
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %36

27:                                               ; preds = %31, %4
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %600

29:                                               ; preds = %20
  %30 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #57
  br label %600

31:                                               ; preds = %23
  %32 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 25
  %33 = load i64, ptr %21, align 8, !tbaa !543
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %32, i64 noundef %33) #56
          to label %34 unwind label %27

34:                                               ; preds = %31
  call void @_ZN4Mesh17calc_distributionEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef %1) #56
  %35 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 13
  store i32 0, ptr %35, align 4, !tbaa !654
  br label %36

36:                                               ; preds = %34, %23
  switch i32 %3, label %571 [
    i32 0, label %37
    i32 1, label %51
    i32 3, label %332
  ]

37:                                               ; preds = %36
  %38 = load i64, ptr %21, align 8, !tbaa !543
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %571, label %40

40:                                               ; preds = %37
  %41 = load ptr, ptr %2, align 8, !tbaa !65
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %47, %42 ]
  %44 = phi i32 [ 0, %40 ], [ %46, %42 ]
  %45 = getelementptr inbounds i32, ptr %41, i64 %43
  store i32 %44, ptr %45, align 4, !tbaa !68
  %46 = add i32 %44, 1
  %47 = zext i32 %46 to i64
  %48 = icmp ugt i64 %38, %47
  br i1 %48, label %42, label %571, !llvm.loop !785

49:                                               ; preds = %571, %375, %337, %335, %149, %66, %64, %63, %62
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %600

51:                                               ; preds = %36
  %52 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %53 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75, i32 0, i32 0, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !107
  %55 = load ptr, ptr %52, align 8, !tbaa !109
  %56 = ptrtoint ptr %54 to i64
  %57 = ptrtoint ptr %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = load i64, ptr %21, align 8, !tbaa !543
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %63

62:                                               ; preds = %51
  invoke void @_ZN4Mesh24calc_spatial_coordinatesEi(ptr noundef nonnull align 8 dereferenceable(2288) %0, i32 noundef 0) #56
          to label %63 unwind label %49

63:                                               ; preds = %62, %51
  invoke void @_ZN4Mesh17calc_centerminmaxEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) #56
          to label %64 unwind label %49

64:                                               ; preds = %63
  %65 = load i64, ptr %21, align 8, !tbaa !543
  invoke void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %8, i64 noundef %65) #56
          to label %66 unwind label %49

66:                                               ; preds = %64
  %67 = load i64, ptr %21, align 8, !tbaa !543
  invoke void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %9, i64 noundef %67) #56
          to label %68 unwind label %49

68:                                               ; preds = %66
  %69 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 55
  %70 = load double, ptr %69, align 8, !tbaa !717
  %71 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 54
  %72 = load double, ptr %71, align 8, !tbaa !716
  %73 = fsub double %70, %72
  %74 = fdiv double 1.000000e+00, %73
  %75 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 57
  %76 = load double, ptr %75, align 8, !tbaa !720
  %77 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 56
  %78 = load double, ptr %77, align 8, !tbaa !719
  %79 = fsub double %76, %78
  %80 = fdiv double 1.000000e+00, %79
  %81 = load i64, ptr %21, align 8, !tbaa !543
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %68
  %84 = load ptr, ptr %52, align 8, !tbaa !109
  %85 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %86 = load ptr, ptr %85, align 8, !tbaa !109
  %87 = load ptr, ptr %8, align 8, !tbaa !109
  %88 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %89 = load ptr, ptr %88, align 8, !tbaa !109
  %90 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %91 = load ptr, ptr %90, align 8, !tbaa !109
  %92 = load ptr, ptr %9, align 8, !tbaa !109
  br label %94

93:                                               ; preds = %94, %68
  br i1 %61, label %120, label %146

94:                                               ; preds = %94, %83
  %95 = phi i64 [ 0, %83 ], [ %118, %94 ]
  %96 = phi i32 [ 0, %83 ], [ %117, %94 ]
  %97 = getelementptr inbounds double, ptr %84, i64 %95
  %98 = load double, ptr %97, align 8, !tbaa !171
  %99 = getelementptr inbounds double, ptr %86, i64 %95
  %100 = load double, ptr %99, align 8, !tbaa !171
  %101 = fmul double %100, 5.000000e-01
  %102 = fadd double %98, %101
  %103 = load double, ptr %71, align 8, !tbaa !716
  %104 = fsub double %102, %103
  %105 = fmul double %74, %104
  %106 = getelementptr inbounds double, ptr %87, i64 %95
  store double %105, ptr %106, align 8, !tbaa !171
  %107 = getelementptr inbounds double, ptr %89, i64 %95
  %108 = load double, ptr %107, align 8, !tbaa !171
  %109 = getelementptr inbounds double, ptr %91, i64 %95
  %110 = load double, ptr %109, align 8, !tbaa !171
  %111 = fmul double %110, 5.000000e-01
  %112 = fadd double %108, %111
  %113 = load double, ptr %77, align 8, !tbaa !719
  %114 = fsub double %112, %113
  %115 = fmul double %80, %114
  %116 = getelementptr inbounds double, ptr %92, i64 %95
  store double %115, ptr %116, align 8, !tbaa !171
  %117 = add i32 %96, 1
  %118 = zext i32 %117 to i64
  %119 = icmp ugt i64 %81, %118
  br i1 %119, label %94, label %93, !llvm.loop !786

120:                                              ; preds = %93
  %121 = load ptr, ptr %52, align 8, !tbaa !109
  %122 = load ptr, ptr %53, align 8, !tbaa !107
  %123 = icmp eq ptr %122, %121
  br i1 %123, label %125, label %124

124:                                              ; preds = %120
  store ptr %121, ptr %53, align 8, !tbaa !107
  br label %125

125:                                              ; preds = %124, %120
  %126 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %127 = load ptr, ptr %126, align 8, !tbaa !109
  %128 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76, i32 0, i32 0, i32 0, i32 1
  %129 = load ptr, ptr %128, align 8, !tbaa !107
  %130 = icmp eq ptr %129, %127
  br i1 %130, label %132, label %131

131:                                              ; preds = %125
  store ptr %127, ptr %128, align 8, !tbaa !107
  br label %132

132:                                              ; preds = %131, %125
  %133 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %134 = load ptr, ptr %133, align 8, !tbaa !109
  %135 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77, i32 0, i32 0, i32 0, i32 1
  %136 = load ptr, ptr %135, align 8, !tbaa !107
  %137 = icmp eq ptr %136, %134
  br i1 %137, label %139, label %138

138:                                              ; preds = %132
  store ptr %134, ptr %135, align 8, !tbaa !107
  br label %139

139:                                              ; preds = %138, %132
  %140 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %141 = load ptr, ptr %140, align 8, !tbaa !109
  %142 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78, i32 0, i32 0, i32 0, i32 1
  %143 = load ptr, ptr %142, align 8, !tbaa !107
  %144 = icmp eq ptr %143, %141
  br i1 %144, label %146, label %145

145:                                              ; preds = %139
  store ptr %141, ptr %142, align 8, !tbaa !107
  br label %146

146:                                              ; preds = %145, %139, %93
  %147 = load i32, ptr %24, align 4, !tbaa !653
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %571

149:                                              ; preds = %146
  %150 = mul i64 %81, 12
  %151 = call noalias ptr @malloc(i64 noundef %150) #65
  %152 = trunc i64 %81 to i32
  %153 = load ptr, ptr %8, align 8, !tbaa !109
  %154 = load ptr, ptr %9, align 8, !tbaa !109
  invoke void @hsfc2sort(i32 noundef %152, ptr noundef nonnull %153, ptr noundef nonnull %154, i32 noundef 0, ptr noundef %151, i32 noundef 1) #56
          to label %155 unwind label %49

155:                                              ; preds = %149
  %156 = load i64, ptr %21, align 8, !tbaa !543
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %160, label %158

158:                                              ; preds = %155
  %159 = load ptr, ptr %2, align 8, !tbaa !65
  br label %161

160:                                              ; preds = %161, %155
  call void @free(ptr noundef %151) #59
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #57
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #57
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %12, i64 noundef %156, ptr noundef nonnull align 1 dereferenceable(1) %13) #56
          to label %170 unwind label %209

161:                                              ; preds = %161, %158
  %162 = phi i64 [ 0, %158 ], [ %168, %161 ]
  %163 = phi i32 [ 0, %158 ], [ %167, %161 ]
  %164 = getelementptr inbounds i32, ptr %151, i64 %162
  %165 = load i32, ptr %164, align 4, !tbaa !68
  %166 = getelementptr inbounds i32, ptr %159, i64 %162
  store i32 %165, ptr %166, align 4, !tbaa !68
  %167 = add i32 %163, 1
  %168 = zext i32 %167 to i64
  %169 = icmp ugt i64 %156, %168
  br i1 %169, label %161, label %160, !llvm.loop !787

170:                                              ; preds = %160
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #57
  %171 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %172 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %173 = load ptr, ptr %172, align 8, !tbaa !684
  invoke void @_ZN10MallocPlus20set_memory_attributeEPvi(ptr noundef nonnull align 8 dereferenceable(96) %171, ptr noundef %173, i32 noundef 256) #56
          to label %174 unwind label %211

174:                                              ; preds = %170
  %175 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %176 = load ptr, ptr %175, align 8, !tbaa !685
  invoke void @_ZN10MallocPlus20set_memory_attributeEPvi(ptr noundef nonnull align 8 dereferenceable(96) %171, ptr noundef %176, i32 noundef 256) #56
          to label %177 unwind label %211

177:                                              ; preds = %174
  %178 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %179 = load ptr, ptr %178, align 8, !tbaa !686
  invoke void @_ZN10MallocPlus20set_memory_attributeEPvi(ptr noundef nonnull align 8 dereferenceable(96) %171, ptr noundef %179, i32 noundef 256) #56
          to label %180 unwind label %211

180:                                              ; preds = %177
  %181 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %182 = load ptr, ptr %181, align 8, !tbaa !687
  invoke void @_ZN10MallocPlus20set_memory_attributeEPvi(ptr noundef nonnull align 8 dereferenceable(96) %171, ptr noundef %182, i32 noundef 256) #56
          to label %183 unwind label %211

183:                                              ; preds = %180
  %184 = load ptr, ptr %2, align 8, !tbaa !65
  invoke void @_ZN10MallocPlus18memory_reorder_allEPi(ptr noundef nonnull align 8 dereferenceable(96) %171, ptr noundef nonnull %184) #56
          to label %185 unwind label %211

185:                                              ; preds = %183
  invoke void @_ZN4Mesh17memory_reset_ptrsEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) #56
          to label %186 unwind label %211

186:                                              ; preds = %185
  %187 = load ptr, ptr %53, align 8, !tbaa !107
  %188 = load ptr, ptr %52, align 8, !tbaa !109
  %189 = ptrtoint ptr %187 to i64
  %190 = ptrtoint ptr %188 to i64
  %191 = sub i64 %189, %190
  %192 = ashr exact i64 %191, 3
  %193 = load i64, ptr %21, align 8, !tbaa !543
  %194 = icmp ult i64 %192, %193
  br i1 %194, label %320, label %195

195:                                              ; preds = %186
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #57
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %15) #57
  invoke void @_ZNSt6vectorIdSaIdEEC2EmRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %14, i64 noundef %193, ptr noundef nonnull align 1 dereferenceable(1) %15) #56
          to label %196 unwind label %213

196:                                              ; preds = %195
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %15) #57
  %197 = load i64, ptr %21, align 8, !tbaa !543
  %198 = trunc i64 %197 to i32
  %199 = icmp sgt i32 %198, 0
  %200 = load ptr, ptr %14, align 8, !tbaa !109
  br i1 %199, label %201, label %306

201:                                              ; preds = %196
  %202 = load ptr, ptr %52, align 8, !tbaa !109
  %203 = and i64 %197, 4294967295
  br label %215

204:                                              ; preds = %215
  br i1 %199, label %205, label %308

205:                                              ; preds = %204
  %206 = load ptr, ptr %2, align 8, !tbaa !65
  %207 = load ptr, ptr %52, align 8, !tbaa !109
  %208 = and i64 %197, 4294967295
  br label %227

209:                                              ; preds = %160
  %210 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #57
  br label %330

211:                                              ; preds = %185, %183, %180, %177, %174, %170
  %212 = landingpad { ptr, i32 }
          cleanup
  br label %325

213:                                              ; preds = %195
  %214 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %15) #57
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #57
  br label %325

215:                                              ; preds = %215, %201
  %216 = phi i64 [ 0, %201 ], [ %220, %215 ]
  %217 = getelementptr inbounds double, ptr %202, i64 %216
  %218 = load double, ptr %217, align 8, !tbaa !171
  %219 = getelementptr inbounds double, ptr %200, i64 %216
  store double %218, ptr %219, align 8, !tbaa !171
  %220 = add nuw nsw i64 %216, 1
  %221 = icmp eq i64 %220, %203
  br i1 %221, label %204, label %215, !llvm.loop !788

222:                                              ; preds = %227
  br i1 %199, label %223, label %308

223:                                              ; preds = %222
  %224 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %225 = load ptr, ptr %224, align 8, !tbaa !109
  %226 = and i64 %197, 4294967295
  br label %243

227:                                              ; preds = %227, %205
  %228 = phi i64 [ 0, %205 ], [ %235, %227 ]
  %229 = getelementptr inbounds i32, ptr %206, i64 %228
  %230 = load i32, ptr %229, align 4, !tbaa !68
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds double, ptr %200, i64 %231
  %233 = load double, ptr %232, align 8, !tbaa !171
  %234 = getelementptr inbounds double, ptr %207, i64 %228
  store double %233, ptr %234, align 8, !tbaa !171
  %235 = add nuw nsw i64 %228, 1
  %236 = icmp eq i64 %235, %208
  br i1 %236, label %222, label %227, !llvm.loop !789

237:                                              ; preds = %243
  br i1 %199, label %238, label %308

238:                                              ; preds = %237
  %239 = load ptr, ptr %2, align 8, !tbaa !65
  %240 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %241 = load ptr, ptr %240, align 8, !tbaa !109
  %242 = and i64 %197, 4294967295
  br label %255

243:                                              ; preds = %243, %223
  %244 = phi i64 [ 0, %223 ], [ %248, %243 ]
  %245 = getelementptr inbounds double, ptr %225, i64 %244
  %246 = load double, ptr %245, align 8, !tbaa !171
  %247 = getelementptr inbounds double, ptr %200, i64 %244
  store double %246, ptr %247, align 8, !tbaa !171
  %248 = add nuw nsw i64 %244, 1
  %249 = icmp eq i64 %248, %226
  br i1 %249, label %237, label %243, !llvm.loop !790

250:                                              ; preds = %255
  br i1 %199, label %251, label %308

251:                                              ; preds = %250
  %252 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %253 = load ptr, ptr %252, align 8, !tbaa !109
  %254 = and i64 %197, 4294967295
  br label %271

255:                                              ; preds = %255, %238
  %256 = phi i64 [ 0, %238 ], [ %263, %255 ]
  %257 = getelementptr inbounds i32, ptr %239, i64 %256
  %258 = load i32, ptr %257, align 4, !tbaa !68
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds double, ptr %200, i64 %259
  %261 = load double, ptr %260, align 8, !tbaa !171
  %262 = getelementptr inbounds double, ptr %241, i64 %256
  store double %261, ptr %262, align 8, !tbaa !171
  %263 = add nuw nsw i64 %256, 1
  %264 = icmp eq i64 %263, %242
  br i1 %264, label %250, label %255, !llvm.loop !791

265:                                              ; preds = %271
  br i1 %199, label %266, label %308

266:                                              ; preds = %265
  %267 = load ptr, ptr %2, align 8, !tbaa !65
  %268 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %269 = load ptr, ptr %268, align 8, !tbaa !109
  %270 = and i64 %197, 4294967295
  br label %283

271:                                              ; preds = %271, %251
  %272 = phi i64 [ 0, %251 ], [ %276, %271 ]
  %273 = getelementptr inbounds double, ptr %253, i64 %272
  %274 = load double, ptr %273, align 8, !tbaa !171
  %275 = getelementptr inbounds double, ptr %200, i64 %272
  store double %274, ptr %275, align 8, !tbaa !171
  %276 = add nuw nsw i64 %272, 1
  %277 = icmp eq i64 %276, %254
  br i1 %277, label %265, label %271, !llvm.loop !792

278:                                              ; preds = %283
  br i1 %199, label %279, label %308

279:                                              ; preds = %278
  %280 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %281 = load ptr, ptr %280, align 8, !tbaa !109
  %282 = and i64 %197, 4294967295
  br label %299

283:                                              ; preds = %283, %266
  %284 = phi i64 [ 0, %266 ], [ %291, %283 ]
  %285 = getelementptr inbounds i32, ptr %267, i64 %284
  %286 = load i32, ptr %285, align 4, !tbaa !68
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds double, ptr %200, i64 %287
  %289 = load double, ptr %288, align 8, !tbaa !171
  %290 = getelementptr inbounds double, ptr %269, i64 %284
  store double %289, ptr %290, align 8, !tbaa !171
  %291 = add nuw nsw i64 %284, 1
  %292 = icmp eq i64 %291, %270
  br i1 %292, label %278, label %283, !llvm.loop !793

293:                                              ; preds = %299
  br i1 %199, label %294, label %308

294:                                              ; preds = %293
  %295 = load ptr, ptr %2, align 8, !tbaa !65
  %296 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %297 = load ptr, ptr %296, align 8, !tbaa !109
  %298 = and i64 %197, 4294967295
  br label %310

299:                                              ; preds = %299, %279
  %300 = phi i64 [ 0, %279 ], [ %304, %299 ]
  %301 = getelementptr inbounds double, ptr %281, i64 %300
  %302 = load double, ptr %301, align 8, !tbaa !171
  %303 = getelementptr inbounds double, ptr %200, i64 %300
  store double %302, ptr %303, align 8, !tbaa !171
  %304 = add nuw nsw i64 %300, 1
  %305 = icmp eq i64 %304, %282
  br i1 %305, label %293, label %299, !llvm.loop !794

306:                                              ; preds = %196
  %307 = icmp eq ptr %200, null
  br i1 %307, label %309, label %308

308:                                              ; preds = %310, %306, %293, %278, %265, %250, %237, %222, %204
  call void @_ZdlPv(ptr noundef nonnull %200) #58
  br label %309

309:                                              ; preds = %308, %306
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #57
  br label %320

310:                                              ; preds = %310, %294
  %311 = phi i64 [ 0, %294 ], [ %318, %310 ]
  %312 = getelementptr inbounds i32, ptr %295, i64 %311
  %313 = load i32, ptr %312, align 4, !tbaa !68
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds double, ptr %200, i64 %314
  %316 = load double, ptr %315, align 8, !tbaa !171
  %317 = getelementptr inbounds double, ptr %297, i64 %311
  store double %316, ptr %317, align 8, !tbaa !171
  %318 = add nuw nsw i64 %311, 1
  %319 = icmp eq i64 %318, %298
  br i1 %319, label %308, label %310, !llvm.loop !795

320:                                              ; preds = %309, %186
  %321 = load ptr, ptr %12, align 8, !tbaa !65
  %322 = icmp eq ptr %321, null
  br i1 %322, label %324, label %323

323:                                              ; preds = %320
  call void @_ZdlPv(ptr noundef nonnull %321) #58
  br label %324

324:                                              ; preds = %323, %320
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #57
  br label %571

325:                                              ; preds = %213, %211
  %326 = phi { ptr, i32 } [ %214, %213 ], [ %212, %211 ]
  %327 = load ptr, ptr %12, align 8, !tbaa !65
  %328 = icmp eq ptr %327, null
  br i1 %328, label %330, label %329

329:                                              ; preds = %325
  call void @_ZdlPv(ptr noundef nonnull %327) #58
  br label %330

330:                                              ; preds = %329, %325, %209
  %331 = phi { ptr, i32 } [ %210, %209 ], [ %326, %325 ], [ %326, %329 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #57
  br label %600

332:                                              ; preds = %36
  %333 = load i32, ptr %24, align 4, !tbaa !653
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %571

335:                                              ; preds = %332
  %336 = load i64, ptr %21, align 8, !tbaa !543
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %6, i64 noundef %336) #56
          to label %337 unwind label %49

337:                                              ; preds = %335
  %338 = load i64, ptr %21, align 8, !tbaa !543
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %7, i64 noundef %338) #56
          to label %339 unwind label %49

339:                                              ; preds = %337
  %340 = load i64, ptr %21, align 8, !tbaa !543
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %342, label %345

342:                                              ; preds = %339
  %343 = load ptr, ptr %6, align 8, !tbaa !65
  %344 = load ptr, ptr %7, align 8, !tbaa !65
  br label %375

345:                                              ; preds = %339
  %346 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %347 = load ptr, ptr %346, align 8, !tbaa !637
  %348 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %349 = load ptr, ptr %348, align 8, !tbaa !638
  br label %361

350:                                              ; preds = %361
  %.lcssa1 = phi i32 [ %368, %361 ]
  %.lcssa = phi i32 [ %371, %361 ]
  %351 = sitofp i32 %.lcssa1 to double
  %352 = fdiv double 1.600000e+01, %351
  %353 = sitofp i32 %.lcssa to double
  %354 = fdiv double 1.600000e+01, %353
  %355 = load ptr, ptr %6, align 8, !tbaa !65
  %356 = load ptr, ptr %7, align 8, !tbaa !65
  %357 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 64
  %358 = load ptr, ptr %357, align 8, !tbaa !637
  %359 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 65
  %360 = load ptr, ptr %359, align 8, !tbaa !638
  br label %387

361:                                              ; preds = %361, %345
  %362 = phi i64 [ 0, %345 ], [ %373, %361 ]
  %363 = phi i32 [ 0, %345 ], [ %372, %361 ]
  %364 = phi i32 [ 0, %345 ], [ %368, %361 ]
  %365 = phi i32 [ 0, %345 ], [ %371, %361 ]
  %366 = getelementptr inbounds i32, ptr %347, i64 %362
  %367 = load i32, ptr %366, align 4, !tbaa !68
  %368 = call i32 @llvm.smax.i32(i32 %367, i32 %364)
  %369 = getelementptr inbounds i32, ptr %349, i64 %362
  %370 = load i32, ptr %369, align 4, !tbaa !68
  %371 = call i32 @llvm.smax.i32(i32 %370, i32 %365)
  %372 = add i32 %363, 1
  %373 = zext i32 %372 to i64
  %374 = icmp ugt i64 %340, %373
  br i1 %374, label %361, label %350, !llvm.loop !796

375:                                              ; preds = %387, %342
  %376 = phi ptr [ %344, %342 ], [ %356, %387 ]
  %377 = phi ptr [ %343, %342 ], [ %355, %387 ]
  %378 = trunc i64 %340 to i32
  %379 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 67
  %380 = load ptr, ptr %379, align 8, !tbaa !639
  %381 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 36
  %382 = load i32, ptr %381, align 8, !tbaa !647
  %383 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 38
  %384 = load i32, ptr %383, align 8, !tbaa !664
  %385 = load ptr, ptr %5, align 8, !tbaa !65
  %386 = load ptr, ptr %2, align 8, !tbaa !65
  invoke void @calc_zorder(i32 noundef %378, ptr noundef nonnull %377, ptr noundef nonnull %376, ptr noundef %380, i32 noundef %382, i32 noundef %384, ptr noundef nonnull %385, ptr noundef nonnull %386) #56
          to label %405 unwind label %49

387:                                              ; preds = %387, %350
  %388 = phi i64 [ 0, %350 ], [ %403, %387 ]
  %389 = phi i32 [ 0, %350 ], [ %402, %387 ]
  %390 = getelementptr inbounds i32, ptr %358, i64 %388
  %391 = load i32, ptr %390, align 4, !tbaa !68
  %392 = sitofp i32 %391 to double
  %393 = fmul double %352, %392
  %394 = fptosi double %393 to i32
  %395 = getelementptr inbounds i32, ptr %355, i64 %388
  store i32 %394, ptr %395, align 4, !tbaa !68
  %396 = getelementptr inbounds i32, ptr %360, i64 %388
  %397 = load i32, ptr %396, align 4, !tbaa !68
  %398 = sitofp i32 %397 to double
  %399 = fmul double %354, %398
  %400 = fptosi double %399 to i32
  %401 = getelementptr inbounds i32, ptr %356, i64 %388
  store i32 %400, ptr %401, align 4, !tbaa !68
  %402 = add i32 %389, 1
  %403 = zext i32 %402 to i64
  %404 = icmp ugt i64 %340, %403
  br i1 %404, label %387, label %375, !llvm.loop !797

405:                                              ; preds = %375
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %16) #57
  %406 = load i64, ptr %21, align 8, !tbaa !543
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %17) #57
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %16, i64 noundef %406, ptr noundef nonnull align 1 dereferenceable(1) %17) #56
          to label %407 unwind label %448

407:                                              ; preds = %405
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %17) #57
  %408 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 1
  %409 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 69
  %410 = load ptr, ptr %409, align 8, !tbaa !684
  invoke void @_ZN10MallocPlus20set_memory_attributeEPvi(ptr noundef nonnull align 8 dereferenceable(96) %408, ptr noundef %410, i32 noundef 256) #56
          to label %411 unwind label %450

411:                                              ; preds = %407
  %412 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 70
  %413 = load ptr, ptr %412, align 8, !tbaa !685
  invoke void @_ZN10MallocPlus20set_memory_attributeEPvi(ptr noundef nonnull align 8 dereferenceable(96) %408, ptr noundef %413, i32 noundef 256) #56
          to label %414 unwind label %450

414:                                              ; preds = %411
  %415 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 71
  %416 = load ptr, ptr %415, align 8, !tbaa !686
  invoke void @_ZN10MallocPlus20set_memory_attributeEPvi(ptr noundef nonnull align 8 dereferenceable(96) %408, ptr noundef %416, i32 noundef 256) #56
          to label %417 unwind label %450

417:                                              ; preds = %414
  %418 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 72
  %419 = load ptr, ptr %418, align 8, !tbaa !687
  invoke void @_ZN10MallocPlus20set_memory_attributeEPvi(ptr noundef nonnull align 8 dereferenceable(96) %408, ptr noundef %419, i32 noundef 256) #56
          to label %420 unwind label %450

420:                                              ; preds = %417
  %421 = load ptr, ptr %2, align 8, !tbaa !65
  invoke void @_ZN10MallocPlus18memory_reorder_allEPi(ptr noundef nonnull align 8 dereferenceable(96) %408, ptr noundef nonnull %421) #56
          to label %422 unwind label %450

422:                                              ; preds = %420
  invoke void @_ZN4Mesh17memory_reset_ptrsEv(ptr noundef nonnull align 8 dereferenceable(2288) %0) #56
          to label %423 unwind label %450

423:                                              ; preds = %422
  %424 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75
  %425 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 75, i32 0, i32 0, i32 0, i32 1
  %426 = load ptr, ptr %425, align 8, !tbaa !107
  %427 = load ptr, ptr %424, align 8, !tbaa !109
  %428 = ptrtoint ptr %426 to i64
  %429 = ptrtoint ptr %427 to i64
  %430 = sub i64 %428, %429
  %431 = ashr exact i64 %430, 3
  %432 = load i64, ptr %21, align 8, !tbaa !543
  %433 = icmp ult i64 %431, %432
  br i1 %433, label %559, label %434

434:                                              ; preds = %423
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %18) #57
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %19) #57
  invoke void @_ZNSt6vectorIdSaIdEEC2EmRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %18, i64 noundef %432, ptr noundef nonnull align 1 dereferenceable(1) %19) #56
          to label %435 unwind label %452

435:                                              ; preds = %434
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %19) #57
  %436 = load i64, ptr %21, align 8, !tbaa !543
  %437 = trunc i64 %436 to i32
  %438 = icmp sgt i32 %437, 0
  %439 = load ptr, ptr %18, align 8, !tbaa !109
  br i1 %438, label %440, label %545

440:                                              ; preds = %435
  %441 = load ptr, ptr %424, align 8, !tbaa !109
  %442 = and i64 %436, 4294967295
  br label %454

443:                                              ; preds = %454
  br i1 %438, label %444, label %547

444:                                              ; preds = %443
  %445 = load ptr, ptr %2, align 8, !tbaa !65
  %446 = load ptr, ptr %424, align 8, !tbaa !109
  %447 = and i64 %436, 4294967295
  br label %466

448:                                              ; preds = %405
  %449 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %17) #57
  br label %569

450:                                              ; preds = %422, %420, %417, %414, %411, %407
  %451 = landingpad { ptr, i32 }
          cleanup
  br label %564

452:                                              ; preds = %434
  %453 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %19) #57
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #57
  br label %564

454:                                              ; preds = %454, %440
  %455 = phi i64 [ 0, %440 ], [ %459, %454 ]
  %456 = getelementptr inbounds double, ptr %441, i64 %455
  %457 = load double, ptr %456, align 8, !tbaa !171
  %458 = getelementptr inbounds double, ptr %439, i64 %455
  store double %457, ptr %458, align 8, !tbaa !171
  %459 = add nuw nsw i64 %455, 1
  %460 = icmp eq i64 %459, %442
  br i1 %460, label %443, label %454, !llvm.loop !798

461:                                              ; preds = %466
  br i1 %438, label %462, label %547

462:                                              ; preds = %461
  %463 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %464 = load ptr, ptr %463, align 8, !tbaa !109
  %465 = and i64 %436, 4294967295
  br label %482

466:                                              ; preds = %466, %444
  %467 = phi i64 [ 0, %444 ], [ %474, %466 ]
  %468 = getelementptr inbounds i32, ptr %445, i64 %467
  %469 = load i32, ptr %468, align 4, !tbaa !68
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds double, ptr %439, i64 %470
  %472 = load double, ptr %471, align 8, !tbaa !171
  %473 = getelementptr inbounds double, ptr %446, i64 %467
  store double %472, ptr %473, align 8, !tbaa !171
  %474 = add nuw nsw i64 %467, 1
  %475 = icmp eq i64 %474, %447
  br i1 %475, label %461, label %466, !llvm.loop !799

476:                                              ; preds = %482
  br i1 %438, label %477, label %547

477:                                              ; preds = %476
  %478 = load ptr, ptr %2, align 8, !tbaa !65
  %479 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 76
  %480 = load ptr, ptr %479, align 8, !tbaa !109
  %481 = and i64 %436, 4294967295
  br label %494

482:                                              ; preds = %482, %462
  %483 = phi i64 [ 0, %462 ], [ %487, %482 ]
  %484 = getelementptr inbounds double, ptr %464, i64 %483
  %485 = load double, ptr %484, align 8, !tbaa !171
  %486 = getelementptr inbounds double, ptr %439, i64 %483
  store double %485, ptr %486, align 8, !tbaa !171
  %487 = add nuw nsw i64 %483, 1
  %488 = icmp eq i64 %487, %465
  br i1 %488, label %476, label %482, !llvm.loop !800

489:                                              ; preds = %494
  br i1 %438, label %490, label %547

490:                                              ; preds = %489
  %491 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %492 = load ptr, ptr %491, align 8, !tbaa !109
  %493 = and i64 %436, 4294967295
  br label %510

494:                                              ; preds = %494, %477
  %495 = phi i64 [ 0, %477 ], [ %502, %494 ]
  %496 = getelementptr inbounds i32, ptr %478, i64 %495
  %497 = load i32, ptr %496, align 4, !tbaa !68
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds double, ptr %439, i64 %498
  %500 = load double, ptr %499, align 8, !tbaa !171
  %501 = getelementptr inbounds double, ptr %480, i64 %495
  store double %500, ptr %501, align 8, !tbaa !171
  %502 = add nuw nsw i64 %495, 1
  %503 = icmp eq i64 %502, %481
  br i1 %503, label %489, label %494, !llvm.loop !801

504:                                              ; preds = %510
  br i1 %438, label %505, label %547

505:                                              ; preds = %504
  %506 = load ptr, ptr %2, align 8, !tbaa !65
  %507 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 77
  %508 = load ptr, ptr %507, align 8, !tbaa !109
  %509 = and i64 %436, 4294967295
  br label %522

510:                                              ; preds = %510, %490
  %511 = phi i64 [ 0, %490 ], [ %515, %510 ]
  %512 = getelementptr inbounds double, ptr %492, i64 %511
  %513 = load double, ptr %512, align 8, !tbaa !171
  %514 = getelementptr inbounds double, ptr %439, i64 %511
  store double %513, ptr %514, align 8, !tbaa !171
  %515 = add nuw nsw i64 %511, 1
  %516 = icmp eq i64 %515, %493
  br i1 %516, label %504, label %510, !llvm.loop !802

517:                                              ; preds = %522
  br i1 %438, label %518, label %547

518:                                              ; preds = %517
  %519 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %520 = load ptr, ptr %519, align 8, !tbaa !109
  %521 = and i64 %436, 4294967295
  br label %538

522:                                              ; preds = %522, %505
  %523 = phi i64 [ 0, %505 ], [ %530, %522 ]
  %524 = getelementptr inbounds i32, ptr %506, i64 %523
  %525 = load i32, ptr %524, align 4, !tbaa !68
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds double, ptr %439, i64 %526
  %528 = load double, ptr %527, align 8, !tbaa !171
  %529 = getelementptr inbounds double, ptr %508, i64 %523
  store double %528, ptr %529, align 8, !tbaa !171
  %530 = add nuw nsw i64 %523, 1
  %531 = icmp eq i64 %530, %509
  br i1 %531, label %517, label %522, !llvm.loop !803

532:                                              ; preds = %538
  br i1 %438, label %533, label %547

533:                                              ; preds = %532
  %534 = load ptr, ptr %2, align 8, !tbaa !65
  %535 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 78
  %536 = load ptr, ptr %535, align 8, !tbaa !109
  %537 = and i64 %436, 4294967295
  br label %549

538:                                              ; preds = %538, %518
  %539 = phi i64 [ 0, %518 ], [ %543, %538 ]
  %540 = getelementptr inbounds double, ptr %520, i64 %539
  %541 = load double, ptr %540, align 8, !tbaa !171
  %542 = getelementptr inbounds double, ptr %439, i64 %539
  store double %541, ptr %542, align 8, !tbaa !171
  %543 = add nuw nsw i64 %539, 1
  %544 = icmp eq i64 %543, %521
  br i1 %544, label %532, label %538, !llvm.loop !804

545:                                              ; preds = %435
  %546 = icmp eq ptr %439, null
  br i1 %546, label %548, label %547

547:                                              ; preds = %549, %545, %532, %517, %504, %489, %476, %461, %443
  call void @_ZdlPv(ptr noundef nonnull %439) #58
  br label %548

548:                                              ; preds = %547, %545
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #57
  br label %559

549:                                              ; preds = %549, %533
  %550 = phi i64 [ 0, %533 ], [ %557, %549 ]
  %551 = getelementptr inbounds i32, ptr %534, i64 %550
  %552 = load i32, ptr %551, align 4, !tbaa !68
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds double, ptr %439, i64 %553
  %555 = load double, ptr %554, align 8, !tbaa !171
  %556 = getelementptr inbounds double, ptr %536, i64 %550
  store double %555, ptr %556, align 8, !tbaa !171
  %557 = add nuw nsw i64 %550, 1
  %558 = icmp eq i64 %557, %537
  br i1 %558, label %547, label %549, !llvm.loop !805

559:                                              ; preds = %548, %423
  %560 = load ptr, ptr %16, align 8, !tbaa !65
  %561 = icmp eq ptr %560, null
  br i1 %561, label %563, label %562

562:                                              ; preds = %559
  call void @_ZdlPv(ptr noundef nonnull %560) #58
  br label %563

563:                                              ; preds = %562, %559
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %16) #57
  br label %571

564:                                              ; preds = %452, %450
  %565 = phi { ptr, i32 } [ %453, %452 ], [ %451, %450 ]
  %566 = load ptr, ptr %16, align 8, !tbaa !65
  %567 = icmp eq ptr %566, null
  br i1 %567, label %569, label %568

568:                                              ; preds = %564
  call void @_ZdlPv(ptr noundef nonnull %566) #58
  br label %569

569:                                              ; preds = %568, %564, %448
  %570 = phi { ptr, i32 } [ %449, %448 ], [ %565, %564 ], [ %565, %568 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %16) #57
  br label %600

571:                                              ; preds = %563, %332, %324, %146, %42, %37, %36
  %572 = load i64, ptr %10, align 8
  %573 = getelementptr inbounds i8, ptr %10, i64 8
  %574 = load i64, ptr %573, align 8
  %575 = invoke double @cpu_timer_stop(i64 %572, i64 %574) #56
          to label %576 unwind label %49

576:                                              ; preds = %571
  %577 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 3, i64 21
  %578 = load double, ptr %577, align 8, !tbaa !171
  %579 = fadd double %575, %578
  store double %579, ptr %577, align 8, !tbaa !171
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10) #57
  %580 = load ptr, ptr %9, align 8, !tbaa !109
  %581 = icmp eq ptr %580, null
  br i1 %581, label %583, label %582

582:                                              ; preds = %576
  call void @_ZdlPv(ptr noundef nonnull %580) #58
  br label %583

583:                                              ; preds = %582, %576
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #57
  %584 = load ptr, ptr %8, align 8, !tbaa !109
  %585 = icmp eq ptr %584, null
  br i1 %585, label %587, label %586

586:                                              ; preds = %583
  call void @_ZdlPv(ptr noundef nonnull %584) #58
  br label %587

587:                                              ; preds = %586, %583
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #57
  %588 = load ptr, ptr %7, align 8, !tbaa !65
  %589 = icmp eq ptr %588, null
  br i1 %589, label %591, label %590

590:                                              ; preds = %587
  call void @_ZdlPv(ptr noundef nonnull %588) #58
  br label %591

591:                                              ; preds = %590, %587
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #57
  %592 = load ptr, ptr %6, align 8, !tbaa !65
  %593 = icmp eq ptr %592, null
  br i1 %593, label %595, label %594

594:                                              ; preds = %591
  call void @_ZdlPv(ptr noundef nonnull %592) #58
  br label %595

595:                                              ; preds = %594, %591
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #57
  %596 = load ptr, ptr %5, align 8, !tbaa !65
  %597 = icmp eq ptr %596, null
  br i1 %597, label %599, label %598

598:                                              ; preds = %595
  call void @_ZdlPv(ptr noundef nonnull %596) #58
  br label %599

599:                                              ; preds = %598, %595
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #57
  ret void

600:                                              ; preds = %569, %330, %49, %29, %27
  %601 = phi { ptr, i32 } [ %28, %27 ], [ %30, %29 ], [ %50, %49 ], [ %570, %569 ], [ %331, %330 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10) #57
  %602 = load ptr, ptr %9, align 8, !tbaa !109
  %603 = icmp eq ptr %602, null
  br i1 %603, label %605, label %604

604:                                              ; preds = %600
  call void @_ZdlPv(ptr noundef nonnull %602) #58
  br label %605

605:                                              ; preds = %604, %600
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #57
  %606 = load ptr, ptr %8, align 8, !tbaa !109
  %607 = icmp eq ptr %606, null
  br i1 %607, label %609, label %608

608:                                              ; preds = %605
  call void @_ZdlPv(ptr noundef nonnull %606) #58
  br label %609

609:                                              ; preds = %608, %605
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #57
  %610 = load ptr, ptr %7, align 8, !tbaa !65
  %611 = icmp eq ptr %610, null
  br i1 %611, label %613, label %612

612:                                              ; preds = %609
  call void @_ZdlPv(ptr noundef nonnull %610) #58
  br label %613

613:                                              ; preds = %612, %609
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #57
  %614 = load ptr, ptr %6, align 8, !tbaa !65
  %615 = icmp eq ptr %614, null
  br i1 %615, label %617, label %616

616:                                              ; preds = %613
  call void @_ZdlPv(ptr noundef nonnull %614) #58
  br label %617

617:                                              ; preds = %616, %613
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #57
  %618 = load ptr, ptr %5, align 8, !tbaa !65
  %619 = icmp eq ptr %618, null
  br i1 %619, label %621, label %620

620:                                              ; preds = %617
  call void @_ZdlPv(ptr noundef nonnull %618) #58
  br label %621

621:                                              ; preds = %620, %617
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #57
  resume { ptr, i32 } %601
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @_ZN4Mesh17calc_distributionEi(ptr nocapture noundef nonnull readonly align 8 dereferenceable(2288) %0, i32 noundef %1) #52 align 2 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %18

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 25
  %6 = getelementptr inbounds %class.Mesh, ptr %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !70
  %8 = load ptr, ptr %5, align 8, !tbaa !65
  %9 = ptrtoint ptr %7 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 2
  %13 = zext i32 %1 to i64
  %14 = udiv i64 %12, %13
  %15 = trunc i64 %14 to i32
  %16 = trunc i64 %12 to i32
  %17 = srem i32 %16, %1
  br label %19

18:                                               ; preds = %60, %2
  ret void

19:                                               ; preds = %60, %4
  %20 = phi i32 [ 0, %4 ], [ %61, %60 ]
  %21 = phi i32 [ 0, %4 ], [ %25, %60 ]
  %22 = add i32 %21, %15
  %23 = icmp slt i32 %20, %17
  %24 = zext i1 %23 to i32
  %25 = add i32 %22, %24
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %60

27:                                               ; preds = %19
  %28 = zext i32 %25 to i64
  %29 = add nuw nsw i64 %28, 3
  %30 = and i64 %29, 8589934588
  %31 = add nsw i64 %28, -1
  %32 = insertelement <4 x i64> poison, i64 %31, i64 0
  %33 = shufflevector <4 x i64> %32, <4 x i64> poison, <4 x i32> zeroinitializer
  br label %34

34:                                               ; preds = %56, %27
  %35 = phi i64 [ 0, %27 ], [ %57, %56 ]
  %36 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %27 ], [ %58, %56 ]
  %37 = icmp ule <4 x i64> %36, %33
  %38 = extractelement <4 x i1> %37, i64 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  %40 = getelementptr inbounds i32, ptr %8, i64 %35
  store i32 %20, ptr %40, align 4, !tbaa !68
  br label %41

41:                                               ; preds = %39, %34
  %42 = extractelement <4 x i1> %37, i64 1
  br i1 %42, label %43, label %46

43:                                               ; preds = %41
  %44 = or i64 %35, 1
  %45 = getelementptr inbounds i32, ptr %8, i64 %44
  store i32 %20, ptr %45, align 4, !tbaa !68
  br label %46

46:                                               ; preds = %43, %41
  %47 = extractelement <4 x i1> %37, i64 2
  br i1 %47, label %48, label %51

48:                                               ; preds = %46
  %49 = or i64 %35, 2
  %50 = getelementptr inbounds i32, ptr %8, i64 %49
  store i32 %20, ptr %50, align 4, !tbaa !68
  br label %51

51:                                               ; preds = %48, %46
  %52 = extractelement <4 x i1> %37, i64 3
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = or i64 %35, 3
  %55 = getelementptr inbounds i32, ptr %8, i64 %54
  store i32 %20, ptr %55, align 4, !tbaa !68
  br label %56

56:                                               ; preds = %53, %51
  %57 = add i64 %35, 4
  %58 = add <4 x i64> %36, <i64 4, i64 4, i64 4, i64 4>
  %59 = icmp eq i64 %57, %30
  br i1 %59, label %60, label %34, !llvm.loop !806

60:                                               ; preds = %56, %19
  %61 = add nuw nsw i32 %20, 1
  %62 = icmp eq i32 %61, %1
  br i1 %62, label %18, label %19, !llvm.loop !807
}

; Function Attrs: nounwind optsize uwtable
define internal void @S7_Index_Sort(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef %3) #10 {
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %43

6:                                                ; preds = %4
  %7 = zext i32 %1 to i64
  %8 = add nuw nsw i64 %7, 3
  %9 = and i64 %8, 8589934588
  %10 = add nsw i64 %7, -1
  %11 = insertelement <4 x i64> poison, i64 %10, i64 0
  %12 = shufflevector <4 x i64> %11, <4 x i64> poison, <4 x i32> zeroinitializer
  br label %13

13:                                               ; preds = %39, %6
  %14 = phi i64 [ 0, %6 ], [ %40, %39 ]
  %15 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %6 ], [ %41, %39 ]
  %16 = trunc i64 %14 to i32
  %17 = icmp ule <4 x i64> %15, %12
  %18 = extractelement <4 x i1> %17, i64 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  %20 = getelementptr inbounds i32, ptr %3, i64 %14
  store i32 %16, ptr %20, align 4, !tbaa !132
  br label %21

21:                                               ; preds = %19, %13
  %22 = extractelement <4 x i1> %17, i64 1
  br i1 %22, label %23, label %27

23:                                               ; preds = %21
  %24 = or i64 %14, 1
  %25 = getelementptr inbounds i32, ptr %3, i64 %24
  %26 = or i32 %16, 1
  store i32 %26, ptr %25, align 4, !tbaa !132
  br label %27

27:                                               ; preds = %23, %21
  %28 = extractelement <4 x i1> %17, i64 2
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = or i64 %14, 2
  %31 = getelementptr inbounds i32, ptr %3, i64 %30
  %32 = or i32 %16, 2
  store i32 %32, ptr %31, align 4, !tbaa !132
  br label %33

33:                                               ; preds = %29, %27
  %34 = extractelement <4 x i1> %17, i64 3
  br i1 %34, label %35, label %39

35:                                               ; preds = %33
  %36 = or i64 %14, 3
  %37 = getelementptr inbounds i32, ptr %3, i64 %36
  %38 = or i32 %16, 3
  store i32 %38, ptr %37, align 4, !tbaa !132
  br label %39

39:                                               ; preds = %35, %33
  %40 = add i64 %14, 4
  %41 = add <4 x i64> %15, <i64 4, i64 4, i64 4, i64 4>
  %42 = icmp eq i64 %40, %9
  br i1 %42, label %43, label %13, !llvm.loop !808

43:                                               ; preds = %39, %4
  %44 = sdiv i32 %1, 2
  switch i32 %2, label %408 [
    i32 11, label %48
    i32 4, label %48
    i32 5, label %120
    i32 6, label %47
    i32 12, label %47
    i32 7, label %46
    i32 13, label %46
    i32 8, label %45
    i32 14, label %45
  ]

45:                                               ; preds = %43, %43
  br label %335

46:                                               ; preds = %43, %43
  br label %262

47:                                               ; preds = %43, %43
  br label %191

48:                                               ; preds = %43, %43
  br label %49

49:                                               ; preds = %116, %48
  %50 = phi i32 [ %75, %116 ], [ %44, %48 ]
  %51 = phi i32 [ %76, %116 ], [ %1, %48 ]
  %52 = icmp sgt i32 %50, 0
  br i1 %52, label %53, label %61

53:                                               ; preds = %49
  %54 = add nsw i32 %50, -1
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i32, ptr %3, i64 %55
  %57 = load i32, ptr %56, align 4, !tbaa !132
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, ptr %0, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !132
  br label %72

61:                                               ; preds = %49
  %62 = add nsw i32 %51, -1
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %410, label %64

64:                                               ; preds = %61
  %65 = sext i32 %62 to i64
  %66 = getelementptr inbounds i32, ptr %3, i64 %65
  %67 = load i32, ptr %66, align 4, !tbaa !132
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i32, ptr %0, i64 %68
  %70 = load i32, ptr %69, align 4, !tbaa !132
  %71 = load i32, ptr %3, align 4, !tbaa !132
  store i32 %71, ptr %66, align 4, !tbaa !132
  br label %72

72:                                               ; preds = %64, %53
  %73 = phi i32 [ %57, %53 ], [ %67, %64 ]
  %74 = phi i32 [ %60, %53 ], [ %70, %64 ]
  %75 = phi i32 [ %54, %53 ], [ %50, %64 ]
  %76 = phi i32 [ %51, %53 ], [ %62, %64 ]
  %77 = shl nsw i32 %75, 1
  %78 = or i32 %77, 1
  %79 = icmp slt i32 %78, %76
  br i1 %79, label %80, label %116

80:                                               ; preds = %110, %72
  %81 = phi i32 [ %114, %110 ], [ %78, %72 ]
  %82 = phi i32 [ %113, %110 ], [ %77, %72 ]
  %83 = phi i32 [ %102, %110 ], [ %75, %72 ]
  %84 = add i32 %82, 2
  %85 = icmp slt i32 %84, %76
  br i1 %85, label %86, label %101

86:                                               ; preds = %80
  %87 = sext i32 %84 to i64
  %88 = getelementptr inbounds i32, ptr %3, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !132
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i32, ptr %0, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !132
  %93 = sext i32 %81 to i64
  %94 = getelementptr inbounds i32, ptr %3, i64 %93
  %95 = load i32, ptr %94, align 4, !tbaa !132
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i32, ptr %0, i64 %96
  %98 = load i32, ptr %97, align 4, !tbaa !132
  %99 = icmp sgt i32 %92, %98
  %100 = select i1 %99, i32 %84, i32 %81
  br label %101

101:                                              ; preds = %86, %80
  %102 = phi i32 [ %81, %80 ], [ %100, %86 ]
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, ptr %3, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !132
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i32, ptr %0, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !132
  %109 = icmp sgt i32 %108, %74
  br i1 %109, label %110, label %116

110:                                              ; preds = %101
  %111 = sext i32 %83 to i64
  %112 = getelementptr inbounds i32, ptr %3, i64 %111
  store i32 %105, ptr %112, align 4, !tbaa !132
  %113 = shl nsw i32 %102, 1
  %114 = or i32 %113, 1
  %115 = icmp slt i32 %114, %76
  br i1 %115, label %80, label %116, !llvm.loop !809

116:                                              ; preds = %110, %101, %72
  %117 = phi i32 [ %75, %72 ], [ %83, %101 ], [ %102, %110 ]
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i32, ptr %3, i64 %118
  store i32 %73, ptr %119, align 4, !tbaa !132
  br label %49

120:                                              ; preds = %187, %43
  %121 = phi i32 [ %146, %187 ], [ %44, %43 ]
  %122 = phi i32 [ %147, %187 ], [ %1, %43 ]
  %123 = icmp sgt i32 %121, 0
  br i1 %123, label %124, label %132

124:                                              ; preds = %120
  %125 = add nsw i32 %121, -1
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i32, ptr %3, i64 %126
  %128 = load i32, ptr %127, align 4, !tbaa !132
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i64, ptr %0, i64 %129
  %131 = load i64, ptr %130, align 8, !tbaa !601
  br label %143

132:                                              ; preds = %120
  %133 = add nsw i32 %122, -1
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %410, label %135

135:                                              ; preds = %132
  %136 = sext i32 %133 to i64
  %137 = getelementptr inbounds i32, ptr %3, i64 %136
  %138 = load i32, ptr %137, align 4, !tbaa !132
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i64, ptr %0, i64 %139
  %141 = load i64, ptr %140, align 8, !tbaa !601
  %142 = load i32, ptr %3, align 4, !tbaa !132
  store i32 %142, ptr %137, align 4, !tbaa !132
  br label %143

143:                                              ; preds = %135, %124
  %144 = phi i32 [ %128, %124 ], [ %138, %135 ]
  %145 = phi i64 [ %131, %124 ], [ %141, %135 ]
  %146 = phi i32 [ %125, %124 ], [ %121, %135 ]
  %147 = phi i32 [ %122, %124 ], [ %133, %135 ]
  %148 = shl nsw i32 %146, 1
  %149 = or i32 %148, 1
  %150 = icmp slt i32 %149, %147
  br i1 %150, label %151, label %187

151:                                              ; preds = %181, %143
  %152 = phi i32 [ %185, %181 ], [ %149, %143 ]
  %153 = phi i32 [ %184, %181 ], [ %148, %143 ]
  %154 = phi i32 [ %173, %181 ], [ %146, %143 ]
  %155 = add i32 %153, 2
  %156 = icmp slt i32 %155, %147
  br i1 %156, label %157, label %172

157:                                              ; preds = %151
  %158 = sext i32 %155 to i64
  %159 = getelementptr inbounds i32, ptr %3, i64 %158
  %160 = load i32, ptr %159, align 4, !tbaa !132
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i64, ptr %0, i64 %161
  %163 = load i64, ptr %162, align 8, !tbaa !601
  %164 = sext i32 %152 to i64
  %165 = getelementptr inbounds i32, ptr %3, i64 %164
  %166 = load i32, ptr %165, align 4, !tbaa !132
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i64, ptr %0, i64 %167
  %169 = load i64, ptr %168, align 8, !tbaa !601
  %170 = icmp sgt i64 %163, %169
  %171 = select i1 %170, i32 %155, i32 %152
  br label %172

172:                                              ; preds = %157, %151
  %173 = phi i32 [ %152, %151 ], [ %171, %157 ]
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i32, ptr %3, i64 %174
  %176 = load i32, ptr %175, align 4, !tbaa !132
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i64, ptr %0, i64 %177
  %179 = load i64, ptr %178, align 8, !tbaa !601
  %180 = icmp sgt i64 %179, %145
  br i1 %180, label %181, label %187

181:                                              ; preds = %172
  %182 = sext i32 %154 to i64
  %183 = getelementptr inbounds i32, ptr %3, i64 %182
  store i32 %176, ptr %183, align 4, !tbaa !132
  %184 = shl nsw i32 %173, 1
  %185 = or i32 %184, 1
  %186 = icmp slt i32 %185, %147
  br i1 %186, label %151, label %187, !llvm.loop !810

187:                                              ; preds = %181, %172, %143
  %188 = phi i32 [ %146, %143 ], [ %154, %172 ], [ %173, %181 ]
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds i32, ptr %3, i64 %189
  store i32 %144, ptr %190, align 4, !tbaa !132
  br label %120

191:                                              ; preds = %258, %47
  %192 = phi i32 [ %217, %258 ], [ %44, %47 ]
  %193 = phi i32 [ %218, %258 ], [ %1, %47 ]
  %194 = icmp sgt i32 %192, 0
  br i1 %194, label %195, label %203

195:                                              ; preds = %191
  %196 = add nsw i32 %192, -1
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds i32, ptr %3, i64 %197
  %199 = load i32, ptr %198, align 4, !tbaa !132
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i64, ptr %0, i64 %200
  %202 = load i64, ptr %201, align 8, !tbaa !811
  br label %214

203:                                              ; preds = %191
  %204 = add nsw i32 %193, -1
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %410, label %206

206:                                              ; preds = %203
  %207 = sext i32 %204 to i64
  %208 = getelementptr inbounds i32, ptr %3, i64 %207
  %209 = load i32, ptr %208, align 4, !tbaa !132
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds i64, ptr %0, i64 %210
  %212 = load i64, ptr %211, align 8, !tbaa !811
  %213 = load i32, ptr %3, align 4, !tbaa !132
  store i32 %213, ptr %208, align 4, !tbaa !132
  br label %214

214:                                              ; preds = %206, %195
  %215 = phi i32 [ %199, %195 ], [ %209, %206 ]
  %216 = phi i64 [ %202, %195 ], [ %212, %206 ]
  %217 = phi i32 [ %196, %195 ], [ %192, %206 ]
  %218 = phi i32 [ %193, %195 ], [ %204, %206 ]
  %219 = shl nsw i32 %217, 1
  %220 = or i32 %219, 1
  %221 = icmp slt i32 %220, %218
  br i1 %221, label %222, label %258

222:                                              ; preds = %252, %214
  %223 = phi i32 [ %256, %252 ], [ %220, %214 ]
  %224 = phi i32 [ %255, %252 ], [ %219, %214 ]
  %225 = phi i32 [ %244, %252 ], [ %217, %214 ]
  %226 = add i32 %224, 2
  %227 = icmp slt i32 %226, %218
  br i1 %227, label %228, label %243

228:                                              ; preds = %222
  %229 = sext i32 %226 to i64
  %230 = getelementptr inbounds i32, ptr %3, i64 %229
  %231 = load i32, ptr %230, align 4, !tbaa !132
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds i64, ptr %0, i64 %232
  %234 = load i64, ptr %233, align 8, !tbaa !811
  %235 = sext i32 %223 to i64
  %236 = getelementptr inbounds i32, ptr %3, i64 %235
  %237 = load i32, ptr %236, align 4, !tbaa !132
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds i64, ptr %0, i64 %238
  %240 = load i64, ptr %239, align 8, !tbaa !811
  %241 = icmp sgt i64 %234, %240
  %242 = select i1 %241, i32 %226, i32 %223
  br label %243

243:                                              ; preds = %228, %222
  %244 = phi i32 [ %223, %222 ], [ %242, %228 ]
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds i32, ptr %3, i64 %245
  %247 = load i32, ptr %246, align 4, !tbaa !132
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i64, ptr %0, i64 %248
  %250 = load i64, ptr %249, align 8, !tbaa !811
  %251 = icmp sgt i64 %250, %216
  br i1 %251, label %252, label %258

252:                                              ; preds = %243
  %253 = sext i32 %225 to i64
  %254 = getelementptr inbounds i32, ptr %3, i64 %253
  store i32 %247, ptr %254, align 4, !tbaa !132
  %255 = shl nsw i32 %244, 1
  %256 = or i32 %255, 1
  %257 = icmp slt i32 %256, %218
  br i1 %257, label %222, label %258, !llvm.loop !813

258:                                              ; preds = %252, %243, %214
  %259 = phi i32 [ %217, %214 ], [ %225, %243 ], [ %244, %252 ]
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds i32, ptr %3, i64 %260
  store i32 %215, ptr %261, align 4, !tbaa !132
  br label %191

262:                                              ; preds = %331, %46
  %263 = phi i32 [ %288, %331 ], [ %44, %46 ]
  %264 = phi i32 [ %289, %331 ], [ %1, %46 ]
  %265 = icmp sgt i32 %263, 0
  br i1 %265, label %266, label %274

266:                                              ; preds = %262
  %267 = add nsw i32 %263, -1
  %268 = zext i32 %267 to i64
  %269 = getelementptr inbounds i32, ptr %3, i64 %268
  %270 = load i32, ptr %269, align 4, !tbaa !132
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds float, ptr %0, i64 %271
  %273 = load float, ptr %272, align 4, !tbaa !596
  br label %285

274:                                              ; preds = %262
  %275 = add nsw i32 %264, -1
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %410, label %277

277:                                              ; preds = %274
  %278 = sext i32 %275 to i64
  %279 = getelementptr inbounds i32, ptr %3, i64 %278
  %280 = load i32, ptr %279, align 4, !tbaa !132
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds float, ptr %0, i64 %281
  %283 = load float, ptr %282, align 4, !tbaa !596
  %284 = load i32, ptr %3, align 4, !tbaa !132
  store i32 %284, ptr %279, align 4, !tbaa !132
  br label %285

285:                                              ; preds = %277, %266
  %286 = phi i32 [ %270, %266 ], [ %280, %277 ]
  %287 = phi float [ %273, %266 ], [ %283, %277 ]
  %288 = phi i32 [ %267, %266 ], [ %263, %277 ]
  %289 = phi i32 [ %264, %266 ], [ %275, %277 ]
  %290 = shl nsw i32 %288, 1
  %291 = or i32 %290, 1
  %292 = icmp slt i32 %291, %289
  br i1 %292, label %293, label %331

293:                                              ; preds = %325, %285
  %294 = phi i32 [ %329, %325 ], [ %291, %285 ]
  %295 = phi i32 [ %328, %325 ], [ %290, %285 ]
  %296 = phi i32 [ %318, %325 ], [ %288, %285 ]
  %297 = add i32 %295, 2
  %298 = icmp slt i32 %297, %289
  br i1 %298, label %301, label %299

299:                                              ; preds = %293
  %300 = sext i32 %294 to i64
  br label %316

301:                                              ; preds = %293
  %302 = sext i32 %297 to i64
  %303 = getelementptr inbounds i32, ptr %3, i64 %302
  %304 = load i32, ptr %303, align 4, !tbaa !132
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds float, ptr %0, i64 %305
  %307 = load float, ptr %306, align 4, !tbaa !596
  %308 = sext i32 %294 to i64
  %309 = getelementptr inbounds i32, ptr %3, i64 %308
  %310 = load i32, ptr %309, align 4, !tbaa !132
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds float, ptr %0, i64 %311
  %313 = load float, ptr %312, align 4, !tbaa !596
  %314 = fcmp ogt float %307, %313
  br i1 %314, label %315, label %316

315:                                              ; preds = %301
  br label %316

316:                                              ; preds = %315, %301, %299
  %317 = phi i64 [ %300, %299 ], [ %302, %315 ], [ %308, %301 ]
  %318 = phi i32 [ %294, %299 ], [ %297, %315 ], [ %294, %301 ]
  %319 = getelementptr inbounds i32, ptr %3, i64 %317
  %320 = load i32, ptr %319, align 4, !tbaa !132
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds float, ptr %0, i64 %321
  %323 = load float, ptr %322, align 4, !tbaa !596
  %324 = fcmp ogt float %323, %287
  br i1 %324, label %325, label %331

325:                                              ; preds = %316
  %326 = sext i32 %296 to i64
  %327 = getelementptr inbounds i32, ptr %3, i64 %326
  store i32 %320, ptr %327, align 4, !tbaa !132
  %328 = shl nsw i32 %318, 1
  %329 = or i32 %328, 1
  %330 = icmp slt i32 %329, %289
  br i1 %330, label %293, label %331, !llvm.loop !814

331:                                              ; preds = %325, %316, %285
  %332 = phi i32 [ %288, %285 ], [ %296, %316 ], [ %318, %325 ]
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds i32, ptr %3, i64 %333
  store i32 %286, ptr %334, align 4, !tbaa !132
  br label %262

335:                                              ; preds = %404, %45
  %336 = phi i32 [ %361, %404 ], [ %44, %45 ]
  %337 = phi i32 [ %362, %404 ], [ %1, %45 ]
  %338 = icmp sgt i32 %336, 0
  br i1 %338, label %339, label %347

339:                                              ; preds = %335
  %340 = add nsw i32 %336, -1
  %341 = zext i32 %340 to i64
  %342 = getelementptr inbounds i32, ptr %3, i64 %341
  %343 = load i32, ptr %342, align 4, !tbaa !132
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds double, ptr %0, i64 %344
  %346 = load double, ptr %345, align 8, !tbaa !7
  br label %358

347:                                              ; preds = %335
  %348 = add nsw i32 %337, -1
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %410, label %350

350:                                              ; preds = %347
  %351 = sext i32 %348 to i64
  %352 = getelementptr inbounds i32, ptr %3, i64 %351
  %353 = load i32, ptr %352, align 4, !tbaa !132
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds double, ptr %0, i64 %354
  %356 = load double, ptr %355, align 8, !tbaa !7
  %357 = load i32, ptr %3, align 4, !tbaa !132
  store i32 %357, ptr %352, align 4, !tbaa !132
  br label %358

358:                                              ; preds = %350, %339
  %359 = phi i32 [ %343, %339 ], [ %353, %350 ]
  %360 = phi double [ %346, %339 ], [ %356, %350 ]
  %361 = phi i32 [ %340, %339 ], [ %336, %350 ]
  %362 = phi i32 [ %337, %339 ], [ %348, %350 ]
  %363 = shl nsw i32 %361, 1
  %364 = or i32 %363, 1
  %365 = icmp slt i32 %364, %362
  br i1 %365, label %366, label %404

366:                                              ; preds = %398, %358
  %367 = phi i32 [ %402, %398 ], [ %364, %358 ]
  %368 = phi i32 [ %401, %398 ], [ %363, %358 ]
  %369 = phi i32 [ %391, %398 ], [ %361, %358 ]
  %370 = add i32 %368, 2
  %371 = icmp slt i32 %370, %362
  br i1 %371, label %374, label %372

372:                                              ; preds = %366
  %373 = sext i32 %367 to i64
  br label %389

374:                                              ; preds = %366
  %375 = sext i32 %370 to i64
  %376 = getelementptr inbounds i32, ptr %3, i64 %375
  %377 = load i32, ptr %376, align 4, !tbaa !132
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds double, ptr %0, i64 %378
  %380 = load double, ptr %379, align 8, !tbaa !7
  %381 = sext i32 %367 to i64
  %382 = getelementptr inbounds i32, ptr %3, i64 %381
  %383 = load i32, ptr %382, align 4, !tbaa !132
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds double, ptr %0, i64 %384
  %386 = load double, ptr %385, align 8, !tbaa !7
  %387 = fcmp ogt double %380, %386
  br i1 %387, label %388, label %389

388:                                              ; preds = %374
  br label %389

389:                                              ; preds = %388, %374, %372
  %390 = phi i64 [ %373, %372 ], [ %375, %388 ], [ %381, %374 ]
  %391 = phi i32 [ %367, %372 ], [ %370, %388 ], [ %367, %374 ]
  %392 = getelementptr inbounds i32, ptr %3, i64 %390
  %393 = load i32, ptr %392, align 4, !tbaa !132
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds double, ptr %0, i64 %394
  %396 = load double, ptr %395, align 8, !tbaa !7
  %397 = fcmp ogt double %396, %360
  br i1 %397, label %398, label %404

398:                                              ; preds = %389
  %399 = sext i32 %369 to i64
  %400 = getelementptr inbounds i32, ptr %3, i64 %399
  store i32 %393, ptr %400, align 4, !tbaa !132
  %401 = shl nsw i32 %391, 1
  %402 = or i32 %401, 1
  %403 = icmp slt i32 %402, %362
  br i1 %403, label %366, label %404, !llvm.loop !815

404:                                              ; preds = %398, %389, %358
  %405 = phi i32 [ %361, %358 ], [ %369, %389 ], [ %391, %398 ]
  %406 = sext i32 %405 to i64
  %407 = getelementptr inbounds i32, ptr %3, i64 %406
  store i32 %359, ptr %407, align 4, !tbaa !132
  br label %335

408:                                              ; preds = %43
  %409 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.4)
  tail call void @exit(i32 noundef 1) #67
  unreachable

410:                                              ; preds = %347, %274, %203, %132, %61
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind optsize willreturn memory(argmem: write) uwtable
define internal void @_ZN5StateC2EP4Mesh(ptr noundef nonnull align 8 dereferenceable(368) %0, ptr noundef %1) unnamed_addr #53 align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 0, ptr %3, align 8, !tbaa !181
  %4 = getelementptr inbounds i8, ptr %0, i64 16
  store ptr null, ptr %4, align 8, !tbaa !71
  %5 = getelementptr inbounds i8, ptr %0, i64 24
  store ptr %3, ptr %5, align 8, !tbaa !84
  %6 = getelementptr inbounds i8, ptr %0, i64 32
  store ptr %3, ptr %6, align 8, !tbaa !182
  %7 = getelementptr inbounds i8, ptr %0, i64 40
  store i64 0, ptr %7, align 8, !tbaa !80
  %8 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, ptr %8, align 8, !tbaa !181
  %9 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %9, align 8, !tbaa !71
  %10 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %8, ptr %10, align 8, !tbaa !84
  %11 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %8, ptr %11, align 8, !tbaa !182
  %12 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %12, align 8, !tbaa !80
  %13 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 0, ptr %13, align 8, !tbaa !181
  %14 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %14, align 8, !tbaa !71
  %15 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %13, ptr %15, align 8, !tbaa !84
  %16 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %13, ptr %16, align 8, !tbaa !182
  %17 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %17, align 8, !tbaa !80
  %18 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  store i32 0, ptr %18, align 8, !tbaa !181
  %19 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  store ptr null, ptr %19, align 8, !tbaa !71
  %20 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 2
  store ptr %18, ptr %20, align 8, !tbaa !84
  %21 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 0, i32 3
  store ptr %18, ptr %21, align 8, !tbaa !182
  %22 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 1
  store i64 0, ptr %22, align 8, !tbaa !80
  %23 = getelementptr inbounds i8, ptr %0, i64 224
  %24 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(144) %23, i8 0, i64 144, i1 false)
  store ptr %1, ptr %24, align 8, !tbaa !816
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5State4initEi(ptr noundef nonnull align 8 dereferenceable(368) %0, i32 noundef %1) #13 align 2 {
  %3 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !816
  %5 = getelementptr inbounds %class.Mesh, ptr %4, i64 0, i32 45
  %6 = load i64, ptr %5, align 8, !tbaa !543
  tail call void @_ZN5State8allocateEm(ptr noundef nonnull align 8 dereferenceable(368) %0, i64 noundef %6) #56
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5State8allocateEm(ptr noundef nonnull align 8 dereferenceable(368) %0, i64 noundef %1) #13 align 2 {
  %3 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, i64 noundef %1, i64 noundef 8, ptr noundef nonnull @.str.237, i32 noundef 16) #56
  %4 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  store ptr %3, ptr %4, align 8, !tbaa !566
  %5 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, i64 noundef %1, i64 noundef 8, ptr noundef nonnull @.str.1.238, i32 noundef 16) #56
  %6 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  store ptr %5, ptr %6, align 8, !tbaa !817
  %7 = tail call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, i64 noundef %1, i64 noundef 8, ptr noundef nonnull @.str.2.239, i32 noundef 16) #56
  %8 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  store ptr %7, ptr %8, align 8, !tbaa !818
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5State17memory_reset_ptrsEv(ptr noundef nonnull align 8 dereferenceable(368) %0) #13 align 2 {
  %2 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull @.str.237) #56
  %3 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  store ptr %2, ptr %3, align 8, !tbaa !566
  %4 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull @.str.1.238) #56
  %5 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  store ptr %4, ptr %5, align 8, !tbaa !817
  %6 = tail call noundef ptr @_ZN10MallocPlus14get_memory_ptrEPKc(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull @.str.2.239) #56
  %7 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  store ptr %6, ptr %7, align 8, !tbaa !818
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5State9terminateEv(ptr noundef nonnull align 8 dereferenceable(368) %0) #13 align 2 {
  %2 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !566
  %4 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %3) #56
  %5 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %5, align 8, !tbaa !817
  %7 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %6) #56
  %8 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  %9 = load ptr, ptr %8, align 8, !tbaa !818
  %10 = tail call noundef ptr @_ZN10MallocPlus13memory_deleteEPv(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %9) #56
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5State25apply_boundary_conditionsEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(368) %0) #13 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !816
  %6 = getelementptr inbounds %class.Mesh, ptr %5, i64 0, i32 69
  %7 = load ptr, ptr %6, align 8, !tbaa !684
  %8 = getelementptr inbounds %class.Mesh, ptr %5, i64 0, i32 70
  %9 = load ptr, ptr %8, align 8, !tbaa !685
  %10 = getelementptr inbounds %class.Mesh, ptr %5, i64 0, i32 71
  %11 = load ptr, ptr %10, align 8, !tbaa !686
  %12 = getelementptr inbounds %class.Mesh, ptr %5, i64 0, i32 72
  %13 = load ptr, ptr %12, align 8, !tbaa !687
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #57
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #57
  call void @_ZN4Mesh10get_boundsERiS0_(ptr noundef nonnull align 8 dereferenceable(2288) %5, ptr noundef nonnull align 4 dereferenceable(4) %2, ptr noundef nonnull align 4 dereferenceable(4) %3) #56
  %14 = load i32, ptr %2, align 4, !tbaa !68
  %15 = load i32, ptr %3, align 4, !tbaa !68
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %17, label %39

17:                                               ; preds = %1
  %18 = load ptr, ptr %4, align 8, !tbaa !816
  %19 = getelementptr inbounds %class.Mesh, ptr %18, i64 0, i32 64
  %20 = load ptr, ptr %19, align 8, !tbaa !637
  %21 = getelementptr inbounds %class.Mesh, ptr %18, i64 0, i32 26
  %22 = getelementptr inbounds %class.Mesh, ptr %18, i64 0, i32 67
  %23 = load ptr, ptr %22, align 8, !tbaa !639
  %24 = load ptr, ptr %21, align 8, !tbaa !65
  %25 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds %class.Mesh, ptr %18, i64 0, i32 27
  %32 = load ptr, ptr %31, align 8, !tbaa !65
  %33 = getelementptr inbounds %class.Mesh, ptr %18, i64 0, i32 65
  %34 = load ptr, ptr %33, align 8, !tbaa !638
  %35 = getelementptr inbounds %class.Mesh, ptr %18, i64 0, i32 28
  %36 = load ptr, ptr %35, align 8, !tbaa !65
  %37 = getelementptr inbounds %class.Mesh, ptr %18, i64 0, i32 29
  %38 = load ptr, ptr %37, align 8, !tbaa !65
  br label %40

39:                                               ; preds = %125, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #57
  ret void

40:                                               ; preds = %125, %17
  %41 = phi i32 [ %14, %17 ], [ %126, %125 ]
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, ptr %20, i64 %42
  %44 = load i32, ptr %43, align 4, !tbaa !68
  %45 = getelementptr inbounds i32, ptr %23, i64 %42
  %46 = load i32, ptr %45, align 4, !tbaa !68
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, ptr %24, i64 %47
  %49 = load i32, ptr %48, align 4, !tbaa !68
  %50 = icmp slt i32 %44, %49
  br i1 %50, label %51, label %66

51:                                               ; preds = %40
  %52 = zext i32 %41 to i64
  %53 = getelementptr inbounds i32, ptr %9, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !68
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds double, ptr %26, i64 %55
  %57 = load double, ptr %56, align 8, !tbaa !171
  %58 = getelementptr inbounds double, ptr %26, i64 %52
  store double %57, ptr %58, align 8, !tbaa !171
  %59 = getelementptr inbounds double, ptr %28, i64 %55
  %60 = load double, ptr %59, align 8, !tbaa !171
  %61 = fneg double %60
  %62 = getelementptr inbounds double, ptr %28, i64 %52
  store double %61, ptr %62, align 8, !tbaa !171
  %63 = getelementptr inbounds double, ptr %30, i64 %55
  %64 = load double, ptr %63, align 8, !tbaa !171
  %65 = getelementptr inbounds double, ptr %30, i64 %52
  store double %64, ptr %65, align 8, !tbaa !171
  br label %66

66:                                               ; preds = %51, %40
  %67 = getelementptr inbounds i32, ptr %32, i64 %47
  %68 = load i32, ptr %67, align 4, !tbaa !68
  %69 = icmp sgt i32 %44, %68
  br i1 %69, label %70, label %85

70:                                               ; preds = %66
  %71 = zext i32 %41 to i64
  %72 = getelementptr inbounds i32, ptr %7, i64 %71
  %73 = load i32, ptr %72, align 4, !tbaa !68
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds double, ptr %26, i64 %74
  %76 = load double, ptr %75, align 8, !tbaa !171
  %77 = getelementptr inbounds double, ptr %26, i64 %71
  store double %76, ptr %77, align 8, !tbaa !171
  %78 = getelementptr inbounds double, ptr %28, i64 %74
  %79 = load double, ptr %78, align 8, !tbaa !171
  %80 = fneg double %79
  %81 = getelementptr inbounds double, ptr %28, i64 %71
  store double %80, ptr %81, align 8, !tbaa !171
  %82 = getelementptr inbounds double, ptr %30, i64 %74
  %83 = load double, ptr %82, align 8, !tbaa !171
  %84 = getelementptr inbounds double, ptr %30, i64 %71
  store double %83, ptr %84, align 8, !tbaa !171
  br label %85

85:                                               ; preds = %70, %66
  %86 = getelementptr inbounds i32, ptr %34, i64 %42
  %87 = load i32, ptr %86, align 4, !tbaa !68
  %88 = getelementptr inbounds i32, ptr %36, i64 %47
  %89 = load i32, ptr %88, align 4, !tbaa !68
  %90 = icmp slt i32 %87, %89
  br i1 %90, label %91, label %106

91:                                               ; preds = %85
  %92 = zext i32 %41 to i64
  %93 = getelementptr inbounds i32, ptr %13, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !68
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds double, ptr %26, i64 %95
  %97 = load double, ptr %96, align 8, !tbaa !171
  %98 = getelementptr inbounds double, ptr %26, i64 %92
  store double %97, ptr %98, align 8, !tbaa !171
  %99 = getelementptr inbounds double, ptr %28, i64 %95
  %100 = load double, ptr %99, align 8, !tbaa !171
  %101 = getelementptr inbounds double, ptr %28, i64 %92
  store double %100, ptr %101, align 8, !tbaa !171
  %102 = getelementptr inbounds double, ptr %30, i64 %95
  %103 = load double, ptr %102, align 8, !tbaa !171
  %104 = fneg double %103
  %105 = getelementptr inbounds double, ptr %30, i64 %92
  store double %104, ptr %105, align 8, !tbaa !171
  br label %106

106:                                              ; preds = %91, %85
  %107 = getelementptr inbounds i32, ptr %38, i64 %47
  %108 = load i32, ptr %107, align 4, !tbaa !68
  %109 = icmp sgt i32 %87, %108
  br i1 %109, label %110, label %125

110:                                              ; preds = %106
  %111 = zext i32 %41 to i64
  %112 = getelementptr inbounds i32, ptr %11, i64 %111
  %113 = load i32, ptr %112, align 4, !tbaa !68
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds double, ptr %26, i64 %114
  %116 = load double, ptr %115, align 8, !tbaa !171
  %117 = getelementptr inbounds double, ptr %26, i64 %111
  store double %116, ptr %117, align 8, !tbaa !171
  %118 = getelementptr inbounds double, ptr %28, i64 %114
  %119 = load double, ptr %118, align 8, !tbaa !171
  %120 = getelementptr inbounds double, ptr %28, i64 %111
  store double %119, ptr %120, align 8, !tbaa !171
  %121 = getelementptr inbounds double, ptr %30, i64 %114
  %122 = load double, ptr %121, align 8, !tbaa !171
  %123 = fneg double %122
  %124 = getelementptr inbounds double, ptr %30, i64 %111
  store double %123, ptr %124, align 8, !tbaa !171
  br label %125

125:                                              ; preds = %110, %106
  %126 = add nuw i32 %41, 1
  %127 = icmp eq i32 %126, %15
  br i1 %127, label %39, label %40, !llvm.loop !819
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5State21remove_boundary_cellsEv(ptr noundef nonnull align 8 dereferenceable(368) %0) #13 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !816
  %6 = getelementptr inbounds %class.Mesh, ptr %5, i64 0, i32 37
  %7 = load i32, ptr %6, align 4, !tbaa !640
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %198

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.Mesh, ptr %5, i64 0, i32 45
  %11 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %12 = sext i32 %11 to i64
  store i64 %12, ptr %10, align 8, !tbaa !85
  %13 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !566
  %15 = tail call noundef ptr @_ZN10MallocPlus14memory_reallocEmPv(ptr noundef nonnull align 8 dereferenceable(96) %0, i64 noundef %12, ptr noundef %14) #56
  store ptr %15, ptr %13, align 8, !tbaa !566
  %16 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  %19 = load ptr, ptr %18, align 8, !tbaa !817
  %20 = tail call noundef ptr @_ZN10MallocPlus14memory_reallocEmPv(ptr noundef nonnull align 8 dereferenceable(96) %0, i64 noundef %17, ptr noundef %19) #56
  store ptr %20, ptr %18, align 8, !tbaa !817
  %21 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  %24 = load ptr, ptr %23, align 8, !tbaa !818
  %25 = tail call noundef ptr @_ZN10MallocPlus14memory_reallocEmPv(ptr noundef nonnull align 8 dereferenceable(96) %0, i64 noundef %22, ptr noundef %24) #56
  store ptr %25, ptr %23, align 8, !tbaa !818
  %26 = load ptr, ptr %4, align 8, !tbaa !816
  %27 = getelementptr inbounds %class.Mesh, ptr %26, i64 0, i32 1
  %28 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %class.Mesh, ptr %26, i64 0, i32 64
  %31 = load ptr, ptr %30, align 8, !tbaa !637
  %32 = tail call noundef ptr @_ZN10MallocPlus14memory_reallocEmPv(ptr noundef nonnull align 8 dereferenceable(96) %27, i64 noundef %29, ptr noundef %31) #56
  %33 = load ptr, ptr %4, align 8, !tbaa !816
  %34 = getelementptr inbounds %class.Mesh, ptr %33, i64 0, i32 64
  store ptr %32, ptr %34, align 8, !tbaa !637
  %35 = getelementptr inbounds %class.Mesh, ptr %33, i64 0, i32 1
  %36 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %class.Mesh, ptr %33, i64 0, i32 65
  %39 = load ptr, ptr %38, align 8, !tbaa !638
  %40 = tail call noundef ptr @_ZN10MallocPlus14memory_reallocEmPv(ptr noundef nonnull align 8 dereferenceable(96) %35, i64 noundef %37, ptr noundef %39) #56
  %41 = load ptr, ptr %4, align 8, !tbaa !816
  %42 = getelementptr inbounds %class.Mesh, ptr %41, i64 0, i32 65
  store ptr %40, ptr %42, align 8, !tbaa !638
  %43 = getelementptr inbounds %class.Mesh, ptr %41, i64 0, i32 1
  %44 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %class.Mesh, ptr %41, i64 0, i32 67
  %47 = load ptr, ptr %46, align 8, !tbaa !639
  %48 = tail call noundef ptr @_ZN10MallocPlus14memory_reallocEmPv(ptr noundef nonnull align 8 dereferenceable(96) %43, i64 noundef %45, ptr noundef %47) #56
  %49 = load ptr, ptr %4, align 8, !tbaa !816
  %50 = getelementptr inbounds %class.Mesh, ptr %49, i64 0, i32 67
  store ptr %48, ptr %50, align 8, !tbaa !639
  %51 = getelementptr inbounds %class.Mesh, ptr %49, i64 0, i32 1
  %52 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %class.Mesh, ptr %49, i64 0, i32 68
  %55 = load ptr, ptr %54, align 8, !tbaa !682
  %56 = tail call noundef ptr @_ZN10MallocPlus14memory_reallocEmPv(ptr noundef nonnull align 8 dereferenceable(96) %51, i64 noundef %53, ptr noundef %55) #56
  %57 = load ptr, ptr %4, align 8, !tbaa !816
  %58 = getelementptr inbounds %class.Mesh, ptr %57, i64 0, i32 68
  store ptr %56, ptr %58, align 8, !tbaa !682
  %59 = getelementptr inbounds %class.Mesh, ptr %57, i64 0, i32 1
  %60 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds %class.Mesh, ptr %57, i64 0, i32 69
  %63 = load ptr, ptr %62, align 8, !tbaa !684
  %64 = tail call noundef ptr @_ZN10MallocPlus14memory_reallocEmPv(ptr noundef nonnull align 8 dereferenceable(96) %59, i64 noundef %61, ptr noundef %63) #56
  %65 = load ptr, ptr %4, align 8, !tbaa !816
  %66 = getelementptr inbounds %class.Mesh, ptr %65, i64 0, i32 69
  store ptr %64, ptr %66, align 8, !tbaa !684
  %67 = getelementptr inbounds %class.Mesh, ptr %65, i64 0, i32 1
  %68 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %class.Mesh, ptr %65, i64 0, i32 70
  %71 = load ptr, ptr %70, align 8, !tbaa !685
  %72 = tail call noundef ptr @_ZN10MallocPlus14memory_reallocEmPv(ptr noundef nonnull align 8 dereferenceable(96) %67, i64 noundef %69, ptr noundef %71) #56
  %73 = load ptr, ptr %4, align 8, !tbaa !816
  %74 = getelementptr inbounds %class.Mesh, ptr %73, i64 0, i32 70
  store ptr %72, ptr %74, align 8, !tbaa !685
  %75 = getelementptr inbounds %class.Mesh, ptr %73, i64 0, i32 1
  %76 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %class.Mesh, ptr %73, i64 0, i32 71
  %79 = load ptr, ptr %78, align 8, !tbaa !686
  %80 = tail call noundef ptr @_ZN10MallocPlus14memory_reallocEmPv(ptr noundef nonnull align 8 dereferenceable(96) %75, i64 noundef %77, ptr noundef %79) #56
  %81 = load ptr, ptr %4, align 8, !tbaa !816
  %82 = getelementptr inbounds %class.Mesh, ptr %81, i64 0, i32 71
  store ptr %80, ptr %82, align 8, !tbaa !686
  %83 = getelementptr inbounds %class.Mesh, ptr %81, i64 0, i32 1
  %84 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %class.Mesh, ptr %81, i64 0, i32 72
  %87 = load ptr, ptr %86, align 8, !tbaa !687
  %88 = tail call noundef ptr @_ZN10MallocPlus14memory_reallocEmPv(ptr noundef nonnull align 8 dereferenceable(96) %83, i64 noundef %85, ptr noundef %87) #56
  %89 = load ptr, ptr %4, align 8, !tbaa !816
  %90 = getelementptr inbounds %class.Mesh, ptr %89, i64 0, i32 72
  store ptr %88, ptr %90, align 8, !tbaa !687
  %91 = getelementptr inbounds %class.Mesh, ptr %89, i64 0, i32 63
  %92 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %93 = sext i32 %92 to i64
  tail call void @_ZNSt6vectorIiSaIiEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %91, i64 noundef %93) #56
  %94 = load ptr, ptr %4, align 8, !tbaa !816
  %95 = getelementptr inbounds %class.Mesh, ptr %94, i64 0, i32 75
  %96 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %97 = sext i32 %96 to i64
  tail call void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %95, i64 noundef %97) #56
  %98 = load ptr, ptr %4, align 8, !tbaa !816
  %99 = getelementptr inbounds %class.Mesh, ptr %98, i64 0, i32 76
  %100 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %101 = sext i32 %100 to i64
  tail call void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %99, i64 noundef %101) #56
  %102 = load ptr, ptr %4, align 8, !tbaa !816
  %103 = getelementptr inbounds %class.Mesh, ptr %102, i64 0, i32 77
  %104 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %105 = sext i32 %104 to i64
  tail call void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %103, i64 noundef %105) #56
  %106 = load ptr, ptr %4, align 8, !tbaa !816
  %107 = getelementptr inbounds %class.Mesh, ptr %106, i64 0, i32 78
  %108 = load i32, ptr @save_ncells, align 4, !tbaa !68
  %109 = sext i32 %108 to i64
  tail call void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) %107, i64 noundef %109) #56
  %110 = load ptr, ptr %4, align 8, !tbaa !816
  %111 = getelementptr inbounds %class.Mesh, ptr %110, i64 0, i32 45
  %112 = load i64, ptr %111, align 8, !tbaa !543
  %113 = trunc i64 %112 to i32
  tail call void @_ZN4Mesh10set_boundsEi(ptr noundef nonnull align 8 dereferenceable(2288) %110, i32 noundef %113) #56
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #57
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #57
  %114 = load ptr, ptr %4, align 8, !tbaa !816
  call void @_ZN4Mesh10get_boundsERiS0_(ptr noundef nonnull align 8 dereferenceable(2288) %114, ptr noundef nonnull align 4 dereferenceable(4) %2, ptr noundef nonnull align 4 dereferenceable(4) %3) #56
  %115 = load i32, ptr %2, align 4, !tbaa !68
  %116 = load i32, ptr %3, align 4, !tbaa !68
  %117 = icmp ult i32 %115, %116
  br i1 %117, label %118, label %139

118:                                              ; preds = %9
  %119 = load ptr, ptr %4, align 8, !tbaa !816
  %120 = getelementptr inbounds %class.Mesh, ptr %119, i64 0, i32 64
  %121 = load ptr, ptr %120, align 8, !tbaa !637
  %122 = getelementptr inbounds %class.Mesh, ptr %119, i64 0, i32 26
  %123 = getelementptr inbounds %class.Mesh, ptr %119, i64 0, i32 67
  %124 = load ptr, ptr %123, align 8, !tbaa !639
  %125 = load ptr, ptr %122, align 8, !tbaa !65
  %126 = getelementptr inbounds %class.Mesh, ptr %119, i64 0, i32 69
  %127 = getelementptr inbounds %class.Mesh, ptr %119, i64 0, i32 27
  %128 = load ptr, ptr %127, align 8, !tbaa !65
  %129 = getelementptr inbounds %class.Mesh, ptr %119, i64 0, i32 70
  %130 = getelementptr inbounds %class.Mesh, ptr %119, i64 0, i32 65
  %131 = load ptr, ptr %130, align 8, !tbaa !638
  %132 = getelementptr inbounds %class.Mesh, ptr %119, i64 0, i32 28
  %133 = load ptr, ptr %132, align 8, !tbaa !65
  %134 = getelementptr inbounds %class.Mesh, ptr %119, i64 0, i32 71
  %135 = getelementptr inbounds %class.Mesh, ptr %119, i64 0, i32 29
  %136 = load ptr, ptr %135, align 8, !tbaa !65
  %137 = getelementptr inbounds %class.Mesh, ptr %119, i64 0, i32 72
  %138 = zext i32 %115 to i64
  br label %140

139:                                              ; preds = %193, %9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #57
  br label %198

140:                                              ; preds = %193, %118
  %141 = phi i64 [ %138, %118 ], [ %194, %193 ]
  %142 = getelementptr inbounds i32, ptr %121, i64 %141
  %143 = load i32, ptr %142, align 4, !tbaa !68
  %144 = getelementptr inbounds i32, ptr %124, i64 %141
  %145 = load i32, ptr %144, align 4, !tbaa !68
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i32, ptr %125, i64 %146
  %148 = load i32, ptr %147, align 4, !tbaa !68
  %149 = icmp eq i32 %143, %148
  br i1 %149, label %150, label %157

150:                                              ; preds = %140
  %151 = load ptr, ptr %126, align 8, !tbaa !684
  %152 = getelementptr inbounds i32, ptr %151, i64 %141
  %153 = trunc i64 %141 to i32
  store i32 %153, ptr %152, align 4, !tbaa !68
  %154 = load i32, ptr %142, align 4, !tbaa !68
  %155 = load i32, ptr %144, align 4, !tbaa !68
  %156 = sext i32 %155 to i64
  br label %157

157:                                              ; preds = %150, %140
  %158 = phi i64 [ %156, %150 ], [ %146, %140 ]
  %159 = phi i32 [ %154, %150 ], [ %143, %140 ]
  %160 = getelementptr inbounds i32, ptr %128, i64 %158
  %161 = load i32, ptr %160, align 4, !tbaa !68
  %162 = icmp eq i32 %159, %161
  br i1 %162, label %163, label %169

163:                                              ; preds = %157
  %164 = load ptr, ptr %129, align 8, !tbaa !685
  %165 = getelementptr inbounds i32, ptr %164, i64 %141
  %166 = trunc i64 %141 to i32
  store i32 %166, ptr %165, align 4, !tbaa !68
  %167 = load i32, ptr %144, align 4, !tbaa !68
  %168 = sext i32 %167 to i64
  br label %169

169:                                              ; preds = %163, %157
  %170 = phi i64 [ %168, %163 ], [ %158, %157 ]
  %171 = getelementptr inbounds i32, ptr %131, i64 %141
  %172 = load i32, ptr %171, align 4, !tbaa !68
  %173 = getelementptr inbounds i32, ptr %133, i64 %170
  %174 = load i32, ptr %173, align 4, !tbaa !68
  %175 = icmp eq i32 %172, %174
  br i1 %175, label %176, label %183

176:                                              ; preds = %169
  %177 = load ptr, ptr %134, align 8, !tbaa !686
  %178 = getelementptr inbounds i32, ptr %177, i64 %141
  %179 = trunc i64 %141 to i32
  store i32 %179, ptr %178, align 4, !tbaa !68
  %180 = load i32, ptr %171, align 4, !tbaa !68
  %181 = load i32, ptr %144, align 4, !tbaa !68
  %182 = sext i32 %181 to i64
  br label %183

183:                                              ; preds = %176, %169
  %184 = phi i64 [ %182, %176 ], [ %170, %169 ]
  %185 = phi i32 [ %180, %176 ], [ %172, %169 ]
  %186 = getelementptr inbounds i32, ptr %136, i64 %184
  %187 = load i32, ptr %186, align 4, !tbaa !68
  %188 = icmp eq i32 %185, %187
  br i1 %188, label %189, label %193

189:                                              ; preds = %183
  %190 = load ptr, ptr %137, align 8, !tbaa !687
  %191 = getelementptr inbounds i32, ptr %190, i64 %141
  %192 = trunc i64 %141 to i32
  store i32 %192, ptr %191, align 4, !tbaa !68
  br label %193

193:                                              ; preds = %189, %183
  %194 = add nuw nsw i64 %141, 1
  %195 = load i32, ptr %3, align 4, !tbaa !68
  %196 = zext i32 %195 to i64
  %197 = icmp ult i64 %194, %196
  br i1 %197, label %140, label %139, !llvm.loop !820

198:                                              ; preds = %139, %1
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef double @_ZN5State12set_timestepEdd(ptr nocapture noundef nonnull align 8 dereferenceable(368) %0, double noundef %1, double noundef %2) #13 align 2 {
  %4 = alloca %struct.timeval, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #57
  call void @cpu_timer_start(ptr noundef nonnull %4) #56
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #57
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #57
  %7 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !816
  %9 = getelementptr inbounds %class.Mesh, ptr %8, i64 0, i32 45
  %10 = load i64, ptr %9, align 8, !tbaa !543
  %11 = trunc i64 %10 to i32
  call void @_ZN4Mesh10set_boundsEi(ptr noundef nonnull align 8 dereferenceable(2288) %8, i32 noundef %11) #56
  %12 = load ptr, ptr %7, align 8, !tbaa !816
  call void @_ZN4Mesh10get_boundsERiS0_(ptr noundef nonnull align 8 dereferenceable(2288) %12, ptr noundef nonnull align 4 dereferenceable(4) %5, ptr noundef nonnull align 4 dereferenceable(4) %6) #56
  store double 1.000000e+03, ptr @_ZZN5State12set_timestepEddE9mindeltaT, align 8, !tbaa !171
  %13 = load i32, ptr %5, align 4, !tbaa !68
  %14 = load i32, ptr %6, align 4, !tbaa !68
  %15 = icmp slt i32 %13, %14
  br i1 %15, label %16, label %85

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %18 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  %19 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  %20 = sext i32 %13 to i64
  %21 = load ptr, ptr %7, align 8, !tbaa !816
  br label %25

22:                                               ; preds = %77
  %.lcssa = phi double [ %80, %77 ]
  %23 = load double, ptr @_ZZN5State12set_timestepEddE9mindeltaT, align 8, !tbaa !171
  %24 = fcmp olt double %.lcssa, %23
  br i1 %24, label %84, label %85

25:                                               ; preds = %77, %16
  %26 = phi i32 [ %14, %16 ], [ %78, %77 ]
  %27 = phi ptr [ %21, %16 ], [ %79, %77 ]
  %28 = phi i64 [ %20, %16 ], [ %81, %77 ]
  %29 = phi double [ 1.000000e+03, %16 ], [ %80, %77 ]
  %30 = getelementptr inbounds %class.Mesh, ptr %27, i64 0, i32 68
  %31 = load ptr, ptr %30, align 8, !tbaa !682
  %32 = getelementptr inbounds i32, ptr %31, i64 %28
  %33 = load i32, ptr %32, align 4, !tbaa !68
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %77

35:                                               ; preds = %25
  %36 = getelementptr inbounds %class.Mesh, ptr %27, i64 0, i32 67
  %37 = load ptr, ptr %36, align 8, !tbaa !639
  %38 = getelementptr inbounds i32, ptr %37, i64 %28
  %39 = load i32, ptr %38, align 4, !tbaa !68
  %40 = load ptr, ptr %17, align 8, !tbaa !566
  %41 = getelementptr inbounds double, ptr %40, i64 %28
  %42 = load double, ptr %41, align 8, !tbaa !171
  %43 = fmul double %42, %1
  %44 = call double @sqrt(double noundef %43) #59
  %45 = load ptr, ptr %18, align 8, !tbaa !817
  %46 = getelementptr inbounds double, ptr %45, i64 %28
  %47 = load double, ptr %46, align 8, !tbaa !171
  %48 = load ptr, ptr %7, align 8, !tbaa !816
  %49 = getelementptr inbounds %class.Mesh, ptr %48, i64 0, i32 33
  %50 = sext i32 %39 to i64
  %51 = load ptr, ptr %49, align 8, !tbaa !109
  %52 = getelementptr inbounds double, ptr %51, i64 %50
  %53 = load double, ptr %52, align 8, !tbaa !171
  %54 = load ptr, ptr %19, align 8, !tbaa !818
  %55 = getelementptr inbounds double, ptr %54, i64 %28
  %56 = load double, ptr %55, align 8, !tbaa !171
  %57 = getelementptr inbounds %class.Mesh, ptr %48, i64 0, i32 34
  %58 = load ptr, ptr %57, align 8, !tbaa !109
  %59 = getelementptr inbounds double, ptr %58, i64 %50
  %60 = load double, ptr %59, align 8, !tbaa !171
  %61 = insertelement <2 x double> poison, double %47, i64 0
  %62 = insertelement <2 x double> %61, double %56, i64 1
  %63 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %62)
  %64 = insertelement <2 x double> poison, double %44, i64 0
  %65 = shufflevector <2 x double> %64, <2 x double> poison, <2 x i32> zeroinitializer
  %66 = fadd <2 x double> %65, %63
  %67 = insertelement <2 x double> poison, double %53, i64 0
  %68 = insertelement <2 x double> %67, double %60, i64 1
  %69 = fdiv <2 x double> %66, %68
  %70 = shufflevector <2 x double> %69, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %71 = fadd <2 x double> %69, %70
  %72 = extractelement <2 x double> %71, i64 0
  %73 = fdiv double %2, %72
  %74 = fcmp olt double %73, %29
  %75 = select i1 %74, double %73, double %29
  %76 = load i32, ptr %6, align 4, !tbaa !68
  br label %77

77:                                               ; preds = %35, %25
  %78 = phi i32 [ %76, %35 ], [ %26, %25 ]
  %79 = phi ptr [ %48, %35 ], [ %27, %25 ]
  %80 = phi double [ %75, %35 ], [ %29, %25 ]
  %81 = add nsw i64 %28, 1
  %82 = sext i32 %78 to i64
  %83 = icmp slt i64 %81, %82
  br i1 %83, label %25, label %22, !llvm.loop !821

84:                                               ; preds = %22
  store double %.lcssa, ptr @_ZZN5State12set_timestepEddE9mindeltaT, align 8, !tbaa !171
  br label %85

85:                                               ; preds = %84, %22, %3
  %86 = phi double [ %.lcssa, %84 ], [ %23, %22 ], [ 1.000000e+03, %3 ]
  %87 = load i64, ptr %4, align 8, !tbaa.struct !560
  %88 = getelementptr inbounds i8, ptr %4, i64 8
  %89 = load i64, ptr %88, align 8, !tbaa.struct !561
  %90 = call double @cpu_timer_stop(i64 %87, i64 %89) #56
  %91 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 6, i64 1
  %92 = load double, ptr %91, align 8, !tbaa !171
  %93 = fadd double %90, %92
  store double %93, ptr %91, align 8, !tbaa !171
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #57
  ret double %86
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(write)
declare double @sqrt(double noundef) local_unnamed_addr #51

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x double> @llvm.fabs.v2f64(<2 x double>) #21

; Function Attrs: optsize uwtable
define internal void @_ZN5State11fill_circleEddd(ptr nocapture noundef nonnull readonly align 8 dereferenceable(368) %0, double noundef %1, double noundef %2, double noundef %3) #6 align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::vector", align 8
  %7 = alloca %"class.std::ios_base::Init", align 1
  %8 = alloca %"class.std::vector", align 8
  %9 = alloca %"class.std::ios_base::Init", align 1
  %10 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !816
  %12 = getelementptr inbounds %class.Mesh, ptr %11, i64 0, i32 45
  %13 = getelementptr inbounds %class.Mesh, ptr %11, i64 0, i32 75
  %14 = getelementptr inbounds %class.Mesh, ptr %11, i64 0, i32 76
  %15 = getelementptr inbounds %class.Mesh, ptr %11, i64 0, i32 77
  %16 = getelementptr inbounds %class.Mesh, ptr %11, i64 0, i32 78
  %17 = load i64, ptr %12, align 8, !tbaa !85
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !566
  %22 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  %23 = load ptr, ptr %22, align 8, !tbaa !818
  %24 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  %25 = load ptr, ptr %24, align 8, !tbaa !817
  br label %29

26:                                               ; preds = %29, %4
  tail call void @_ZN4Mesh12kdtree_setupEv(ptr noundef nonnull align 8 dereferenceable(2288) %11) #56
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #57
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #57
  %27 = load i64, ptr %12, align 8, !tbaa !85
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %7) #57
  call void @_ZNSt6vectorIiSaIiEEC2EmRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %6, i64 noundef %27, ptr noundef nonnull align 1 dereferenceable(1) %7) #56
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %7) #57
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #57
  %28 = load i64, ptr %12, align 8, !tbaa !85
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %9) #57
  invoke void @_ZNSt6vectorIdSaIdEEC2EmRKS0_(ptr noundef nonnull align 8 dereferenceable(24) %8, i64 noundef %28, ptr noundef nonnull align 1 dereferenceable(1) %9) #56
          to label %38 unwind label %76

29:                                               ; preds = %29, %19
  %30 = phi i64 [ 0, %19 ], [ %36, %29 ]
  %31 = phi i32 [ 0, %19 ], [ %35, %29 ]
  %32 = getelementptr inbounds double, ptr %21, i64 %30
  store double %3, ptr %32, align 8, !tbaa !171
  %33 = getelementptr inbounds double, ptr %23, i64 %30
  store double 0.000000e+00, ptr %33, align 8, !tbaa !171
  %34 = getelementptr inbounds double, ptr %25, i64 %30
  store double 0.000000e+00, ptr %34, align 8, !tbaa !171
  %35 = add i32 %31, 1
  %36 = zext i32 %35 to i64
  %37 = icmp ugt i64 %17, %36
  br i1 %37, label %29, label %26, !llvm.loop !822

38:                                               ; preds = %26
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9) #57
  %39 = load ptr, ptr %10, align 8, !tbaa !816
  %40 = getelementptr inbounds %class.Mesh, ptr %39, i64 0, i32 24
  %41 = load ptr, ptr %6, align 8, !tbaa !65
  %42 = load i64, ptr %12, align 8, !tbaa !85
  %43 = trunc i64 %42 to i32
  %44 = load ptr, ptr %13, align 8, !tbaa !109
  %45 = load ptr, ptr %14, align 8, !tbaa !109
  %46 = load ptr, ptr %15, align 8, !tbaa !109
  %47 = load ptr, ptr %16, align 8, !tbaa !109
  invoke void @KDTree_QueryCircleInterior_Double(ptr noundef nonnull %40, ptr noundef nonnull %5, ptr noundef nonnull %41, double noundef %1, i32 noundef %43, ptr noundef nonnull %44, ptr noundef nonnull %45, ptr noundef nonnull %46, ptr noundef nonnull %47) #56
          to label %48 unwind label %78

48:                                               ; preds = %38
  %49 = load i32, ptr %5, align 4, !tbaa !68
  %50 = icmp sgt i32 %49, 0
  %51 = load ptr, ptr %6, align 8, !tbaa !65
  br i1 %50, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %54 = load ptr, ptr %53, align 8, !tbaa !566
  %55 = zext i32 %49 to i64
  br label %83

56:                                               ; preds = %83, %48
  %57 = load ptr, ptr %10, align 8, !tbaa !816
  %58 = getelementptr inbounds %class.Mesh, ptr %57, i64 0, i32 24
  %59 = load ptr, ptr %8, align 8, !tbaa !109
  %60 = load i64, ptr %12, align 8, !tbaa !85
  %61 = trunc i64 %60 to i32
  %62 = load ptr, ptr %13, align 8, !tbaa !109
  %63 = load ptr, ptr %14, align 8, !tbaa !109
  %64 = load ptr, ptr %15, align 8, !tbaa !109
  %65 = load ptr, ptr %16, align 8, !tbaa !109
  invoke void @KDTree_QueryCircleIntersectWeighted_Double(ptr noundef nonnull %58, ptr noundef nonnull %5, ptr noundef nonnull %51, ptr noundef nonnull %59, double noundef %1, i32 noundef %61, ptr noundef nonnull %62, ptr noundef nonnull %63, ptr noundef nonnull %64, ptr noundef nonnull %65) #56
          to label %66 unwind label %78

66:                                               ; preds = %56
  %67 = load i32, ptr %5, align 4, !tbaa !68
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %91

69:                                               ; preds = %66
  %70 = fsub double %2, %3
  %71 = load ptr, ptr %8, align 8, !tbaa !109
  %72 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %73 = load ptr, ptr %72, align 8, !tbaa !566
  %74 = load ptr, ptr %6, align 8, !tbaa !65
  %75 = zext i32 %67 to i64
  br label %94

76:                                               ; preds = %26
  %77 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9) #57
  br label %115

78:                                               ; preds = %91, %56, %38
  %79 = landingpad { ptr, i32 }
          cleanup
  %80 = load ptr, ptr %8, align 8, !tbaa !109
  %81 = icmp eq ptr %80, null
  br i1 %81, label %115, label %82

82:                                               ; preds = %78
  call void @_ZdlPv(ptr noundef nonnull %80) #58
  br label %115

83:                                               ; preds = %83, %52
  %84 = phi i64 [ 0, %52 ], [ %89, %83 ]
  %85 = getelementptr inbounds i32, ptr %51, i64 %84
  %86 = load i32, ptr %85, align 4, !tbaa !68
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds double, ptr %54, i64 %87
  store double %2, ptr %88, align 8, !tbaa !171
  %89 = add nuw nsw i64 %84, 1
  %90 = icmp eq i64 %89, %55
  br i1 %90, label %56, label %83, !llvm.loop !823

91:                                               ; preds = %94, %66
  %92 = load ptr, ptr %10, align 8, !tbaa !816
  %93 = getelementptr inbounds %class.Mesh, ptr %92, i64 0, i32 24
  invoke void @KDTree_Destroy(ptr noundef nonnull %93) #56
          to label %106 unwind label %78

94:                                               ; preds = %94, %69
  %95 = phi i64 [ 0, %69 ], [ %104, %94 ]
  %96 = getelementptr inbounds double, ptr %71, i64 %95
  %97 = load double, ptr %96, align 8, !tbaa !171
  %98 = fmul double %70, %97
  %99 = fadd double %98, %3
  %100 = getelementptr inbounds i32, ptr %74, i64 %95
  %101 = load i32, ptr %100, align 4, !tbaa !68
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds double, ptr %73, i64 %102
  store double %99, ptr %103, align 8, !tbaa !171
  %104 = add nuw nsw i64 %95, 1
  %105 = icmp eq i64 %104, %75
  br i1 %105, label %91, label %94, !llvm.loop !824

106:                                              ; preds = %91
  %107 = load ptr, ptr %8, align 8, !tbaa !109
  %108 = icmp eq ptr %107, null
  br i1 %108, label %110, label %109

109:                                              ; preds = %106
  call void @_ZdlPv(ptr noundef nonnull %107) #58
  br label %110

110:                                              ; preds = %109, %106
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #57
  %111 = load ptr, ptr %6, align 8, !tbaa !65
  %112 = icmp eq ptr %111, null
  br i1 %112, label %114, label %113

113:                                              ; preds = %110
  call void @_ZdlPv(ptr noundef nonnull %111) #58
  br label %114

114:                                              ; preds = %113, %110
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #57
  ret void

115:                                              ; preds = %82, %78, %76
  %116 = phi { ptr, i32 } [ %77, %76 ], [ %79, %78 ], [ %79, %82 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #57
  %117 = load ptr, ptr %6, align 8, !tbaa !65
  %118 = icmp eq ptr %117, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %115
  call void @_ZdlPv(ptr noundef nonnull %117) #58
  br label %120

120:                                              ; preds = %119, %115
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #57
  resume { ptr, i32 } %116
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZNSt6vectorIdSaIdEED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #10 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !109
  %3 = icmp eq ptr %2, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %2) #58
  br label %5

5:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5State13state_reorderESt6vectorIiSaIiEE(ptr noundef nonnull align 8 dereferenceable(368) %0, ptr nocapture noundef readonly %1) #13 align 2 {
  %3 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !566
  %5 = load ptr, ptr %1, align 8, !tbaa !65
  %6 = tail call noundef ptr @_ZN10MallocPlus14memory_reorderEPdPi(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %4, ptr noundef nonnull %5) #56
  store ptr %6, ptr %3, align 8, !tbaa !566
  %7 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %7, align 8, !tbaa !817
  %9 = load ptr, ptr %1, align 8, !tbaa !65
  %10 = tail call noundef ptr @_ZN10MallocPlus14memory_reorderEPdPi(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %8, ptr noundef nonnull %9) #56
  store ptr %10, ptr %7, align 8, !tbaa !817
  %11 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  %12 = load ptr, ptr %11, align 8, !tbaa !818
  %13 = load ptr, ptr %1, align 8, !tbaa !65
  %14 = tail call noundef ptr @_ZN10MallocPlus14memory_reorderEPdPi(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %12, ptr noundef nonnull %13) #56
  store ptr %14, ptr %11, align 8, !tbaa !818
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZN5State10rezone_allEiiSt6vectorIiSaIiEE(ptr noundef nonnull align 8 dereferenceable(368) %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) #6 align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %struct.timeval, align 8
  %6 = alloca %"class.std::vector", align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #57
  call void @cpu_timer_start(ptr noundef nonnull %5) #56
  %7 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !816
  call void @_ZNSt6vectorIiSaIiEEC2ERKS1_(ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 8 dereferenceable(24) %3) #56
  invoke void @_ZN4Mesh10rezone_allEiiSt6vectorIiSaIiEEiR10MallocPlus(ptr noundef nonnull align 8 dereferenceable(2288) %8, i32 noundef %1, i32 noundef %2, ptr noundef nonnull %6, i32 noundef 1, ptr noundef nonnull align 8 dereferenceable(96) %0) #56
          to label %9 unwind label %21

9:                                                ; preds = %4
  %10 = load ptr, ptr %6, align 8, !tbaa !65
  %11 = icmp eq ptr %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  call void @_ZdlPv(ptr noundef nonnull %10) #58
  br label %13

13:                                               ; preds = %12, %9
  call void @_ZN5State17memory_reset_ptrsEv(ptr noundef nonnull align 8 dereferenceable(368) %0) #56
  %14 = load i64, ptr %5, align 8, !tbaa.struct !560
  %15 = getelementptr inbounds i8, ptr %5, i64 8
  %16 = load i64, ptr %15, align 8, !tbaa.struct !561
  %17 = call double @cpu_timer_stop(i64 %14, i64 %16) #56
  %18 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 6, i64 5
  %19 = load double, ptr %18, align 8, !tbaa !171
  %20 = fadd double %17, %19
  store double %20, ptr %18, align 8, !tbaa !171
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #57
  ret void

21:                                               ; preds = %4
  %22 = landingpad { ptr, i32 }
          cleanup
  %23 = load ptr, ptr %6, align 8, !tbaa !65
  %24 = icmp eq ptr %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  call void @_ZdlPv(ptr noundef nonnull %23) #58
  br label %26

26:                                               ; preds = %25, %21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #57
  resume { ptr, i32 } %22
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5State22calc_finite_differenceEd(ptr noundef nonnull align 8 dereferenceable(368) %0, double noundef %1) #13 align 2 {
  %3 = alloca %struct.timeval, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #57
  call void @cpu_timer_start(ptr noundef nonnull %3) #56
  %6 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !816
  %8 = getelementptr inbounds %class.Mesh, ptr %7, i64 0, i32 45
  %9 = load i64, ptr %8, align 8, !tbaa !543
  %10 = getelementptr inbounds %class.Mesh, ptr %7, i64 0, i32 47
  %11 = load i64, ptr %10, align 8, !tbaa !85
  %12 = icmp ult i64 %11, %9
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  store i64 %9, ptr %10, align 8, !tbaa !85
  br label %14

14:                                               ; preds = %13, %2
  call void @_ZN5State25apply_boundary_conditionsEv(ptr noundef nonnull align 8 dereferenceable(368) %0) #56
  %15 = load ptr, ptr %6, align 8, !tbaa !816
  %16 = getelementptr inbounds %class.Mesh, ptr %15, i64 0, i32 69
  %17 = load ptr, ptr %16, align 8, !tbaa !684
  %18 = getelementptr inbounds %class.Mesh, ptr %15, i64 0, i32 70
  %19 = load ptr, ptr %18, align 8, !tbaa !685
  %20 = getelementptr inbounds %class.Mesh, ptr %15, i64 0, i32 71
  %21 = load ptr, ptr %20, align 8, !tbaa !686
  %22 = getelementptr inbounds %class.Mesh, ptr %15, i64 0, i32 72
  %23 = load ptr, ptr %22, align 8, !tbaa !687
  %24 = getelementptr inbounds %class.Mesh, ptr %15, i64 0, i32 67
  %25 = load ptr, ptr %24, align 8, !tbaa !639
  %26 = getelementptr inbounds %class.Mesh, ptr %15, i64 0, i32 33
  %27 = getelementptr inbounds %class.Mesh, ptr %15, i64 0, i32 34
  %28 = load i64, ptr %10, align 8, !tbaa !85
  %29 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, i64 noundef %28, i64 noundef 8, ptr noundef nonnull @.str.3.256, i32 noundef 16) #56
  store ptr %29, ptr @_ZZN5State22calc_finite_differenceEdE5H_new, align 8, !tbaa !29
  %30 = load i64, ptr %10, align 8, !tbaa !85
  %31 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, i64 noundef %30, i64 noundef 8, ptr noundef nonnull @.str.4.257, i32 noundef 16) #56
  store ptr %31, ptr @_ZZN5State22calc_finite_differenceEdE5U_new, align 8, !tbaa !29
  %32 = load i64, ptr %10, align 8, !tbaa !85
  %33 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, i64 noundef %32, i64 noundef 8, ptr noundef nonnull @.str.5.258, i32 noundef 16) #56
  store ptr %33, ptr @_ZZN5State22calc_finite_differenceEdE5V_new, align 8, !tbaa !29
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #57
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #57
  %34 = load ptr, ptr %6, align 8, !tbaa !816
  call void @_ZN4Mesh10get_boundsERiS0_(ptr noundef nonnull align 8 dereferenceable(2288) %34, ptr noundef nonnull align 4 dereferenceable(4) %4, ptr noundef nonnull align 4 dereferenceable(4) %5) #56
  %35 = load i32, ptr %4, align 4, !tbaa !68
  %36 = load i32, ptr %5, align 4, !tbaa !68
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %14
  %39 = load ptr, ptr @_ZZN5State22calc_finite_differenceEdE5H_new, align 8, !tbaa !29
  br label %48

40:                                               ; preds = %14
  %41 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %42 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  %43 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  %44 = fmul double %1, 5.000000e-01
  %45 = sext i32 %35 to i64
  %46 = insertelement <2 x double> poison, double %44, i64 0
  %47 = shufflevector <2 x double> %46, <2 x double> poison, <2 x i32> zeroinitializer
  br label %68

48:                                               ; preds = %1727, %38
  %49 = phi ptr [ %39, %38 ], [ %1740, %1727 ]
  %50 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %51 = load ptr, ptr %50, align 8, !tbaa !566
  %52 = call noundef ptr @_ZN10MallocPlus14memory_replaceEPvS0_(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %51, ptr noundef %49) #56
  store ptr %52, ptr %50, align 8, !tbaa !566
  %53 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  %54 = load ptr, ptr %53, align 8, !tbaa !817
  %55 = load ptr, ptr @_ZZN5State22calc_finite_differenceEdE5U_new, align 8, !tbaa !29
  %56 = call noundef ptr @_ZN10MallocPlus14memory_replaceEPvS0_(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %54, ptr noundef %55) #56
  store ptr %56, ptr %53, align 8, !tbaa !817
  %57 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  %58 = load ptr, ptr %57, align 8, !tbaa !818
  %59 = load ptr, ptr @_ZZN5State22calc_finite_differenceEdE5V_new, align 8, !tbaa !29
  %60 = call noundef ptr @_ZN10MallocPlus14memory_replaceEPvS0_(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %58, ptr noundef %59) #56
  store ptr %60, ptr %57, align 8, !tbaa !818
  %61 = load i64, ptr %3, align 8, !tbaa.struct !560
  %62 = getelementptr inbounds i8, ptr %3, i64 8
  %63 = load i64, ptr %62, align 8, !tbaa.struct !561
  %64 = call double @cpu_timer_stop(i64 %61, i64 %63) #56
  %65 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 6, i64 2
  %66 = load double, ptr %65, align 8, !tbaa !171
  %67 = fadd double %64, %66
  store double %67, ptr %65, align 8, !tbaa !171
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #57
  ret void

68:                                               ; preds = %1727, %40
  %69 = phi i64 [ %45, %40 ], [ %1761, %1727 ]
  %70 = getelementptr inbounds i32, ptr %25, i64 %69
  %71 = load i32, ptr %70, align 4, !tbaa !68
  %72 = getelementptr inbounds i32, ptr %17, i64 %69
  %73 = load i32, ptr %72, align 4, !tbaa !68
  %74 = getelementptr inbounds i32, ptr %19, i64 %69
  %75 = load i32, ptr %74, align 4, !tbaa !68
  %76 = getelementptr inbounds i32, ptr %23, i64 %69
  %77 = load i32, ptr %76, align 4, !tbaa !68
  %78 = getelementptr inbounds i32, ptr %21, i64 %69
  %79 = load i32, ptr %78, align 4, !tbaa !68
  %80 = load ptr, ptr %41, align 8, !tbaa !566
  %81 = getelementptr inbounds double, ptr %80, i64 %69
  %82 = load double, ptr %81, align 8, !tbaa !171
  %83 = load ptr, ptr %42, align 8, !tbaa !817
  %84 = getelementptr inbounds double, ptr %83, i64 %69
  %85 = load double, ptr %84, align 8, !tbaa !171
  %86 = load ptr, ptr %43, align 8, !tbaa !818
  %87 = getelementptr inbounds double, ptr %86, i64 %69
  %88 = load double, ptr %87, align 8, !tbaa !171
  %89 = sext i32 %73 to i64
  %90 = getelementptr inbounds i32, ptr %17, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !68
  %92 = getelementptr inbounds double, ptr %80, i64 %89
  %93 = load double, ptr %92, align 8, !tbaa !171
  %94 = getelementptr inbounds double, ptr %83, i64 %89
  %95 = load double, ptr %94, align 8, !tbaa !171
  %96 = getelementptr inbounds double, ptr %86, i64 %89
  %97 = load double, ptr %96, align 8, !tbaa !171
  %98 = sext i32 %75 to i64
  %99 = getelementptr inbounds i32, ptr %19, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !68
  %101 = getelementptr inbounds double, ptr %80, i64 %98
  %102 = load double, ptr %101, align 8, !tbaa !171
  %103 = getelementptr inbounds double, ptr %83, i64 %98
  %104 = load double, ptr %103, align 8, !tbaa !171
  %105 = getelementptr inbounds double, ptr %86, i64 %98
  %106 = load double, ptr %105, align 8, !tbaa !171
  %107 = sext i32 %77 to i64
  %108 = getelementptr inbounds i32, ptr %23, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !68
  %110 = getelementptr inbounds double, ptr %80, i64 %107
  %111 = load double, ptr %110, align 8, !tbaa !171
  %112 = getelementptr inbounds double, ptr %83, i64 %107
  %113 = load double, ptr %112, align 8, !tbaa !171
  %114 = getelementptr inbounds double, ptr %86, i64 %107
  %115 = load double, ptr %114, align 8, !tbaa !171
  %116 = sext i32 %79 to i64
  %117 = getelementptr inbounds i32, ptr %21, i64 %116
  %118 = load i32, ptr %117, align 4, !tbaa !68
  %119 = getelementptr inbounds double, ptr %80, i64 %116
  %120 = load double, ptr %119, align 8, !tbaa !171
  %121 = getelementptr inbounds double, ptr %83, i64 %116
  %122 = load double, ptr %121, align 8, !tbaa !171
  %123 = getelementptr inbounds double, ptr %86, i64 %116
  %124 = load double, ptr %123, align 8, !tbaa !171
  %125 = getelementptr inbounds i32, ptr %23, i64 %89
  %126 = load i32, ptr %125, align 4, !tbaa !68
  %127 = getelementptr inbounds i32, ptr %23, i64 %98
  %128 = load i32, ptr %127, align 4, !tbaa !68
  %129 = getelementptr inbounds i32, ptr %19, i64 %107
  %130 = load i32, ptr %129, align 4, !tbaa !68
  %131 = getelementptr inbounds i32, ptr %19, i64 %116
  %132 = load i32, ptr %131, align 4, !tbaa !68
  %133 = sext i32 %91 to i64
  %134 = getelementptr inbounds double, ptr %80, i64 %133
  %135 = load double, ptr %134, align 8, !tbaa !171
  %136 = getelementptr inbounds double, ptr %83, i64 %133
  %137 = load double, ptr %136, align 8, !tbaa !171
  %138 = sext i32 %100 to i64
  %139 = getelementptr inbounds double, ptr %80, i64 %138
  %140 = load double, ptr %139, align 8, !tbaa !171
  %141 = getelementptr inbounds double, ptr %83, i64 %138
  %142 = load double, ptr %141, align 8, !tbaa !171
  %143 = sext i32 %109 to i64
  %144 = getelementptr inbounds double, ptr %80, i64 %143
  %145 = load double, ptr %144, align 8, !tbaa !171
  %146 = getelementptr inbounds double, ptr %86, i64 %143
  %147 = load double, ptr %146, align 8, !tbaa !171
  %148 = sext i32 %118 to i64
  %149 = getelementptr inbounds double, ptr %80, i64 %148
  %150 = load double, ptr %149, align 8, !tbaa !171
  %151 = getelementptr inbounds double, ptr %86, i64 %148
  %152 = load double, ptr %151, align 8, !tbaa !171
  %153 = sext i32 %71 to i64
  %154 = load ptr, ptr %26, align 8, !tbaa !109
  %155 = getelementptr inbounds double, ptr %154, i64 %153
  %156 = load double, ptr %155, align 8, !tbaa !171
  %157 = load ptr, ptr %27, align 8, !tbaa !109
  %158 = getelementptr inbounds double, ptr %157, i64 %153
  %159 = load double, ptr %158, align 8, !tbaa !171
  %160 = getelementptr inbounds i32, ptr %25, i64 %89
  %161 = load i32, ptr %160, align 4, !tbaa !68
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds double, ptr %154, i64 %162
  %164 = load double, ptr %163, align 8, !tbaa !171
  %165 = getelementptr inbounds i32, ptr %25, i64 %98
  %166 = load i32, ptr %165, align 4, !tbaa !68
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds double, ptr %154, i64 %167
  %169 = load double, ptr %168, align 8, !tbaa !171
  %170 = getelementptr inbounds i32, ptr %25, i64 %107
  %171 = load i32, ptr %170, align 4, !tbaa !68
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds double, ptr %157, i64 %172
  %174 = load double, ptr %173, align 8, !tbaa !171
  %175 = getelementptr inbounds i32, ptr %25, i64 %116
  %176 = load i32, ptr %175, align 4, !tbaa !68
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds double, ptr %157, i64 %177
  %179 = load double, ptr %178, align 8, !tbaa !171
  %180 = icmp slt i32 %71, %161
  br i1 %180, label %181, label %198

181:                                              ; preds = %68
  %182 = sext i32 %126 to i64
  %183 = getelementptr inbounds double, ptr %80, i64 %182
  %184 = load double, ptr %183, align 8, !tbaa !171
  %185 = getelementptr inbounds double, ptr %83, i64 %182
  %186 = load double, ptr %185, align 8, !tbaa !171
  %187 = getelementptr inbounds double, ptr %86, i64 %182
  %188 = load double, ptr %187, align 8, !tbaa !171
  %189 = getelementptr inbounds i32, ptr %17, i64 %182
  %190 = load i32, ptr %189, align 4, !tbaa !68
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds double, ptr %80, i64 %191
  %193 = load double, ptr %192, align 8, !tbaa !171
  %194 = getelementptr inbounds double, ptr %83, i64 %191
  %195 = load double, ptr %194, align 8, !tbaa !171
  %196 = insertelement <2 x double> poison, double %184, i64 0
  %197 = insertelement <2 x double> %196, double %186, i64 1
  br label %198

198:                                              ; preds = %181, %68
  %199 = phi double [ %195, %181 ], [ 0.000000e+00, %68 ]
  %200 = phi double [ %193, %181 ], [ 0.000000e+00, %68 ]
  %201 = phi double [ %188, %181 ], [ 0.000000e+00, %68 ]
  %202 = phi i32 [ %190, %181 ], [ 0, %68 ]
  %203 = phi <2 x double> [ %197, %181 ], [ zeroinitializer, %68 ]
  %204 = icmp slt i32 %71, %166
  br i1 %204, label %205, label %222

205:                                              ; preds = %198
  %206 = sext i32 %128 to i64
  %207 = getelementptr inbounds double, ptr %80, i64 %206
  %208 = load double, ptr %207, align 8, !tbaa !171
  %209 = getelementptr inbounds double, ptr %83, i64 %206
  %210 = load double, ptr %209, align 8, !tbaa !171
  %211 = getelementptr inbounds double, ptr %86, i64 %206
  %212 = load double, ptr %211, align 8, !tbaa !171
  %213 = getelementptr inbounds i32, ptr %19, i64 %206
  %214 = load i32, ptr %213, align 4, !tbaa !68
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds double, ptr %80, i64 %215
  %217 = load double, ptr %216, align 8, !tbaa !171
  %218 = getelementptr inbounds double, ptr %83, i64 %215
  %219 = load double, ptr %218, align 8, !tbaa !171
  %220 = insertelement <2 x double> poison, double %208, i64 0
  %221 = insertelement <2 x double> %220, double %210, i64 1
  br label %222

222:                                              ; preds = %205, %198
  %223 = phi i32 [ %214, %205 ], [ 0, %198 ]
  %224 = phi double [ %212, %205 ], [ 0.000000e+00, %198 ]
  %225 = phi double [ %217, %205 ], [ 0.000000e+00, %198 ]
  %226 = phi double [ %219, %205 ], [ 0.000000e+00, %198 ]
  %227 = phi <2 x double> [ %221, %205 ], [ zeroinitializer, %198 ]
  %228 = icmp slt i32 %71, %176
  br i1 %228, label %229, label %246

229:                                              ; preds = %222
  %230 = sext i32 %132 to i64
  %231 = getelementptr inbounds double, ptr %80, i64 %230
  %232 = load double, ptr %231, align 8, !tbaa !171
  %233 = getelementptr inbounds double, ptr %83, i64 %230
  %234 = load double, ptr %233, align 8, !tbaa !171
  %235 = getelementptr inbounds double, ptr %86, i64 %230
  %236 = load double, ptr %235, align 8, !tbaa !171
  %237 = getelementptr inbounds i32, ptr %21, i64 %230
  %238 = load i32, ptr %237, align 4, !tbaa !68
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds double, ptr %80, i64 %239
  %241 = load double, ptr %240, align 8, !tbaa !171
  %242 = getelementptr inbounds double, ptr %86, i64 %239
  %243 = load double, ptr %242, align 8, !tbaa !171
  %244 = insertelement <2 x double> poison, double %232, i64 0
  %245 = insertelement <2 x double> %244, double %236, i64 1
  br label %246

246:                                              ; preds = %229, %222
  %247 = phi i32 [ %238, %229 ], [ 0, %222 ]
  %248 = phi double [ %234, %229 ], [ 0.000000e+00, %222 ]
  %249 = phi double [ %241, %229 ], [ 0.000000e+00, %222 ]
  %250 = phi double [ %243, %229 ], [ 0.000000e+00, %222 ]
  %251 = phi <2 x double> [ %245, %229 ], [ zeroinitializer, %222 ]
  %252 = icmp slt i32 %71, %171
  br i1 %252, label %253, label %270

253:                                              ; preds = %246
  %254 = sext i32 %130 to i64
  %255 = getelementptr inbounds double, ptr %80, i64 %254
  %256 = load double, ptr %255, align 8, !tbaa !171
  %257 = getelementptr inbounds double, ptr %83, i64 %254
  %258 = load double, ptr %257, align 8, !tbaa !171
  %259 = getelementptr inbounds double, ptr %86, i64 %254
  %260 = load double, ptr %259, align 8, !tbaa !171
  %261 = getelementptr inbounds i32, ptr %23, i64 %254
  %262 = load i32, ptr %261, align 4, !tbaa !68
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds double, ptr %80, i64 %263
  %265 = load double, ptr %264, align 8, !tbaa !171
  %266 = getelementptr inbounds double, ptr %86, i64 %263
  %267 = load double, ptr %266, align 8, !tbaa !171
  %268 = insertelement <2 x double> poison, double %256, i64 0
  %269 = insertelement <2 x double> %268, double %260, i64 1
  br label %270

270:                                              ; preds = %253, %246
  %271 = phi i32 [ %262, %253 ], [ 0, %246 ]
  %272 = phi double [ %258, %253 ], [ 0.000000e+00, %246 ]
  %273 = phi double [ %265, %253 ], [ 0.000000e+00, %246 ]
  %274 = phi double [ %267, %253 ], [ 0.000000e+00, %246 ]
  %275 = phi <2 x double> [ %269, %253 ], [ zeroinitializer, %246 ]
  %276 = fmul double %164, %164
  %277 = insertelement <2 x double> poison, double %174, i64 0
  %278 = insertelement <2 x double> %277, double %156, i64 1
  %279 = fmul <2 x double> %278, %278
  %280 = insertelement <2 x double> poison, double %82, i64 0
  %281 = insertelement <2 x double> %280, double %85, i64 1
  %282 = insertelement <2 x double> poison, double %164, i64 0
  %283 = shufflevector <2 x double> %282, <2 x double> poison, <2 x i32> zeroinitializer
  %284 = fmul <2 x double> %281, %283
  %285 = insertelement <2 x double> poison, double %93, i64 0
  %286 = insertelement <2 x double> %285, double %95, i64 1
  %287 = insertelement <2 x double> poison, double %156, i64 0
  %288 = shufflevector <2 x double> %287, <2 x double> poison, <2 x i32> zeroinitializer
  %289 = fmul <2 x double> %286, %288
  %290 = fdiv double %164, %156
  %291 = fcmp olt double %290, 1.000000e+00
  %292 = select i1 %291, double %290, double 1.000000e+00
  %293 = fdiv double %156, %164
  %294 = fcmp olt double %293, 1.000000e+00
  %295 = select i1 %294, double %293, double 1.000000e+00
  %296 = extractelement <2 x double> %279, i64 1
  %297 = fdiv double %276, %296
  %298 = fcmp olt double %297, 5.000000e-01
  %299 = select i1 %298, double %297, double 5.000000e-01
  %300 = fmul double %296, %299
  %301 = fdiv double %296, %276
  %302 = fcmp olt double %301, 5.000000e-01
  %303 = select i1 %302, double %301, double 5.000000e-01
  %304 = fmul double %276, %303
  %305 = fmul double %95, %95
  %306 = fdiv double %305, %93
  %307 = fmul double %93, %93
  %308 = fmul double %307, 4.900000e+00
  %309 = fadd double %308, %306
  %310 = fmul double %85, %85
  %311 = fdiv double %310, %82
  %312 = fmul double %82, %82
  %313 = fmul double %312, 4.900000e+00
  %314 = fadd double %313, %311
  %315 = fmul double %95, %97
  %316 = fdiv double %315, %93
  %317 = fmul double %85, %88
  %318 = fdiv double %317, %82
  %319 = fmul double %318, %156
  %320 = insertelement <2 x double> %287, double %300, i64 1
  %321 = insertelement <2 x double> %282, double %304, i64 1
  %322 = fadd <2 x double> %320, %321
  %323 = insertelement <2 x double> poison, double %88, i64 0
  %324 = insertelement <2 x double> %323, double %319, i64 1
  %325 = insertelement <2 x double> %321, double %292, i64 1
  %326 = fmul <2 x double> %324, %325
  %327 = fmul double %316, %164
  %328 = insertelement <2 x double> poison, double %97, i64 0
  %329 = insertelement <2 x double> %328, double %327, i64 1
  %330 = insertelement <2 x double> %287, double %295, i64 1
  %331 = fmul <2 x double> %329, %330
  %332 = fadd <2 x double> %326, %331
  %333 = fsub <2 x double> %326, %331
  %334 = shufflevector <2 x double> %332, <2 x double> %333, <2 x i32> <i32 0, i32 3>
  %335 = fdiv <2 x double> %334, %322
  %336 = extractelement <2 x double> %335, i64 1
  %337 = fmul double %44, %336
  %338 = extractelement <2 x double> %335, i64 0
  %339 = fsub double %338, %337
  %340 = fmul double %169, %169
  %341 = fmul double %102, %156
  %342 = insertelement <2 x double> poison, double %169, i64 0
  %343 = shufflevector <2 x double> %342, <2 x double> poison, <2 x i32> zeroinitializer
  %344 = fmul <2 x double> %281, %343
  %345 = extractelement <2 x double> %344, i64 0
  %346 = fadd double %341, %345
  %347 = fmul double %104, %169
  %348 = fdiv double %156, %169
  %349 = fcmp olt double %348, 1.000000e+00
  %350 = select i1 %349, double %348, double 1.000000e+00
  %351 = fmul double %347, %350
  %352 = fdiv double %169, %156
  %353 = fcmp olt double %352, 1.000000e+00
  %354 = select i1 %353, double %352, double 1.000000e+00
  %355 = fdiv double %296, %340
  %356 = fcmp olt double %355, 5.000000e-01
  %357 = select i1 %356, double %355, double 5.000000e-01
  %358 = fmul double %340, %357
  %359 = fdiv double %340, %296
  %360 = fcmp olt double %359, 5.000000e-01
  %361 = select i1 %360, double %359, double 5.000000e-01
  %362 = fmul double %296, %361
  %363 = fmul double %104, %104
  %364 = fdiv double %363, %102
  %365 = fmul double %102, %102
  %366 = fmul double %365, 4.900000e+00
  %367 = fadd double %366, %364
  %368 = fmul double %104, %156
  %369 = extractelement <2 x double> %344, i64 1
  %370 = fadd double %368, %369
  %371 = fmul double %367, %169
  %372 = fmul double %371, %350
  %373 = insertelement <2 x double> poison, double %85, i64 0
  %374 = insertelement <2 x double> %373, double %314, i64 1
  %375 = fmul <2 x double> %374, %288
  %376 = insertelement <2 x double> poison, double %292, i64 0
  %377 = shufflevector <2 x double> %376, <2 x double> poison, <2 x i32> zeroinitializer
  %378 = fmul <2 x double> %375, %377
  %379 = insertelement <2 x double> poison, double %354, i64 0
  %380 = shufflevector <2 x double> %379, <2 x double> poison, <2 x i32> zeroinitializer
  %381 = fmul <2 x double> %375, %380
  %382 = extractelement <2 x double> %381, i64 0
  %383 = fsub double %351, %382
  %384 = extractelement <2 x double> %381, i64 1
  %385 = fsub double %372, %384
  %386 = fmul double %104, %106
  %387 = fdiv double %386, %102
  %388 = fmul double %106, %156
  %389 = fmul double %387, %169
  %390 = fmul double %389, %350
  %391 = insertelement <2 x double> %287, double %358, i64 1
  %392 = insertelement <2 x double> %342, double %362, i64 1
  %393 = fadd <2 x double> %391, %392
  %394 = extractelement <2 x double> %393, i64 0
  %395 = fdiv double %346, %394
  %396 = fdiv double %370, %394
  %397 = extractelement <2 x double> %393, i64 1
  %398 = fdiv double %383, %397
  %399 = fmul double %44, %398
  %400 = fsub double %395, %399
  %401 = fdiv double %385, %397
  %402 = fmul double %44, %401
  %403 = insertelement <2 x double> %392, double %354, i64 1
  %404 = fmul <2 x double> %324, %403
  %405 = extractelement <2 x double> %404, i64 0
  %406 = fadd double %388, %405
  %407 = fdiv double %406, %394
  %408 = extractelement <2 x double> %404, i64 1
  %409 = fsub double %390, %408
  %410 = fdiv double %409, %397
  %411 = fmul double %44, %410
  %412 = fsub double %407, %411
  %413 = fmul double %179, %179
  %414 = fmul double %159, %159
  %415 = insertelement <2 x double> %280, double %88, i64 1
  %416 = insertelement <2 x double> poison, double %179, i64 0
  %417 = shufflevector <2 x double> %416, <2 x double> poison, <2 x i32> zeroinitializer
  %418 = fmul <2 x double> %415, %417
  %419 = fmul double %120, %159
  %420 = extractelement <2 x double> %418, i64 0
  %421 = fadd double %419, %420
  %422 = fadd double %159, %179
  %423 = fdiv double %421, %422
  %424 = fmul double %88, %159
  %425 = fdiv double %179, %159
  %426 = fcmp olt double %425, 1.000000e+00
  %427 = select i1 %426, double %425, double 1.000000e+00
  %428 = fmul double %424, %427
  %429 = fmul double %124, %179
  %430 = fdiv double %159, %179
  %431 = fcmp olt double %430, 1.000000e+00
  %432 = select i1 %431, double %430, double 1.000000e+00
  %433 = fmul double %429, %432
  %434 = fsub double %428, %433
  %435 = fdiv double %413, %414
  %436 = fcmp olt double %435, 5.000000e-01
  %437 = select i1 %436, double %435, double 5.000000e-01
  %438 = fmul double %414, %437
  %439 = fdiv double %414, %413
  %440 = fcmp olt double %439, 5.000000e-01
  %441 = select i1 %440, double %439, double 5.000000e-01
  %442 = fmul double %413, %441
  %443 = fadd double %438, %442
  %444 = fdiv double %434, %443
  %445 = fmul double %44, %444
  %446 = fsub double %423, %445
  %447 = fmul double %122, %124
  %448 = fdiv double %447, %120
  %449 = fmul double %85, %179
  %450 = fmul double %122, %159
  %451 = fadd double %450, %449
  %452 = fdiv double %451, %422
  %453 = fmul double %318, %159
  %454 = fmul double %453, %427
  %455 = fmul double %448, %179
  %456 = fmul double %455, %432
  %457 = fsub double %454, %456
  %458 = fdiv double %457, %443
  %459 = fmul double %44, %458
  %460 = fsub double %452, %459
  %461 = fmul double %124, %124
  %462 = fdiv double %461, %120
  %463 = fmul double %120, %120
  %464 = fmul double %463, 4.900000e+00
  %465 = fadd double %464, %462
  %466 = fmul double %88, %88
  %467 = fdiv double %466, %82
  %468 = fadd double %313, %467
  %469 = fmul double %124, %159
  %470 = extractelement <2 x double> %418, i64 1
  %471 = fadd double %469, %470
  %472 = fdiv double %471, %422
  %473 = fmul double %468, %159
  %474 = fmul double %473, %427
  %475 = fmul double %465, %179
  %476 = fmul double %475, %432
  %477 = fsub double %474, %476
  %478 = fdiv double %477, %443
  %479 = fmul double %44, %478
  %480 = fmul double %111, %159
  %481 = shufflevector <2 x double> %277, <2 x double> poison, <2 x i32> zeroinitializer
  %482 = fmul <2 x double> %415, %481
  %483 = extractelement <2 x double> %482, i64 0
  %484 = fadd double %480, %483
  %485 = fadd double %159, %174
  %486 = fdiv double %484, %485
  %487 = fmul double %115, %174
  %488 = fdiv double %159, %174
  %489 = fcmp olt double %488, 1.000000e+00
  %490 = select i1 %489, double %488, double 1.000000e+00
  %491 = fmul double %487, %490
  %492 = fdiv double %174, %159
  %493 = fcmp olt double %492, 1.000000e+00
  %494 = select i1 %493, double %492, double 1.000000e+00
  %495 = fmul double %424, %494
  %496 = fsub double %491, %495
  %497 = extractelement <2 x double> %279, i64 0
  %498 = fdiv double %414, %497
  %499 = fcmp olt double %498, 5.000000e-01
  %500 = select i1 %499, double %498, double 5.000000e-01
  %501 = fmul double %497, %500
  %502 = fdiv double %497, %414
  %503 = fcmp olt double %502, 5.000000e-01
  %504 = select i1 %503, double %502, double 5.000000e-01
  %505 = fmul double %414, %504
  %506 = fadd double %501, %505
  %507 = fdiv double %496, %506
  %508 = fmul double %44, %507
  %509 = fsub double %486, %508
  %510 = fmul double %113, %115
  %511 = fdiv double %510, %111
  %512 = fmul double %113, %159
  %513 = fmul double %85, %174
  %514 = fadd double %512, %513
  %515 = fdiv double %514, %485
  %516 = fmul double %511, %174
  %517 = fmul double %516, %490
  %518 = fmul double %453, %494
  %519 = fsub double %517, %518
  %520 = fdiv double %519, %506
  %521 = fmul double %44, %520
  %522 = fsub double %515, %521
  %523 = fmul double %115, %115
  %524 = fdiv double %523, %111
  %525 = fmul double %111, %111
  %526 = fmul double %525, 4.900000e+00
  %527 = fadd double %526, %524
  %528 = fmul double %115, %159
  %529 = extractelement <2 x double> %482, i64 1
  %530 = fadd double %528, %529
  %531 = fdiv double %530, %485
  %532 = fmul double %527, %174
  %533 = fmul double %532, %490
  %534 = fmul double %473, %494
  %535 = fsub double %533, %534
  %536 = fdiv double %535, %506
  %537 = fmul double %44, %536
  %538 = fadd <2 x double> %289, %284
  %539 = insertelement <2 x double> poison, double %95, i64 0
  %540 = insertelement <2 x double> %539, double %309, i64 1
  %541 = fmul <2 x double> %540, %283
  %542 = insertelement <2 x double> poison, double %295, i64 0
  %543 = shufflevector <2 x double> %542, <2 x double> poison, <2 x i32> zeroinitializer
  %544 = fmul <2 x double> %541, %543
  %545 = shufflevector <2 x double> %322, <2 x double> poison, <2 x i32> zeroinitializer
  %546 = fdiv <2 x double> %538, %545
  %547 = fsub <2 x double> %378, %544
  %548 = shufflevector <2 x double> %322, <2 x double> poison, <2 x i32> <i32 1, i32 1>
  %549 = fdiv <2 x double> %547, %548
  %550 = fmul <2 x double> %47, %549
  %551 = fsub <2 x double> %546, %550
  %552 = extractelement <2 x double> %551, i64 0
  %553 = fmul <2 x double> %551, %551
  %554 = extractelement <2 x double> %553, i64 0
  %555 = fmul double %554, 4.900000e+00
  %556 = extractelement <2 x double> %551, i64 1
  %557 = fmul double %556, %556
  %558 = fdiv double %557, %552
  %559 = fadd double %558, %555
  %560 = fmul double %556, %339
  %561 = fdiv double %560, %552
  %562 = fmul double %400, %400
  %563 = fmul double %562, 4.900000e+00
  %564 = fsub double %396, %402
  %565 = fmul double %564, %564
  %566 = fdiv double %565, %400
  %567 = fadd double %566, %563
  %568 = fmul double %564, %412
  %569 = fdiv double %568, %400
  %570 = fsub double %472, %479
  %571 = fmul double %570, %460
  %572 = fdiv double %571, %446
  %573 = fmul double %570, %570
  %574 = fdiv double %573, %446
  %575 = fmul double %446, %446
  %576 = fmul double %575, 4.900000e+00
  %577 = fadd double %574, %576
  %578 = fsub double %531, %537
  %579 = fmul double %578, %522
  %580 = fdiv double %579, %509
  %581 = fmul double %578, %578
  %582 = fdiv double %581, %509
  %583 = fmul double %509, %509
  %584 = fmul double %583, 4.900000e+00
  %585 = fadd double %582, %584
  %586 = shufflevector <2 x double> %551, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %587 = insertelement <2 x double> %586, double %559, i64 1
  br i1 %180, label %588, label %640

588:                                              ; preds = %270
  %589 = fmul <2 x double> %288, %203
  %590 = extractelement <2 x double> %203, i64 1
  %591 = fmul double %590, %590
  %592 = extractelement <2 x double> %203, i64 0
  %593 = fdiv double %591, %592
  %594 = fmul <2 x double> %203, %203
  %595 = extractelement <2 x double> %594, i64 0
  %596 = fmul double %595, 4.900000e+00
  %597 = fadd double %593, %596
  %598 = fadd <2 x double> %284, %589
  %599 = fdiv <2 x double> %598, %545
  %600 = shufflevector <2 x double> %203, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %601 = insertelement <2 x double> %600, double %597, i64 1
  %602 = fmul <2 x double> %283, %601
  %603 = fmul <2 x double> %543, %602
  %604 = fsub <2 x double> %378, %603
  %605 = shufflevector <2 x double> %322, <2 x double> poison, <2 x i32> <i32 1, i32 1>
  %606 = fdiv <2 x double> %604, %605
  %607 = fmul <2 x double> %47, %606
  %608 = fsub <2 x double> %599, %607
  %609 = fmul double %201, %590
  %610 = fdiv double %609, %592
  %611 = fmul double %164, %610
  %612 = insertelement <2 x double> %320, double %295, i64 1
  %613 = insertelement <2 x double> poison, double %201, i64 0
  %614 = insertelement <2 x double> %613, double %611, i64 1
  %615 = fmul <2 x double> %612, %614
  %616 = fadd <2 x double> %326, %615
  %617 = fsub <2 x double> %326, %615
  %618 = shufflevector <2 x double> %616, <2 x double> %617, <2 x i32> <i32 0, i32 3>
  %619 = fdiv <2 x double> %618, %322
  %620 = extractelement <2 x double> %619, i64 1
  %621 = fmul double %44, %620
  %622 = extractelement <2 x double> %619, i64 0
  %623 = fsub double %622, %621
  %624 = extractelement <2 x double> %608, i64 1
  %625 = fmul double %624, %624
  %626 = extractelement <2 x double> %608, i64 0
  %627 = fdiv double %625, %626
  %628 = fmul <2 x double> %608, %608
  %629 = extractelement <2 x double> %628, i64 0
  %630 = fmul double %629, 4.900000e+00
  %631 = fadd double %630, %627
  %632 = shufflevector <2 x double> %608, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %633 = insertelement <2 x double> %632, double %631, i64 1
  %634 = fadd <2 x double> %587, %633
  %635 = fmul <2 x double> %634, <double 5.000000e-01, double 5.000000e-01>
  %636 = fmul double %623, %624
  %637 = fdiv double %636, %626
  %638 = fadd double %561, %637
  %639 = fmul double %638, 5.000000e-01
  br label %640

640:                                              ; preds = %588, %270
  %641 = phi double [ %639, %588 ], [ %561, %270 ]
  %642 = phi <2 x double> [ %608, %588 ], [ zeroinitializer, %270 ]
  %643 = phi <2 x double> [ %635, %588 ], [ %587, %270 ]
  %644 = insertelement <2 x double> poison, double %564, i64 0
  %645 = insertelement <2 x double> %644, double %567, i64 1
  br i1 %204, label %646, label %701

646:                                              ; preds = %640
  %647 = fmul <2 x double> %288, %227
  %648 = extractelement <2 x double> %227, i64 1
  %649 = fmul double %648, %648
  %650 = extractelement <2 x double> %227, i64 0
  %651 = fdiv double %649, %650
  %652 = fmul <2 x double> %227, %227
  %653 = extractelement <2 x double> %652, i64 0
  %654 = fmul double %653, 4.900000e+00
  %655 = fadd double %654, %651
  %656 = fadd <2 x double> %344, %647
  %657 = shufflevector <2 x double> %393, <2 x double> poison, <2 x i32> zeroinitializer
  %658 = fdiv <2 x double> %656, %657
  %659 = shufflevector <2 x double> %227, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %660 = insertelement <2 x double> %659, double %655, i64 1
  %661 = fmul <2 x double> %343, %660
  %662 = insertelement <2 x double> poison, double %350, i64 0
  %663 = shufflevector <2 x double> %662, <2 x double> poison, <2 x i32> zeroinitializer
  %664 = fmul <2 x double> %663, %661
  %665 = fsub <2 x double> %664, %381
  %666 = shufflevector <2 x double> %393, <2 x double> poison, <2 x i32> <i32 1, i32 1>
  %667 = fdiv <2 x double> %665, %666
  %668 = fmul <2 x double> %47, %667
  %669 = fsub <2 x double> %658, %668
  %670 = fmul double %648, %224
  %671 = fdiv double %670, %650
  %672 = fmul double %169, %671
  %673 = insertelement <2 x double> %391, double %350, i64 1
  %674 = insertelement <2 x double> poison, double %224, i64 0
  %675 = insertelement <2 x double> %674, double %672, i64 1
  %676 = fmul <2 x double> %673, %675
  %677 = fadd <2 x double> %676, %404
  %678 = fsub <2 x double> %676, %404
  %679 = shufflevector <2 x double> %677, <2 x double> %678, <2 x i32> <i32 0, i32 3>
  %680 = fdiv <2 x double> %679, %393
  %681 = extractelement <2 x double> %680, i64 1
  %682 = fmul double %44, %681
  %683 = extractelement <2 x double> %680, i64 0
  %684 = fsub double %683, %682
  %685 = extractelement <2 x double> %669, i64 1
  %686 = fmul double %685, %685
  %687 = extractelement <2 x double> %669, i64 0
  %688 = fdiv double %686, %687
  %689 = fmul <2 x double> %669, %669
  %690 = extractelement <2 x double> %689, i64 0
  %691 = fmul double %690, 4.900000e+00
  %692 = fadd double %691, %688
  %693 = shufflevector <2 x double> %669, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %694 = insertelement <2 x double> %693, double %692, i64 1
  %695 = fadd <2 x double> %645, %694
  %696 = fmul <2 x double> %695, <double 5.000000e-01, double 5.000000e-01>
  %697 = fmul double %685, %684
  %698 = fdiv double %697, %687
  %699 = fadd double %569, %698
  %700 = fmul double %699, 5.000000e-01
  br label %701

701:                                              ; preds = %646, %640
  %702 = phi double [ %700, %646 ], [ %569, %640 ]
  %703 = phi <2 x double> [ %669, %646 ], [ zeroinitializer, %640 ]
  %704 = phi <2 x double> [ %696, %646 ], [ %645, %640 ]
  %705 = insertelement <2 x double> poison, double %570, i64 0
  %706 = insertelement <2 x double> %705, double %572, i64 1
  br i1 %228, label %707, label %796

707:                                              ; preds = %701
  %708 = fmul <2 x double> %288, %251
  %709 = insertelement <2 x double> poison, double %88, i64 0
  %710 = insertelement <2 x double> %709, double %468, i64 1
  %711 = fmul <2 x double> %710, %288
  %712 = shufflevector <2 x double> %279, <2 x double> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>
  %713 = insertelement <4 x double> %712, double %413, i64 1
  %714 = insertelement <4 x double> %713, double %156, i64 2
  %715 = insertelement <4 x double> %714, double %179, i64 3
  %716 = shufflevector <2 x double> %279, <2 x double> poison, <4 x i32> <i32 poison, i32 1, i32 poison, i32 poison>
  %717 = shufflevector <4 x double> %716, <4 x double> %715, <4 x i32> <i32 5, i32 1, i32 7, i32 6>
  %718 = fdiv <4 x double> %715, %717
  %719 = fcmp olt <4 x double> %718, <double 5.000000e-01, double 5.000000e-01, double 1.000000e+00, double 1.000000e+00>
  %720 = extractelement <4 x i1> %719, i64 3
  %721 = extractelement <4 x double> %718, i64 3
  %722 = select i1 %720, double %721, double 1.000000e+00
  %723 = extractelement <4 x i1> %719, i64 2
  %724 = extractelement <4 x double> %718, i64 2
  %725 = select i1 %723, double %724, double 1.000000e+00
  %726 = extractelement <4 x i1> %719, i64 1
  %727 = extractelement <4 x double> %718, i64 1
  %728 = select i1 %726, double %727, double 5.000000e-01
  %729 = fmul double %296, %728
  %730 = extractelement <4 x i1> %719, i64 0
  %731 = extractelement <4 x double> %718, i64 0
  %732 = select i1 %730, double %731, double 5.000000e-01
  %733 = fmul double %413, %732
  %734 = extractelement <2 x double> %251, i64 1
  %735 = fmul double %248, %734
  %736 = extractelement <2 x double> %251, i64 0
  %737 = fdiv double %735, %736
  %738 = fmul double %179, %737
  %739 = fmul double %725, %738
  %740 = insertelement <2 x double> %287, double %729, i64 1
  %741 = insertelement <2 x double> %416, double %733, i64 1
  %742 = fadd <2 x double> %740, %741
  %743 = insertelement <2 x double> %740, double %319, i64 1
  %744 = insertelement <2 x double> poison, double %248, i64 0
  %745 = insertelement <2 x double> %744, double %722, i64 1
  %746 = fmul <2 x double> %743, %745
  %747 = insertelement <2 x double> poison, double %449, i64 0
  %748 = insertelement <2 x double> %747, double %739, i64 1
  %749 = fadd <2 x double> %746, %748
  %750 = fsub <2 x double> %746, %748
  %751 = shufflevector <2 x double> %749, <2 x double> %750, <2 x i32> <i32 0, i32 3>
  %752 = fdiv <2 x double> %751, %742
  %753 = extractelement <2 x double> %752, i64 1
  %754 = fmul double %44, %753
  %755 = extractelement <2 x double> %752, i64 0
  %756 = fsub double %755, %754
  %757 = fmul double %734, %734
  %758 = fdiv double %757, %736
  %759 = fmul <2 x double> %251, %251
  %760 = extractelement <2 x double> %759, i64 0
  %761 = fmul double %760, 4.900000e+00
  %762 = fadd double %761, %758
  %763 = fadd <2 x double> %418, %708
  %764 = shufflevector <2 x double> %742, <2 x double> poison, <2 x i32> zeroinitializer
  %765 = fdiv <2 x double> %763, %764
  %766 = insertelement <2 x double> poison, double %722, i64 0
  %767 = shufflevector <2 x double> %766, <2 x double> poison, <2 x i32> zeroinitializer
  %768 = fmul <2 x double> %711, %767
  %769 = shufflevector <2 x double> %251, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %770 = insertelement <2 x double> %769, double %762, i64 1
  %771 = fmul <2 x double> %417, %770
  %772 = insertelement <2 x double> poison, double %725, i64 0
  %773 = shufflevector <2 x double> %772, <2 x double> poison, <2 x i32> zeroinitializer
  %774 = fmul <2 x double> %773, %771
  %775 = fsub <2 x double> %768, %774
  %776 = shufflevector <2 x double> %742, <2 x double> poison, <2 x i32> <i32 1, i32 1>
  %777 = fdiv <2 x double> %775, %776
  %778 = fmul <2 x double> %47, %777
  %779 = fsub <2 x double> %765, %778
  %780 = extractelement <2 x double> %779, i64 1
  %781 = fmul double %756, %780
  %782 = extractelement <2 x double> %779, i64 0
  %783 = fdiv double %781, %782
  %784 = shufflevector <2 x double> %779, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %785 = insertelement <2 x double> %784, double %783, i64 1
  %786 = fadd <2 x double> %706, %785
  %787 = fmul <2 x double> %786, <double 5.000000e-01, double 5.000000e-01>
  %788 = fmul double %780, %780
  %789 = fdiv double %788, %782
  %790 = fmul <2 x double> %779, %779
  %791 = extractelement <2 x double> %790, i64 0
  %792 = fmul double %791, 4.900000e+00
  %793 = fadd double %792, %789
  %794 = fadd double %577, %793
  %795 = fmul double %794, 5.000000e-01
  br label %796

796:                                              ; preds = %707, %701
  %797 = phi double [ %795, %707 ], [ %577, %701 ]
  %798 = phi <2 x double> [ %779, %707 ], [ zeroinitializer, %701 ]
  %799 = phi <2 x double> [ %787, %707 ], [ %706, %701 ]
  %800 = insertelement <2 x double> poison, double %578, i64 0
  %801 = insertelement <2 x double> %800, double %580, i64 1
  br i1 %252, label %802, label %889

802:                                              ; preds = %796
  %803 = fmul <2 x double> %288, %275
  %804 = shufflevector <2 x double> %279, <2 x double> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %805 = insertelement <4 x double> %804, double %174, i64 2
  %806 = insertelement <4 x double> %805, double %156, i64 3
  %807 = shufflevector <4 x double> %806, <4 x double> poison, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  %808 = fdiv <4 x double> %806, %807
  %809 = insertelement <2 x double> poison, double %88, i64 0
  %810 = insertelement <2 x double> %809, double %468, i64 1
  %811 = fmul <2 x double> %810, %288
  %812 = fcmp olt <4 x double> %808, <double 5.000000e-01, double 5.000000e-01, double 1.000000e+00, double 1.000000e+00>
  %813 = extractelement <4 x i1> %812, i64 3
  %814 = extractelement <4 x double> %808, i64 3
  %815 = select i1 %813, double %814, double 1.000000e+00
  %816 = extractelement <4 x i1> %812, i64 2
  %817 = extractelement <4 x double> %808, i64 2
  %818 = select i1 %816, double %817, double 1.000000e+00
  %819 = extractelement <4 x i1> %812, i64 1
  %820 = extractelement <4 x double> %808, i64 1
  %821 = select i1 %819, double %820, double 5.000000e-01
  %822 = fmul double %497, %821
  %823 = extractelement <4 x i1> %812, i64 0
  %824 = extractelement <4 x double> %808, i64 0
  %825 = select i1 %823, double %824, double 5.000000e-01
  %826 = fmul double %296, %825
  %827 = extractelement <2 x double> %275, i64 1
  %828 = fmul double %272, %827
  %829 = extractelement <2 x double> %275, i64 0
  %830 = fdiv double %828, %829
  %831 = fmul double %174, %830
  %832 = fmul double %319, %818
  %833 = insertelement <2 x double> %287, double %822, i64 1
  %834 = insertelement <2 x double> %277, double %826, i64 1
  %835 = fadd <2 x double> %833, %834
  %836 = insertelement <2 x double> %833, double %815, i64 1
  %837 = insertelement <2 x double> poison, double %272, i64 0
  %838 = insertelement <2 x double> %837, double %831, i64 1
  %839 = fmul <2 x double> %836, %838
  %840 = insertelement <2 x double> poison, double %513, i64 0
  %841 = insertelement <2 x double> %840, double %832, i64 1
  %842 = fadd <2 x double> %839, %841
  %843 = fsub <2 x double> %839, %841
  %844 = shufflevector <2 x double> %842, <2 x double> %843, <2 x i32> <i32 0, i32 3>
  %845 = fdiv <2 x double> %844, %835
  %846 = extractelement <2 x double> %845, i64 1
  %847 = fmul double %44, %846
  %848 = extractelement <2 x double> %845, i64 0
  %849 = fsub double %848, %847
  %850 = fmul double %827, %827
  %851 = fdiv double %850, %829
  %852 = fmul <2 x double> %275, %275
  %853 = extractelement <2 x double> %852, i64 0
  %854 = fmul double %853, 4.900000e+00
  %855 = fadd double %854, %851
  %856 = fadd <2 x double> %482, %803
  %857 = shufflevector <2 x double> %835, <2 x double> poison, <2 x i32> zeroinitializer
  %858 = fdiv <2 x double> %856, %857
  %859 = shufflevector <2 x double> %275, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %860 = insertelement <2 x double> %859, double %855, i64 1
  %861 = fmul <2 x double> %481, %860
  %862 = insertelement <2 x double> poison, double %815, i64 0
  %863 = shufflevector <2 x double> %862, <2 x double> poison, <2 x i32> zeroinitializer
  %864 = fmul <2 x double> %863, %861
  %865 = insertelement <2 x double> poison, double %818, i64 0
  %866 = shufflevector <2 x double> %865, <2 x double> poison, <2 x i32> zeroinitializer
  %867 = fmul <2 x double> %811, %866
  %868 = fsub <2 x double> %864, %867
  %869 = shufflevector <2 x double> %835, <2 x double> poison, <2 x i32> <i32 1, i32 1>
  %870 = fdiv <2 x double> %868, %869
  %871 = fmul <2 x double> %47, %870
  %872 = fsub <2 x double> %858, %871
  %873 = extractelement <2 x double> %872, i64 1
  %874 = fmul double %849, %873
  %875 = extractelement <2 x double> %872, i64 0
  %876 = fdiv double %874, %875
  %877 = shufflevector <2 x double> %872, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %878 = insertelement <2 x double> %877, double %876, i64 1
  %879 = fadd <2 x double> %801, %878
  %880 = fmul <2 x double> %879, <double 5.000000e-01, double 5.000000e-01>
  %881 = fmul double %873, %873
  %882 = fdiv double %881, %875
  %883 = fmul <2 x double> %872, %872
  %884 = extractelement <2 x double> %883, i64 0
  %885 = fmul double %884, 4.900000e+00
  %886 = fadd double %885, %882
  %887 = fadd double %585, %886
  %888 = fmul double %887, 5.000000e-01
  br label %889

889:                                              ; preds = %802, %796
  %890 = phi double [ %888, %802 ], [ %585, %796 ]
  %891 = phi <2 x double> [ %872, %802 ], [ zeroinitializer, %796 ]
  %892 = phi <2 x double> [ %880, %802 ], [ %801, %796 ]
  %893 = getelementptr inbounds i32, ptr %25, i64 %133
  %894 = load i32, ptr %893, align 4, !tbaa !68
  %895 = icmp slt i32 %161, %894
  br i1 %895, label %896, label %908

896:                                              ; preds = %889
  %897 = getelementptr inbounds i32, ptr %23, i64 %133
  %898 = load i32, ptr %897, align 4, !tbaa !68
  %899 = sext i32 %898 to i64
  %900 = getelementptr inbounds double, ptr %80, i64 %899
  %901 = load double, ptr %900, align 8, !tbaa !171
  %902 = fadd double %135, %901
  %903 = fmul double %902, 5.000000e-01
  %904 = getelementptr inbounds double, ptr %83, i64 %899
  %905 = load double, ptr %904, align 8, !tbaa !171
  %906 = fadd double %137, %905
  %907 = fmul double %906, 5.000000e-01
  br label %908

908:                                              ; preds = %896, %889
  %909 = phi double [ %907, %896 ], [ %137, %889 ]
  %910 = phi double [ %903, %896 ], [ %135, %889 ]
  %911 = extractelement <2 x double> %227, i64 0
  %912 = fadd double %102, %911
  %913 = fmul double %912, 5.000000e-01
  %914 = extractelement <2 x double> %227, i64 1
  %915 = fadd double %104, %914
  %916 = fmul double %915, 5.000000e-01
  %917 = select i1 %204, double %913, double %102
  %918 = select i1 %204, double %916, double %104
  %919 = extractelement <2 x double> %322, i64 0
  %920 = fmul double %919, 5.000000e-01
  %921 = fdiv double %556, %552
  %922 = call double @llvm.fabs.f64(double %921)
  %923 = fmul double %552, 9.800000e+00
  %924 = call double @sqrt(double noundef %923) #59
  %925 = fadd double %922, %924
  %926 = fsub double %82, %93
  %927 = fsub double %93, %910
  %928 = fsub double %917, %82
  %929 = fmul double %925, 5.000000e-01
  %930 = fmul double %929, %1
  %931 = fdiv double %930, %920
  %932 = fsub double 1.000000e+00, %931
  %933 = fmul double %931, %932
  %934 = fmul double %926, %926
  %935 = fcmp olt double %934, 1.000000e-30
  %936 = fdiv double 1.000000e+00, %934
  %937 = select i1 %935, double 0x46293E5939A08CE9, double %936
  %938 = fmul double %926, %928
  %939 = fmul double %937, %938
  %940 = fmul double %926, %927
  %941 = fmul double %937, %940
  %942 = fmul double %933, 5.000000e-01
  %943 = fcmp olt double %939, 1.000000e+00
  %944 = select i1 %943, double %939, double 1.000000e+00
  %945 = fcmp olt double %941, %944
  %946 = select i1 %945, double %941, double %944
  %947 = fcmp olt double %946, 0.000000e+00
  %948 = fsub double 1.000000e+00, %946
  %949 = select i1 %947, double 1.000000e+00, double %948
  %950 = fmul double %949, %942
  %951 = fmul double %926, %950
  %952 = load i32, ptr %160, align 4, !tbaa !68
  %953 = icmp slt i32 %71, %952
  br i1 %953, label %954, label %1009

954:                                              ; preds = %908
  %955 = sext i32 %126 to i64
  %956 = getelementptr inbounds i32, ptr %25, i64 %955
  %957 = load i32, ptr %956, align 4, !tbaa !68
  %958 = sext i32 %202 to i64
  %959 = getelementptr inbounds i32, ptr %25, i64 %958
  %960 = load i32, ptr %959, align 4, !tbaa !68
  %961 = icmp slt i32 %957, %960
  br i1 %961, label %962, label %971

962:                                              ; preds = %954
  %963 = load ptr, ptr %41, align 8, !tbaa !566
  %964 = getelementptr inbounds i32, ptr %23, i64 %958
  %965 = load i32, ptr %964, align 4, !tbaa !68
  %966 = sext i32 %965 to i64
  %967 = getelementptr inbounds double, ptr %963, i64 %966
  %968 = load double, ptr %967, align 8, !tbaa !171
  %969 = fadd double %200, %968
  %970 = fmul double %969, 5.000000e-01
  br label %971

971:                                              ; preds = %962, %954
  %972 = phi double [ %970, %962 ], [ %200, %954 ]
  %973 = extractelement <2 x double> %642, i64 0
  %974 = extractelement <2 x double> %642, i64 1
  %975 = fdiv double %974, %973
  %976 = call double @llvm.fabs.f64(double %975)
  %977 = fmul double %973, 9.800000e+00
  %978 = call double @sqrt(double noundef %977) #59
  %979 = fadd double %976, %978
  %980 = extractelement <2 x double> %203, i64 0
  %981 = fsub double %82, %980
  %982 = fsub double %980, %972
  %983 = fmul double %979, 5.000000e-01
  %984 = fmul double %983, %1
  %985 = fdiv double %984, %920
  %986 = fsub double 1.000000e+00, %985
  %987 = fmul double %985, %986
  %988 = fmul double %981, %981
  %989 = fcmp olt double %988, 1.000000e-30
  %990 = fdiv double 1.000000e+00, %988
  %991 = select i1 %989, double 0x46293E5939A08CE9, double %990
  %992 = fmul double %981, %928
  %993 = fmul double %991, %992
  %994 = fmul double %981, %982
  %995 = fmul double %991, %994
  %996 = fmul double %987, 5.000000e-01
  %997 = fcmp olt double %993, 1.000000e+00
  %998 = select i1 %997, double %993, double 1.000000e+00
  %999 = fcmp olt double %995, %998
  %1000 = select i1 %999, double %995, double %998
  %1001 = fcmp olt double %1000, 0.000000e+00
  %1002 = fsub double 1.000000e+00, %1000
  %1003 = select i1 %1001, double 1.000000e+00, double %1002
  %1004 = fmul double %1003, %996
  %1005 = fmul double %981, %1004
  %1006 = fadd double %951, %1005
  %1007 = fmul double %1006, 5.000000e-01
  %1008 = fmul double %1007, 5.000000e-01
  br label %1009

1009:                                             ; preds = %971, %908
  %1010 = phi double [ %1008, %971 ], [ %951, %908 ]
  %1011 = load i32, ptr %165, align 4, !tbaa !68
  %1012 = getelementptr inbounds i32, ptr %25, i64 %138
  %1013 = load i32, ptr %1012, align 4, !tbaa !68
  %1014 = icmp slt i32 %1011, %1013
  br i1 %1014, label %1015, label %1029

1015:                                             ; preds = %1009
  %1016 = load ptr, ptr %41, align 8, !tbaa !566
  %1017 = getelementptr inbounds i32, ptr %23, i64 %138
  %1018 = load i32, ptr %1017, align 4, !tbaa !68
  %1019 = sext i32 %1018 to i64
  %1020 = getelementptr inbounds double, ptr %1016, i64 %1019
  %1021 = load double, ptr %1020, align 8, !tbaa !171
  %1022 = fadd double %140, %1021
  %1023 = fmul double %1022, 5.000000e-01
  %1024 = load ptr, ptr %42, align 8, !tbaa !817
  %1025 = getelementptr inbounds double, ptr %1024, i64 %1019
  %1026 = load double, ptr %1025, align 8, !tbaa !171
  %1027 = fadd double %142, %1026
  %1028 = fmul double %1027, 5.000000e-01
  br label %1029

1029:                                             ; preds = %1015, %1009
  %1030 = phi double [ %1028, %1015 ], [ %142, %1009 ]
  %1031 = phi double [ %1023, %1015 ], [ %140, %1009 ]
  %1032 = load i32, ptr %160, align 4, !tbaa !68
  %1033 = icmp slt i32 %71, %1032
  %1034 = extractelement <2 x double> %203, i64 0
  %1035 = fadd double %93, %1034
  %1036 = fmul double %1035, 5.000000e-01
  %1037 = extractelement <2 x double> %203, i64 1
  %1038 = fadd double %95, %1037
  %1039 = fmul double %1038, 5.000000e-01
  %1040 = select i1 %1033, double %1036, double %93
  %1041 = select i1 %1033, double %1039, double %95
  %1042 = fmul double %394, 5.000000e-01
  %1043 = fdiv double %564, %400
  %1044 = call double @llvm.fabs.f64(double %1043)
  %1045 = fmul double %400, 9.800000e+00
  %1046 = call double @sqrt(double noundef %1045) #59
  %1047 = fadd double %1044, %1046
  %1048 = fsub double %102, %82
  %1049 = fsub double %82, %1040
  %1050 = fsub double %1031, %102
  %1051 = fmul double %1047, 5.000000e-01
  %1052 = fmul double %1051, %1
  %1053 = fdiv double %1052, %1042
  %1054 = fsub double 1.000000e+00, %1053
  %1055 = fmul double %1053, %1054
  %1056 = fmul double %1048, %1048
  %1057 = fcmp olt double %1056, 1.000000e-30
  %1058 = fdiv double 1.000000e+00, %1056
  %1059 = select i1 %1057, double 0x46293E5939A08CE9, double %1058
  %1060 = fmul double %1048, %1050
  %1061 = fmul double %1059, %1060
  %1062 = fmul double %1048, %1049
  %1063 = fmul double %1059, %1062
  %1064 = fmul double %1055, 5.000000e-01
  %1065 = fcmp olt double %1061, 1.000000e+00
  %1066 = select i1 %1065, double %1061, double 1.000000e+00
  %1067 = fcmp olt double %1063, %1066
  %1068 = select i1 %1067, double %1063, double %1066
  %1069 = fcmp olt double %1068, 0.000000e+00
  %1070 = fsub double 1.000000e+00, %1068
  %1071 = select i1 %1069, double 1.000000e+00, double %1070
  %1072 = fmul double %1064, %1071
  %1073 = fmul double %1048, %1072
  %1074 = load i32, ptr %165, align 4, !tbaa !68
  %1075 = icmp slt i32 %71, %1074
  br i1 %1075, label %1076, label %1130

1076:                                             ; preds = %1029
  %1077 = sext i32 %128 to i64
  %1078 = getelementptr inbounds i32, ptr %25, i64 %1077
  %1079 = load i32, ptr %1078, align 4, !tbaa !68
  %1080 = sext i32 %223 to i64
  %1081 = getelementptr inbounds i32, ptr %25, i64 %1080
  %1082 = load i32, ptr %1081, align 4, !tbaa !68
  %1083 = icmp slt i32 %1079, %1082
  br i1 %1083, label %1084, label %1093

1084:                                             ; preds = %1076
  %1085 = load ptr, ptr %41, align 8, !tbaa !566
  %1086 = getelementptr inbounds i32, ptr %23, i64 %1080
  %1087 = load i32, ptr %1086, align 4, !tbaa !68
  %1088 = sext i32 %1087 to i64
  %1089 = getelementptr inbounds double, ptr %1085, i64 %1088
  %1090 = load double, ptr %1089, align 8, !tbaa !171
  %1091 = fadd double %225, %1090
  %1092 = fmul double %1091, 5.000000e-01
  br label %1093

1093:                                             ; preds = %1084, %1076
  %1094 = phi double [ %1092, %1084 ], [ %225, %1076 ]
  %1095 = extractelement <2 x double> %703, i64 0
  %1096 = extractelement <2 x double> %703, i64 1
  %1097 = fdiv double %1096, %1095
  %1098 = call double @llvm.fabs.f64(double %1097)
  %1099 = fmul double %1095, 9.800000e+00
  %1100 = call double @sqrt(double noundef %1099) #59
  %1101 = fadd double %1098, %1100
  %1102 = fsub double %911, %82
  %1103 = fsub double %1094, %911
  %1104 = fmul double %1101, 5.000000e-01
  %1105 = fmul double %1104, %1
  %1106 = fdiv double %1105, %1042
  %1107 = fsub double 1.000000e+00, %1106
  %1108 = fmul double %1106, %1107
  %1109 = fmul double %1102, %1102
  %1110 = fcmp olt double %1109, 1.000000e-30
  %1111 = fdiv double 1.000000e+00, %1109
  %1112 = select i1 %1110, double 0x46293E5939A08CE9, double %1111
  %1113 = fmul double %1102, %1103
  %1114 = fmul double %1112, %1113
  %1115 = fmul double %1102, %1049
  %1116 = fmul double %1112, %1115
  %1117 = fmul double %1108, 5.000000e-01
  %1118 = fcmp olt double %1114, 1.000000e+00
  %1119 = select i1 %1118, double %1114, double 1.000000e+00
  %1120 = fcmp olt double %1116, %1119
  %1121 = select i1 %1120, double %1116, double %1119
  %1122 = fcmp olt double %1121, 0.000000e+00
  %1123 = fsub double 1.000000e+00, %1121
  %1124 = select i1 %1122, double 1.000000e+00, double %1123
  %1125 = fmul double %1117, %1124
  %1126 = fmul double %1102, %1125
  %1127 = fadd double %1073, %1126
  %1128 = fmul double %1127, 5.000000e-01
  %1129 = fmul double %1128, 5.000000e-01
  br label %1130

1130:                                             ; preds = %1093, %1029
  %1131 = phi double [ %1129, %1093 ], [ %1073, %1029 ]
  %1132 = call double @sqrt(double noundef %923) #59
  %1133 = fadd double %922, %1132
  %1134 = fsub double %85, %95
  %1135 = fsub double %95, %909
  %1136 = fsub double %918, %85
  %1137 = fmul double %1133, 5.000000e-01
  %1138 = fmul double %1137, %1
  %1139 = fdiv double %1138, %920
  %1140 = fsub double 1.000000e+00, %1139
  %1141 = fmul double %1139, %1140
  %1142 = fmul double %1134, %1134
  %1143 = fcmp olt double %1142, 1.000000e-30
  %1144 = fdiv double 1.000000e+00, %1142
  %1145 = select i1 %1143, double 0x46293E5939A08CE9, double %1144
  %1146 = fmul double %1134, %1136
  %1147 = fmul double %1145, %1146
  %1148 = fmul double %1134, %1135
  %1149 = fmul double %1145, %1148
  %1150 = fmul double %1141, 5.000000e-01
  %1151 = fcmp olt double %1147, 1.000000e+00
  %1152 = select i1 %1151, double %1147, double 1.000000e+00
  %1153 = fcmp olt double %1149, %1152
  %1154 = select i1 %1153, double %1149, double %1152
  %1155 = fcmp olt double %1154, 0.000000e+00
  %1156 = fsub double 1.000000e+00, %1154
  %1157 = select i1 %1155, double 1.000000e+00, double %1156
  %1158 = fmul double %1157, %1150
  %1159 = fmul double %1134, %1158
  %1160 = load i32, ptr %160, align 4, !tbaa !68
  %1161 = icmp slt i32 %71, %1160
  br i1 %1161, label %1162, label %1216

1162:                                             ; preds = %1130
  %1163 = sext i32 %126 to i64
  %1164 = getelementptr inbounds i32, ptr %25, i64 %1163
  %1165 = load i32, ptr %1164, align 4, !tbaa !68
  %1166 = sext i32 %202 to i64
  %1167 = getelementptr inbounds i32, ptr %25, i64 %1166
  %1168 = load i32, ptr %1167, align 4, !tbaa !68
  %1169 = icmp slt i32 %1165, %1168
  br i1 %1169, label %1170, label %1179

1170:                                             ; preds = %1162
  %1171 = load ptr, ptr %42, align 8, !tbaa !817
  %1172 = getelementptr inbounds i32, ptr %23, i64 %1166
  %1173 = load i32, ptr %1172, align 4, !tbaa !68
  %1174 = sext i32 %1173 to i64
  %1175 = getelementptr inbounds double, ptr %1171, i64 %1174
  %1176 = load double, ptr %1175, align 8, !tbaa !171
  %1177 = fadd double %199, %1176
  %1178 = fmul double %1177, 5.000000e-01
  br label %1179

1179:                                             ; preds = %1170, %1162
  %1180 = phi double [ %1178, %1170 ], [ %199, %1162 ]
  %1181 = extractelement <2 x double> %642, i64 0
  %1182 = extractelement <2 x double> %642, i64 1
  %1183 = fdiv double %1182, %1181
  %1184 = call double @llvm.fabs.f64(double %1183)
  %1185 = fmul double %1181, 9.800000e+00
  %1186 = call double @sqrt(double noundef %1185) #59
  %1187 = fadd double %1184, %1186
  %1188 = fsub double %85, %1037
  %1189 = fsub double %1037, %1180
  %1190 = fmul double %1187, 5.000000e-01
  %1191 = fmul double %1190, %1
  %1192 = fdiv double %1191, %920
  %1193 = fsub double 1.000000e+00, %1192
  %1194 = fmul double %1192, %1193
  %1195 = fmul double %1188, %1188
  %1196 = fcmp olt double %1195, 1.000000e-30
  %1197 = fdiv double 1.000000e+00, %1195
  %1198 = select i1 %1196, double 0x46293E5939A08CE9, double %1197
  %1199 = fmul double %1188, %1136
  %1200 = fmul double %1198, %1199
  %1201 = fmul double %1188, %1189
  %1202 = fmul double %1198, %1201
  %1203 = fmul double %1194, 5.000000e-01
  %1204 = fcmp olt double %1200, 1.000000e+00
  %1205 = select i1 %1204, double %1200, double 1.000000e+00
  %1206 = fcmp olt double %1202, %1205
  %1207 = select i1 %1206, double %1202, double %1205
  %1208 = fcmp olt double %1207, 0.000000e+00
  %1209 = fsub double 1.000000e+00, %1207
  %1210 = select i1 %1208, double 1.000000e+00, double %1209
  %1211 = fmul double %1210, %1203
  %1212 = fmul double %1188, %1211
  %1213 = fadd double %1159, %1212
  %1214 = fmul double %1213, 5.000000e-01
  %1215 = fmul double %1214, 5.000000e-01
  br label %1216

1216:                                             ; preds = %1179, %1130
  %1217 = phi double [ %1215, %1179 ], [ %1159, %1130 ]
  %1218 = call double @sqrt(double noundef %1045) #59
  %1219 = fadd double %1044, %1218
  %1220 = fsub double %104, %85
  %1221 = fsub double %85, %1041
  %1222 = fsub double %1030, %104
  %1223 = fmul double %1219, 5.000000e-01
  %1224 = fmul double %1223, %1
  %1225 = fdiv double %1224, %1042
  %1226 = fsub double 1.000000e+00, %1225
  %1227 = fmul double %1225, %1226
  %1228 = fmul double %1220, %1220
  %1229 = fcmp olt double %1228, 1.000000e-30
  %1230 = fdiv double 1.000000e+00, %1228
  %1231 = select i1 %1229, double 0x46293E5939A08CE9, double %1230
  %1232 = fmul double %1220, %1222
  %1233 = fmul double %1231, %1232
  %1234 = fmul double %1220, %1221
  %1235 = fmul double %1231, %1234
  %1236 = fmul double %1227, 5.000000e-01
  %1237 = fcmp olt double %1233, 1.000000e+00
  %1238 = select i1 %1237, double %1233, double 1.000000e+00
  %1239 = fcmp olt double %1235, %1238
  %1240 = select i1 %1239, double %1235, double %1238
  %1241 = fcmp olt double %1240, 0.000000e+00
  %1242 = fsub double 1.000000e+00, %1240
  %1243 = select i1 %1241, double 1.000000e+00, double %1242
  %1244 = fmul double %1243, %1236
  %1245 = fmul double %1220, %1244
  %1246 = load i32, ptr %165, align 4, !tbaa !68
  %1247 = icmp slt i32 %71, %1246
  br i1 %1247, label %1248, label %1302

1248:                                             ; preds = %1216
  %1249 = sext i32 %128 to i64
  %1250 = getelementptr inbounds i32, ptr %25, i64 %1249
  %1251 = load i32, ptr %1250, align 4, !tbaa !68
  %1252 = sext i32 %223 to i64
  %1253 = getelementptr inbounds i32, ptr %25, i64 %1252
  %1254 = load i32, ptr %1253, align 4, !tbaa !68
  %1255 = icmp slt i32 %1251, %1254
  br i1 %1255, label %1256, label %1265

1256:                                             ; preds = %1248
  %1257 = load ptr, ptr %42, align 8, !tbaa !817
  %1258 = getelementptr inbounds i32, ptr %23, i64 %1252
  %1259 = load i32, ptr %1258, align 4, !tbaa !68
  %1260 = sext i32 %1259 to i64
  %1261 = getelementptr inbounds double, ptr %1257, i64 %1260
  %1262 = load double, ptr %1261, align 8, !tbaa !171
  %1263 = fadd double %226, %1262
  %1264 = fmul double %1263, 5.000000e-01
  br label %1265

1265:                                             ; preds = %1256, %1248
  %1266 = phi double [ %1264, %1256 ], [ %226, %1248 ]
  %1267 = extractelement <2 x double> %703, i64 0
  %1268 = extractelement <2 x double> %703, i64 1
  %1269 = fdiv double %1268, %1267
  %1270 = call double @llvm.fabs.f64(double %1269)
  %1271 = fmul double %1267, 9.800000e+00
  %1272 = call double @sqrt(double noundef %1271) #59
  %1273 = fadd double %1270, %1272
  %1274 = fsub double %914, %85
  %1275 = fsub double %1266, %914
  %1276 = fmul double %1273, 5.000000e-01
  %1277 = fmul double %1276, %1
  %1278 = fdiv double %1277, %1042
  %1279 = fsub double 1.000000e+00, %1278
  %1280 = fmul double %1278, %1279
  %1281 = fmul double %1274, %1274
  %1282 = fcmp olt double %1281, 1.000000e-30
  %1283 = fdiv double 1.000000e+00, %1281
  %1284 = select i1 %1282, double 0x46293E5939A08CE9, double %1283
  %1285 = fmul double %1274, %1275
  %1286 = fmul double %1284, %1285
  %1287 = fmul double %1274, %1221
  %1288 = fmul double %1284, %1287
  %1289 = fmul double %1280, 5.000000e-01
  %1290 = fcmp olt double %1286, 1.000000e+00
  %1291 = select i1 %1290, double %1286, double 1.000000e+00
  %1292 = fcmp olt double %1288, %1291
  %1293 = select i1 %1292, double %1288, double %1291
  %1294 = fcmp olt double %1293, 0.000000e+00
  %1295 = fsub double 1.000000e+00, %1293
  %1296 = select i1 %1294, double 1.000000e+00, double %1295
  %1297 = fmul double %1289, %1296
  %1298 = fmul double %1274, %1297
  %1299 = fadd double %1245, %1298
  %1300 = fmul double %1299, 5.000000e-01
  %1301 = fmul double %1300, 5.000000e-01
  br label %1302

1302:                                             ; preds = %1265, %1216
  %1303 = phi double [ %1301, %1265 ], [ %1245, %1216 ]
  %1304 = load i32, ptr %175, align 4, !tbaa !68
  %1305 = getelementptr inbounds i32, ptr %25, i64 %148
  %1306 = load i32, ptr %1305, align 4, !tbaa !68
  %1307 = icmp slt i32 %1304, %1306
  br i1 %1307, label %1308, label %1322

1308:                                             ; preds = %1302
  %1309 = load ptr, ptr %41, align 8, !tbaa !566
  %1310 = getelementptr inbounds i32, ptr %19, i64 %148
  %1311 = load i32, ptr %1310, align 4, !tbaa !68
  %1312 = sext i32 %1311 to i64
  %1313 = getelementptr inbounds double, ptr %1309, i64 %1312
  %1314 = load double, ptr %1313, align 8, !tbaa !171
  %1315 = fadd double %150, %1314
  %1316 = fmul double %1315, 5.000000e-01
  %1317 = load ptr, ptr %43, align 8, !tbaa !818
  %1318 = getelementptr inbounds double, ptr %1317, i64 %1312
  %1319 = load double, ptr %1318, align 8, !tbaa !171
  %1320 = fadd double %152, %1319
  %1321 = fmul double %1320, 5.000000e-01
  br label %1322

1322:                                             ; preds = %1308, %1302
  %1323 = phi double [ %1321, %1308 ], [ %152, %1302 ]
  %1324 = phi double [ %1316, %1308 ], [ %150, %1302 ]
  %1325 = load i32, ptr %170, align 4, !tbaa !68
  %1326 = icmp slt i32 %71, %1325
  %1327 = extractelement <2 x double> %275, i64 0
  %1328 = fadd double %111, %1327
  %1329 = fmul double %1328, 5.000000e-01
  %1330 = extractelement <2 x double> %275, i64 1
  %1331 = fadd double %115, %1330
  %1332 = fmul double %1331, 5.000000e-01
  %1333 = select i1 %1326, double %1329, double %111
  %1334 = select i1 %1326, double %1332, double %115
  %1335 = fdiv double %570, %446
  %1336 = call double @llvm.fabs.f64(double %1335)
  %1337 = fmul double %446, 9.800000e+00
  %1338 = call double @sqrt(double noundef %1337) #59
  %1339 = fsub double %82, %120
  %1340 = fsub double %120, %1324
  %1341 = fsub double %1333, %82
  %1342 = insertelement <2 x double> poison, double %1336, i64 0
  %1343 = insertelement <2 x double> %1342, double %156, i64 1
  %1344 = insertelement <2 x double> poison, double %1338, i64 0
  %1345 = insertelement <2 x double> %1344, double %179, i64 1
  %1346 = fadd <2 x double> %1343, %1345
  %1347 = fmul <2 x double> %1346, <double 5.000000e-01, double 5.000000e-01>
  %1348 = extractelement <2 x double> %1347, i64 0
  %1349 = fmul double %1348, %1
  %1350 = extractelement <2 x double> %1347, i64 1
  %1351 = fdiv double %1349, %1350
  %1352 = fsub double 1.000000e+00, %1351
  %1353 = fmul double %1351, %1352
  %1354 = fmul double %1339, %1339
  %1355 = fcmp olt double %1354, 1.000000e-30
  %1356 = fdiv double 1.000000e+00, %1354
  %1357 = select i1 %1355, double 0x46293E5939A08CE9, double %1356
  %1358 = fmul double %1339, %1341
  %1359 = fmul double %1357, %1358
  %1360 = fmul double %1339, %1340
  %1361 = fmul double %1357, %1360
  %1362 = fmul double %1353, 5.000000e-01
  %1363 = fcmp olt double %1359, 1.000000e+00
  %1364 = select i1 %1363, double %1359, double 1.000000e+00
  %1365 = fcmp olt double %1361, %1364
  %1366 = select i1 %1365, double %1361, double %1364
  %1367 = fcmp olt double %1366, 0.000000e+00
  %1368 = fsub double 1.000000e+00, %1366
  %1369 = select i1 %1367, double 1.000000e+00, double %1368
  %1370 = fmul double %1362, %1369
  %1371 = fmul double %1339, %1370
  %1372 = load i32, ptr %175, align 4, !tbaa !68
  %1373 = icmp slt i32 %71, %1372
  br i1 %1373, label %1374, label %1429

1374:                                             ; preds = %1322
  %1375 = sext i32 %132 to i64
  %1376 = getelementptr inbounds i32, ptr %25, i64 %1375
  %1377 = load i32, ptr %1376, align 4, !tbaa !68
  %1378 = sext i32 %247 to i64
  %1379 = getelementptr inbounds i32, ptr %25, i64 %1378
  %1380 = load i32, ptr %1379, align 4, !tbaa !68
  %1381 = icmp slt i32 %1377, %1380
  br i1 %1381, label %1382, label %1391

1382:                                             ; preds = %1374
  %1383 = load ptr, ptr %41, align 8, !tbaa !566
  %1384 = getelementptr inbounds i32, ptr %19, i64 %1378
  %1385 = load i32, ptr %1384, align 4, !tbaa !68
  %1386 = sext i32 %1385 to i64
  %1387 = getelementptr inbounds double, ptr %1383, i64 %1386
  %1388 = load double, ptr %1387, align 8, !tbaa !171
  %1389 = fadd double %249, %1388
  %1390 = fmul double %1389, 5.000000e-01
  br label %1391

1391:                                             ; preds = %1382, %1374
  %1392 = phi double [ %1390, %1382 ], [ %249, %1374 ]
  %1393 = extractelement <2 x double> %798, i64 0
  %1394 = extractelement <2 x double> %798, i64 1
  %1395 = fdiv double %1394, %1393
  %1396 = call double @llvm.fabs.f64(double %1395)
  %1397 = fmul double %1393, 9.800000e+00
  %1398 = call double @sqrt(double noundef %1397) #59
  %1399 = fadd double %1396, %1398
  %1400 = extractelement <2 x double> %251, i64 0
  %1401 = fsub double %82, %1400
  %1402 = fsub double %1400, %1392
  %1403 = fmul double %1399, 5.000000e-01
  %1404 = fmul double %1403, %1
  %1405 = fdiv double %1404, %1350
  %1406 = fsub double 1.000000e+00, %1405
  %1407 = fmul double %1405, %1406
  %1408 = fmul double %1401, %1401
  %1409 = fcmp olt double %1408, 1.000000e-30
  %1410 = fdiv double 1.000000e+00, %1408
  %1411 = select i1 %1409, double 0x46293E5939A08CE9, double %1410
  %1412 = fmul double %1401, %1341
  %1413 = fmul double %1411, %1412
  %1414 = fmul double %1401, %1402
  %1415 = fmul double %1411, %1414
  %1416 = fmul double %1407, 5.000000e-01
  %1417 = fcmp olt double %1413, 1.000000e+00
  %1418 = select i1 %1417, double %1413, double 1.000000e+00
  %1419 = fcmp olt double %1415, %1418
  %1420 = select i1 %1419, double %1415, double %1418
  %1421 = fcmp olt double %1420, 0.000000e+00
  %1422 = fsub double 1.000000e+00, %1420
  %1423 = select i1 %1421, double 1.000000e+00, double %1422
  %1424 = fmul double %1423, %1416
  %1425 = fmul double %1401, %1424
  %1426 = fadd double %1371, %1425
  %1427 = fmul double %1426, 5.000000e-01
  %1428 = fmul double %1427, 5.000000e-01
  br label %1429

1429:                                             ; preds = %1391, %1322
  %1430 = phi double [ %1428, %1391 ], [ %1371, %1322 ]
  %1431 = load i32, ptr %170, align 4, !tbaa !68
  %1432 = getelementptr inbounds i32, ptr %25, i64 %143
  %1433 = load i32, ptr %1432, align 4, !tbaa !68
  %1434 = icmp slt i32 %1431, %1433
  br i1 %1434, label %1435, label %1449

1435:                                             ; preds = %1429
  %1436 = load ptr, ptr %41, align 8, !tbaa !566
  %1437 = getelementptr inbounds i32, ptr %19, i64 %143
  %1438 = load i32, ptr %1437, align 4, !tbaa !68
  %1439 = sext i32 %1438 to i64
  %1440 = getelementptr inbounds double, ptr %1436, i64 %1439
  %1441 = load double, ptr %1440, align 8, !tbaa !171
  %1442 = fadd double %145, %1441
  %1443 = fmul double %1442, 5.000000e-01
  %1444 = load ptr, ptr %43, align 8, !tbaa !818
  %1445 = getelementptr inbounds double, ptr %1444, i64 %1439
  %1446 = load double, ptr %1445, align 8, !tbaa !171
  %1447 = fadd double %147, %1446
  %1448 = fmul double %1447, 5.000000e-01
  br label %1449

1449:                                             ; preds = %1435, %1429
  %1450 = phi double [ %1448, %1435 ], [ %147, %1429 ]
  %1451 = phi double [ %1443, %1435 ], [ %145, %1429 ]
  %1452 = load i32, ptr %175, align 4, !tbaa !68
  %1453 = icmp slt i32 %71, %1452
  %1454 = extractelement <2 x double> %251, i64 0
  %1455 = fadd double %120, %1454
  %1456 = fmul double %1455, 5.000000e-01
  %1457 = extractelement <2 x double> %251, i64 1
  %1458 = fadd double %124, %1457
  %1459 = fmul double %1458, 5.000000e-01
  %1460 = select i1 %1453, double %1456, double %120
  %1461 = select i1 %1453, double %1459, double %124
  %1462 = fdiv double %578, %509
  %1463 = call double @llvm.fabs.f64(double %1462)
  %1464 = fmul double %509, 9.800000e+00
  %1465 = call double @sqrt(double noundef %1464) #59
  %1466 = fsub double %111, %82
  %1467 = fsub double %82, %1460
  %1468 = fsub double %1451, %111
  %1469 = insertelement <2 x double> poison, double %1463, i64 0
  %1470 = insertelement <2 x double> %1469, double %156, i64 1
  %1471 = insertelement <2 x double> poison, double %1465, i64 0
  %1472 = insertelement <2 x double> %1471, double %174, i64 1
  %1473 = fadd <2 x double> %1470, %1472
  %1474 = fmul <2 x double> %1473, <double 5.000000e-01, double 5.000000e-01>
  %1475 = extractelement <2 x double> %1474, i64 0
  %1476 = fmul double %1475, %1
  %1477 = extractelement <2 x double> %1474, i64 1
  %1478 = fdiv double %1476, %1477
  %1479 = fsub double 1.000000e+00, %1478
  %1480 = fmul double %1478, %1479
  %1481 = fmul double %1466, %1466
  %1482 = fcmp olt double %1481, 1.000000e-30
  %1483 = fdiv double 1.000000e+00, %1481
  %1484 = select i1 %1482, double 0x46293E5939A08CE9, double %1483
  %1485 = fmul double %1466, %1468
  %1486 = fmul double %1484, %1485
  %1487 = fmul double %1466, %1467
  %1488 = fmul double %1484, %1487
  %1489 = fmul double %1480, 5.000000e-01
  %1490 = fcmp olt double %1486, 1.000000e+00
  %1491 = select i1 %1490, double %1486, double 1.000000e+00
  %1492 = fcmp olt double %1488, %1491
  %1493 = select i1 %1492, double %1488, double %1491
  %1494 = fcmp olt double %1493, 0.000000e+00
  %1495 = fsub double 1.000000e+00, %1493
  %1496 = select i1 %1494, double 1.000000e+00, double %1495
  %1497 = fmul double %1489, %1496
  %1498 = fmul double %1466, %1497
  %1499 = load i32, ptr %170, align 4, !tbaa !68
  %1500 = icmp slt i32 %71, %1499
  br i1 %1500, label %1501, label %1555

1501:                                             ; preds = %1449
  %1502 = sext i32 %130 to i64
  %1503 = getelementptr inbounds i32, ptr %25, i64 %1502
  %1504 = load i32, ptr %1503, align 4, !tbaa !68
  %1505 = sext i32 %271 to i64
  %1506 = getelementptr inbounds i32, ptr %25, i64 %1505
  %1507 = load i32, ptr %1506, align 4, !tbaa !68
  %1508 = icmp slt i32 %1504, %1507
  br i1 %1508, label %1509, label %1518

1509:                                             ; preds = %1501
  %1510 = load ptr, ptr %41, align 8, !tbaa !566
  %1511 = getelementptr inbounds i32, ptr %19, i64 %1505
  %1512 = load i32, ptr %1511, align 4, !tbaa !68
  %1513 = sext i32 %1512 to i64
  %1514 = getelementptr inbounds double, ptr %1510, i64 %1513
  %1515 = load double, ptr %1514, align 8, !tbaa !171
  %1516 = fadd double %273, %1515
  %1517 = fmul double %1516, 5.000000e-01
  br label %1518

1518:                                             ; preds = %1509, %1501
  %1519 = phi double [ %1517, %1509 ], [ %273, %1501 ]
  %1520 = extractelement <2 x double> %891, i64 0
  %1521 = extractelement <2 x double> %891, i64 1
  %1522 = fdiv double %1521, %1520
  %1523 = call double @llvm.fabs.f64(double %1522)
  %1524 = fmul double %1520, 9.800000e+00
  %1525 = call double @sqrt(double noundef %1524) #59
  %1526 = fadd double %1523, %1525
  %1527 = fsub double %1327, %82
  %1528 = fsub double %1519, %1327
  %1529 = fmul double %1526, 5.000000e-01
  %1530 = fmul double %1529, %1
  %1531 = fdiv double %1530, %1477
  %1532 = fsub double 1.000000e+00, %1531
  %1533 = fmul double %1531, %1532
  %1534 = fmul double %1527, %1527
  %1535 = fcmp olt double %1534, 1.000000e-30
  %1536 = fdiv double 1.000000e+00, %1534
  %1537 = select i1 %1535, double 0x46293E5939A08CE9, double %1536
  %1538 = fmul double %1527, %1528
  %1539 = fmul double %1537, %1538
  %1540 = fmul double %1527, %1467
  %1541 = fmul double %1537, %1540
  %1542 = fmul double %1533, 5.000000e-01
  %1543 = fcmp olt double %1539, 1.000000e+00
  %1544 = select i1 %1543, double %1539, double 1.000000e+00
  %1545 = fcmp olt double %1541, %1544
  %1546 = select i1 %1545, double %1541, double %1544
  %1547 = fcmp olt double %1546, 0.000000e+00
  %1548 = fsub double 1.000000e+00, %1546
  %1549 = select i1 %1547, double 1.000000e+00, double %1548
  %1550 = fmul double %1542, %1549
  %1551 = fmul double %1527, %1550
  %1552 = fadd double %1498, %1551
  %1553 = fmul double %1552, 5.000000e-01
  %1554 = fmul double %1553, 5.000000e-01
  br label %1555

1555:                                             ; preds = %1518, %1449
  %1556 = phi double [ %1554, %1518 ], [ %1498, %1449 ]
  %1557 = call double @sqrt(double noundef %1337) #59
  %1558 = fadd double %1336, %1557
  %1559 = fsub double %88, %124
  %1560 = fsub double %124, %1323
  %1561 = fsub double %1334, %88
  %1562 = fmul double %1558, 5.000000e-01
  %1563 = fmul double %1562, %1
  %1564 = fdiv double %1563, %1350
  %1565 = fsub double 1.000000e+00, %1564
  %1566 = fmul double %1564, %1565
  %1567 = fmul double %1559, %1559
  %1568 = fcmp olt double %1567, 1.000000e-30
  %1569 = fdiv double 1.000000e+00, %1567
  %1570 = select i1 %1568, double 0x46293E5939A08CE9, double %1569
  %1571 = fmul double %1559, %1561
  %1572 = fmul double %1570, %1571
  %1573 = fmul double %1559, %1560
  %1574 = fmul double %1570, %1573
  %1575 = fmul double %1566, 5.000000e-01
  %1576 = fcmp olt double %1572, 1.000000e+00
  %1577 = select i1 %1576, double %1572, double 1.000000e+00
  %1578 = fcmp olt double %1574, %1577
  %1579 = select i1 %1578, double %1574, double %1577
  %1580 = fcmp olt double %1579, 0.000000e+00
  %1581 = fsub double 1.000000e+00, %1579
  %1582 = select i1 %1580, double 1.000000e+00, double %1581
  %1583 = fmul double %1582, %1575
  %1584 = fmul double %1559, %1583
  %1585 = load i32, ptr %175, align 4, !tbaa !68
  %1586 = icmp slt i32 %71, %1585
  br i1 %1586, label %1587, label %1641

1587:                                             ; preds = %1555
  %1588 = sext i32 %132 to i64
  %1589 = getelementptr inbounds i32, ptr %25, i64 %1588
  %1590 = load i32, ptr %1589, align 4, !tbaa !68
  %1591 = sext i32 %247 to i64
  %1592 = getelementptr inbounds i32, ptr %25, i64 %1591
  %1593 = load i32, ptr %1592, align 4, !tbaa !68
  %1594 = icmp slt i32 %1590, %1593
  br i1 %1594, label %1595, label %1604

1595:                                             ; preds = %1587
  %1596 = load ptr, ptr %43, align 8, !tbaa !818
  %1597 = getelementptr inbounds i32, ptr %19, i64 %1591
  %1598 = load i32, ptr %1597, align 4, !tbaa !68
  %1599 = sext i32 %1598 to i64
  %1600 = getelementptr inbounds double, ptr %1596, i64 %1599
  %1601 = load double, ptr %1600, align 8, !tbaa !171
  %1602 = fadd double %250, %1601
  %1603 = fmul double %1602, 5.000000e-01
  br label %1604

1604:                                             ; preds = %1595, %1587
  %1605 = phi double [ %1603, %1595 ], [ %250, %1587 ]
  %1606 = extractelement <2 x double> %798, i64 0
  %1607 = extractelement <2 x double> %798, i64 1
  %1608 = fdiv double %1607, %1606
  %1609 = call double @llvm.fabs.f64(double %1608)
  %1610 = fmul double %1606, 9.800000e+00
  %1611 = call double @sqrt(double noundef %1610) #59
  %1612 = fadd double %1609, %1611
  %1613 = fsub double %88, %1457
  %1614 = fsub double %1457, %1605
  %1615 = fmul double %1612, 5.000000e-01
  %1616 = fmul double %1615, %1
  %1617 = fdiv double %1616, %1350
  %1618 = fsub double 1.000000e+00, %1617
  %1619 = fmul double %1617, %1618
  %1620 = fmul double %1613, %1613
  %1621 = fcmp olt double %1620, 1.000000e-30
  %1622 = fdiv double 1.000000e+00, %1620
  %1623 = select i1 %1621, double 0x46293E5939A08CE9, double %1622
  %1624 = fmul double %1613, %1561
  %1625 = fmul double %1623, %1624
  %1626 = fmul double %1613, %1614
  %1627 = fmul double %1623, %1626
  %1628 = fmul double %1619, 5.000000e-01
  %1629 = fcmp olt double %1625, 1.000000e+00
  %1630 = select i1 %1629, double %1625, double 1.000000e+00
  %1631 = fcmp olt double %1627, %1630
  %1632 = select i1 %1631, double %1627, double %1630
  %1633 = fcmp olt double %1632, 0.000000e+00
  %1634 = fsub double 1.000000e+00, %1632
  %1635 = select i1 %1633, double 1.000000e+00, double %1634
  %1636 = fmul double %1635, %1628
  %1637 = fmul double %1613, %1636
  %1638 = fadd double %1584, %1637
  %1639 = fmul double %1638, 5.000000e-01
  %1640 = fmul double %1639, 5.000000e-01
  br label %1641

1641:                                             ; preds = %1604, %1555
  %1642 = phi double [ %1640, %1604 ], [ %1584, %1555 ]
  %1643 = call double @sqrt(double noundef %1464) #59
  %1644 = fadd double %1463, %1643
  %1645 = fsub double %115, %88
  %1646 = fsub double %88, %1461
  %1647 = fsub double %1450, %115
  %1648 = fmul double %1644, 5.000000e-01
  %1649 = fmul double %1648, %1
  %1650 = fdiv double %1649, %1477
  %1651 = fsub double 1.000000e+00, %1650
  %1652 = fmul double %1650, %1651
  %1653 = fmul double %1645, %1645
  %1654 = fcmp olt double %1653, 1.000000e-30
  %1655 = fdiv double 1.000000e+00, %1653
  %1656 = select i1 %1654, double 0x46293E5939A08CE9, double %1655
  %1657 = fmul double %1645, %1647
  %1658 = fmul double %1656, %1657
  %1659 = fmul double %1645, %1646
  %1660 = fmul double %1656, %1659
  %1661 = fmul double %1652, 5.000000e-01
  %1662 = fcmp olt double %1658, 1.000000e+00
  %1663 = select i1 %1662, double %1658, double 1.000000e+00
  %1664 = fcmp olt double %1660, %1663
  %1665 = select i1 %1664, double %1660, double %1663
  %1666 = fcmp olt double %1665, 0.000000e+00
  %1667 = fsub double 1.000000e+00, %1665
  %1668 = select i1 %1666, double 1.000000e+00, double %1667
  %1669 = fmul double %1668, %1661
  %1670 = fmul double %1645, %1669
  %1671 = load i32, ptr %170, align 4, !tbaa !68
  %1672 = icmp slt i32 %71, %1671
  br i1 %1672, label %1673, label %1727

1673:                                             ; preds = %1641
  %1674 = sext i32 %130 to i64
  %1675 = getelementptr inbounds i32, ptr %25, i64 %1674
  %1676 = load i32, ptr %1675, align 4, !tbaa !68
  %1677 = sext i32 %271 to i64
  %1678 = getelementptr inbounds i32, ptr %25, i64 %1677
  %1679 = load i32, ptr %1678, align 4, !tbaa !68
  %1680 = icmp slt i32 %1676, %1679
  br i1 %1680, label %1681, label %1690

1681:                                             ; preds = %1673
  %1682 = load ptr, ptr %43, align 8, !tbaa !818
  %1683 = getelementptr inbounds i32, ptr %19, i64 %1677
  %1684 = load i32, ptr %1683, align 4, !tbaa !68
  %1685 = sext i32 %1684 to i64
  %1686 = getelementptr inbounds double, ptr %1682, i64 %1685
  %1687 = load double, ptr %1686, align 8, !tbaa !171
  %1688 = fadd double %274, %1687
  %1689 = fmul double %1688, 5.000000e-01
  br label %1690

1690:                                             ; preds = %1681, %1673
  %1691 = phi double [ %1689, %1681 ], [ %274, %1673 ]
  %1692 = extractelement <2 x double> %891, i64 0
  %1693 = extractelement <2 x double> %891, i64 1
  %1694 = fdiv double %1693, %1692
  %1695 = call double @llvm.fabs.f64(double %1694)
  %1696 = fmul double %1692, 9.800000e+00
  %1697 = call double @sqrt(double noundef %1696) #59
  %1698 = fadd double %1695, %1697
  %1699 = fsub double %1330, %88
  %1700 = fsub double %1691, %1330
  %1701 = fmul double %1698, 5.000000e-01
  %1702 = fmul double %1701, %1
  %1703 = fdiv double %1702, %1477
  %1704 = fsub double 1.000000e+00, %1703
  %1705 = fmul double %1703, %1704
  %1706 = fmul double %1699, %1699
  %1707 = fcmp olt double %1706, 1.000000e-30
  %1708 = fdiv double 1.000000e+00, %1706
  %1709 = select i1 %1707, double 0x46293E5939A08CE9, double %1708
  %1710 = fmul double %1699, %1700
  %1711 = fmul double %1709, %1710
  %1712 = fmul double %1699, %1646
  %1713 = fmul double %1709, %1712
  %1714 = fmul double %1705, 5.000000e-01
  %1715 = fcmp olt double %1711, 1.000000e+00
  %1716 = select i1 %1715, double %1711, double 1.000000e+00
  %1717 = fcmp olt double %1713, %1716
  %1718 = select i1 %1717, double %1713, double %1716
  %1719 = fcmp olt double %1718, 0.000000e+00
  %1720 = fsub double 1.000000e+00, %1718
  %1721 = select i1 %1719, double 1.000000e+00, double %1720
  %1722 = fmul double %1714, %1721
  %1723 = fmul double %1699, %1722
  %1724 = fadd double %1670, %1723
  %1725 = fmul double %1724, 5.000000e-01
  %1726 = fmul double %1725, 5.000000e-01
  br label %1727

1727:                                             ; preds = %1690, %1641
  %1728 = phi double [ %1726, %1690 ], [ %1670, %1641 ]
  %1729 = fdiv double %1, %156
  %1730 = fsub <2 x double> %704, %643
  %1731 = fadd <2 x double> %1730, %892
  %1732 = fsub <2 x double> %1731, %799
  %1733 = extractelement <2 x double> %1732, i64 0
  %1734 = fmul double %1729, %1733
  %1735 = fsub double %82, %1734
  %1736 = fsub double %1735, %1010
  %1737 = fadd double %1736, %1131
  %1738 = fsub double %1737, %1430
  %1739 = fadd double %1738, %1556
  %1740 = load ptr, ptr @_ZZN5State22calc_finite_differenceEdE5H_new, align 8, !tbaa !29
  %1741 = getelementptr inbounds double, ptr %1740, i64 %69
  store double %1739, ptr %1741, align 8, !tbaa !171
  %1742 = fsub <2 x double> %704, %643
  %1743 = fadd <2 x double> %1742, %892
  %1744 = fsub <2 x double> %1743, %799
  %1745 = extractelement <2 x double> %1744, i64 1
  %1746 = fmul double %1729, %1745
  %1747 = fsub double %85, %1746
  %1748 = fsub double %1747, %1217
  %1749 = fadd double %1748, %1303
  %1750 = load ptr, ptr @_ZZN5State22calc_finite_differenceEdE5U_new, align 8, !tbaa !29
  %1751 = getelementptr inbounds double, ptr %1750, i64 %69
  store double %1749, ptr %1751, align 8, !tbaa !171
  %1752 = fsub double %702, %641
  %1753 = fadd double %1752, %890
  %1754 = fsub double %1753, %797
  %1755 = fmul double %1729, %1754
  %1756 = fsub double %88, %1755
  %1757 = fsub double %1756, %1642
  %1758 = fadd double %1757, %1728
  %1759 = load ptr, ptr @_ZZN5State22calc_finite_differenceEdE5V_new, align 8, !tbaa !29
  %1760 = getelementptr inbounds double, ptr %1759, i64 %69
  store double %1758, ptr %1760, align 8, !tbaa !171
  %1761 = add nsw i64 %69, 1
  %1762 = load i32, ptr %5, align 4, !tbaa !68
  %1763 = sext i32 %1762 to i64
  %1764 = icmp slt i64 %1761, %1763
  br i1 %1764, label %68, label %48, !llvm.loop !825
}

; Function Attrs: optsize uwtable
define internal void @_ZN5State32calc_finite_difference_via_facesEd(ptr noundef nonnull align 8 dereferenceable(368) %0, double noundef %1) #6 align 2 {
  %3 = alloca %struct.timeval, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #57
  call void @cpu_timer_start(ptr noundef nonnull %3) #56
  %6 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !816
  %8 = getelementptr inbounds %class.Mesh, ptr %7, i64 0, i32 45
  %9 = load i64, ptr %8, align 8, !tbaa !543
  %10 = getelementptr inbounds %class.Mesh, ptr %7, i64 0, i32 47
  %11 = load i64, ptr %10, align 8, !tbaa !85
  %12 = icmp ult i64 %11, %9
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  store i64 %9, ptr %10, align 8, !tbaa !85
  br label %14

14:                                               ; preds = %13, %2
  call void @_ZN5State25apply_boundary_conditionsEv(ptr noundef nonnull align 8 dereferenceable(368) %0) #56
  %15 = load ptr, ptr %6, align 8, !tbaa !816
  %16 = getelementptr inbounds %class.Mesh, ptr %15, i64 0, i32 69
  %17 = load ptr, ptr %16, align 8, !tbaa !684
  %18 = getelementptr inbounds %class.Mesh, ptr %15, i64 0, i32 70
  %19 = load ptr, ptr %18, align 8, !tbaa !685
  %20 = getelementptr inbounds %class.Mesh, ptr %15, i64 0, i32 71
  %21 = load ptr, ptr %20, align 8, !tbaa !686
  %22 = getelementptr inbounds %class.Mesh, ptr %15, i64 0, i32 72
  %23 = load ptr, ptr %22, align 8, !tbaa !687
  %24 = getelementptr inbounds %class.Mesh, ptr %15, i64 0, i32 67
  %25 = load ptr, ptr %24, align 8, !tbaa !639
  %26 = getelementptr inbounds %class.Mesh, ptr %15, i64 0, i32 33
  %27 = getelementptr inbounds %class.Mesh, ptr %15, i64 0, i32 34
  call void @_ZN4Mesh24calc_face_list_wbidirmapEv(ptr noundef nonnull align 8 dereferenceable(2288) %15) #56
  %28 = load atomic i8, ptr @_ZGVZN5State32calc_finite_difference_via_facesEdE2Hx acquire, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %35, !prof !704

30:                                               ; preds = %14
  %31 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN5State32calc_finite_difference_via_facesEdE2Hx) #57
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN5State32calc_finite_difference_via_facesEdE2Hx, i8 0, i64 24, i1 false)
  %34 = call i32 @__cxa_atexit(ptr nonnull @_ZNSt6vectorIdSaIdEED2Ev, ptr nonnull @_ZZN5State32calc_finite_difference_via_facesEdE2Hx, ptr nonnull @__dso_handle) #57
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN5State32calc_finite_difference_via_facesEdE2Hx) #57
  br label %35

35:                                               ; preds = %33, %30, %14
  %36 = load atomic i8, ptr @_ZGVZN5State32calc_finite_difference_via_facesEdE2Ux acquire, align 8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %43, !prof !704

38:                                               ; preds = %35
  %39 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN5State32calc_finite_difference_via_facesEdE2Ux) #57
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN5State32calc_finite_difference_via_facesEdE2Ux, i8 0, i64 24, i1 false)
  %42 = call i32 @__cxa_atexit(ptr nonnull @_ZNSt6vectorIdSaIdEED2Ev, ptr nonnull @_ZZN5State32calc_finite_difference_via_facesEdE2Ux, ptr nonnull @__dso_handle) #57
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN5State32calc_finite_difference_via_facesEdE2Ux) #57
  br label %43

43:                                               ; preds = %41, %38, %35
  %44 = load atomic i8, ptr @_ZGVZN5State32calc_finite_difference_via_facesEdE2Vx acquire, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %51, !prof !704

46:                                               ; preds = %43
  %47 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN5State32calc_finite_difference_via_facesEdE2Vx) #57
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %46
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN5State32calc_finite_difference_via_facesEdE2Vx, i8 0, i64 24, i1 false)
  %50 = call i32 @__cxa_atexit(ptr nonnull @_ZNSt6vectorIdSaIdEED2Ev, ptr nonnull @_ZZN5State32calc_finite_difference_via_facesEdE2Vx, ptr nonnull @__dso_handle) #57
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN5State32calc_finite_difference_via_facesEdE2Vx) #57
  br label %51

51:                                               ; preds = %49, %46, %43
  %52 = load ptr, ptr %6, align 8, !tbaa !816
  %53 = getelementptr inbounds %class.Mesh, ptr %52, i64 0, i32 81
  %54 = load i32, ptr %53, align 8, !tbaa !729
  %55 = sext i32 %54 to i64
  call void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN5State32calc_finite_difference_via_facesEdE2Hx, i64 noundef %55) #56
  %56 = load ptr, ptr %6, align 8, !tbaa !816
  %57 = getelementptr inbounds %class.Mesh, ptr %56, i64 0, i32 81
  %58 = load i32, ptr %57, align 8, !tbaa !729
  %59 = sext i32 %58 to i64
  call void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN5State32calc_finite_difference_via_facesEdE2Ux, i64 noundef %59) #56
  %60 = load ptr, ptr %6, align 8, !tbaa !816
  %61 = getelementptr inbounds %class.Mesh, ptr %60, i64 0, i32 81
  %62 = load i32, ptr %61, align 8, !tbaa !729
  %63 = sext i32 %62 to i64
  call void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN5State32calc_finite_difference_via_facesEdE2Vx, i64 noundef %63) #56
  %64 = load ptr, ptr %6, align 8, !tbaa !816
  %65 = getelementptr inbounds %class.Mesh, ptr %64, i64 0, i32 81
  %66 = load i32, ptr %65, align 8, !tbaa !729
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %87

68:                                               ; preds = %51
  %69 = getelementptr inbounds %class.Mesh, ptr %64, i64 0, i32 86
  %70 = load ptr, ptr %69, align 8, !tbaa !65
  %71 = getelementptr inbounds %class.Mesh, ptr %64, i64 0, i32 87
  %72 = load ptr, ptr %71, align 8, !tbaa !65
  %73 = getelementptr inbounds %class.Mesh, ptr %64, i64 0, i32 33
  %74 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %75 = load ptr, ptr %74, align 8
  %76 = fmul double %1, 5.000000e-01
  %77 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  %78 = load ptr, ptr %77, align 8
  %79 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Hx, align 8
  %80 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Ux, align 8
  %81 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  %82 = load ptr, ptr %81, align 8
  %83 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Vx, align 8
  %84 = zext i32 %66 to i64
  %85 = insertelement <2 x double> poison, double %76, i64 1
  %86 = load ptr, ptr %73, align 8, !tbaa !109
  br label %90

87:                                               ; preds = %281, %51
  %88 = load atomic i8, ptr @_ZGVZN5State32calc_finite_difference_via_facesEdE2Hy acquire, align 8
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %286, label %291, !prof !704

90:                                               ; preds = %281, %68
  %91 = phi i64 [ 0, %68 ], [ %284, %281 ]
  %92 = getelementptr inbounds i32, ptr %70, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !68
  %94 = getelementptr inbounds i32, ptr %72, i64 %91
  %95 = load i32, ptr %94, align 4, !tbaa !68
  %96 = sext i32 %93 to i64
  %97 = getelementptr inbounds i32, ptr %25, i64 %96
  %98 = load i32, ptr %97, align 4, !tbaa !68
  %99 = sext i32 %95 to i64
  %100 = getelementptr inbounds i32, ptr %25, i64 %99
  %101 = load i32, ptr %100, align 4, !tbaa !68
  %102 = icmp eq i32 %98, %101
  %103 = sext i32 %98 to i64
  %104 = getelementptr inbounds double, ptr %86, i64 %103
  %105 = load double, ptr %104, align 8, !tbaa !171
  br i1 %102, label %106, label %166

106:                                              ; preds = %90
  %107 = fdiv double %76, %105
  %108 = getelementptr inbounds double, ptr %75, i64 %99
  %109 = load double, ptr %108, align 8, !tbaa !171
  %110 = getelementptr inbounds double, ptr %75, i64 %96
  %111 = load double, ptr %110, align 8, !tbaa !171
  %112 = fadd double %109, %111
  %113 = fmul double %112, 5.000000e-01
  %114 = getelementptr inbounds double, ptr %78, i64 %99
  %115 = load double, ptr %114, align 8, !tbaa !171
  %116 = getelementptr inbounds double, ptr %78, i64 %96
  %117 = load double, ptr %116, align 8, !tbaa !171
  %118 = fsub double %115, %117
  %119 = fmul double %107, %118
  %120 = fsub double %113, %119
  %121 = getelementptr inbounds double, ptr %79, i64 %91
  store double %120, ptr %121, align 8, !tbaa !171
  %122 = load double, ptr %114, align 8, !tbaa !171
  %123 = load double, ptr %116, align 8, !tbaa !171
  %124 = fadd double %122, %123
  %125 = fmul double %124, 5.000000e-01
  %126 = load double, ptr %108, align 8, !tbaa !171
  %127 = load double, ptr %110, align 8, !tbaa !171
  %128 = insertelement <2 x double> poison, double %122, i64 0
  %129 = insertelement <2 x double> %128, double %123, i64 1
  %130 = fmul <2 x double> %129, %129
  %131 = insertelement <2 x double> poison, double %126, i64 0
  %132 = insertelement <2 x double> %131, double %127, i64 1
  %133 = fdiv <2 x double> %130, %132
  %134 = fmul <2 x double> %132, %132
  %135 = fmul <2 x double> %134, <double 4.900000e+00, double 4.900000e+00>
  %136 = fadd <2 x double> %133, %135
  %137 = shufflevector <2 x double> %136, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %138 = fsub <2 x double> %136, %137
  %139 = extractelement <2 x double> %138, i64 0
  %140 = fmul double %107, %139
  %141 = fsub double %125, %140
  %142 = getelementptr inbounds double, ptr %80, i64 %91
  store double %141, ptr %142, align 8, !tbaa !171
  %143 = getelementptr inbounds double, ptr %82, i64 %99
  %144 = load double, ptr %143, align 8, !tbaa !171
  %145 = getelementptr inbounds double, ptr %82, i64 %96
  %146 = load double, ptr %145, align 8, !tbaa !171
  %147 = fadd double %144, %146
  %148 = fmul double %147, 5.000000e-01
  %149 = load double, ptr %114, align 8, !tbaa !171
  %150 = load double, ptr %108, align 8, !tbaa !171
  %151 = load double, ptr %116, align 8, !tbaa !171
  %152 = load double, ptr %110, align 8, !tbaa !171
  %153 = insertelement <2 x double> poison, double %144, i64 0
  %154 = insertelement <2 x double> %153, double %146, i64 1
  %155 = insertelement <2 x double> poison, double %149, i64 0
  %156 = insertelement <2 x double> %155, double %151, i64 1
  %157 = fmul <2 x double> %154, %156
  %158 = insertelement <2 x double> poison, double %150, i64 0
  %159 = insertelement <2 x double> %158, double %152, i64 1
  %160 = fdiv <2 x double> %157, %159
  %161 = shufflevector <2 x double> %160, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %162 = fsub <2 x double> %160, %161
  %163 = extractelement <2 x double> %162, i64 0
  %164 = fmul double %107, %163
  %165 = fsub double %148, %164
  br label %281

166:                                              ; preds = %90
  %167 = sext i32 %101 to i64
  %168 = getelementptr inbounds double, ptr %86, i64 %167
  %169 = load double, ptr %168, align 8, !tbaa !171
  %170 = insertelement <2 x double> poison, double %105, i64 0
  %171 = insertelement <2 x double> %170, double %169, i64 1
  %172 = fmul <2 x double> %171, %171
  %173 = shufflevector <2 x double> %172, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %174 = fdiv <2 x double> %172, %173
  %175 = fcmp olt <2 x double> %174, <double 5.000000e-01, double 5.000000e-01>
  %176 = extractelement <2 x i1> %175, i64 1
  %177 = extractelement <2 x double> %174, i64 1
  %178 = select i1 %176, double %177, double 5.000000e-01
  %179 = extractelement <2 x double> %172, i64 0
  %180 = fmul double %179, %178
  %181 = extractelement <2 x i1> %175, i64 0
  %182 = extractelement <2 x double> %174, i64 0
  %183 = select i1 %181, double %182, double 5.000000e-01
  %184 = extractelement <2 x double> %172, i64 1
  %185 = fmul double %184, %183
  %186 = getelementptr inbounds double, ptr %75, i64 %99
  %187 = load double, ptr %186, align 8, !tbaa !171
  %188 = fmul double %105, %187
  %189 = getelementptr inbounds double, ptr %75, i64 %96
  %190 = load double, ptr %189, align 8, !tbaa !171
  %191 = fmul double %169, %190
  %192 = getelementptr inbounds double, ptr %78, i64 %99
  %193 = load double, ptr %192, align 8, !tbaa !171
  %194 = getelementptr inbounds double, ptr %78, i64 %96
  %195 = load double, ptr %194, align 8, !tbaa !171
  %196 = getelementptr inbounds double, ptr %79, i64 %91
  %197 = getelementptr inbounds double, ptr %80, i64 %91
  %198 = getelementptr inbounds double, ptr %82, i64 %99
  %199 = getelementptr inbounds double, ptr %82, i64 %96
  %200 = insertelement <2 x double> %170, double %185, i64 1
  %201 = insertelement <2 x double> poison, double %169, i64 0
  %202 = insertelement <2 x double> %201, double %180, i64 1
  %203 = fadd <2 x double> %200, %202
  %204 = insertelement <2 x double> %201, double %105, i64 1
  %205 = fdiv <2 x double> %171, %204
  %206 = fcmp olt <2 x double> %205, <double 1.000000e+00, double 1.000000e+00>
  %207 = select <2 x i1> %206, <2 x double> %205, <2 x double> <double 1.000000e+00, double 1.000000e+00>
  %208 = fmul <2 x double> %204, %207
  %209 = extractelement <2 x double> %208, i64 0
  %210 = fmul double %209, %193
  %211 = extractelement <2 x double> %208, i64 1
  %212 = fmul double %211, %195
  %213 = fsub double %210, %212
  %214 = insertelement <2 x double> %85, double %191, i64 0
  %215 = insertelement <2 x double> poison, double %188, i64 0
  %216 = insertelement <2 x double> %215, double %213, i64 1
  %217 = fadd <2 x double> %214, %216
  %218 = fmul <2 x double> %214, %216
  %219 = shufflevector <2 x double> %217, <2 x double> %218, <2 x i32> <i32 0, i32 3>
  %220 = fdiv <2 x double> %219, %203
  %221 = shufflevector <2 x double> %220, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %222 = fsub <2 x double> %220, %221
  %223 = extractelement <2 x double> %222, i64 0
  store double %223, ptr %196, align 8, !tbaa !171
  %224 = load double, ptr %192, align 8, !tbaa !171
  %225 = fmul double %105, %224
  %226 = load double, ptr %194, align 8, !tbaa !171
  %227 = fmul double %169, %226
  %228 = load double, ptr %186, align 8, !tbaa !171
  %229 = load double, ptr %189, align 8, !tbaa !171
  %230 = insertelement <2 x double> poison, double %224, i64 0
  %231 = insertelement <2 x double> %230, double %226, i64 1
  %232 = fmul <2 x double> %231, %231
  %233 = insertelement <2 x double> poison, double %228, i64 0
  %234 = insertelement <2 x double> %233, double %229, i64 1
  %235 = fdiv <2 x double> %232, %234
  %236 = fmul <2 x double> %234, %234
  %237 = fmul <2 x double> %236, <double 4.900000e+00, double 4.900000e+00>
  %238 = fadd <2 x double> %235, %237
  %239 = fmul <2 x double> %208, %238
  %240 = shufflevector <2 x double> %239, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %241 = fsub <2 x double> %239, %240
  %242 = insertelement <2 x double> %85, double %227, i64 0
  %243 = insertelement <2 x double> poison, double %225, i64 0
  %244 = shufflevector <2 x double> %243, <2 x double> %241, <2 x i32> <i32 0, i32 2>
  %245 = fadd <2 x double> %242, %244
  %246 = fmul <2 x double> %242, %244
  %247 = shufflevector <2 x double> %245, <2 x double> %246, <2 x i32> <i32 0, i32 3>
  %248 = fdiv <2 x double> %247, %203
  %249 = shufflevector <2 x double> %248, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %250 = fsub <2 x double> %248, %249
  %251 = extractelement <2 x double> %250, i64 0
  store double %251, ptr %197, align 8, !tbaa !171
  %252 = load double, ptr %198, align 8, !tbaa !171
  %253 = fmul double %105, %252
  %254 = load double, ptr %199, align 8, !tbaa !171
  %255 = fmul double %169, %254
  %256 = load double, ptr %192, align 8, !tbaa !171
  %257 = load double, ptr %186, align 8, !tbaa !171
  %258 = load double, ptr %194, align 8, !tbaa !171
  %259 = insertelement <2 x double> poison, double %252, i64 0
  %260 = insertelement <2 x double> %259, double %254, i64 1
  %261 = insertelement <2 x double> poison, double %256, i64 0
  %262 = insertelement <2 x double> %261, double %258, i64 1
  %263 = fmul <2 x double> %260, %262
  %264 = load double, ptr %189, align 8, !tbaa !171
  %265 = insertelement <2 x double> poison, double %257, i64 0
  %266 = insertelement <2 x double> %265, double %264, i64 1
  %267 = fdiv <2 x double> %263, %266
  %268 = fmul <2 x double> %208, %267
  %269 = shufflevector <2 x double> %268, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %270 = fsub <2 x double> %268, %269
  %271 = insertelement <2 x double> %85, double %255, i64 0
  %272 = insertelement <2 x double> poison, double %253, i64 0
  %273 = shufflevector <2 x double> %272, <2 x double> %270, <2 x i32> <i32 0, i32 2>
  %274 = fadd <2 x double> %271, %273
  %275 = fmul <2 x double> %271, %273
  %276 = shufflevector <2 x double> %274, <2 x double> %275, <2 x i32> <i32 0, i32 3>
  %277 = fdiv <2 x double> %276, %203
  %278 = shufflevector <2 x double> %277, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %279 = fsub <2 x double> %277, %278
  %280 = extractelement <2 x double> %279, i64 0
  br label %281

281:                                              ; preds = %166, %106
  %282 = phi double [ %280, %166 ], [ %165, %106 ]
  %283 = getelementptr inbounds double, ptr %83, i64 %91
  store double %282, ptr %283, align 8, !tbaa !171
  %284 = add nuw nsw i64 %91, 1
  %285 = icmp eq i64 %284, %84
  br i1 %285, label %87, label %90, !llvm.loop !826

286:                                              ; preds = %87
  %287 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN5State32calc_finite_difference_via_facesEdE2Hy) #57
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %291, label %289

289:                                              ; preds = %286
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN5State32calc_finite_difference_via_facesEdE2Hy, i8 0, i64 24, i1 false)
  %290 = call i32 @__cxa_atexit(ptr nonnull @_ZNSt6vectorIdSaIdEED2Ev, ptr nonnull @_ZZN5State32calc_finite_difference_via_facesEdE2Hy, ptr nonnull @__dso_handle) #57
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN5State32calc_finite_difference_via_facesEdE2Hy) #57
  br label %291

291:                                              ; preds = %289, %286, %87
  %292 = load atomic i8, ptr @_ZGVZN5State32calc_finite_difference_via_facesEdE2Uy acquire, align 8
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %294, label %299, !prof !704

294:                                              ; preds = %291
  %295 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN5State32calc_finite_difference_via_facesEdE2Uy) #57
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %299, label %297

297:                                              ; preds = %294
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN5State32calc_finite_difference_via_facesEdE2Uy, i8 0, i64 24, i1 false)
  %298 = call i32 @__cxa_atexit(ptr nonnull @_ZNSt6vectorIdSaIdEED2Ev, ptr nonnull @_ZZN5State32calc_finite_difference_via_facesEdE2Uy, ptr nonnull @__dso_handle) #57
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN5State32calc_finite_difference_via_facesEdE2Uy) #57
  br label %299

299:                                              ; preds = %297, %294, %291
  %300 = load atomic i8, ptr @_ZGVZN5State32calc_finite_difference_via_facesEdE2Vy acquire, align 8
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %302, label %307, !prof !704

302:                                              ; preds = %299
  %303 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN5State32calc_finite_difference_via_facesEdE2Vy) #57
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %307, label %305

305:                                              ; preds = %302
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN5State32calc_finite_difference_via_facesEdE2Vy, i8 0, i64 24, i1 false)
  %306 = call i32 @__cxa_atexit(ptr nonnull @_ZNSt6vectorIdSaIdEED2Ev, ptr nonnull @_ZZN5State32calc_finite_difference_via_facesEdE2Vy, ptr nonnull @__dso_handle) #57
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN5State32calc_finite_difference_via_facesEdE2Vy) #57
  br label %307

307:                                              ; preds = %305, %302, %299
  %308 = load ptr, ptr %6, align 8, !tbaa !816
  %309 = getelementptr inbounds %class.Mesh, ptr %308, i64 0, i32 82
  %310 = load i32, ptr %309, align 4, !tbaa !731
  %311 = sext i32 %310 to i64
  call void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN5State32calc_finite_difference_via_facesEdE2Hy, i64 noundef %311) #56
  %312 = load ptr, ptr %6, align 8, !tbaa !816
  %313 = getelementptr inbounds %class.Mesh, ptr %312, i64 0, i32 82
  %314 = load i32, ptr %313, align 4, !tbaa !731
  %315 = sext i32 %314 to i64
  call void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN5State32calc_finite_difference_via_facesEdE2Uy, i64 noundef %315) #56
  %316 = load ptr, ptr %6, align 8, !tbaa !816
  %317 = getelementptr inbounds %class.Mesh, ptr %316, i64 0, i32 82
  %318 = load i32, ptr %317, align 4, !tbaa !731
  %319 = sext i32 %318 to i64
  call void @_ZNSt6vectorIdSaIdEE6resizeEm(ptr noundef nonnull align 8 dereferenceable(24) @_ZZN5State32calc_finite_difference_via_facesEdE2Vy, i64 noundef %319) #56
  %320 = load ptr, ptr %6, align 8, !tbaa !816
  %321 = getelementptr inbounds %class.Mesh, ptr %320, i64 0, i32 82
  %322 = load i32, ptr %321, align 4, !tbaa !731
  %323 = icmp sgt i32 %322, 0
  br i1 %323, label %324, label %343

324:                                              ; preds = %307
  %325 = getelementptr inbounds %class.Mesh, ptr %320, i64 0, i32 101
  %326 = load ptr, ptr %325, align 8, !tbaa !65
  %327 = getelementptr inbounds %class.Mesh, ptr %320, i64 0, i32 102
  %328 = load ptr, ptr %327, align 8, !tbaa !65
  %329 = getelementptr inbounds %class.Mesh, ptr %320, i64 0, i32 34
  %330 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %331 = load ptr, ptr %330, align 8
  %332 = fmul double %1, 5.000000e-01
  %333 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  %334 = load ptr, ptr %333, align 8
  %335 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Hy, align 8
  %336 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  %337 = load ptr, ptr %336, align 8
  %338 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Uy, align 8
  %339 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Vy, align 8
  %340 = zext i32 %322 to i64
  %341 = insertelement <2 x double> poison, double %332, i64 1
  %342 = load ptr, ptr %329, align 8, !tbaa !109
  br label %366

343:                                              ; preds = %557, %307
  %344 = getelementptr inbounds %class.Mesh, ptr %320, i64 0, i32 47
  %345 = load i64, ptr %344, align 8, !tbaa !652
  %346 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, i64 noundef %345, i64 noundef 8, ptr noundef nonnull @.str.3.256, i32 noundef 16) #56
  store ptr %346, ptr @_ZZN5State32calc_finite_difference_via_facesEdE5H_new, align 8, !tbaa !29
  %347 = load ptr, ptr %6, align 8, !tbaa !816
  %348 = getelementptr inbounds %class.Mesh, ptr %347, i64 0, i32 47
  %349 = load i64, ptr %348, align 8, !tbaa !652
  %350 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, i64 noundef %349, i64 noundef 8, ptr noundef nonnull @.str.4.257, i32 noundef 16) #56
  store ptr %350, ptr @_ZZN5State32calc_finite_difference_via_facesEdE5U_new, align 8, !tbaa !29
  %351 = load ptr, ptr %6, align 8, !tbaa !816
  %352 = getelementptr inbounds %class.Mesh, ptr %351, i64 0, i32 47
  %353 = load i64, ptr %352, align 8, !tbaa !652
  %354 = call noundef ptr @_ZN10MallocPlus13memory_mallocEmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, i64 noundef %353, i64 noundef 8, ptr noundef nonnull @.str.5.258, i32 noundef 16) #56
  store ptr %354, ptr @_ZZN5State32calc_finite_difference_via_facesEdE5V_new, align 8, !tbaa !29
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #57
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #57
  %355 = load ptr, ptr %6, align 8, !tbaa !816
  call void @_ZN4Mesh10get_boundsERiS0_(ptr noundef nonnull align 8 dereferenceable(2288) %355, ptr noundef nonnull align 4 dereferenceable(4) %4, ptr noundef nonnull align 4 dereferenceable(4) %5) #56
  %356 = load i32, ptr %4, align 4, !tbaa !68
  %357 = load i32, ptr %5, align 4, !tbaa !68
  %358 = icmp slt i32 %356, %357
  br i1 %358, label %361, label %359

359:                                              ; preds = %343
  %360 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE5H_new, align 8, !tbaa !29
  br label %562

361:                                              ; preds = %343
  %362 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %363 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  %364 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  %365 = sext i32 %356 to i64
  br label %582

366:                                              ; preds = %557, %324
  %367 = phi i64 [ 0, %324 ], [ %560, %557 ]
  %368 = getelementptr inbounds i32, ptr %326, i64 %367
  %369 = load i32, ptr %368, align 4, !tbaa !68
  %370 = getelementptr inbounds i32, ptr %328, i64 %367
  %371 = load i32, ptr %370, align 4, !tbaa !68
  %372 = sext i32 %369 to i64
  %373 = getelementptr inbounds i32, ptr %25, i64 %372
  %374 = load i32, ptr %373, align 4, !tbaa !68
  %375 = sext i32 %371 to i64
  %376 = getelementptr inbounds i32, ptr %25, i64 %375
  %377 = load i32, ptr %376, align 4, !tbaa !68
  %378 = icmp eq i32 %374, %377
  %379 = sext i32 %374 to i64
  %380 = getelementptr inbounds double, ptr %342, i64 %379
  %381 = load double, ptr %380, align 8, !tbaa !171
  br i1 %378, label %382, label %442

382:                                              ; preds = %366
  %383 = fdiv double %332, %381
  %384 = getelementptr inbounds double, ptr %331, i64 %375
  %385 = load double, ptr %384, align 8, !tbaa !171
  %386 = getelementptr inbounds double, ptr %331, i64 %372
  %387 = load double, ptr %386, align 8, !tbaa !171
  %388 = fadd double %385, %387
  %389 = fmul double %388, 5.000000e-01
  %390 = getelementptr inbounds double, ptr %334, i64 %375
  %391 = load double, ptr %390, align 8, !tbaa !171
  %392 = getelementptr inbounds double, ptr %334, i64 %372
  %393 = load double, ptr %392, align 8, !tbaa !171
  %394 = fsub double %391, %393
  %395 = fmul double %383, %394
  %396 = fsub double %389, %395
  %397 = getelementptr inbounds double, ptr %335, i64 %367
  store double %396, ptr %397, align 8, !tbaa !171
  %398 = getelementptr inbounds double, ptr %337, i64 %375
  %399 = load double, ptr %398, align 8, !tbaa !171
  %400 = getelementptr inbounds double, ptr %337, i64 %372
  %401 = load double, ptr %400, align 8, !tbaa !171
  %402 = fadd double %399, %401
  %403 = fmul double %402, 5.000000e-01
  %404 = load double, ptr %390, align 8, !tbaa !171
  %405 = load double, ptr %384, align 8, !tbaa !171
  %406 = load double, ptr %392, align 8, !tbaa !171
  %407 = load double, ptr %386, align 8, !tbaa !171
  %408 = insertelement <2 x double> poison, double %399, i64 0
  %409 = insertelement <2 x double> %408, double %401, i64 1
  %410 = insertelement <2 x double> poison, double %404, i64 0
  %411 = insertelement <2 x double> %410, double %406, i64 1
  %412 = fmul <2 x double> %409, %411
  %413 = insertelement <2 x double> poison, double %405, i64 0
  %414 = insertelement <2 x double> %413, double %407, i64 1
  %415 = fdiv <2 x double> %412, %414
  %416 = shufflevector <2 x double> %415, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %417 = fsub <2 x double> %415, %416
  %418 = extractelement <2 x double> %417, i64 0
  %419 = fmul double %383, %418
  %420 = fsub double %403, %419
  %421 = getelementptr inbounds double, ptr %338, i64 %367
  store double %420, ptr %421, align 8, !tbaa !171
  %422 = load double, ptr %390, align 8, !tbaa !171
  %423 = load double, ptr %392, align 8, !tbaa !171
  %424 = fadd double %422, %423
  %425 = fmul double %424, 5.000000e-01
  %426 = load double, ptr %384, align 8, !tbaa !171
  %427 = load double, ptr %386, align 8, !tbaa !171
  %428 = insertelement <2 x double> poison, double %422, i64 0
  %429 = insertelement <2 x double> %428, double %423, i64 1
  %430 = fmul <2 x double> %429, %429
  %431 = insertelement <2 x double> poison, double %426, i64 0
  %432 = insertelement <2 x double> %431, double %427, i64 1
  %433 = fdiv <2 x double> %430, %432
  %434 = fmul <2 x double> %432, %432
  %435 = fmul <2 x double> %434, <double 4.900000e+00, double 4.900000e+00>
  %436 = fadd <2 x double> %433, %435
  %437 = shufflevector <2 x double> %436, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %438 = fsub <2 x double> %436, %437
  %439 = extractelement <2 x double> %438, i64 0
  %440 = fmul double %383, %439
  %441 = fsub double %425, %440
  br label %557

442:                                              ; preds = %366
  %443 = sext i32 %377 to i64
  %444 = getelementptr inbounds double, ptr %342, i64 %443
  %445 = load double, ptr %444, align 8, !tbaa !171
  %446 = insertelement <2 x double> poison, double %381, i64 0
  %447 = insertelement <2 x double> %446, double %445, i64 1
  %448 = fmul <2 x double> %447, %447
  %449 = shufflevector <2 x double> %448, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %450 = fdiv <2 x double> %448, %449
  %451 = fcmp olt <2 x double> %450, <double 5.000000e-01, double 5.000000e-01>
  %452 = extractelement <2 x i1> %451, i64 1
  %453 = extractelement <2 x double> %450, i64 1
  %454 = select i1 %452, double %453, double 5.000000e-01
  %455 = extractelement <2 x double> %448, i64 0
  %456 = fmul double %455, %454
  %457 = extractelement <2 x i1> %451, i64 0
  %458 = extractelement <2 x double> %450, i64 0
  %459 = select i1 %457, double %458, double 5.000000e-01
  %460 = extractelement <2 x double> %448, i64 1
  %461 = fmul double %460, %459
  %462 = getelementptr inbounds double, ptr %331, i64 %375
  %463 = load double, ptr %462, align 8, !tbaa !171
  %464 = fmul double %381, %463
  %465 = getelementptr inbounds double, ptr %331, i64 %372
  %466 = load double, ptr %465, align 8, !tbaa !171
  %467 = fmul double %445, %466
  %468 = getelementptr inbounds double, ptr %334, i64 %375
  %469 = load double, ptr %468, align 8, !tbaa !171
  %470 = getelementptr inbounds double, ptr %334, i64 %372
  %471 = load double, ptr %470, align 8, !tbaa !171
  %472 = getelementptr inbounds double, ptr %335, i64 %367
  %473 = getelementptr inbounds double, ptr %337, i64 %375
  %474 = getelementptr inbounds double, ptr %337, i64 %372
  %475 = getelementptr inbounds double, ptr %338, i64 %367
  %476 = insertelement <2 x double> %446, double %461, i64 1
  %477 = insertelement <2 x double> poison, double %445, i64 0
  %478 = insertelement <2 x double> %477, double %456, i64 1
  %479 = fadd <2 x double> %476, %478
  %480 = insertelement <2 x double> %477, double %381, i64 1
  %481 = fdiv <2 x double> %447, %480
  %482 = fcmp olt <2 x double> %481, <double 1.000000e+00, double 1.000000e+00>
  %483 = select <2 x i1> %482, <2 x double> %481, <2 x double> <double 1.000000e+00, double 1.000000e+00>
  %484 = fmul <2 x double> %480, %483
  %485 = extractelement <2 x double> %484, i64 0
  %486 = fmul double %485, %469
  %487 = extractelement <2 x double> %484, i64 1
  %488 = fmul double %487, %471
  %489 = fsub double %486, %488
  %490 = insertelement <2 x double> %341, double %467, i64 0
  %491 = insertelement <2 x double> poison, double %464, i64 0
  %492 = insertelement <2 x double> %491, double %489, i64 1
  %493 = fadd <2 x double> %490, %492
  %494 = fmul <2 x double> %490, %492
  %495 = shufflevector <2 x double> %493, <2 x double> %494, <2 x i32> <i32 0, i32 3>
  %496 = fdiv <2 x double> %495, %479
  %497 = shufflevector <2 x double> %496, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %498 = fsub <2 x double> %496, %497
  %499 = extractelement <2 x double> %498, i64 0
  store double %499, ptr %472, align 8, !tbaa !171
  %500 = load double, ptr %473, align 8, !tbaa !171
  %501 = fmul double %381, %500
  %502 = load double, ptr %474, align 8, !tbaa !171
  %503 = fmul double %445, %502
  %504 = load double, ptr %468, align 8, !tbaa !171
  %505 = load double, ptr %462, align 8, !tbaa !171
  %506 = load double, ptr %470, align 8, !tbaa !171
  %507 = load double, ptr %465, align 8, !tbaa !171
  %508 = insertelement <2 x double> poison, double %500, i64 0
  %509 = insertelement <2 x double> %508, double %502, i64 1
  %510 = insertelement <2 x double> poison, double %504, i64 0
  %511 = insertelement <2 x double> %510, double %506, i64 1
  %512 = fmul <2 x double> %509, %511
  %513 = insertelement <2 x double> poison, double %505, i64 0
  %514 = insertelement <2 x double> %513, double %507, i64 1
  %515 = fdiv <2 x double> %512, %514
  %516 = fmul <2 x double> %484, %515
  %517 = shufflevector <2 x double> %516, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %518 = fsub <2 x double> %516, %517
  %519 = insertelement <2 x double> %341, double %503, i64 0
  %520 = insertelement <2 x double> poison, double %501, i64 0
  %521 = shufflevector <2 x double> %520, <2 x double> %518, <2 x i32> <i32 0, i32 2>
  %522 = fadd <2 x double> %519, %521
  %523 = fmul <2 x double> %519, %521
  %524 = shufflevector <2 x double> %522, <2 x double> %523, <2 x i32> <i32 0, i32 3>
  %525 = fdiv <2 x double> %524, %479
  %526 = shufflevector <2 x double> %525, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %527 = fsub <2 x double> %525, %526
  %528 = extractelement <2 x double> %527, i64 0
  store double %528, ptr %475, align 8, !tbaa !171
  %529 = load double, ptr %468, align 8, !tbaa !171
  %530 = fmul double %381, %529
  %531 = load double, ptr %470, align 8, !tbaa !171
  %532 = fmul double %445, %531
  %533 = load double, ptr %462, align 8, !tbaa !171
  %534 = insertelement <2 x double> poison, double %529, i64 0
  %535 = insertelement <2 x double> %534, double %531, i64 1
  %536 = fmul <2 x double> %535, %535
  %537 = load double, ptr %465, align 8, !tbaa !171
  %538 = insertelement <2 x double> poison, double %533, i64 0
  %539 = insertelement <2 x double> %538, double %537, i64 1
  %540 = fdiv <2 x double> %536, %539
  %541 = fmul <2 x double> %539, %539
  %542 = fmul <2 x double> %541, <double 4.900000e+00, double 4.900000e+00>
  %543 = fadd <2 x double> %540, %542
  %544 = fmul <2 x double> %484, %543
  %545 = shufflevector <2 x double> %544, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %546 = fsub <2 x double> %544, %545
  %547 = insertelement <2 x double> %341, double %532, i64 0
  %548 = insertelement <2 x double> poison, double %530, i64 0
  %549 = shufflevector <2 x double> %548, <2 x double> %546, <2 x i32> <i32 0, i32 2>
  %550 = fadd <2 x double> %547, %549
  %551 = fmul <2 x double> %547, %549
  %552 = shufflevector <2 x double> %550, <2 x double> %551, <2 x i32> <i32 0, i32 3>
  %553 = fdiv <2 x double> %552, %479
  %554 = shufflevector <2 x double> %553, <2 x double> poison, <2 x i32> <i32 1, i32 poison>
  %555 = fsub <2 x double> %553, %554
  %556 = extractelement <2 x double> %555, i64 0
  br label %557

557:                                              ; preds = %442, %382
  %558 = phi double [ %556, %442 ], [ %441, %382 ]
  %559 = getelementptr inbounds double, ptr %339, i64 %367
  store double %558, ptr %559, align 8, !tbaa !171
  %560 = add nuw nsw i64 %367, 1
  %561 = icmp eq i64 %560, %340
  br i1 %561, label %343, label %366, !llvm.loop !827

562:                                              ; preds = %1856, %359
  %563 = phi ptr [ %360, %359 ], [ %1870, %1856 ]
  %564 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %565 = load ptr, ptr %564, align 8, !tbaa !566
  %566 = call noundef ptr @_ZN10MallocPlus14memory_replaceEPvS0_(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %565, ptr noundef %563) #56
  store ptr %566, ptr %564, align 8, !tbaa !566
  %567 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  %568 = load ptr, ptr %567, align 8, !tbaa !817
  %569 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE5U_new, align 8, !tbaa !29
  %570 = call noundef ptr @_ZN10MallocPlus14memory_replaceEPvS0_(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %568, ptr noundef %569) #56
  store ptr %570, ptr %567, align 8, !tbaa !817
  %571 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  %572 = load ptr, ptr %571, align 8, !tbaa !818
  %573 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE5V_new, align 8, !tbaa !29
  %574 = call noundef ptr @_ZN10MallocPlus14memory_replaceEPvS0_(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef %572, ptr noundef %573) #56
  store ptr %574, ptr %571, align 8, !tbaa !818
  %575 = load i64, ptr %3, align 8, !tbaa.struct !560
  %576 = getelementptr inbounds i8, ptr %3, i64 8
  %577 = load i64, ptr %576, align 8, !tbaa.struct !561
  %578 = call double @cpu_timer_stop(i64 %575, i64 %577) #56
  %579 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 6, i64 2
  %580 = load double, ptr %579, align 8, !tbaa !171
  %581 = fadd double %578, %580
  store double %581, ptr %579, align 8, !tbaa !171
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #57
  ret void

582:                                              ; preds = %1856, %361
  %583 = phi i64 [ %365, %361 ], [ %1890, %1856 ]
  %584 = getelementptr inbounds i32, ptr %25, i64 %583
  %585 = load i32, ptr %584, align 4, !tbaa !68
  %586 = getelementptr inbounds i32, ptr %17, i64 %583
  %587 = load i32, ptr %586, align 4, !tbaa !68
  %588 = getelementptr inbounds i32, ptr %19, i64 %583
  %589 = load i32, ptr %588, align 4, !tbaa !68
  %590 = getelementptr inbounds i32, ptr %23, i64 %583
  %591 = load i32, ptr %590, align 4, !tbaa !68
  %592 = getelementptr inbounds i32, ptr %21, i64 %583
  %593 = load i32, ptr %592, align 4, !tbaa !68
  %594 = load ptr, ptr %362, align 8, !tbaa !566
  %595 = getelementptr inbounds double, ptr %594, i64 %583
  %596 = load double, ptr %595, align 8, !tbaa !171
  %597 = load ptr, ptr %363, align 8, !tbaa !817
  %598 = getelementptr inbounds double, ptr %597, i64 %583
  %599 = load double, ptr %598, align 8, !tbaa !171
  %600 = load ptr, ptr %364, align 8, !tbaa !818
  %601 = getelementptr inbounds double, ptr %600, i64 %583
  %602 = load double, ptr %601, align 8, !tbaa !171
  %603 = sext i32 %587 to i64
  %604 = getelementptr inbounds i32, ptr %17, i64 %603
  %605 = load i32, ptr %604, align 4, !tbaa !68
  %606 = getelementptr inbounds double, ptr %594, i64 %603
  %607 = load double, ptr %606, align 8, !tbaa !171
  %608 = getelementptr inbounds double, ptr %597, i64 %603
  %609 = load double, ptr %608, align 8, !tbaa !171
  %610 = sext i32 %589 to i64
  %611 = getelementptr inbounds i32, ptr %19, i64 %610
  %612 = load i32, ptr %611, align 4, !tbaa !68
  %613 = getelementptr inbounds double, ptr %594, i64 %610
  %614 = load double, ptr %613, align 8, !tbaa !171
  %615 = getelementptr inbounds double, ptr %597, i64 %610
  %616 = load double, ptr %615, align 8, !tbaa !171
  %617 = sext i32 %591 to i64
  %618 = getelementptr inbounds i32, ptr %23, i64 %617
  %619 = load i32, ptr %618, align 4, !tbaa !68
  %620 = getelementptr inbounds double, ptr %594, i64 %617
  %621 = load double, ptr %620, align 8, !tbaa !171
  %622 = getelementptr inbounds double, ptr %600, i64 %617
  %623 = load double, ptr %622, align 8, !tbaa !171
  %624 = sext i32 %593 to i64
  %625 = getelementptr inbounds i32, ptr %21, i64 %624
  %626 = load i32, ptr %625, align 4, !tbaa !68
  %627 = getelementptr inbounds double, ptr %594, i64 %624
  %628 = load double, ptr %627, align 8, !tbaa !171
  %629 = getelementptr inbounds double, ptr %600, i64 %624
  %630 = load double, ptr %629, align 8, !tbaa !171
  %631 = getelementptr inbounds i32, ptr %23, i64 %603
  %632 = load i32, ptr %631, align 4, !tbaa !68
  %633 = getelementptr inbounds i32, ptr %23, i64 %610
  %634 = load i32, ptr %633, align 4, !tbaa !68
  %635 = getelementptr inbounds i32, ptr %19, i64 %617
  %636 = load i32, ptr %635, align 4, !tbaa !68
  %637 = getelementptr inbounds i32, ptr %19, i64 %624
  %638 = load i32, ptr %637, align 4, !tbaa !68
  %639 = sext i32 %605 to i64
  %640 = getelementptr inbounds double, ptr %594, i64 %639
  %641 = load double, ptr %640, align 8, !tbaa !171
  %642 = getelementptr inbounds double, ptr %597, i64 %639
  %643 = load double, ptr %642, align 8, !tbaa !171
  %644 = sext i32 %612 to i64
  %645 = getelementptr inbounds double, ptr %594, i64 %644
  %646 = load double, ptr %645, align 8, !tbaa !171
  %647 = getelementptr inbounds double, ptr %597, i64 %644
  %648 = load double, ptr %647, align 8, !tbaa !171
  %649 = sext i32 %619 to i64
  %650 = getelementptr inbounds double, ptr %594, i64 %649
  %651 = load double, ptr %650, align 8, !tbaa !171
  %652 = getelementptr inbounds double, ptr %600, i64 %649
  %653 = load double, ptr %652, align 8, !tbaa !171
  %654 = sext i32 %626 to i64
  %655 = getelementptr inbounds double, ptr %594, i64 %654
  %656 = load double, ptr %655, align 8, !tbaa !171
  %657 = getelementptr inbounds double, ptr %600, i64 %654
  %658 = load double, ptr %657, align 8, !tbaa !171
  %659 = sext i32 %585 to i64
  %660 = load ptr, ptr %26, align 8, !tbaa !109
  %661 = getelementptr inbounds double, ptr %660, i64 %659
  %662 = load double, ptr %661, align 8, !tbaa !171
  %663 = getelementptr inbounds i32, ptr %25, i64 %603
  %664 = load i32, ptr %663, align 4, !tbaa !68
  %665 = sext i32 %664 to i64
  %666 = getelementptr inbounds double, ptr %660, i64 %665
  %667 = load double, ptr %666, align 8, !tbaa !171
  %668 = getelementptr inbounds i32, ptr %25, i64 %610
  %669 = load i32, ptr %668, align 4, !tbaa !68
  %670 = sext i32 %669 to i64
  %671 = getelementptr inbounds double, ptr %660, i64 %670
  %672 = load double, ptr %671, align 8, !tbaa !171
  %673 = getelementptr inbounds i32, ptr %25, i64 %617
  %674 = load i32, ptr %673, align 4, !tbaa !68
  %675 = sext i32 %674 to i64
  %676 = load ptr, ptr %27, align 8, !tbaa !109
  %677 = getelementptr inbounds double, ptr %676, i64 %675
  %678 = load double, ptr %677, align 8, !tbaa !171
  %679 = getelementptr inbounds i32, ptr %25, i64 %624
  %680 = load i32, ptr %679, align 4, !tbaa !68
  %681 = sext i32 %680 to i64
  %682 = getelementptr inbounds double, ptr %676, i64 %681
  %683 = load double, ptr %682, align 8, !tbaa !171
  %684 = icmp slt i32 %585, %664
  br i1 %684, label %685, label %698

685:                                              ; preds = %582
  %686 = sext i32 %632 to i64
  %687 = getelementptr inbounds double, ptr %594, i64 %686
  %688 = load double, ptr %687, align 8, !tbaa !171
  %689 = getelementptr inbounds double, ptr %597, i64 %686
  %690 = load double, ptr %689, align 8, !tbaa !171
  %691 = getelementptr inbounds i32, ptr %17, i64 %686
  %692 = load i32, ptr %691, align 4, !tbaa !68
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds double, ptr %594, i64 %693
  %695 = load double, ptr %694, align 8, !tbaa !171
  %696 = getelementptr inbounds double, ptr %597, i64 %693
  %697 = load double, ptr %696, align 8, !tbaa !171
  br label %698

698:                                              ; preds = %685, %582
  %699 = phi i32 [ %692, %685 ], [ 0, %582 ]
  %700 = phi double [ %688, %685 ], [ 0.000000e+00, %582 ]
  %701 = phi double [ %690, %685 ], [ 0.000000e+00, %582 ]
  %702 = phi double [ %695, %685 ], [ 0.000000e+00, %582 ]
  %703 = phi double [ %697, %685 ], [ 0.000000e+00, %582 ]
  %704 = icmp slt i32 %585, %669
  br i1 %704, label %705, label %718

705:                                              ; preds = %698
  %706 = sext i32 %634 to i64
  %707 = getelementptr inbounds double, ptr %594, i64 %706
  %708 = load double, ptr %707, align 8, !tbaa !171
  %709 = getelementptr inbounds double, ptr %597, i64 %706
  %710 = load double, ptr %709, align 8, !tbaa !171
  %711 = getelementptr inbounds i32, ptr %19, i64 %706
  %712 = load i32, ptr %711, align 4, !tbaa !68
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds double, ptr %594, i64 %713
  %715 = load double, ptr %714, align 8, !tbaa !171
  %716 = getelementptr inbounds double, ptr %597, i64 %713
  %717 = load double, ptr %716, align 8, !tbaa !171
  br label %718

718:                                              ; preds = %705, %698
  %719 = phi i32 [ %712, %705 ], [ 0, %698 ]
  %720 = phi double [ %708, %705 ], [ 0.000000e+00, %698 ]
  %721 = phi double [ %710, %705 ], [ 0.000000e+00, %698 ]
  %722 = phi double [ %715, %705 ], [ 0.000000e+00, %698 ]
  %723 = phi double [ %717, %705 ], [ 0.000000e+00, %698 ]
  %724 = icmp slt i32 %585, %680
  br i1 %724, label %725, label %738

725:                                              ; preds = %718
  %726 = sext i32 %638 to i64
  %727 = getelementptr inbounds double, ptr %594, i64 %726
  %728 = load double, ptr %727, align 8, !tbaa !171
  %729 = getelementptr inbounds double, ptr %600, i64 %726
  %730 = load double, ptr %729, align 8, !tbaa !171
  %731 = getelementptr inbounds i32, ptr %21, i64 %726
  %732 = load i32, ptr %731, align 4, !tbaa !68
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds double, ptr %594, i64 %733
  %735 = load double, ptr %734, align 8, !tbaa !171
  %736 = getelementptr inbounds double, ptr %600, i64 %733
  %737 = load double, ptr %736, align 8, !tbaa !171
  br label %738

738:                                              ; preds = %725, %718
  %739 = phi i32 [ %732, %725 ], [ 0, %718 ]
  %740 = phi double [ %728, %725 ], [ 0.000000e+00, %718 ]
  %741 = phi double [ %730, %725 ], [ 0.000000e+00, %718 ]
  %742 = phi double [ %735, %725 ], [ 0.000000e+00, %718 ]
  %743 = phi double [ %737, %725 ], [ 0.000000e+00, %718 ]
  %744 = icmp slt i32 %585, %674
  br i1 %744, label %745, label %758

745:                                              ; preds = %738
  %746 = sext i32 %636 to i64
  %747 = getelementptr inbounds double, ptr %594, i64 %746
  %748 = load double, ptr %747, align 8, !tbaa !171
  %749 = getelementptr inbounds double, ptr %600, i64 %746
  %750 = load double, ptr %749, align 8, !tbaa !171
  %751 = getelementptr inbounds i32, ptr %23, i64 %746
  %752 = load i32, ptr %751, align 4, !tbaa !68
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds double, ptr %594, i64 %753
  %755 = load double, ptr %754, align 8, !tbaa !171
  %756 = getelementptr inbounds double, ptr %600, i64 %753
  %757 = load double, ptr %756, align 8, !tbaa !171
  br label %758

758:                                              ; preds = %745, %738
  %759 = phi i32 [ %752, %745 ], [ 0, %738 ]
  %760 = phi double [ %748, %745 ], [ 0.000000e+00, %738 ]
  %761 = phi double [ %750, %745 ], [ 0.000000e+00, %738 ]
  %762 = phi double [ %755, %745 ], [ 0.000000e+00, %738 ]
  %763 = phi double [ %757, %745 ], [ 0.000000e+00, %738 ]
  %764 = load ptr, ptr %6, align 8, !tbaa !816
  %765 = getelementptr inbounds %class.Mesh, ptr %764, i64 0, i32 88
  %766 = load ptr, ptr %765, align 8, !tbaa !65
  %767 = getelementptr inbounds i32, ptr %766, i64 %583
  %768 = load i32, ptr %767, align 4, !tbaa !68
  %769 = icmp sgt i32 %768, -1
  br i1 %769, label %770, label %781

770:                                              ; preds = %758
  %771 = zext i32 %768 to i64
  %772 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Hx, align 8, !tbaa !109
  %773 = getelementptr inbounds double, ptr %772, i64 %771
  %774 = load double, ptr %773, align 8, !tbaa !171
  %775 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Ux, align 8, !tbaa !109
  %776 = getelementptr inbounds double, ptr %775, i64 %771
  %777 = load double, ptr %776, align 8, !tbaa !171
  %778 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Vx, align 8, !tbaa !109
  %779 = getelementptr inbounds double, ptr %778, i64 %771
  %780 = load double, ptr %779, align 8, !tbaa !171
  br label %781

781:                                              ; preds = %770, %758
  %782 = phi double [ %774, %770 ], [ %596, %758 ]
  %783 = phi double [ %777, %770 ], [ 0.000000e+00, %758 ]
  %784 = phi double [ %780, %770 ], [ 0.000000e+00, %758 ]
  %785 = select i1 %684, double %596, double 0.000000e+00
  %786 = getelementptr inbounds %class.Mesh, ptr %764, i64 0, i32 89
  %787 = load ptr, ptr %786, align 8, !tbaa !65
  %788 = getelementptr inbounds i32, ptr %787, i64 %583
  %789 = load i32, ptr %788, align 4, !tbaa !68
  %790 = icmp sgt i32 %789, -1
  br i1 %790, label %791, label %802

791:                                              ; preds = %781
  %792 = zext i32 %789 to i64
  %793 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Hx, align 8, !tbaa !109
  %794 = getelementptr inbounds double, ptr %793, i64 %792
  %795 = load double, ptr %794, align 8, !tbaa !171
  %796 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Ux, align 8, !tbaa !109
  %797 = getelementptr inbounds double, ptr %796, i64 %792
  %798 = load double, ptr %797, align 8, !tbaa !171
  %799 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Vx, align 8, !tbaa !109
  %800 = getelementptr inbounds double, ptr %799, i64 %792
  %801 = load double, ptr %800, align 8, !tbaa !171
  br label %802

802:                                              ; preds = %791, %781
  %803 = phi double [ %795, %791 ], [ %785, %781 ]
  %804 = phi double [ %798, %791 ], [ 0.000000e+00, %781 ]
  %805 = phi double [ %801, %791 ], [ 0.000000e+00, %781 ]
  %806 = getelementptr inbounds %class.Mesh, ptr %764, i64 0, i32 90
  %807 = load ptr, ptr %806, align 8, !tbaa !65
  %808 = getelementptr inbounds i32, ptr %807, i64 %583
  %809 = load i32, ptr %808, align 4, !tbaa !68
  %810 = icmp sgt i32 %809, -1
  br i1 %810, label %811, label %822

811:                                              ; preds = %802
  %812 = zext i32 %809 to i64
  %813 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Hx, align 8, !tbaa !109
  %814 = getelementptr inbounds double, ptr %813, i64 %812
  %815 = load double, ptr %814, align 8, !tbaa !171
  %816 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Ux, align 8, !tbaa !109
  %817 = getelementptr inbounds double, ptr %816, i64 %812
  %818 = load double, ptr %817, align 8, !tbaa !171
  %819 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Vx, align 8, !tbaa !109
  %820 = getelementptr inbounds double, ptr %819, i64 %812
  %821 = load double, ptr %820, align 8, !tbaa !171
  br label %822

822:                                              ; preds = %811, %802
  %823 = phi double [ %815, %811 ], [ %596, %802 ]
  %824 = phi double [ %818, %811 ], [ 0.000000e+00, %802 ]
  %825 = phi double [ %821, %811 ], [ 0.000000e+00, %802 ]
  %826 = select i1 %704, double %596, double 0.000000e+00
  %827 = getelementptr inbounds %class.Mesh, ptr %764, i64 0, i32 91
  %828 = load ptr, ptr %827, align 8, !tbaa !65
  %829 = getelementptr inbounds i32, ptr %828, i64 %583
  %830 = load i32, ptr %829, align 4, !tbaa !68
  %831 = icmp sgt i32 %830, -1
  br i1 %831, label %832, label %843

832:                                              ; preds = %822
  %833 = zext i32 %830 to i64
  %834 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Hx, align 8, !tbaa !109
  %835 = getelementptr inbounds double, ptr %834, i64 %833
  %836 = load double, ptr %835, align 8, !tbaa !171
  %837 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Ux, align 8, !tbaa !109
  %838 = getelementptr inbounds double, ptr %837, i64 %833
  %839 = load double, ptr %838, align 8, !tbaa !171
  %840 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Vx, align 8, !tbaa !109
  %841 = getelementptr inbounds double, ptr %840, i64 %833
  %842 = load double, ptr %841, align 8, !tbaa !171
  br label %843

843:                                              ; preds = %832, %822
  %844 = phi double [ %836, %832 ], [ %826, %822 ]
  %845 = phi double [ %839, %832 ], [ 0.000000e+00, %822 ]
  %846 = phi double [ %842, %832 ], [ 0.000000e+00, %822 ]
  %847 = getelementptr inbounds i32, ptr %25, i64 %639
  %848 = load i32, ptr %847, align 4, !tbaa !68
  %849 = icmp slt i32 %664, %848
  br i1 %849, label %850, label %862

850:                                              ; preds = %843
  %851 = getelementptr inbounds i32, ptr %23, i64 %639
  %852 = load i32, ptr %851, align 4, !tbaa !68
  %853 = sext i32 %852 to i64
  %854 = getelementptr inbounds double, ptr %594, i64 %853
  %855 = load double, ptr %854, align 8, !tbaa !171
  %856 = fadd double %641, %855
  %857 = fmul double %856, 5.000000e-01
  %858 = getelementptr inbounds double, ptr %597, i64 %853
  %859 = load double, ptr %858, align 8, !tbaa !171
  %860 = fadd double %643, %859
  %861 = fmul double %860, 5.000000e-01
  br label %862

862:                                              ; preds = %850, %843
  %863 = phi double [ %861, %850 ], [ %643, %843 ]
  %864 = phi double [ %857, %850 ], [ %641, %843 ]
  %865 = fadd double %614, %720
  %866 = fmul double %865, 5.000000e-01
  %867 = fadd double %616, %721
  %868 = fmul double %867, 5.000000e-01
  %869 = select i1 %704, double %866, double %614
  %870 = select i1 %704, double %868, double %616
  %871 = fdiv double %783, %782
  %872 = call double @llvm.fabs.f64(double %871)
  %873 = fmul double %782, 9.800000e+00
  %874 = call double @sqrt(double noundef %873) #59
  %875 = fsub double %596, %607
  %876 = fsub double %607, %864
  %877 = fsub double %869, %596
  %878 = insertelement <2 x double> poison, double %872, i64 0
  %879 = insertelement <2 x double> %878, double %662, i64 1
  %880 = insertelement <2 x double> poison, double %874, i64 0
  %881 = insertelement <2 x double> %880, double %667, i64 1
  %882 = fadd <2 x double> %879, %881
  %883 = fmul <2 x double> %882, <double 5.000000e-01, double 5.000000e-01>
  %884 = extractelement <2 x double> %883, i64 0
  %885 = fmul double %884, %1
  %886 = extractelement <2 x double> %883, i64 1
  %887 = fdiv double %885, %886
  %888 = fsub double 1.000000e+00, %887
  %889 = fmul double %887, %888
  %890 = fmul double %875, %875
  %891 = fcmp olt double %890, 1.000000e-30
  %892 = fdiv double 1.000000e+00, %890
  %893 = select i1 %891, double 0x46293E5939A08CE9, double %892
  %894 = fmul double %875, %877
  %895 = fmul double %893, %894
  %896 = fmul double %875, %876
  %897 = fmul double %893, %896
  %898 = fmul double %889, 5.000000e-01
  %899 = fcmp olt double %895, 1.000000e+00
  %900 = select i1 %899, double %895, double 1.000000e+00
  %901 = fcmp olt double %897, %900
  %902 = select i1 %901, double %897, double %900
  %903 = fcmp olt double %902, 0.000000e+00
  %904 = fsub double 1.000000e+00, %902
  %905 = select i1 %903, double 1.000000e+00, double %904
  %906 = fmul double %905, %898
  %907 = fmul double %875, %906
  %908 = load i32, ptr %663, align 4, !tbaa !68
  %909 = icmp slt i32 %585, %908
  br i1 %909, label %910, label %962

910:                                              ; preds = %862
  %911 = sext i32 %632 to i64
  %912 = getelementptr inbounds i32, ptr %25, i64 %911
  %913 = load i32, ptr %912, align 4, !tbaa !68
  %914 = sext i32 %699 to i64
  %915 = getelementptr inbounds i32, ptr %25, i64 %914
  %916 = load i32, ptr %915, align 4, !tbaa !68
  %917 = icmp slt i32 %913, %916
  br i1 %917, label %918, label %927

918:                                              ; preds = %910
  %919 = load ptr, ptr %362, align 8, !tbaa !566
  %920 = getelementptr inbounds i32, ptr %23, i64 %914
  %921 = load i32, ptr %920, align 4, !tbaa !68
  %922 = sext i32 %921 to i64
  %923 = getelementptr inbounds double, ptr %919, i64 %922
  %924 = load double, ptr %923, align 8, !tbaa !171
  %925 = fadd double %702, %924
  %926 = fmul double %925, 5.000000e-01
  br label %927

927:                                              ; preds = %918, %910
  %928 = phi double [ %926, %918 ], [ %702, %910 ]
  %929 = fdiv double %804, %803
  %930 = call double @llvm.fabs.f64(double %929)
  %931 = fmul double %803, 9.800000e+00
  %932 = call double @sqrt(double noundef %931) #59
  %933 = fadd double %930, %932
  %934 = fsub double %596, %700
  %935 = fsub double %700, %928
  %936 = fmul double %933, 5.000000e-01
  %937 = fmul double %936, %1
  %938 = fdiv double %937, %886
  %939 = fsub double 1.000000e+00, %938
  %940 = fmul double %938, %939
  %941 = fmul double %934, %934
  %942 = fcmp olt double %941, 1.000000e-30
  %943 = fdiv double 1.000000e+00, %941
  %944 = select i1 %942, double 0x46293E5939A08CE9, double %943
  %945 = fmul double %934, %877
  %946 = fmul double %944, %945
  %947 = fmul double %934, %935
  %948 = fmul double %944, %947
  %949 = fmul double %940, 5.000000e-01
  %950 = fcmp olt double %946, 1.000000e+00
  %951 = select i1 %950, double %946, double 1.000000e+00
  %952 = fcmp olt double %948, %951
  %953 = select i1 %952, double %948, double %951
  %954 = fcmp olt double %953, 0.000000e+00
  %955 = fsub double 1.000000e+00, %953
  %956 = select i1 %954, double 1.000000e+00, double %955
  %957 = fmul double %956, %949
  %958 = fmul double %934, %957
  %959 = fadd double %907, %958
  %960 = fmul double %959, 5.000000e-01
  %961 = fmul double %960, 5.000000e-01
  br label %962

962:                                              ; preds = %927, %862
  %963 = phi double [ %961, %927 ], [ %907, %862 ]
  %964 = load i32, ptr %668, align 4, !tbaa !68
  %965 = getelementptr inbounds i32, ptr %25, i64 %644
  %966 = load i32, ptr %965, align 4, !tbaa !68
  %967 = icmp slt i32 %964, %966
  br i1 %967, label %968, label %982

968:                                              ; preds = %962
  %969 = load ptr, ptr %362, align 8, !tbaa !566
  %970 = getelementptr inbounds i32, ptr %23, i64 %644
  %971 = load i32, ptr %970, align 4, !tbaa !68
  %972 = sext i32 %971 to i64
  %973 = getelementptr inbounds double, ptr %969, i64 %972
  %974 = load double, ptr %973, align 8, !tbaa !171
  %975 = fadd double %646, %974
  %976 = fmul double %975, 5.000000e-01
  %977 = load ptr, ptr %363, align 8, !tbaa !817
  %978 = getelementptr inbounds double, ptr %977, i64 %972
  %979 = load double, ptr %978, align 8, !tbaa !171
  %980 = fadd double %648, %979
  %981 = fmul double %980, 5.000000e-01
  br label %982

982:                                              ; preds = %968, %962
  %983 = phi double [ %981, %968 ], [ %648, %962 ]
  %984 = phi double [ %976, %968 ], [ %646, %962 ]
  %985 = load i32, ptr %663, align 4, !tbaa !68
  %986 = icmp slt i32 %585, %985
  %987 = fadd double %607, %700
  %988 = fmul double %987, 5.000000e-01
  %989 = fadd double %609, %701
  %990 = fmul double %989, 5.000000e-01
  %991 = select i1 %986, double %988, double %607
  %992 = select i1 %986, double %990, double %609
  %993 = fdiv double %824, %823
  %994 = call double @llvm.fabs.f64(double %993)
  %995 = fmul double %823, 9.800000e+00
  %996 = call double @sqrt(double noundef %995) #59
  %997 = fsub double %614, %596
  %998 = fsub double %596, %991
  %999 = fsub double %984, %614
  %1000 = insertelement <2 x double> poison, double %994, i64 0
  %1001 = insertelement <2 x double> %1000, double %662, i64 1
  %1002 = insertelement <2 x double> poison, double %996, i64 0
  %1003 = insertelement <2 x double> %1002, double %672, i64 1
  %1004 = fadd <2 x double> %1001, %1003
  %1005 = fmul <2 x double> %1004, <double 5.000000e-01, double 5.000000e-01>
  %1006 = extractelement <2 x double> %1005, i64 0
  %1007 = fmul double %1006, %1
  %1008 = extractelement <2 x double> %1005, i64 1
  %1009 = fdiv double %1007, %1008
  %1010 = fsub double 1.000000e+00, %1009
  %1011 = fmul double %1009, %1010
  %1012 = fmul double %997, %997
  %1013 = fcmp olt double %1012, 1.000000e-30
  %1014 = fdiv double 1.000000e+00, %1012
  %1015 = select i1 %1013, double 0x46293E5939A08CE9, double %1014
  %1016 = fmul double %997, %999
  %1017 = fmul double %1015, %1016
  %1018 = fmul double %997, %998
  %1019 = fmul double %1015, %1018
  %1020 = fmul double %1011, 5.000000e-01
  %1021 = fcmp olt double %1017, 1.000000e+00
  %1022 = select i1 %1021, double %1017, double 1.000000e+00
  %1023 = fcmp olt double %1019, %1022
  %1024 = select i1 %1023, double %1019, double %1022
  %1025 = fcmp olt double %1024, 0.000000e+00
  %1026 = fsub double 1.000000e+00, %1024
  %1027 = select i1 %1025, double 1.000000e+00, double %1026
  %1028 = fmul double %1020, %1027
  %1029 = fmul double %997, %1028
  %1030 = load i32, ptr %668, align 4, !tbaa !68
  %1031 = icmp slt i32 %585, %1030
  br i1 %1031, label %1032, label %1084

1032:                                             ; preds = %982
  %1033 = sext i32 %634 to i64
  %1034 = getelementptr inbounds i32, ptr %25, i64 %1033
  %1035 = load i32, ptr %1034, align 4, !tbaa !68
  %1036 = sext i32 %719 to i64
  %1037 = getelementptr inbounds i32, ptr %25, i64 %1036
  %1038 = load i32, ptr %1037, align 4, !tbaa !68
  %1039 = icmp slt i32 %1035, %1038
  br i1 %1039, label %1040, label %1049

1040:                                             ; preds = %1032
  %1041 = load ptr, ptr %362, align 8, !tbaa !566
  %1042 = getelementptr inbounds i32, ptr %23, i64 %1036
  %1043 = load i32, ptr %1042, align 4, !tbaa !68
  %1044 = sext i32 %1043 to i64
  %1045 = getelementptr inbounds double, ptr %1041, i64 %1044
  %1046 = load double, ptr %1045, align 8, !tbaa !171
  %1047 = fadd double %722, %1046
  %1048 = fmul double %1047, 5.000000e-01
  br label %1049

1049:                                             ; preds = %1040, %1032
  %1050 = phi double [ %1048, %1040 ], [ %722, %1032 ]
  %1051 = fdiv double %845, %844
  %1052 = call double @llvm.fabs.f64(double %1051)
  %1053 = fmul double %844, 9.800000e+00
  %1054 = call double @sqrt(double noundef %1053) #59
  %1055 = fadd double %1052, %1054
  %1056 = fsub double %720, %596
  %1057 = fsub double %1050, %720
  %1058 = fmul double %1055, 5.000000e-01
  %1059 = fmul double %1058, %1
  %1060 = fdiv double %1059, %1008
  %1061 = fsub double 1.000000e+00, %1060
  %1062 = fmul double %1060, %1061
  %1063 = fmul double %1056, %1056
  %1064 = fcmp olt double %1063, 1.000000e-30
  %1065 = fdiv double 1.000000e+00, %1063
  %1066 = select i1 %1064, double 0x46293E5939A08CE9, double %1065
  %1067 = fmul double %1056, %1057
  %1068 = fmul double %1066, %1067
  %1069 = fmul double %1056, %998
  %1070 = fmul double %1066, %1069
  %1071 = fmul double %1062, 5.000000e-01
  %1072 = fcmp olt double %1068, 1.000000e+00
  %1073 = select i1 %1072, double %1068, double 1.000000e+00
  %1074 = fcmp olt double %1070, %1073
  %1075 = select i1 %1074, double %1070, double %1073
  %1076 = fcmp olt double %1075, 0.000000e+00
  %1077 = fsub double 1.000000e+00, %1075
  %1078 = select i1 %1076, double 1.000000e+00, double %1077
  %1079 = fmul double %1071, %1078
  %1080 = fmul double %1056, %1079
  %1081 = fadd double %1029, %1080
  %1082 = fmul double %1081, 5.000000e-01
  %1083 = fmul double %1082, 5.000000e-01
  br label %1084

1084:                                             ; preds = %1049, %982
  %1085 = phi double [ %1083, %1049 ], [ %1029, %982 ]
  %1086 = call double @sqrt(double noundef %873) #59
  %1087 = fadd double %872, %1086
  %1088 = fsub double %599, %609
  %1089 = fsub double %609, %863
  %1090 = fsub double %870, %599
  %1091 = fmul double %1087, 5.000000e-01
  %1092 = fmul double %1091, %1
  %1093 = fdiv double %1092, %886
  %1094 = fsub double 1.000000e+00, %1093
  %1095 = fmul double %1093, %1094
  %1096 = fmul double %1088, %1088
  %1097 = fcmp olt double %1096, 1.000000e-30
  %1098 = fdiv double 1.000000e+00, %1096
  %1099 = select i1 %1097, double 0x46293E5939A08CE9, double %1098
  %1100 = fmul double %1088, %1090
  %1101 = fmul double %1099, %1100
  %1102 = fmul double %1088, %1089
  %1103 = fmul double %1099, %1102
  %1104 = fmul double %1095, 5.000000e-01
  %1105 = fcmp olt double %1101, 1.000000e+00
  %1106 = select i1 %1105, double %1101, double 1.000000e+00
  %1107 = fcmp olt double %1103, %1106
  %1108 = select i1 %1107, double %1103, double %1106
  %1109 = fcmp olt double %1108, 0.000000e+00
  %1110 = fsub double 1.000000e+00, %1108
  %1111 = select i1 %1109, double 1.000000e+00, double %1110
  %1112 = fmul double %1111, %1104
  %1113 = fmul double %1088, %1112
  %1114 = load i32, ptr %663, align 4, !tbaa !68
  %1115 = icmp slt i32 %585, %1114
  br i1 %1115, label %1116, label %1168

1116:                                             ; preds = %1084
  %1117 = sext i32 %632 to i64
  %1118 = getelementptr inbounds i32, ptr %25, i64 %1117
  %1119 = load i32, ptr %1118, align 4, !tbaa !68
  %1120 = sext i32 %699 to i64
  %1121 = getelementptr inbounds i32, ptr %25, i64 %1120
  %1122 = load i32, ptr %1121, align 4, !tbaa !68
  %1123 = icmp slt i32 %1119, %1122
  br i1 %1123, label %1124, label %1133

1124:                                             ; preds = %1116
  %1125 = load ptr, ptr %363, align 8, !tbaa !817
  %1126 = getelementptr inbounds i32, ptr %23, i64 %1120
  %1127 = load i32, ptr %1126, align 4, !tbaa !68
  %1128 = sext i32 %1127 to i64
  %1129 = getelementptr inbounds double, ptr %1125, i64 %1128
  %1130 = load double, ptr %1129, align 8, !tbaa !171
  %1131 = fadd double %703, %1130
  %1132 = fmul double %1131, 5.000000e-01
  br label %1133

1133:                                             ; preds = %1124, %1116
  %1134 = phi double [ %1132, %1124 ], [ %703, %1116 ]
  %1135 = fdiv double %804, %803
  %1136 = call double @llvm.fabs.f64(double %1135)
  %1137 = fmul double %803, 9.800000e+00
  %1138 = call double @sqrt(double noundef %1137) #59
  %1139 = fadd double %1136, %1138
  %1140 = fsub double %599, %701
  %1141 = fsub double %701, %1134
  %1142 = fmul double %1139, 5.000000e-01
  %1143 = fmul double %1142, %1
  %1144 = fdiv double %1143, %886
  %1145 = fsub double 1.000000e+00, %1144
  %1146 = fmul double %1144, %1145
  %1147 = fmul double %1140, %1140
  %1148 = fcmp olt double %1147, 1.000000e-30
  %1149 = fdiv double 1.000000e+00, %1147
  %1150 = select i1 %1148, double 0x46293E5939A08CE9, double %1149
  %1151 = fmul double %1140, %1090
  %1152 = fmul double %1150, %1151
  %1153 = fmul double %1140, %1141
  %1154 = fmul double %1150, %1153
  %1155 = fmul double %1146, 5.000000e-01
  %1156 = fcmp olt double %1152, 1.000000e+00
  %1157 = select i1 %1156, double %1152, double 1.000000e+00
  %1158 = fcmp olt double %1154, %1157
  %1159 = select i1 %1158, double %1154, double %1157
  %1160 = fcmp olt double %1159, 0.000000e+00
  %1161 = fsub double 1.000000e+00, %1159
  %1162 = select i1 %1160, double 1.000000e+00, double %1161
  %1163 = fmul double %1162, %1155
  %1164 = fmul double %1140, %1163
  %1165 = fadd double %1113, %1164
  %1166 = fmul double %1165, 5.000000e-01
  %1167 = fmul double %1166, 5.000000e-01
  br label %1168

1168:                                             ; preds = %1133, %1084
  %1169 = phi double [ %1167, %1133 ], [ %1113, %1084 ]
  %1170 = call double @sqrt(double noundef %995) #59
  %1171 = fadd double %994, %1170
  %1172 = fsub double %616, %599
  %1173 = fsub double %599, %992
  %1174 = fsub double %983, %616
  %1175 = fmul double %1171, 5.000000e-01
  %1176 = fmul double %1175, %1
  %1177 = fdiv double %1176, %1008
  %1178 = fsub double 1.000000e+00, %1177
  %1179 = fmul double %1177, %1178
  %1180 = fmul double %1172, %1172
  %1181 = fcmp olt double %1180, 1.000000e-30
  %1182 = fdiv double 1.000000e+00, %1180
  %1183 = select i1 %1181, double 0x46293E5939A08CE9, double %1182
  %1184 = fmul double %1172, %1174
  %1185 = fmul double %1183, %1184
  %1186 = fmul double %1172, %1173
  %1187 = fmul double %1183, %1186
  %1188 = fmul double %1179, 5.000000e-01
  %1189 = fcmp olt double %1185, 1.000000e+00
  %1190 = select i1 %1189, double %1185, double 1.000000e+00
  %1191 = fcmp olt double %1187, %1190
  %1192 = select i1 %1191, double %1187, double %1190
  %1193 = fcmp olt double %1192, 0.000000e+00
  %1194 = fsub double 1.000000e+00, %1192
  %1195 = select i1 %1193, double 1.000000e+00, double %1194
  %1196 = fmul double %1195, %1188
  %1197 = fmul double %1172, %1196
  %1198 = load i32, ptr %668, align 4, !tbaa !68
  %1199 = icmp slt i32 %585, %1198
  br i1 %1199, label %1200, label %1252

1200:                                             ; preds = %1168
  %1201 = sext i32 %634 to i64
  %1202 = getelementptr inbounds i32, ptr %25, i64 %1201
  %1203 = load i32, ptr %1202, align 4, !tbaa !68
  %1204 = sext i32 %719 to i64
  %1205 = getelementptr inbounds i32, ptr %25, i64 %1204
  %1206 = load i32, ptr %1205, align 4, !tbaa !68
  %1207 = icmp slt i32 %1203, %1206
  br i1 %1207, label %1208, label %1217

1208:                                             ; preds = %1200
  %1209 = load ptr, ptr %363, align 8, !tbaa !817
  %1210 = getelementptr inbounds i32, ptr %23, i64 %1204
  %1211 = load i32, ptr %1210, align 4, !tbaa !68
  %1212 = sext i32 %1211 to i64
  %1213 = getelementptr inbounds double, ptr %1209, i64 %1212
  %1214 = load double, ptr %1213, align 8, !tbaa !171
  %1215 = fadd double %723, %1214
  %1216 = fmul double %1215, 5.000000e-01
  br label %1217

1217:                                             ; preds = %1208, %1200
  %1218 = phi double [ %1216, %1208 ], [ %723, %1200 ]
  %1219 = fdiv double %845, %844
  %1220 = call double @llvm.fabs.f64(double %1219)
  %1221 = fmul double %844, 9.800000e+00
  %1222 = call double @sqrt(double noundef %1221) #59
  %1223 = fadd double %1220, %1222
  %1224 = fsub double %721, %599
  %1225 = fsub double %1218, %721
  %1226 = fmul double %1223, 5.000000e-01
  %1227 = fmul double %1226, %1
  %1228 = fdiv double %1227, %1008
  %1229 = fsub double 1.000000e+00, %1228
  %1230 = fmul double %1228, %1229
  %1231 = fmul double %1224, %1224
  %1232 = fcmp olt double %1231, 1.000000e-30
  %1233 = fdiv double 1.000000e+00, %1231
  %1234 = select i1 %1232, double 0x46293E5939A08CE9, double %1233
  %1235 = fmul double %1224, %1225
  %1236 = fmul double %1234, %1235
  %1237 = fmul double %1224, %1173
  %1238 = fmul double %1234, %1237
  %1239 = fmul double %1230, 5.000000e-01
  %1240 = fcmp olt double %1236, 1.000000e+00
  %1241 = select i1 %1240, double %1236, double 1.000000e+00
  %1242 = fcmp olt double %1238, %1241
  %1243 = select i1 %1242, double %1238, double %1241
  %1244 = fcmp olt double %1243, 0.000000e+00
  %1245 = fsub double 1.000000e+00, %1243
  %1246 = select i1 %1244, double 1.000000e+00, double %1245
  %1247 = fmul double %1239, %1246
  %1248 = fmul double %1224, %1247
  %1249 = fadd double %1197, %1248
  %1250 = fmul double %1249, 5.000000e-01
  %1251 = fmul double %1250, 5.000000e-01
  br label %1252

1252:                                             ; preds = %1217, %1168
  %1253 = phi double [ %1251, %1217 ], [ %1197, %1168 ]
  %1254 = load i32, ptr %679, align 4, !tbaa !68
  %1255 = getelementptr inbounds i32, ptr %25, i64 %654
  %1256 = load i32, ptr %1255, align 4, !tbaa !68
  %1257 = icmp slt i32 %1254, %1256
  %1258 = load ptr, ptr %362, align 8, !tbaa !566
  br i1 %1257, label %1259, label %1272

1259:                                             ; preds = %1252
  %1260 = getelementptr inbounds i32, ptr %19, i64 %654
  %1261 = load i32, ptr %1260, align 4, !tbaa !68
  %1262 = sext i32 %1261 to i64
  %1263 = getelementptr inbounds double, ptr %1258, i64 %1262
  %1264 = load double, ptr %1263, align 8, !tbaa !171
  %1265 = fadd double %656, %1264
  %1266 = fmul double %1265, 5.000000e-01
  %1267 = load ptr, ptr %364, align 8, !tbaa !818
  %1268 = getelementptr inbounds double, ptr %1267, i64 %1262
  %1269 = load double, ptr %1268, align 8, !tbaa !171
  %1270 = fadd double %658, %1269
  %1271 = fmul double %1270, 5.000000e-01
  br label %1272

1272:                                             ; preds = %1259, %1252
  %1273 = phi double [ %1266, %1259 ], [ %656, %1252 ]
  %1274 = phi double [ %1271, %1259 ], [ %658, %1252 ]
  %1275 = load i32, ptr %673, align 4, !tbaa !68
  %1276 = icmp slt i32 %585, %1275
  %1277 = fadd double %621, %760
  %1278 = fmul double %1277, 5.000000e-01
  %1279 = fadd double %623, %761
  %1280 = fmul double %1279, 5.000000e-01
  %1281 = select i1 %1276, double %1278, double %621
  %1282 = select i1 %1276, double %1280, double %623
  %1283 = getelementptr inbounds double, ptr %1258, i64 %583
  %1284 = load double, ptr %1283, align 8, !tbaa !171
  %1285 = load ptr, ptr %6, align 8, !tbaa !816
  %1286 = getelementptr inbounds %class.Mesh, ptr %1285, i64 0, i32 103
  %1287 = load ptr, ptr %1286, align 8, !tbaa !65
  %1288 = getelementptr inbounds i32, ptr %1287, i64 %583
  %1289 = load i32, ptr %1288, align 4, !tbaa !68
  %1290 = icmp sgt i32 %1289, -1
  br i1 %1290, label %1291, label %1302

1291:                                             ; preds = %1272
  %1292 = zext i32 %1289 to i64
  %1293 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Hy, align 8, !tbaa !109
  %1294 = getelementptr inbounds double, ptr %1293, i64 %1292
  %1295 = load double, ptr %1294, align 8, !tbaa !171
  %1296 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Uy, align 8, !tbaa !109
  %1297 = getelementptr inbounds double, ptr %1296, i64 %1292
  %1298 = load double, ptr %1297, align 8, !tbaa !171
  %1299 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Vy, align 8, !tbaa !109
  %1300 = getelementptr inbounds double, ptr %1299, i64 %1292
  %1301 = load double, ptr %1300, align 8, !tbaa !171
  br label %1302

1302:                                             ; preds = %1291, %1272
  %1303 = phi double [ %1295, %1291 ], [ %1284, %1272 ]
  %1304 = phi double [ %1298, %1291 ], [ 0.000000e+00, %1272 ]
  %1305 = phi double [ %1301, %1291 ], [ 0.000000e+00, %1272 ]
  %1306 = icmp slt i32 %585, %1254
  %1307 = select i1 %1306, double %1284, double 0.000000e+00
  %1308 = getelementptr inbounds %class.Mesh, ptr %1285, i64 0, i32 104
  %1309 = load ptr, ptr %1308, align 8, !tbaa !65
  %1310 = getelementptr inbounds i32, ptr %1309, i64 %583
  %1311 = load i32, ptr %1310, align 4, !tbaa !68
  %1312 = icmp sgt i32 %1311, -1
  br i1 %1312, label %1313, label %1324

1313:                                             ; preds = %1302
  %1314 = zext i32 %1311 to i64
  %1315 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Hy, align 8, !tbaa !109
  %1316 = getelementptr inbounds double, ptr %1315, i64 %1314
  %1317 = load double, ptr %1316, align 8, !tbaa !171
  %1318 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Uy, align 8, !tbaa !109
  %1319 = getelementptr inbounds double, ptr %1318, i64 %1314
  %1320 = load double, ptr %1319, align 8, !tbaa !171
  %1321 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Vy, align 8, !tbaa !109
  %1322 = getelementptr inbounds double, ptr %1321, i64 %1314
  %1323 = load double, ptr %1322, align 8, !tbaa !171
  br label %1324

1324:                                             ; preds = %1313, %1302
  %1325 = phi double [ %1317, %1313 ], [ %1307, %1302 ]
  %1326 = phi double [ %1320, %1313 ], [ 0.000000e+00, %1302 ]
  %1327 = phi double [ %1323, %1313 ], [ 0.000000e+00, %1302 ]
  %1328 = getelementptr inbounds %class.Mesh, ptr %1285, i64 0, i32 105
  %1329 = load ptr, ptr %1328, align 8, !tbaa !65
  %1330 = getelementptr inbounds i32, ptr %1329, i64 %583
  %1331 = load i32, ptr %1330, align 4, !tbaa !68
  %1332 = icmp sgt i32 %1331, -1
  br i1 %1332, label %1333, label %1344

1333:                                             ; preds = %1324
  %1334 = zext i32 %1331 to i64
  %1335 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Hy, align 8, !tbaa !109
  %1336 = getelementptr inbounds double, ptr %1335, i64 %1334
  %1337 = load double, ptr %1336, align 8, !tbaa !171
  %1338 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Uy, align 8, !tbaa !109
  %1339 = getelementptr inbounds double, ptr %1338, i64 %1334
  %1340 = load double, ptr %1339, align 8, !tbaa !171
  %1341 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Vy, align 8, !tbaa !109
  %1342 = getelementptr inbounds double, ptr %1341, i64 %1334
  %1343 = load double, ptr %1342, align 8, !tbaa !171
  br label %1344

1344:                                             ; preds = %1333, %1324
  %1345 = phi double [ %1337, %1333 ], [ %1284, %1324 ]
  %1346 = phi double [ %1340, %1333 ], [ 0.000000e+00, %1324 ]
  %1347 = phi double [ %1343, %1333 ], [ 0.000000e+00, %1324 ]
  %1348 = select i1 %1276, double %1284, double 0.000000e+00
  %1349 = getelementptr inbounds %class.Mesh, ptr %1285, i64 0, i32 106
  %1350 = load ptr, ptr %1349, align 8, !tbaa !65
  %1351 = getelementptr inbounds i32, ptr %1350, i64 %583
  %1352 = load i32, ptr %1351, align 4, !tbaa !68
  %1353 = icmp sgt i32 %1352, -1
  br i1 %1353, label %1354, label %1365

1354:                                             ; preds = %1344
  %1355 = zext i32 %1352 to i64
  %1356 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Hy, align 8, !tbaa !109
  %1357 = getelementptr inbounds double, ptr %1356, i64 %1355
  %1358 = load double, ptr %1357, align 8, !tbaa !171
  %1359 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Uy, align 8, !tbaa !109
  %1360 = getelementptr inbounds double, ptr %1359, i64 %1355
  %1361 = load double, ptr %1360, align 8, !tbaa !171
  %1362 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE2Vy, align 8, !tbaa !109
  %1363 = getelementptr inbounds double, ptr %1362, i64 %1355
  %1364 = load double, ptr %1363, align 8, !tbaa !171
  br label %1365

1365:                                             ; preds = %1354, %1344
  %1366 = phi double [ %1358, %1354 ], [ %1348, %1344 ]
  %1367 = phi double [ %1361, %1354 ], [ 0.000000e+00, %1344 ]
  %1368 = phi double [ %1364, %1354 ], [ 0.000000e+00, %1344 ]
  %1369 = fdiv double %1305, %1303
  %1370 = call double @llvm.fabs.f64(double %1369)
  %1371 = fmul double %1303, 9.800000e+00
  %1372 = call double @sqrt(double noundef %1371) #59
  %1373 = fsub double %596, %628
  %1374 = fsub double %628, %1273
  %1375 = fsub double %1281, %596
  %1376 = insertelement <2 x double> poison, double %1370, i64 0
  %1377 = insertelement <2 x double> %1376, double %662, i64 1
  %1378 = insertelement <2 x double> poison, double %1372, i64 0
  %1379 = insertelement <2 x double> %1378, double %683, i64 1
  %1380 = fadd <2 x double> %1377, %1379
  %1381 = fmul <2 x double> %1380, <double 5.000000e-01, double 5.000000e-01>
  %1382 = extractelement <2 x double> %1381, i64 0
  %1383 = fmul double %1382, %1
  %1384 = extractelement <2 x double> %1381, i64 1
  %1385 = fdiv double %1383, %1384
  %1386 = fsub double 1.000000e+00, %1385
  %1387 = fmul double %1385, %1386
  %1388 = fmul double %1373, %1373
  %1389 = fcmp olt double %1388, 1.000000e-30
  %1390 = fdiv double 1.000000e+00, %1388
  %1391 = select i1 %1389, double 0x46293E5939A08CE9, double %1390
  %1392 = fmul double %1373, %1375
  %1393 = fmul double %1391, %1392
  %1394 = fmul double %1373, %1374
  %1395 = fmul double %1391, %1394
  %1396 = fmul double %1387, 5.000000e-01
  %1397 = fcmp olt double %1393, 1.000000e+00
  %1398 = select i1 %1397, double %1393, double 1.000000e+00
  %1399 = fcmp olt double %1395, %1398
  %1400 = select i1 %1399, double %1395, double %1398
  %1401 = fcmp olt double %1400, 0.000000e+00
  %1402 = fsub double 1.000000e+00, %1400
  %1403 = select i1 %1401, double 1.000000e+00, double %1402
  %1404 = fmul double %1403, %1396
  %1405 = fmul double %1373, %1404
  %1406 = load i32, ptr %679, align 4, !tbaa !68
  %1407 = icmp slt i32 %585, %1406
  br i1 %1407, label %1408, label %1460

1408:                                             ; preds = %1365
  %1409 = sext i32 %638 to i64
  %1410 = getelementptr inbounds i32, ptr %25, i64 %1409
  %1411 = load i32, ptr %1410, align 4, !tbaa !68
  %1412 = sext i32 %739 to i64
  %1413 = getelementptr inbounds i32, ptr %25, i64 %1412
  %1414 = load i32, ptr %1413, align 4, !tbaa !68
  %1415 = icmp slt i32 %1411, %1414
  br i1 %1415, label %1416, label %1425

1416:                                             ; preds = %1408
  %1417 = load ptr, ptr %362, align 8, !tbaa !566
  %1418 = getelementptr inbounds i32, ptr %19, i64 %1412
  %1419 = load i32, ptr %1418, align 4, !tbaa !68
  %1420 = sext i32 %1419 to i64
  %1421 = getelementptr inbounds double, ptr %1417, i64 %1420
  %1422 = load double, ptr %1421, align 8, !tbaa !171
  %1423 = fadd double %742, %1422
  %1424 = fmul double %1423, 5.000000e-01
  br label %1425

1425:                                             ; preds = %1416, %1408
  %1426 = phi double [ %1424, %1416 ], [ %742, %1408 ]
  %1427 = fdiv double %1327, %1325
  %1428 = call double @llvm.fabs.f64(double %1427)
  %1429 = fmul double %1325, 9.800000e+00
  %1430 = call double @sqrt(double noundef %1429) #59
  %1431 = fadd double %1428, %1430
  %1432 = fsub double %596, %740
  %1433 = fsub double %740, %1426
  %1434 = fmul double %1431, 5.000000e-01
  %1435 = fmul double %1434, %1
  %1436 = fdiv double %1435, %1384
  %1437 = fsub double 1.000000e+00, %1436
  %1438 = fmul double %1436, %1437
  %1439 = fmul double %1432, %1432
  %1440 = fcmp olt double %1439, 1.000000e-30
  %1441 = fdiv double 1.000000e+00, %1439
  %1442 = select i1 %1440, double 0x46293E5939A08CE9, double %1441
  %1443 = fmul double %1432, %1375
  %1444 = fmul double %1442, %1443
  %1445 = fmul double %1432, %1433
  %1446 = fmul double %1442, %1445
  %1447 = fmul double %1438, 5.000000e-01
  %1448 = fcmp olt double %1444, 1.000000e+00
  %1449 = select i1 %1448, double %1444, double 1.000000e+00
  %1450 = fcmp olt double %1446, %1449
  %1451 = select i1 %1450, double %1446, double %1449
  %1452 = fcmp olt double %1451, 0.000000e+00
  %1453 = fsub double 1.000000e+00, %1451
  %1454 = select i1 %1452, double 1.000000e+00, double %1453
  %1455 = fmul double %1454, %1447
  %1456 = fmul double %1432, %1455
  %1457 = fadd double %1405, %1456
  %1458 = fmul double %1457, 5.000000e-01
  %1459 = fmul double %1458, 5.000000e-01
  br label %1460

1460:                                             ; preds = %1425, %1365
  %1461 = phi double [ %1459, %1425 ], [ %1405, %1365 ]
  %1462 = load i32, ptr %673, align 4, !tbaa !68
  %1463 = getelementptr inbounds i32, ptr %25, i64 %649
  %1464 = load i32, ptr %1463, align 4, !tbaa !68
  %1465 = icmp slt i32 %1462, %1464
  br i1 %1465, label %1466, label %1480

1466:                                             ; preds = %1460
  %1467 = load ptr, ptr %362, align 8, !tbaa !566
  %1468 = getelementptr inbounds i32, ptr %19, i64 %649
  %1469 = load i32, ptr %1468, align 4, !tbaa !68
  %1470 = sext i32 %1469 to i64
  %1471 = getelementptr inbounds double, ptr %1467, i64 %1470
  %1472 = load double, ptr %1471, align 8, !tbaa !171
  %1473 = fadd double %651, %1472
  %1474 = fmul double %1473, 5.000000e-01
  %1475 = load ptr, ptr %364, align 8, !tbaa !818
  %1476 = getelementptr inbounds double, ptr %1475, i64 %1470
  %1477 = load double, ptr %1476, align 8, !tbaa !171
  %1478 = fadd double %653, %1477
  %1479 = fmul double %1478, 5.000000e-01
  br label %1480

1480:                                             ; preds = %1466, %1460
  %1481 = phi double [ %1474, %1466 ], [ %651, %1460 ]
  %1482 = phi double [ %1479, %1466 ], [ %653, %1460 ]
  %1483 = load i32, ptr %679, align 4, !tbaa !68
  %1484 = icmp slt i32 %585, %1483
  %1485 = fadd double %628, %740
  %1486 = fmul double %1485, 5.000000e-01
  %1487 = fadd double %630, %741
  %1488 = fmul double %1487, 5.000000e-01
  %1489 = select i1 %1484, double %1486, double %628
  %1490 = select i1 %1484, double %1488, double %630
  %1491 = fdiv double %1347, %1345
  %1492 = call double @llvm.fabs.f64(double %1491)
  %1493 = fmul double %1345, 9.800000e+00
  %1494 = call double @sqrt(double noundef %1493) #59
  %1495 = fsub double %621, %596
  %1496 = fsub double %596, %1489
  %1497 = fsub double %1481, %621
  %1498 = insertelement <2 x double> poison, double %1492, i64 0
  %1499 = insertelement <2 x double> %1498, double %662, i64 1
  %1500 = insertelement <2 x double> poison, double %1494, i64 0
  %1501 = insertelement <2 x double> %1500, double %678, i64 1
  %1502 = fadd <2 x double> %1499, %1501
  %1503 = fmul <2 x double> %1502, <double 5.000000e-01, double 5.000000e-01>
  %1504 = extractelement <2 x double> %1503, i64 0
  %1505 = fmul double %1504, %1
  %1506 = extractelement <2 x double> %1503, i64 1
  %1507 = fdiv double %1505, %1506
  %1508 = fsub double 1.000000e+00, %1507
  %1509 = fmul double %1507, %1508
  %1510 = fmul double %1495, %1495
  %1511 = fcmp olt double %1510, 1.000000e-30
  %1512 = fdiv double 1.000000e+00, %1510
  %1513 = select i1 %1511, double 0x46293E5939A08CE9, double %1512
  %1514 = fmul double %1495, %1497
  %1515 = fmul double %1513, %1514
  %1516 = fmul double %1495, %1496
  %1517 = fmul double %1513, %1516
  %1518 = fmul double %1509, 5.000000e-01
  %1519 = fcmp olt double %1515, 1.000000e+00
  %1520 = select i1 %1519, double %1515, double 1.000000e+00
  %1521 = fcmp olt double %1517, %1520
  %1522 = select i1 %1521, double %1517, double %1520
  %1523 = fcmp olt double %1522, 0.000000e+00
  %1524 = fsub double 1.000000e+00, %1522
  %1525 = select i1 %1523, double 1.000000e+00, double %1524
  %1526 = fmul double %1518, %1525
  %1527 = fmul double %1495, %1526
  %1528 = load i32, ptr %673, align 4, !tbaa !68
  %1529 = icmp slt i32 %585, %1528
  br i1 %1529, label %1530, label %1582

1530:                                             ; preds = %1480
  %1531 = sext i32 %636 to i64
  %1532 = getelementptr inbounds i32, ptr %25, i64 %1531
  %1533 = load i32, ptr %1532, align 4, !tbaa !68
  %1534 = sext i32 %759 to i64
  %1535 = getelementptr inbounds i32, ptr %25, i64 %1534
  %1536 = load i32, ptr %1535, align 4, !tbaa !68
  %1537 = icmp slt i32 %1533, %1536
  br i1 %1537, label %1538, label %1547

1538:                                             ; preds = %1530
  %1539 = load ptr, ptr %362, align 8, !tbaa !566
  %1540 = getelementptr inbounds i32, ptr %19, i64 %1534
  %1541 = load i32, ptr %1540, align 4, !tbaa !68
  %1542 = sext i32 %1541 to i64
  %1543 = getelementptr inbounds double, ptr %1539, i64 %1542
  %1544 = load double, ptr %1543, align 8, !tbaa !171
  %1545 = fadd double %762, %1544
  %1546 = fmul double %1545, 5.000000e-01
  br label %1547

1547:                                             ; preds = %1538, %1530
  %1548 = phi double [ %1546, %1538 ], [ %762, %1530 ]
  %1549 = fdiv double %1368, %1366
  %1550 = call double @llvm.fabs.f64(double %1549)
  %1551 = fmul double %1366, 9.800000e+00
  %1552 = call double @sqrt(double noundef %1551) #59
  %1553 = fadd double %1550, %1552
  %1554 = fsub double %760, %596
  %1555 = fsub double %1548, %760
  %1556 = fmul double %1553, 5.000000e-01
  %1557 = fmul double %1556, %1
  %1558 = fdiv double %1557, %1506
  %1559 = fsub double 1.000000e+00, %1558
  %1560 = fmul double %1558, %1559
  %1561 = fmul double %1554, %1554
  %1562 = fcmp olt double %1561, 1.000000e-30
  %1563 = fdiv double 1.000000e+00, %1561
  %1564 = select i1 %1562, double 0x46293E5939A08CE9, double %1563
  %1565 = fmul double %1554, %1555
  %1566 = fmul double %1564, %1565
  %1567 = fmul double %1554, %1496
  %1568 = fmul double %1564, %1567
  %1569 = fmul double %1560, 5.000000e-01
  %1570 = fcmp olt double %1566, 1.000000e+00
  %1571 = select i1 %1570, double %1566, double 1.000000e+00
  %1572 = fcmp olt double %1568, %1571
  %1573 = select i1 %1572, double %1568, double %1571
  %1574 = fcmp olt double %1573, 0.000000e+00
  %1575 = fsub double 1.000000e+00, %1573
  %1576 = select i1 %1574, double 1.000000e+00, double %1575
  %1577 = fmul double %1569, %1576
  %1578 = fmul double %1554, %1577
  %1579 = fadd double %1527, %1578
  %1580 = fmul double %1579, 5.000000e-01
  %1581 = fmul double %1580, 5.000000e-01
  br label %1582

1582:                                             ; preds = %1547, %1480
  %1583 = phi double [ %1581, %1547 ], [ %1527, %1480 ]
  %1584 = call double @sqrt(double noundef %1371) #59
  %1585 = fadd double %1370, %1584
  %1586 = fsub double %602, %630
  %1587 = fsub double %630, %1274
  %1588 = fsub double %1282, %602
  %1589 = fmul double %1585, 5.000000e-01
  %1590 = fmul double %1589, %1
  %1591 = fdiv double %1590, %1384
  %1592 = fsub double 1.000000e+00, %1591
  %1593 = fmul double %1591, %1592
  %1594 = fmul double %1586, %1586
  %1595 = fcmp olt double %1594, 1.000000e-30
  %1596 = fdiv double 1.000000e+00, %1594
  %1597 = select i1 %1595, double 0x46293E5939A08CE9, double %1596
  %1598 = fmul double %1586, %1588
  %1599 = fmul double %1597, %1598
  %1600 = fmul double %1586, %1587
  %1601 = fmul double %1597, %1600
  %1602 = fmul double %1593, 5.000000e-01
  %1603 = fcmp olt double %1599, 1.000000e+00
  %1604 = select i1 %1603, double %1599, double 1.000000e+00
  %1605 = fcmp olt double %1601, %1604
  %1606 = select i1 %1605, double %1601, double %1604
  %1607 = fcmp olt double %1606, 0.000000e+00
  %1608 = fsub double 1.000000e+00, %1606
  %1609 = select i1 %1607, double 1.000000e+00, double %1608
  %1610 = fmul double %1609, %1602
  %1611 = fmul double %1586, %1610
  %1612 = load i32, ptr %679, align 4, !tbaa !68
  %1613 = icmp slt i32 %585, %1612
  br i1 %1613, label %1614, label %1666

1614:                                             ; preds = %1582
  %1615 = sext i32 %638 to i64
  %1616 = getelementptr inbounds i32, ptr %25, i64 %1615
  %1617 = load i32, ptr %1616, align 4, !tbaa !68
  %1618 = sext i32 %739 to i64
  %1619 = getelementptr inbounds i32, ptr %25, i64 %1618
  %1620 = load i32, ptr %1619, align 4, !tbaa !68
  %1621 = icmp slt i32 %1617, %1620
  br i1 %1621, label %1622, label %1631

1622:                                             ; preds = %1614
  %1623 = load ptr, ptr %364, align 8, !tbaa !818
  %1624 = getelementptr inbounds i32, ptr %19, i64 %1618
  %1625 = load i32, ptr %1624, align 4, !tbaa !68
  %1626 = sext i32 %1625 to i64
  %1627 = getelementptr inbounds double, ptr %1623, i64 %1626
  %1628 = load double, ptr %1627, align 8, !tbaa !171
  %1629 = fadd double %743, %1628
  %1630 = fmul double %1629, 5.000000e-01
  br label %1631

1631:                                             ; preds = %1622, %1614
  %1632 = phi double [ %1630, %1622 ], [ %743, %1614 ]
  %1633 = fdiv double %1327, %1325
  %1634 = call double @llvm.fabs.f64(double %1633)
  %1635 = fmul double %1325, 9.800000e+00
  %1636 = call double @sqrt(double noundef %1635) #59
  %1637 = fadd double %1634, %1636
  %1638 = fsub double %602, %741
  %1639 = fsub double %741, %1632
  %1640 = fmul double %1637, 5.000000e-01
  %1641 = fmul double %1640, %1
  %1642 = fdiv double %1641, %1384
  %1643 = fsub double 1.000000e+00, %1642
  %1644 = fmul double %1642, %1643
  %1645 = fmul double %1638, %1638
  %1646 = fcmp olt double %1645, 1.000000e-30
  %1647 = fdiv double 1.000000e+00, %1645
  %1648 = select i1 %1646, double 0x46293E5939A08CE9, double %1647
  %1649 = fmul double %1638, %1588
  %1650 = fmul double %1648, %1649
  %1651 = fmul double %1638, %1639
  %1652 = fmul double %1648, %1651
  %1653 = fmul double %1644, 5.000000e-01
  %1654 = fcmp olt double %1650, 1.000000e+00
  %1655 = select i1 %1654, double %1650, double 1.000000e+00
  %1656 = fcmp olt double %1652, %1655
  %1657 = select i1 %1656, double %1652, double %1655
  %1658 = fcmp olt double %1657, 0.000000e+00
  %1659 = fsub double 1.000000e+00, %1657
  %1660 = select i1 %1658, double 1.000000e+00, double %1659
  %1661 = fmul double %1660, %1653
  %1662 = fmul double %1638, %1661
  %1663 = fadd double %1611, %1662
  %1664 = fmul double %1663, 5.000000e-01
  %1665 = fmul double %1664, 5.000000e-01
  br label %1666

1666:                                             ; preds = %1631, %1582
  %1667 = phi double [ %1665, %1631 ], [ %1611, %1582 ]
  %1668 = call double @sqrt(double noundef %1493) #59
  %1669 = fadd double %1492, %1668
  %1670 = fsub double %623, %602
  %1671 = fsub double %602, %1490
  %1672 = fsub double %1482, %623
  %1673 = fmul double %1669, 5.000000e-01
  %1674 = fmul double %1673, %1
  %1675 = fdiv double %1674, %1506
  %1676 = fsub double 1.000000e+00, %1675
  %1677 = fmul double %1675, %1676
  %1678 = fmul double %1670, %1670
  %1679 = fcmp olt double %1678, 1.000000e-30
  %1680 = fdiv double 1.000000e+00, %1678
  %1681 = select i1 %1679, double 0x46293E5939A08CE9, double %1680
  %1682 = fmul double %1670, %1672
  %1683 = fmul double %1681, %1682
  %1684 = fmul double %1670, %1671
  %1685 = fmul double %1681, %1684
  %1686 = fmul double %1677, 5.000000e-01
  %1687 = fcmp olt double %1683, 1.000000e+00
  %1688 = select i1 %1687, double %1683, double 1.000000e+00
  %1689 = fcmp olt double %1685, %1688
  %1690 = select i1 %1689, double %1685, double %1688
  %1691 = fcmp olt double %1690, 0.000000e+00
  %1692 = fsub double 1.000000e+00, %1690
  %1693 = select i1 %1691, double 1.000000e+00, double %1692
  %1694 = fmul double %1693, %1686
  %1695 = fmul double %1670, %1694
  %1696 = load i32, ptr %673, align 4, !tbaa !68
  %1697 = icmp slt i32 %585, %1696
  br i1 %1697, label %1698, label %1750

1698:                                             ; preds = %1666
  %1699 = sext i32 %636 to i64
  %1700 = getelementptr inbounds i32, ptr %25, i64 %1699
  %1701 = load i32, ptr %1700, align 4, !tbaa !68
  %1702 = sext i32 %759 to i64
  %1703 = getelementptr inbounds i32, ptr %25, i64 %1702
  %1704 = load i32, ptr %1703, align 4, !tbaa !68
  %1705 = icmp slt i32 %1701, %1704
  br i1 %1705, label %1706, label %1715

1706:                                             ; preds = %1698
  %1707 = load ptr, ptr %364, align 8, !tbaa !818
  %1708 = getelementptr inbounds i32, ptr %19, i64 %1702
  %1709 = load i32, ptr %1708, align 4, !tbaa !68
  %1710 = sext i32 %1709 to i64
  %1711 = getelementptr inbounds double, ptr %1707, i64 %1710
  %1712 = load double, ptr %1711, align 8, !tbaa !171
  %1713 = fadd double %763, %1712
  %1714 = fmul double %1713, 5.000000e-01
  br label %1715

1715:                                             ; preds = %1706, %1698
  %1716 = phi double [ %1714, %1706 ], [ %763, %1698 ]
  %1717 = fdiv double %1368, %1366
  %1718 = call double @llvm.fabs.f64(double %1717)
  %1719 = fmul double %1366, 9.800000e+00
  %1720 = call double @sqrt(double noundef %1719) #59
  %1721 = fadd double %1718, %1720
  %1722 = fsub double %761, %602
  %1723 = fsub double %1716, %761
  %1724 = fmul double %1721, 5.000000e-01
  %1725 = fmul double %1724, %1
  %1726 = fdiv double %1725, %1506
  %1727 = fsub double 1.000000e+00, %1726
  %1728 = fmul double %1726, %1727
  %1729 = fmul double %1722, %1722
  %1730 = fcmp olt double %1729, 1.000000e-30
  %1731 = fdiv double 1.000000e+00, %1729
  %1732 = select i1 %1730, double 0x46293E5939A08CE9, double %1731
  %1733 = fmul double %1722, %1723
  %1734 = fmul double %1732, %1733
  %1735 = fmul double %1722, %1671
  %1736 = fmul double %1732, %1735
  %1737 = fmul double %1728, 5.000000e-01
  %1738 = fcmp olt double %1734, 1.000000e+00
  %1739 = select i1 %1738, double %1734, double 1.000000e+00
  %1740 = fcmp olt double %1736, %1739
  %1741 = select i1 %1740, double %1736, double %1739
  %1742 = fcmp olt double %1741, 0.000000e+00
  %1743 = fsub double 1.000000e+00, %1741
  %1744 = select i1 %1742, double 1.000000e+00, double %1743
  %1745 = fmul double %1737, %1744
  %1746 = fmul double %1722, %1745
  %1747 = fadd double %1695, %1746
  %1748 = fmul double %1747, 5.000000e-01
  %1749 = fmul double %1748, 5.000000e-01
  br label %1750

1750:                                             ; preds = %1715, %1666
  %1751 = phi double [ %1749, %1715 ], [ %1695, %1666 ]
  %1752 = fmul double %783, %783
  %1753 = fdiv double %1752, %782
  %1754 = fmul double %782, %782
  %1755 = fmul double %1754, 4.900000e+00
  %1756 = fadd double %1755, %1753
  %1757 = fmul double %783, %784
  %1758 = fdiv double %1757, %782
  %1759 = fmul double %824, %824
  %1760 = fdiv double %1759, %823
  %1761 = fmul double %823, %823
  %1762 = fmul double %1761, 4.900000e+00
  %1763 = fadd double %1762, %1760
  %1764 = fmul double %824, %825
  %1765 = fdiv double %1764, %823
  %1766 = fmul double %1304, %1305
  %1767 = fdiv double %1766, %1303
  %1768 = fmul double %1305, %1305
  %1769 = fdiv double %1768, %1303
  %1770 = fmul double %1303, %1303
  %1771 = fmul double %1770, 4.900000e+00
  %1772 = fadd double %1771, %1769
  %1773 = fmul double %1346, %1347
  %1774 = fdiv double %1773, %1345
  %1775 = fmul double %1347, %1347
  %1776 = fdiv double %1775, %1345
  %1777 = fmul double %1345, %1345
  %1778 = fmul double %1777, 4.900000e+00
  %1779 = fadd double %1778, %1776
  %1780 = load i32, ptr %663, align 4, !tbaa !68
  %1781 = icmp slt i32 %585, %1780
  br i1 %1781, label %1782, label %1796

1782:                                             ; preds = %1750
  %1783 = fadd double %783, %804
  %1784 = fmul double %1783, 5.000000e-01
  %1785 = fmul double %804, %804
  %1786 = fdiv double %1785, %803
  %1787 = fmul double %803, %803
  %1788 = fmul double %1787, 4.900000e+00
  %1789 = fadd double %1788, %1786
  %1790 = fadd double %1756, %1789
  %1791 = fmul double %1790, 5.000000e-01
  %1792 = fmul double %804, %805
  %1793 = fdiv double %1792, %803
  %1794 = fadd double %1758, %1793
  %1795 = fmul double %1794, 5.000000e-01
  br label %1796

1796:                                             ; preds = %1782, %1750
  %1797 = phi double [ %1784, %1782 ], [ %783, %1750 ]
  %1798 = phi double [ %1791, %1782 ], [ %1756, %1750 ]
  %1799 = phi double [ %1795, %1782 ], [ %1758, %1750 ]
  %1800 = load i32, ptr %668, align 4, !tbaa !68
  %1801 = icmp slt i32 %585, %1800
  br i1 %1801, label %1802, label %1816

1802:                                             ; preds = %1796
  %1803 = fadd double %824, %845
  %1804 = fmul double %1803, 5.000000e-01
  %1805 = fmul double %845, %845
  %1806 = fdiv double %1805, %844
  %1807 = fmul double %844, %844
  %1808 = fmul double %1807, 4.900000e+00
  %1809 = fadd double %1808, %1806
  %1810 = fadd double %1763, %1809
  %1811 = fmul double %1810, 5.000000e-01
  %1812 = fmul double %845, %846
  %1813 = fdiv double %1812, %844
  %1814 = fadd double %1765, %1813
  %1815 = fmul double %1814, 5.000000e-01
  br label %1816

1816:                                             ; preds = %1802, %1796
  %1817 = phi double [ %1804, %1802 ], [ %824, %1796 ]
  %1818 = phi double [ %1811, %1802 ], [ %1763, %1796 ]
  %1819 = phi double [ %1815, %1802 ], [ %1765, %1796 ]
  %1820 = load i32, ptr %679, align 4, !tbaa !68
  %1821 = icmp slt i32 %585, %1820
  br i1 %1821, label %1822, label %1836

1822:                                             ; preds = %1816
  %1823 = fadd double %1305, %1327
  %1824 = fmul double %1823, 5.000000e-01
  %1825 = fmul double %1326, %1327
  %1826 = fdiv double %1825, %1325
  %1827 = fadd double %1767, %1826
  %1828 = fmul double %1827, 5.000000e-01
  %1829 = fmul double %1327, %1327
  %1830 = fdiv double %1829, %1325
  %1831 = fmul double %1325, %1325
  %1832 = fmul double %1831, 4.900000e+00
  %1833 = fadd double %1832, %1830
  %1834 = fadd double %1772, %1833
  %1835 = fmul double %1834, 5.000000e-01
  br label %1836

1836:                                             ; preds = %1822, %1816
  %1837 = phi double [ %1824, %1822 ], [ %1305, %1816 ]
  %1838 = phi double [ %1828, %1822 ], [ %1767, %1816 ]
  %1839 = phi double [ %1835, %1822 ], [ %1772, %1816 ]
  %1840 = load i32, ptr %673, align 4, !tbaa !68
  %1841 = icmp slt i32 %585, %1840
  br i1 %1841, label %1842, label %1856

1842:                                             ; preds = %1836
  %1843 = fadd double %1347, %1368
  %1844 = fmul double %1843, 5.000000e-01
  %1845 = fmul double %1367, %1368
  %1846 = fdiv double %1845, %1366
  %1847 = fadd double %1774, %1846
  %1848 = fmul double %1847, 5.000000e-01
  %1849 = fmul double %1368, %1368
  %1850 = fdiv double %1849, %1366
  %1851 = fmul double %1366, %1366
  %1852 = fmul double %1851, 4.900000e+00
  %1853 = fadd double %1852, %1850
  %1854 = fadd double %1779, %1853
  %1855 = fmul double %1854, 5.000000e-01
  br label %1856

1856:                                             ; preds = %1842, %1836
  %1857 = phi double [ %1844, %1842 ], [ %1347, %1836 ]
  %1858 = phi double [ %1848, %1842 ], [ %1774, %1836 ]
  %1859 = phi double [ %1855, %1842 ], [ %1779, %1836 ]
  %1860 = fdiv double %1, %662
  %1861 = fsub double %1817, %1797
  %1862 = fadd double %1861, %1857
  %1863 = fsub double %1862, %1837
  %1864 = fmul double %1860, %1863
  %1865 = fsub double %596, %1864
  %1866 = fsub double %1865, %963
  %1867 = fadd double %1085, %1866
  %1868 = fsub double %1867, %1461
  %1869 = fadd double %1583, %1868
  %1870 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE5H_new, align 8, !tbaa !29
  %1871 = getelementptr inbounds double, ptr %1870, i64 %583
  store double %1869, ptr %1871, align 8, !tbaa !171
  %1872 = fsub double %1818, %1798
  %1873 = fadd double %1872, %1858
  %1874 = fsub double %1873, %1838
  %1875 = fmul double %1860, %1874
  %1876 = fsub double %599, %1875
  %1877 = fsub double %1876, %1169
  %1878 = fadd double %1253, %1877
  %1879 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE5U_new, align 8, !tbaa !29
  %1880 = getelementptr inbounds double, ptr %1879, i64 %583
  store double %1878, ptr %1880, align 8, !tbaa !171
  %1881 = fsub double %1819, %1799
  %1882 = fadd double %1881, %1859
  %1883 = fsub double %1882, %1839
  %1884 = fmul double %1860, %1883
  %1885 = fsub double %602, %1884
  %1886 = fsub double %1885, %1667
  %1887 = fadd double %1751, %1886
  %1888 = load ptr, ptr @_ZZN5State32calc_finite_difference_via_facesEdE5V_new, align 8, !tbaa !29
  %1889 = getelementptr inbounds double, ptr %1888, i64 %583
  store double %1887, ptr %1889, align 8, !tbaa !171
  %1890 = add nsw i64 %583, 1
  %1891 = load i32, ptr %5, align 4, !tbaa !68
  %1892 = sext i32 %1891 to i64
  %1893 = icmp slt i64 %1890, %1892
  br i1 %1893, label %582, label %562, !llvm.loop !828
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i64 @_ZN5State21calc_refine_potentialERSt6vectorIiSaIiEERiS4_(ptr nocapture noundef nonnull align 8 dereferenceable(368) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 4 dereferenceable(4) %2, ptr noundef nonnull align 4 dereferenceable(4) %3) #13 align 2 {
  %5 = alloca %struct.timeval, align 8
  %6 = alloca %struct.timeval, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #57
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #57
  call void @cpu_timer_start(ptr noundef nonnull %5) #56
  call void @cpu_timer_start(ptr noundef nonnull %6) #56
  %9 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !816
  %11 = getelementptr inbounds %class.Mesh, ptr %10, i64 0, i32 69
  %12 = load ptr, ptr %11, align 8, !tbaa !684
  %13 = getelementptr inbounds %class.Mesh, ptr %10, i64 0, i32 70
  %14 = load ptr, ptr %13, align 8, !tbaa !685
  %15 = getelementptr inbounds %class.Mesh, ptr %10, i64 0, i32 71
  %16 = load ptr, ptr %15, align 8, !tbaa !686
  %17 = getelementptr inbounds %class.Mesh, ptr %10, i64 0, i32 72
  %18 = load ptr, ptr %17, align 8, !tbaa !687
  %19 = getelementptr inbounds %class.Mesh, ptr %10, i64 0, i32 67
  %20 = load ptr, ptr %19, align 8, !tbaa !639
  store i32 0, ptr %2, align 4, !tbaa !68
  store i32 0, ptr %3, align 4, !tbaa !68
  call void @_ZN5State25apply_boundary_conditionsEv(ptr noundef nonnull align 8 dereferenceable(368) %0) #56
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #57
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #57
  %21 = load ptr, ptr %9, align 8, !tbaa !816
  call void @_ZN4Mesh10get_boundsERiS0_(ptr noundef nonnull align 8 dereferenceable(2288) %21, ptr noundef nonnull align 4 dereferenceable(4) %7, ptr noundef nonnull align 4 dereferenceable(4) %8) #56
  %22 = load i32, ptr %7, align 4, !tbaa !68
  %23 = load i32, ptr %8, align 4, !tbaa !68
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %25, label %34

25:                                               ; preds = %4
  %26 = load ptr, ptr %9, align 8, !tbaa !816
  %27 = getelementptr inbounds %class.Mesh, ptr %26, i64 0, i32 68
  %28 = load ptr, ptr %27, align 8, !tbaa !682
  %29 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8
  %31 = load ptr, ptr %1, align 8
  %32 = getelementptr inbounds %class.Mesh, ptr %26, i64 0, i32 36
  %33 = sext i32 %22 to i64
  br label %53

34:                                               ; preds = %181, %4
  %35 = load i64, ptr %6, align 8, !tbaa.struct !560
  %36 = getelementptr inbounds i8, ptr %6, i64 8
  %37 = load i64, ptr %36, align 8, !tbaa.struct !561
  %38 = call double @cpu_timer_stop(i64 %35, i64 %37) #56
  %39 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 6, i64 4
  %40 = load double, ptr %39, align 8, !tbaa !171
  %41 = fadd double %38, %40
  store double %41, ptr %39, align 8, !tbaa !171
  %42 = load ptr, ptr %9, align 8, !tbaa !816
  %43 = call noundef i64 @_ZN4Mesh13refine_smoothERSt6vectorIiSaIiEERiS4_(ptr noundef nonnull align 8 dereferenceable(2288) %42, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 4 dereferenceable(4) %2, ptr noundef nonnull align 4 dereferenceable(4) %3) #56
  %44 = load i64, ptr %5, align 8, !tbaa.struct !560
  %45 = getelementptr inbounds i8, ptr %5, i64 8
  %46 = load i64, ptr %45, align 8, !tbaa.struct !561
  %47 = call double @cpu_timer_stop(i64 %44, i64 %46) #56
  %48 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 6, i64 3
  %49 = load double, ptr %48, align 8, !tbaa !171
  %50 = fadd double %47, %49
  store double %50, ptr %48, align 8, !tbaa !171
  %51 = shl i64 %43, 32
  %52 = ashr exact i64 %51, 32
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #57
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #57
  ret i64 %52

53:                                               ; preds = %181, %25
  %54 = phi i64 [ %33, %25 ], [ %182, %181 ]
  %55 = getelementptr inbounds i32, ptr %28, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !68
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %181

58:                                               ; preds = %53
  %59 = getelementptr inbounds double, ptr %30, i64 %54
  %60 = load double, ptr %59, align 8, !tbaa !171
  %61 = getelementptr inbounds i32, ptr %12, i64 %54
  %62 = load i32, ptr %61, align 4, !tbaa !68
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds double, ptr %30, i64 %63
  %65 = load double, ptr %64, align 8, !tbaa !171
  %66 = getelementptr inbounds i32, ptr %20, i64 %63
  %67 = load i32, ptr %66, align 4, !tbaa !68
  %68 = getelementptr inbounds i32, ptr %20, i64 %54
  %69 = load i32, ptr %68, align 4, !tbaa !68
  %70 = icmp sgt i32 %67, %69
  br i1 %70, label %71, label %79

71:                                               ; preds = %58
  %72 = getelementptr inbounds i32, ptr %18, i64 %63
  %73 = load i32, ptr %72, align 4, !tbaa !68
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds double, ptr %30, i64 %74
  %76 = load double, ptr %75, align 8, !tbaa !171
  %77 = fadd double %65, %76
  %78 = fmul double %77, 5.000000e-01
  br label %79

79:                                               ; preds = %71, %58
  %80 = phi double [ %78, %71 ], [ %65, %58 ]
  %81 = getelementptr inbounds i32, ptr %14, i64 %54
  %82 = load i32, ptr %81, align 4, !tbaa !68
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds double, ptr %30, i64 %83
  %85 = load double, ptr %84, align 8, !tbaa !171
  %86 = getelementptr inbounds i32, ptr %20, i64 %83
  %87 = load i32, ptr %86, align 4, !tbaa !68
  %88 = icmp sgt i32 %87, %69
  br i1 %88, label %89, label %97

89:                                               ; preds = %79
  %90 = getelementptr inbounds i32, ptr %18, i64 %83
  %91 = load i32, ptr %90, align 4, !tbaa !68
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds double, ptr %30, i64 %92
  %94 = load double, ptr %93, align 8, !tbaa !171
  %95 = fadd double %85, %94
  %96 = fmul double %95, 5.000000e-01
  br label %97

97:                                               ; preds = %89, %79
  %98 = phi double [ %96, %89 ], [ %85, %79 ]
  %99 = getelementptr inbounds i32, ptr %16, i64 %54
  %100 = load i32, ptr %99, align 4, !tbaa !68
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds double, ptr %30, i64 %101
  %103 = load double, ptr %102, align 8, !tbaa !171
  %104 = getelementptr inbounds i32, ptr %20, i64 %101
  %105 = load i32, ptr %104, align 4, !tbaa !68
  %106 = icmp sgt i32 %105, %69
  br i1 %106, label %107, label %115

107:                                              ; preds = %97
  %108 = getelementptr inbounds i32, ptr %14, i64 %101
  %109 = load i32, ptr %108, align 4, !tbaa !68
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds double, ptr %30, i64 %110
  %112 = load double, ptr %111, align 8, !tbaa !171
  %113 = fadd double %103, %112
  %114 = fmul double %113, 5.000000e-01
  br label %115

115:                                              ; preds = %107, %97
  %116 = phi double [ %114, %107 ], [ %103, %97 ]
  %117 = getelementptr inbounds i32, ptr %18, i64 %54
  %118 = load i32, ptr %117, align 4, !tbaa !68
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds double, ptr %30, i64 %119
  %121 = load double, ptr %120, align 8, !tbaa !171
  %122 = getelementptr inbounds i32, ptr %20, i64 %119
  %123 = load i32, ptr %122, align 4, !tbaa !68
  %124 = icmp sgt i32 %123, %69
  br i1 %124, label %125, label %133

125:                                              ; preds = %115
  %126 = getelementptr inbounds i32, ptr %14, i64 %119
  %127 = load i32, ptr %126, align 4, !tbaa !68
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds double, ptr %30, i64 %128
  %130 = load double, ptr %129, align 8, !tbaa !171
  %131 = fadd double %121, %130
  %132 = fmul double %131, 5.000000e-01
  br label %133

133:                                              ; preds = %125, %115
  %134 = phi double [ %132, %125 ], [ %121, %115 ]
  %135 = insertelement <2 x double> poison, double %60, i64 0
  %136 = insertelement <2 x double> %135, double %98, i64 1
  %137 = shufflevector <2 x double> %135, <2 x double> poison, <2 x i32> zeroinitializer
  %138 = insertelement <2 x double> %137, double %80, i64 0
  %139 = fsub <2 x double> %136, %138
  %140 = fdiv <2 x double> %139, %137
  %141 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %140)
  %142 = extractelement <2 x double> %141, i64 0
  %143 = extractelement <2 x double> %141, i64 1
  %144 = fcmp olt double %143, %142
  %145 = select i1 %144, double %142, double %143
  %146 = fcmp ogt double %145, -1.000000e+03
  %147 = select i1 %146, double %145, double -1.000000e+03
  %148 = fcmp olt double %142, %143
  %149 = select i1 %148, double %143, double %142
  %150 = fcmp ogt double %149, %147
  %151 = select i1 %150, double %149, double %147
  %152 = insertelement <2 x double> %135, double %134, i64 1
  %153 = shufflevector <2 x double> %135, <2 x double> poison, <2 x i32> zeroinitializer
  %154 = insertelement <2 x double> %153, double %116, i64 0
  %155 = fsub <2 x double> %152, %154
  %156 = fdiv <2 x double> %155, %153
  %157 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %156)
  %158 = extractelement <2 x double> %157, i64 0
  %159 = extractelement <2 x double> %157, i64 1
  %160 = fcmp olt double %159, %158
  %161 = select i1 %160, double %158, double %159
  %162 = fcmp ogt double %161, %151
  %163 = select i1 %162, double %161, double %151
  %164 = fcmp olt double %158, %159
  %165 = select i1 %164, double %159, double %158
  %166 = fcmp ogt double %165, %163
  %167 = select i1 %166, double %165, double %163
  %168 = getelementptr inbounds i32, ptr %31, i64 %54
  store i32 0, ptr %168, align 4, !tbaa !68
  %169 = fcmp ogt double %167, 1.000000e-01
  br i1 %169, label %170, label %174

170:                                              ; preds = %133
  %171 = load i32, ptr %68, align 4, !tbaa !68
  %172 = load i32, ptr %32, align 8, !tbaa !647
  %173 = icmp slt i32 %171, %172
  br i1 %173, label %179, label %174

174:                                              ; preds = %170, %133
  %175 = fcmp olt double %167, 5.000000e-02
  br i1 %175, label %176, label %181

176:                                              ; preds = %174
  %177 = load i32, ptr %68, align 4, !tbaa !68
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %179, label %181

179:                                              ; preds = %176, %170
  %180 = phi i32 [ 1, %170 ], [ -1, %176 ]
  store i32 %180, ptr %168, align 4, !tbaa !68
  br label %181

181:                                              ; preds = %179, %176, %174, %53
  %182 = add nsw i64 %54, 1
  %183 = load i32, ptr %8, align 4, !tbaa !68
  %184 = sext i32 %183 to i64
  %185 = icmp slt i64 %182, %184
  br i1 %185, label %53, label %34, !llvm.loop !829
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef double @_ZN5State8mass_sumEi(ptr nocapture noundef nonnull align 8 dereferenceable(368) %0, i32 noundef %1) #13 align 2 {
  %3 = alloca %struct.timeval, align 8
  %4 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !816
  %6 = getelementptr inbounds %class.Mesh, ptr %5, i64 0, i32 45
  %7 = getelementptr inbounds %class.Mesh, ptr %5, i64 0, i32 68
  %8 = load ptr, ptr %7, align 8, !tbaa !682
  %9 = getelementptr inbounds %class.Mesh, ptr %5, i64 0, i32 67
  %10 = load ptr, ptr %9, align 8, !tbaa !639
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #57
  call void @cpu_timer_start(ptr noundef nonnull %3) #56
  switch i32 %1, label %90 [
    i32 1, label %20
    i32 0, label %11
  ]

11:                                               ; preds = %2
  %12 = load i64, ptr %6, align 8, !tbaa !85
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %90, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = load ptr, ptr %4, align 8
  %18 = getelementptr inbounds %class.Mesh, ptr %17, i64 0, i32 33
  %19 = getelementptr inbounds %class.Mesh, ptr %17, i64 0, i32 34
  br label %63

20:                                               ; preds = %2
  %21 = load i64, ptr %6, align 8, !tbaa !85
  %22 = trunc i64 %21 to i32
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %90

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr %4, align 8
  %28 = getelementptr inbounds %class.Mesh, ptr %27, i64 0, i32 33
  %29 = getelementptr inbounds %class.Mesh, ptr %27, i64 0, i32 34
  %30 = and i64 %21, 4294967295
  br label %31

31:                                               ; preds = %56, %24
  %32 = phi i64 [ 0, %24 ], [ %59, %56 ]
  %33 = phi double [ 0.000000e+00, %24 ], [ %58, %56 ]
  %34 = phi double [ 0.000000e+00, %24 ], [ %57, %56 ]
  %35 = getelementptr inbounds i32, ptr %8, i64 %32
  %36 = load i32, ptr %35, align 4, !tbaa !68
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %56

38:                                               ; preds = %31
  %39 = getelementptr inbounds double, ptr %26, i64 %32
  %40 = load double, ptr %39, align 8, !tbaa !171
  %41 = getelementptr inbounds i32, ptr %10, i64 %32
  %42 = load i32, ptr %41, align 4, !tbaa !68
  %43 = sext i32 %42 to i64
  %44 = load ptr, ptr %28, align 8, !tbaa !109
  %45 = getelementptr inbounds double, ptr %44, i64 %43
  %46 = load double, ptr %45, align 8, !tbaa !171
  %47 = fmul double %40, %46
  %48 = load ptr, ptr %29, align 8, !tbaa !109
  %49 = getelementptr inbounds double, ptr %48, i64 %43
  %50 = load double, ptr %49, align 8, !tbaa !171
  %51 = fmul double %47, %50
  %52 = fadd double %34, %51
  %53 = fadd double %34, %33
  %54 = fsub double %53, %33
  %55 = fsub double %52, %54
  br label %56

56:                                               ; preds = %38, %31
  %57 = phi double [ %55, %38 ], [ %34, %31 ]
  %58 = phi double [ %53, %38 ], [ %33, %31 ]
  %59 = add nuw nsw i64 %32, 1
  %60 = icmp eq i64 %59, %30
  br i1 %60, label %61, label %31, !llvm.loop !830

61:                                               ; preds = %56
  %.lcssa1 = phi double [ %57, %56 ]
  %.lcssa = phi double [ %58, %56 ]
  %62 = fadd double %.lcssa1, %.lcssa
  br label %90

63:                                               ; preds = %85, %14
  %64 = phi i64 [ 0, %14 ], [ %88, %85 ]
  %65 = phi double [ 0.000000e+00, %14 ], [ %86, %85 ]
  %66 = phi i32 [ 0, %14 ], [ %87, %85 ]
  %67 = getelementptr inbounds i32, ptr %8, i64 %64
  %68 = load i32, ptr %67, align 4, !tbaa !68
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %85

70:                                               ; preds = %63
  %71 = getelementptr inbounds double, ptr %16, i64 %64
  %72 = load double, ptr %71, align 8, !tbaa !171
  %73 = getelementptr inbounds i32, ptr %10, i64 %64
  %74 = load i32, ptr %73, align 4, !tbaa !68
  %75 = sext i32 %74 to i64
  %76 = load ptr, ptr %18, align 8, !tbaa !109
  %77 = getelementptr inbounds double, ptr %76, i64 %75
  %78 = load double, ptr %77, align 8, !tbaa !171
  %79 = fmul double %72, %78
  %80 = load ptr, ptr %19, align 8, !tbaa !109
  %81 = getelementptr inbounds double, ptr %80, i64 %75
  %82 = load double, ptr %81, align 8, !tbaa !171
  %83 = fmul double %79, %82
  %84 = fadd double %65, %83
  br label %85

85:                                               ; preds = %70, %63
  %86 = phi double [ %84, %70 ], [ %65, %63 ]
  %87 = add i32 %66, 1
  %88 = zext i32 %87 to i64
  %89 = icmp ugt i64 %12, %88
  br i1 %89, label %63, label %90, !llvm.loop !831

90:                                               ; preds = %85, %61, %20, %11, %2
  %91 = phi double [ 0.000000e+00, %2 ], [ 0.000000e+00, %11 ], [ %62, %61 ], [ 0.000000e+00, %20 ], [ %86, %85 ]
  %92 = load i64, ptr %3, align 8, !tbaa.struct !560
  %93 = getelementptr inbounds i8, ptr %3, i64 8
  %94 = load i64, ptr %93, align 8, !tbaa.struct !561
  %95 = call double @cpu_timer_stop(i64 %92, i64 %94) #56
  %96 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 6, i64 6
  %97 = load double, ptr %96, align 8, !tbaa !171
  %98 = fadd double %95, %97
  store double %98, ptr %96, align 8, !tbaa !171
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #57
  ret double %91
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define internal void @_ZN5State18output_timing_infoEiid(ptr nocapture noundef nonnull readonly align 8 dereferenceable(368) %0, i32 noundef %1, i32 noundef %2, double noundef %3) #31 align 2 {
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i64 @_ZN5State19get_checkpoint_sizeEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(368) %0) #13 align 2 {
  %2 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !816
  %4 = getelementptr inbounds %class.Mesh, ptr %3, i64 0, i32 45
  %5 = load i64, ptr %4, align 8, !tbaa !543
  %6 = mul i64 %5, 24
  %7 = or i64 %6, 4
  %8 = tail call noundef i64 @_ZN4Mesh19get_checkpoint_sizeEv(ptr noundef nonnull align 8 dereferenceable(2288) %3) #56
  %9 = add i64 %7, %8
  ret i64 %9
}

; Function Attrs: optsize uwtable
define internal void @_ZN5State16store_checkpointEP4Crux(ptr noundef nonnull align 8 dereferenceable(368) %0, ptr noundef %1) #6 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca [1 x i32], align 4
  %4 = alloca %class.MallocPlus, align 8
  %5 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !816
  tail call void @_ZN4Mesh16store_checkpointEP4Crux(ptr noundef nonnull align 8 dereferenceable(2288) %6, ptr noundef %1) #56
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #57
  store i32 102, ptr %3, align 4, !tbaa !68
  %7 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull %3, i64 noundef 1, i64 noundef 4, ptr noundef nonnull @.str.24.271, i32 noundef 48) #56
  %8 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 6
  %9 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull %8, i64 noundef 9, i64 noundef 8, ptr noundef nonnull @.str.25.272, i32 noundef 16) #56
  %10 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 7
  %11 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull %10, i64 noundef 9, i64 noundef 8, ptr noundef nonnull @.str.26.273, i32 noundef 16) #56
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EEC2ERKSG_(ptr noundef nonnull align 8 dereferenceable(48) %4, ptr noundef nonnull align 8 dereferenceable(48) %0) #56
  %12 = getelementptr inbounds %class.MallocPlus, ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EEC2ERKSB_(ptr noundef nonnull align 8 dereferenceable(48) %12, ptr noundef nonnull align 8 dereferenceable(48) %13) #56
          to label %18 unwind label %16

14:                                               ; preds = %20, %16
  %15 = phi { ptr, i32 } [ %17, %16 ], [ %21, %20 ]
  resume { ptr, i32 } %15

16:                                               ; preds = %2
  %17 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %4) #59
  br label %14

18:                                               ; preds = %2
  invoke void @_ZN4Crux16store_MallocPlusE10MallocPlus(ptr noundef nonnull align 4 dereferenceable(12) %1, ptr noundef nonnull %4) #56
          to label %19 unwind label %20

19:                                               ; preds = %18
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %12) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %4) #59
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull %3) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull %8) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull %10) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #57
  ret void

20:                                               ; preds = %18
  %21 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %12) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %4) #59
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #57
  br label %14
}

; Function Attrs: optsize uwtable
define internal void @_ZN5State18restore_checkpointEP4Crux(ptr noundef nonnull align 8 dereferenceable(368) %0, ptr noundef %1) #6 align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca i32, align 4
  %4 = alloca [1 x i32], align 4
  %5 = alloca %class.MallocPlus, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #57
  %6 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !816
  tail call void @_ZN4Mesh18restore_checkpointEP4Crux(ptr noundef nonnull align 8 dereferenceable(2288) %7, ptr noundef %1) #56
  call void @_ZN4Crux18restore_named_intsEPKciPim(ptr noundef nonnull align 4 dereferenceable(12) %1, ptr noundef nonnull @.str.27.276, i32 noundef 7, ptr noundef nonnull %3, i64 noundef 1) #56
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #57
  %8 = load i32, ptr %3, align 4, !tbaa !68
  %9 = sext i32 %8 to i64
  call void @_ZN5State8allocateEm(ptr noundef nonnull align 8 dereferenceable(368) %0, i64 noundef %9) #56
  %10 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull %4, i64 noundef 1, i64 noundef 4, ptr noundef nonnull @.str.24.271, i32 noundef 48) #56
  %11 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 6
  %12 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull %11, i64 noundef 9, i64 noundef 8, ptr noundef nonnull @.str.25.272, i32 noundef 16) #56
  %13 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 7
  %14 = call noundef ptr @_ZN10MallocPlus10memory_addEPvmmPKci(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull %13, i64 noundef 9, i64 noundef 8, ptr noundef nonnull @.str.26.273, i32 noundef 16) #56
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EEC2ERKSG_(ptr noundef nonnull align 8 dereferenceable(48) %5, ptr noundef nonnull align 8 dereferenceable(48) %0) #56
  %15 = getelementptr inbounds %class.MallocPlus, ptr %5, i64 0, i32 1
  %16 = getelementptr inbounds %class.MallocPlus, ptr %0, i64 0, i32 1
  invoke void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EEC2ERKSB_(ptr noundef nonnull align 8 dereferenceable(48) %15, ptr noundef nonnull align 8 dereferenceable(48) %16) #56
          to label %21 unwind label %19

17:                                               ; preds = %27, %19
  %18 = phi { ptr, i32 } [ %20, %19 ], [ %28, %27 ]
  resume { ptr, i32 } %18

19:                                               ; preds = %2
  %20 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %5) #59
  br label %17

21:                                               ; preds = %2
  invoke void @_ZN4Crux18restore_MallocPlusE10MallocPlus(ptr noundef nonnull align 4 dereferenceable(12) %1, ptr noundef nonnull %5) #56
          to label %22 unwind label %27

22:                                               ; preds = %21
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %15) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %5) #59
  %23 = load i32, ptr %4, align 4, !tbaa !68
  %24 = icmp eq i32 %23, 102
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.28.277, i32 noundef %23, i32 noundef 102) #56
  call void @exit(i32 noundef 0) #67
  unreachable

27:                                               ; preds = %21
  %28 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %15) #59
  call void @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %5) #59
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #57
  br label %17

29:                                               ; preds = %22
  %30 = call i32 @putchar(i32 10)
  %31 = call i32 @puts(ptr nonnull dereferenceable(1) @str.61)
  br label %35

32:                                               ; preds = %35
  %33 = call i32 @puts(ptr nonnull dereferenceable(1) @str.61)
  %34 = call i32 @putchar(i32 10)
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull %4) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull %11) #56
  call void @_ZN10MallocPlus13memory_removeEPv(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull %13) #56
  call void @_ZN5State17memory_reset_ptrsEv(ptr noundef nonnull align 8 dereferenceable(368) %0) #56
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #57
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #57
  ret void

35:                                               ; preds = %35, %29
  %36 = phi i64 [ 0, %29 ], [ %42, %35 ]
  %37 = getelementptr inbounds [9 x ptr], ptr @_ZL22state_timer_descriptor, i64 0, i64 %36
  %38 = load ptr, ptr %37, align 8, !tbaa !29
  %39 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 6, i64 %36
  %40 = load double, ptr %39, align 8, !tbaa !171
  %41 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.31.278, ptr noundef %38, double noundef %40) #56
  %42 = add nuw nsw i64 %36, 1
  %43 = icmp eq i64 %42, 9
  br i1 %43, label %32, label %35, !llvm.loop !832
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5State17print_failure_logEiddddb(ptr nocapture noundef nonnull readonly align 8 dereferenceable(368) %0, i32 noundef %1, double noundef %2, double noundef %3, double noundef %4, double noundef %5, i1 noundef zeroext %6) #13 align 2 {
  %8 = tail call noalias ptr @fopen(ptr noundef nonnull @__const._ZN5State17print_failure_logEiddddb.filename, ptr noundef nonnull @.str.19.290) #56
  %9 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !816
  %11 = getelementptr inbounds %class.Mesh, ptr %10, i64 0, i32 23
  store ptr %8, ptr %11, align 8, !tbaa !833
  %12 = fsub double %4, %3
  br i1 %6, label %13, label %15

13:                                               ; preds = %7
  %14 = tail call i64 @fwrite(ptr nonnull @.str.43.291, i64 49, i64 1, ptr %8)
  br label %17

15:                                               ; preds = %7
  %16 = tail call i64 @fwrite(ptr nonnull @.str.44.292, i64 65, i64 1, ptr %8)
  br label %17

17:                                               ; preds = %15, %13
  %18 = load ptr, ptr %9, align 8, !tbaa !816
  %19 = getelementptr inbounds %class.Mesh, ptr %18, i64 0, i32 23
  %20 = load ptr, ptr %19, align 8, !tbaa !833
  %21 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %20, ptr noundef nonnull @.str.33.293, i32 noundef %1, double noundef %2) #56
  %22 = load ptr, ptr %9, align 8, !tbaa !816
  %23 = getelementptr inbounds %class.Mesh, ptr %22, i64 0, i32 23
  %24 = load ptr, ptr %23, align 8, !tbaa !833
  %25 = getelementptr inbounds %class.Mesh, ptr %22, i64 0, i32 45
  %26 = load i64, ptr %25, align 8, !tbaa !543
  %27 = getelementptr inbounds %class.Mesh, ptr %22, i64 0, i32 47
  %28 = load i64, ptr %27, align 8, !tbaa !652
  %29 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %24, ptr noundef nonnull @.str.34.294, i64 noundef %26, i64 noundef %28) #56
  %30 = load ptr, ptr %9, align 8, !tbaa !816
  %31 = getelementptr inbounds %class.Mesh, ptr %30, i64 0, i32 23
  %32 = load ptr, ptr %31, align 8, !tbaa !833
  %33 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %32, ptr noundef nonnull @.str.36.295, double noundef %3, double noundef %4) #56
  %34 = load ptr, ptr %9, align 8, !tbaa !816
  %35 = getelementptr inbounds %class.Mesh, ptr %34, i64 0, i32 23
  %36 = load ptr, ptr %35, align 8, !tbaa !833
  %37 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %36, ptr noundef nonnull @.str.37.296, double noundef %12, double noundef %5) #56
  %38 = load ptr, ptr %9, align 8, !tbaa !816
  %39 = getelementptr inbounds %class.Mesh, ptr %38, i64 0, i32 1
  %40 = getelementptr inbounds %class.Mesh, ptr %38, i64 0, i32 69
  %41 = load ptr, ptr %40, align 8, !tbaa !684
  %42 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %39, ptr noundef %41) #56
  %43 = load ptr, ptr %9, align 8, !tbaa !816
  %44 = getelementptr inbounds %class.Mesh, ptr %43, i64 0, i32 47
  %45 = load i64, ptr %44, align 8, !tbaa !652
  %46 = icmp ult i64 %42, %45
  %47 = getelementptr inbounds %class.Mesh, ptr %43, i64 0, i32 23
  %48 = load ptr, ptr %47, align 8, !tbaa !833
  %49 = getelementptr inbounds %class.Mesh, ptr %43, i64 0, i32 9
  %50 = load i32, ptr %49, align 4, !tbaa !650
  br i1 %46, label %158, label %51

51:                                               ; preds = %17
  %52 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %48, ptr noundef nonnull @.str.20.297, i32 noundef %50) #56
  %53 = load ptr, ptr %9, align 8, !tbaa !816
  %54 = getelementptr inbounds %class.Mesh, ptr %53, i64 0, i32 45
  %55 = load i64, ptr %54, align 8, !tbaa !543
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %66

57:                                               ; preds = %66, %51
  %58 = phi ptr [ %53, %51 ], [ %108, %66 ]
  %59 = phi i64 [ 0, %51 ], [ %110, %66 ]
  %60 = and i64 %59, 4294967295
  %61 = getelementptr inbounds %class.Mesh, ptr %58, i64 0, i32 47
  %62 = load i64, ptr %61, align 8, !tbaa !652
  %63 = icmp ugt i64 %62, %60
  br i1 %63, label %64, label %204

64:                                               ; preds = %57
  %65 = trunc i64 %59 to i32
  br label %112

66:                                               ; preds = %66, %51
  %67 = phi ptr [ %108, %66 ], [ %53, %51 ]
  %68 = phi i64 [ %107, %66 ], [ 0, %51 ]
  %69 = phi i32 [ %106, %66 ], [ 0, %51 ]
  %70 = getelementptr inbounds %class.Mesh, ptr %67, i64 0, i32 23
  %71 = load ptr, ptr %70, align 8, !tbaa !833
  %72 = getelementptr inbounds %class.Mesh, ptr %67, i64 0, i32 9
  %73 = load i32, ptr %72, align 4, !tbaa !650
  %74 = getelementptr inbounds %class.Mesh, ptr %67, i64 0, i32 13
  %75 = load i32, ptr %74, align 4, !tbaa !654
  %76 = add i32 %75, %69
  %77 = getelementptr inbounds %class.Mesh, ptr %67, i64 0, i32 64
  %78 = load ptr, ptr %77, align 8, !tbaa !637
  %79 = getelementptr inbounds i32, ptr %78, i64 %68
  %80 = load i32, ptr %79, align 4, !tbaa !68
  %81 = getelementptr inbounds %class.Mesh, ptr %67, i64 0, i32 65
  %82 = load ptr, ptr %81, align 8, !tbaa !638
  %83 = getelementptr inbounds i32, ptr %82, i64 %68
  %84 = load i32, ptr %83, align 4, !tbaa !68
  %85 = getelementptr inbounds %class.Mesh, ptr %67, i64 0, i32 67
  %86 = load ptr, ptr %85, align 8, !tbaa !639
  %87 = getelementptr inbounds i32, ptr %86, i64 %68
  %88 = load i32, ptr %87, align 4, !tbaa !68
  %89 = getelementptr inbounds %class.Mesh, ptr %67, i64 0, i32 69
  %90 = load ptr, ptr %89, align 8, !tbaa !684
  %91 = getelementptr inbounds i32, ptr %90, i64 %68
  %92 = load i32, ptr %91, align 4, !tbaa !68
  %93 = getelementptr inbounds %class.Mesh, ptr %67, i64 0, i32 70
  %94 = load ptr, ptr %93, align 8, !tbaa !685
  %95 = getelementptr inbounds i32, ptr %94, i64 %68
  %96 = load i32, ptr %95, align 4, !tbaa !68
  %97 = getelementptr inbounds %class.Mesh, ptr %67, i64 0, i32 71
  %98 = load ptr, ptr %97, align 8, !tbaa !686
  %99 = getelementptr inbounds i32, ptr %98, i64 %68
  %100 = load i32, ptr %99, align 4, !tbaa !68
  %101 = getelementptr inbounds %class.Mesh, ptr %67, i64 0, i32 72
  %102 = load ptr, ptr %101, align 8, !tbaa !687
  %103 = getelementptr inbounds i32, ptr %102, i64 %68
  %104 = load i32, ptr %103, align 4, !tbaa !68
  %105 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %71, ptr noundef nonnull @.str.21.298, i32 noundef %73, i32 noundef %69, i32 noundef %76, i32 noundef %80, i32 noundef %84, i32 noundef %88, i32 noundef %92, i32 noundef %96, i32 noundef %100, i32 noundef %104) #56
  %106 = add i32 %69, 1
  %107 = zext i32 %106 to i64
  %108 = load ptr, ptr %9, align 8, !tbaa !816
  %109 = getelementptr inbounds %class.Mesh, ptr %108, i64 0, i32 45
  %110 = load i64, ptr %109, align 8, !tbaa !543
  %111 = icmp ugt i64 %110, %107
  br i1 %111, label %66, label %57, !llvm.loop !834

112:                                              ; preds = %112, %64
  %113 = phi ptr [ %154, %112 ], [ %58, %64 ]
  %114 = phi i64 [ %153, %112 ], [ %60, %64 ]
  %115 = phi i32 [ %152, %112 ], [ %65, %64 ]
  %116 = getelementptr inbounds %class.Mesh, ptr %113, i64 0, i32 23
  %117 = load ptr, ptr %116, align 8, !tbaa !833
  %118 = getelementptr inbounds %class.Mesh, ptr %113, i64 0, i32 9
  %119 = load i32, ptr %118, align 4, !tbaa !650
  %120 = getelementptr inbounds %class.Mesh, ptr %113, i64 0, i32 13
  %121 = load i32, ptr %120, align 4, !tbaa !654
  %122 = add i32 %121, %115
  %123 = getelementptr inbounds %class.Mesh, ptr %113, i64 0, i32 64
  %124 = load ptr, ptr %123, align 8, !tbaa !637
  %125 = getelementptr inbounds i32, ptr %124, i64 %114
  %126 = load i32, ptr %125, align 4, !tbaa !68
  %127 = getelementptr inbounds %class.Mesh, ptr %113, i64 0, i32 65
  %128 = load ptr, ptr %127, align 8, !tbaa !638
  %129 = getelementptr inbounds i32, ptr %128, i64 %114
  %130 = load i32, ptr %129, align 4, !tbaa !68
  %131 = getelementptr inbounds %class.Mesh, ptr %113, i64 0, i32 67
  %132 = load ptr, ptr %131, align 8, !tbaa !639
  %133 = getelementptr inbounds i32, ptr %132, i64 %114
  %134 = load i32, ptr %133, align 4, !tbaa !68
  %135 = getelementptr inbounds %class.Mesh, ptr %113, i64 0, i32 69
  %136 = load ptr, ptr %135, align 8, !tbaa !684
  %137 = getelementptr inbounds i32, ptr %136, i64 %114
  %138 = load i32, ptr %137, align 4, !tbaa !68
  %139 = getelementptr inbounds %class.Mesh, ptr %113, i64 0, i32 70
  %140 = load ptr, ptr %139, align 8, !tbaa !685
  %141 = getelementptr inbounds i32, ptr %140, i64 %114
  %142 = load i32, ptr %141, align 4, !tbaa !68
  %143 = getelementptr inbounds %class.Mesh, ptr %113, i64 0, i32 71
  %144 = load ptr, ptr %143, align 8, !tbaa !686
  %145 = getelementptr inbounds i32, ptr %144, i64 %114
  %146 = load i32, ptr %145, align 4, !tbaa !68
  %147 = getelementptr inbounds %class.Mesh, ptr %113, i64 0, i32 72
  %148 = load ptr, ptr %147, align 8, !tbaa !687
  %149 = getelementptr inbounds i32, ptr %148, i64 %114
  %150 = load i32, ptr %149, align 4, !tbaa !68
  %151 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %117, ptr noundef nonnull @.str.21.298, i32 noundef %119, i32 noundef %115, i32 noundef %122, i32 noundef %126, i32 noundef %130, i32 noundef %134, i32 noundef %138, i32 noundef %142, i32 noundef %146, i32 noundef %150) #56
  %152 = add i32 %115, 1
  %153 = zext i32 %152 to i64
  %154 = load ptr, ptr %9, align 8, !tbaa !816
  %155 = getelementptr inbounds %class.Mesh, ptr %154, i64 0, i32 47
  %156 = load i64, ptr %155, align 8, !tbaa !652
  %157 = icmp ugt i64 %156, %153
  br i1 %157, label %112, label %204, !llvm.loop !835

158:                                              ; preds = %17
  %159 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %48, ptr noundef nonnull @.str.22.299, i32 noundef %50) #56
  %160 = load ptr, ptr %9, align 8, !tbaa !816
  %161 = getelementptr inbounds %class.Mesh, ptr %160, i64 0, i32 47
  %162 = load i64, ptr %161, align 8, !tbaa !652
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %204, label %164

164:                                              ; preds = %158
  %165 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %166 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  %167 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  br label %168

168:                                              ; preds = %168, %164
  %169 = phi ptr [ %160, %164 ], [ %200, %168 ]
  %170 = phi i64 [ 0, %164 ], [ %199, %168 ]
  %171 = phi i32 [ 0, %164 ], [ %198, %168 ]
  %172 = getelementptr inbounds %class.Mesh, ptr %169, i64 0, i32 23
  %173 = load ptr, ptr %172, align 8, !tbaa !833
  %174 = getelementptr inbounds %class.Mesh, ptr %169, i64 0, i32 9
  %175 = load i32, ptr %174, align 4, !tbaa !650
  %176 = load ptr, ptr %165, align 8, !tbaa !566
  %177 = getelementptr inbounds double, ptr %176, i64 %170
  %178 = load double, ptr %177, align 8, !tbaa !171
  %179 = load ptr, ptr %166, align 8, !tbaa !817
  %180 = getelementptr inbounds double, ptr %179, i64 %170
  %181 = load double, ptr %180, align 8, !tbaa !171
  %182 = load ptr, ptr %167, align 8, !tbaa !818
  %183 = getelementptr inbounds double, ptr %182, i64 %170
  %184 = load double, ptr %183, align 8, !tbaa !171
  %185 = getelementptr inbounds %class.Mesh, ptr %169, i64 0, i32 64
  %186 = load ptr, ptr %185, align 8, !tbaa !637
  %187 = getelementptr inbounds i32, ptr %186, i64 %170
  %188 = load i32, ptr %187, align 4, !tbaa !68
  %189 = getelementptr inbounds %class.Mesh, ptr %169, i64 0, i32 65
  %190 = load ptr, ptr %189, align 8, !tbaa !638
  %191 = getelementptr inbounds i32, ptr %190, i64 %170
  %192 = load i32, ptr %191, align 4, !tbaa !68
  %193 = getelementptr inbounds %class.Mesh, ptr %169, i64 0, i32 67
  %194 = load ptr, ptr %193, align 8, !tbaa !639
  %195 = getelementptr inbounds i32, ptr %194, i64 %170
  %196 = load i32, ptr %195, align 4, !tbaa !68
  %197 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %173, ptr noundef nonnull @.str.23.300, i32 noundef %175, i32 noundef %171, double noundef %178, double noundef %181, double noundef %184, i32 noundef %188, i32 noundef %192, i32 noundef %196) #56
  %198 = add i32 %171, 1
  %199 = zext i32 %198 to i64
  %200 = load ptr, ptr %9, align 8, !tbaa !816
  %201 = getelementptr inbounds %class.Mesh, ptr %200, i64 0, i32 47
  %202 = load i64, ptr %201, align 8, !tbaa !652
  %203 = icmp ugt i64 %202, %199
  br i1 %203, label %168, label %204, !llvm.loop !836

204:                                              ; preds = %168, %158, %112, %57
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5State18print_rollback_logEiddddiii(ptr nocapture noundef nonnull readonly align 8 dereferenceable(368) %0, i32 noundef %1, double noundef %2, double noundef %3, double noundef %4, double noundef %5, i32 noundef %6, i32 noundef %7, i32 noundef %8) #13 align 2 {
  %10 = alloca [40 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %10) #57
  %11 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %10, ptr noundef nonnull dereferenceable(1) @.str.45.303, i32 noundef %6) #59
  %12 = call noalias ptr @fopen(ptr noundef nonnull %10, ptr noundef nonnull @.str.19.290) #56
  %13 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !816
  %15 = getelementptr inbounds %class.Mesh, ptr %14, i64 0, i32 23
  store ptr %12, ptr %15, align 8, !tbaa !833
  %16 = fsub double %4, %3
  %17 = icmp eq i32 %8, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %9
  %19 = tail call i64 @fwrite(ptr nonnull @.str.46.304, i64 55, i64 1, ptr %12)
  br label %22

20:                                               ; preds = %9
  %21 = tail call i64 @fwrite(ptr nonnull @.str.47.305, i64 71, i64 1, ptr %12)
  br label %22

22:                                               ; preds = %20, %18
  %23 = load ptr, ptr %13, align 8, !tbaa !816
  %24 = getelementptr inbounds %class.Mesh, ptr %23, i64 0, i32 23
  %25 = load ptr, ptr %24, align 8, !tbaa !833
  %26 = sub nsw i32 %7, %6
  %27 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %25, ptr noundef nonnull @.str.48.306, i32 noundef %6, i32 noundef %7, i32 noundef %26) #56
  %28 = load ptr, ptr %13, align 8, !tbaa !816
  %29 = getelementptr inbounds %class.Mesh, ptr %28, i64 0, i32 23
  %30 = load ptr, ptr %29, align 8, !tbaa !833
  %31 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %30, ptr noundef nonnull @.str.33.293, i32 noundef %1, double noundef %2) #56
  %32 = load ptr, ptr %13, align 8, !tbaa !816
  %33 = getelementptr inbounds %class.Mesh, ptr %32, i64 0, i32 23
  %34 = load ptr, ptr %33, align 8, !tbaa !833
  %35 = getelementptr inbounds %class.Mesh, ptr %32, i64 0, i32 45
  %36 = load i64, ptr %35, align 8, !tbaa !543
  %37 = getelementptr inbounds %class.Mesh, ptr %32, i64 0, i32 47
  %38 = load i64, ptr %37, align 8, !tbaa !652
  %39 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %34, ptr noundef nonnull @.str.34.294, i64 noundef %36, i64 noundef %38) #56
  %40 = load ptr, ptr %13, align 8, !tbaa !816
  %41 = getelementptr inbounds %class.Mesh, ptr %40, i64 0, i32 23
  %42 = load ptr, ptr %41, align 8, !tbaa !833
  %43 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %42, ptr noundef nonnull @.str.36.295, double noundef %3, double noundef %4) #56
  %44 = load ptr, ptr %13, align 8, !tbaa !816
  %45 = getelementptr inbounds %class.Mesh, ptr %44, i64 0, i32 23
  %46 = load ptr, ptr %45, align 8, !tbaa !833
  %47 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %46, ptr noundef nonnull @.str.37.296, double noundef %16, double noundef %5) #56
  %48 = load ptr, ptr %13, align 8, !tbaa !816
  %49 = getelementptr inbounds %class.Mesh, ptr %48, i64 0, i32 1
  %50 = getelementptr inbounds %class.Mesh, ptr %48, i64 0, i32 69
  %51 = load ptr, ptr %50, align 8, !tbaa !684
  %52 = tail call noundef i64 @_ZN10MallocPlus15get_memory_sizeEPv(ptr noundef nonnull align 8 dereferenceable(96) %49, ptr noundef %51) #56
  %53 = load ptr, ptr %13, align 8, !tbaa !816
  %54 = getelementptr inbounds %class.Mesh, ptr %53, i64 0, i32 47
  %55 = load i64, ptr %54, align 8, !tbaa !652
  %56 = icmp ult i64 %52, %55
  %57 = getelementptr inbounds %class.Mesh, ptr %53, i64 0, i32 23
  %58 = load ptr, ptr %57, align 8, !tbaa !833
  %59 = getelementptr inbounds %class.Mesh, ptr %53, i64 0, i32 9
  %60 = load i32, ptr %59, align 4, !tbaa !650
  br i1 %56, label %168, label %61

61:                                               ; preds = %22
  %62 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %58, ptr noundef nonnull @.str.20.297, i32 noundef %60) #56
  %63 = load ptr, ptr %13, align 8, !tbaa !816
  %64 = getelementptr inbounds %class.Mesh, ptr %63, i64 0, i32 45
  %65 = load i64, ptr %64, align 8, !tbaa !543
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %76

67:                                               ; preds = %76, %61
  %68 = phi ptr [ %63, %61 ], [ %118, %76 ]
  %69 = phi i64 [ 0, %61 ], [ %120, %76 ]
  %70 = and i64 %69, 4294967295
  %71 = getelementptr inbounds %class.Mesh, ptr %68, i64 0, i32 47
  %72 = load i64, ptr %71, align 8, !tbaa !652
  %73 = icmp ugt i64 %72, %70
  br i1 %73, label %74, label %214

74:                                               ; preds = %67
  %75 = trunc i64 %69 to i32
  br label %122

76:                                               ; preds = %76, %61
  %77 = phi ptr [ %118, %76 ], [ %63, %61 ]
  %78 = phi i64 [ %117, %76 ], [ 0, %61 ]
  %79 = phi i32 [ %116, %76 ], [ 0, %61 ]
  %80 = getelementptr inbounds %class.Mesh, ptr %77, i64 0, i32 23
  %81 = load ptr, ptr %80, align 8, !tbaa !833
  %82 = getelementptr inbounds %class.Mesh, ptr %77, i64 0, i32 9
  %83 = load i32, ptr %82, align 4, !tbaa !650
  %84 = getelementptr inbounds %class.Mesh, ptr %77, i64 0, i32 13
  %85 = load i32, ptr %84, align 4, !tbaa !654
  %86 = add i32 %85, %79
  %87 = getelementptr inbounds %class.Mesh, ptr %77, i64 0, i32 64
  %88 = load ptr, ptr %87, align 8, !tbaa !637
  %89 = getelementptr inbounds i32, ptr %88, i64 %78
  %90 = load i32, ptr %89, align 4, !tbaa !68
  %91 = getelementptr inbounds %class.Mesh, ptr %77, i64 0, i32 65
  %92 = load ptr, ptr %91, align 8, !tbaa !638
  %93 = getelementptr inbounds i32, ptr %92, i64 %78
  %94 = load i32, ptr %93, align 4, !tbaa !68
  %95 = getelementptr inbounds %class.Mesh, ptr %77, i64 0, i32 67
  %96 = load ptr, ptr %95, align 8, !tbaa !639
  %97 = getelementptr inbounds i32, ptr %96, i64 %78
  %98 = load i32, ptr %97, align 4, !tbaa !68
  %99 = getelementptr inbounds %class.Mesh, ptr %77, i64 0, i32 69
  %100 = load ptr, ptr %99, align 8, !tbaa !684
  %101 = getelementptr inbounds i32, ptr %100, i64 %78
  %102 = load i32, ptr %101, align 4, !tbaa !68
  %103 = getelementptr inbounds %class.Mesh, ptr %77, i64 0, i32 70
  %104 = load ptr, ptr %103, align 8, !tbaa !685
  %105 = getelementptr inbounds i32, ptr %104, i64 %78
  %106 = load i32, ptr %105, align 4, !tbaa !68
  %107 = getelementptr inbounds %class.Mesh, ptr %77, i64 0, i32 71
  %108 = load ptr, ptr %107, align 8, !tbaa !686
  %109 = getelementptr inbounds i32, ptr %108, i64 %78
  %110 = load i32, ptr %109, align 4, !tbaa !68
  %111 = getelementptr inbounds %class.Mesh, ptr %77, i64 0, i32 72
  %112 = load ptr, ptr %111, align 8, !tbaa !687
  %113 = getelementptr inbounds i32, ptr %112, i64 %78
  %114 = load i32, ptr %113, align 4, !tbaa !68
  %115 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %81, ptr noundef nonnull @.str.21.298, i32 noundef %83, i32 noundef %79, i32 noundef %86, i32 noundef %90, i32 noundef %94, i32 noundef %98, i32 noundef %102, i32 noundef %106, i32 noundef %110, i32 noundef %114) #56
  %116 = add i32 %79, 1
  %117 = zext i32 %116 to i64
  %118 = load ptr, ptr %13, align 8, !tbaa !816
  %119 = getelementptr inbounds %class.Mesh, ptr %118, i64 0, i32 45
  %120 = load i64, ptr %119, align 8, !tbaa !543
  %121 = icmp ugt i64 %120, %117
  br i1 %121, label %76, label %67, !llvm.loop !837

122:                                              ; preds = %122, %74
  %123 = phi ptr [ %164, %122 ], [ %68, %74 ]
  %124 = phi i64 [ %163, %122 ], [ %70, %74 ]
  %125 = phi i32 [ %162, %122 ], [ %75, %74 ]
  %126 = getelementptr inbounds %class.Mesh, ptr %123, i64 0, i32 23
  %127 = load ptr, ptr %126, align 8, !tbaa !833
  %128 = getelementptr inbounds %class.Mesh, ptr %123, i64 0, i32 9
  %129 = load i32, ptr %128, align 4, !tbaa !650
  %130 = getelementptr inbounds %class.Mesh, ptr %123, i64 0, i32 13
  %131 = load i32, ptr %130, align 4, !tbaa !654
  %132 = add i32 %131, %125
  %133 = getelementptr inbounds %class.Mesh, ptr %123, i64 0, i32 64
  %134 = load ptr, ptr %133, align 8, !tbaa !637
  %135 = getelementptr inbounds i32, ptr %134, i64 %124
  %136 = load i32, ptr %135, align 4, !tbaa !68
  %137 = getelementptr inbounds %class.Mesh, ptr %123, i64 0, i32 65
  %138 = load ptr, ptr %137, align 8, !tbaa !638
  %139 = getelementptr inbounds i32, ptr %138, i64 %124
  %140 = load i32, ptr %139, align 4, !tbaa !68
  %141 = getelementptr inbounds %class.Mesh, ptr %123, i64 0, i32 67
  %142 = load ptr, ptr %141, align 8, !tbaa !639
  %143 = getelementptr inbounds i32, ptr %142, i64 %124
  %144 = load i32, ptr %143, align 4, !tbaa !68
  %145 = getelementptr inbounds %class.Mesh, ptr %123, i64 0, i32 69
  %146 = load ptr, ptr %145, align 8, !tbaa !684
  %147 = getelementptr inbounds i32, ptr %146, i64 %124
  %148 = load i32, ptr %147, align 4, !tbaa !68
  %149 = getelementptr inbounds %class.Mesh, ptr %123, i64 0, i32 70
  %150 = load ptr, ptr %149, align 8, !tbaa !685
  %151 = getelementptr inbounds i32, ptr %150, i64 %124
  %152 = load i32, ptr %151, align 4, !tbaa !68
  %153 = getelementptr inbounds %class.Mesh, ptr %123, i64 0, i32 71
  %154 = load ptr, ptr %153, align 8, !tbaa !686
  %155 = getelementptr inbounds i32, ptr %154, i64 %124
  %156 = load i32, ptr %155, align 4, !tbaa !68
  %157 = getelementptr inbounds %class.Mesh, ptr %123, i64 0, i32 72
  %158 = load ptr, ptr %157, align 8, !tbaa !687
  %159 = getelementptr inbounds i32, ptr %158, i64 %124
  %160 = load i32, ptr %159, align 4, !tbaa !68
  %161 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %127, ptr noundef nonnull @.str.21.298, i32 noundef %129, i32 noundef %125, i32 noundef %132, i32 noundef %136, i32 noundef %140, i32 noundef %144, i32 noundef %148, i32 noundef %152, i32 noundef %156, i32 noundef %160) #56
  %162 = add i32 %125, 1
  %163 = zext i32 %162 to i64
  %164 = load ptr, ptr %13, align 8, !tbaa !816
  %165 = getelementptr inbounds %class.Mesh, ptr %164, i64 0, i32 47
  %166 = load i64, ptr %165, align 8, !tbaa !652
  %167 = icmp ugt i64 %166, %163
  br i1 %167, label %122, label %214, !llvm.loop !838

168:                                              ; preds = %22
  %169 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %58, ptr noundef nonnull @.str.22.299, i32 noundef %60) #56
  %170 = load ptr, ptr %13, align 8, !tbaa !816
  %171 = getelementptr inbounds %class.Mesh, ptr %170, i64 0, i32 47
  %172 = load i64, ptr %171, align 8, !tbaa !652
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %214, label %174

174:                                              ; preds = %168
  %175 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 3
  %176 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 4
  %177 = getelementptr inbounds %class.State, ptr %0, i64 0, i32 5
  br label %178

178:                                              ; preds = %178, %174
  %179 = phi ptr [ %170, %174 ], [ %210, %178 ]
  %180 = phi i64 [ 0, %174 ], [ %209, %178 ]
  %181 = phi i32 [ 0, %174 ], [ %208, %178 ]
  %182 = getelementptr inbounds %class.Mesh, ptr %179, i64 0, i32 23
  %183 = load ptr, ptr %182, align 8, !tbaa !833
  %184 = getelementptr inbounds %class.Mesh, ptr %179, i64 0, i32 9
  %185 = load i32, ptr %184, align 4, !tbaa !650
  %186 = load ptr, ptr %175, align 8, !tbaa !566
  %187 = getelementptr inbounds double, ptr %186, i64 %180
  %188 = load double, ptr %187, align 8, !tbaa !171
  %189 = load ptr, ptr %176, align 8, !tbaa !817
  %190 = getelementptr inbounds double, ptr %189, i64 %180
  %191 = load double, ptr %190, align 8, !tbaa !171
  %192 = load ptr, ptr %177, align 8, !tbaa !818
  %193 = getelementptr inbounds double, ptr %192, i64 %180
  %194 = load double, ptr %193, align 8, !tbaa !171
  %195 = getelementptr inbounds %class.Mesh, ptr %179, i64 0, i32 64
  %196 = load ptr, ptr %195, align 8, !tbaa !637
  %197 = getelementptr inbounds i32, ptr %196, i64 %180
  %198 = load i32, ptr %197, align 4, !tbaa !68
  %199 = getelementptr inbounds %class.Mesh, ptr %179, i64 0, i32 65
  %200 = load ptr, ptr %199, align 8, !tbaa !638
  %201 = getelementptr inbounds i32, ptr %200, i64 %180
  %202 = load i32, ptr %201, align 4, !tbaa !68
  %203 = getelementptr inbounds %class.Mesh, ptr %179, i64 0, i32 67
  %204 = load ptr, ptr %203, align 8, !tbaa !639
  %205 = getelementptr inbounds i32, ptr %204, i64 %180
  %206 = load i32, ptr %205, align 4, !tbaa !68
  %207 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %183, ptr noundef nonnull @.str.23.300, i32 noundef %185, i32 noundef %181, double noundef %188, double noundef %191, double noundef %194, i32 noundef %198, i32 noundef %202, i32 noundef %206) #56
  %208 = add i32 %181, 1
  %209 = zext i32 %208 to i64
  %210 = load ptr, ptr %13, align 8, !tbaa !816
  %211 = getelementptr inbounds %class.Mesh, ptr %210, i64 0, i32 47
  %212 = load i64, ptr %211, align 8, !tbaa !652
  %213 = icmp ugt i64 %212, %209
  br i1 %213, label %178, label %214, !llvm.loop !839

214:                                              ; preds = %178, %168, %122, %67
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %10) #57
  ret void
}

; Function Attrs: nofree nounwind optsize uwtable
define internal void @cpu_timer_start(ptr nocapture noundef %0) #35 {
  %2 = tail call i32 @gettimeofday(ptr noundef %0, ptr noundef null) #59
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @gettimeofday(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #37

; Function Attrs: nofree nounwind optsize uwtable
define internal double @cpu_timer_stop(i64 %0, i64 %1) #35 {
  %3 = alloca %struct.timeval, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #57
  %4 = call i32 @gettimeofday(ptr noundef nonnull %3, ptr noundef null) #59
  %5 = load i64, ptr %3, align 8, !tbaa !840
  %6 = sub nsw i64 %5, %0
  %7 = getelementptr inbounds %struct.timeval, ptr %3, i64 0, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !842
  %9 = sub nsw i64 %8, %1
  %10 = sitofp i64 %6 to double
  %11 = sitofp i64 %9 to double
  %12 = fmul double %11, 0x3EB0C6F7A0B5ED8D
  %13 = fadd double %12, %10
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #57
  ret double %13
}

; Function Attrs: nounwind optsize uwtable
define internal void @calc_zorder(i32 noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, i32 noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef %7) #10 {
  %9 = icmp sgt i32 %0, 0
  br i1 %9, label %10, label %36

10:                                               ; preds = %8
  %11 = zext i32 %0 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds i32, ptr %3, i64 %13
  %15 = load i32, ptr %14, align 4, !tbaa !132
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds i32, ptr %1, i64 %13
  %19 = load i32, ptr %18, align 4, !tbaa !132
  %20 = sext i32 %19 to i64
  %21 = tail call i64 @index_to_bit(i64 noundef %20, i32 noundef %15, i32 noundef %4, i32 noundef %5) #56, !range !843
  %22 = getelementptr inbounds i32, ptr %2, i64 %13
  %23 = load i32, ptr %22, align 4, !tbaa !132
  %24 = sext i32 %23 to i64
  %25 = load i32, ptr %14, align 4, !tbaa !132
  %26 = tail call i64 @index_to_bit(i64 noundef %24, i32 noundef %25, i32 noundef %4, i32 noundef %5) #56, !range !843
  %27 = shl nuw nsw i64 %26, 1
  %28 = or i64 %27, %21
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds i32, ptr %6, i64 %13
  store i32 %29, ptr %30, align 4, !tbaa !132
  %31 = getelementptr inbounds i32, ptr %7, i64 %13
  %32 = trunc i64 %13 to i32
  store i32 %32, ptr %31, align 4, !tbaa !132
  br label %33

33:                                               ; preds = %17, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12, !llvm.loop !844

36:                                               ; preds = %33, %8
  tail call void @S7_Index_Sort(ptr noundef %6, i32 noundef %0, i32 noundef 4, ptr noundef %7) #59
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn uwtable
define internal i64 @index_to_bit(i64 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #54 {
  %5 = sext i32 %3 to i64
  %6 = sub i64 %0, %5
  %7 = icmp slt i32 %1, %2
  br i1 %7, label %8, label %14

8:                                                ; preds = %4
  %9 = uitofp i64 %6 to double
  %10 = sub nsw i32 %2, %1
  %11 = tail call double @ldexp(double 1.000000e+00, i32 %10) #57
  %12 = fmul double %11, %9
  %13 = fptoui double %12 to i64
  br label %14

14:                                               ; preds = %8, %4
  %15 = phi i64 [ %13, %8 ], [ %6, %4 ]
  %16 = shl i64 %15, 8
  %17 = or i64 %16, %15
  %18 = and i64 %17, 16711935
  %19 = shl nuw nsw i64 %18, 4
  %20 = or i64 %19, %18
  %21 = and i64 %20, 252645135
  %22 = shl nuw nsw i64 %21, 2
  %23 = or i64 %22, %21
  %24 = and i64 %23, 858993459
  %25 = shl nuw nsw i64 %24, 1
  %26 = or i64 %25, %24
  %27 = and i64 %26, 1431655765
  ret i64 %27
}

; Function Attrs: nofree willreturn
declare double @ldexp(double, i32) local_unnamed_addr #55

attributes #0 = { mustprogress nofree nosync nounwind optsize willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: write) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nofree nounwind }
attributes #10 = { nounwind optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nobuiltin nounwind optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #13 = { mustprogress optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { noinline noreturn nounwind optsize uwtable "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nounwind optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { inlinehint mustprogress optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { noreturn optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #19 = { nobuiltin optsize allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { mustprogress nofree nounwind optsize willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #22 = { mustprogress nofree nounwind optsize willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { inlinehint optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { inlinehint nounwind optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #26 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { mustprogress nofree nounwind optsize willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { mustprogress nounwind optsize willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #29 = { mustprogress nounwind optsize willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #30 = { mustprogress nofree nounwind optsize willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #31 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(readwrite, argmem: read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #32 = { mustprogress nofree nounwind optsize willreturn memory(readwrite, argmem: read, inaccessiblemem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #33 = { nofree norecurse nosync nounwind optsize memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #34 = { nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #35 = { nofree nounwind optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #36 = { mustprogress norecurse optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #37 = { nofree nounwind optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #38 = { noreturn nounwind optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #39 = { mustprogress nofree nounwind optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #40 = { mustprogress nofree nounwind optsize willreturn memory(readwrite, argmem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #41 = { mustprogress nofree nounwind optsize willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #42 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(readwrite, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #43 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #44 = { nofree norecurse nosync nounwind optsize memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #45 = { nofree norecurse nosync nounwind optsize memory(readwrite, argmem: read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #46 = { nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #47 = { nofree optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #48 = { mustprogress nofree nounwind optsize willreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #49 = { mustprogress nofree nounwind optsize willreturn memory(write, argmem: readwrite, inaccessiblemem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #50 = { mustprogress nofree norecurse nosync nounwind optsize memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #51 = { mustprogress nofree nounwind optsize willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #52 = { mustprogress nofree norecurse nosync nounwind optsize memory(write, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #53 = { mustprogress nofree nosync nounwind optsize willreturn memory(argmem: write) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #54 = { mustprogress nofree nounwind optsize willreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #55 = { nofree willreturn }
attributes #56 = { optsize }
attributes #57 = { nounwind }
attributes #58 = { builtin nounwind optsize }
attributes #59 = { nounwind optsize }
attributes #60 = { noreturn nounwind }
attributes #61 = { noreturn optsize }
attributes #62 = { builtin optsize allocsize(0) }
attributes #63 = { nounwind optsize willreturn memory(read) }
attributes #64 = { noreturn }
attributes #65 = { nounwind optsize allocsize(0) }
attributes #66 = { nounwind optsize allocsize(1) }
attributes #67 = { noreturn nounwind optsize }
attributes #68 = { nounwind optsize allocsize(0,1) }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6}

!0 = !{!"clang version 17.0.6 (https://github.com/Casperento/llvm-project.git 9b0073551ece0d22bf3378af2b03e456a26031b6)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 2}
!5 = !{i32 1, !"ThinLTO", i32 0}
!6 = !{i32 1, !"EnableSplitLTOUnit", i32 1}
!7 = !{!8, !8, i64 0}
!8 = !{!"double", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C/C++ TBAA"}
!11 = !{!12, !8, i64 16}
!12 = !{!"", !13, i64 0, !13, i64 16}
!13 = !{!"", !8, i64 0, !8, i64 8}
!14 = !{!12, !8, i64 0}
!15 = !{!12, !8, i64 24}
!16 = !{!12, !8, i64 8}
!17 = !{!18, !19, i64 0}
!18 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!19 = !{!"any pointer", !20, i64 0}
!20 = !{!"omnipotent char", !21, i64 0}
!21 = !{!"Simple C++ TBAA"}
!22 = !{!18, !19, i64 8}
!23 = !{!24, !19, i64 0}
!24 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !25, i64 0, !26, i64 8, !20, i64 16}
!25 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !19, i64 0}
!26 = !{!"long", !20, i64 0}
!27 = distinct !{!27, !28}
!28 = !{!"llvm.loop.mustprogress"}
!29 = !{!19, !19, i64 0}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt5dequeIN2PP4WordESaIS1_EE5beginEv: %agg.result"}
!32 = distinct !{!32, !"_ZNSt5dequeIN2PP4WordESaIS1_EE5beginEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt5dequeIN2PP4WordESaIS1_EE3endEv: %agg.result"}
!35 = distinct !{!35, !"_ZNSt5dequeIN2PP4WordESaIS1_EE3endEv"}
!36 = !{!37, !19, i64 24}
!37 = !{!"_ZTSSt15_Deque_iteratorIN2PP4WordERS1_PS1_E", !19, i64 0, !19, i64 8, !19, i64 16, !19, i64 24}
!38 = !{!37, !19, i64 0}
!39 = distinct !{!39, !28}
!40 = distinct !{!40, !28}
!41 = !{!37, !19, i64 16}
!42 = !{!37, !19, i64 8}
!43 = !{!44, !19, i64 0}
!44 = !{!"_ZTSNSt11_Deque_baseIN2PP4WordESaIS1_EE16_Deque_impl_dataE", !19, i64 0, !26, i64 8, !37, i64 16, !37, i64 48}
!45 = !{!44, !19, i64 40}
!46 = !{!44, !19, i64 72}
!47 = distinct !{!47, !28}
!48 = !{!"branch_weights", i32 1, i32 2000}
!49 = !{!24, !26, i64 8}
!50 = !{!20, !20, i64 0}
!51 = !{!52, !52, i64 0}
!52 = !{!"vtable pointer", !21, i64 0}
!53 = !{!54, !19, i64 240}
!54 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !55, i64 0, !19, i64 216, !20, i64 224, !61, i64 225, !19, i64 232, !19, i64 240, !19, i64 248, !19, i64 256}
!55 = !{!"_ZTSSt8ios_base", !26, i64 8, !26, i64 16, !56, i64 24, !57, i64 28, !57, i64 32, !19, i64 40, !58, i64 48, !20, i64 64, !59, i64 192, !19, i64 200, !60, i64 208}
!56 = !{!"_ZTSSt13_Ios_Fmtflags", !20, i64 0}
!57 = !{!"_ZTSSt12_Ios_Iostate", !20, i64 0}
!58 = !{!"_ZTSNSt8ios_base6_WordsE", !19, i64 0, !26, i64 8}
!59 = !{!"int", !20, i64 0}
!60 = !{!"_ZTSSt6locale", !19, i64 0}
!61 = !{!"bool", !20, i64 0}
!62 = !{!63, !20, i64 56}
!63 = !{!"_ZTSSt5ctypeIcE", !64, i64 0, !19, i64 16, !61, i64 24, !19, i64 32, !19, i64 40, !19, i64 48, !20, i64 56, !20, i64 57, !20, i64 313, !20, i64 569}
!64 = !{!"_ZTSNSt6locale5facetE", !59, i64 8}
!65 = !{!66, !19, i64 0}
!66 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!67 = !{!66, !19, i64 16}
!68 = !{!59, !59, i64 0}
!69 = distinct !{!69, !28}
!70 = !{!66, !19, i64 8}
!71 = !{!72, !19, i64 8}
!72 = !{!"_ZTSSt15_Rb_tree_header", !73, i64 0, !26, i64 32}
!73 = !{!"_ZTSSt18_Rb_tree_node_base", !74, i64 0, !19, i64 8, !19, i64 16, !19, i64 24}
!74 = !{!"_ZTSSt14_Rb_tree_color", !20, i64 0}
!75 = distinct !{!75, !28}
!76 = !{!77, !19, i64 8}
!77 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeE", !19, i64 0, !19, i64 8}
!78 = !{!25, !19, i64 0}
!79 = !{!18, !19, i64 16}
!80 = !{!72, !26, i64 32}
!81 = !{!73, !19, i64 24}
!82 = !{!77, !19, i64 0}
!83 = distinct !{!83, !28}
!84 = !{!72, !19, i64 16}
!85 = !{!26, !26, i64 0}
!86 = distinct !{!86, !28}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_: %__dest"}
!89 = distinct !{!89, !"_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_"}
!90 = !{!91}
!91 = distinct !{!91, !89, !"_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_: %__orig"}
!92 = distinct !{!92, !28}
!93 = !{!54, !19, i64 216}
!94 = !{!54, !20, i64 224}
!95 = !{!54, !61, i64 225}
!96 = !{!97, !99, i64 64}
!97 = !{!"_ZTSNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE", !98, i64 0, !99, i64 64, !24, i64 72}
!98 = !{!"_ZTSSt15basic_streambufIcSt11char_traitsIcEE", !19, i64 8, !19, i64 16, !19, i64 24, !19, i64 32, !19, i64 40, !19, i64 48, !60, i64 56}
!99 = !{!"_ZTSSt13_Ios_Openmode", !20, i64 0}
!100 = !{!101, !26, i64 8}
!101 = !{!"_ZTSSi", !26, i64 8}
!102 = !{!103, !19, i64 0}
!103 = !{!"_ZTSSt18_Bit_iterator_base", !19, i64 0, !59, i64 8}
!104 = !{!105, !19, i64 32}
!105 = !{!"_ZTSNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataE", !106, i64 0, !106, i64 16, !19, i64 32}
!106 = !{!"_ZTSSt13_Bit_iterator", !103, i64 0}
!107 = !{!108, !19, i64 8}
!108 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataE", !19, i64 0, !19, i64 8, !19, i64 16}
!109 = !{!108, !19, i64 0}
!110 = !{!98, !19, i64 40}
!111 = !{!98, !19, i64 32}
!112 = !{!113, !59, i64 4}
!113 = !{!"_ZTSN2PP4CommE", !59, i64 0, !59, i64 4, !59, i64 8, !59, i64 12}
!114 = !{!113, !59, i64 8}
!115 = !{!113, !59, i64 12}
!116 = !{!117, !61, i64 32}
!117 = !{!"_ZTSN2PP8FunctionE", !24, i64 0, !61, i64 32, !59, i64 36, !24, i64 40, !24, i64 72}
!118 = !{!117, !59, i64 36}
!119 = !{!120, !121, i64 32}
!120 = !{!"", !12, i64 0, !121, i64 32, !121, i64 36, !122, i64 40, !123, i64 48, !121, i64 52, !122, i64 56, !122, i64 64}
!121 = !{!"int", !9, i64 0}
!122 = !{!"any pointer", !9, i64 0}
!123 = !{!"_Bool", !9, i64 0}
!124 = !{!120, !121, i64 36}
!125 = !{!120, !122, i64 40}
!126 = !{!120, !123, i64 48}
!127 = !{!120, !121, i64 52}
!128 = !{!120, !122, i64 56}
!129 = !{!120, !122, i64 64}
!130 = !{i8 0, i8 2}
!131 = !{}
!132 = !{!121, !121, i64 0}
!133 = distinct !{!133, !28, !134, !135}
!134 = !{!"llvm.loop.isvectorized", i32 1}
!135 = !{!"llvm.loop.unroll.runtime.disable"}
!136 = distinct !{!136, !28}
!137 = distinct !{!137, !28}
!138 = distinct !{!138, !28}
!139 = distinct !{!139, !28}
!140 = distinct !{!140, !28}
!141 = distinct !{!141, !28}
!142 = distinct !{!142, !28}
!143 = distinct !{!143, !28}
!144 = distinct !{!144, !28}
!145 = distinct !{!145, !28}
!146 = distinct !{!146, !28}
!147 = !{!148, !19, i64 16}
!148 = !{!"_ZTS24malloc_plus_memory_entry", !19, i64 0, !26, i64 8, !19, i64 16, !26, i64 24, !26, i64 32, !59, i64 40, !19, i64 48}
!149 = !{!148, !26, i64 24}
!150 = !{!148, !26, i64 32}
!151 = !{!148, !59, i64 40}
!152 = !{!148, !26, i64 8}
!153 = !{!148, !19, i64 0}
!154 = !{!148, !19, i64 48}
!155 = !{!156, !19, i64 32}
!156 = !{!"_ZTSSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entryE", !24, i64 0, !19, i64 32}
!157 = !{!158, !19, i64 0}
!158 = !{!"_ZTSSt4pairIPvP24malloc_plus_memory_entryE", !19, i64 0, !19, i64 8}
!159 = !{!158, !19, i64 8}
!160 = distinct !{!160, !28}
!161 = !{!162, !19, i64 0}
!162 = !{!"_ZTSSt4pairIKPvP24malloc_plus_memory_entryE", !19, i64 0, !19, i64 8}
!163 = distinct !{!163, !28}
!164 = distinct !{!164, !28}
!165 = !{!166, !19, i64 8}
!166 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeE", !19, i64 0, !19, i64 8}
!167 = !{!168, !19, i64 32}
!168 = !{!"_ZTSSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entryE", !24, i64 0, !19, i64 32}
!169 = distinct !{!169, !28}
!170 = !{!162, !19, i64 8}
!171 = !{!172, !172, i64 0}
!172 = !{!"double", !20, i64 0}
!173 = distinct !{!173, !28}
!174 = distinct !{!174, !28}
!175 = distinct !{!175, !28}
!176 = distinct !{!176, !28}
!177 = !{!178, !178, i64 0}
!178 = !{!"float", !20, i64 0}
!179 = distinct !{!179, !28}
!180 = distinct !{!180, !28}
!181 = !{!72, !74, i64 0}
!182 = !{!72, !19, i64 24}
!183 = !{!184, !19, i64 0}
!184 = !{!"_ZTSSt4pairIPKcP24malloc_plus_memory_entryE", !19, i64 0, !19, i64 8}
!185 = !{!184, !19, i64 8}
!186 = !{!73, !19, i64 16}
!187 = distinct !{!187, !28}
!188 = distinct !{!188, !28}
!189 = distinct !{!189, !28}
!190 = !{!73, !74, i64 0}
!191 = !{!73, !19, i64 8}
!192 = distinct !{!192, !28}
!193 = !{i64 0, i64 8, !29}
!194 = !{!195, !19, i64 0}
!195 = !{!"_ZTSSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entryEE", !19, i64 0}
!196 = distinct !{!196, !28}
!197 = !{!198, !19, i64 520}
!198 = !{!"_ZTSN2PP11PowerParserE", !199, i64 0, !19, i64 512, !19, i64 520, !24, i64 528, !24, i64 560, !204, i64 592, !59, i64 672, !209, i64 680, !214, i64 728, !219, i64 776, !222, i64 824, !222, i64 904, !19, i64 984, !204, i64 992, !59, i64 1072, !227, i64 1080, !227, i64 1472, !227, i64 1864, !59, i64 2256, !24, i64 2264, !229, i64 2296, !234, i64 2376, !59, i64 2456, !204, i64 2464, !239, i64 2544, !59, i64 2624, !239, i64 2632, !244, i64 2712, !59, i64 2792}
!199 = !{!"_ZTSSt14basic_ofstreamIcSt11char_traitsIcEE", !200, i64 0, !201, i64 8}
!200 = !{!"_ZTSSo"}
!201 = !{!"_ZTSSt13basic_filebufIcSt11char_traitsIcEE", !98, i64 0, !20, i64 64, !202, i64 104, !99, i64 120, !203, i64 124, !203, i64 132, !203, i64 140, !19, i64 152, !26, i64 160, !61, i64 168, !61, i64 169, !61, i64 170, !20, i64 171, !19, i64 176, !19, i64 184, !61, i64 192, !19, i64 200, !19, i64 208, !26, i64 216, !19, i64 224, !19, i64 232}
!202 = !{!"_ZTSSt12__basic_fileIcE", !19, i64 0, !61, i64 8}
!203 = !{!"_ZTS11__mbstate_t", !59, i64 0, !20, i64 4}
!204 = !{!"_ZTSSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE", !205, i64 0}
!205 = !{!"_ZTSSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE", !206, i64 0}
!206 = !{!"_ZTSNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_Deque_implE", !207, i64 0}
!207 = !{!"_ZTSNSt11_Deque_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_Deque_impl_dataE", !19, i64 0, !26, i64 8, !208, i64 16, !208, i64 48}
!208 = !{!"_ZTSSt15_Deque_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS5_PS5_E", !19, i64 0, !19, i64 8, !19, i64 16, !19, i64 24}
!209 = !{!"_ZTSSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE", !210, i64 0}
!210 = !{!"_ZTSSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE", !211, i64 0}
!211 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE13_Rb_tree_implISE_Lb1EEE", !212, i64 0, !72, i64 8}
!212 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE", !213, i64 0}
!213 = !{!"_ZTSSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE"}
!214 = !{!"_ZTSSt3mapIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIiESaISt4pairIKiS5_EEE", !215, i64 0}
!215 = !{!"_ZTSSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE", !216, i64 0}
!216 = !{!"_ZTSNSt8_Rb_treeIiSt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESt10_Select1stIS8_ESt4lessIiESaIS8_EE13_Rb_tree_implISC_Lb1EEE", !217, i64 0, !72, i64 8}
!217 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessIiEE", !218, i64 0}
!218 = !{!"_ZTSSt4lessIiE"}
!219 = !{!"_ZTSSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE", !220, i64 0}
!220 = !{!"_ZTSSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE", !221, i64 0}
!221 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE13_Rb_tree_implISE_Lb1EEE", !212, i64 0, !72, i64 8}
!222 = !{!"_ZTSSt5dequeIN2PP3CmdESaIS1_EE", !223, i64 0}
!223 = !{!"_ZTSSt11_Deque_baseIN2PP3CmdESaIS1_EE", !224, i64 0}
!224 = !{!"_ZTSNSt11_Deque_baseIN2PP3CmdESaIS1_EE11_Deque_implE", !225, i64 0}
!225 = !{!"_ZTSNSt11_Deque_baseIN2PP3CmdESaIS1_EE16_Deque_impl_dataE", !19, i64 0, !26, i64 8, !226, i64 16, !226, i64 48}
!226 = !{!"_ZTSSt15_Deque_iteratorIN2PP3CmdERS1_PS1_E", !19, i64 0, !19, i64 8, !19, i64 16, !19, i64 24}
!227 = !{!"_ZTSNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE", !228, i64 0, !97, i64 24}
!228 = !{!"_ZTSSd", !101, i64 0, !200, i64 16}
!229 = !{!"_ZTSSt5dequeIN2PP8WhenthenESaIS1_EE", !230, i64 0}
!230 = !{!"_ZTSSt11_Deque_baseIN2PP8WhenthenESaIS1_EE", !231, i64 0}
!231 = !{!"_ZTSNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE11_Deque_implE", !232, i64 0}
!232 = !{!"_ZTSNSt11_Deque_baseIN2PP8WhenthenESaIS1_EE16_Deque_impl_dataE", !19, i64 0, !26, i64 8, !233, i64 16, !233, i64 48}
!233 = !{!"_ZTSSt15_Deque_iteratorIN2PP8WhenthenERS1_PS1_E", !19, i64 0, !19, i64 8, !19, i64 16, !19, i64 24}
!234 = !{!"_ZTSSt5dequeIN2PP12RestartblockESaIS1_EE", !235, i64 0}
!235 = !{!"_ZTSSt11_Deque_baseIN2PP12RestartblockESaIS1_EE", !236, i64 0}
!236 = !{!"_ZTSNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE11_Deque_implE", !237, i64 0}
!237 = !{!"_ZTSNSt11_Deque_baseIN2PP12RestartblockESaIS1_EE16_Deque_impl_dataE", !19, i64 0, !26, i64 8, !238, i64 16, !238, i64 48}
!238 = !{!"_ZTSSt15_Deque_iteratorIN2PP12RestartblockERS1_PS1_E", !19, i64 0, !19, i64 8, !19, i64 16, !19, i64 24}
!239 = !{!"_ZTSSt5dequeIbSaIbEE", !240, i64 0}
!240 = !{!"_ZTSSt11_Deque_baseIbSaIbEE", !241, i64 0}
!241 = !{!"_ZTSNSt11_Deque_baseIbSaIbEE11_Deque_implE", !242, i64 0}
!242 = !{!"_ZTSNSt11_Deque_baseIbSaIbEE16_Deque_impl_dataE", !19, i64 0, !26, i64 8, !243, i64 16, !243, i64 48}
!243 = !{!"_ZTSSt15_Deque_iteratorIbRbPbE", !19, i64 0, !19, i64 8, !19, i64 16, !19, i64 24}
!244 = !{!"_ZTSSt5dequeIiSaIiEE", !245, i64 0}
!245 = !{!"_ZTSSt11_Deque_baseIiSaIiEE", !246, i64 0}
!246 = !{!"_ZTSNSt11_Deque_baseIiSaIiEE11_Deque_implE", !247, i64 0}
!247 = !{!"_ZTSNSt11_Deque_baseIiSaIiEE16_Deque_impl_dataE", !19, i64 0, !26, i64 8, !248, i64 16, !248, i64 48}
!248 = !{!"_ZTSSt15_Deque_iteratorIiRiPiE", !19, i64 0, !19, i64 8, !19, i64 16, !19, i64 24}
!249 = !{!198, !59, i64 2456}
!250 = !{!198, !19, i64 512}
!251 = !{!207, !26, i64 8}
!252 = !{!207, !19, i64 0}
!253 = !{!208, !19, i64 24}
!254 = !{!208, !19, i64 8}
!255 = !{!208, !19, i64 16}
!256 = !{!207, !19, i64 16}
!257 = !{!207, !19, i64 48}
!258 = !{!225, !26, i64 8}
!259 = !{!225, !19, i64 0}
!260 = !{!226, !19, i64 24}
!261 = !{!226, !19, i64 8}
!262 = !{!226, !19, i64 16}
!263 = !{!225, !19, i64 16}
!264 = !{!225, !19, i64 48}
!265 = !{!232, !26, i64 8}
!266 = !{!232, !19, i64 0}
!267 = !{!233, !19, i64 24}
!268 = !{!233, !19, i64 8}
!269 = !{!233, !19, i64 16}
!270 = !{!232, !19, i64 16}
!271 = !{!232, !19, i64 48}
!272 = !{!237, !26, i64 8}
!273 = !{!237, !19, i64 0}
!274 = !{!238, !19, i64 24}
!275 = !{!238, !19, i64 8}
!276 = !{!238, !19, i64 16}
!277 = !{!237, !19, i64 16}
!278 = !{!237, !19, i64 48}
!279 = !{!242, !26, i64 8}
!280 = !{!242, !19, i64 0}
!281 = !{!243, !19, i64 24}
!282 = !{!243, !19, i64 8}
!283 = !{!243, !19, i64 16}
!284 = !{!242, !19, i64 16}
!285 = !{!242, !19, i64 48}
!286 = !{!247, !26, i64 8}
!287 = !{!247, !19, i64 0}
!288 = !{!248, !19, i64 24}
!289 = !{!248, !19, i64 8}
!290 = !{!248, !19, i64 16}
!291 = !{!247, !19, i64 16}
!292 = !{!247, !19, i64 48}
!293 = !{!198, !59, i64 672}
!294 = !{!198, !19, i64 984}
!295 = !{!198, !59, i64 2792}
!296 = !{!198, !59, i64 2256}
!297 = !{!298}
!298 = distinct !{!298, !299, !"_ZN2PP4Word10get_stringB5cxx11Ev: %agg.result"}
!299 = distinct !{!299, !"_ZN2PP4Word10get_stringB5cxx11Ev"}
!300 = !{!301}
!301 = distinct !{!301, !302, !"_ZN2PP8Variable11get_varnameB5cxx11Ev: %agg.result"}
!302 = distinct !{!302, !"_ZN2PP8Variable11get_varnameB5cxx11Ev"}
!303 = !{!304}
!304 = distinct !{!304, !305, !"_ZN2PP4Word10get_stringB5cxx11Ev: %agg.result"}
!305 = distinct !{!305, !"_ZN2PP4Word10get_stringB5cxx11Ev"}
!306 = !{!307}
!307 = distinct !{!307, !308, !"_ZN2PP8Variable11get_varnameB5cxx11Ev: %agg.result"}
!308 = distinct !{!308, !"_ZN2PP8Variable11get_varnameB5cxx11Ev"}
!309 = !{!310}
!310 = distinct !{!310, !311, !"_ZN2PP4Word10get_stringB5cxx11Ev: %agg.result"}
!311 = distinct !{!311, !"_ZN2PP4Word10get_stringB5cxx11Ev"}
!312 = !{!313}
!313 = distinct !{!313, !314, !"_ZN2PP8Variable11get_varnameB5cxx11Ev: %agg.result"}
!314 = distinct !{!314, !"_ZN2PP8Variable11get_varnameB5cxx11Ev"}
!315 = !{!316}
!316 = distinct !{!316, !317, !"_ZN2PP4Word10get_stringB5cxx11Ev: %agg.result"}
!317 = distinct !{!317, !"_ZN2PP4Word10get_stringB5cxx11Ev"}
!318 = !{!319}
!319 = distinct !{!319, !320, !"_ZN2PP8Variable11get_varnameB5cxx11Ev: %agg.result"}
!320 = distinct !{!320, !"_ZN2PP8Variable11get_varnameB5cxx11Ev"}
!321 = !{!322}
!322 = distinct !{!322, !323, !"_ZN2PP4Word10get_stringB5cxx11Ev: %agg.result"}
!323 = distinct !{!323, !"_ZN2PP4Word10get_stringB5cxx11Ev"}
!324 = !{!325}
!325 = distinct !{!325, !326, !"_ZN2PP8Variable11get_varnameB5cxx11Ev: %agg.result"}
!326 = distinct !{!326, !"_ZN2PP8Variable11get_varnameB5cxx11Ev"}
!327 = !{!328}
!328 = distinct !{!328, !329, !"_ZN2PP4Word10get_stringB5cxx11Ev: %agg.result"}
!329 = distinct !{!329, !"_ZN2PP4Word10get_stringB5cxx11Ev"}
!330 = !{!331}
!331 = distinct !{!331, !332, !"_ZN2PP8Variable11get_varnameB5cxx11Ev: %agg.result"}
!332 = distinct !{!332, !"_ZN2PP8Variable11get_varnameB5cxx11Ev"}
!333 = !{!334}
!334 = distinct !{!334, !335, !"_ZN2PP4Word10get_stringB5cxx11Ev: %agg.result"}
!335 = distinct !{!335, !"_ZN2PP4Word10get_stringB5cxx11Ev"}
!336 = !{!337}
!337 = distinct !{!337, !338, !"_ZN2PP8Variable11get_varnameB5cxx11Ev: %agg.result"}
!338 = distinct !{!338, !"_ZN2PP8Variable11get_varnameB5cxx11Ev"}
!339 = !{!340}
!340 = distinct !{!340, !341, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!341 = distinct !{!341, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!342 = !{!343}
!343 = distinct !{!343, !344, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!344 = distinct !{!344, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!345 = !{!346}
!346 = distinct !{!346, !347, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!347 = distinct !{!347, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!348 = !{!349}
!349 = distinct !{!349, !350, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!350 = distinct !{!350, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!351 = !{!352}
!352 = distinct !{!352, !353, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!353 = distinct !{!353, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!354 = !{!355}
!355 = distinct !{!355, !356, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!356 = distinct !{!356, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!357 = !{!358}
!358 = distinct !{!358, !359, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!359 = distinct !{!359, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!360 = !{!361}
!361 = distinct !{!361, !362, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!362 = distinct !{!362, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!363 = !{!364}
!364 = distinct !{!364, !365, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!365 = distinct !{!365, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!366 = !{!367}
!367 = distinct !{!367, !368, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!368 = distinct !{!368, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!369 = !{!370}
!370 = distinct !{!370, !371, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!371 = distinct !{!371, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!372 = !{!373}
!373 = distinct !{!373, !374, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!374 = distinct !{!374, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!375 = !{!376}
!376 = distinct !{!376, !377, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!377 = distinct !{!377, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!378 = !{!379}
!379 = distinct !{!379, !380, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!380 = distinct !{!380, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!381 = !{!382}
!382 = distinct !{!382, !383, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!383 = distinct !{!383, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!384 = !{!385}
!385 = distinct !{!385, !386, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!386 = distinct !{!386, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!387 = !{!388}
!388 = distinct !{!388, !389, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!389 = distinct !{!389, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!390 = !{!391}
!391 = distinct !{!391, !392, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!392 = distinct !{!392, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!393 = !{!394}
!394 = distinct !{!394, !395, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!395 = distinct !{!395, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!396 = !{!397}
!397 = distinct !{!397, !398, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!398 = distinct !{!398, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!399 = !{!400}
!400 = distinct !{!400, !401, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!401 = distinct !{!401, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!402 = !{!403}
!403 = distinct !{!403, !404, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!404 = distinct !{!404, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!405 = !{!406}
!406 = distinct !{!406, !407, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!407 = distinct !{!407, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!408 = !{!409}
!409 = distinct !{!409, !410, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!410 = distinct !{!410, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!411 = !{!412}
!412 = distinct !{!412, !413, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!413 = distinct !{!413, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!414 = !{!415}
!415 = distinct !{!415, !416, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!416 = distinct !{!416, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!417 = !{!418}
!418 = distinct !{!418, !419, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!419 = distinct !{!419, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!420 = !{!421}
!421 = distinct !{!421, !422, !"_ZN2PP8Function8get_nameB5cxx11Ev: %agg.result"}
!422 = distinct !{!422, !"_ZN2PP8Function8get_nameB5cxx11Ev"}
!423 = !{!247, !19, i64 40}
!424 = !{!247, !19, i64 72}
!425 = distinct !{!425, !28}
!426 = !{!242, !19, i64 40}
!427 = !{!242, !19, i64 72}
!428 = distinct !{!428, !28}
!429 = !{!430}
!430 = distinct !{!430, !431, !"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv: %agg.result"}
!431 = distinct !{!431, !"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv"}
!432 = !{!433}
!433 = distinct !{!433, !434, !"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv: %agg.result"}
!434 = distinct !{!434, !"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv"}
!435 = !{!436}
!436 = distinct !{!436, !437, !"_ZNSt5dequeIN2PP12RestartblockESaIS1_EE5beginEv: %agg.result"}
!437 = distinct !{!437, !"_ZNSt5dequeIN2PP12RestartblockESaIS1_EE5beginEv"}
!438 = !{!439}
!439 = distinct !{!439, !440, !"_ZNSt5dequeIN2PP12RestartblockESaIS1_EE3endEv: %agg.result"}
!440 = distinct !{!440, !"_ZNSt5dequeIN2PP12RestartblockESaIS1_EE3endEv"}
!441 = !{!442}
!442 = distinct !{!442, !443, !"_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5beginEv: %agg.result"}
!443 = distinct !{!443, !"_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5beginEv"}
!444 = !{!445}
!445 = distinct !{!445, !446, !"_ZNSt5dequeIN2PP8WhenthenESaIS1_EE3endEv: %agg.result"}
!446 = distinct !{!446, !"_ZNSt5dequeIN2PP8WhenthenESaIS1_EE3endEv"}
!447 = !{!448}
!448 = distinct !{!448, !449, !"_ZNSt5dequeIN2PP3CmdESaIS1_EE5beginEv: %agg.result"}
!449 = distinct !{!449, !"_ZNSt5dequeIN2PP3CmdESaIS1_EE5beginEv"}
!450 = !{!451}
!451 = distinct !{!451, !452, !"_ZNSt5dequeIN2PP3CmdESaIS1_EE3endEv: %agg.result"}
!452 = distinct !{!452, !"_ZNSt5dequeIN2PP3CmdESaIS1_EE3endEv"}
!453 = distinct !{!453, !28}
!454 = distinct !{!454, !28}
!455 = distinct !{!455, !28}
!456 = !{!226, !19, i64 0}
!457 = distinct !{!457, !28}
!458 = distinct !{!458, !28}
!459 = !{!225, !19, i64 40}
!460 = !{!225, !19, i64 72}
!461 = distinct !{!461, !28}
!462 = !{!233, !19, i64 0}
!463 = distinct !{!463, !28}
!464 = !{!232, !19, i64 40}
!465 = !{!232, !19, i64 72}
!466 = distinct !{!466, !28}
!467 = distinct !{!467, !28}
!468 = !{!238, !19, i64 0}
!469 = distinct !{!469, !28}
!470 = !{!237, !19, i64 40}
!471 = !{!237, !19, i64 72}
!472 = distinct !{!472, !28}
!473 = distinct !{!473, !28}
!474 = !{!208, !19, i64 0}
!475 = distinct !{!475, !28}
!476 = distinct !{!476, !28}
!477 = !{!207, !19, i64 40}
!478 = !{!207, !19, i64 72}
!479 = distinct !{!479, !28}
!480 = distinct !{!480, !28}
!481 = !{!482, !19, i64 8}
!482 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeE", !19, i64 0, !19, i64 8}
!483 = !{!482, !19, i64 0}
!484 = distinct !{!484, !28}
!485 = distinct !{!485, !28}
!486 = distinct !{!486, !28}
!487 = distinct !{!487, !28}
!488 = distinct !{!488, !28}
!489 = distinct !{!489, !28}
!490 = distinct !{!490, !28}
!491 = !{!55, !57, i64 32}
!492 = !{!493}
!493 = distinct !{!493, !494, !"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv: %agg.result"}
!494 = distinct !{!494, !"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv"}
!495 = !{!496}
!496 = distinct !{!496, !497, !"_ZNSt5dequeIN2PP3CmdESaIS1_EE5beginEv: %agg.result"}
!497 = distinct !{!497, !"_ZNSt5dequeIN2PP3CmdESaIS1_EE5beginEv"}
!498 = !{!499}
!499 = distinct !{!499, !500, !"_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5beginEv: %agg.result"}
!500 = distinct !{!500, !"_ZNSt5dequeIN2PP8WhenthenESaIS1_EE5beginEv"}
!501 = !{!502}
!502 = distinct !{!502, !503, !"_ZNSt5dequeIN2PP12RestartblockESaIS1_EE5beginEv: %agg.result"}
!503 = distinct !{!503, !"_ZNSt5dequeIN2PP12RestartblockESaIS1_EE5beginEv"}
!504 = !{!505}
!505 = distinct !{!505, !506, !"_ZNSt5dequeIN2PP12RestartblockESaIS1_EE3endEv: %agg.result"}
!506 = distinct !{!506, !"_ZNSt5dequeIN2PP12RestartblockESaIS1_EE3endEv"}
!507 = !{i64 0, i64 8, !29, i64 8, i64 8, !29, i64 16, i64 8, !29, i64 24, i64 8, !29}
!508 = !{!509}
!509 = distinct !{!509, !510, !"_ZNSt5dequeIN2PP8WhenthenESaIS1_EE3endEv: %agg.result"}
!510 = distinct !{!510, !"_ZNSt5dequeIN2PP8WhenthenESaIS1_EE3endEv"}
!511 = !{!512}
!512 = distinct !{!512, !513, !"_ZNSt5dequeIN2PP3CmdESaIS1_EE3endEv: %agg.result"}
!513 = distinct !{!513, !"_ZNSt5dequeIN2PP3CmdESaIS1_EE3endEv"}
!514 = !{!515}
!515 = distinct !{!515, !516, !"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv: %agg.result"}
!516 = distinct !{!516, !"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv"}
!517 = !{!518, !59, i64 56}
!518 = !{!"_ZTSN2PP8VariableE", !24, i64 0, !519, i64 32, !59, i64 56, !59, i64 60, !59, i64 64, !522, i64 72, !61, i64 96, !61, i64 97, !24, i64 104}
!519 = !{!"_ZTSSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE", !520, i64 0}
!520 = !{!"_ZTSSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE", !521, i64 0}
!521 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implE", !18, i64 0}
!522 = !{!"_ZTSSt6vectorIiSaIiEE", !523, i64 0}
!523 = !{!"_ZTSSt12_Vector_baseIiSaIiEE", !524, i64 0}
!524 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE12_Vector_implE", !66, i64 0}
!525 = !{!518, !59, i64 64}
!526 = !{!518, !59, i64 60}
!527 = !{!518, !61, i64 96}
!528 = !{!518, !61, i64 97}
!529 = !{!530, !61, i64 36}
!530 = !{!"_ZTSN2PP4WordE", !24, i64 0, !531, i64 32, !61, i64 36, !61, i64 37, !59, i64 40, !59, i64 44, !24, i64 48, !59, i64 80, !59, i64 84, !24, i64 88, !19, i64 120}
!531 = !{!"_ZTSN2PP8WordTypeE", !20, i64 0}
!532 = !{!530, !531, i64 32}
!533 = !{!530, !61, i64 37}
!534 = !{!530, !19, i64 120}
!535 = !{!530, !59, i64 80}
!536 = !{!530, !59, i64 84}
!537 = !{!530, !59, i64 40}
!538 = !{!530, !59, i64 44}
!539 = !{!55, !26, i64 8}
!540 = !{!61, !61, i64 0}
!541 = !{!542, !542, i64 0}
!542 = !{!"_ZTS16partition_method", !20, i64 0}
!543 = !{!544, !26, i64 1160}
!544 = !{!"_ZTS4Mesh", !59, i64 0, !545, i64 8, !545, i64 104, !20, i64 200, !20, i64 392, !20, i64 584, !20, i64 600, !61, i64 616, !61, i64 617, !59, i64 620, !59, i64 624, !59, i64 628, !59, i64 632, !59, i64 636, !19, i64 640, !19, i64 648, !178, i64 656, !172, i64 664, !59, i64 672, !522, i64 680, !522, i64 704, !522, i64 728, !522, i64 752, !19, i64 776, !554, i64 784, !522, i64 856, !522, i64 880, !522, i64 904, !522, i64 928, !522, i64 952, !522, i64 976, !522, i64 1000, !522, i64 1024, !557, i64 1048, !557, i64 1072, !557, i64 1096, !59, i64 1120, !59, i64 1124, !59, i64 1128, !59, i64 1132, !59, i64 1136, !59, i64 1140, !59, i64 1144, !59, i64 1148, !59, i64 1152, !26, i64 1160, !26, i64 1168, !26, i64 1176, !172, i64 1184, !172, i64 1192, !172, i64 1200, !172, i64 1208, !172, i64 1216, !172, i64 1224, !172, i64 1232, !172, i64 1240, !172, i64 1248, !172, i64 1256, !172, i64 1264, !172, i64 1272, !172, i64 1280, !172, i64 1288, !172, i64 1296, !522, i64 1304, !19, i64 1328, !19, i64 1336, !19, i64 1344, !19, i64 1352, !19, i64 1360, !19, i64 1368, !19, i64 1376, !19, i64 1384, !19, i64 1392, !19, i64 1400, !19, i64 1408, !557, i64 1416, !557, i64 1440, !557, i64 1464, !557, i64 1488, !557, i64 1512, !557, i64 1536, !59, i64 1560, !59, i64 1564, !522, i64 1568, !522, i64 1592, !522, i64 1616, !522, i64 1640, !522, i64 1664, !522, i64 1688, !522, i64 1712, !522, i64 1736, !522, i64 1760, !522, i64 1784, !522, i64 1808, !522, i64 1832, !522, i64 1856, !522, i64 1880, !522, i64 1904, !522, i64 1928, !522, i64 1952, !522, i64 1976, !522, i64 2000, !522, i64 2024, !522, i64 2048, !522, i64 2072, !522, i64 2096, !522, i64 2120, !522, i64 2144, !522, i64 2168, !522, i64 2192, !522, i64 2216, !522, i64 2240, !522, i64 2264}
!545 = !{!"_ZTS10MallocPlus", !546, i64 0, !549, i64 48}
!546 = !{!"_ZTSSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP24malloc_plus_memory_entrySt4lessIS5_ESaISt4pairIKS5_S7_EEE", !547, i64 0}
!547 = !{!"_ZTSSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE", !548, i64 0}
!548 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE13_Rb_tree_implISE_Lb1EEE", !212, i64 0, !72, i64 8}
!549 = !{!"_ZTSSt3mapIPvP24malloc_plus_memory_entrySt4lessIS0_ESaISt4pairIKS0_S2_EEE", !550, i64 0}
!550 = !{!"_ZTSSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE", !551, i64 0}
!551 = !{!"_ZTSNSt8_Rb_treeIPvSt4pairIKS0_P24malloc_plus_memory_entryESt10_Select1stIS5_ESt4lessIS0_ESaIS5_EE13_Rb_tree_implIS9_Lb1EEE", !552, i64 0, !72, i64 8}
!552 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessIPvEE", !553, i64 0}
!553 = !{!"_ZTSSt4lessIPvE"}
!554 = !{!"_ZTS7TKDTree", !555, i64 0, !59, i64 32, !59, i64 36, !19, i64 40, !61, i64 48, !59, i64 52, !19, i64 56, !19, i64 64}
!555 = !{!"_ZTS7TBounds", !556, i64 0, !556, i64 16}
!556 = !{!"_ZTS7TVector", !172, i64 0, !172, i64 8}
!557 = !{!"_ZTSSt6vectorIdSaIdEE", !558, i64 0}
!558 = !{!"_ZTSSt12_Vector_baseIdSaIdEE", !559, i64 0}
!559 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE12_Vector_implE", !108, i64 0}
!560 = !{i64 0, i64 8, !85, i64 8, i64 8, !85}
!561 = !{i64 0, i64 8, !85}
!562 = !{!544, !172, i64 1184}
!563 = !{!544, !172, i64 1192}
!564 = !{!544, !172, i64 1200}
!565 = !{!544, !172, i64 1208}
!566 = !{!567, !19, i64 200}
!567 = !{!"_ZTS5State", !545, i64 0, !545, i64 96, !19, i64 192, !19, i64 200, !19, i64 208, !19, i64 216, !20, i64 224, !20, i64 296}
!568 = distinct !{!568, !28}
!569 = distinct !{!569, !28}
!570 = distinct !{!570, !28}
!571 = distinct !{!571, !28}
!572 = !{!573, !19, i64 0}
!573 = !{!"_ZTSNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_P24malloc_plus_memory_entryESt10_Select1stISA_ESt4lessIS5_ESaISA_EE11_Alloc_nodeE", !19, i64 0}
!574 = distinct !{!574, !28}
!575 = !{!576, !59, i64 0}
!576 = !{!"_ZTS4Crux", !59, i64 0, !59, i64 4, !59, i64 8}
!577 = !{!576, !59, i64 4}
!578 = !{!576, !59, i64 8}
!579 = distinct !{!579, !28}
!580 = distinct !{!580, !28}
!581 = distinct !{!581, !28}
!582 = distinct !{!582, !28}
!583 = distinct !{!583, !28}
!584 = distinct !{!584, !28}
!585 = !{!586, !122, i64 0}
!586 = !{!"slist_genmalloc_memory_head", !122, i64 0}
!587 = !{!122, !122, i64 0}
!588 = !{!589, !122, i64 0}
!589 = !{!"genmalloc_memory_entry", !122, i64 0, !590, i64 8, !591, i64 16}
!590 = !{!"long", !9, i64 0}
!591 = !{!"", !122, i64 0}
!592 = !{!589, !590, i64 8}
!593 = !{!589, !122, i64 16}
!594 = distinct !{!594, !28}
!595 = distinct !{!595, !28}
!596 = !{!597, !597, i64 0}
!597 = !{!"float", !9, i64 0}
!598 = distinct !{!598, !28}
!599 = distinct !{!599, !28}
!600 = distinct !{!600, !28}
!601 = !{!590, !590, i64 0}
!602 = distinct !{!602, !28}
!603 = distinct !{!603, !28}
!604 = distinct !{!604, !28}
!605 = distinct !{!605, !28}
!606 = distinct !{!606, !28}
!607 = distinct !{!607, !28}
!608 = distinct !{!608, !28}
!609 = distinct !{!609, !28}
!610 = distinct !{!610, !28}
!611 = distinct !{!611, !28}
!612 = distinct !{!612, !28}
!613 = distinct !{!613, !28}
!614 = distinct !{!614, !28}
!615 = distinct !{!615, !28}
!616 = distinct !{!616, !28}
!617 = distinct !{!617, !28}
!618 = distinct !{!618, !28}
!619 = distinct !{!619, !28}
!620 = distinct !{!620, !28}
!621 = distinct !{!621, !28}
!622 = distinct !{!622, !28}
!623 = distinct !{!623, !28}
!624 = distinct !{!624, !28}
!625 = distinct !{!625, !28}
!626 = distinct !{!626, !28}
!627 = !{!9, !9, i64 0}
!628 = distinct !{!628, !28}
!629 = distinct !{!629, !28}
!630 = distinct !{!630, !28}
!631 = distinct !{!631, !28}
!632 = distinct !{!632, !28}
!633 = distinct !{!633, !28}
!634 = distinct !{!634, !28}
!635 = distinct !{!635, !28}
!636 = distinct !{!636, !28}
!637 = !{!544, !19, i64 1328}
!638 = !{!544, !19, i64 1336}
!639 = !{!544, !19, i64 1352}
!640 = !{!544, !59, i64 1124}
!641 = distinct !{!641, !28}
!642 = distinct !{!642, !28}
!643 = !{!544, !19, i64 640}
!644 = !{!544, !19, i64 648}
!645 = !{!108, !19, i64 16}
!646 = !{!544, !59, i64 0}
!647 = !{!544, !59, i64 1120}
!648 = !{!544, !172, i64 664}
!649 = !{!544, !59, i64 672}
!650 = !{!544, !59, i64 620}
!651 = !{!544, !59, i64 624}
!652 = !{!544, !26, i64 1176}
!653 = !{!544, !59, i64 628}
!654 = !{!544, !59, i64 636}
!655 = !{!544, !59, i64 632}
!656 = !{!544, !178, i64 656}
!657 = !{!544, !172, i64 1280}
!658 = !{!544, !172, i64 1288}
!659 = !{!544, !59, i64 1132}
!660 = !{!544, !59, i64 1140}
!661 = !{!544, !59, i64 1136}
!662 = !{!544, !59, i64 1144}
!663 = distinct !{!663, !28}
!664 = !{!544, !59, i64 1128}
!665 = distinct !{!665, !28}
!666 = !{!544, !61, i64 616}
!667 = !{!544, !61, i64 617}
!668 = distinct !{!668, !28}
!669 = distinct !{!669, !28}
!670 = distinct !{!670, !28}
!671 = !{!544, !26, i64 1168}
!672 = distinct !{!672, !28}
!673 = distinct !{!673, !28}
!674 = distinct !{!674, !28}
!675 = distinct !{!675, !28}
!676 = distinct !{!676, !28}
!677 = !{i64 -2147483648, i64 2147483648}
!678 = distinct !{!678, !28}
!679 = distinct !{!679, !28}
!680 = distinct !{!680, !28}
!681 = distinct !{!681, !28}
!682 = !{!544, !19, i64 1360}
!683 = distinct !{!683, !28}
!684 = !{!544, !19, i64 1368}
!685 = !{!544, !19, i64 1376}
!686 = !{!544, !19, i64 1384}
!687 = !{!544, !19, i64 1392}
!688 = distinct !{!688, !28}
!689 = distinct !{!689, !28}
!690 = distinct !{!690, !28}
!691 = distinct !{!691, !28}
!692 = !{!555, !172, i64 0}
!693 = !{!555, !172, i64 16}
!694 = !{!555, !172, i64 8}
!695 = !{!555, !172, i64 24}
!696 = distinct !{!696, !28}
!697 = distinct !{!697, !28}
!698 = distinct !{!698, !28}
!699 = distinct !{!699, !28}
!700 = distinct !{!700, !28}
!701 = distinct !{!701, !28}
!702 = distinct !{!702, !28}
!703 = distinct !{!703, !28}
!704 = !{!"branch_weights", i32 1, i32 1048575}
!705 = distinct !{!705, !28}
!706 = distinct !{!706, !28}
!707 = distinct !{!707, !28}
!708 = distinct !{!708, !28}
!709 = distinct !{!709, !28}
!710 = distinct !{!710, !28}
!711 = distinct !{!711, !28}
!712 = distinct !{!712, !28}
!713 = distinct !{!713, !28}
!714 = distinct !{!714, !28}
!715 = distinct !{!715, !28}
!716 = !{!544, !172, i64 1232}
!717 = !{!544, !172, i64 1240}
!718 = distinct !{!718, !28}
!719 = !{!544, !172, i64 1248}
!720 = !{!544, !172, i64 1256}
!721 = distinct !{!721, !28}
!722 = !{!544, !172, i64 1264}
!723 = !{!544, !172, i64 1272}
!724 = distinct !{!724, !28}
!725 = distinct !{!725, !28}
!726 = distinct !{!726, !28}
!727 = distinct !{!727, !28}
!728 = distinct !{!728, !28}
!729 = !{!544, !59, i64 1560}
!730 = distinct !{!730, !28}
!731 = !{!544, !59, i64 1564}
!732 = distinct !{!732, !28}
!733 = distinct !{!733, !28}
!734 = distinct !{!734, !28}
!735 = distinct !{!735, !28}
!736 = distinct !{!736, !28}
!737 = distinct !{!737, !28}
!738 = distinct !{!738, !28}
!739 = distinct !{!739, !28}
!740 = distinct !{!740, !28}
!741 = distinct !{!741, !28}
!742 = !{i64 0, i64 65}
!743 = distinct !{!743, !28}
!744 = distinct !{!744, !28}
!745 = distinct !{!745, !28}
!746 = distinct !{!746, !28}
!747 = distinct !{!747, !28}
!748 = distinct !{!748, !28}
!749 = distinct !{!749, !28}
!750 = distinct !{!750, !28}
!751 = distinct !{!751, !28}
!752 = distinct !{!752, !28}
!753 = distinct !{!753, !28}
!754 = distinct !{!754, !28}
!755 = distinct !{!755, !28}
!756 = distinct !{!756, !28}
!757 = distinct !{!757, !28}
!758 = distinct !{!758, !28}
!759 = !{!760, !760, i64 0}
!760 = !{!"long long", !20, i64 0}
!761 = distinct !{!761, !28}
!762 = distinct !{!762, !28}
!763 = distinct !{!763, !28}
!764 = !{!765, !19, i64 8}
!765 = !{!"_ZTSNSt8__detail15_List_node_baseE", !19, i64 0, !19, i64 8}
!766 = !{!765, !19, i64 0}
!767 = !{!768, !26, i64 16}
!768 = !{!"_ZTSNSt8__detail17_List_node_headerE", !765, i64 0, !26, i64 16}
!769 = !{!770, !26, i64 16}
!770 = !{!"_ZTSNSt7__cxx1110_List_baseIiSaIiEEE", !771, i64 0}
!771 = !{!"_ZTSNSt7__cxx1110_List_baseIiSaIiEE10_List_implE", !768, i64 0}
!772 = distinct !{!772, !28}
!773 = distinct !{!773, !28}
!774 = distinct !{!774, !28}
!775 = distinct !{!775, !28}
!776 = distinct !{!776, !28}
!777 = distinct !{!777, !28}
!778 = distinct !{!778, !28}
!779 = distinct !{!779, !28}
!780 = distinct !{!780, !28}
!781 = distinct !{!781, !28}
!782 = distinct !{!782, !28}
!783 = distinct !{!783, !28}
!784 = distinct !{!784, !28}
!785 = distinct !{!785, !28}
!786 = distinct !{!786, !28}
!787 = distinct !{!787, !28}
!788 = distinct !{!788, !28}
!789 = distinct !{!789, !28}
!790 = distinct !{!790, !28}
!791 = distinct !{!791, !28}
!792 = distinct !{!792, !28}
!793 = distinct !{!793, !28}
!794 = distinct !{!794, !28}
!795 = distinct !{!795, !28}
!796 = distinct !{!796, !28}
!797 = distinct !{!797, !28}
!798 = distinct !{!798, !28}
!799 = distinct !{!799, !28}
!800 = distinct !{!800, !28}
!801 = distinct !{!801, !28}
!802 = distinct !{!802, !28}
!803 = distinct !{!803, !28}
!804 = distinct !{!804, !28}
!805 = distinct !{!805, !28}
!806 = distinct !{!806, !28, !134, !135}
!807 = distinct !{!807, !28}
!808 = distinct !{!808, !28, !134, !135}
!809 = distinct !{!809, !28}
!810 = distinct !{!810, !28}
!811 = !{!812, !812, i64 0}
!812 = !{!"long long", !9, i64 0}
!813 = distinct !{!813, !28}
!814 = distinct !{!814, !28}
!815 = distinct !{!815, !28}
!816 = !{!567, !19, i64 192}
!817 = !{!567, !19, i64 208}
!818 = !{!567, !19, i64 216}
!819 = distinct !{!819, !28}
!820 = distinct !{!820, !28}
!821 = distinct !{!821, !28}
!822 = distinct !{!822, !28}
!823 = distinct !{!823, !28}
!824 = distinct !{!824, !28}
!825 = distinct !{!825, !28}
!826 = distinct !{!826, !28}
!827 = distinct !{!827, !28}
!828 = distinct !{!828, !28}
!829 = distinct !{!829, !28}
!830 = distinct !{!830, !28}
!831 = distinct !{!831, !28}
!832 = distinct !{!832, !28}
!833 = !{!544, !19, i64 776}
!834 = distinct !{!834, !28}
!835 = distinct !{!835, !28}
!836 = distinct !{!836, !28}
!837 = distinct !{!837, !28}
!838 = distinct !{!838, !28}
!839 = distinct !{!839, !28}
!840 = !{!841, !590, i64 0}
!841 = !{!"timeval", !590, i64 0, !590, i64 8}
!842 = !{!841, !590, i64 8}
!843 = !{i64 0, i64 1431655766}
!844 = distinct !{!844, !28}
