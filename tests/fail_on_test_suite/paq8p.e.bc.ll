; ModuleID = '/src/llvm-test-suite/build/MultiSource/Benchmarks/PAQ8p/paq8p.e.bc'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.ProgramChecker = type { i32, i32, i64 }
%class.Random = type <{ %class.Array, i32, [4 x i8] }>
%class.Array = type { i32, i32, ptr, ptr }
%class.Buf = type { %class.Array }
%class.SmallStationaryContextMap = type { %class.Array, i32, ptr }
%class.APM1 = type { i32, i32, %class.Array }
%class.ContextMap = type <{ i32, [4 x i8], %class.Array, %class.Array, %class.Array, %class.Array, %class.Array, ptr, i32, [4 x i8] }>
%class.Mixer = type { i32, i32, i32, %class.Array, %class.Array, %class.Array, i32, i32, i32, %class.Array, ptr }
%class.APM = type { %class.APM1 }
%class.RunContextMap = type { %class.Random, ptr }
%"class.ContextMap::E" = type { [7 x i16], i8, [7 x [7 x i8]] }
%struct.HUF = type { i32, i32, i32 }
%struct.DMCNode = type { [2 x i32], i8, [3 x i8] }
%class.Encoder = type { %class.Predictor, i32, ptr, i32, i32, i32, ptr }
%class.Predictor = type { i32 }

$_ZN6RandomC2Ev = comdat any

$_ZN6RandomD2Ev = comdat any

$_ZN3BufD2Ev = comdat any

$_ZN4IlogD2Ev = comdat any

$_ZN7StretchD2Ev = comdat any

$_ZN5ArrayIsLi0EED2Ev = comdat any

$_ZN5ArrayIsLi0EE6createEi = comdat any

$_ZN5ArrayIhLi0EE6createEi = comdat any

$_ZN5ArrayIjLi0EED2Ev = comdat any

$_ZN5ArrayIjLi0EE6createEi = comdat any

$_ZN5ArrayIhLi0EED2Ev = comdat any

$_ZN5ArrayIiLi0EED2Ev = comdat any

$_ZN5ArrayIsLi16EED2Ev = comdat any

$_ZN5ArrayIsLi16EE6createEi = comdat any

$_ZN5ArrayIiLi0EE6createEi = comdat any

$_ZN5ArrayItLi0EE6createEi = comdat any

$_ZN5ArrayItLi0EED2Ev = comdat any

$_ZN5ArrayIN10ContextMap1EELi64EE6createEi = comdat any

$_ZN5ArrayIPhLi0EE6createEi = comdat any

$_ZN5ArrayIPhLi0EED2Ev = comdat any

$_ZN5ArrayIN10ContextMap1EELi64EED2Ev = comdat any

$_ZN8StateMap1pEii = comdat any

$_ZN25SmallStationaryContextMapC2Ei = comdat any

$_ZN25SmallStationaryContextMapD2Ev = comdat any

$_ZN25SmallStationaryContextMap3mixER5Mixeri = comdat any

$_ZN10ContextMap3mixER5Mixer = comdat any

$_Z2i4i = comdat any

$_ZN5ArrayI3HUFLi0EE6createEi = comdat any

$_ZN5ArrayI3HUFLi0EED2Ev = comdat any

$_ZN6IntBufD2Ev = comdat any

$_ZN5ArrayIhLi64EE6createEi = comdat any

$_ZN2BHILi9EED2Ev = comdat any

$_ZN8StateMapD2Ev = comdat any

$_ZN5Mixer6updateEv = comdat any

$_ZN5Mixer1pEv = comdat any

$_ZN3APM1pEiii = comdat any

$_ZN5ArrayIhLi64EED2Ev = comdat any

$_Z1Xii = comdat any

$_ZN5ArrayI7DMCNodeLi0EE6createEi = comdat any

$_ZN5ArrayI7DMCNodeLi0EED2Ev = comdat any

$_ZN13RunContextMapC2Ei = comdat any

$_ZN13RunContextMapD2Ev = comdat any

$_ZN13RunContextMap3setEj = comdat any

$_ZN13RunContextMap1pEv = comdat any

$_ZN4APM1D2Ev = comdat any

$_ZN4APM11pEiii = comdat any

$_ZN7Encoder10decompressEv = comdat any

$_ZN7Encoder4codeEi = comdat any

$_ZN7Encoder8compressEi = comdat any

$_ZN6StringC2EPKc = comdat any

$_ZN5ArrayIcLi0EE6createEi = comdat any

$_ZN6StringpLEPKc = comdat any

$_ZN5ArrayIcLi0EED2Ev = comdat any

$_ZN5ArrayIcLi0EE9push_backERKc = comdat any

$_ZN5ArrayIcLi0EE6resizeEi = comdat any

$_ZN5ArrayIPcLi0EE6createEi = comdat any

$_ZN5ArrayIlLi0EE6createEi = comdat any

$_ZN5ArrayIPcLi0EE6resizeEi = comdat any

$_ZN5ArrayIlLi0EE6resizeEi = comdat any

$_ZN5ArrayIhLi0EE6resizeEi = comdat any

$_ZN6StringaSEPKc = comdat any

$_ZZN2BHILi4EEixEjE3tmp = comdat any

$_ZZN2BHILi9EEixEjE3tmp = comdat any

@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_paq8p.cpp, ptr null }]
@_ZTIPKc = external constant ptr
@programChecker = internal global %class.ProgramChecker zeroinitializer, align 8
@rnd = internal global %class.Random zeroinitializer, align 8
@__dso_handle = external hidden global i8
@pos = internal global i32 0, align 4
@level = internal global i32 5, align 4
@y = internal global i32 0, align 4
@c0 = internal global i32 1, align 4
@c4 = internal global i32 0, align 4
@bpos = internal global i32 0, align 4
@buf = internal global %class.Buf zeroinitializer, align 8
@ilog = internal global %class.Buf zeroinitializer, align 8
@_ZZ6squashiE1t = internal unnamed_addr constant [33 x i32] [i32 1, i32 2, i32 3, i32 6, i32 10, i32 16, i32 27, i32 45, i32 73, i32 120, i32 194, i32 310, i32 488, i32 747, i32 1101, i32 1546, i32 2047, i32 2549, i32 2994, i32 3348, i32 3607, i32 3785, i32 3901, i32 3975, i32 4022, i32 4050, i32 4068, i32 4079, i32 4085, i32 4089, i32 4092, i32 4093, i32 4094], align 16
@stretch = internal global %class.Buf zeroinitializer, align 8
@_ZL11State_table = internal unnamed_addr constant [256 x [4 x i8]] [[4 x i8] c"\01\02\00\00", [4 x i8] c"\03\05\01\00", [4 x i8] c"\04\06\00\01", [4 x i8] c"\07\0A\02\00", [4 x i8] c"\08\0C\01\01", [4 x i8] c"\09\0D\01\01", [4 x i8] c"\0B\0E\00\02", [4 x i8] c"\0F\13\03\00", [4 x i8] c"\10\17\02\01", [4 x i8] c"\11\18\02\01", [4 x i8] c"\12\19\02\01", [4 x i8] c"\14\1B\01\02", [4 x i8] c"\15\1C\01\02", [4 x i8] c"\16\1D\01\02", [4 x i8] c"\1A\1E\00\03", [4 x i8] c"\1F!\04\00", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"&(\00\04", [4 x i8] c")+\05\00", [4 x i8] c"*-\04\01", [4 x i8] c"*-\04\01", [4 x i8] c",/\03\02", [4 x i8] c",/\03\02", [4 x i8] c".1\02\03", [4 x i8] c".1\02\03", [4 x i8] c"03\01\04", [4 x i8] c"03\01\04", [4 x i8] c"24\00\05", [4 x i8] c"5+\06\00", [4 x i8] c"69\05\01", [4 x i8] c"69\05\01", [4 x i8] c"8;\04\02", [4 x i8] c"8;\04\02", [4 x i8] c":=\03\03", [4 x i8] c":=\03\03", [4 x i8] c"<?\02\04", [4 x i8] c"<?\02\04", [4 x i8] c">A\01\05", [4 x i8] c">A\01\05", [4 x i8] c"2B\00\06", [4 x i8] c"C7\07\00", [4 x i8] c"D9\06\01", [4 x i8] c"D9\06\01", [4 x i8] c"FI\05\02", [4 x i8] c"FI\05\02", [4 x i8] c"HK\04\03", [4 x i8] c"HK\04\03", [4 x i8] c"JM\03\04", [4 x i8] c"JM\03\04", [4 x i8] c"LO\02\05", [4 x i8] c"LO\02\05", [4 x i8] c">Q\01\06", [4 x i8] c">Q\01\06", [4 x i8] c"@R\00\07", [4 x i8] c"SE\08\00", [4 x i8] c"TG\07\01", [4 x i8] c"TG\07\01", [4 x i8] c"VI\06\02", [4 x i8] c"VI\06\02", [4 x i8] c",;\05\03", [4 x i8] c",;\05\03", [4 x i8] c":=\04\04", [4 x i8] c":=\04\04", [4 x i8] c"<1\03\05", [4 x i8] c"<1\03\05", [4 x i8] c"LY\02\06", [4 x i8] c"LY\02\06", [4 x i8] c"N[\01\07", [4 x i8] c"N[\01\07", [4 x i8] c"P\\\00\08", [4 x i8] c"]E\09\00", [4 x i8] c"^W\08\01", [4 x i8] c"^W\08\01", [4 x i8] c"`-\07\02", [4 x i8] c"`-\07\02", [4 x i8] c"0c\02\07", [4 x i8] c"0c\02\07", [4 x i8] c"Xe\01\08", [4 x i8] c"Xe\01\08", [4 x i8] c"Pf\00\09", [4 x i8] c"gE\0A\00", [4 x i8] c"hW\09\01", [4 x i8] c"hW\09\01", [4 x i8] c"j9\08\02", [4 x i8] c"j9\08\02", [4 x i8] c">m\02\08", [4 x i8] c">m\02\08", [4 x i8] c"Xo\01\09", [4 x i8] c"Xo\01\09", [4 x i8] c"Pp\00\0A", [4 x i8] c"qU\0B\00", [4 x i8] c"rW\0A\01", [4 x i8] c"rW\0A\01", [4 x i8] c"t9\09\02", [4 x i8] c"t9\09\02", [4 x i8] c">w\02\09", [4 x i8] c">w\02\09", [4 x i8] c"Xy\01\0A", [4 x i8] c"Xy\01\0A", [4 x i8] c"Zz\00\0B", [4 x i8] c"{U\0C\00", [4 x i8] c"|a\0B\01", [4 x i8] c"|a\0B\01", [4 x i8] c"~9\0A\02", [4 x i8] c"~9\0A\02", [4 x i8] c">\81\02\0A", [4 x i8] c">\81\02\0A", [4 x i8] c"b\83\01\0B", [4 x i8] c"b\83\01\0B", [4 x i8] c"Z\84\00\0C", [4 x i8] c"\85U\0D\00", [4 x i8] c"\86a\0C\01", [4 x i8] c"\86a\0C\01", [4 x i8] c"\889\0B\02", [4 x i8] c"\889\0B\02", [4 x i8] c">\8B\02\0B", [4 x i8] c">\8B\02\0B", [4 x i8] c"b\8D\01\0C", [4 x i8] c"b\8D\01\0C", [4 x i8] c"Z\8E\00\0D", [4 x i8] c"\8F_\0E\00", [4 x i8] c"\90a\0D\01", [4 x i8] c"\90a\0D\01", [4 x i8] c"D9\0C\02", [4 x i8] c"D9\0C\02", [4 x i8] c">Q\02\0C", [4 x i8] c">Q\02\0C", [4 x i8] c"b\93\01\0D", [4 x i8] c"b\93\01\0D", [4 x i8] c"d\94\00\0E", [4 x i8] c"\95_\0F\00", [4 x i8] c"\96k\0E\01", [4 x i8] c"\96k\0E\01", [4 x i8] c"l\97\01\0E", [4 x i8] c"l\97\01\0E", [4 x i8] c"d\98\00\0F", [4 x i8] c"\99_\10\00", [4 x i8] c"\9Ak\0F\01", [4 x i8] c"l\9B\01\0F", [4 x i8] c"d\9C\00\10", [4 x i8] c"\9D_\11\00", [4 x i8] c"\9Ek\10\01", [4 x i8] c"l\9F\01\10", [4 x i8] c"d\A0\00\11", [4 x i8] c"\A1i\12\00", [4 x i8] c"\A2k\11\01", [4 x i8] c"l\A3\01\11", [4 x i8] c"n\A4\00\12", [4 x i8] c"\A5i\13\00", [4 x i8] c"\A6u\12\01", [4 x i8] c"v\A7\01\12", [4 x i8] c"n\A8\00\13", [4 x i8] c"\A9i\14\00", [4 x i8] c"\AAu\13\01", [4 x i8] c"v\AB\01\13", [4 x i8] c"n\AC\00\14", [4 x i8] c"\ADi\15\00", [4 x i8] c"\AEu\14\01", [4 x i8] c"v\AF\01\14", [4 x i8] c"n\B0\00\15", [4 x i8] c"\B1i\16\00", [4 x i8] c"\B2u\15\01", [4 x i8] c"v\B3\01\15", [4 x i8] c"n\B4\00\16", [4 x i8] c"\B5s\17\00", [4 x i8] c"\B6u\16\01", [4 x i8] c"v\B7\01\16", [4 x i8] c"x\B8\00\17", [4 x i8] c"\B9s\18\00", [4 x i8] c"\BA\7F\17\01", [4 x i8] c"\80\BB\01\17", [4 x i8] c"x\BC\00\18", [4 x i8] c"\BDs\19\00", [4 x i8] c"\BE\7F\18\01", [4 x i8] c"\80\BF\01\18", [4 x i8] c"x\C0\00\19", [4 x i8] c"\C1s\1A\00", [4 x i8] c"\C2\7F\19\01", [4 x i8] c"\80\C3\01\19", [4 x i8] c"x\C4\00\1A", [4 x i8] c"\C5s\1B\00", [4 x i8] c"\C6\7F\1A\01", [4 x i8] c"\80\C7\01\1A", [4 x i8] c"x\C8\00\1B", [4 x i8] c"\C9s\1C\00", [4 x i8] c"\CA\7F\1B\01", [4 x i8] c"\80\CB\01\1B", [4 x i8] c"x\CC\00\1C", [4 x i8] c"\CDs\1D\00", [4 x i8] c"\CE\7F\1C\01", [4 x i8] c"\80\CF\01\1C", [4 x i8] c"x\D0\00\1D", [4 x i8] c"\D1}\1E\00", [4 x i8] c"\D2\7F\1D\01", [4 x i8] c"\80\D3\01\1D", [4 x i8] c"\82\D4\00\1E", [4 x i8] c"\D5}\1F\00", [4 x i8] c"\D6\89\1E\01", [4 x i8] c"\8A\D7\01\1E", [4 x i8] c"\82\D8\00\1F", [4 x i8] c"\D9} \00", [4 x i8] c"\DA\89\1F\01", [4 x i8] c"\8A\DB\01\1F", [4 x i8] c"\82\DC\00 ", [4 x i8] c"\DD}!\00", [4 x i8] c"\DE\89 \01", [4 x i8] c"\8A\DF\01 ", [4 x i8] c"\82\E0\00!", [4 x i8] c"\E1}\22\00", [4 x i8] c"\E2\89!\01", [4 x i8] c"\8A\E3\01!", [4 x i8] c"\82\E4\00\22", [4 x i8] c"\E5}#\00", [4 x i8] c"\E6\89\22\01", [4 x i8] c"\8A\E7\01\22", [4 x i8] c"\82\E8\00#", [4 x i8] c"\E9}$\00", [4 x i8] c"\EA\89#\01", [4 x i8] c"\8A\EB\01#", [4 x i8] c"\82\EC\00$", [4 x i8] c"\ED}%\00", [4 x i8] c"\EE\89$\01", [4 x i8] c"\8A\EF\01$", [4 x i8] c"\82\F0\00%", [4 x i8] c"\F1}&\00", [4 x i8] c"\F2\89%\01", [4 x i8] c"\8A\F3\01%", [4 x i8] c"\82\F4\00&", [4 x i8] c"\F5\87'\00", [4 x i8] c"\F6\89&\01", [4 x i8] c"\8A\F7\01&", [4 x i8] c"\8C\F8\00'", [4 x i8] c"\F9\87(\00", [4 x i8] c"\FAE'\01", [4 x i8] c"P\FB\01'", [4 x i8] c"\8C\FC\00(", [4 x i8] c"\F9\87)\00", [4 x i8] c"\FAE(\01", [4 x i8] c"P\FB\01(", [4 x i8] c"\8C\FC\00)", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], align 16
@_ZZ10matchModelR5MixerE1t = internal global %class.Array zeroinitializer, align 8
@_ZGVZ10matchModelR5MixerE1t = internal global i64 0, align 8
@_ZZ10matchModelR5MixerE1h = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE3ptr = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE3len = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE6result = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ10matchModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ8picModelR5MixerE2r0 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2r1 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2r2 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2r3 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE1t = internal global %class.Array zeroinitializer, align 8
@_ZGVZ8picModelR5MixerE1t = internal global i64 0, align 8
@_ZZ8picModelR5MixerE3cxt = internal unnamed_addr global [3 x i32] zeroinitializer, align 4
@_ZZ8picModelR5MixerE2sm = internal global [3 x %class.APM1] zeroinitializer, align 16
@_ZGVZ8picModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ9wordModelR5MixerE5word0 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word1 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word2 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word3 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word4 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word5 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5text0 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ9wordModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ9wordModelR5MixerE3nl1 = internal unnamed_addr global i32 -3, align 4
@_ZZ9wordModelR5MixerE2nl = internal unnamed_addr global i32 -2, align 4
@_ZZ11recordModelR5MixerE5cpos1 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos2 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos3 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos4 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5wpos1 = internal unnamed_addr global [65536 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE4rlen = internal unnamed_addr global i32 2, align 4
@_ZZ11recordModelR5MixerE5rlen1 = internal unnamed_addr global i32 3, align 4
@_ZZ11recordModelR5MixerE5rlen2 = internal unnamed_addr global i32 4, align 4
@_ZZ11recordModelR5MixerE7rcount1 = internal unnamed_addr global i32 0, align 4
@_ZZ11recordModelR5MixerE7rcount2 = internal unnamed_addr global i32 0, align 4
@_ZZ11recordModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2cn = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2cn = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2co = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2co = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2cp = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2cp = internal global i64 0, align 8
@_ZZ11sparseModelR5MixeriiE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11sparseModelR5MixeriiE2cm = internal global i64 0, align 8
@_ZZ11sparseModelR5MixeriiE4mask = internal unnamed_addr global i32 0, align 4
@_ZZ13distanceModelR5MixerE2cr = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ13distanceModelR5MixerE2cr = internal global i64 0, align 8
@_ZZ13distanceModelR5MixerE5pos00 = internal unnamed_addr global i32 0, align 4
@_ZZ13distanceModelR5MixerE5pos20 = internal unnamed_addr global i32 0, align 4
@_ZZ13distanceModelR5MixerE5posnl = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE4tiff = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm2 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm3 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm4 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm5 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm6 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm7 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm8 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm8 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm9 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm9 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE5scm10 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE5scm10 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE2cm = internal global i64 0, align 8
@.str = private unnamed_addr constant [11 x i8] c"BMP %dx%d \00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"TIFF %dx%dx%d \00", align 1
@_ZZ9model8bitR5MixeriE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm1 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm2 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm3 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm4 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm5 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm6 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm7 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE2cm = internal global i64 0, align 8
@_ZZ8pgmModelR5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ8pgmModelR5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ8pgmModelR5MixerE3pgm = internal unnamed_addr global i32 0, align 4
@_ZZ8pgmModelR5MixerE7pgm_hdr = internal unnamed_addr global [3 x i32] zeroinitializer, align 4
@_ZZ8pgmModelR5MixerE7pgm_ptr = internal unnamed_addr global i32 0, align 4
@.str.6 = private unnamed_addr constant [10 x i8] c"PGM %dx%d\00", align 1
@_ZZ8pgmModelR5MixerE3col = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE1h = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE3col = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE4ibmp = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE2w1 = internal unnamed_addr global i32 0, align 4
@.str.7 = private unnamed_addr constant [17 x i8] c"BMP(8-bit) %dx%d\00", align 1
@_ZZ9rgbModel8R5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ9rgbModel8R5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ9rgbModel8R5MixerE3col = internal unnamed_addr global i32 0, align 4
@.str.8 = private unnamed_addr constant [17 x i8] c"RGB(8-bit) %dx%d\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@_ZZ9jpegModelR5MixerE4jpeg = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE9next_jpeg = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3app = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3sof = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3sos = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4data = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE2ht = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2ht = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE6htsize = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffcode = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffbits = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffsize = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE2rs = internal unnamed_addr global i32 -1, align 4
@_ZZ9jpegModelR5MixerE6mcupos = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3huf = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3huf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE7mcusize = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE6hufsel = internal unnamed_addr global [2 x [10 x i32]] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE4hbuf = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4hbuf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE5color = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE5color = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4pred = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4pred = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE5width = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3row = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE6column = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4cbuf = internal global %class.Buf zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4cbuf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4cpos = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3rs1 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4ssum = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum1 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum2 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum3 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5cbuf2 = internal global %class.Buf zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE5cbuf2 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE8adv_pred = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE8adv_pred = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4sumu = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4sumu = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4sumv = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4sumv = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2ls = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2ls = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3lcp = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3lcp = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4zpos = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4zpos = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE9dqt_state = internal unnamed_addr global i32 -1, align 4
@_ZZ9jpegModelR5MixerE7dqt_end = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4qnum = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4qtab = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4qtab = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4qmap = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4qmap = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3zzu = internal unnamed_addr constant [64 x i8] c"\00\01\00\00\01\02\03\02\01\00\00\01\02\03\04\05\04\03\02\01\00\00\01\02\03\04\05\06\07\06\05\04\03\02\01\00\01\02\03\04\05\06\07\07\06\05\04\03\02\03\04\05\06\07\07\06\05\04\05\06\07\07\06\07", align 16
@_ZZ9jpegModelR5MixerE3zzv = internal unnamed_addr constant [64 x i8] c"\00\00\01\02\01\00\00\01\02\03\04\03\02\01\00\00\01\02\03\04\05\06\05\04\03\02\01\00\00\01\02\03\04\05\06\07\07\06\05\04\03\02\01\02\03\04\05\06\07\07\06\05\04\03\04\05\06\07\07\06\05\06\07\07", align 16
@.str.12 = private unnamed_addr constant [12 x i8] c"JPEG %dx%d \00", align 1
@_ZZ9jpegModelR5MixerE2we = internal unnamed_addr constant [8 x i32] [i32 181, i32 282, i32 353, i32 456, i32 568, i32 671, i32 742, i32 767], align 16
@_ZZ9jpegModelR5MixerE5sumu2 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumv2 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumu3 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumv3 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE2kx = internal global [32 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE1t = internal global %class.Random zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE1t = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3cxt = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3cxt = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2cp = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2cp = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2sm = internal global [28 x %class.APM1] zeroinitializer, align 16
@_ZGVZ9jpegModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2m1 = internal global %class.Mixer zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2m1 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2a1 = internal global %class.APM zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2a1 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2a2 = internal global %class.APM zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2a2 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE7hbcount = internal unnamed_addr global i32 2, align 4
@_ZZ8wavModelR5MixerE8channels = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE4bits = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE5bytes = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE3eof = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE1s = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE1K = internal unnamed_addr global i32 0, align 4
@_ZGVZ8wavModelR5MixerE1K = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE2pr = internal unnamed_addr global [4 x [2 x i32]] zeroinitializer, align 16
@_ZZ8wavModelR5MixerE1n = internal unnamed_addr global [2 x i32] zeroinitializer, align 4
@_ZZ8wavModelR5MixerE7counter = internal unnamed_addr global [2 x i32] zeroinitializer, align 4
@_ZZ8wavModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm2 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm3 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm4 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm5 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm6 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm7 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm8 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm8 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE2cm = internal global i64 0, align 8
@_ZL1S = internal unnamed_addr global i32 0, align 4
@_ZL1D = internal unnamed_addr global i1 false, align 4
@_ZL5wmode = internal unnamed_addr global i32 0, align 4
@.str.14 = private unnamed_addr constant [12 x i8] c"WAV %ibits/\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"mono \00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"stereo \00", align 1
@_ZZ8exeModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ8exeModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ13indirectModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ13indirectModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ13indirectModelR5MixerE2t1 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ13indirectModelR5MixerE2t2 = internal unnamed_addr global [65536 x i16] zeroinitializer, align 16
@_ZZ8dmcModelR5MixerE3top = internal unnamed_addr global i32 0, align 4
@_ZZ8dmcModelR5MixerE4curr = internal unnamed_addr global i32 0, align 4
@_ZZ8dmcModelR5MixerE1t = internal global %class.Array zeroinitializer, align 8
@_ZGVZ8dmcModelR5MixerE1t = internal global i64 0, align 8
@_ZZ8dmcModelR5MixerE2sm = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZ8dmcModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ8dmcModelR5MixerE9threshold = internal unnamed_addr global i32 256, align 4
@_ZZ13contextModel2vE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE2cm = internal global i64 0, align 8
@_ZZ13contextModel2vE4rcm7 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE4rcm7 = internal global i64 0, align 8
@_ZZ13contextModel2vE4rcm9 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE4rcm9 = internal global i64 0, align 8
@_ZZ13contextModel2vE5rcm10 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE5rcm10 = internal global i64 0, align 8
@_ZZ13contextModel2vE1m = internal global %class.Mixer zeroinitializer, align 8
@_ZGVZ13contextModel2vE1m = internal global i64 0, align 8
@_ZZ13contextModel2vE3cxt = internal unnamed_addr global [16 x i32] zeroinitializer, align 16
@_ZZ13contextModel2vE8filetype = internal unnamed_addr global i32 0, align 4
@_ZZ13contextModel2vE4size = internal unnamed_addr global i32 0, align 4
@_ZZ13contextModel2vE3col = internal unnamed_addr global i32 0, align 4
@_ZZ13contextModel2vE3col_0 = internal unnamed_addr global i32 0, align 4
@_ZZN9Predictor6updateEvE1a = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE1a = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a1 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a1 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a2 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a2 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a3 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a3 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a4 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a4 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a5 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a5 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a6 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a6 = internal global i64 0, align 8
@_ZL2dt = internal unnamed_addr global [1024 x i32] zeroinitializer, align 16
@.str.17 = private unnamed_addr constant [9 x i8] c"%c%c%c%c\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"encode_exe read error\00", align 1
@_ZZ10decode_exeR7EncoderE6offset = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE1q = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE4size = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE5begin = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE1c = internal unnamed_addr global [5 x i8] zeroinitializer, align 4
@.str.19 = private unnamed_addr constant [11 x i8] c"%c%c%c%c%c\00", align 1
@_ZZ6decodeR7EncoderE4type = internal unnamed_addr global i32 0, align 4
@_ZZ6decodeR7EncoderE3len = internal unnamed_addr global i32 0, align 4
@.str.20 = private unnamed_addr constant [17 x i8] c"%12d\08\08\08\08\08\08\08\08\08\08\08\08\00", align 1
@stdout = external local_unnamed_addr global ptr, align 8
@.str.21 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"%s %ld -> \00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"tmpfile\00", align 1
@.str.24 = private unnamed_addr constant [58 x i8] c"Transform fails at %ld, input=%d decoded=%d, skipping...\0A\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"%-12ld\0A\00", align 1
@.str.26 = private unnamed_addr constant [21 x i8] c"Comparing %s %ld -> \00", align 1
@.str.27 = private unnamed_addr constant [34 x i8] c"differ at %d: file=%d archive=%d\0A\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.32 = private unnamed_addr constant [22 x i8] c"Extracting %s %ld -> \00", align 1
@.str.34 = private unnamed_addr constant [20 x i8] c"Skipping %s %ld -> \00", align 1
@_ZZ7getlineP8_IO_FILEE1s = internal global %class.Buf zeroinitializer, align 8
@_ZGVZ7getlineP8_IO_FILEE1s = internal global i64 0, align 8
@.str.36 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZZ7putsizeR6StringS0_PKciE3blk = internal global [24 x i8] zeroinitializer, align 16
@.str.37 = private unnamed_addr constant [5 x i8] c"%ld\09\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.39 = private unnamed_addr constant [39 x i8] c"Valid options are -0 through -9 or -d\0A\00", align 1
@.str.40 = private unnamed_addr constant [645 x i8] c"paq8p archiver (C) 2008, Matt Mahoney et al.\0AFree under GPL, http://www.gnu.org/licenses/gpl.txt\0A\0ATo compress:\0A  paq8p -level file               (compresses to file.paq8p)\0A  paq8p -level archive files...   (creates archive.paq8p)\0A  paq8p file                      (level -%d, pause when done)\0Alevel: -0 = store, -1 -2 -3 = faster (uses 35, 48, 59 MB)\0A-4 -5 -6 -7 -8 = smaller (uses 133, 233, 435, 837, 1643 MB)\0A\0ATo extract or compare:\0A  paq8p -d dir1/archive.paq8p      (extract to dir1)\0A  paq8p -d dir1/archive.paq8p dir2 (extract to dir2)\0A  paq8p archive.paq8p              (extract, pause when done)\0A\0ATo view contents: more < archive.paq8p\0A\0A\00", align 1
@.str.41 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.42 = private unnamed_addr constant [28 x i8] c"%s: not found, skipping...\0A\00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"Nothing to compress\0A\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"wb+\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"paq8p -%d\0D\0A%s\1A\00", align 1
@.str.46 = private unnamed_addr constant [37 x i8] c"Creating archive with %d file(s)...\0A\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"rb+\00", align 1
@.str.48 = private unnamed_addr constant [8 x i8] c"paq8p -\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"%s: not a %s file\0A\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"paq8p\00", align 1
@.str.51 = private unnamed_addr constant [40 x i8] c"Extracting %d file(s) from archive -%d\0A\00", align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"%s: header corrupted at %ld\0A\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"%ld -> %ld\0A\00", align 1
@.str.54 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.57 = private unnamed_addr constant [14 x i8] c"fork() failed\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@_ZZN2BHILi4EEixEjE3tmp = internal global [4 x i8] zeroinitializer, comdat, align 1
@_ZZN2BHILi9EEixEjE3tmp = internal global [9 x i8] zeroinitializer, comdat, align 1
@str = private unnamed_addr constant [14 x i8] c"not extracted\00", align 1
@str.60 = private unnamed_addr constant [13 x i8] c"done        \00", align 1
@str.61 = private unnamed_addr constant [13 x i8] c"identical   \00", align 1
@str.62 = private unnamed_addr constant [15 x i8] c"file is longer\00", align 1
@str.63 = private unnamed_addr constant [49 x i8] c"\0AClose this window or press ENTER to continue...\00", align 1

; Function Attrs: optsize uwtable
define internal void @_GLOBAL__sub_I_paq8p.cpp() #0 section ".text.startup" {
  store i32 0, ptr @programChecker, align 8, !tbaa !7
  store i32 0, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %1 = tail call i64 @clock() #31
  store i64 %1, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 2), align 8, !tbaa !14
  tail call void @_ZN6RandomC2Ev(ptr noundef nonnull align 8 dereferenceable(28) @rnd) #32
  %2 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN6RandomD2Ev, ptr nonnull @rnd, ptr nonnull @__dso_handle) #33
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @buf, i8 0, i64 24, i1 false)
  %3 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN3BufD2Ev, ptr nonnull @buf, ptr nonnull @__dso_handle) #33
  tail call void @_ZN4IlogC2Ev(ptr noundef nonnull align 8 dereferenceable(24) @ilog) #32
  %4 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4IlogD2Ev, ptr nonnull @ilog, ptr nonnull @__dso_handle) #33
  tail call void @_ZN7StretchC2Ev(ptr noundef nonnull align 8 dereferenceable(24) @stretch) #32
  %5 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN7StretchD2Ev, ptr nonnull @stretch, ptr nonnull @__dso_handle) #33
  ret void
}

; Function Attrs: nounwind optsize
declare i64 @clock() local_unnamed_addr #1

; Function Attrs: optsize uwtable
define internal void @_ZN6RandomC2Ev(ptr noundef nonnull align 8 dereferenceable(28) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN5ArrayIjLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef 64) #32
  %2 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !15
  store i32 123456789, ptr %3, align 4, !tbaa !18
  %4 = getelementptr inbounds i32, ptr %3, i64 1
  store i32 987654321, ptr %4, align 4, !tbaa !18
  br label %7

5:                                                ; preds = %7
  %6 = getelementptr inbounds %class.Random, ptr %0, i64 0, i32 1
  store i32 0, ptr %6, align 8, !tbaa !19
  ret void

7:                                                ; preds = %7, %1
  %8 = phi i32 [ 987654321, %1 ], [ %16, %7 ]
  %9 = phi i64 [ 0, %1 ], [ %10, %7 ]
  %10 = add nuw nsw i64 %9, 1
  %11 = mul i32 %8, 11
  %12 = getelementptr inbounds i32, ptr %3, i64 %9
  %13 = load i32, ptr %12, align 4, !tbaa !18
  %14 = mul i32 %13, 23
  %15 = lshr i32 %14, 4
  %16 = add i32 %15, %11
  %17 = add nuw nsw i64 %9, 2
  %18 = getelementptr inbounds i32, ptr %3, i64 %17
  store i32 %16, ptr %18, align 4, !tbaa !18
  %19 = icmp eq i64 %10, 62
  br i1 %19, label %5, label %7, !llvm.loop !21
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN6RandomD2Ev(ptr noundef nonnull align 8 dereferenceable(28) %0) unnamed_addr #2 comdat align 2 {
  tail call void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) #31
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #3

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN3BufD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #2 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !23
  %3 = load i32, ptr @programChecker, align 8, !tbaa !7
  %4 = sub i32 %3, %2
  store i32 %4, ptr @programChecker, align 8, !tbaa !7
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !25
  tail call void @free(ptr noundef %10) #31
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZN4IlogC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN5ArrayIhLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef 65536) #32
  %2 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  br label %4

3:                                                ; preds = %4
  ret void

4:                                                ; preds = %4, %1
  %5 = phi i64 [ 2, %1 ], [ %16, %4 ]
  %6 = phi i32 [ 14155776, %1 ], [ %11, %4 ]
  %7 = trunc i64 %5 to i32
  %8 = shl i32 %7, 1
  %9 = add i32 %8, -1
  %10 = udiv i32 774541002, %9
  %11 = add i32 %10, %6
  %12 = lshr i32 %11, 24
  %13 = trunc i32 %12 to i8
  %14 = load ptr, ptr %2, align 8, !tbaa !26
  %15 = getelementptr inbounds i8, ptr %14, i64 %5
  store i8 %13, ptr %15, align 1, !tbaa !27
  %16 = add nuw nsw i64 %5, 1
  %17 = icmp eq i64 %16, 65536
  br i1 %17, label %3, label %4, !llvm.loop !28
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN4IlogD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #2 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !23
  %3 = load i32, ptr @programChecker, align 8, !tbaa !7
  %4 = sub i32 %3, %2
  store i32 %4, ptr @programChecker, align 8, !tbaa !7
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !25
  tail call void @free(ptr noundef %10) #31
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZN7StretchC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN5ArrayIsLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef 4096) #32
  %2 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8
  br label %6

4:                                                ; preds = %18
  %5 = getelementptr inbounds i16, ptr %3, i64 4095
  store i16 2047, ptr %5, align 2, !tbaa !29
  ret void

6:                                                ; preds = %18, %1
  %7 = phi i32 [ 0, %1 ], [ %19, %18 ]
  %8 = phi i32 [ -2047, %1 ], [ %20, %18 ]
  %9 = tail call noundef i32 @_Z6squashi(i32 noundef %8) #32, !range !31
  %10 = icmp sgt i32 %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = add nsw i32 %9, 1
  br label %18

13:                                               ; preds = %6
  %14 = trunc i32 %8 to i16
  %15 = sext i32 %7 to i64
  %16 = add nsw i32 %9, 1
  %17 = sext i32 %16 to i64
  br label %22

18:                                               ; preds = %22, %11
  %19 = phi i32 [ %12, %11 ], [ %16, %22 ]
  %20 = add nsw i32 %8, 1
  %21 = icmp eq i32 %20, 2048
  br i1 %21, label %4, label %6, !llvm.loop !32

22:                                               ; preds = %22, %13
  %23 = phi i64 [ %15, %13 ], [ %25, %22 ]
  %24 = getelementptr inbounds i16, ptr %3, i64 %23
  store i16 %14, ptr %24, align 2, !tbaa !29
  %25 = add nsw i64 %23, 1
  %26 = icmp eq i64 %25, %17
  br i1 %26, label %18, label %22, !llvm.loop !33
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN7StretchD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #2 comdat align 2 {
  tail call void @_ZN5ArrayIsLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) #31
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN5ArrayIsLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !34
  %3 = load i32, ptr @programChecker, align 8, !tbaa !7
  %4 = shl i32 %2, 1
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !7
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %9

9:                                                ; preds = %8, %1
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !36
  tail call void @free(ptr noundef %11) #31
  ret void
}

; Function Attrs: mustprogress nounwind optsize willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #6

declare i32 @__gxx_personality_v0(...)

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIsLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !37
  store i32 %1, ptr %0, align 8, !tbaa !34
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl nuw i32 %1, 1
  %9 = load i32, ptr @programChecker, align 8, !tbaa !7
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !7
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #34
  %17 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !36
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.59, ptr %20, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !39
  br label %23

23:                                               ; preds = %21, %5
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(none) uwtable
define internal noundef i32 @_Z6squashi(i32 noundef %0) #8 {
  %2 = icmp sgt i32 %0, 2047
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = icmp slt i32 %0, -2047
  br i1 %4, label %22, label %5

5:                                                ; preds = %3
  %6 = and i32 %0, 127
  %7 = ashr i32 %0, 7
  %8 = add nsw i32 %7, 16
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %9
  %11 = load i32, ptr %10, align 4, !tbaa !18
  %12 = sub nuw nsw i32 128, %6
  %13 = mul nsw i32 %11, %12
  %14 = add nsw i32 %7, 17
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %15
  %17 = load i32, ptr %16, align 4, !tbaa !18
  %18 = mul nsw i32 %17, %6
  %19 = add i32 %13, 64
  %20 = add i32 %19, %18
  %21 = ashr i32 %20, 7
  br label %22

22:                                               ; preds = %5, %3, %1
  %23 = phi i32 [ %21, %5 ], [ 4095, %1 ], [ 0, %3 ]
  ret i32 %23
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #9

declare ptr @__cxa_allocate_exception(i64) local_unnamed_addr

declare void @__cxa_throw(ptr, ptr, ptr) local_unnamed_addr

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIhLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !40
  store i32 %1, ptr %0, align 8, !tbaa !23
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %22

7:                                                ; preds = %2
  %8 = zext i32 %1 to i64
  %9 = load i32, ptr @programChecker, align 8, !tbaa !7
  %10 = add nsw i32 %9, %1
  store i32 %10, ptr @programChecker, align 8, !tbaa !7
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %14

14:                                               ; preds = %13, %7
  %15 = tail call noalias ptr @calloc(i64 noundef %8, i64 noundef 1) #34
  %16 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %15, ptr %16, align 8, !tbaa !25
  %17 = icmp eq ptr %15, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.59, ptr %19, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %15, ptr %21, align 8, !tbaa !26
  br label %22

22:                                               ; preds = %20, %5
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !41
  %3 = load i32, ptr @programChecker, align 8, !tbaa !7
  %4 = shl i32 %2, 2
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !7
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %9

9:                                                ; preds = %8, %1
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !42
  tail call void @free(ptr noundef %11) #31
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIjLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !43
  store i32 %1, ptr %0, align 8, !tbaa !41
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl i32 %1, 2
  %9 = load i32, ptr @programChecker, align 8, !tbaa !7
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !7
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #34
  %17 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !42
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.59, ptr %20, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !15
  br label %23

23:                                               ; preds = %21, %5
  ret void
}

; Function Attrs: mustprogress noreturn optsize uwtable
define internal void @_Z4quitPKc(ptr noundef %0) #10 {
  %2 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr %0, ptr %2, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %2, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal noundef i32 @_Z6equalsPKcS0_(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #11 {
  br label %3

3:                                                ; preds = %11, %2
  %4 = phi ptr [ %0, %2 ], [ %23, %11 ]
  %5 = phi ptr [ %1, %2 ], [ %24, %11 ]
  %6 = load i8, ptr %4, align 1, !tbaa !27
  %7 = icmp eq i8 %6, 0
  %8 = load i8, ptr %5, align 1, !tbaa !27
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %7, i1 true, i1 %9
  br i1 %10, label %25, label %11

11:                                               ; preds = %3
  %12 = sext i8 %6 to i32
  %13 = add i8 %6, -65
  %14 = icmp ult i8 %13, 26
  %15 = add nuw nsw i32 %12, 32
  %16 = select i1 %14, i32 %15, i32 %12
  %17 = sext i8 %8 to i32
  %18 = add i8 %8, -65
  %19 = icmp ult i8 %18, 26
  %20 = add nuw nsw i32 %17, 32
  %21 = select i1 %19, i32 %20, i32 %17
  %22 = icmp eq i32 %16, %21
  %23 = getelementptr inbounds i8, ptr %4, i64 1
  %24 = getelementptr inbounds i8, ptr %5, i64 1
  br i1 %22, label %3, label %28

25:                                               ; preds = %3
  %.lcssa2 = phi i8 [ %6, %3 ]
  %.lcssa = phi i8 [ %8, %3 ]
  %26 = icmp eq i8 %.lcssa2, %.lcssa
  %27 = zext i1 %26 to i32
  br label %28

28:                                               ; preds = %25, %11
  %29 = phi i32 [ %27, %25 ], [ 0, %11 ]
  ret i32 %29
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN5ArrayIhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !23
  %3 = load i32, ptr @programChecker, align 8, !tbaa !7
  %4 = sub i32 %3, %2
  store i32 %4, ptr @programChecker, align 8, !tbaa !7
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !25
  tail call void @free(ptr noundef %10) #31
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN5MixerD2Ev(ptr noundef nonnull align 8 dereferenceable(136) %0) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 10
  %3 = load ptr, ptr %2, align 8, !tbaa !44
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5MixerD2Ev(ptr noundef nonnull align 8 dereferenceable(136) %3) #31
  tail call void @_ZdlPv(ptr noundef nonnull %3) #36
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9
  tail call void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %7) #31
  %8 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5
  tail call void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %8) #31
  %9 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4
  tail call void @_ZN5ArrayIsLi16EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %9) #31
  %10 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3
  tail call void @_ZN5ArrayIsLi16EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %10) #31
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #12

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !48
  %3 = load i32, ptr @programChecker, align 8, !tbaa !7
  %4 = shl i32 %2, 2
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !7
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %9

9:                                                ; preds = %8, %1
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !49
  tail call void @free(ptr noundef %11) #31
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN5ArrayIsLi16EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !50
  %3 = shl i32 %2, 1
  %4 = load i32, ptr @programChecker, align 8, !tbaa !7
  %5 = sub i32 %4, %3
  %6 = add i32 %5, -16
  store i32 %6, ptr @programChecker, align 8, !tbaa !7
  %7 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %8 = icmp sgt i32 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i32 %6, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %10

10:                                               ; preds = %9, %1
  %11 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !51
  tail call void @free(ptr noundef %12) #31
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %6 = add nsw i32 %1, 7
  %7 = and i32 %6, -8
  store i32 %7, ptr %0, align 8, !tbaa !52
  %8 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 1
  store i32 %2, ptr %8, align 4, !tbaa !53
  %9 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 2
  store i32 %3, ptr %9, align 8, !tbaa !54
  %10 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3
  tail call void @_ZN5ArrayIsLi16EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef %7) #32
  %11 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4
  %12 = load i32, ptr %0, align 8, !tbaa !52
  %13 = load i32, ptr %8, align 4, !tbaa !53
  %14 = mul nsw i32 %13, %12
  invoke void @_ZN5ArrayIsLi16EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %11, i32 noundef %14) #32
          to label %15 unwind label %100

15:                                               ; preds = %5
  %16 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5
  %17 = load i32, ptr %9, align 8, !tbaa !54
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %16, i32 noundef %17) #32
          to label %18 unwind label %102

18:                                               ; preds = %15
  %19 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 6
  store i32 0, ptr %19, align 8, !tbaa !55
  %20 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 7
  store i32 0, ptr %20, align 4, !tbaa !56
  %21 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  store i32 0, ptr %21, align 8, !tbaa !57
  %22 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9
  %23 = load i32, ptr %9, align 8, !tbaa !54
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %22, i32 noundef %23) #32
          to label %24 unwind label %104

24:                                               ; preds = %18
  %25 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 10
  store ptr null, ptr %25, align 8, !tbaa !44
  %26 = load i32, ptr %9, align 8, !tbaa !54
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !58
  br label %93

31:                                               ; preds = %93, %24
  %32 = phi i32 [ %26, %24 ], [ %97, %93 ]
  %33 = load i32, ptr %0, align 8, !tbaa !52
  %34 = load i32, ptr %8, align 4, !tbaa !53
  %35 = mul nsw i32 %34, %33
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %108

37:                                               ; preds = %31
  %38 = trunc i32 %4 to i16
  %39 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4, i32 3
  %40 = load ptr, ptr %39, align 8, !tbaa !59
  %41 = zext i32 %35 to i64
  %42 = add nuw nsw i64 %41, 7
  %43 = and i64 %42, 8589934584
  %44 = add nsw i64 %41, -1
  %45 = insertelement <8 x i64> poison, i64 %44, i64 0
  %46 = shufflevector <8 x i64> %45, <8 x i64> poison, <8 x i32> zeroinitializer
  br label %47

47:                                               ; preds = %89, %37
  %48 = phi i64 [ 0, %37 ], [ %90, %89 ]
  %49 = phi <8 x i64> [ <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7>, %37 ], [ %91, %89 ]
  %50 = icmp ule <8 x i64> %49, %46
  %51 = extractelement <8 x i1> %50, i64 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  %53 = getelementptr inbounds i16, ptr %40, i64 %48
  store i16 %38, ptr %53, align 2, !tbaa !29
  br label %54

54:                                               ; preds = %52, %47
  %55 = extractelement <8 x i1> %50, i64 1
  br i1 %55, label %56, label %59

56:                                               ; preds = %54
  %57 = or i64 %48, 1
  %58 = getelementptr inbounds i16, ptr %40, i64 %57
  store i16 %38, ptr %58, align 2, !tbaa !29
  br label %59

59:                                               ; preds = %56, %54
  %60 = extractelement <8 x i1> %50, i64 2
  br i1 %60, label %61, label %64

61:                                               ; preds = %59
  %62 = or i64 %48, 2
  %63 = getelementptr inbounds i16, ptr %40, i64 %62
  store i16 %38, ptr %63, align 2, !tbaa !29
  br label %64

64:                                               ; preds = %61, %59
  %65 = extractelement <8 x i1> %50, i64 3
  br i1 %65, label %66, label %69

66:                                               ; preds = %64
  %67 = or i64 %48, 3
  %68 = getelementptr inbounds i16, ptr %40, i64 %67
  store i16 %38, ptr %68, align 2, !tbaa !29
  br label %69

69:                                               ; preds = %66, %64
  %70 = extractelement <8 x i1> %50, i64 4
  br i1 %70, label %71, label %74

71:                                               ; preds = %69
  %72 = or i64 %48, 4
  %73 = getelementptr inbounds i16, ptr %40, i64 %72
  store i16 %38, ptr %73, align 2, !tbaa !29
  br label %74

74:                                               ; preds = %71, %69
  %75 = extractelement <8 x i1> %50, i64 5
  br i1 %75, label %76, label %79

76:                                               ; preds = %74
  %77 = or i64 %48, 5
  %78 = getelementptr inbounds i16, ptr %40, i64 %77
  store i16 %38, ptr %78, align 2, !tbaa !29
  br label %79

79:                                               ; preds = %76, %74
  %80 = extractelement <8 x i1> %50, i64 6
  br i1 %80, label %81, label %84

81:                                               ; preds = %79
  %82 = or i64 %48, 6
  %83 = getelementptr inbounds i16, ptr %40, i64 %82
  store i16 %38, ptr %83, align 2, !tbaa !29
  br label %84

84:                                               ; preds = %81, %79
  %85 = extractelement <8 x i1> %50, i64 7
  br i1 %85, label %86, label %89

86:                                               ; preds = %84
  %87 = or i64 %48, 7
  %88 = getelementptr inbounds i16, ptr %40, i64 %87
  store i16 %38, ptr %88, align 2, !tbaa !29
  br label %89

89:                                               ; preds = %86, %84
  %90 = add i64 %48, 8
  %91 = add <8 x i64> %49, <i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8>
  %92 = icmp eq i64 %90, %43
  br i1 %92, label %108, label %47, !llvm.loop !60

93:                                               ; preds = %93, %28
  %94 = phi i64 [ 0, %28 ], [ %96, %93 ]
  %95 = getelementptr inbounds i32, ptr %30, i64 %94
  store i32 2048, ptr %95, align 4, !tbaa !18
  %96 = add nuw nsw i64 %94, 1
  %97 = load i32, ptr %9, align 8, !tbaa !54
  %98 = sext i32 %97 to i64
  %99 = icmp slt i64 %96, %98
  br i1 %99, label %93, label %31, !llvm.loop !63

100:                                              ; preds = %5
  %101 = landingpad { ptr, i32 }
          cleanup
  br label %123

102:                                              ; preds = %15
  %103 = landingpad { ptr, i32 }
          cleanup
  br label %121

104:                                              ; preds = %18
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %119

106:                                              ; preds = %110
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %117

108:                                              ; preds = %89, %31
  %109 = icmp sgt i32 %32, 1
  br i1 %109, label %110, label %116

110:                                              ; preds = %108
  %111 = invoke noalias noundef nonnull dereferenceable(136) ptr @_Znwm(i64 noundef 136) #37
          to label %112 unwind label %106

112:                                              ; preds = %110
  invoke void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) %111, i32 noundef %32, i32 noundef 1, i32 noundef 1, i32 noundef 32767) #32
          to label %113 unwind label %114

113:                                              ; preds = %112
  store ptr %111, ptr %25, align 8, !tbaa !44
  br label %116

114:                                              ; preds = %112
  %115 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %111) #36
  br label %117

116:                                              ; preds = %113, %108
  ret void

117:                                              ; preds = %114, %106
  %118 = phi { ptr, i32 } [ %115, %114 ], [ %107, %106 ]
  tail call void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %22) #31
  br label %119

119:                                              ; preds = %117, %104
  %120 = phi { ptr, i32 } [ %118, %117 ], [ %105, %104 ]
  tail call void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %16) #31
  br label %121

121:                                              ; preds = %119, %102
  %122 = phi { ptr, i32 } [ %120, %119 ], [ %103, %102 ]
  tail call void @_ZN5ArrayIsLi16EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %11) #31
  br label %123

123:                                              ; preds = %121, %100
  %124 = phi { ptr, i32 } [ %122, %121 ], [ %101, %100 ]
  tail call void @_ZN5ArrayIsLi16EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %10) #31
  resume { ptr, i32 } %124
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIsLi16EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !64
  store i32 %1, ptr %0, align 8, !tbaa !50
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %29

7:                                                ; preds = %2
  %8 = shl nuw i32 %1, 1
  %9 = add i32 %8, 16
  %10 = load i32, ptr @programChecker, align 8, !tbaa !7
  %11 = add nsw i32 %10, %9
  store i32 %11, ptr @programChecker, align 8, !tbaa !7
  %12 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %13 = icmp sgt i32 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  store i32 %11, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %15

15:                                               ; preds = %14, %7
  %16 = sext i32 %9 to i64
  %17 = tail call noalias ptr @calloc(i64 noundef %16, i64 noundef 1) #34
  %18 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %17, ptr %18, align 8, !tbaa !51
  %19 = icmp eq ptr %17, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.59, ptr %21, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %21, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

22:                                               ; preds = %15
  %23 = getelementptr inbounds i8, ptr %17, i64 16
  %24 = ptrtoint ptr %17 to i64
  %25 = and i64 %24, 15
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds i8, ptr %23, i64 %26
  %28 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %27, ptr %28, align 8, !tbaa !59
  br label %29

29:                                               ; preds = %22, %5
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !65
  store i32 %1, ptr %0, align 8, !tbaa !48
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl i32 %1, 2
  %9 = load i32, ptr @programChecker, align 8, !tbaa !7
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !7
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #34
  %17 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !49
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.59, ptr %20, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !58
  br label %23

23:                                               ; preds = %21, %5
  ret void
}

; Function Attrs: nobuiltin optsize allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #13

; Function Attrs: optsize uwtable
define internal void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) %0, i32 noundef %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  store i32 0, ptr %0, align 8, !tbaa !66
  %3 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !69
  %4 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2
  %5 = mul nsw i32 %1, 33
  tail call void @_ZN5ArrayItLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %4, i32 noundef %5) #32
  %6 = load i32, ptr %3, align 4, !tbaa !69
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !70
  %11 = zext i32 %6 to i64
  br label %12

12:                                               ; preds = %19, %8
  %13 = phi i64 [ 0, %8 ], [ %20, %19 ]
  %14 = icmp eq i64 %13, 0
  %15 = mul i64 %13, 33
  %16 = load ptr, ptr %9, align 8
  %17 = and i64 %15, 4294967295
  br label %22

18:                                               ; preds = %19, %2
  ret void

19:                                               ; preds = %34
  %20 = add nuw nsw i64 %13, 1
  %21 = icmp eq i64 %20, %11
  br i1 %21, label %18, label %12, !llvm.loop !71

22:                                               ; preds = %34, %12
  %23 = phi i64 [ 0, %12 ], [ %39, %34 ]
  br i1 %14, label %24, label %30

24:                                               ; preds = %22
  %25 = trunc i64 %23 to i32
  %26 = shl i32 %25, 7
  %27 = add i32 %26, -2048
  %28 = tail call noundef i32 @_Z6squashi(i32 noundef %27) #32, !range !31
  %29 = shl nsw i32 %28, 4
  br label %34

30:                                               ; preds = %22
  %31 = getelementptr inbounds i16, ptr %16, i64 %23
  %32 = load i16, ptr %31, align 2, !tbaa !29
  %33 = zext i16 %32 to i32
  br label %34

34:                                               ; preds = %30, %24
  %35 = phi i32 [ %29, %24 ], [ %33, %30 ]
  %36 = trunc i32 %35 to i16
  %37 = add nuw nsw i64 %23, %17
  %38 = getelementptr inbounds i16, ptr %10, i64 %37
  store i16 %36, ptr %38, align 2, !tbaa !29
  %39 = add nuw nsw i64 %23, 1
  %40 = icmp eq i64 %39, 33
  br i1 %40, label %19, label %22, !llvm.loop !72
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayItLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !73
  store i32 %1, ptr %0, align 8, !tbaa !74
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl nuw i32 %1, 1
  %9 = load i32, ptr @programChecker, align 8, !tbaa !7
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !7
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #34
  %17 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !75
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.59, ptr %20, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !70
  br label %23

23:                                               ; preds = %21, %5
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN5ArrayItLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !74
  %3 = load i32, ptr @programChecker, align 8, !tbaa !7
  %4 = shl i32 %2, 1
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !7
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %9

9:                                                ; preds = %8, %1
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !75
  tail call void @free(ptr noundef %11) #31
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) %0, i32 noundef %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  store i32 %1, ptr %0, align 8, !tbaa !76
  %3 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 1
  store i32 0, ptr %3, align 4, !tbaa !78
  %4 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2
  tail call void @_ZN5ArrayIjLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %4, i32 noundef %1) #32
  %5 = load i32, ptr %0, align 8, !tbaa !76
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !15
  br label %11

10:                                               ; preds = %11, %2
  ret void

11:                                               ; preds = %11, %7
  %12 = phi i64 [ 0, %7 ], [ %14, %11 ]
  %13 = getelementptr inbounds i32, ptr %9, i64 %12
  store i32 -2147483648, ptr %13, align 4, !tbaa !18
  %14 = add nuw nsw i64 %12, 1
  %15 = load i32, ptr %0, align 8, !tbaa !76
  %16 = sext i32 %15 to i64
  %17 = icmp slt i64 %14, %16
  br i1 %17, label %11, label %10, !llvm.loop !79
}

; Function Attrs: optsize uwtable
define internal void @_ZN3APMC2Ei(ptr noundef nonnull align 8 dereferenceable(32) %0, i32 noundef %1) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  %3 = mul nsw i32 %1, 24
  tail call void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) %0, i32 noundef %3) #32
  %4 = load i32, ptr %0, align 8, !tbaa !76
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !15
  br label %10

9:                                                ; preds = %10, %2
  ret void

10:                                               ; preds = %10, %6
  %11 = phi i64 [ 0, %6 ], [ %22, %10 ]
  %12 = trunc i64 %11 to i32
  %13 = urem i32 %12, 24
  %14 = shl nuw nsw i32 %13, 13
  %15 = or i32 %14, 4096
  %16 = udiv i32 %15, 48
  %17 = add nsw i32 %16, -2048
  %18 = tail call noundef i32 @_Z6squashi(i32 noundef %17) #32, !range !31
  %19 = shl i32 %18, 20
  %20 = or i32 %19, 6
  %21 = getelementptr inbounds i32, ptr %8, i64 %11
  store i32 %20, ptr %21, align 4, !tbaa !18
  %22 = add nuw nsw i64 %11, 1
  %23 = load i32, ptr %0, align 8, !tbaa !76
  %24 = sext i32 %23 to i64
  %25 = icmp slt i64 %22, %24
  br i1 %25, label %10, label %9, !llvm.loop !80
}

; Function Attrs: optsize uwtable
define internal void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
  store i32 %2, ptr %0, align 8, !tbaa !81
  %4 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2
  %5 = ashr i32 %1, 6
  tail call void @_ZN5ArrayIN10ContextMap1EELi64EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %4, i32 noundef %5) #32
  %6 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3
  invoke void @_ZN5ArrayIPhLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %6, i32 noundef %2) #32
          to label %7 unwind label %45

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4
  invoke void @_ZN5ArrayIPhLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %8, i32 noundef %2) #32
          to label %9 unwind label %47

9:                                                ; preds = %7
  %10 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5
  invoke void @_ZN5ArrayIjLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef %2) #32
          to label %11 unwind label %49

11:                                               ; preds = %9
  %12 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6
  invoke void @_ZN5ArrayIPhLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %12, i32 noundef %2) #32
          to label %13 unwind label %51

13:                                               ; preds = %11
  %14 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 8
  store i32 0, ptr %14, align 8, !tbaa !85
  %15 = load i32, ptr %0, align 8, !tbaa !81
  %16 = sext i32 %15 to i64
  %17 = icmp slt i32 %15, 0
  %18 = shl nsw i64 %16, 5
  %19 = or i64 %18, 8
  %20 = select i1 %17, i64 -1, i64 %19
  %21 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %20) #37
          to label %22 unwind label %53

22:                                               ; preds = %13
  store i64 %16, ptr %21, align 16
  %23 = getelementptr inbounds i8, ptr %21, i64 8
  %24 = icmp eq i32 %15, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 7
  store ptr %23, ptr %26, align 8, !tbaa !86
  br label %44

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.APM1, ptr %23, i64 %16
  br label %29

29:                                               ; preds = %31, %27
  %30 = phi ptr [ %23, %27 ], [ %32, %31 ]
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) %30, i32 noundef 256) #32
          to label %31 unwind label %55

31:                                               ; preds = %29
  %32 = getelementptr inbounds %class.APM1, ptr %30, i64 1
  %33 = icmp eq ptr %32, %28
  br i1 %33, label %34, label %29

34:                                               ; preds = %31
  %35 = load i32, ptr %0, align 8, !tbaa !81
  %36 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 7
  store ptr %23, ptr %36, align 8, !tbaa !86
  %37 = icmp sgt i32 %35, 0
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 3
  %40 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 3
  %41 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 3
  %42 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 3
  %43 = zext i32 %35 to i64
  br label %64

44:                                               ; preds = %64, %34, %25
  ret void

45:                                               ; preds = %3
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %88

47:                                               ; preds = %7
  %48 = landingpad { ptr, i32 }
          cleanup
  br label %86

49:                                               ; preds = %9
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %84

51:                                               ; preds = %11
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %82

53:                                               ; preds = %13
  %54 = landingpad { ptr, i32 }
          cleanup
  br label %80

55:                                               ; preds = %29
  %.lcssa = phi ptr [ %30, %29 ]
  %56 = landingpad { ptr, i32 }
          cleanup
  %57 = icmp eq ptr %23, %.lcssa
  br i1 %57, label %63, label %58

58:                                               ; preds = %58, %55
  %59 = phi ptr [ %60, %58 ], [ %.lcssa, %55 ]
  %60 = getelementptr inbounds %class.APM1, ptr %59, i64 -1
  %61 = getelementptr %class.APM1, ptr %59, i64 -1, i32 2
  tail call void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %61) #31
  %62 = icmp eq ptr %60, %23
  br i1 %62, label %63, label %58

63:                                               ; preds = %58, %55
  tail call void @_ZdaPv(ptr noundef nonnull %21) #36
  br label %80

64:                                               ; preds = %64, %38
  %65 = phi i64 [ 0, %38 ], [ %78, %64 ]
  %66 = load ptr, ptr %39, align 8, !tbaa !87
  %67 = getelementptr inbounds %"class.ContextMap::E", ptr %66, i64 0, i32 2
  %68 = load ptr, ptr %40, align 8, !tbaa !88
  %69 = getelementptr inbounds ptr, ptr %68, i64 %65
  store ptr %67, ptr %69, align 8, !tbaa !38
  %70 = load ptr, ptr %41, align 8, !tbaa !88
  %71 = getelementptr inbounds ptr, ptr %70, i64 %65
  store ptr %67, ptr %71, align 8, !tbaa !38
  %72 = load ptr, ptr %40, align 8, !tbaa !88
  %73 = getelementptr inbounds ptr, ptr %72, i64 %65
  %74 = load ptr, ptr %73, align 8, !tbaa !38
  %75 = getelementptr inbounds i8, ptr %74, i64 3
  %76 = load ptr, ptr %42, align 8, !tbaa !88
  %77 = getelementptr inbounds ptr, ptr %76, i64 %65
  store ptr %75, ptr %77, align 8, !tbaa !38
  %78 = add nuw nsw i64 %65, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %44, label %64, !llvm.loop !89

80:                                               ; preds = %63, %53
  %81 = phi { ptr, i32 } [ %56, %63 ], [ %54, %53 ]
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %12) #31
  br label %82

82:                                               ; preds = %80, %51
  %83 = phi { ptr, i32 } [ %81, %80 ], [ %52, %51 ]
  tail call void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %10) #31
  br label %84

84:                                               ; preds = %82, %49
  %85 = phi { ptr, i32 } [ %83, %82 ], [ %50, %49 ]
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %8) #31
  br label %86

86:                                               ; preds = %84, %47
  %87 = phi { ptr, i32 } [ %85, %84 ], [ %48, %47 ]
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %6) #31
  br label %88

88:                                               ; preds = %86, %45
  %89 = phi { ptr, i32 } [ %87, %86 ], [ %46, %45 ]
  tail call void @_ZN5ArrayIN10ContextMap1EELi64EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %4) #31
  resume { ptr, i32 } %89
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIN10ContextMap1EELi64EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !90
  store i32 %1, ptr %0, align 8, !tbaa !91
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %29

7:                                                ; preds = %2
  %8 = shl i32 %1, 6
  %9 = add i32 %8, 64
  %10 = load i32, ptr @programChecker, align 8, !tbaa !7
  %11 = add nsw i32 %10, %9
  store i32 %11, ptr @programChecker, align 8, !tbaa !7
  %12 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %13 = icmp sgt i32 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  store i32 %11, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %15

15:                                               ; preds = %14, %7
  %16 = sext i32 %9 to i64
  %17 = tail call noalias ptr @calloc(i64 noundef %16, i64 noundef 1) #34
  %18 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %17, ptr %18, align 8, !tbaa !92
  %19 = icmp eq ptr %17, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.59, ptr %21, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %21, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

22:                                               ; preds = %15
  %23 = getelementptr inbounds i8, ptr %17, i64 64
  %24 = ptrtoint ptr %17 to i64
  %25 = and i64 %24, 63
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds i8, ptr %23, i64 %26
  %28 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %27, ptr %28, align 8, !tbaa !87
  br label %29

29:                                               ; preds = %22, %5
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIPhLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !93
  store i32 %1, ptr %0, align 8, !tbaa !94
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl i32 %1, 3
  %9 = load i32, ptr @programChecker, align 8, !tbaa !7
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !7
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #34
  %17 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !95
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.59, ptr %20, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !88
  br label %23

23:                                               ; preds = %21, %5
  ret void
}

; Function Attrs: nobuiltin optsize allocsize(0)
declare noundef nonnull ptr @_Znam(i64 noundef) local_unnamed_addr #13

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdaPv(ptr noundef) local_unnamed_addr #12

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !94
  %3 = load i32, ptr @programChecker, align 8, !tbaa !7
  %4 = shl i32 %2, 3
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !7
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %9

9:                                                ; preds = %8, %1
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !95
  tail call void @free(ptr noundef %11) #31
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN5ArrayIN10ContextMap1EELi64EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !91
  %3 = shl i32 %2, 6
  %4 = load i32, ptr @programChecker, align 8, !tbaa !7
  %5 = sub i32 %4, %3
  %6 = add i32 %5, -64
  store i32 %6, ptr @programChecker, align 8, !tbaa !7
  %7 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %8 = icmp sgt i32 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i32 %6, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %10

10:                                               ; preds = %9, %1
  %11 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !92
  tail call void @free(ptr noundef %12) #31
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN10ContextMapD2Ev(ptr noundef nonnull align 8 dereferenceable(140) %0) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !86
  %4 = icmp eq ptr %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, ptr %3, i64 -8
  %7 = load i64, ptr %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.APM1, ptr %3, i64 %7
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi ptr [ %13, %11 ], [ %10, %9 ]
  %13 = getelementptr inbounds %class.APM1, ptr %12, i64 -1
  %14 = getelementptr %class.APM1, ptr %12, i64 -1, i32 2
  tail call void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %14) #31
  %15 = icmp eq ptr %13, %3
  br i1 %15, label %16, label %11

16:                                               ; preds = %11, %5
  tail call void @_ZdaPv(ptr noundef nonnull %6) #36
  br label %17

17:                                               ; preds = %16, %1
  %18 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %18) #31
  %19 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5
  tail call void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %19) #31
  %20 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %20) #31
  %21 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %21) #31
  %22 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2
  tail call void @_ZN5ArrayIN10ContextMap1EELi64EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %22) #31
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr nocapture noundef nonnull align 8 dereferenceable(140) %0, ptr nocapture noundef nonnull align 8 dereferenceable(136) %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #7 align 2 {
  %7 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 8
  %8 = load i32, ptr %7, align 8, !tbaa !85
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %28

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 3
  %12 = sext i32 %5 to i64
  %13 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 3
  %14 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2
  %15 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 3
  %16 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 3
  %17 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 3
  %18 = and i32 %2, 3
  %19 = zext i32 %18 to i64
  %20 = and i32 %2, 1
  %21 = zext i32 %20 to i64
  %22 = trunc i32 %4 to i8
  %23 = sub nsw i32 8, %3
  %24 = getelementptr inbounds %class.Mixer, ptr %1, i64 0, i32 8
  %25 = getelementptr inbounds %class.Mixer, ptr %1, i64 0, i32 3, i32 3
  %26 = sub nsw i32 7, %3
  %27 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 7
  br label %31

28:                                               ; preds = %583, %6
  %29 = phi i32 [ 0, %6 ], [ %584, %583 ]
  %30 = icmp eq i32 %3, 7
  br i1 %30, label %589, label %590

31:                                               ; preds = %583, %10
  %32 = phi i64 [ 0, %10 ], [ %585, %583 ]
  %33 = phi i32 [ 0, %10 ], [ %584, %583 ]
  %34 = load ptr, ptr %11, align 8, !tbaa !88
  %35 = getelementptr inbounds ptr, ptr %34, i64 %32
  %36 = load ptr, ptr %35, align 8, !tbaa !38
  %37 = icmp eq ptr %36, null
  br i1 %37, label %71, label %38

38:                                               ; preds = %31
  %39 = load i8, ptr %36, align 1, !tbaa !27
  %40 = zext i8 %39 to i64
  %41 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %40, i64 %12
  %42 = load i8, ptr %41, align 1, !tbaa !27
  %43 = icmp ugt i8 %42, -53
  br i1 %43, label %44, label %69

44:                                               ; preds = %38
  %45 = zext i8 %42 to i32
  %46 = load i32, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 1), align 8, !tbaa !19
  %47 = add nsw i32 %46, 1
  store i32 %47, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 1), align 8, !tbaa !19
  %48 = add i32 %46, 41
  %49 = and i32 %48, 63
  %50 = load ptr, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 0, i32 3), align 8, !tbaa !15
  %51 = zext i32 %49 to i64
  %52 = getelementptr inbounds i32, ptr %50, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !18
  %54 = add i32 %46, 10
  %55 = and i32 %54, 63
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i32, ptr %50, i64 %56
  %58 = load i32, ptr %57, align 4, !tbaa !18
  %59 = xor i32 %58, %53
  %60 = and i32 %47, 63
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i32, ptr %50, i64 %61
  store i32 %59, ptr %62, align 4, !tbaa !18
  %63 = sub nuw nsw i32 452, %45
  %64 = lshr i32 %63, 3
  %65 = shl i32 %59, %64
  %66 = icmp eq i32 %65, 0
  %67 = add nsw i8 %42, -4
  %68 = select i1 %66, i8 %42, i8 %67
  br label %69

69:                                               ; preds = %44, %38
  %70 = phi i8 [ %42, %38 ], [ %68, %44 ]
  store i8 %70, ptr %36, align 1, !tbaa !27
  br label %71

71:                                               ; preds = %69, %31
  %72 = load i32, ptr @bpos, align 4, !tbaa !18
  %73 = icmp sgt i32 %72, 1
  br i1 %73, label %74, label %80

74:                                               ; preds = %71
  %75 = load ptr, ptr %13, align 8, !tbaa !88
  %76 = getelementptr inbounds ptr, ptr %75, i64 %32
  %77 = load ptr, ptr %76, align 8, !tbaa !38
  %78 = load i8, ptr %77, align 1, !tbaa !27
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %440, label %80

80:                                               ; preds = %74, %71
  switch i32 %72, label %160 [
    i32 1, label %81
    i32 3, label %81
    i32 6, label %81
    i32 4, label %87
    i32 7, label %87
    i32 2, label %93
    i32 5, label %93
  ]

81:                                               ; preds = %80, %80, %80
  %82 = load ptr, ptr %17, align 8, !tbaa !88
  %83 = getelementptr inbounds ptr, ptr %82, i64 %32
  %84 = load ptr, ptr %83, align 8, !tbaa !38
  %85 = getelementptr inbounds i8, ptr %84, i64 1
  %86 = getelementptr inbounds i8, ptr %85, i64 %21
  br label %440

87:                                               ; preds = %80, %80
  %88 = load ptr, ptr %17, align 8, !tbaa !88
  %89 = getelementptr inbounds ptr, ptr %88, i64 %32
  %90 = load ptr, ptr %89, align 8, !tbaa !38
  %91 = getelementptr inbounds i8, ptr %90, i64 3
  %92 = getelementptr inbounds i8, ptr %91, i64 %19
  br label %440

93:                                               ; preds = %80, %80
  %94 = load ptr, ptr %15, align 8, !tbaa !15
  %95 = getelementptr inbounds i32, ptr %94, i64 %32
  %96 = load i32, ptr %95, align 4, !tbaa !18
  %97 = add i32 %96, %2
  %98 = load i32, ptr %14, align 8, !tbaa !91
  %99 = add nsw i32 %98, -1
  %100 = and i32 %99, %97
  %101 = load ptr, ptr %16, align 8, !tbaa !87
  %102 = sext i32 %100 to i64
  %103 = getelementptr inbounds %"class.ContextMap::E", ptr %101, i64 %102
  %104 = lshr i32 %96, 16
  %105 = trunc i32 %104 to i16
  %106 = getelementptr inbounds %"class.ContextMap::E", ptr %101, i64 %102, i32 1
  %107 = load i8, ptr %106, align 2, !tbaa !96
  %108 = and i8 %107, 15
  %109 = zext i8 %108 to i64
  %110 = getelementptr inbounds [7 x i16], ptr %103, i64 0, i64 %109
  %111 = load i16, ptr %110, align 2, !tbaa !29
  %112 = icmp eq i16 %111, %105
  br i1 %112, label %119, label %113

113:                                              ; preds = %93
  %114 = zext i8 %107 to i32
  %115 = and i32 %114, 15
  %116 = lshr i32 %114, 4
  %117 = zext i32 %116 to i64
  %118 = zext i32 %115 to i64
  br label %121

119:                                              ; preds = %93
  %120 = getelementptr inbounds %"class.ContextMap::E", ptr %101, i64 %102, i32 2, i64 %109
  br label %156

121:                                              ; preds = %140, %113
  %122 = phi i64 [ 0, %113 ], [ %143, %140 ]
  %123 = phi i32 [ 0, %113 ], [ %142, %140 ]
  %124 = phi i32 [ 65535, %113 ], [ %141, %140 ]
  %125 = getelementptr inbounds [7 x i16], ptr %103, i64 0, i64 %122
  %126 = load i16, ptr %125, align 2, !tbaa !29
  %127 = icmp eq i16 %126, %105
  br i1 %127, label %145, label %128

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.ContextMap::E", ptr %101, i64 %102, i32 2, i64 %122
  %130 = load i8, ptr %129, align 1, !tbaa !27
  %131 = zext i8 %130 to i32
  %132 = icmp sgt i32 %124, %131
  br i1 %132, label %133, label %140

133:                                              ; preds = %128
  %134 = icmp eq i64 %122, %118
  %135 = icmp eq i64 %122, %117
  %136 = or i1 %134, %135
  %137 = select i1 %136, i32 %124, i32 %131
  %138 = trunc i64 %122 to i32
  %139 = select i1 %136, i32 %123, i32 %138
  br label %140

140:                                              ; preds = %133, %128
  %141 = phi i32 [ %124, %128 ], [ %137, %133 ]
  %142 = phi i32 [ %123, %128 ], [ %139, %133 ]
  %143 = add nuw nsw i64 %122, 1
  %144 = icmp eq i64 %143, 7
  br i1 %144, label %150, label %121, !llvm.loop !98

145:                                              ; preds = %121
  %.lcssa = phi i64 [ %122, %121 ]
  %146 = trunc i64 %.lcssa to i8
  %147 = shl i8 %107, 4
  %148 = or i8 %147, %146
  store i8 %148, ptr %106, align 2, !tbaa !96
  %149 = getelementptr inbounds %"class.ContextMap::E", ptr %101, i64 %102, i32 2, i64 %.lcssa
  br label %156

150:                                              ; preds = %140
  %.lcssa2 = phi i32 [ %142, %140 ]
  %151 = trunc i32 %.lcssa2 to i8
  %152 = or i8 %151, -16
  store i8 %152, ptr %106, align 2, !tbaa !96
  %153 = sext i32 %.lcssa2 to i64
  %154 = getelementptr inbounds [7 x i16], ptr %103, i64 0, i64 %153
  store i16 %105, ptr %154, align 2, !tbaa !29
  %155 = getelementptr inbounds %"class.ContextMap::E", ptr %101, i64 %102, i32 2, i64 %153
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %155, i8 0, i64 7, i1 false)
  br label %156

156:                                              ; preds = %150, %145, %119
  %157 = phi ptr [ %120, %119 ], [ %155, %150 ], [ %149, %145 ]
  %158 = load ptr, ptr %11, align 8, !tbaa !88
  %159 = getelementptr inbounds ptr, ptr %158, i64 %32
  store ptr %157, ptr %159, align 8, !tbaa !38
  br label %440

160:                                              ; preds = %80
  %161 = load ptr, ptr %15, align 8, !tbaa !15
  %162 = getelementptr inbounds i32, ptr %161, i64 %32
  %163 = load i32, ptr %162, align 4, !tbaa !18
  %164 = add i32 %163, %2
  %165 = load i32, ptr %14, align 8, !tbaa !91
  %166 = add nsw i32 %165, -1
  %167 = and i32 %166, %164
  %168 = load ptr, ptr %16, align 8, !tbaa !87
  %169 = sext i32 %167 to i64
  %170 = getelementptr inbounds %"class.ContextMap::E", ptr %168, i64 %169
  %171 = lshr i32 %163, 16
  %172 = trunc i32 %171 to i16
  %173 = getelementptr inbounds %"class.ContextMap::E", ptr %168, i64 %169, i32 1
  %174 = load i8, ptr %173, align 2, !tbaa !96
  %175 = and i8 %174, 15
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [7 x i16], ptr %170, i64 0, i64 %176
  %178 = load i16, ptr %177, align 2, !tbaa !29
  %179 = icmp eq i16 %178, %172
  br i1 %179, label %186, label %180

180:                                              ; preds = %160
  %181 = zext i8 %174 to i32
  %182 = and i32 %181, 15
  %183 = lshr i32 %181, 4
  %184 = zext i32 %183 to i64
  %185 = zext i32 %182 to i64
  br label %188

186:                                              ; preds = %160
  %187 = getelementptr inbounds %"class.ContextMap::E", ptr %168, i64 %169, i32 2, i64 %176
  br label %223

188:                                              ; preds = %207, %180
  %189 = phi i64 [ 0, %180 ], [ %210, %207 ]
  %190 = phi i32 [ 0, %180 ], [ %209, %207 ]
  %191 = phi i32 [ 65535, %180 ], [ %208, %207 ]
  %192 = getelementptr inbounds [7 x i16], ptr %170, i64 0, i64 %189
  %193 = load i16, ptr %192, align 2, !tbaa !29
  %194 = icmp eq i16 %193, %172
  br i1 %194, label %212, label %195

195:                                              ; preds = %188
  %196 = getelementptr inbounds %"class.ContextMap::E", ptr %168, i64 %169, i32 2, i64 %189
  %197 = load i8, ptr %196, align 1, !tbaa !27
  %198 = zext i8 %197 to i32
  %199 = icmp sgt i32 %191, %198
  br i1 %199, label %200, label %207

200:                                              ; preds = %195
  %201 = icmp eq i64 %189, %185
  %202 = icmp eq i64 %189, %184
  %203 = or i1 %201, %202
  %204 = select i1 %203, i32 %191, i32 %198
  %205 = trunc i64 %189 to i32
  %206 = select i1 %203, i32 %190, i32 %205
  br label %207

207:                                              ; preds = %200, %195
  %208 = phi i32 [ %191, %195 ], [ %204, %200 ]
  %209 = phi i32 [ %190, %195 ], [ %206, %200 ]
  %210 = add nuw nsw i64 %189, 1
  %211 = icmp eq i64 %210, 7
  br i1 %211, label %217, label %188, !llvm.loop !98

212:                                              ; preds = %188
  %.lcssa3 = phi i64 [ %189, %188 ]
  %213 = trunc i64 %.lcssa3 to i8
  %214 = shl i8 %174, 4
  %215 = or i8 %214, %213
  store i8 %215, ptr %173, align 2, !tbaa !96
  %216 = getelementptr inbounds %"class.ContextMap::E", ptr %168, i64 %169, i32 2, i64 %.lcssa3
  br label %223

217:                                              ; preds = %207
  %.lcssa5 = phi i32 [ %209, %207 ]
  %218 = trunc i32 %.lcssa5 to i8
  %219 = or i8 %218, -16
  store i8 %219, ptr %173, align 2, !tbaa !96
  %220 = sext i32 %.lcssa5 to i64
  %221 = getelementptr inbounds [7 x i16], ptr %170, i64 0, i64 %220
  store i16 %172, ptr %221, align 2, !tbaa !29
  %222 = getelementptr inbounds %"class.ContextMap::E", ptr %168, i64 %169, i32 2, i64 %220
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %222, i8 0, i64 7, i1 false)
  br label %223

223:                                              ; preds = %217, %212, %186
  %224 = phi ptr [ %187, %186 ], [ %222, %217 ], [ %216, %212 ]
  %225 = load ptr, ptr %11, align 8, !tbaa !88
  %226 = getelementptr inbounds ptr, ptr %225, i64 %32
  store ptr %224, ptr %226, align 8, !tbaa !38
  %227 = load ptr, ptr %17, align 8, !tbaa !88
  %228 = getelementptr inbounds ptr, ptr %227, i64 %32
  store ptr %224, ptr %228, align 8, !tbaa !38
  %229 = load ptr, ptr %17, align 8, !tbaa !88
  %230 = getelementptr inbounds ptr, ptr %229, i64 %32
  %231 = load ptr, ptr %230, align 8, !tbaa !38
  %232 = getelementptr inbounds i8, ptr %231, i64 3
  %233 = load i8, ptr %232, align 1, !tbaa !27
  %234 = icmp eq i8 %233, 2
  br i1 %234, label %235, label %407

235:                                              ; preds = %223
  %236 = getelementptr inbounds i8, ptr %231, i64 4
  %237 = load i8, ptr %236, align 1, !tbaa !27
  %238 = zext i8 %237 to i32
  %239 = or i32 %238, 256
  %240 = load ptr, ptr %15, align 8, !tbaa !15
  %241 = getelementptr inbounds i32, ptr %240, i64 %32
  %242 = load i32, ptr %241, align 4, !tbaa !18
  %243 = lshr i32 %239, 6
  %244 = add i32 %243, %242
  %245 = load i32, ptr %14, align 8, !tbaa !91
  %246 = add nsw i32 %245, -1
  %247 = and i32 %244, %246
  %248 = load ptr, ptr %16, align 8, !tbaa !87
  %249 = sext i32 %247 to i64
  %250 = getelementptr inbounds %"class.ContextMap::E", ptr %248, i64 %249
  %251 = lshr i32 %242, 16
  %252 = trunc i32 %251 to i16
  %253 = getelementptr inbounds %"class.ContextMap::E", ptr %248, i64 %249, i32 1
  %254 = load i8, ptr %253, align 2, !tbaa !96
  %255 = and i8 %254, 15
  %256 = zext i8 %255 to i64
  %257 = getelementptr inbounds [7 x i16], ptr %250, i64 0, i64 %256
  %258 = load i16, ptr %257, align 2, !tbaa !29
  %259 = icmp eq i16 %258, %252
  br i1 %259, label %266, label %260

260:                                              ; preds = %235
  %261 = zext i8 %254 to i32
  %262 = and i32 %261, 15
  %263 = lshr i32 %261, 4
  %264 = zext i32 %263 to i64
  %265 = zext i32 %262 to i64
  br label %268

266:                                              ; preds = %235
  %267 = getelementptr inbounds %"class.ContextMap::E", ptr %248, i64 %249, i32 2, i64 %256
  br label %303

268:                                              ; preds = %287, %260
  %269 = phi i64 [ 0, %260 ], [ %290, %287 ]
  %270 = phi i32 [ 0, %260 ], [ %289, %287 ]
  %271 = phi i32 [ 65535, %260 ], [ %288, %287 ]
  %272 = getelementptr inbounds [7 x i16], ptr %250, i64 0, i64 %269
  %273 = load i16, ptr %272, align 2, !tbaa !29
  %274 = icmp eq i16 %273, %252
  br i1 %274, label %292, label %275

275:                                              ; preds = %268
  %276 = getelementptr inbounds %"class.ContextMap::E", ptr %248, i64 %249, i32 2, i64 %269
  %277 = load i8, ptr %276, align 1, !tbaa !27
  %278 = zext i8 %277 to i32
  %279 = icmp sgt i32 %271, %278
  br i1 %279, label %280, label %287

280:                                              ; preds = %275
  %281 = icmp eq i64 %269, %265
  %282 = icmp eq i64 %269, %264
  %283 = or i1 %281, %282
  %284 = select i1 %283, i32 %271, i32 %278
  %285 = trunc i64 %269 to i32
  %286 = select i1 %283, i32 %270, i32 %285
  br label %287

287:                                              ; preds = %280, %275
  %288 = phi i32 [ %271, %275 ], [ %284, %280 ]
  %289 = phi i32 [ %270, %275 ], [ %286, %280 ]
  %290 = add nuw nsw i64 %269, 1
  %291 = icmp eq i64 %290, 7
  br i1 %291, label %297, label %268, !llvm.loop !98

292:                                              ; preds = %268
  %.lcssa6 = phi i64 [ %269, %268 ]
  %293 = trunc i64 %.lcssa6 to i8
  %294 = shl i8 %254, 4
  %295 = or i8 %294, %293
  store i8 %295, ptr %253, align 2, !tbaa !96
  %296 = getelementptr inbounds %"class.ContextMap::E", ptr %248, i64 %249, i32 2, i64 %.lcssa6
  br label %303

297:                                              ; preds = %287
  %.lcssa8 = phi i32 [ %289, %287 ]
  %298 = trunc i32 %.lcssa8 to i8
  %299 = or i8 %298, -16
  store i8 %299, ptr %253, align 2, !tbaa !96
  %300 = sext i32 %.lcssa8 to i64
  %301 = getelementptr inbounds [7 x i16], ptr %250, i64 0, i64 %300
  store i16 %252, ptr %301, align 2, !tbaa !29
  %302 = getelementptr inbounds %"class.ContextMap::E", ptr %248, i64 %249, i32 2, i64 %300
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %302, i8 0, i64 7, i1 false)
  br label %303

303:                                              ; preds = %297, %292, %266
  %304 = phi ptr [ %267, %266 ], [ %302, %297 ], [ %296, %292 ]
  %305 = lshr i32 %238, 5
  %306 = and i32 %305, 1
  %307 = add nuw nsw i32 %306, 1
  %308 = trunc i32 %307 to i8
  store i8 %308, ptr %304, align 1, !tbaa !27
  %309 = lshr i32 %239, 4
  %310 = trunc i32 %309 to i8
  %311 = and i8 %310, 1
  %312 = add nuw nsw i8 %311, 1
  %313 = zext i32 %307 to i64
  %314 = getelementptr inbounds i8, ptr %304, i64 %313
  store i8 %312, ptr %314, align 1, !tbaa !27
  %315 = lshr i32 %239, 3
  %316 = trunc i32 %315 to i8
  %317 = and i8 %316, 1
  %318 = add nuw nsw i8 %317, 1
  %319 = and i32 %309, 3
  %320 = add nuw nsw i32 %319, 3
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds i8, ptr %304, i64 %321
  store i8 %318, ptr %322, align 1, !tbaa !27
  %323 = load ptr, ptr %15, align 8, !tbaa !15
  %324 = getelementptr inbounds i32, ptr %323, i64 %32
  %325 = load i32, ptr %324, align 4, !tbaa !18
  %326 = add i32 %325, %315
  %327 = load i32, ptr %14, align 8, !tbaa !91
  %328 = add nsw i32 %327, -1
  %329 = and i32 %328, %326
  %330 = load ptr, ptr %16, align 8, !tbaa !87
  %331 = sext i32 %329 to i64
  %332 = getelementptr inbounds %"class.ContextMap::E", ptr %330, i64 %331
  %333 = lshr i32 %325, 16
  %334 = trunc i32 %333 to i16
  %335 = getelementptr inbounds %"class.ContextMap::E", ptr %330, i64 %331, i32 1
  %336 = load i8, ptr %335, align 2, !tbaa !96
  %337 = and i8 %336, 15
  %338 = zext i8 %337 to i64
  %339 = getelementptr inbounds [7 x i16], ptr %332, i64 0, i64 %338
  %340 = load i16, ptr %339, align 2, !tbaa !29
  %341 = icmp eq i16 %340, %334
  br i1 %341, label %348, label %342

342:                                              ; preds = %303
  %343 = zext i8 %336 to i32
  %344 = and i32 %343, 15
  %345 = lshr i32 %343, 4
  %346 = zext i32 %345 to i64
  %347 = zext i32 %344 to i64
  br label %350

348:                                              ; preds = %303
  %349 = getelementptr inbounds %"class.ContextMap::E", ptr %330, i64 %331, i32 2, i64 %338
  br label %385

350:                                              ; preds = %369, %342
  %351 = phi i64 [ 0, %342 ], [ %372, %369 ]
  %352 = phi i32 [ 0, %342 ], [ %371, %369 ]
  %353 = phi i32 [ 65535, %342 ], [ %370, %369 ]
  %354 = getelementptr inbounds [7 x i16], ptr %332, i64 0, i64 %351
  %355 = load i16, ptr %354, align 2, !tbaa !29
  %356 = icmp eq i16 %355, %334
  br i1 %356, label %374, label %357

357:                                              ; preds = %350
  %358 = getelementptr inbounds %"class.ContextMap::E", ptr %330, i64 %331, i32 2, i64 %351
  %359 = load i8, ptr %358, align 1, !tbaa !27
  %360 = zext i8 %359 to i32
  %361 = icmp sgt i32 %353, %360
  br i1 %361, label %362, label %369

362:                                              ; preds = %357
  %363 = icmp eq i64 %351, %347
  %364 = icmp eq i64 %351, %346
  %365 = or i1 %363, %364
  %366 = select i1 %365, i32 %353, i32 %360
  %367 = trunc i64 %351 to i32
  %368 = select i1 %365, i32 %352, i32 %367
  br label %369

369:                                              ; preds = %362, %357
  %370 = phi i32 [ %353, %357 ], [ %366, %362 ]
  %371 = phi i32 [ %352, %357 ], [ %368, %362 ]
  %372 = add nuw nsw i64 %351, 1
  %373 = icmp eq i64 %372, 7
  br i1 %373, label %379, label %350, !llvm.loop !98

374:                                              ; preds = %350
  %.lcssa9 = phi i64 [ %351, %350 ]
  %375 = trunc i64 %.lcssa9 to i8
  %376 = shl i8 %336, 4
  %377 = or i8 %376, %375
  store i8 %377, ptr %335, align 2, !tbaa !96
  %378 = getelementptr inbounds %"class.ContextMap::E", ptr %330, i64 %331, i32 2, i64 %.lcssa9
  br label %385

379:                                              ; preds = %369
  %.lcssa11 = phi i32 [ %371, %369 ]
  %380 = trunc i32 %.lcssa11 to i8
  %381 = or i8 %380, -16
  store i8 %381, ptr %335, align 2, !tbaa !96
  %382 = sext i32 %.lcssa11 to i64
  %383 = getelementptr inbounds [7 x i16], ptr %332, i64 0, i64 %382
  store i16 %334, ptr %383, align 2, !tbaa !29
  %384 = getelementptr inbounds %"class.ContextMap::E", ptr %330, i64 %331, i32 2, i64 %382
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %384, i8 0, i64 7, i1 false)
  br label %385

385:                                              ; preds = %379, %374, %348
  %386 = phi ptr [ %349, %348 ], [ %384, %379 ], [ %378, %374 ]
  %387 = lshr i32 %238, 2
  %388 = and i32 %387, 1
  %389 = add nuw nsw i32 %388, 1
  %390 = trunc i32 %389 to i8
  store i8 %390, ptr %386, align 1, !tbaa !27
  %391 = lshr i32 %239, 1
  %392 = trunc i32 %391 to i8
  %393 = and i8 %392, 1
  %394 = add nuw nsw i8 %393, 1
  %395 = zext i32 %389 to i64
  %396 = getelementptr inbounds i8, ptr %386, i64 %395
  store i8 %394, ptr %396, align 1, !tbaa !27
  %397 = and i8 %237, 1
  %398 = add nuw nsw i8 %397, 1
  %399 = and i32 %391, 3
  %400 = add nuw nsw i32 %399, 3
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds i8, ptr %386, i64 %401
  store i8 %398, ptr %402, align 1, !tbaa !27
  %403 = load ptr, ptr %17, align 8, !tbaa !88
  %404 = getelementptr inbounds ptr, ptr %403, i64 %32
  %405 = load ptr, ptr %404, align 8, !tbaa !38
  %406 = getelementptr inbounds i8, ptr %405, i64 6
  store i8 0, ptr %406, align 1, !tbaa !27
  br label %407

407:                                              ; preds = %385, %223
  %408 = load ptr, ptr %13, align 8, !tbaa !88
  %409 = getelementptr inbounds ptr, ptr %408, i64 %32
  %410 = load ptr, ptr %409, align 8, !tbaa !38
  %411 = load i8, ptr %410, align 1, !tbaa !27
  %412 = icmp eq i8 %411, 0
  br i1 %412, label %413, label %418

413:                                              ; preds = %407
  store i8 2, ptr %410, align 1, !tbaa !27
  %414 = load ptr, ptr %13, align 8, !tbaa !88
  %415 = getelementptr inbounds ptr, ptr %414, i64 %32
  %416 = load ptr, ptr %415, align 8, !tbaa !38
  %417 = getelementptr inbounds i8, ptr %416, i64 1
  store i8 %22, ptr %417, align 1, !tbaa !27
  br label %435

418:                                              ; preds = %407
  %419 = getelementptr inbounds i8, ptr %410, i64 1
  %420 = load i8, ptr %419, align 1, !tbaa !27
  %421 = zext i8 %420 to i32
  %422 = icmp eq i32 %421, %4
  br i1 %422, label %428, label %423

423:                                              ; preds = %418
  store i8 1, ptr %410, align 1, !tbaa !27
  %424 = load ptr, ptr %13, align 8, !tbaa !88
  %425 = getelementptr inbounds ptr, ptr %424, i64 %32
  %426 = load ptr, ptr %425, align 8, !tbaa !38
  %427 = getelementptr inbounds i8, ptr %426, i64 1
  store i8 %22, ptr %427, align 1, !tbaa !27
  br label %435

428:                                              ; preds = %418
  %429 = icmp ult i8 %411, -2
  br i1 %429, label %430, label %432

430:                                              ; preds = %428
  %431 = add nuw i8 %411, 2
  store i8 %431, ptr %410, align 1, !tbaa !27
  br label %435

432:                                              ; preds = %428
  %433 = icmp eq i8 %411, -1
  br i1 %433, label %434, label %435

434:                                              ; preds = %432
  store i8 -128, ptr %410, align 1, !tbaa !27
  br label %435

435:                                              ; preds = %434, %432, %430, %423, %413
  %436 = load ptr, ptr %17, align 8, !tbaa !88
  %437 = getelementptr inbounds ptr, ptr %436, i64 %32
  %438 = load ptr, ptr %437, align 8, !tbaa !38
  %439 = getelementptr inbounds i8, ptr %438, i64 3
  br label %440

440:                                              ; preds = %435, %156, %87, %81, %74
  %441 = phi ptr [ %11, %81 ], [ %11, %87 ], [ %17, %156 ], [ %13, %435 ], [ %11, %74 ]
  %442 = phi ptr [ %86, %81 ], [ %92, %87 ], [ %157, %156 ], [ %439, %435 ], [ null, %74 ]
  %443 = load ptr, ptr %441, align 8, !tbaa !88
  %444 = getelementptr inbounds ptr, ptr %443, i64 %32
  store ptr %442, ptr %444, align 8, !tbaa !38
  %445 = load ptr, ptr %13, align 8, !tbaa !88
  %446 = getelementptr inbounds ptr, ptr %445, i64 %32
  %447 = load ptr, ptr %446, align 8, !tbaa !38
  %448 = getelementptr inbounds i8, ptr %447, i64 1
  %449 = load i8, ptr %448, align 1, !tbaa !27
  %450 = zext i8 %449 to i32
  %451 = or i32 %450, 256
  %452 = lshr i32 %451, %23
  %453 = icmp eq i32 %452, %2
  br i1 %453, label %454, label %472

454:                                              ; preds = %440
  %455 = load i8, ptr %447, align 1, !tbaa !27
  %456 = lshr i32 %450, %26
  %457 = shl nuw nsw i32 %456, 1
  %458 = and i32 %457, 2
  %459 = add nuw nsw i32 %458, 65535
  %460 = zext i8 %455 to i64
  %461 = add nuw nsw i64 %460, 1
  %462 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %463 = getelementptr inbounds i8, ptr %462, i64 %461
  %464 = load i8, ptr %463, align 1, !tbaa !27
  %465 = zext i8 %464 to i32
  %466 = and i8 %455, 1
  %467 = xor i8 %466, 3
  %468 = zext i8 %467 to i32
  %469 = shl nuw nsw i32 %465, %468
  %470 = mul nuw nsw i32 %469, %459
  %471 = trunc i32 %470 to i16
  br label %472

472:                                              ; preds = %454, %440
  %473 = phi i16 [ %471, %454 ], [ 0, %440 ]
  %474 = load i32, ptr %24, align 8, !tbaa !57
  %475 = add nsw i32 %474, 1
  store i32 %475, ptr %24, align 8, !tbaa !57
  %476 = load ptr, ptr %25, align 8, !tbaa !59
  %477 = sext i32 %474 to i64
  %478 = getelementptr inbounds i16, ptr %476, i64 %477
  store i16 %473, ptr %478, align 2, !tbaa !29
  %479 = load ptr, ptr %11, align 8, !tbaa !88
  %480 = getelementptr inbounds ptr, ptr %479, i64 %32
  %481 = load ptr, ptr %480, align 8, !tbaa !38
  %482 = icmp eq ptr %481, null
  br i1 %482, label %538, label %483

483:                                              ; preds = %472
  %484 = load i8, ptr %481, align 1, !tbaa !27
  %485 = zext i8 %484 to i32
  %486 = load ptr, ptr %27, align 8, !tbaa !86
  %487 = getelementptr inbounds %class.APM1, ptr %486, i64 %32
  %488 = tail call noundef i32 @_ZN8StateMap1pEii(ptr noundef nonnull align 8 dereferenceable(32) %487, i32 noundef %485, i32 noundef 1023) #32
  %489 = zext i8 %484 to i64
  %490 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %489, i64 2
  %491 = load i8, ptr %490, align 2, !tbaa !27
  %492 = icmp eq i8 %491, 0
  %493 = sext i1 %492 to i32
  %494 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %489, i64 3
  %495 = load i8, ptr %494, align 1, !tbaa !27
  %496 = icmp eq i8 %495, 0
  %497 = sext i1 %496 to i32
  %498 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !39
  %499 = sext i32 %488 to i64
  %500 = getelementptr inbounds i16, ptr %498, i64 %499
  %501 = load i16, ptr %500, align 2, !tbaa !29
  %502 = ashr i16 %501, 2
  %503 = load i32, ptr %24, align 8, !tbaa !57
  %504 = add nsw i32 %503, 1
  %505 = load ptr, ptr %25, align 8, !tbaa !59
  %506 = sext i32 %503 to i64
  %507 = getelementptr inbounds i16, ptr %505, i64 %506
  store i16 %502, ptr %507, align 2, !tbaa !29
  %508 = ashr i32 %488, 4
  %509 = sub nsw i32 255, %508
  %510 = sub nsw i32 %508, %509
  %511 = trunc i32 %510 to i16
  %512 = add nsw i32 %503, 2
  %513 = sext i32 %504 to i64
  %514 = getelementptr inbounds i16, ptr %505, i64 %513
  store i16 %511, ptr %514, align 2, !tbaa !29
  %515 = sub nsw i32 %497, %493
  %516 = trunc i32 %515 to i16
  %517 = mul nsw i16 %502, %516
  %518 = add nsw i32 %503, 3
  %519 = sext i32 %512 to i64
  %520 = getelementptr inbounds i16, ptr %505, i64 %519
  store i16 %517, ptr %520, align 2, !tbaa !29
  %521 = and i32 %508, %493
  %522 = and i32 %509, %497
  %523 = sub nsw i32 %521, %522
  %524 = trunc i32 %523 to i16
  %525 = add nsw i32 %503, 4
  %526 = sext i32 %518 to i64
  %527 = getelementptr inbounds i16, ptr %505, i64 %526
  store i16 %524, ptr %527, align 2, !tbaa !29
  %528 = and i32 %508, %497
  %529 = and i32 %509, %493
  %530 = sub nsw i32 %528, %529
  %531 = trunc i32 %530 to i16
  %532 = add nsw i32 %503, 5
  store i32 %532, ptr %24, align 8, !tbaa !57
  %533 = sext i32 %525 to i64
  %534 = getelementptr inbounds i16, ptr %505, i64 %533
  store i16 %531, ptr %534, align 2, !tbaa !29
  %535 = icmp ne i8 %484, 0
  %536 = zext i1 %535 to i32
  %537 = add nsw i32 %33, %536
  br label %583

538:                                              ; preds = %472
  %539 = load ptr, ptr %27, align 8, !tbaa !86
  %540 = getelementptr inbounds %class.APM1, ptr %539, i64 %32, i32 1
  %541 = load i32, ptr %540, align 4, !tbaa !78
  %542 = getelementptr inbounds %class.APM1, ptr %539, i64 %32, i32 2, i32 3
  %543 = load ptr, ptr %542, align 8, !tbaa !15
  %544 = sext i32 %541 to i64
  %545 = getelementptr inbounds i32, ptr %543, i64 %544
  %546 = load i32, ptr %545, align 4, !tbaa !18
  %547 = and i32 %546, 1023
  %548 = icmp eq i32 %547, 1023
  %549 = add i32 %546, 1
  %550 = or i32 %546, 1023
  %551 = select i1 %548, i32 %550, i32 %549
  %552 = lshr i32 %546, 10
  %553 = load i32, ptr @y, align 4, !tbaa !18
  %554 = shl i32 %553, 22
  %555 = sub nsw i32 %554, %552
  %556 = ashr i32 %555, 3
  %557 = zext i32 %547 to i64
  %558 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %557
  %559 = load i32, ptr %558, align 4, !tbaa !18
  %560 = mul nsw i32 %556, %559
  %561 = and i32 %560, -1024
  %562 = add i32 %561, %551
  store i32 %562, ptr %545, align 4, !tbaa !18
  store i32 0, ptr %540, align 4, !tbaa !78
  %563 = load i32, ptr %543, align 4, !tbaa !18
  %564 = lshr i32 %563, 20
  %565 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !39
  %566 = zext i32 %564 to i64
  %567 = getelementptr inbounds i16, ptr %565, i64 %566
  %568 = load i16, ptr %567, align 2, !tbaa !29
  %569 = ashr i16 %568, 2
  %570 = load i32, ptr %24, align 8, !tbaa !57
  %571 = add nsw i32 %570, 1
  %572 = sext i32 %570 to i64
  %573 = getelementptr inbounds i16, ptr %476, i64 %572
  store i16 %569, ptr %573, align 2, !tbaa !29
  %574 = lshr i32 %563, 23
  %575 = trunc i32 %574 to i16
  %576 = and i16 %575, 510
  %577 = add nsw i16 %576, -255
  %578 = sext i32 %571 to i64
  %579 = getelementptr inbounds i16, ptr %476, i64 %578
  %580 = add nsw i32 %570, 5
  store i32 %580, ptr %24, align 8, !tbaa !57
  %581 = insertelement <4 x i16> <i16 poison, i16 0, i16 poison, i16 poison>, i16 %577, i64 0
  %582 = shufflevector <4 x i16> %581, <4 x i16> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  store <4 x i16> %582, ptr %579, align 2, !tbaa !29
  br label %583

583:                                              ; preds = %538, %483
  %584 = phi i32 [ %537, %483 ], [ %33, %538 ]
  %585 = add nuw nsw i64 %32, 1
  %586 = load i32, ptr %7, align 8, !tbaa !85
  %587 = sext i32 %586 to i64
  %588 = icmp slt i64 %585, %587
  br i1 %588, label %31, label %28, !llvm.loop !99

589:                                              ; preds = %28
  store i32 0, ptr %7, align 8, !tbaa !85
  br label %590

590:                                              ; preds = %589, %28
  ret i32 %29
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_ZN8StateMap1pEii(ptr noundef nonnull align 8 dereferenceable(32) %0, i32 noundef %1, i32 noundef %2) #7 comdat align 2 {
  %4 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !78
  %6 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !15
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds i32, ptr %7, i64 %8
  %10 = load i32, ptr %9, align 4, !tbaa !18
  %11 = and i32 %10, 1023
  %12 = icmp slt i32 %11, %2
  %13 = add i32 %10, 1
  %14 = and i32 %10, -1024
  %15 = or i32 %14, %2
  %16 = select i1 %12, i32 %13, i32 %15
  %17 = lshr i32 %10, 10
  %18 = load i32, ptr @y, align 4, !tbaa !18
  %19 = shl i32 %18, 22
  %20 = sub nsw i32 %19, %17
  %21 = ashr i32 %20, 3
  %22 = zext i32 %11 to i64
  %23 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %22
  %24 = load i32, ptr %23, align 4, !tbaa !18
  %25 = mul nsw i32 %21, %24
  %26 = and i32 %25, -1024
  %27 = add i32 %26, %16
  store i32 %27, ptr %9, align 4, !tbaa !18
  store i32 %1, ptr %4, align 4, !tbaa !78
  %28 = sext i32 %1 to i64
  %29 = getelementptr inbounds i32, ptr %7, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !18
  %31 = lshr i32 %30, 20
  ret i32 %31
}

; Function Attrs: optsize uwtable
define internal noundef i32 @_Z10matchModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) %0) #0 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ10matchModelR5MixerE1t acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !100

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ10matchModelR5MixerE1t) #33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !18
  %9 = shl i32 65536, %8
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ10matchModelR5MixerE1t, i32 noundef %9) #32
          to label %10 unwind label %50

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ10matchModelR5MixerE1t, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ10matchModelR5MixerE1t) #33
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load atomic i8, ptr @_ZGVZ10matchModelR5MixerE4scm1 acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %21, !prof !100

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ10matchModelR5MixerE4scm1) #33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ10matchModelR5MixerE4scm1, i32 noundef 131072) #32
          to label %19 unwind label %52

19:                                               ; preds = %18
  %20 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ10matchModelR5MixerE4scm1, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ10matchModelR5MixerE4scm1) #33
  br label %21

21:                                               ; preds = %19, %15, %12
  %22 = load i32, ptr @bpos, align 4, !tbaa !18
  %23 = icmp eq i32 %22, 0
  %24 = load i32, ptr @_ZZ10matchModelR5MixerE3len, align 4
  br i1 %23, label %25, label %103

25:                                               ; preds = %21
  %26 = load i32, ptr @_ZZ10matchModelR5MixerE1h, align 4, !tbaa !18
  %27 = mul i32 %26, 7976
  %28 = load i32, ptr @pos, align 4, !tbaa !18
  %29 = add nsw i32 %28, -1
  %30 = load i32, ptr @buf, align 8, !tbaa !23
  %31 = add nsw i32 %30, -1
  %32 = and i32 %31, %29
  %33 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %34 = sext i32 %32 to i64
  %35 = getelementptr inbounds i8, ptr %33, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !27
  %37 = zext i8 %36 to i32
  %38 = or i32 %27, 1
  %39 = add i32 %38, %37
  %40 = load i32, ptr @_ZZ10matchModelR5MixerE1t, align 8, !tbaa !48
  %41 = add nsw i32 %40, -1
  %42 = and i32 %39, %41
  store i32 %42, ptr @_ZZ10matchModelR5MixerE1h, align 4, !tbaa !18
  %43 = icmp eq i32 %24, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %25
  %45 = add nsw i32 %24, 1
  store i32 %45, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !18
  %46 = load i32, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !18
  %47 = add nsw i32 %46, 1
  store i32 %47, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !18
  %48 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ10matchModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !58
  %49 = sext i32 %42 to i64
  br label %93

50:                                               ; preds = %7
  %51 = landingpad { ptr, i32 }
          cleanup
  br label %192

52:                                               ; preds = %18
  %53 = landingpad { ptr, i32 }
          cleanup
  br label %192

54:                                               ; preds = %25
  %55 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ10matchModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !58
  %56 = sext i32 %42 to i64
  %57 = getelementptr inbounds i32, ptr %55, i64 %56
  %58 = load i32, ptr %57, align 4, !tbaa !18
  store i32 %58, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !18
  %59 = icmp ne i32 %58, 0
  %60 = sub nsw i32 %28, %58
  %61 = icmp slt i32 %60, %30
  %62 = select i1 %59, i1 %61, i1 false
  br i1 %62, label %63, label %93

63:                                               ; preds = %54
  %64 = add nsw i32 %28, -1
  %65 = and i32 %64, %31
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, ptr %33, i64 %66
  %68 = load i8, ptr %67, align 1, !tbaa !27
  %69 = add i32 %58, -1
  %70 = and i32 %69, %31
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8, ptr %33, i64 %71
  %73 = load i8, ptr %72, align 1, !tbaa !27
  %74 = icmp eq i8 %68, %73
  br i1 %74, label %75, label %93

75:                                               ; preds = %75, %63
  %76 = phi i32 [ %77, %75 ], [ 1, %63 ]
  %77 = add nuw nsw i32 %76, 1
  %78 = sub nsw i32 %28, %77
  %79 = and i32 %78, %31
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i8, ptr %33, i64 %80
  %82 = load i8, ptr %81, align 1, !tbaa !27
  %83 = xor i32 %76, -1
  %84 = add i32 %58, %83
  %85 = and i32 %84, %31
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, ptr %33, i64 %86
  %88 = load i8, ptr %87, align 1, !tbaa !27
  %89 = icmp eq i8 %82, %88
  %90 = icmp ult i32 %76, 65534
  %91 = and i1 %90, %89
  br i1 %91, label %75, label %92, !llvm.loop !101

92:                                               ; preds = %75
  %.lcssa = phi i32 [ %76, %75 ]
  store i32 %.lcssa, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !18
  br label %93

93:                                               ; preds = %92, %63, %54, %44
  %94 = phi i64 [ %56, %63 ], [ %56, %92 ], [ %56, %54 ], [ %49, %44 ]
  %95 = phi i32 [ 0, %63 ], [ %.lcssa, %92 ], [ 0, %54 ], [ %45, %44 ]
  %96 = phi ptr [ %55, %63 ], [ %55, %92 ], [ %55, %54 ], [ %48, %44 ]
  %97 = getelementptr inbounds i32, ptr %96, i64 %94
  store i32 %28, ptr %97, align 4, !tbaa !18
  store i32 %95, ptr @_ZZ10matchModelR5MixerE6result, align 4, !tbaa !18
  %98 = load i32, ptr @pos, align 4, !tbaa !18
  %99 = shl i32 %98, 8
  %100 = load i32, ptr @_ZZ10matchModelR5MixerE4scm1, align 8, !tbaa !74
  %101 = add nsw i32 %100, -256
  %102 = and i32 %101, %99
  store i32 %102, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !102
  br label %103

103:                                              ; preds = %93, %21
  %104 = phi i32 [ %95, %93 ], [ %24, %21 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %179, label %106

106:                                              ; preds = %103
  %107 = load i32, ptr @pos, align 4, !tbaa !18
  %108 = add nsw i32 %107, -1
  %109 = load i32, ptr @buf, align 8, !tbaa !23
  %110 = add nsw i32 %109, -1
  %111 = and i32 %110, %108
  %112 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %113 = sext i32 %111 to i64
  %114 = getelementptr inbounds i8, ptr %112, i64 %113
  %115 = load i8, ptr %114, align 1, !tbaa !27
  %116 = load i32, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !18
  %117 = add nsw i32 %116, -1
  %118 = and i32 %117, %110
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8, ptr %112, i64 %119
  %121 = load i8, ptr %120, align 1, !tbaa !27
  %122 = icmp eq i8 %115, %121
  br i1 %122, label %123, label %168

123:                                              ; preds = %106
  %124 = load i32, ptr @c0, align 4, !tbaa !18
  %125 = and i32 %116, %110
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, ptr %112, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !27
  %129 = zext i8 %128 to i32
  %130 = or i32 %129, 256
  %131 = load i32, ptr @bpos, align 4, !tbaa !18
  %132 = sub nsw i32 8, %131
  %133 = lshr i32 %130, %132
  %134 = icmp eq i32 %124, %133
  br i1 %134, label %135, label %168

135:                                              ; preds = %123
  %136 = icmp sgt i32 %104, 65534
  br i1 %136, label %137, label %138

137:                                              ; preds = %135
  store i32 65534, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !18
  br label %138

138:                                              ; preds = %137, %135
  %139 = phi i32 [ 65534, %137 ], [ %104, %135 ]
  %140 = sub nsw i32 7, %131
  %141 = shl nuw i32 1, %140
  %142 = and i32 %141, %129
  %143 = icmp eq i32 %142, 0
  %144 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %145 = and i32 %139, 65535
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds i8, ptr %144, i64 %146
  %148 = load i8, ptr %147, align 1, !tbaa !27
  %149 = zext i8 %148 to i16
  %150 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %151 = load i32, ptr %150, align 8, !tbaa !57
  %152 = add nsw i32 %151, 1
  %153 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %154 = load ptr, ptr %153, align 8, !tbaa !59
  %155 = sext i32 %151 to i64
  %156 = getelementptr inbounds i16, ptr %154, i64 %155
  %157 = tail call i32 @llvm.smin.i32(i32 %139, i32 32)
  %158 = trunc i32 %157 to i16
  %159 = add nsw i32 %151, 2
  %160 = sext i32 %152 to i64
  %161 = getelementptr inbounds i16, ptr %154, i64 %160
  br i1 %143, label %165, label %162

162:                                              ; preds = %138
  %163 = shl nuw nsw i16 %149, 2
  store i16 %163, ptr %156, align 2, !tbaa !29
  %164 = shl i16 %158, 6
  store i32 %159, ptr %150, align 8, !tbaa !57
  store i16 %164, ptr %161, align 2, !tbaa !29
  br label %190

165:                                              ; preds = %138
  %166 = mul nsw i16 %149, -4
  store i16 %166, ptr %156, align 2, !tbaa !29
  %167 = mul i16 %158, -64
  store i32 %159, ptr %150, align 8, !tbaa !57
  store i16 %167, ptr %161, align 2, !tbaa !29
  br label %190

168:                                              ; preds = %123, %106
  store i32 0, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !18
  %169 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %170 = load i32, ptr %169, align 8, !tbaa !57
  %171 = add nsw i32 %170, 1
  %172 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %173 = load ptr, ptr %172, align 8, !tbaa !59
  %174 = sext i32 %170 to i64
  %175 = getelementptr inbounds i16, ptr %173, i64 %174
  store i16 0, ptr %175, align 2, !tbaa !29
  %176 = add nsw i32 %170, 2
  store i32 %176, ptr %169, align 8, !tbaa !57
  %177 = sext i32 %171 to i64
  %178 = getelementptr inbounds i16, ptr %173, i64 %177
  store i16 0, ptr %178, align 2, !tbaa !29
  br label %190

179:                                              ; preds = %103
  %180 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %181 = load i32, ptr %180, align 8, !tbaa !57
  %182 = add nsw i32 %181, 1
  %183 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %184 = load ptr, ptr %183, align 8, !tbaa !59
  %185 = sext i32 %181 to i64
  %186 = getelementptr inbounds i16, ptr %184, i64 %185
  store i16 0, ptr %186, align 2, !tbaa !29
  %187 = add nsw i32 %181, 2
  store i32 %187, ptr %180, align 8, !tbaa !57
  %188 = sext i32 %182 to i64
  %189 = getelementptr inbounds i16, ptr %184, i64 %188
  store i16 0, ptr %189, align 2, !tbaa !29
  br label %190

190:                                              ; preds = %179, %168, %165, %162
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ10matchModelR5MixerE4scm1, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  %191 = load i32, ptr @_ZZ10matchModelR5MixerE6result, align 4, !tbaa !18
  ret i32 %191

192:                                              ; preds = %52, %50
  %193 = phi ptr [ @_ZGVZ10matchModelR5MixerE4scm1, %52 ], [ @_ZGVZ10matchModelR5MixerE1t, %50 ]
  %194 = phi { ptr, i32 } [ %53, %52 ], [ %51, %50 ]
  tail call void @__cxa_guard_abort(ptr nonnull %193) #33
  resume { ptr, i32 } %194
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(ptr) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(ptr) local_unnamed_addr #3

; Function Attrs: optsize uwtable
define internal void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = sdiv i32 %1, 2
  tail call void @_ZN5ArrayItLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %3) #32
  %4 = getelementptr inbounds %class.SmallStationaryContextMap, ptr %0, i64 0, i32 1
  store i32 0, ptr %4, align 8, !tbaa !102
  %5 = load i32, ptr %0, align 8, !tbaa !74
  %6 = icmp sgt i32 %5, 0
  %7 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !70
  br i1 %6, label %9, label %62

9:                                                ; preds = %2
  %10 = zext i32 %5 to i64
  %11 = add nuw nsw i64 %10, 7
  %12 = and i64 %11, 8589934584
  %13 = add nsw i64 %10, -1
  %14 = insertelement <8 x i64> poison, i64 %13, i64 0
  %15 = shufflevector <8 x i64> %14, <8 x i64> poison, <8 x i32> zeroinitializer
  br label %16

16:                                               ; preds = %58, %9
  %17 = phi i64 [ 0, %9 ], [ %59, %58 ]
  %18 = phi <8 x i64> [ <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7>, %9 ], [ %60, %58 ]
  %19 = icmp ule <8 x i64> %18, %15
  %20 = extractelement <8 x i1> %19, i64 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = getelementptr inbounds i16, ptr %8, i64 %17
  store i16 -32768, ptr %22, align 2, !tbaa !29
  br label %23

23:                                               ; preds = %21, %16
  %24 = extractelement <8 x i1> %19, i64 1
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = or i64 %17, 1
  %27 = getelementptr inbounds i16, ptr %8, i64 %26
  store i16 -32768, ptr %27, align 2, !tbaa !29
  br label %28

28:                                               ; preds = %25, %23
  %29 = extractelement <8 x i1> %19, i64 2
  br i1 %29, label %30, label %33

30:                                               ; preds = %28
  %31 = or i64 %17, 2
  %32 = getelementptr inbounds i16, ptr %8, i64 %31
  store i16 -32768, ptr %32, align 2, !tbaa !29
  br label %33

33:                                               ; preds = %30, %28
  %34 = extractelement <8 x i1> %19, i64 3
  br i1 %34, label %35, label %38

35:                                               ; preds = %33
  %36 = or i64 %17, 3
  %37 = getelementptr inbounds i16, ptr %8, i64 %36
  store i16 -32768, ptr %37, align 2, !tbaa !29
  br label %38

38:                                               ; preds = %35, %33
  %39 = extractelement <8 x i1> %19, i64 4
  br i1 %39, label %40, label %43

40:                                               ; preds = %38
  %41 = or i64 %17, 4
  %42 = getelementptr inbounds i16, ptr %8, i64 %41
  store i16 -32768, ptr %42, align 2, !tbaa !29
  br label %43

43:                                               ; preds = %40, %38
  %44 = extractelement <8 x i1> %19, i64 5
  br i1 %44, label %45, label %48

45:                                               ; preds = %43
  %46 = or i64 %17, 5
  %47 = getelementptr inbounds i16, ptr %8, i64 %46
  store i16 -32768, ptr %47, align 2, !tbaa !29
  br label %48

48:                                               ; preds = %45, %43
  %49 = extractelement <8 x i1> %19, i64 6
  br i1 %49, label %50, label %53

50:                                               ; preds = %48
  %51 = or i64 %17, 6
  %52 = getelementptr inbounds i16, ptr %8, i64 %51
  store i16 -32768, ptr %52, align 2, !tbaa !29
  br label %53

53:                                               ; preds = %50, %48
  %54 = extractelement <8 x i1> %19, i64 7
  br i1 %54, label %55, label %58

55:                                               ; preds = %53
  %56 = or i64 %17, 7
  %57 = getelementptr inbounds i16, ptr %8, i64 %56
  store i16 -32768, ptr %57, align 2, !tbaa !29
  br label %58

58:                                               ; preds = %55, %53
  %59 = add i64 %17, 8
  %60 = add <8 x i64> %18, <i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8>
  %61 = icmp eq i64 %59, %12
  br i1 %61, label %62, label %16, !llvm.loop !104

62:                                               ; preds = %58, %2
  %63 = getelementptr inbounds %class.SmallStationaryContextMap, ptr %0, i64 0, i32 2
  store ptr %8, ptr %63, align 8, !tbaa !105
  ret void
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN25SmallStationaryContextMapD2Ev(ptr noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #2 comdat align 2 {
  tail call void @_ZN5ArrayItLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) #31
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #14

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(136) %1, i32 noundef %2) #7 comdat align 2 {
  %4 = load i32, ptr @y, align 4, !tbaa !18
  %5 = shl i32 %4, 16
  %6 = getelementptr inbounds %class.SmallStationaryContextMap, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !105
  %8 = load i16, ptr %7, align 2, !tbaa !29
  %9 = zext i16 %8 to i32
  %10 = add nsw i32 %2, -1
  %11 = shl nuw i32 1, %10
  %12 = add i32 %5, %11
  %13 = sub i32 %12, %9
  %14 = ashr i32 %13, %2
  %15 = trunc i32 %14 to i16
  %16 = add i16 %8, %15
  store i16 %16, ptr %7, align 2, !tbaa !29
  %17 = getelementptr inbounds %class.SmallStationaryContextMap, ptr %0, i64 0, i32 1
  %18 = load i32, ptr %17, align 8, !tbaa !102
  %19 = load i32, ptr @c0, align 4, !tbaa !18
  %20 = add nsw i32 %19, %18
  %21 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !70
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds i16, ptr %22, i64 %23
  store ptr %24, ptr %6, align 8, !tbaa !105
  %25 = load i16, ptr %24, align 2, !tbaa !29
  %26 = lshr i16 %25, 4
  %27 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !39
  %28 = zext i16 %26 to i64
  %29 = getelementptr inbounds i16, ptr %27, i64 %28
  %30 = load i16, ptr %29, align 2, !tbaa !29
  %31 = getelementptr inbounds %class.Mixer, ptr %1, i64 0, i32 8
  %32 = load i32, ptr %31, align 8, !tbaa !57
  %33 = add nsw i32 %32, 1
  store i32 %33, ptr %31, align 8, !tbaa !57
  %34 = getelementptr inbounds %class.Mixer, ptr %1, i64 0, i32 3, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !59
  %36 = sext i32 %32 to i64
  %37 = getelementptr inbounds i16, ptr %35, i64 %36
  store i16 %30, ptr %37, align 2, !tbaa !29
  ret void
}

; Function Attrs: nofree nounwind
declare void @__cxa_guard_abort(ptr) local_unnamed_addr #3

; Function Attrs: optsize uwtable
define internal void @_Z8picModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) #0 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ8picModelR5MixerE1t acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !100

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8picModelR5MixerE1t) #33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN5ArrayIhLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ8picModelR5MixerE1t, i32 noundef 66048) #32
          to label %8 unwind label %39

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIhLi0EED2Ev, ptr nonnull @_ZZ8picModelR5MixerE1t, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8picModelR5MixerE1t) #33
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZ8picModelR5MixerE2sm acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %23, !prof !100

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8picModelR5MixerE2sm) #33
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %18, %13
  %17 = phi ptr [ %19, %18 ], [ @_ZZ8picModelR5MixerE2sm, %13 ]
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) %17, i32 noundef 256) #32
          to label %18 unwind label %41

18:                                               ; preds = %16
  %19 = getelementptr inbounds %class.APM1, ptr %17, i64 1
  %20 = icmp eq ptr %19, getelementptr inbounds ([3 x %class.APM1], ptr @_ZZ8picModelR5MixerE2sm, i64 1, i64 0)
  br i1 %20, label %21, label %16

21:                                               ; preds = %18
  %22 = tail call i32 @__cxa_atexit(ptr nonnull @__cxx_global_array_dtor, ptr null, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8picModelR5MixerE2sm) #33
  br label %23

23:                                               ; preds = %21, %13, %10
  br label %24

24:                                               ; preds = %24, %23
  %25 = phi i64 [ %37, %24 ], [ 0, %23 ]
  %26 = getelementptr inbounds [3 x i32], ptr @_ZZ8picModelR5MixerE3cxt, i64 0, i64 %25
  %27 = load i32, ptr %26, align 4, !tbaa !18
  %28 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ8picModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !26
  %29 = sext i32 %27 to i64
  %30 = getelementptr inbounds i8, ptr %28, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !27
  %32 = zext i8 %31 to i64
  %33 = load i32, ptr @y, align 4, !tbaa !18
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %32, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !27
  store i8 %36, ptr %30, align 1, !tbaa !27
  %37 = add nuw nsw i64 %25, 1
  %38 = icmp eq i64 %37, 3
  br i1 %38, label %49, label %24, !llvm.loop !106

39:                                               ; preds = %7
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %144

41:                                               ; preds = %16
  %.lcssa = phi ptr [ %17, %16 ]
  %42 = landingpad { ptr, i32 }
          cleanup
  %43 = icmp eq ptr %.lcssa, @_ZZ8picModelR5MixerE2sm
  br i1 %43, label %144, label %44

44:                                               ; preds = %44, %41
  %45 = phi ptr [ %46, %44 ], [ %.lcssa, %41 ]
  %46 = getelementptr inbounds %class.APM1, ptr %45, i64 -1
  %47 = getelementptr %class.APM1, ptr %45, i64 -1, i32 2
  tail call void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %47) #31
  %48 = icmp eq ptr %46, @_ZZ8picModelR5MixerE2sm
  br i1 %48, label %144, label %44

49:                                               ; preds = %24
  %50 = load i32, ptr @_ZZ8picModelR5MixerE2r0, align 4, !tbaa !18
  %51 = load i32, ptr @y, align 4, !tbaa !18
  %52 = shl i32 %50, 1
  %53 = add i32 %51, %52
  store i32 %53, ptr @_ZZ8picModelR5MixerE2r0, align 4, !tbaa !18
  %54 = load i32, ptr @_ZZ8picModelR5MixerE2r1, align 4, !tbaa !18
  %55 = load i32, ptr @pos, align 4, !tbaa !18
  %56 = add nsw i32 %55, -215
  %57 = load i32, ptr @buf, align 8, !tbaa !23
  %58 = add nsw i32 %57, -1
  %59 = and i32 %58, %56
  %60 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %61 = sext i32 %59 to i64
  %62 = getelementptr inbounds i8, ptr %60, i64 %61
  %63 = load i8, ptr %62, align 1, !tbaa !27
  %64 = zext i8 %63 to i32
  %65 = load i32, ptr @bpos, align 4, !tbaa !18
  %66 = sub nsw i32 7, %65
  %67 = lshr i32 %64, %66
  %68 = and i32 %67, 1
  %69 = shl i32 %54, 1
  %70 = or i32 %68, %69
  store i32 %70, ptr @_ZZ8picModelR5MixerE2r1, align 4, !tbaa !18
  %71 = load i32, ptr @_ZZ8picModelR5MixerE2r2, align 4, !tbaa !18
  %72 = add nsw i32 %55, -431
  %73 = and i32 %58, %72
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, ptr %60, i64 %74
  %76 = load i8, ptr %75, align 1, !tbaa !27
  %77 = zext i8 %76 to i32
  %78 = lshr i32 %77, %66
  %79 = and i32 %78, 1
  %80 = shl i32 %71, 1
  %81 = or i32 %79, %80
  store i32 %81, ptr @_ZZ8picModelR5MixerE2r2, align 4, !tbaa !18
  %82 = load i32, ptr @_ZZ8picModelR5MixerE2r3, align 4, !tbaa !18
  %83 = add nsw i32 %55, -647
  %84 = and i32 %58, %83
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, ptr %60, i64 %85
  %87 = load i8, ptr %86, align 1, !tbaa !27
  %88 = zext i8 %87 to i32
  %89 = lshr i32 %88, %66
  %90 = and i32 %89, 1
  %91 = shl i32 %82, 1
  %92 = or i32 %90, %91
  store i32 %92, ptr @_ZZ8picModelR5MixerE2r3, align 4, !tbaa !18
  %93 = and i32 %53, 7
  %94 = lshr i32 %69, 4
  %95 = and i32 %94, 56
  %96 = or i32 %95, %93
  %97 = lshr i32 %80, 3
  %98 = and i32 %97, 192
  %99 = or i32 %96, %98
  store i32 %99, ptr @_ZZ8picModelR5MixerE3cxt, align 4, !tbaa !18
  %100 = and i32 %51, 1
  %101 = and i32 %94, 62
  %102 = lshr i32 %80, 2
  %103 = and i32 %102, 64
  %104 = and i32 %82, 128
  %105 = or i32 %100, %101
  %106 = or i32 %105, %103
  %107 = or i32 %106, %104
  %108 = or i32 %107, 256
  store i32 %108, ptr getelementptr inbounds ([3 x i32], ptr @_ZZ8picModelR5MixerE3cxt, i64 0, i64 1), align 4, !tbaa !18
  %109 = and i32 %53, 63
  %110 = and i32 %69, 16382
  %111 = xor i32 %110, %109
  %112 = shl i32 %71, 3
  %113 = and i32 %112, 32512
  %114 = xor i32 %111, %113
  %115 = shl i32 %82, 6
  %116 = and i32 %115, 63488
  %117 = xor i32 %114, %116
  %118 = add nuw nsw i32 %117, 512
  store i32 %118, ptr getelementptr inbounds ([3 x i32], ptr @_ZZ8picModelR5MixerE3cxt, i64 0, i64 2), align 4, !tbaa !18
  %119 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %120 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  br label %121

121:                                              ; preds = %121, %49
  %122 = phi i64 [ 0, %49 ], [ %141, %121 ]
  %123 = getelementptr inbounds [3 x %class.APM1], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 %122
  %124 = getelementptr inbounds [3 x i32], ptr @_ZZ8picModelR5MixerE3cxt, i64 0, i64 %122
  %125 = load i32, ptr %124, align 4, !tbaa !18
  %126 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ8picModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !26
  %127 = sext i32 %125 to i64
  %128 = getelementptr inbounds i8, ptr %126, i64 %127
  %129 = load i8, ptr %128, align 1, !tbaa !27
  %130 = zext i8 %129 to i32
  %131 = tail call noundef i32 @_ZN8StateMap1pEii(ptr noundef nonnull align 8 dereferenceable(32) %123, i32 noundef %130, i32 noundef 1023) #32
  %132 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !39
  %133 = sext i32 %131 to i64
  %134 = getelementptr inbounds i16, ptr %132, i64 %133
  %135 = load i16, ptr %134, align 2, !tbaa !29
  %136 = load i32, ptr %119, align 8, !tbaa !57
  %137 = add nsw i32 %136, 1
  store i32 %137, ptr %119, align 8, !tbaa !57
  %138 = load ptr, ptr %120, align 8, !tbaa !59
  %139 = sext i32 %136 to i64
  %140 = getelementptr inbounds i16, ptr %138, i64 %139
  store i16 %135, ptr %140, align 2, !tbaa !29
  %141 = add nuw nsw i64 %122, 1
  %142 = icmp eq i64 %141, 3
  br i1 %142, label %143, label %121, !llvm.loop !107

143:                                              ; preds = %121
  ret void

144:                                              ; preds = %44, %41, %39
  %145 = phi ptr [ @_ZGVZ8picModelR5MixerE1t, %39 ], [ @_ZGVZ8picModelR5MixerE2sm, %41 ], [ @_ZGVZ8picModelR5MixerE2sm, %44 ]
  %146 = phi { ptr, i32 } [ %40, %39 ], [ %42, %41 ], [ %42, %44 ]
  tail call void @__cxa_guard_abort(ptr nonnull %145) #33
  resume { ptr, i32 } %146
}

; Function Attrs: nounwind optsize uwtable
define internal void @__cxx_global_array_dtor(ptr nocapture readnone %0) #5 section ".text.startup" {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi ptr [ getelementptr inbounds ([3 x %class.APM1], ptr @_ZZ8picModelR5MixerE2sm, i64 1, i64 0), %1 ], [ %4, %2 ]
  %4 = getelementptr inbounds %class.APM1, ptr %3, i64 -1
  %5 = getelementptr %class.APM1, ptr %3, i64 -1, i32 2
  tail call void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %5) #31
  %6 = icmp eq ptr %4, @_ZZ8picModelR5MixerE2sm
  br i1 %6, label %7, label %2

7:                                                ; preds = %2
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_Z9wordModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) %0) #7 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ9wordModelR5MixerE2cm acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !100

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9wordModelR5MixerE2cm) #33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !18
  %9 = shl i32 1048576, %8
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9wordModelR5MixerE2cm, i32 noundef %9, i32 noundef 20) #32
          to label %10 unwind label %27

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ9wordModelR5MixerE2cm, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9wordModelR5MixerE2cm) #33
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load i32, ptr @bpos, align 4, !tbaa !18
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %355

15:                                               ; preds = %12
  %16 = load i32, ptr @c4, align 4, !tbaa !18
  %17 = and i32 %16, 255
  %18 = add nsw i32 %17, -65
  %19 = icmp ult i32 %18, 26
  %20 = add nuw nsw i32 %17, 32
  %21 = select i1 %19, i32 %20, i32 %17
  %22 = add nsw i32 %21, -97
  %23 = icmp ult i32 %22, 26
  %24 = icmp ugt i32 %21, 127
  %25 = or i1 %24, %23
  %26 = load i32, ptr @_ZZ9wordModelR5MixerE5word0, align 4, !tbaa !18
  br i1 %25, label %29, label %37

27:                                               ; preds = %7
  %28 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ9wordModelR5MixerE2cm) #33
  resume { ptr, i32 } %28

29:                                               ; preds = %15
  %30 = mul i32 %26, 8416
  %31 = add i32 %30, %21
  store i32 %31, ptr @_ZZ9wordModelR5MixerE5word0, align 4, !tbaa !18
  %32 = load i32, ptr @_ZZ9wordModelR5MixerE5text0, align 4, !tbaa !18
  %33 = mul i32 %32, 15952
  %34 = add i32 %33, %21
  store i32 %34, ptr @_ZZ9wordModelR5MixerE5text0, align 4, !tbaa !18
  %35 = load i32, ptr @pos, align 4, !tbaa !18
  %36 = load i32, ptr @_ZZ9wordModelR5MixerE2nl, align 4, !tbaa !18
  br label %55

37:                                               ; preds = %15
  %38 = icmp eq i32 %26, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %37
  %40 = load i32, ptr @_ZZ9wordModelR5MixerE5word4, align 4, !tbaa !18
  %41 = mul i32 %40, 23
  store i32 %41, ptr @_ZZ9wordModelR5MixerE5word5, align 4, !tbaa !18
  %42 = load i32, ptr @_ZZ9wordModelR5MixerE5word3, align 4, !tbaa !18
  %43 = mul i32 %42, 19
  store i32 %43, ptr @_ZZ9wordModelR5MixerE5word4, align 4, !tbaa !18
  %44 = load i32, ptr @_ZZ9wordModelR5MixerE5word2, align 4, !tbaa !18
  %45 = mul i32 %44, 17
  store i32 %45, ptr @_ZZ9wordModelR5MixerE5word3, align 4, !tbaa !18
  %46 = load i32, ptr @_ZZ9wordModelR5MixerE5word1, align 4, !tbaa !18
  %47 = mul i32 %46, 13
  store i32 %47, ptr @_ZZ9wordModelR5MixerE5word2, align 4, !tbaa !18
  %48 = mul i32 %26, 11
  store i32 %48, ptr @_ZZ9wordModelR5MixerE5word1, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9wordModelR5MixerE5word0, align 4, !tbaa !18
  br label %49

49:                                               ; preds = %39, %37
  %50 = icmp eq i32 %21, 10
  %51 = load i32, ptr @pos, align 4, !tbaa !18
  %52 = load i32, ptr @_ZZ9wordModelR5MixerE2nl, align 4, !tbaa !18
  br i1 %50, label %53, label %55

53:                                               ; preds = %49
  store i32 %52, ptr @_ZZ9wordModelR5MixerE3nl1, align 4, !tbaa !18
  %54 = add nsw i32 %51, -1
  store i32 %54, ptr @_ZZ9wordModelR5MixerE2nl, align 4, !tbaa !18
  br label %55

55:                                               ; preds = %53, %49, %29
  %56 = phi i32 [ %31, %29 ], [ 0, %53 ], [ 0, %49 ]
  %57 = phi i32 [ %36, %29 ], [ %54, %53 ], [ %52, %49 ]
  %58 = phi i32 [ %35, %29 ], [ %51, %53 ], [ %51, %49 ]
  %59 = sub nsw i32 %58, %57
  %60 = tail call i32 @llvm.smin.i32(i32 %59, i32 255)
  %61 = load i32, ptr @_ZZ9wordModelR5MixerE3nl1, align 4, !tbaa !18
  %62 = add nsw i32 %60, %61
  %63 = load i32, ptr @buf, align 8, !tbaa !23
  %64 = add nsw i32 %63, -1
  %65 = and i32 %64, %62
  %66 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %67 = sext i32 %65 to i64
  %68 = getelementptr inbounds i8, ptr %66, i64 %67
  %69 = load i8, ptr %68, align 1, !tbaa !27
  %70 = zext i8 %69 to i32
  %71 = mul i32 %56, 271
  %72 = add nsw i32 %58, -1
  %73 = and i32 %64, %72
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, ptr %66, i64 %74
  %76 = load i8, ptr %75, align 1, !tbaa !27
  %77 = zext i8 %76 to i32
  %78 = add i32 %71, %77
  %79 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %80 = add nsw i32 %79, 1
  store i32 %80, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %81 = mul i32 %78, 987654323
  %82 = add i32 %81, %79
  %83 = tail call i32 @llvm.fshl.i32(i32 %82, i32 %82, i32 16)
  %84 = mul i32 %83, 123456791
  %85 = add i32 %84, %79
  %86 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !15
  %87 = sext i32 %79 to i64
  %88 = getelementptr inbounds i32, ptr %86, i64 %87
  store i32 %85, ptr %88, align 4, !tbaa !18
  %89 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %90 = add nsw i32 %89, 1
  store i32 %90, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %91 = mul i32 %56, 987654323
  %92 = add i32 %89, %91
  %93 = tail call i32 @llvm.fshl.i32(i32 %92, i32 %92, i32 16)
  %94 = mul i32 %93, 123456791
  %95 = add i32 %94, %89
  %96 = sext i32 %89 to i64
  %97 = getelementptr inbounds i32, ptr %86, i64 %96
  store i32 %95, ptr %97, align 4, !tbaa !18
  %98 = load i32, ptr @_ZZ9wordModelR5MixerE5word1, align 4, !tbaa !18
  %99 = add i32 %98, %78
  %100 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %101 = add nsw i32 %100, 1
  store i32 %101, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %102 = mul i32 %99, 987654323
  %103 = add i32 %102, %100
  %104 = tail call i32 @llvm.fshl.i32(i32 %103, i32 %103, i32 16)
  %105 = mul i32 %104, 123456791
  %106 = add i32 %105, %100
  %107 = sext i32 %100 to i64
  %108 = getelementptr inbounds i32, ptr %86, i64 %107
  store i32 %106, ptr %108, align 4, !tbaa !18
  %109 = mul i32 %98, 31
  %110 = add i32 %109, %56
  %111 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %112 = add nsw i32 %111, 1
  store i32 %112, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %113 = mul i32 %110, 987654323
  %114 = add i32 %111, %113
  %115 = tail call i32 @llvm.fshl.i32(i32 %114, i32 %114, i32 16)
  %116 = mul i32 %115, 123456791
  %117 = add i32 %116, %111
  %118 = sext i32 %111 to i64
  %119 = getelementptr inbounds i32, ptr %86, i64 %118
  store i32 %117, ptr %119, align 4, !tbaa !18
  %120 = load i32, ptr @_ZZ9wordModelR5MixerE5word2, align 4, !tbaa !18
  %121 = mul i32 %120, 29
  %122 = add i32 %121, %99
  %123 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %124 = add nsw i32 %123, 1
  store i32 %124, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %125 = mul i32 %122, 987654323
  %126 = add i32 %125, %123
  %127 = tail call i32 @llvm.fshl.i32(i32 %126, i32 %126, i32 16)
  %128 = mul i32 %127, 123456791
  %129 = add i32 %128, %123
  %130 = sext i32 %123 to i64
  %131 = getelementptr inbounds i32, ptr %86, i64 %130
  store i32 %129, ptr %131, align 4, !tbaa !18
  %132 = load i32, ptr @_ZZ9wordModelR5MixerE5text0, align 4, !tbaa !18
  %133 = and i32 %132, 16777215
  %134 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %135 = add nsw i32 %134, 1
  store i32 %135, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %136 = mul i32 %133, 987654323
  %137 = add i32 %136, %134
  %138 = tail call i32 @llvm.fshl.i32(i32 %137, i32 %137, i32 16)
  %139 = mul i32 %138, 123456791
  %140 = add i32 %139, %134
  %141 = sext i32 %134 to i64
  %142 = getelementptr inbounds i32, ptr %86, i64 %141
  store i32 %140, ptr %142, align 4, !tbaa !18
  %143 = and i32 %132, 1048575
  %144 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %145 = add nsw i32 %144, 1
  store i32 %145, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %146 = mul i32 %143, 987654323
  %147 = add i32 %144, %146
  %148 = tail call i32 @llvm.fshl.i32(i32 %147, i32 %147, i32 16)
  %149 = mul i32 %148, 123456791
  %150 = add i32 %149, %144
  %151 = sext i32 %144 to i64
  %152 = getelementptr inbounds i32, ptr %86, i64 %151
  store i32 %150, ptr %152, align 4, !tbaa !18
  %153 = add i32 %120, %78
  %154 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %155 = add nsw i32 %154, 1
  store i32 %155, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %156 = mul i32 %153, 987654323
  %157 = add i32 %154, %156
  %158 = tail call i32 @llvm.fshl.i32(i32 %157, i32 %157, i32 16)
  %159 = mul i32 %158, 123456791
  %160 = add i32 %159, %154
  %161 = sext i32 %154 to i64
  %162 = getelementptr inbounds i32, ptr %86, i64 %161
  store i32 %160, ptr %162, align 4, !tbaa !18
  %163 = load i32, ptr @_ZZ9wordModelR5MixerE5word3, align 4, !tbaa !18
  %164 = add i32 %163, %78
  %165 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %166 = add nsw i32 %165, 1
  store i32 %166, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %167 = mul i32 %164, 987654323
  %168 = add i32 %167, %165
  %169 = tail call i32 @llvm.fshl.i32(i32 %168, i32 %168, i32 16)
  %170 = mul i32 %169, 123456791
  %171 = add i32 %170, %165
  %172 = sext i32 %165 to i64
  %173 = getelementptr inbounds i32, ptr %86, i64 %172
  store i32 %171, ptr %173, align 4, !tbaa !18
  %174 = load i32, ptr @_ZZ9wordModelR5MixerE5word4, align 4, !tbaa !18
  %175 = add i32 %174, %78
  %176 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %177 = add nsw i32 %176, 1
  store i32 %177, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %178 = mul i32 %175, 987654323
  %179 = add i32 %178, %176
  %180 = tail call i32 @llvm.fshl.i32(i32 %179, i32 %179, i32 16)
  %181 = mul i32 %180, 123456791
  %182 = add i32 %181, %176
  %183 = sext i32 %176 to i64
  %184 = getelementptr inbounds i32, ptr %86, i64 %183
  store i32 %182, ptr %184, align 4, !tbaa !18
  %185 = load i32, ptr @_ZZ9wordModelR5MixerE5word5, align 4, !tbaa !18
  %186 = add i32 %185, %78
  %187 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %188 = add nsw i32 %187, 1
  store i32 %188, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %189 = mul i32 %186, 987654323
  %190 = add i32 %189, %187
  %191 = tail call i32 @llvm.fshl.i32(i32 %190, i32 %190, i32 16)
  %192 = mul i32 %191, 123456791
  %193 = add i32 %192, %187
  %194 = sext i32 %187 to i64
  %195 = getelementptr inbounds i32, ptr %86, i64 %194
  store i32 %193, ptr %195, align 4, !tbaa !18
  %196 = load i32, ptr @pos, align 4, !tbaa !18
  %197 = add nsw i32 %196, -1
  %198 = load i32, ptr @buf, align 8, !tbaa !23
  %199 = add nsw i32 %198, -1
  %200 = and i32 %199, %197
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds i8, ptr %66, i64 %201
  %203 = load i8, ptr %202, align 1, !tbaa !27
  %204 = zext i8 %203 to i32
  %205 = add nsw i32 %196, -3
  %206 = and i32 %199, %205
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds i8, ptr %66, i64 %207
  %209 = load i8, ptr %208, align 1, !tbaa !27
  %210 = zext i8 %209 to i32
  %211 = shl nuw nsw i32 %210, 8
  %212 = or i32 %211, %204
  %213 = add nsw i32 %196, -5
  %214 = and i32 %199, %213
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds i8, ptr %66, i64 %215
  %217 = load i8, ptr %216, align 1, !tbaa !27
  %218 = zext i8 %217 to i32
  %219 = shl nuw nsw i32 %218, 16
  %220 = or i32 %212, %219
  %221 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %222 = add nsw i32 %221, 1
  store i32 %222, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %223 = mul i32 %220, 987654323
  %224 = add i32 %223, %221
  %225 = tail call i32 @llvm.fshl.i32(i32 %224, i32 %224, i32 16)
  %226 = mul i32 %225, 123456791
  %227 = add i32 %226, %221
  %228 = sext i32 %221 to i64
  %229 = getelementptr inbounds i32, ptr %86, i64 %228
  store i32 %227, ptr %229, align 4, !tbaa !18
  %230 = load i32, ptr @pos, align 4, !tbaa !18
  %231 = add nsw i32 %230, -2
  %232 = load i32, ptr @buf, align 8, !tbaa !23
  %233 = add nsw i32 %232, -1
  %234 = and i32 %233, %231
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i8, ptr %66, i64 %235
  %237 = load i8, ptr %236, align 1, !tbaa !27
  %238 = zext i8 %237 to i32
  %239 = add nsw i32 %230, -4
  %240 = and i32 %233, %239
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i8, ptr %66, i64 %241
  %243 = load i8, ptr %242, align 1, !tbaa !27
  %244 = zext i8 %243 to i32
  %245 = shl nuw nsw i32 %244, 8
  %246 = or i32 %245, %238
  %247 = add nsw i32 %230, -6
  %248 = and i32 %233, %247
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds i8, ptr %66, i64 %249
  %251 = load i8, ptr %250, align 1, !tbaa !27
  %252 = zext i8 %251 to i32
  %253 = shl nuw nsw i32 %252, 16
  %254 = or i32 %246, %253
  %255 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %256 = add nsw i32 %255, 1
  store i32 %256, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %257 = mul i32 %254, 987654323
  %258 = add i32 %257, %255
  %259 = tail call i32 @llvm.fshl.i32(i32 %258, i32 %258, i32 16)
  %260 = mul i32 %259, 123456791
  %261 = add i32 %260, %255
  %262 = sext i32 %255 to i64
  %263 = getelementptr inbounds i32, ptr %86, i64 %262
  store i32 %261, ptr %263, align 4, !tbaa !18
  %264 = add i32 %163, %99
  %265 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %266 = add nsw i32 %265, 1
  store i32 %266, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %267 = mul i32 %264, 987654323
  %268 = add i32 %265, %267
  %269 = tail call i32 @llvm.fshl.i32(i32 %268, i32 %268, i32 16)
  %270 = mul i32 %269, 123456791
  %271 = add i32 %270, %265
  %272 = sext i32 %265 to i64
  %273 = getelementptr inbounds i32, ptr %86, i64 %272
  store i32 %271, ptr %273, align 4, !tbaa !18
  %274 = add i32 %163, %153
  %275 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %276 = add nsw i32 %275, 1
  store i32 %276, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %277 = mul i32 %274, 987654323
  %278 = add i32 %275, %277
  %279 = tail call i32 @llvm.fshl.i32(i32 %278, i32 %278, i32 16)
  %280 = mul i32 %279, 123456791
  %281 = add i32 %280, %275
  %282 = sext i32 %275 to i64
  %283 = getelementptr inbounds i32, ptr %86, i64 %282
  store i32 %281, ptr %283, align 4, !tbaa !18
  %284 = shl i32 %60, 16
  %285 = load i32, ptr @pos, align 4, !tbaa !18
  %286 = add nsw i32 %285, -1
  %287 = load i32, ptr @buf, align 8, !tbaa !23
  %288 = add nsw i32 %287, -1
  %289 = and i32 %288, %286
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i8, ptr %66, i64 %290
  %292 = load i8, ptr %291, align 1, !tbaa !27
  %293 = zext i8 %292 to i32
  %294 = shl nuw nsw i32 %293, 8
  %295 = or i32 %294, %284
  %296 = or i32 %295, %70
  %297 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %298 = add nsw i32 %297, 1
  store i32 %298, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %299 = mul i32 %296, 987654323
  %300 = add i32 %299, %297
  %301 = tail call i32 @llvm.fshl.i32(i32 %300, i32 %300, i32 16)
  %302 = mul i32 %301, 123456791
  %303 = add i32 %302, %297
  %304 = sext i32 %297 to i64
  %305 = getelementptr inbounds i32, ptr %86, i64 %304
  store i32 %303, ptr %305, align 4, !tbaa !18
  %306 = load i32, ptr @pos, align 4, !tbaa !18
  %307 = add nsw i32 %306, -1
  %308 = load i32, ptr @buf, align 8, !tbaa !23
  %309 = add nsw i32 %308, -1
  %310 = and i32 %309, %307
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds i8, ptr %66, i64 %311
  %313 = load i8, ptr %312, align 1, !tbaa !27
  %314 = zext i8 %313 to i32
  %315 = shl nuw nsw i32 %314, 8
  %316 = or i32 %315, %70
  %317 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %318 = add nsw i32 %317, 1
  store i32 %318, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %319 = mul i32 %316, 987654323
  %320 = add i32 %319, %317
  %321 = tail call i32 @llvm.fshl.i32(i32 %320, i32 %320, i32 16)
  %322 = mul i32 %321, 123456791
  %323 = add i32 %322, %317
  %324 = sext i32 %317 to i64
  %325 = getelementptr inbounds i32, ptr %86, i64 %324
  store i32 %323, ptr %325, align 4, !tbaa !18
  %326 = shl i32 %60, 8
  %327 = load i32, ptr @pos, align 4, !tbaa !18
  %328 = add nsw i32 %327, -1
  %329 = load i32, ptr @buf, align 8, !tbaa !23
  %330 = add nsw i32 %329, -1
  %331 = and i32 %330, %328
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds i8, ptr %66, i64 %332
  %334 = load i8, ptr %333, align 1, !tbaa !27
  %335 = zext i8 %334 to i32
  %336 = or i32 %326, %335
  %337 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %338 = add nsw i32 %337, 1
  store i32 %338, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %339 = mul i32 %336, 987654323
  %340 = add i32 %339, %337
  %341 = tail call i32 @llvm.fshl.i32(i32 %340, i32 %340, i32 16)
  %342 = mul i32 %341, 123456791
  %343 = add i32 %342, %337
  %344 = sext i32 %337 to i64
  %345 = getelementptr inbounds i32, ptr %86, i64 %344
  store i32 %343, ptr %345, align 4, !tbaa !18
  %346 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %347 = add nsw i32 %346, 1
  store i32 %347, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %348 = mul i32 %60, 987654323
  %349 = add i32 %346, %348
  %350 = tail call i32 @llvm.fshl.i32(i32 %349, i32 %349, i32 16)
  %351 = mul i32 %350, 123456791
  %352 = add i32 %351, %346
  %353 = sext i32 %346 to i64
  %354 = getelementptr inbounds i32, ptr %86, i64 %353
  store i32 %352, ptr %354, align 4, !tbaa !18
  br label %355

355:                                              ; preds = %55, %12
  %356 = tail call noundef i32 @_ZN10ContextMap3mixER5Mixer(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9wordModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0) #32
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #14

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_ZN10ContextMap3mixER5Mixer(ptr noundef nonnull align 8 dereferenceable(140) %0, ptr noundef nonnull align 8 dereferenceable(136) %1) #7 comdat align 2 {
  %3 = load i32, ptr @c0, align 4, !tbaa !18
  %4 = load i32, ptr @bpos, align 4, !tbaa !18
  %5 = load i32, ptr @pos, align 4, !tbaa !18
  %6 = add nsw i32 %5, -1
  %7 = load i32, ptr @buf, align 8, !tbaa !23
  %8 = add nsw i32 %7, -1
  %9 = and i32 %8, %6
  %10 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %11 = sext i32 %9 to i64
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = load i8, ptr %12, align 1, !tbaa !27
  %14 = zext i8 %13 to i32
  %15 = load i32, ptr @y, align 4, !tbaa !18
  %16 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) %0, ptr noundef nonnull align 8 dereferenceable(136) %1, i32 noundef %3, i32 noundef %4, i32 noundef %14, i32 noundef %15) #32
  ret i32 %16
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_Z11recordModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) %0) #7 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2cm acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !100

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2cm) #33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cm, i32 noundef 32768, i32 noundef 3) #32
          to label %8 unwind label %98

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2cm, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2cm) #33
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2cn acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19, !prof !100

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2cn) #33
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cn, i32 noundef 16384, i32 noundef 3) #32
          to label %17 unwind label %100

17:                                               ; preds = %16
  %18 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2cn, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2cn) #33
  br label %19

19:                                               ; preds = %17, %13, %10
  %20 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2co acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28, !prof !100

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2co) #33
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2co, i32 noundef 65536, i32 noundef 3) #32
          to label %26 unwind label %102

26:                                               ; preds = %25
  %27 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2co, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2co) #33
  br label %28

28:                                               ; preds = %26, %22, %19
  %29 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2cp acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %39, !prof !100

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2cp) #33
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = load i32, ptr @level, align 4, !tbaa !18
  %36 = shl i32 65536, %35
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cp, i32 noundef %36, i32 noundef 3) #32
          to label %37 unwind label %104

37:                                               ; preds = %34
  %38 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2cp, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2cp) #33
  br label %39

39:                                               ; preds = %37, %31, %28
  %40 = load i32, ptr @bpos, align 4, !tbaa !18
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %434

42:                                               ; preds = %39
  %43 = load i32, ptr @c4, align 4, !tbaa !18
  %44 = and i32 %43, 65535
  %45 = and i32 %43, 255
  %46 = lshr i32 %44, 8
  %47 = load i32, ptr @pos, align 4, !tbaa !18
  %48 = zext i32 %45 to i64
  %49 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos1, i64 0, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !18
  %51 = sub nsw i32 %47, %50
  %52 = icmp sgt i32 %51, 1
  br i1 %52, label %53, label %120

53:                                               ; preds = %42
  %54 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos2, i64 0, i64 %48
  %55 = load i32, ptr %54, align 4, !tbaa !18
  %56 = sub nsw i32 %50, %55
  %57 = icmp eq i32 %51, %56
  br i1 %57, label %58, label %120

58:                                               ; preds = %53
  %59 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos3, i64 0, i64 %48
  %60 = load i32, ptr %59, align 4, !tbaa !18
  %61 = sub nsw i32 %55, %60
  %62 = icmp eq i32 %51, %61
  br i1 %62, label %63, label %120

63:                                               ; preds = %58
  %64 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos4, i64 0, i64 %48
  %65 = load i32, ptr %64, align 4, !tbaa !18
  %66 = sub nsw i32 %60, %65
  %67 = icmp eq i32 %51, %66
  br i1 %67, label %68, label %120

68:                                               ; preds = %63
  %69 = icmp ugt i32 %51, 15
  br i1 %69, label %92, label %70

70:                                               ; preds = %68
  %71 = mul nuw nsw i32 %51, 5
  %72 = xor i32 %71, -1
  %73 = add i32 %47, %72
  %74 = load i32, ptr @buf, align 8, !tbaa !23
  %75 = add nsw i32 %74, -1
  %76 = and i32 %75, %73
  %77 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %78 = sext i32 %76 to i64
  %79 = getelementptr inbounds i8, ptr %77, i64 %78
  %80 = load i8, ptr %79, align 1, !tbaa !27
  %81 = trunc i32 %43 to i8
  %82 = icmp eq i8 %80, %81
  br i1 %82, label %83, label %120

83:                                               ; preds = %70
  %84 = mul nuw nsw i32 %51, 6
  %85 = xor i32 %84, -1
  %86 = add i32 %47, %85
  %87 = and i32 %75, %86
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8, ptr %77, i64 %88
  %90 = load i8, ptr %89, align 1, !tbaa !27
  %91 = icmp eq i8 %90, %80
  br i1 %91, label %92, label %120

92:                                               ; preds = %83, %68
  %93 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen1, align 4, !tbaa !18
  %94 = icmp eq i32 %51, %93
  br i1 %94, label %95, label %106

95:                                               ; preds = %92
  %96 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !18
  %97 = add nsw i32 %96, 1
  store i32 %97, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !18
  br label %122

98:                                               ; preds = %7
  %99 = landingpad { ptr, i32 }
          cleanup
  br label %439

100:                                              ; preds = %16
  %101 = landingpad { ptr, i32 }
          cleanup
  br label %439

102:                                              ; preds = %25
  %103 = landingpad { ptr, i32 }
          cleanup
  br label %439

104:                                              ; preds = %34
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %439

106:                                              ; preds = %92
  %107 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen2, align 4, !tbaa !18
  %108 = icmp eq i32 %51, %107
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !18
  %111 = add nsw i32 %110, 1
  br label %118

112:                                              ; preds = %106
  %113 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !18
  %114 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !18
  %115 = icmp sgt i32 %113, %114
  br i1 %115, label %116, label %117

116:                                              ; preds = %112
  store i32 %51, ptr @_ZZ11recordModelR5MixerE5rlen2, align 4, !tbaa !18
  br label %118

117:                                              ; preds = %112
  store i32 %51, ptr @_ZZ11recordModelR5MixerE5rlen1, align 4, !tbaa !18
  store i32 1, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !18
  br label %131

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %111, %109 ], [ 1, %116 ]
  store i32 %119, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !18
  br label %120

120:                                              ; preds = %118, %83, %70, %63, %58, %53, %42
  %121 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !18
  br label %122

122:                                              ; preds = %120, %95
  %123 = phi i32 [ %121, %120 ], [ %97, %95 ]
  %124 = icmp sgt i32 %123, 15
  br i1 %124, label %125, label %129

125:                                              ; preds = %122
  %126 = load i32, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !18
  %127 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen1, align 4, !tbaa !18
  %128 = icmp eq i32 %126, %127
  br i1 %128, label %129, label %138

129:                                              ; preds = %125, %122
  %130 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !18
  br label %131

131:                                              ; preds = %129, %117
  %132 = phi i32 [ %130, %129 ], [ %114, %117 ]
  %133 = icmp sgt i32 %132, 15
  br i1 %133, label %134, label %140

134:                                              ; preds = %131
  %135 = load i32, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !18
  %136 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen2, align 4, !tbaa !18
  %137 = icmp eq i32 %135, %136
  br i1 %137, label %140, label %138

138:                                              ; preds = %134, %125
  %139 = phi i32 [ %127, %125 ], [ %136, %134 ]
  store i32 %139, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !18
  store i32 0, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !18
  store i32 0, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !18
  br label %140

140:                                              ; preds = %138, %134, %131
  %141 = shl nuw nsw i32 %45, 8
  %142 = tail call i32 @llvm.smin.i32(i32 %51, i32 255)
  %143 = sdiv i32 %142, 4
  %144 = or i32 %143, %141
  %145 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %146 = add nsw i32 %145, 1
  store i32 %146, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %147 = mul i32 %144, 987654323
  %148 = add i32 %145, %147
  %149 = tail call i32 @llvm.fshl.i32(i32 %148, i32 %148, i32 16)
  %150 = mul i32 %149, 123456791
  %151 = add i32 %150, %145
  %152 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !15
  %153 = sext i32 %145 to i64
  %154 = getelementptr inbounds i32, ptr %152, i64 %153
  store i32 %151, ptr %154, align 4, !tbaa !18
  %155 = shl nuw nsw i32 %44, 9
  %156 = load i32, ptr @pos, align 4, !tbaa !18
  %157 = zext i32 %44 to i64
  %158 = getelementptr inbounds [65536 x i32], ptr @_ZZ11recordModelR5MixerE5wpos1, i64 0, i64 %157
  %159 = load i32, ptr %158, align 4, !tbaa !18
  %160 = sub nsw i32 %156, %159
  %161 = icmp ugt i32 %160, 16777215
  br i1 %161, label %162, label %170

162:                                              ; preds = %140
  %163 = lshr i32 %160, 16
  %164 = zext i32 %163 to i64
  %165 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %166 = getelementptr inbounds i8, ptr %165, i64 %164
  %167 = load i8, ptr %166, align 1, !tbaa !27
  %168 = zext i8 %167 to i32
  %169 = or i32 %168, 256
  br label %186

170:                                              ; preds = %140
  %171 = icmp ugt i32 %160, 65535
  br i1 %171, label %172, label %180

172:                                              ; preds = %170
  %173 = lshr i32 %160, 8
  %174 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %175 = zext i32 %173 to i64
  %176 = getelementptr inbounds i8, ptr %174, i64 %175
  %177 = load i8, ptr %176, align 1, !tbaa !27
  %178 = zext i8 %177 to i32
  %179 = add nuw nsw i32 %178, 128
  br label %186

180:                                              ; preds = %170
  %181 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %182 = zext i32 %160 to i64
  %183 = getelementptr inbounds i8, ptr %181, i64 %182
  %184 = load i8, ptr %183, align 1, !tbaa !27
  %185 = zext i8 %184 to i32
  br label %186

186:                                              ; preds = %180, %172, %162
  %187 = phi i32 [ %169, %162 ], [ %179, %172 ], [ %185, %180 ]
  %188 = lshr i32 %187, 2
  %189 = or i32 %188, %155
  %190 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %191 = add nsw i32 %190, 1
  store i32 %191, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %192 = mul i32 %189, 987654323
  %193 = add i32 %192, %190
  %194 = tail call i32 @llvm.fshl.i32(i32 %193, i32 %193, i32 16)
  %195 = mul i32 %194, 123456791
  %196 = add i32 %195, %190
  %197 = sext i32 %190 to i64
  %198 = getelementptr inbounds i32, ptr %152, i64 %197
  store i32 %196, ptr %198, align 4, !tbaa !18
  %199 = load i32, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !18
  %200 = load i32, ptr @pos, align 4, !tbaa !18
  %201 = sub nsw i32 %200, %199
  %202 = load i32, ptr @buf, align 8, !tbaa !23
  %203 = add nsw i32 %202, -1
  %204 = and i32 %203, %201
  %205 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %206 = sext i32 %204 to i64
  %207 = getelementptr inbounds i8, ptr %205, i64 %206
  %208 = load i8, ptr %207, align 1, !tbaa !27
  %209 = zext i8 %208 to i32
  %210 = shl nuw nsw i32 %209, 10
  %211 = shl nuw nsw i32 %199, 1
  %212 = sub nsw i32 %200, %211
  %213 = and i32 %203, %212
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i8, ptr %205, i64 %214
  %216 = load i8, ptr %215, align 1, !tbaa !27
  %217 = zext i8 %216 to i32
  %218 = shl nuw nsw i32 %217, 18
  %219 = or i32 %210, %218
  %220 = or i32 %219, %199
  %221 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %222 = add nsw i32 %221, 1
  store i32 %222, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %223 = mul i32 %220, 987654323
  %224 = add i32 %223, %221
  %225 = tail call i32 @llvm.fshl.i32(i32 %224, i32 %224, i32 16)
  %226 = mul i32 %225, 123456791
  %227 = add i32 %226, %221
  %228 = sext i32 %221 to i64
  %229 = getelementptr inbounds i32, ptr %152, i64 %228
  store i32 %227, ptr %229, align 4, !tbaa !18
  %230 = shl i32 %199, 8
  %231 = or i32 %230, %44
  %232 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !85
  %233 = add nsw i32 %232, 1
  store i32 %233, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !85
  %234 = mul i32 %231, 987654323
  %235 = add i32 %232, %234
  %236 = tail call i32 @llvm.fshl.i32(i32 %235, i32 %235, i32 16)
  %237 = mul i32 %236, 123456791
  %238 = add i32 %237, %232
  %239 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 5, i32 3), align 8, !tbaa !15
  %240 = sext i32 %232 to i64
  %241 = getelementptr inbounds i32, ptr %239, i64 %240
  store i32 %238, ptr %241, align 4, !tbaa !18
  %242 = shl i32 %199, 16
  %243 = or i32 %242, %46
  %244 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !85
  %245 = add nsw i32 %244, 1
  store i32 %245, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !85
  %246 = mul i32 %243, 987654323
  %247 = add i32 %244, %246
  %248 = tail call i32 @llvm.fshl.i32(i32 %247, i32 %247, i32 16)
  %249 = mul i32 %248, 123456791
  %250 = add i32 %249, %244
  %251 = sext i32 %244 to i64
  %252 = getelementptr inbounds i32, ptr %239, i64 %251
  store i32 %250, ptr %252, align 4, !tbaa !18
  %253 = or i32 %230, %45
  %254 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !85
  %255 = add nsw i32 %254, 1
  store i32 %255, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !85
  %256 = mul i32 %253, 987654323
  %257 = add i32 %254, %256
  %258 = tail call i32 @llvm.fshl.i32(i32 %257, i32 %257, i32 16)
  %259 = mul i32 %258, 123456791
  %260 = add i32 %259, %254
  %261 = sext i32 %254 to i64
  %262 = getelementptr inbounds i32, ptr %239, i64 %261
  store i32 %260, ptr %262, align 4, !tbaa !18
  %263 = load i32, ptr @pos, align 4, !tbaa !18
  %264 = add nsw i32 %263, -1
  %265 = load i32, ptr @buf, align 8, !tbaa !23
  %266 = add nsw i32 %265, -1
  %267 = and i32 %266, %264
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds i8, ptr %205, i64 %268
  %270 = load i8, ptr %269, align 1, !tbaa !27
  %271 = zext i8 %270 to i32
  %272 = shl nuw nsw i32 %271, 8
  %273 = zext i8 %270 to i64
  %274 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos1, i64 0, i64 %273
  %275 = load i32, ptr %274, align 4, !tbaa !18
  %276 = sub nsw i32 %263, %275
  %277 = tail call i32 @llvm.smin.i32(i32 %276, i32 255)
  %278 = or i32 %277, %272
  %279 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !85
  %280 = add nsw i32 %279, 1
  store i32 %280, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !85
  %281 = mul i32 %278, 987654323
  %282 = add i32 %281, %279
  %283 = tail call i32 @llvm.fshl.i32(i32 %282, i32 %282, i32 16)
  %284 = mul i32 %283, 123456791
  %285 = add i32 %284, %279
  %286 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 5, i32 3), align 8, !tbaa !15
  %287 = sext i32 %279 to i64
  %288 = getelementptr inbounds i32, ptr %286, i64 %287
  store i32 %285, ptr %288, align 4, !tbaa !18
  %289 = load i32, ptr @pos, align 4, !tbaa !18
  %290 = add nsw i32 %289, -1
  %291 = load i32, ptr @buf, align 8, !tbaa !23
  %292 = add nsw i32 %291, -1
  %293 = and i32 %292, %290
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds i8, ptr %205, i64 %294
  %296 = load i8, ptr %295, align 1, !tbaa !27
  %297 = zext i8 %296 to i32
  %298 = shl nuw nsw i32 %297, 17
  %299 = add nsw i32 %289, -2
  %300 = and i32 %292, %299
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds i8, ptr %205, i64 %301
  %303 = load i8, ptr %302, align 1, !tbaa !27
  %304 = zext i8 %303 to i32
  %305 = shl nuw nsw i32 %304, 9
  %306 = or i32 %305, %298
  %307 = sub nsw i32 %289, %159
  %308 = icmp ugt i32 %307, 16777215
  br i1 %308, label %309, label %317

309:                                              ; preds = %186
  %310 = lshr i32 %307, 16
  %311 = zext i32 %310 to i64
  %312 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %313 = getelementptr inbounds i8, ptr %312, i64 %311
  %314 = load i8, ptr %313, align 1, !tbaa !27
  %315 = zext i8 %314 to i32
  %316 = or i32 %315, 256
  br label %333

317:                                              ; preds = %186
  %318 = icmp ugt i32 %307, 65535
  br i1 %318, label %319, label %327

319:                                              ; preds = %317
  %320 = lshr i32 %307, 8
  %321 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %322 = zext i32 %320 to i64
  %323 = getelementptr inbounds i8, ptr %321, i64 %322
  %324 = load i8, ptr %323, align 1, !tbaa !27
  %325 = zext i8 %324 to i32
  %326 = add nuw nsw i32 %325, 128
  br label %333

327:                                              ; preds = %317
  %328 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %329 = zext i32 %307 to i64
  %330 = getelementptr inbounds i8, ptr %328, i64 %329
  %331 = load i8, ptr %330, align 1, !tbaa !27
  %332 = zext i8 %331 to i32
  br label %333

333:                                              ; preds = %327, %319, %309
  %334 = phi i32 [ %316, %309 ], [ %326, %319 ], [ %332, %327 ]
  %335 = lshr i32 %334, 2
  %336 = or i32 %306, %335
  %337 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !85
  %338 = add nsw i32 %337, 1
  store i32 %338, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !85
  %339 = mul i32 %336, 987654323
  %340 = add i32 %339, %337
  %341 = tail call i32 @llvm.fshl.i32(i32 %340, i32 %340, i32 16)
  %342 = mul i32 %341, 123456791
  %343 = add i32 %342, %337
  %344 = sext i32 %337 to i64
  %345 = getelementptr inbounds i32, ptr %286, i64 %344
  store i32 %343, ptr %345, align 4, !tbaa !18
  %346 = load i32, ptr @pos, align 4, !tbaa !18
  %347 = srem i32 %346, %199
  %348 = add nsw i32 %346, -1
  %349 = load i32, ptr @buf, align 8, !tbaa !23
  %350 = add nsw i32 %349, -1
  %351 = and i32 %350, %348
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds i8, ptr %205, i64 %352
  %354 = load i8, ptr %353, align 1, !tbaa !27
  %355 = zext i8 %354 to i32
  %356 = shl nuw nsw i32 %355, 8
  %357 = sub nsw i32 %346, %199
  %358 = and i32 %350, %357
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds i8, ptr %205, i64 %359
  %361 = load i8, ptr %360, align 1, !tbaa !27
  %362 = zext i8 %361 to i32
  %363 = or i32 %356, %362
  %364 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !85
  %365 = add nsw i32 %364, 1
  store i32 %365, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !85
  %366 = mul i32 %363, 987654323
  %367 = add i32 %366, %364
  %368 = tail call i32 @llvm.fshl.i32(i32 %367, i32 %367, i32 16)
  %369 = mul i32 %368, 123456791
  %370 = add i32 %369, %364
  %371 = sext i32 %364 to i64
  %372 = getelementptr inbounds i32, ptr %286, i64 %371
  store i32 %370, ptr %372, align 4, !tbaa !18
  %373 = load i32, ptr @pos, align 4, !tbaa !18
  %374 = sub nsw i32 %373, %199
  %375 = load i32, ptr @buf, align 8, !tbaa !23
  %376 = add nsw i32 %375, -1
  %377 = and i32 %376, %374
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds i8, ptr %205, i64 %378
  %380 = load i8, ptr %379, align 1, !tbaa !27
  %381 = zext i8 %380 to i32
  %382 = shl nuw nsw i32 %381, 10
  %383 = shl i32 %347, 18
  %384 = or i32 %199, %382
  %385 = or i32 %384, %383
  %386 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !85
  %387 = add nsw i32 %386, 1
  store i32 %387, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !85
  %388 = mul i32 %385, 987654323
  %389 = add i32 %388, %386
  %390 = tail call i32 @llvm.fshl.i32(i32 %389, i32 %389, i32 16)
  %391 = mul i32 %390, 123456791
  %392 = add i32 %391, %386
  %393 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 5, i32 3), align 8, !tbaa !15
  %394 = sext i32 %386 to i64
  %395 = getelementptr inbounds i32, ptr %393, i64 %394
  store i32 %392, ptr %395, align 4, !tbaa !18
  %396 = load i32, ptr @pos, align 4, !tbaa !18
  %397 = add nsw i32 %396, -1
  %398 = load i32, ptr @buf, align 8, !tbaa !23
  %399 = add nsw i32 %398, -1
  %400 = and i32 %399, %397
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds i8, ptr %205, i64 %401
  %403 = load i8, ptr %402, align 1, !tbaa !27
  %404 = zext i8 %403 to i32
  %405 = shl nuw nsw i32 %404, 10
  %406 = or i32 %199, %405
  %407 = or i32 %406, %383
  %408 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !85
  %409 = add nsw i32 %408, 1
  store i32 %409, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !85
  %410 = mul i32 %407, 987654323
  %411 = add i32 %410, %408
  %412 = tail call i32 @llvm.fshl.i32(i32 %411, i32 %411, i32 16)
  %413 = mul i32 %412, 123456791
  %414 = add i32 %413, %408
  %415 = sext i32 %408 to i64
  %416 = getelementptr inbounds i32, ptr %393, i64 %415
  store i32 %414, ptr %416, align 4, !tbaa !18
  %417 = shl i32 %199, 12
  %418 = or i32 %347, %417
  %419 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !85
  %420 = add nsw i32 %419, 1
  store i32 %420, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !85
  %421 = mul i32 %418, 987654323
  %422 = add i32 %419, %421
  %423 = tail call i32 @llvm.fshl.i32(i32 %422, i32 %422, i32 16)
  %424 = mul i32 %423, 123456791
  %425 = add i32 %424, %419
  %426 = sext i32 %419 to i64
  %427 = getelementptr inbounds i32, ptr %393, i64 %426
  store i32 %425, ptr %427, align 4, !tbaa !18
  %428 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos3, i64 0, i64 %48
  %429 = load i32, ptr %428, align 4, !tbaa !18
  %430 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos4, i64 0, i64 %48
  store i32 %429, ptr %430, align 4, !tbaa !18
  %431 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos2, i64 0, i64 %48
  %432 = load i32, ptr %431, align 4, !tbaa !18
  store i32 %432, ptr %428, align 4, !tbaa !18
  store i32 %50, ptr %431, align 4, !tbaa !18
  %433 = load i32, ptr @pos, align 4, !tbaa !18
  store i32 %433, ptr %49, align 4, !tbaa !18
  store i32 %433, ptr %158, align 4, !tbaa !18
  br label %434

434:                                              ; preds = %333, %39
  %435 = tail call noundef i32 @_ZN10ContextMap3mixER5Mixer(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0) #32
  %436 = tail call noundef i32 @_ZN10ContextMap3mixER5Mixer(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cn, ptr noundef nonnull align 8 dereferenceable(136) %0) #32
  %437 = tail call noundef i32 @_ZN10ContextMap3mixER5Mixer(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2co, ptr noundef nonnull align 8 dereferenceable(136) %0) #32
  %438 = tail call noundef i32 @_ZN10ContextMap3mixER5Mixer(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cp, ptr noundef nonnull align 8 dereferenceable(136) %0) #32
  ret void

439:                                              ; preds = %104, %102, %100, %98
  %440 = phi ptr [ @_ZGVZ11recordModelR5MixerE2cp, %104 ], [ @_ZGVZ11recordModelR5MixerE2co, %102 ], [ @_ZGVZ11recordModelR5MixerE2cn, %100 ], [ @_ZGVZ11recordModelR5MixerE2cm, %98 ]
  %441 = phi { ptr, i32 } [ %105, %104 ], [ %103, %102 ], [ %101, %100 ], [ %99, %98 ]
  tail call void @__cxa_guard_abort(ptr nonnull %440) #33
  resume { ptr, i32 } %441
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_Z11sparseModelR5Mixerii(ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %1, i32 noundef %2) #7 personality ptr @__gxx_personality_v0 {
  %4 = load atomic i8, ptr @_ZGVZ11sparseModelR5MixeriiE2cm acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %14, !prof !100

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11sparseModelR5MixeriiE2cm) #33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %6
  %10 = load i32, ptr @level, align 4, !tbaa !18
  %11 = shl i32 131072, %10
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11sparseModelR5MixeriiE2cm, i32 noundef %11, i32 noundef 48) #32
          to label %12 unwind label %251

12:                                               ; preds = %9
  %13 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11sparseModelR5MixeriiE2cm, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11sparseModelR5MixeriiE2cm) #33
  br label %14

14:                                               ; preds = %12, %6, %3
  %15 = load i32, ptr @bpos, align 4, !tbaa !18
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %420

17:                                               ; preds = %14
  %18 = load i32, ptr @c4, align 4, !tbaa !18
  %19 = and i32 %18, 15790320
  %20 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %21 = add nsw i32 %20, 1
  store i32 %21, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %22 = mul i32 %19, 987654323
  %23 = add i32 %22, %20
  %24 = tail call i32 @llvm.fshl.i32(i32 %23, i32 %23, i32 16)
  %25 = mul i32 %24, 123456791
  %26 = add i32 %25, %20
  %27 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !15
  %28 = sext i32 %20 to i64
  %29 = getelementptr inbounds i32, ptr %27, i64 %28
  store i32 %26, ptr %29, align 4, !tbaa !18
  %30 = load i32, ptr @c4, align 4, !tbaa !18
  %31 = and i32 %30, -252645136
  %32 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %33 = add nsw i32 %32, 1
  store i32 %33, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %34 = mul i32 %31, 987654323
  %35 = add i32 %32, 987654323
  %36 = add i32 %35, %34
  %37 = tail call i32 @llvm.fshl.i32(i32 %36, i32 %36, i32 16)
  %38 = mul i32 %37, 123456791
  %39 = add i32 %38, %32
  %40 = sext i32 %32 to i64
  %41 = getelementptr inbounds i32, ptr %27, i64 %40
  store i32 %39, ptr %41, align 4, !tbaa !18
  %42 = load i32, ptr @c4, align 4, !tbaa !18
  %43 = and i32 %42, 16316664
  %44 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %45 = add nsw i32 %44, 1
  store i32 %45, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %46 = mul i32 %43, 987654323
  %47 = add i32 %44, 1975308646
  %48 = add i32 %47, %46
  %49 = tail call i32 @llvm.fshl.i32(i32 %48, i32 %48, i32 16)
  %50 = mul i32 %49, 123456791
  %51 = add i32 %50, %44
  %52 = sext i32 %44 to i64
  %53 = getelementptr inbounds i32, ptr %27, i64 %52
  store i32 %51, ptr %53, align 4, !tbaa !18
  %54 = load i32, ptr @c4, align 4, !tbaa !18
  %55 = and i32 %54, -117901064
  %56 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %57 = add nsw i32 %56, 1
  store i32 %57, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %58 = mul i32 %55, 987654323
  %59 = add i32 %56, -1332004327
  %60 = add i32 %59, %58
  %61 = tail call i32 @llvm.fshl.i32(i32 %60, i32 %60, i32 16)
  %62 = mul i32 %61, 123456791
  %63 = add i32 %62, %56
  %64 = sext i32 %56 to i64
  %65 = getelementptr inbounds i32, ptr %27, i64 %64
  store i32 %63, ptr %65, align 4, !tbaa !18
  %66 = load i32, ptr @c4, align 4, !tbaa !18
  %67 = and i32 %66, 14737632
  %68 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %69 = add nsw i32 %68, 1
  store i32 %69, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %70 = mul i32 %67, 987654323
  %71 = add i32 %68, -344350004
  %72 = add i32 %71, %70
  %73 = tail call i32 @llvm.fshl.i32(i32 %72, i32 %72, i32 16)
  %74 = mul i32 %73, 123456791
  %75 = add i32 %74, %68
  %76 = sext i32 %68 to i64
  %77 = getelementptr inbounds i32, ptr %27, i64 %76
  store i32 %75, ptr %77, align 4, !tbaa !18
  %78 = load i32, ptr @c4, align 4, !tbaa !18
  %79 = and i32 %78, -522133280
  %80 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %81 = add nsw i32 %80, 1
  store i32 %81, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %82 = mul i32 %79, 987654323
  %83 = add i32 %80, 643304319
  %84 = add i32 %83, %82
  %85 = tail call i32 @llvm.fshl.i32(i32 %84, i32 %84, i32 16)
  %86 = mul i32 %85, 123456791
  %87 = add i32 %86, %80
  %88 = sext i32 %80 to i64
  %89 = getelementptr inbounds i32, ptr %27, i64 %88
  store i32 %87, ptr %89, align 4, !tbaa !18
  %90 = load i32, ptr @c4, align 4, !tbaa !18
  %91 = and i32 %90, 15790335
  %92 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %93 = add nsw i32 %92, 1
  store i32 %93, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %94 = mul i32 %91, 987654323
  %95 = add i32 %92, 1630958642
  %96 = add i32 %95, %94
  %97 = tail call i32 @llvm.fshl.i32(i32 %96, i32 %96, i32 16)
  %98 = mul i32 %97, 123456791
  %99 = add i32 %98, %92
  %100 = sext i32 %92 to i64
  %101 = getelementptr inbounds i32, ptr %27, i64 %100
  store i32 %99, ptr %101, align 4, !tbaa !18
  %102 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %103 = add nsw i32 %102, 1
  store i32 %103, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %104 = mul i32 %1, 987654323
  %105 = add i32 %102, %104
  %106 = tail call i32 @llvm.fshl.i32(i32 %105, i32 %105, i32 16)
  %107 = mul i32 %106, 123456791
  %108 = add i32 %107, %102
  %109 = sext i32 %102 to i64
  %110 = getelementptr inbounds i32, ptr %27, i64 %109
  store i32 %108, ptr %110, align 4, !tbaa !18
  %111 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %112 = add nsw i32 %111, 1
  store i32 %112, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %113 = mul i32 %2, 987654323
  %114 = add i32 %111, %113
  %115 = tail call i32 @llvm.fshl.i32(i32 %114, i32 %114, i32 16)
  %116 = mul i32 %115, 123456791
  %117 = add i32 %116, %111
  %118 = sext i32 %111 to i64
  %119 = getelementptr inbounds i32, ptr %27, i64 %118
  store i32 %117, ptr %119, align 4, !tbaa !18
  %120 = load i32, ptr @c4, align 4, !tbaa !18
  %121 = and i32 %120, 16711935
  %122 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %123 = add nsw i32 %122, 1
  store i32 %123, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %124 = mul i32 %121, 987654323
  %125 = add i32 %124, %122
  %126 = tail call i32 @llvm.fshl.i32(i32 %125, i32 %125, i32 16)
  %127 = mul i32 %126, 123456791
  %128 = add i32 %127, %122
  %129 = sext i32 %122 to i64
  %130 = getelementptr inbounds i32, ptr %27, i64 %129
  store i32 %128, ptr %130, align 4, !tbaa !18
  %131 = load i32, ptr @c4, align 4, !tbaa !18
  %132 = and i32 %131, -16776961
  %133 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %134 = add nsw i32 %133, 1
  store i32 %134, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %135 = mul i32 %132, 987654323
  %136 = add i32 %135, %133
  %137 = tail call i32 @llvm.fshl.i32(i32 %136, i32 %136, i32 16)
  %138 = mul i32 %137, 123456791
  %139 = add i32 %138, %133
  %140 = sext i32 %133 to i64
  %141 = getelementptr inbounds i32, ptr %27, i64 %140
  store i32 %139, ptr %141, align 4, !tbaa !18
  %142 = load i32, ptr @pos, align 4, !tbaa !18
  %143 = add nsw i32 %142, -1
  %144 = load i32, ptr @buf, align 8, !tbaa !23
  %145 = add nsw i32 %144, -1
  %146 = and i32 %145, %143
  %147 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %148 = sext i32 %146 to i64
  %149 = getelementptr inbounds i8, ptr %147, i64 %148
  %150 = load i8, ptr %149, align 1, !tbaa !27
  %151 = zext i8 %150 to i32
  %152 = add nsw i32 %142, -5
  %153 = and i32 %145, %152
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i8, ptr %147, i64 %154
  %156 = load i8, ptr %155, align 1, !tbaa !27
  %157 = zext i8 %156 to i32
  %158 = shl nuw nsw i32 %157, 8
  %159 = or i32 %158, %151
  %160 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %161 = add nsw i32 %160, 1
  store i32 %161, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %162 = mul i32 %159, 987654323
  %163 = add i32 %162, %160
  %164 = tail call i32 @llvm.fshl.i32(i32 %163, i32 %163, i32 16)
  %165 = mul i32 %164, 123456791
  %166 = add i32 %165, %160
  %167 = sext i32 %160 to i64
  %168 = getelementptr inbounds i32, ptr %27, i64 %167
  store i32 %166, ptr %168, align 4, !tbaa !18
  %169 = load i32, ptr @pos, align 4, !tbaa !18
  %170 = add nsw i32 %169, -1
  %171 = load i32, ptr @buf, align 8, !tbaa !23
  %172 = add nsw i32 %171, -1
  %173 = and i32 %172, %170
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i8, ptr %147, i64 %174
  %176 = load i8, ptr %175, align 1, !tbaa !27
  %177 = zext i8 %176 to i32
  %178 = add nsw i32 %169, -6
  %179 = and i32 %172, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, ptr %147, i64 %180
  %182 = load i8, ptr %181, align 1, !tbaa !27
  %183 = zext i8 %182 to i32
  %184 = shl nuw nsw i32 %183, 8
  %185 = or i32 %184, %177
  %186 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %187 = add nsw i32 %186, 1
  store i32 %187, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %188 = mul i32 %185, 987654323
  %189 = add i32 %188, %186
  %190 = tail call i32 @llvm.fshl.i32(i32 %189, i32 %189, i32 16)
  %191 = mul i32 %190, 123456791
  %192 = add i32 %191, %186
  %193 = sext i32 %186 to i64
  %194 = getelementptr inbounds i32, ptr %27, i64 %193
  store i32 %192, ptr %194, align 4, !tbaa !18
  %195 = load i32, ptr @pos, align 4, !tbaa !18
  %196 = add nsw i32 %195, -3
  %197 = load i32, ptr @buf, align 8, !tbaa !23
  %198 = add nsw i32 %197, -1
  %199 = and i32 %198, %196
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, ptr %147, i64 %200
  %202 = load i8, ptr %201, align 1, !tbaa !27
  %203 = zext i8 %202 to i32
  %204 = add nsw i32 %195, -6
  %205 = and i32 %198, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds i8, ptr %147, i64 %206
  %208 = load i8, ptr %207, align 1, !tbaa !27
  %209 = zext i8 %208 to i32
  %210 = shl nuw nsw i32 %209, 8
  %211 = or i32 %210, %203
  %212 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %213 = add nsw i32 %212, 1
  store i32 %213, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %214 = mul i32 %211, 987654323
  %215 = add i32 %214, %212
  %216 = tail call i32 @llvm.fshl.i32(i32 %215, i32 %215, i32 16)
  %217 = mul i32 %216, 123456791
  %218 = add i32 %217, %212
  %219 = sext i32 %212 to i64
  %220 = getelementptr inbounds i32, ptr %27, i64 %219
  store i32 %218, ptr %220, align 4, !tbaa !18
  %221 = load i32, ptr @pos, align 4, !tbaa !18
  %222 = add nsw i32 %221, -4
  %223 = load i32, ptr @buf, align 8, !tbaa !23
  %224 = add nsw i32 %223, -1
  %225 = and i32 %224, %222
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds i8, ptr %147, i64 %226
  %228 = load i8, ptr %227, align 1, !tbaa !27
  %229 = zext i8 %228 to i32
  %230 = add nsw i32 %221, -8
  %231 = and i32 %224, %230
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds i8, ptr %147, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !27
  %235 = zext i8 %234 to i32
  %236 = shl nuw nsw i32 %235, 8
  %237 = or i32 %236, %229
  %238 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %239 = add nsw i32 %238, 1
  store i32 %239, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %240 = mul i32 %237, 987654323
  %241 = add i32 %240, %238
  %242 = tail call i32 @llvm.fshl.i32(i32 %241, i32 %241, i32 16)
  %243 = mul i32 %242, 123456791
  %244 = add i32 %243, %238
  %245 = sext i32 %238 to i64
  %246 = getelementptr inbounds i32, ptr %27, i64 %245
  store i32 %244, ptr %246, align 4, !tbaa !18
  br label %253

247:                                              ; preds = %253
  %248 = load i32, ptr @c4, align 4, !tbaa !18
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %344, label %333

251:                                              ; preds = %9
  %252 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ11sparseModelR5MixeriiE2cm) #33
  resume { ptr, i32 } %252

253:                                              ; preds = %253, %17
  %254 = phi i32 [ -1, %17 ], [ %331, %253 ]
  %255 = phi i32 [ 1, %17 ], [ %256, %253 ]
  %256 = add nuw nsw i32 %255, 1
  %257 = load i32, ptr @pos, align 4, !tbaa !18
  %258 = sub nsw i32 %257, %256
  %259 = load i32, ptr @buf, align 8, !tbaa !23
  %260 = add nsw i32 %259, -1
  %261 = and i32 %260, %258
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds i8, ptr %147, i64 %262
  %264 = load i8, ptr %263, align 1, !tbaa !27
  %265 = zext i8 %264 to i32
  %266 = shl nuw nsw i32 %265, 8
  %267 = add nsw i32 %254, -2
  %268 = add i32 %267, %257
  %269 = and i32 %260, %268
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i8, ptr %147, i64 %270
  %272 = load i8, ptr %271, align 1, !tbaa !27
  %273 = zext i8 %272 to i32
  %274 = or i32 %266, %273
  %275 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %276 = add nsw i32 %275, 1
  store i32 %276, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %277 = mul i32 %274, 987654323
  %278 = add i32 %277, %275
  %279 = tail call i32 @llvm.fshl.i32(i32 %278, i32 %278, i32 16)
  %280 = mul i32 %279, 123456791
  %281 = add i32 %280, %275
  %282 = sext i32 %275 to i64
  %283 = getelementptr inbounds i32, ptr %27, i64 %282
  store i32 %281, ptr %283, align 4, !tbaa !18
  %284 = load i32, ptr @pos, align 4, !tbaa !18
  %285 = sub nsw i32 %284, %256
  %286 = load i32, ptr @buf, align 8, !tbaa !23
  %287 = add nsw i32 %286, -1
  %288 = and i32 %287, %285
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i8, ptr %147, i64 %289
  %291 = load i8, ptr %290, align 1, !tbaa !27
  %292 = zext i8 %291 to i32
  %293 = shl nuw nsw i32 %292, 8
  %294 = add nsw i32 %254, -3
  %295 = add i32 %294, %284
  %296 = and i32 %287, %295
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds i8, ptr %147, i64 %297
  %299 = load i8, ptr %298, align 1, !tbaa !27
  %300 = zext i8 %299 to i32
  %301 = or i32 %293, %300
  %302 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %303 = add nsw i32 %302, 1
  store i32 %303, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %304 = mul i32 %301, 987654323
  %305 = add i32 %304, %302
  %306 = tail call i32 @llvm.fshl.i32(i32 %305, i32 %305, i32 16)
  %307 = mul i32 %306, 123456791
  %308 = add i32 %307, %302
  %309 = sext i32 %302 to i64
  %310 = getelementptr inbounds i32, ptr %27, i64 %309
  store i32 %308, ptr %310, align 4, !tbaa !18
  %311 = load i32, ptr @pos, align 4, !tbaa !18
  %312 = sub nsw i32 %311, %255
  %313 = load i32, ptr @buf, align 8, !tbaa !23
  %314 = add nsw i32 %313, -1
  %315 = and i32 %314, %312
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds i8, ptr %147, i64 %316
  %318 = load i8, ptr %317, align 1, !tbaa !27
  %319 = zext i8 %318 to i32
  %320 = shl nuw nsw i32 %319, 8
  %321 = or i32 %320, %1
  %322 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %323 = add nsw i32 %322, 1
  store i32 %323, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %324 = mul i32 %321, 987654323
  %325 = add i32 %324, %322
  %326 = tail call i32 @llvm.fshl.i32(i32 %325, i32 %325, i32 16)
  %327 = mul i32 %326, 123456791
  %328 = add i32 %327, %322
  %329 = sext i32 %322 to i64
  %330 = getelementptr inbounds i32, ptr %27, i64 %329
  store i32 %328, ptr %330, align 4, !tbaa !18
  %331 = xor i32 %255, -1
  %332 = icmp eq i32 %256, 8
  br i1 %332, label %247, label %253, !llvm.loop !108

333:                                              ; preds = %247
  %334 = and i32 %248, 255
  %335 = tail call i32 @isalpha(i32 noundef %334) #38
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %344

337:                                              ; preds = %333
  %338 = tail call i32 @ispunct(i32 noundef %334) #38
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %344

340:                                              ; preds = %337
  %341 = tail call i32 @isspace(i32 noundef %334) #38
  %342 = icmp eq i32 %341, 0
  %343 = select i1 %342, i32 4, i32 3
  br label %344

344:                                              ; preds = %340, %337, %333, %247
  %345 = phi i32 [ 0, %247 ], [ 1, %333 ], [ 2, %337 ], [ %343, %340 ]
  %346 = load i32, ptr @_ZZ11sparseModelR5MixeriiE4mask, align 4, !tbaa !18
  %347 = shl i32 %346, 3
  %348 = or i32 %347, %345
  store i32 %348, ptr @_ZZ11sparseModelR5MixeriiE4mask, align 4, !tbaa !18
  %349 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %350 = add nsw i32 %349, 1
  store i32 %350, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %351 = mul i32 %348, 987654323
  %352 = add i32 %351, %349
  %353 = tail call i32 @llvm.fshl.i32(i32 %352, i32 %352, i32 16)
  %354 = mul i32 %353, 123456791
  %355 = add i32 %354, %349
  %356 = sext i32 %349 to i64
  %357 = getelementptr inbounds i32, ptr %27, i64 %356
  store i32 %355, ptr %357, align 4, !tbaa !18
  %358 = shl i32 %348, 8
  %359 = load i32, ptr @pos, align 4, !tbaa !18
  %360 = add nsw i32 %359, -1
  %361 = load i32, ptr @buf, align 8, !tbaa !23
  %362 = add nsw i32 %361, -1
  %363 = and i32 %362, %360
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds i8, ptr %147, i64 %364
  %366 = load i8, ptr %365, align 1, !tbaa !27
  %367 = zext i8 %366 to i32
  %368 = or i32 %358, %367
  %369 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %370 = add nsw i32 %369, 1
  store i32 %370, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %371 = mul i32 %368, 987654323
  %372 = add i32 %371, %369
  %373 = tail call i32 @llvm.fshl.i32(i32 %372, i32 %372, i32 16)
  %374 = mul i32 %373, 123456791
  %375 = add i32 %374, %369
  %376 = sext i32 %369 to i64
  %377 = getelementptr inbounds i32, ptr %27, i64 %376
  store i32 %375, ptr %377, align 4, !tbaa !18
  %378 = shl i32 %348, 17
  %379 = load i32, ptr @pos, align 4, !tbaa !18
  %380 = add nsw i32 %379, -2
  %381 = load i32, ptr @buf, align 8, !tbaa !23
  %382 = add nsw i32 %381, -1
  %383 = and i32 %382, %380
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds i8, ptr %147, i64 %384
  %386 = load i8, ptr %385, align 1, !tbaa !27
  %387 = zext i8 %386 to i32
  %388 = shl nuw nsw i32 %387, 8
  %389 = or i32 %388, %378
  %390 = add nsw i32 %379, -3
  %391 = and i32 %382, %390
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds i8, ptr %147, i64 %392
  %394 = load i8, ptr %393, align 1, !tbaa !27
  %395 = zext i8 %394 to i32
  %396 = or i32 %389, %395
  %397 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %398 = add nsw i32 %397, 1
  store i32 %398, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %399 = mul i32 %396, 987654323
  %400 = add i32 %399, %397
  %401 = tail call i32 @llvm.fshl.i32(i32 %400, i32 %400, i32 16)
  %402 = mul i32 %401, 123456791
  %403 = add i32 %402, %397
  %404 = sext i32 %397 to i64
  %405 = getelementptr inbounds i32, ptr %27, i64 %404
  store i32 %403, ptr %405, align 4, !tbaa !18
  %406 = and i32 %348, 511
  %407 = load i32, ptr @c4, align 4, !tbaa !18
  %408 = shl i32 %407, 9
  %409 = and i32 %408, -505290752
  %410 = or i32 %409, %406
  %411 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %412 = add nsw i32 %411, 1
  store i32 %412, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !85
  %413 = mul i32 %410, 987654323
  %414 = add i32 %413, %411
  %415 = tail call i32 @llvm.fshl.i32(i32 %414, i32 %414, i32 16)
  %416 = mul i32 %415, 123456791
  %417 = add i32 %416, %411
  %418 = sext i32 %411 to i64
  %419 = getelementptr inbounds i32, ptr %27, i64 %418
  store i32 %417, ptr %419, align 4, !tbaa !18
  br label %420

420:                                              ; preds = %344, %14
  %421 = tail call noundef i32 @_ZN10ContextMap3mixER5Mixer(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11sparseModelR5MixeriiE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0) #32
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(read)
declare i32 @isalpha(i32 noundef) local_unnamed_addr #15

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(read)
declare i32 @ispunct(i32 noundef) local_unnamed_addr #15

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(read)
declare i32 @isspace(i32 noundef) local_unnamed_addr #15

; Function Attrs: mustprogress optsize uwtable
define internal void @_Z13distanceModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) %0) #7 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ13distanceModelR5MixerE2cr acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !100

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13distanceModelR5MixerE2cr) #33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !18
  %9 = shl i32 65536, %8
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13distanceModelR5MixerE2cr, i32 noundef %9, i32 noundef 3) #32
          to label %10 unwind label %22

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ13distanceModelR5MixerE2cr, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13distanceModelR5MixerE2cr) #33
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load i32, ptr @bpos, align 4, !tbaa !18
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %75

15:                                               ; preds = %12
  %16 = load i32, ptr @c4, align 4, !tbaa !18
  %17 = trunc i32 %16 to i8
  switch i8 %17, label %18 [
    i8 0, label %20
    i8 32, label %24
    i8 -1, label %26
    i8 13, label %26
    i8 10, label %26
  ]

18:                                               ; preds = %15
  %19 = load i32, ptr @pos, align 4, !tbaa !18
  br label %28

20:                                               ; preds = %15
  %21 = load i32, ptr @pos, align 4, !tbaa !18
  store i32 %21, ptr @_ZZ13distanceModelR5MixerE5pos00, align 4, !tbaa !18
  br label %28

22:                                               ; preds = %7
  %23 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ13distanceModelR5MixerE2cr) #33
  resume { ptr, i32 } %23

24:                                               ; preds = %15
  %25 = load i32, ptr @pos, align 4, !tbaa !18
  store i32 %25, ptr @_ZZ13distanceModelR5MixerE5pos20, align 4, !tbaa !18
  br label %28

26:                                               ; preds = %15, %15, %15
  %27 = load i32, ptr @pos, align 4, !tbaa !18
  store i32 %27, ptr @_ZZ13distanceModelR5MixerE5posnl, align 4, !tbaa !18
  br label %28

28:                                               ; preds = %26, %24, %20, %18
  %29 = phi i32 [ %19, %18 ], [ %25, %24 ], [ %21, %20 ], [ %27, %26 ]
  %30 = load i32, ptr @_ZZ13distanceModelR5MixerE5pos00, align 4, !tbaa !18
  %31 = sub nsw i32 %29, %30
  %32 = tail call i32 @llvm.smin.i32(i32 %31, i32 255)
  %33 = shl i32 %16, 8
  %34 = and i32 %33, 65280
  %35 = or i32 %32, %34
  %36 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !85
  %37 = add nsw i32 %36, 1
  store i32 %37, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !85
  %38 = mul i32 %35, 987654323
  %39 = add i32 %38, %36
  %40 = tail call i32 @llvm.fshl.i32(i32 %39, i32 %39, i32 16)
  %41 = mul i32 %40, 123456791
  %42 = add i32 %41, %36
  %43 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 5, i32 3), align 8, !tbaa !15
  %44 = sext i32 %36 to i64
  %45 = getelementptr inbounds i32, ptr %43, i64 %44
  store i32 %42, ptr %45, align 4, !tbaa !18
  %46 = load i32, ptr @pos, align 4, !tbaa !18
  %47 = load i32, ptr @_ZZ13distanceModelR5MixerE5pos20, align 4, !tbaa !18
  %48 = sub nsw i32 %46, %47
  %49 = tail call i32 @llvm.smin.i32(i32 %48, i32 255)
  %50 = or i32 %49, %34
  %51 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !85
  %52 = add nsw i32 %51, 1
  store i32 %52, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !85
  %53 = mul i32 %50, 987654323
  %54 = add i32 %53, %51
  %55 = tail call i32 @llvm.fshl.i32(i32 %54, i32 %54, i32 16)
  %56 = mul i32 %55, 123456791
  %57 = add i32 %56, %51
  %58 = sext i32 %51 to i64
  %59 = getelementptr inbounds i32, ptr %43, i64 %58
  store i32 %57, ptr %59, align 4, !tbaa !18
  %60 = load i32, ptr @pos, align 4, !tbaa !18
  %61 = load i32, ptr @_ZZ13distanceModelR5MixerE5posnl, align 4, !tbaa !18
  %62 = sub nsw i32 %60, %61
  %63 = tail call i32 @llvm.smin.i32(i32 %62, i32 255)
  %64 = add nuw nsw i32 %34, 234567
  %65 = or i32 %63, %64
  %66 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !85
  %67 = add nsw i32 %66, 1
  store i32 %67, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !85
  %68 = mul i32 %65, 987654323
  %69 = add i32 %68, %66
  %70 = tail call i32 @llvm.fshl.i32(i32 %69, i32 %69, i32 16)
  %71 = mul i32 %70, 123456791
  %72 = add i32 %71, %66
  %73 = sext i32 %66 to i64
  %74 = getelementptr inbounds i32, ptr %43, i64 %73
  store i32 %72, ptr %74, align 4, !tbaa !18
  br label %75

75:                                               ; preds = %28, %12
  %76 = tail call noundef i32 @_ZN10ContextMap3mixER5Mixer(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13distanceModelR5MixerE2cr, ptr noundef nonnull align 8 dereferenceable(136) %0) #32
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_Z8bmpModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) %0) #7 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm1 acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !100

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm1) #33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm1, i32 noundef 131072) #32
          to label %8 unwind label %236

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm1, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm1) #33
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm2 acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19, !prof !100

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm2) #33
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm2, i32 noundef 131072) #32
          to label %17 unwind label %238

17:                                               ; preds = %16
  %18 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm2, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm2) #33
  br label %19

19:                                               ; preds = %17, %13, %10
  %20 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm3 acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28, !prof !100

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm3) #33
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm3, i32 noundef 131072) #32
          to label %26 unwind label %240

26:                                               ; preds = %25
  %27 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm3, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm3) #33
  br label %28

28:                                               ; preds = %26, %22, %19
  %29 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm4 acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %37, !prof !100

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm4) #33
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm4, i32 noundef 131072) #32
          to label %35 unwind label %242

35:                                               ; preds = %34
  %36 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm4, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm4) #33
  br label %37

37:                                               ; preds = %35, %31, %28
  %38 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm5 acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %46, !prof !100

40:                                               ; preds = %37
  %41 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm5) #33
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm5, i32 noundef 131072) #32
          to label %44 unwind label %244

44:                                               ; preds = %43
  %45 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm5, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm5) #33
  br label %46

46:                                               ; preds = %44, %40, %37
  %47 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm6 acquire, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %55, !prof !100

49:                                               ; preds = %46
  %50 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm6) #33
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm6, i32 noundef 131072) #32
          to label %53 unwind label %246

53:                                               ; preds = %52
  %54 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm6, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm6) #33
  br label %55

55:                                               ; preds = %53, %49, %46
  %56 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm7 acquire, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %64, !prof !100

58:                                               ; preds = %55
  %59 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm7) #33
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm7, i32 noundef 131072) #32
          to label %62 unwind label %248

62:                                               ; preds = %61
  %63 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm7, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm7) #33
  br label %64

64:                                               ; preds = %62, %58, %55
  %65 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm8 acquire, align 8
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %73, !prof !100

67:                                               ; preds = %64
  %68 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm8) #33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm8, i32 noundef 131072) #32
          to label %71 unwind label %250

71:                                               ; preds = %70
  %72 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm8, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm8) #33
  br label %73

73:                                               ; preds = %71, %67, %64
  %74 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm9 acquire, align 8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %82, !prof !100

76:                                               ; preds = %73
  %77 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm9) #33
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm9, i32 noundef 262144) #32
          to label %80 unwind label %252

80:                                               ; preds = %79
  %81 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm9, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm9) #33
  br label %82

82:                                               ; preds = %80, %76, %73
  %83 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE5scm10 acquire, align 8
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %91, !prof !100

85:                                               ; preds = %82
  %86 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE5scm10) #33
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE5scm10, i32 noundef 131072) #32
          to label %89 unwind label %254

89:                                               ; preds = %88
  %90 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE5scm10, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE5scm10) #33
  br label %91

91:                                               ; preds = %89, %85, %82
  %92 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE2cm acquire, align 8
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %102, !prof !100

94:                                               ; preds = %91
  %95 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE2cm) #33
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %102, label %97

97:                                               ; preds = %94
  %98 = load i32, ptr @level, align 4, !tbaa !18
  %99 = shl i32 262144, %98
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8bmpModelR5MixerE2cm, i32 noundef %99, i32 noundef 13) #32
          to label %100 unwind label %256

100:                                              ; preds = %97
  %101 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE2cm, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE2cm) #33
  br label %102

102:                                              ; preds = %100, %94, %91
  %103 = load i32, ptr @bpos, align 4, !tbaa !18
  %104 = icmp eq i32 %103, 0
  %105 = load i32, ptr @pos, align 4, !tbaa !18
  br i1 %104, label %106, label %448

106:                                              ; preds = %102
  %107 = add nsw i32 %105, -54
  %108 = load i32, ptr @buf, align 8, !tbaa !23
  %109 = add nsw i32 %108, -1
  %110 = and i32 %109, %107
  %111 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %112 = sext i32 %110 to i64
  %113 = getelementptr inbounds i8, ptr %111, i64 %112
  %114 = load i8, ptr %113, align 1, !tbaa !27
  %115 = icmp eq i8 %114, 66
  br i1 %115, label %116, label %258

116:                                              ; preds = %106
  %117 = add nsw i32 %105, -53
  %118 = and i32 %109, %117
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8, ptr %111, i64 %119
  %121 = load i8, ptr %120, align 1, !tbaa !27
  %122 = icmp eq i8 %121, 77
  br i1 %122, label %123, label %258

123:                                              ; preds = %116
  %124 = add i32 %105, -44
  %125 = and i32 %109, %124
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, ptr %111, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !27
  %129 = zext i8 %128 to i32
  %130 = add i32 %105, -43
  %131 = and i32 %109, %130
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, ptr %111, i64 %132
  %134 = load i8, ptr %133, align 1, !tbaa !27
  %135 = zext i8 %134 to i32
  %136 = shl nuw nsw i32 %135, 8
  %137 = or i32 %136, %129
  %138 = add i32 %105, -42
  %139 = and i32 %109, %138
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, ptr %111, i64 %140
  %142 = load i8, ptr %141, align 1, !tbaa !27
  %143 = zext i8 %142 to i32
  %144 = shl nuw nsw i32 %143, 16
  %145 = or i32 %137, %144
  %146 = add i32 %105, -41
  %147 = and i32 %109, %146
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, ptr %111, i64 %148
  %150 = load i8, ptr %149, align 1, !tbaa !27
  %151 = zext i8 %150 to i32
  %152 = shl nuw nsw i32 %151, 24
  %153 = or i32 %145, %152
  %154 = icmp eq i32 %153, 54
  br i1 %154, label %155, label %258

155:                                              ; preds = %123
  %156 = add i32 %105, -40
  %157 = and i32 %109, %156
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i8, ptr %111, i64 %158
  %160 = load i8, ptr %159, align 1, !tbaa !27
  %161 = zext i8 %160 to i32
  %162 = add i32 %105, -39
  %163 = and i32 %109, %162
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i8, ptr %111, i64 %164
  %166 = load i8, ptr %165, align 1, !tbaa !27
  %167 = zext i8 %166 to i32
  %168 = shl nuw nsw i32 %167, 8
  %169 = or i32 %168, %161
  %170 = add i32 %105, -38
  %171 = and i32 %109, %170
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i8, ptr %111, i64 %172
  %174 = load i8, ptr %173, align 1, !tbaa !27
  %175 = zext i8 %174 to i32
  %176 = shl nuw nsw i32 %175, 16
  %177 = or i32 %169, %176
  %178 = add i32 %105, -37
  %179 = and i32 %109, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, ptr %111, i64 %180
  %182 = load i8, ptr %181, align 1, !tbaa !27
  %183 = zext i8 %182 to i32
  %184 = shl nuw nsw i32 %183, 24
  %185 = or i32 %177, %184
  %186 = icmp eq i32 %185, 40
  br i1 %186, label %187, label %258

187:                                              ; preds = %155
  %188 = add i32 %105, -24
  %189 = and i32 %109, %188
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i8, ptr %111, i64 %190
  %192 = load i8, ptr %191, align 1, !tbaa !27
  %193 = zext i8 %192 to i32
  %194 = add i32 %105, -23
  %195 = and i32 %109, %194
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds i8, ptr %111, i64 %196
  %198 = load i8, ptr %197, align 1, !tbaa !27
  %199 = zext i8 %198 to i32
  %200 = shl nuw nsw i32 %199, 8
  %201 = or i32 %200, %193
  %202 = add i32 %105, -22
  %203 = and i32 %109, %202
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i8, ptr %111, i64 %204
  %206 = load i8, ptr %205, align 1, !tbaa !27
  %207 = zext i8 %206 to i32
  %208 = shl nuw nsw i32 %207, 16
  %209 = or i32 %201, %208
  %210 = add i32 %105, -21
  %211 = and i32 %109, %210
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds i8, ptr %111, i64 %212
  %214 = load i8, ptr %213, align 1, !tbaa !27
  %215 = zext i8 %214 to i32
  %216 = shl nuw nsw i32 %215, 24
  %217 = or i32 %209, %216
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %258

219:                                              ; preds = %187
  %220 = tail call noundef i32 @_Z2i4i(i32 noundef 36) #32
  %221 = add i32 %220, 3
  %222 = and i32 %221, -4
  %223 = mul i32 %222, 3
  store i32 %223, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !18
  %224 = tail call noundef i32 @_Z2i4i(i32 noundef 32) #32
  %225 = load i32, ptr @pos, align 4, !tbaa !18
  store i32 %225, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !18
  %226 = load i32, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !18
  %227 = icmp slt i32 %226, 196608
  %228 = icmp slt i32 %224, 65536
  %229 = and i1 %228, %227
  br i1 %229, label %230, label %258

230:                                              ; preds = %219
  %231 = mul nsw i32 %226, %224
  %232 = add nsw i32 %231, %225
  store i32 %232, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !18
  %233 = sdiv i32 %226, 3
  %234 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str, i32 noundef %233, i32 noundef %224) #32
  %235 = load i32, ptr @pos, align 4, !tbaa !18
  br label %258

236:                                              ; preds = %7
  %237 = landingpad { ptr, i32 }
          cleanup
  br label %1159

238:                                              ; preds = %16
  %239 = landingpad { ptr, i32 }
          cleanup
  br label %1159

240:                                              ; preds = %25
  %241 = landingpad { ptr, i32 }
          cleanup
  br label %1159

242:                                              ; preds = %34
  %243 = landingpad { ptr, i32 }
          cleanup
  br label %1159

244:                                              ; preds = %43
  %245 = landingpad { ptr, i32 }
          cleanup
  br label %1159

246:                                              ; preds = %52
  %247 = landingpad { ptr, i32 }
          cleanup
  br label %1159

248:                                              ; preds = %61
  %249 = landingpad { ptr, i32 }
          cleanup
  br label %1159

250:                                              ; preds = %70
  %251 = landingpad { ptr, i32 }
          cleanup
  br label %1159

252:                                              ; preds = %79
  %253 = landingpad { ptr, i32 }
          cleanup
  br label %1159

254:                                              ; preds = %88
  %255 = landingpad { ptr, i32 }
          cleanup
  br label %1159

256:                                              ; preds = %97
  %257 = landingpad { ptr, i32 }
          cleanup
  br label %1159

258:                                              ; preds = %230, %219, %187, %155, %123, %116, %106
  %259 = phi i32 [ %235, %230 ], [ %105, %187 ], [ %105, %155 ], [ %105, %123 ], [ %105, %116 ], [ %105, %106 ], [ %225, %219 ]
  %260 = load i32, ptr @bpos, align 4, !tbaa !18
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %448

262:                                              ; preds = %258
  %263 = load i32, ptr @c4, align 4
  %264 = icmp eq i32 %263, 1229531648
  br i1 %264, label %267, label %265

265:                                              ; preds = %262
  %266 = load i32, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !18
  br label %268

267:                                              ; preds = %262
  store i32 %259, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !18
  br label %268

268:                                              ; preds = %267, %265
  %269 = phi i32 [ %266, %265 ], [ %259, %267 ]
  %270 = sub i32 %259, %269
  %271 = icmp eq i32 %270, 4
  %272 = icmp ne i32 %263, 134217728
  %273 = and i1 %272, %271
  br i1 %273, label %274, label %275

274:                                              ; preds = %268
  store i32 0, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !18
  br label %448

275:                                              ; preds = %268
  %276 = icmp ne i32 %269, 0
  %277 = icmp eq i32 %270, 200
  %278 = and i1 %276, %277
  br i1 %278, label %279, label %448

279:                                              ; preds = %275
  %280 = add i32 %259, -196
  %281 = load i32, ptr @buf, align 8, !tbaa !23
  %282 = add nsw i32 %281, -1
  %283 = and i32 %282, %280
  %284 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %285 = sext i32 %283 to i64
  %286 = getelementptr inbounds i8, ptr %284, i64 %285
  %287 = load i8, ptr %286, align 1, !tbaa !27
  %288 = add i32 %259, -195
  %289 = and i32 %282, %288
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i8, ptr %284, i64 %290
  %292 = load i8, ptr %291, align 1, !tbaa !27
  store i32 0, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !18
  %293 = add i32 %269, 6
  %294 = add nsw i32 %259, -12
  %295 = icmp slt i32 %293, %294
  br i1 %295, label %296, label %438

296:                                              ; preds = %279
  %297 = zext i8 %292 to i32
  %298 = shl nuw nsw i32 %297, 8
  %299 = zext i8 %287 to i32
  %300 = or i32 %298, %299
  br label %301

301:                                              ; preds = %419, %296
  %302 = phi i32 [ %300, %296 ], [ %308, %419 ]
  %303 = phi i32 [ 0, %296 ], [ %423, %419 ]
  %304 = phi i32 [ 0, %296 ], [ %422, %419 ]
  %305 = phi i32 [ 0, %296 ], [ %421, %419 ]
  %306 = phi i32 [ 0, %296 ], [ %420, %419 ]
  %307 = phi i32 [ %293, %296 ], [ %424, %419 ]
  %308 = add nsw i32 %302, -1
  %309 = icmp sgt i32 %302, 1
  br i1 %309, label %318, label %310

310:                                              ; preds = %419, %301
  %311 = phi i32 [ %306, %301 ], [ %420, %419 ]
  %312 = phi i32 [ %305, %301 ], [ %421, %419 ]
  %313 = phi i32 [ %304, %301 ], [ %422, %419 ]
  %314 = phi i32 [ %303, %301 ], [ %423, %419 ]
  %315 = icmp sgt i32 %312, 0
  %316 = icmp sgt i32 %311, 0
  %317 = select i1 %315, i1 %316, i1 false
  br i1 %317, label %426, label %438

318:                                              ; preds = %301
  %319 = add i32 %307, 2
  %320 = and i32 %319, %282
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds i8, ptr %284, i64 %321
  %323 = load i8, ptr %322, align 1, !tbaa !27
  %324 = zext i8 %323 to i32
  %325 = add i32 %307, 3
  %326 = and i32 %325, %282
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds i8, ptr %284, i64 %327
  %329 = load i8, ptr %328, align 1, !tbaa !27
  %330 = zext i8 %329 to i32
  %331 = shl nuw nsw i32 %330, 8
  %332 = or i32 %331, %324
  %333 = add i32 %307, 4
  %334 = and i32 %333, %282
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds i8, ptr %284, i64 %335
  %337 = load i8, ptr %336, align 1, !tbaa !27
  %338 = zext i8 %337 to i32
  %339 = add i32 %307, 5
  %340 = and i32 %339, %282
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds i8, ptr %284, i64 %341
  %343 = load i8, ptr %342, align 1, !tbaa !27
  %344 = zext i8 %343 to i32
  %345 = shl nuw nsw i32 %344, 8
  %346 = or i32 %345, %338
  %347 = add i32 %307, 6
  %348 = and i32 %347, %282
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds i8, ptr %284, i64 %349
  %351 = load i8, ptr %350, align 1, !tbaa !27
  %352 = zext i8 %351 to i32
  %353 = shl nuw nsw i32 %352, 16
  %354 = or i32 %346, %353
  %355 = add i32 %307, 7
  %356 = and i32 %355, %282
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds i8, ptr %284, i64 %357
  %359 = load i8, ptr %358, align 1, !tbaa !27
  %360 = zext i8 %359 to i32
  %361 = shl nuw nsw i32 %360, 24
  %362 = or i32 %354, %361
  %363 = add nsw i32 %332, -3
  %364 = icmp ult i32 %363, 2
  %365 = icmp eq i32 %362, 1
  %366 = and i1 %364, %365
  br i1 %366, label %367, label %419

367:                                              ; preds = %318
  %368 = add i32 %307, 8
  %369 = add i32 %307, 9
  %370 = and i32 %369, %282
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds i8, ptr %284, i64 %371
  %373 = load i8, ptr %372, align 1, !tbaa !27
  %374 = zext i8 %373 to i32
  %375 = shl nuw nsw i32 %374, 8
  %376 = and i32 %368, %282
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds i8, ptr %284, i64 %377
  %379 = load i8, ptr %378, align 1, !tbaa !27
  %380 = zext i8 %379 to i32
  %381 = or i32 %375, %380
  %382 = add i32 %307, 10
  %383 = and i32 %382, %282
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds i8, ptr %284, i64 %384
  %386 = load i8, ptr %385, align 1, !tbaa !27
  %387 = zext i8 %386 to i32
  %388 = shl nuw nsw i32 %387, 16
  %389 = or i32 %381, %388
  %390 = add i32 %307, 11
  %391 = and i32 %390, %282
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds i8, ptr %284, i64 %392
  %394 = load i8, ptr %393, align 1, !tbaa !27
  %395 = zext i8 %394 to i32
  %396 = shl nuw nsw i32 %395, 24
  %397 = or i32 %389, %396
  %398 = add nsw i32 %307, 1
  %399 = and i32 %398, %282
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds i8, ptr %284, i64 %400
  %402 = load i8, ptr %401, align 1, !tbaa !27
  %403 = zext i8 %402 to i32
  %404 = shl nuw nsw i32 %403, 8
  %405 = and i32 %307, %282
  %406 = sext i32 %405 to i64
  %407 = getelementptr inbounds i8, ptr %284, i64 %406
  %408 = load i8, ptr %407, align 1, !tbaa !27
  %409 = zext i8 %408 to i32
  %410 = or i32 %404, %409
  %411 = icmp eq i32 %410, 256
  %412 = select i1 %411, i32 %397, i32 %305
  %413 = icmp eq i32 %410, 257
  %414 = select i1 %413, i32 %397, i32 %306
  %415 = icmp eq i32 %410, 259
  %416 = select i1 %415, i32 %397, i32 %304
  %417 = icmp eq i32 %410, 277
  %418 = select i1 %417, i32 %397, i32 %303
  br label %419

419:                                              ; preds = %367, %318
  %420 = phi i32 [ %306, %318 ], [ %414, %367 ]
  %421 = phi i32 [ %305, %318 ], [ %412, %367 ]
  %422 = phi i32 [ %304, %318 ], [ %416, %367 ]
  %423 = phi i32 [ %303, %318 ], [ %418, %367 ]
  %424 = add nsw i32 %307, 12
  %425 = icmp slt i32 %424, %294
  br i1 %425, label %301, label %310, !llvm.loop !109

426:                                              ; preds = %310
  %427 = mul nsw i32 %312, %311
  %428 = icmp sgt i32 %427, 50
  %429 = icmp eq i32 %313, 1
  %430 = select i1 %428, i1 %429, i1 false
  %431 = and i32 %314, -3
  %432 = icmp eq i32 %431, 1
  %433 = select i1 %430, i1 %432, i1 false
  br i1 %433, label %434, label %438

434:                                              ; preds = %426
  %435 = mul nsw i32 %314, %427
  %436 = add i32 %435, %269
  store i32 %436, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !18
  %437 = mul nsw i32 %314, %312
  store i32 %437, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !18
  br label %438

438:                                              ; preds = %434, %426, %310, %279
  %439 = phi i32 [ %314, %434 ], [ %314, %426 ], [ %314, %310 ], [ 0, %279 ]
  %440 = phi i32 [ %312, %434 ], [ %312, %426 ], [ %312, %310 ], [ 0, %279 ]
  %441 = phi i32 [ %311, %434 ], [ %311, %426 ], [ %311, %310 ], [ 0, %279 ]
  %442 = load i32, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !18
  %443 = icmp sgt i32 %442, %259
  br i1 %443, label %444, label %447

444:                                              ; preds = %438
  %445 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5, i32 noundef %440, i32 noundef %441, i32 noundef %439) #32
  %446 = load i32, ptr @pos, align 4, !tbaa !18
  br label %448

447:                                              ; preds = %438
  store i32 0, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !18
  store i32 0, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !18
  br label %448

448:                                              ; preds = %447, %444, %275, %274, %258, %102
  %449 = phi i32 [ %105, %102 ], [ %259, %274 ], [ %446, %444 ], [ %259, %447 ], [ %259, %275 ], [ %259, %258 ]
  %450 = load i32, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !18
  %451 = icmp sgt i32 %449, %450
  br i1 %451, label %452, label %453

452:                                              ; preds = %448
  store i32 0, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !18
  br label %1157

453:                                              ; preds = %448
  %454 = load i32, ptr @bpos, align 4, !tbaa !18
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %456, label %1154

456:                                              ; preds = %453
  %457 = srem i32 %449, 3
  %458 = add nsw i32 %449, -3
  %459 = load i32, ptr @buf, align 8, !tbaa !23
  %460 = add nsw i32 %459, -1
  %461 = and i32 %460, %458
  %462 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %463 = sext i32 %461 to i64
  %464 = getelementptr inbounds i8, ptr %462, i64 %463
  %465 = load i8, ptr %464, align 1, !tbaa !27
  %466 = zext i8 %465 to i32
  %467 = load i32, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !18
  %468 = add nsw i32 %467, -3
  %469 = sub nsw i32 %449, %468
  %470 = and i32 %469, %460
  %471 = sext i32 %470 to i64
  %472 = getelementptr inbounds i8, ptr %462, i64 %471
  %473 = load i8, ptr %472, align 1, !tbaa !27
  %474 = zext i8 %473 to i32
  %475 = add nuw nsw i32 %474, %466
  %476 = sub nsw i32 %449, %467
  %477 = and i32 %476, %460
  %478 = sext i32 %477 to i64
  %479 = getelementptr inbounds i8, ptr %462, i64 %478
  %480 = load i8, ptr %479, align 1, !tbaa !27
  %481 = zext i8 %480 to i32
  %482 = add nuw nsw i32 %475, %481
  %483 = add nsw i32 %467, 3
  %484 = sub nsw i32 %449, %483
  %485 = and i32 %484, %460
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds i8, ptr %462, i64 %486
  %488 = load i8, ptr %487, align 1, !tbaa !27
  %489 = zext i8 %488 to i32
  %490 = add nuw nsw i32 %482, %489
  %491 = mul nuw nsw i32 %466, %466
  %492 = mul nuw nsw i32 %474, %474
  %493 = add nuw nsw i32 %492, %491
  %494 = mul nuw nsw i32 %481, %481
  %495 = add nuw nsw i32 %493, %494
  %496 = mul nuw nsw i32 %489, %489
  %497 = add nuw nsw i32 %495, %496
  %498 = mul nuw nsw i32 %490, %490
  %499 = lshr i32 %498, 2
  %500 = sub nsw i32 %497, %499
  %501 = lshr i32 %500, 2
  %502 = lshr i32 %490, 2
  %503 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %504 = and i32 %501, 65535
  %505 = zext i32 %504 to i64
  %506 = getelementptr inbounds i8, ptr %503, i64 %505
  %507 = load i8, ptr %506, align 1, !tbaa !27
  %508 = zext i8 %507 to i32
  %509 = mul i32 %466, 30005491
  %510 = mul nsw i32 %457, 50004239
  %511 = add nsw i32 %510, 19995673
  %512 = add i32 %511, %509
  %513 = lshr i32 %512, 9
  %514 = lshr i32 %466, 3
  %515 = lshr i32 %457, 4
  %516 = xor i32 %514, %513
  %517 = xor i32 %516, %515
  %518 = xor i32 %517, %512
  %519 = xor i32 %518, 67108864
  %520 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %521 = add nsw i32 %520, 1
  store i32 %521, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %522 = mul i32 %519, 987654323
  %523 = add i32 %522, %520
  %524 = tail call i32 @llvm.fshl.i32(i32 %523, i32 %523, i32 16)
  %525 = mul i32 %524, 123456791
  %526 = add i32 %525, %520
  %527 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !15
  %528 = sext i32 %520 to i64
  %529 = getelementptr inbounds i32, ptr %527, i64 %528
  store i32 %526, ptr %529, align 4, !tbaa !18
  %530 = load i32, ptr @pos, align 4, !tbaa !18
  %531 = add nsw i32 %530, -3
  %532 = load i32, ptr @buf, align 8, !tbaa !23
  %533 = add nsw i32 %532, -1
  %534 = and i32 %533, %531
  %535 = sext i32 %534 to i64
  %536 = getelementptr inbounds i8, ptr %462, i64 %535
  %537 = load i8, ptr %536, align 1, !tbaa !27
  %538 = zext i8 %537 to i32
  %539 = add nsw i32 %530, -1
  %540 = and i32 %533, %539
  %541 = sext i32 %540 to i64
  %542 = getelementptr inbounds i8, ptr %462, i64 %541
  %543 = load i8, ptr %542, align 1, !tbaa !27
  %544 = zext i8 %543 to i32
  %545 = mul i32 %538, 30005491
  %546 = mul i32 %544, 50004239
  %547 = mul nsw i32 %457, 70004807
  %548 = add nsw i32 %547, 290003459
  %549 = add i32 %548, %545
  %550 = add i32 %549, %546
  %551 = lshr i32 %550, 9
  %552 = lshr i32 %538, 3
  %553 = lshr i32 %544, 4
  %554 = lshr i32 %457, 5
  %555 = xor i32 %552, %553
  %556 = xor i32 %555, %551
  %557 = xor i32 %556, %554
  %558 = xor i32 %557, %550
  %559 = xor i32 %558, 67108863
  %560 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %561 = add nsw i32 %560, 1
  store i32 %561, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %562 = mul i32 %559, 987654323
  %563 = add i32 %562, %560
  %564 = tail call i32 @llvm.fshl.i32(i32 %563, i32 %563, i32 16)
  %565 = mul i32 %564, 123456791
  %566 = add i32 %565, %560
  %567 = sext i32 %560 to i64
  %568 = getelementptr inbounds i32, ptr %527, i64 %567
  store i32 %566, ptr %568, align 4, !tbaa !18
  %569 = load i32, ptr @pos, align 4, !tbaa !18
  %570 = add nsw i32 %569, -3
  %571 = load i32, ptr @buf, align 8, !tbaa !23
  %572 = add nsw i32 %571, -1
  %573 = and i32 %572, %570
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds i8, ptr %462, i64 %574
  %576 = load i8, ptr %575, align 1, !tbaa !27
  %577 = zext i8 %576 to i32
  %578 = add nsw i32 %569, -1
  %579 = and i32 %572, %578
  %580 = sext i32 %579 to i64
  %581 = getelementptr inbounds i8, ptr %462, i64 %580
  %582 = load i8, ptr %581, align 1, !tbaa !27
  %583 = lshr i8 %582, 2
  %584 = zext i8 %583 to i32
  %585 = add nsw i32 %569, -2
  %586 = and i32 %572, %585
  %587 = sext i32 %586 to i64
  %588 = getelementptr inbounds i8, ptr %462, i64 %587
  %589 = load i8, ptr %588, align 1, !tbaa !27
  %590 = lshr i8 %589, 6
  %591 = zext i8 %590 to i32
  %592 = mul i32 %577, 30005491
  %593 = mul nuw i32 %584, 50004239
  %594 = mul nuw nsw i32 %591, 70004807
  %595 = mul nsw i32 %457, 110002499
  %596 = add nsw i32 %595, 600008937
  %597 = add i32 %596, %592
  %598 = add i32 %597, %593
  %599 = add i32 %598, %594
  %600 = lshr i32 %599, 9
  %601 = lshr i32 %577, 3
  %602 = lshr i32 %584, 4
  %603 = lshr i32 %457, 6
  %604 = xor i32 %601, %602
  %605 = xor i32 %604, %600
  %606 = xor i32 %605, %603
  %607 = xor i32 %606, %599
  %608 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %609 = add nsw i32 %608, 1
  store i32 %609, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %610 = mul i32 %607, 987654323
  %611 = add i32 %610, %608
  %612 = tail call i32 @llvm.fshl.i32(i32 %611, i32 %611, i32 16)
  %613 = mul i32 %612, 123456791
  %614 = add i32 %613, %608
  %615 = sext i32 %608 to i64
  %616 = getelementptr inbounds i32, ptr %527, i64 %615
  store i32 %614, ptr %616, align 4, !tbaa !18
  %617 = load i32, ptr @pos, align 4, !tbaa !18
  %618 = sub nsw i32 %617, %467
  %619 = load i32, ptr @buf, align 8, !tbaa !23
  %620 = add nsw i32 %619, -1
  %621 = and i32 %620, %618
  %622 = sext i32 %621 to i64
  %623 = getelementptr inbounds i8, ptr %462, i64 %622
  %624 = load i8, ptr %623, align 1, !tbaa !27
  %625 = zext i8 %624 to i32
  %626 = mul i32 %625, 30005491
  %627 = add nsw i32 %510, 620004610
  %628 = add i32 %627, %626
  %629 = lshr i32 %628, 9
  %630 = lshr i32 %625, 3
  %631 = xor i32 %630, %629
  %632 = xor i32 %631, %515
  %633 = xor i32 %632, %628
  %634 = xor i32 %633, 67108865
  %635 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %636 = add nsw i32 %635, 1
  store i32 %636, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %637 = mul i32 %634, 987654323
  %638 = add i32 %637, %635
  %639 = tail call i32 @llvm.fshl.i32(i32 %638, i32 %638, i32 16)
  %640 = mul i32 %639, 123456791
  %641 = add i32 %640, %635
  %642 = sext i32 %635 to i64
  %643 = getelementptr inbounds i32, ptr %527, i64 %642
  store i32 %641, ptr %643, align 4, !tbaa !18
  %644 = load i32, ptr @pos, align 4, !tbaa !18
  %645 = sub nsw i32 %644, %467
  %646 = load i32, ptr @buf, align 8, !tbaa !23
  %647 = add nsw i32 %646, -1
  %648 = and i32 %647, %645
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds i8, ptr %462, i64 %649
  %651 = load i8, ptr %650, align 1, !tbaa !27
  %652 = zext i8 %651 to i32
  %653 = add nsw i32 %644, -1
  %654 = and i32 %647, %653
  %655 = sext i32 %654 to i64
  %656 = getelementptr inbounds i8, ptr %462, i64 %655
  %657 = load i8, ptr %656, align 1, !tbaa !27
  %658 = zext i8 %657 to i32
  %659 = mul i32 %652, 30005491
  %660 = mul i32 %658, 50004239
  %661 = add nsw i32 %547, 890012396
  %662 = add i32 %661, %659
  %663 = add i32 %662, %660
  %664 = lshr i32 %663, 9
  %665 = lshr i32 %652, 3
  %666 = lshr i32 %658, 4
  %667 = xor i32 %665, %666
  %668 = xor i32 %667, %664
  %669 = xor i32 %668, %554
  %670 = xor i32 %669, %663
  %671 = xor i32 %670, 67108862
  %672 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %673 = add nsw i32 %672, 1
  store i32 %673, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %674 = mul i32 %671, 987654323
  %675 = add i32 %674, %672
  %676 = tail call i32 @llvm.fshl.i32(i32 %675, i32 %675, i32 16)
  %677 = mul i32 %676, 123456791
  %678 = add i32 %677, %672
  %679 = sext i32 %672 to i64
  %680 = getelementptr inbounds i32, ptr %527, i64 %679
  store i32 %678, ptr %680, align 4, !tbaa !18
  %681 = load i32, ptr @pos, align 4, !tbaa !18
  %682 = sub nsw i32 %681, %467
  %683 = load i32, ptr @buf, align 8, !tbaa !23
  %684 = add nsw i32 %683, -1
  %685 = and i32 %684, %682
  %686 = sext i32 %685 to i64
  %687 = getelementptr inbounds i8, ptr %462, i64 %686
  %688 = load i8, ptr %687, align 1, !tbaa !27
  %689 = zext i8 %688 to i32
  %690 = add nsw i32 %681, -1
  %691 = and i32 %684, %690
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds i8, ptr %462, i64 %692
  %694 = load i8, ptr %693, align 1, !tbaa !27
  %695 = lshr i8 %694, 2
  %696 = zext i8 %695 to i32
  %697 = add nsw i32 %681, -2
  %698 = and i32 %684, %697
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds i8, ptr %462, i64 %699
  %701 = load i8, ptr %700, align 1, !tbaa !27
  %702 = lshr i8 %701, 6
  %703 = zext i8 %702 to i32
  %704 = mul i32 %689, 30005491
  %705 = mul nuw i32 %696, 50004239
  %706 = mul nuw nsw i32 %703, 70004807
  %707 = add nsw i32 %595, 1200017874
  %708 = add i32 %707, %704
  %709 = add i32 %708, %705
  %710 = add i32 %709, %706
  %711 = lshr i32 %710, 9
  %712 = lshr i32 %689, 3
  %713 = lshr i32 %696, 4
  %714 = xor i32 %712, %713
  %715 = xor i32 %714, %711
  %716 = xor i32 %715, %603
  %717 = xor i32 %716, %710
  %718 = xor i32 %717, 1
  %719 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %720 = add nsw i32 %719, 1
  store i32 %720, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %721 = mul i32 %718, 987654323
  %722 = add i32 %721, %719
  %723 = tail call i32 @llvm.fshl.i32(i32 %722, i32 %722, i32 16)
  %724 = mul i32 %723, 123456791
  %725 = add i32 %724, %719
  %726 = sext i32 %719 to i64
  %727 = getelementptr inbounds i32, ptr %527, i64 %726
  store i32 %725, ptr %727, align 4, !tbaa !18
  %728 = load i32, ptr @pos, align 4, !tbaa !18
  %729 = add nsw i32 %728, -3
  %730 = load i32, ptr @buf, align 8, !tbaa !23
  %731 = add nsw i32 %730, -1
  %732 = and i32 %731, %729
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds i8, ptr %462, i64 %733
  %735 = load i8, ptr %734, align 1, !tbaa !27
  %736 = zext i8 %735 to i32
  %737 = sub nsw i32 %728, %467
  %738 = and i32 %731, %737
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds i8, ptr %462, i64 %739
  %741 = load i8, ptr %740, align 1, !tbaa !27
  %742 = zext i8 %741 to i32
  %743 = add nuw nsw i32 %742, %736
  %744 = lshr i32 %743, 3
  %745 = add nsw i32 %728, -1
  %746 = and i32 %731, %745
  %747 = sext i32 %746 to i64
  %748 = getelementptr inbounds i8, ptr %462, i64 %747
  %749 = load i8, ptr %748, align 1, !tbaa !27
  %750 = lshr i8 %749, 5
  %751 = zext i8 %750 to i32
  %752 = add nsw i32 %728, -2
  %753 = and i32 %731, %752
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds i8, ptr %462, i64 %754
  %756 = load i8, ptr %755, align 1, !tbaa !27
  %757 = lshr i8 %756, 5
  %758 = zext i8 %757 to i32
  %759 = mul nuw nsw i32 %744, 30005491
  %760 = mul nuw nsw i32 %751, 50004239
  %761 = mul nuw nsw i32 %758, 70004807
  %762 = add nsw i32 %595, 1400020853
  %763 = add nuw i32 %762, %759
  %764 = add nuw i32 %763, %760
  %765 = add i32 %764, %761
  %766 = lshr i32 %765, 9
  %767 = xor i32 %743, %457
  %768 = lshr i32 %767, 6
  %769 = xor i32 %768, %766
  %770 = xor i32 %769, %765
  %771 = xor i32 %770, 1
  %772 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %773 = add nsw i32 %772, 1
  store i32 %773, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %774 = mul i32 %771, 987654323
  %775 = add i32 %774, %772
  %776 = tail call i32 @llvm.fshl.i32(i32 %775, i32 %775, i32 16)
  %777 = mul i32 %776, 123456791
  %778 = add i32 %777, %772
  %779 = sext i32 %772 to i64
  %780 = getelementptr inbounds i32, ptr %527, i64 %779
  store i32 %778, ptr %780, align 4, !tbaa !18
  %781 = load i32, ptr @pos, align 4, !tbaa !18
  %782 = add nsw i32 %781, -1
  %783 = load i32, ptr @buf, align 8, !tbaa !23
  %784 = add nsw i32 %783, -1
  %785 = and i32 %784, %782
  %786 = sext i32 %785 to i64
  %787 = getelementptr inbounds i8, ptr %462, i64 %786
  %788 = load i8, ptr %787, align 1, !tbaa !27
  %789 = zext i8 %788 to i32
  %790 = add nsw i32 %781, -2
  %791 = and i32 %784, %790
  %792 = sext i32 %791 to i64
  %793 = getelementptr inbounds i8, ptr %462, i64 %792
  %794 = load i8, ptr %793, align 1, !tbaa !27
  %795 = zext i8 %794 to i32
  %796 = mul i32 %789, 30005491
  %797 = mul i32 %795, 50004239
  %798 = add nsw i32 %547, 1490021333
  %799 = add i32 %798, %796
  %800 = add i32 %799, %797
  %801 = lshr i32 %800, 9
  %802 = lshr i32 %789, 3
  %803 = lshr i32 %795, 4
  %804 = xor i32 %802, %803
  %805 = xor i32 %804, %801
  %806 = xor i32 %805, %554
  %807 = xor i32 %806, %800
  %808 = xor i32 %807, 67108861
  %809 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %810 = add nsw i32 %809, 1
  store i32 %810, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %811 = mul i32 %808, 987654323
  %812 = add i32 %811, %809
  %813 = tail call i32 @llvm.fshl.i32(i32 %812, i32 %812, i32 16)
  %814 = mul i32 %813, 123456791
  %815 = add i32 %814, %809
  %816 = sext i32 %809 to i64
  %817 = getelementptr inbounds i32, ptr %527, i64 %816
  store i32 %815, ptr %817, align 4, !tbaa !18
  %818 = load i32, ptr @pos, align 4, !tbaa !18
  %819 = add nsw i32 %818, -3
  %820 = load i32, ptr @buf, align 8, !tbaa !23
  %821 = add nsw i32 %820, -1
  %822 = and i32 %821, %819
  %823 = sext i32 %822 to i64
  %824 = getelementptr inbounds i8, ptr %462, i64 %823
  %825 = load i8, ptr %824, align 1, !tbaa !27
  %826 = zext i8 %825 to i32
  %827 = add nsw i32 %818, -1
  %828 = and i32 %821, %827
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds i8, ptr %462, i64 %829
  %831 = load i8, ptr %830, align 1, !tbaa !27
  %832 = zext i8 %831 to i32
  %833 = add nsw i32 %818, -4
  %834 = and i32 %821, %833
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds i8, ptr %462, i64 %835
  %837 = load i8, ptr %836, align 1, !tbaa !27
  %838 = zext i8 %837 to i32
  %839 = sub nsw i32 %832, %838
  %840 = mul i32 %826, 30005491
  %841 = mul i32 %839, 50004239
  %842 = add nsw i32 %547, 1690024312
  %843 = add i32 %842, %840
  %844 = add i32 %843, %841
  %845 = lshr i32 %844, 9
  %846 = lshr i32 %826, 3
  %847 = lshr i32 %839, 4
  %848 = xor i32 %846, %847
  %849 = xor i32 %848, %845
  %850 = xor i32 %849, %554
  %851 = xor i32 %850, %844
  %852 = xor i32 %851, 67108861
  %853 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %854 = add nsw i32 %853, 1
  store i32 %854, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %855 = mul i32 %852, 987654323
  %856 = add i32 %855, %853
  %857 = tail call i32 @llvm.fshl.i32(i32 %856, i32 %856, i32 16)
  %858 = mul i32 %857, 123456791
  %859 = add i32 %858, %853
  %860 = sext i32 %853 to i64
  %861 = getelementptr inbounds i32, ptr %527, i64 %860
  store i32 %859, ptr %861, align 4, !tbaa !18
  %862 = load i32, ptr @pos, align 4, !tbaa !18
  %863 = add nsw i32 %862, -3
  %864 = load i32, ptr @buf, align 8, !tbaa !23
  %865 = add nsw i32 %864, -1
  %866 = and i32 %865, %863
  %867 = sext i32 %866 to i64
  %868 = getelementptr inbounds i8, ptr %462, i64 %867
  %869 = load i8, ptr %868, align 1, !tbaa !27
  %870 = zext i8 %869 to i32
  %871 = add nsw i32 %862, -1
  %872 = and i32 %865, %871
  %873 = sext i32 %872 to i64
  %874 = getelementptr inbounds i8, ptr %462, i64 %873
  %875 = load i8, ptr %874, align 1, !tbaa !27
  %876 = zext i8 %875 to i32
  %877 = add nuw nsw i32 %876, %870
  %878 = add nsw i32 %862, -4
  %879 = and i32 %865, %878
  %880 = sext i32 %879 to i64
  %881 = getelementptr inbounds i8, ptr %462, i64 %880
  %882 = load i8, ptr %881, align 1, !tbaa !27
  %883 = zext i8 %882 to i32
  %884 = sub nsw i32 %877, %883
  %885 = mul i32 %884, 30005491
  %886 = add nsw i32 %510, 1820022484
  %887 = add i32 %886, %885
  %888 = lshr i32 %887, 9
  %889 = lshr i32 %884, 3
  %890 = xor i32 %889, %888
  %891 = xor i32 %890, %515
  %892 = xor i32 %891, %887
  %893 = xor i32 %892, 67108866
  %894 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %895 = add nsw i32 %894, 1
  store i32 %895, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %896 = mul i32 %893, 987654323
  %897 = add i32 %896, %894
  %898 = tail call i32 @llvm.fshl.i32(i32 %897, i32 %897, i32 16)
  %899 = mul i32 %898, 123456791
  %900 = add i32 %899, %894
  %901 = sext i32 %894 to i64
  %902 = getelementptr inbounds i32, ptr %527, i64 %901
  store i32 %900, ptr %902, align 4, !tbaa !18
  %903 = load i32, ptr @pos, align 4, !tbaa !18
  %904 = sub nsw i32 %903, %467
  %905 = load i32, ptr @buf, align 8, !tbaa !23
  %906 = add nsw i32 %905, -1
  %907 = and i32 %906, %904
  %908 = sext i32 %907 to i64
  %909 = getelementptr inbounds i8, ptr %462, i64 %908
  %910 = load i8, ptr %909, align 1, !tbaa !27
  %911 = zext i8 %910 to i32
  %912 = add nsw i32 %903, -1
  %913 = and i32 %906, %912
  %914 = sext i32 %913 to i64
  %915 = getelementptr inbounds i8, ptr %462, i64 %914
  %916 = load i8, ptr %915, align 1, !tbaa !27
  %917 = zext i8 %916 to i32
  %918 = add nsw i32 %467, 1
  %919 = sub nsw i32 %903, %918
  %920 = and i32 %906, %919
  %921 = sext i32 %920 to i64
  %922 = getelementptr inbounds i8, ptr %462, i64 %921
  %923 = load i8, ptr %922, align 1, !tbaa !27
  %924 = zext i8 %923 to i32
  %925 = sub nsw i32 %917, %924
  %926 = mul i32 %911, 30005491
  %927 = mul i32 %925, 50004239
  %928 = add i32 %547, 2090030270
  %929 = add i32 %928, %926
  %930 = add i32 %929, %927
  %931 = lshr i32 %930, 9
  %932 = lshr i32 %911, 3
  %933 = lshr i32 %925, 4
  %934 = xor i32 %932, %933
  %935 = xor i32 %934, %931
  %936 = xor i32 %935, %554
  %937 = xor i32 %936, %930
  %938 = xor i32 %937, 67108861
  %939 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %940 = add nsw i32 %939, 1
  store i32 %940, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %941 = mul i32 %938, 987654323
  %942 = add i32 %941, %939
  %943 = tail call i32 @llvm.fshl.i32(i32 %942, i32 %942, i32 16)
  %944 = mul i32 %943, 123456791
  %945 = add i32 %944, %939
  %946 = sext i32 %939 to i64
  %947 = getelementptr inbounds i32, ptr %527, i64 %946
  store i32 %945, ptr %947, align 4, !tbaa !18
  %948 = load i32, ptr @pos, align 4, !tbaa !18
  %949 = sub nsw i32 %948, %467
  %950 = load i32, ptr @buf, align 8, !tbaa !23
  %951 = add nsw i32 %950, -1
  %952 = and i32 %951, %949
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds i8, ptr %462, i64 %953
  %955 = load i8, ptr %954, align 1, !tbaa !27
  %956 = zext i8 %955 to i32
  %957 = add nsw i32 %948, -1
  %958 = and i32 %951, %957
  %959 = sext i32 %958 to i64
  %960 = getelementptr inbounds i8, ptr %462, i64 %959
  %961 = load i8, ptr %960, align 1, !tbaa !27
  %962 = zext i8 %961 to i32
  %963 = add nuw nsw i32 %962, %956
  %964 = sub nsw i32 %948, %918
  %965 = and i32 %951, %964
  %966 = sext i32 %965 to i64
  %967 = getelementptr inbounds i8, ptr %462, i64 %966
  %968 = load i8, ptr %967, align 1, !tbaa !27
  %969 = zext i8 %968 to i32
  %970 = sub nsw i32 %963, %969
  %971 = mul i32 %970, 30005491
  %972 = add i32 %510, -2074938854
  %973 = add i32 %972, %971
  %974 = lshr i32 %973, 9
  %975 = lshr i32 %970, 3
  %976 = xor i32 %975, %974
  %977 = xor i32 %976, %515
  %978 = xor i32 %977, %973
  %979 = xor i32 %978, 67108867
  %980 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %981 = add nsw i32 %980, 1
  store i32 %981, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %982 = mul i32 %979, 987654323
  %983 = add i32 %982, %980
  %984 = tail call i32 @llvm.fshl.i32(i32 %983, i32 %983, i32 16)
  %985 = mul i32 %984, 123456791
  %986 = add i32 %985, %980
  %987 = sext i32 %980 to i64
  %988 = getelementptr inbounds i32, ptr %527, i64 %987
  store i32 %986, ptr %988, align 4, !tbaa !18
  %989 = lshr i32 %508, 5
  %990 = mul i32 %502, 30005491
  %991 = mul nuw nsw i32 %989, 50004239
  %992 = add nsw i32 %547, -1804931068
  %993 = add i32 %992, %990
  %994 = add i32 %993, %991
  %995 = lshr i32 %994, 9
  %996 = xor i32 %490, %457
  %997 = lshr i32 %996, 5
  %998 = xor i32 %997, %995
  %999 = xor i32 %998, %994
  %1000 = xor i32 %999, 67108860
  %1001 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1002 = add nsw i32 %1001, 1
  store i32 %1002, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1003 = mul i32 %1000, 987654323
  %1004 = add i32 %1001, %1003
  %1005 = tail call i32 @llvm.fshl.i32(i32 %1004, i32 %1004, i32 16)
  %1006 = mul i32 %1005, 123456791
  %1007 = add i32 %1006, %1001
  %1008 = sext i32 %1001 to i64
  %1009 = getelementptr inbounds i32, ptr %527, i64 %1008
  store i32 %1007, ptr %1009, align 4, !tbaa !18
  %1010 = load i32, ptr @pos, align 4, !tbaa !18
  %1011 = add nsw i32 %1010, -3
  %1012 = load i32, ptr @buf, align 8, !tbaa !23
  %1013 = add nsw i32 %1012, -1
  %1014 = and i32 %1013, %1011
  %1015 = sext i32 %1014 to i64
  %1016 = getelementptr inbounds i8, ptr %462, i64 %1015
  %1017 = load i8, ptr %1016, align 1, !tbaa !27
  %1018 = zext i8 %1017 to i32
  %1019 = sub i32 %1010, %467
  %1020 = and i32 %1013, %1019
  %1021 = sext i32 %1020 to i64
  %1022 = getelementptr inbounds i8, ptr %462, i64 %1021
  %1023 = load i8, ptr %1022, align 1, !tbaa !27
  %1024 = zext i8 %1023 to i32
  %1025 = add nuw nsw i32 %1024, %1018
  %1026 = sub nsw i32 %1010, %483
  %1027 = and i32 %1013, %1026
  %1028 = sext i32 %1027 to i64
  %1029 = getelementptr inbounds i8, ptr %462, i64 %1028
  %1030 = load i8, ptr %1029, align 1, !tbaa !27
  %1031 = zext i8 %1030 to i32
  %1032 = sub nsw i32 %1025, %1031
  %1033 = shl nsw i32 %1032, 8
  %1034 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm1, align 8, !tbaa !74
  %1035 = add nsw i32 %1034, -256
  %1036 = and i32 %1033, %1035
  store i32 %1036, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !102
  %1037 = load i8, ptr %1016, align 1, !tbaa !27
  %1038 = zext i8 %1037 to i32
  %1039 = sub nsw i32 %1010, %468
  %1040 = and i32 %1013, %1039
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds i8, ptr %462, i64 %1041
  %1043 = load i8, ptr %1042, align 1, !tbaa !27
  %1044 = zext i8 %1043 to i32
  %1045 = add nuw nsw i32 %1044, %1038
  %1046 = load i8, ptr %1022, align 1, !tbaa !27
  %1047 = zext i8 %1046 to i32
  %1048 = sub nsw i32 %1045, %1047
  %1049 = shl nsw i32 %1048, 8
  %1050 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm2, align 8, !tbaa !74
  %1051 = add nsw i32 %1050, -256
  %1052 = and i32 %1049, %1051
  store i32 %1052, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !102
  %1053 = load i8, ptr %1016, align 1, !tbaa !27
  %1054 = zext i8 %1053 to i32
  %1055 = add nsw i32 %1010, -6
  %1056 = and i32 %1013, %1055
  %1057 = sext i32 %1056 to i64
  %1058 = getelementptr inbounds i8, ptr %462, i64 %1057
  %1059 = load i8, ptr %1058, align 1, !tbaa !27
  %1060 = zext i8 %1059 to i32
  %1061 = shl nuw nsw i32 %1054, 9
  %1062 = shl nuw nsw i32 %1060, 8
  %1063 = sub nsw i32 %1061, %1062
  %1064 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm3, align 8, !tbaa !74
  %1065 = add nsw i32 %1064, -256
  %1066 = and i32 %1063, %1065
  store i32 %1066, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !102
  %1067 = load i8, ptr %1022, align 1, !tbaa !27
  %1068 = zext i8 %1067 to i32
  %1069 = shl nsw i32 %467, 1
  %1070 = sub i32 %1010, %1069
  %1071 = and i32 %1013, %1070
  %1072 = sext i32 %1071 to i64
  %1073 = getelementptr inbounds i8, ptr %462, i64 %1072
  %1074 = load i8, ptr %1073, align 1, !tbaa !27
  %1075 = zext i8 %1074 to i32
  %1076 = shl nuw nsw i32 %1068, 9
  %1077 = shl nuw nsw i32 %1075, 8
  %1078 = sub nsw i32 %1076, %1077
  %1079 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm4, align 8, !tbaa !74
  %1080 = add nsw i32 %1079, -256
  %1081 = and i32 %1078, %1080
  store i32 %1081, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 1), align 8, !tbaa !102
  %1082 = load i8, ptr %1029, align 1, !tbaa !27
  %1083 = zext i8 %1082 to i32
  %1084 = add i32 %1070, -6
  %1085 = and i32 %1013, %1084
  %1086 = sext i32 %1085 to i64
  %1087 = getelementptr inbounds i8, ptr %462, i64 %1086
  %1088 = load i8, ptr %1087, align 1, !tbaa !27
  %1089 = zext i8 %1088 to i32
  %1090 = shl nuw nsw i32 %1083, 9
  %1091 = shl nuw nsw i32 %1089, 8
  %1092 = sub nsw i32 %1090, %1091
  %1093 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm5, align 8, !tbaa !74
  %1094 = add nsw i32 %1093, -256
  %1095 = and i32 %1092, %1094
  store i32 %1095, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 1), align 8, !tbaa !102
  %1096 = load i8, ptr %1042, align 1, !tbaa !27
  %1097 = zext i8 %1096 to i32
  %1098 = add i32 %1070, 6
  %1099 = and i32 %1013, %1098
  %1100 = sext i32 %1099 to i64
  %1101 = getelementptr inbounds i8, ptr %462, i64 %1100
  %1102 = load i8, ptr %1101, align 1, !tbaa !27
  %1103 = zext i8 %1102 to i32
  %1104 = shl nuw nsw i32 %1097, 9
  %1105 = shl nuw nsw i32 %1103, 8
  %1106 = sub nsw i32 %1104, %1105
  %1107 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm6, align 8, !tbaa !74
  %1108 = add nsw i32 %1107, -256
  %1109 = and i32 %1106, %1108
  store i32 %1109, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 1), align 8, !tbaa !102
  %1110 = load i8, ptr %1042, align 1, !tbaa !27
  %1111 = zext i8 %1110 to i32
  %1112 = add nsw i32 %1010, -1
  %1113 = and i32 %1013, %1112
  %1114 = sext i32 %1113 to i64
  %1115 = getelementptr inbounds i8, ptr %462, i64 %1114
  %1116 = load i8, ptr %1115, align 1, !tbaa !27
  %1117 = zext i8 %1116 to i32
  %1118 = add nuw nsw i32 %1117, %1111
  %1119 = add i32 %1019, 2
  %1120 = and i32 %1013, %1119
  %1121 = sext i32 %1120 to i64
  %1122 = getelementptr inbounds i8, ptr %462, i64 %1121
  %1123 = load i8, ptr %1122, align 1, !tbaa !27
  %1124 = zext i8 %1123 to i32
  %1125 = sub nsw i32 %1118, %1124
  %1126 = shl nsw i32 %1125, 8
  %1127 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm7, align 8, !tbaa !74
  %1128 = add nsw i32 %1127, -256
  %1129 = and i32 %1126, %1128
  store i32 %1129, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 1), align 8, !tbaa !102
  %1130 = load i8, ptr %1022, align 1, !tbaa !27
  %1131 = zext i8 %1130 to i32
  %1132 = load i8, ptr %1042, align 1, !tbaa !27
  %1133 = zext i8 %1132 to i32
  %1134 = add nuw nsw i32 %1133, %1131
  %1135 = add i32 %1070, 3
  %1136 = and i32 %1013, %1135
  %1137 = sext i32 %1136 to i64
  %1138 = getelementptr inbounds i8, ptr %462, i64 %1137
  %1139 = load i8, ptr %1138, align 1, !tbaa !27
  %1140 = zext i8 %1139 to i32
  %1141 = sub nsw i32 %1134, %1140
  %1142 = shl nsw i32 %1141, 8
  %1143 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm8, align 8, !tbaa !74
  %1144 = add nsw i32 %1143, -256
  %1145 = and i32 %1142, %1144
  store i32 %1145, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 1), align 8, !tbaa !102
  %1146 = lshr i32 %490, 3
  %1147 = shl nuw nsw i32 %508, 1
  %1148 = and i32 %1147, 384
  %1149 = or i32 %1148, %1146
  %1150 = shl nuw nsw i32 %1149, 8
  %1151 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm9, align 8, !tbaa !74
  %1152 = add i32 %1151, 2147483392
  %1153 = and i32 %1152, %1150
  store i32 %1153, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 1), align 8, !tbaa !102
  br label %1154

1154:                                             ; preds = %456, %453
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm1, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm2, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm3, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm4, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm5, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm6, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm7, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm8, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm9, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE5scm10, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  %1155 = tail call noundef i32 @_ZN10ContextMap3mixER5Mixer(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8bmpModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0) #32
  %1156 = load i32, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !18
  br label %1157

1157:                                             ; preds = %1154, %452
  %1158 = phi i32 [ 0, %452 ], [ %1156, %1154 ]
  ret i32 %1158

1159:                                             ; preds = %256, %254, %252, %250, %248, %246, %244, %242, %240, %238, %236
  %1160 = phi ptr [ @_ZGVZ8bmpModelR5MixerE2cm, %256 ], [ @_ZGVZ8bmpModelR5MixerE5scm10, %254 ], [ @_ZGVZ8bmpModelR5MixerE4scm9, %252 ], [ @_ZGVZ8bmpModelR5MixerE4scm8, %250 ], [ @_ZGVZ8bmpModelR5MixerE4scm7, %248 ], [ @_ZGVZ8bmpModelR5MixerE4scm6, %246 ], [ @_ZGVZ8bmpModelR5MixerE4scm5, %244 ], [ @_ZGVZ8bmpModelR5MixerE4scm4, %242 ], [ @_ZGVZ8bmpModelR5MixerE4scm3, %240 ], [ @_ZGVZ8bmpModelR5MixerE4scm2, %238 ], [ @_ZGVZ8bmpModelR5MixerE4scm1, %236 ]
  %1161 = phi { ptr, i32 } [ %257, %256 ], [ %255, %254 ], [ %253, %252 ], [ %251, %250 ], [ %249, %248 ], [ %247, %246 ], [ %245, %244 ], [ %243, %242 ], [ %241, %240 ], [ %239, %238 ], [ %237, %236 ]
  tail call void @__cxa_guard_abort(ptr nonnull %1160) #33
  resume { ptr, i32 } %1161
}

; Function Attrs: inlinehint mustprogress optsize uwtable
define internal noundef i32 @_Z2i4i(i32 noundef %0) #16 comdat {
  %2 = load i32, ptr @pos, align 4, !tbaa !18
  %3 = sub i32 %2, %0
  %4 = load i32, ptr @buf, align 8, !tbaa !23
  %5 = add nsw i32 %4, -1
  %6 = and i32 %5, %3
  %7 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %8 = sext i32 %6 to i64
  %9 = getelementptr inbounds i8, ptr %7, i64 %8
  %10 = load i8, ptr %9, align 1, !tbaa !27
  %11 = zext i8 %10 to i32
  %12 = add i32 %3, 1
  %13 = and i32 %5, %12
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, ptr %7, i64 %14
  %16 = load i8, ptr %15, align 1, !tbaa !27
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 8
  %19 = or i32 %18, %11
  %20 = add i32 %3, 2
  %21 = and i32 %5, %20
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, ptr %7, i64 %22
  %24 = load i8, ptr %23, align 1, !tbaa !27
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 16
  %27 = or i32 %19, %26
  %28 = add i32 %3, 3
  %29 = and i32 %5, %28
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, ptr %7, i64 %30
  %32 = load i8, ptr %31, align 1, !tbaa !27
  %33 = zext i8 %32 to i32
  %34 = shl nuw nsw i32 %33, 24
  %35 = or i32 %27, %34
  ret i32 %35
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #17

; Function Attrs: mustprogress optsize uwtable
define internal void @_Z9model8bitR5Mixeri(ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %1) #7 personality ptr @__gxx_personality_v0 {
  %3 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm1 acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %11, !prof !100

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm1) #33
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm1, i32 noundef 131072) #32
          to label %9 unwind label %1558

9:                                                ; preds = %8
  %10 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm1, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm1) #33
  br label %11

11:                                               ; preds = %9, %5, %2
  %12 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm2 acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %20, !prof !100

14:                                               ; preds = %11
  %15 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm2) #33
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm2, i32 noundef 131072) #32
          to label %18 unwind label %1560

18:                                               ; preds = %17
  %19 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm2, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm2) #33
  br label %20

20:                                               ; preds = %18, %14, %11
  %21 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm3 acquire, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %29, !prof !100

23:                                               ; preds = %20
  %24 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm3) #33
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm3, i32 noundef 131072) #32
          to label %27 unwind label %1562

27:                                               ; preds = %26
  %28 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm3, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm3) #33
  br label %29

29:                                               ; preds = %27, %23, %20
  %30 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm4 acquire, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %38, !prof !100

32:                                               ; preds = %29
  %33 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm4) #33
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm4, i32 noundef 131072) #32
          to label %36 unwind label %1564

36:                                               ; preds = %35
  %37 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm4, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm4) #33
  br label %38

38:                                               ; preds = %36, %32, %29
  %39 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm5 acquire, align 8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %47, !prof !100

41:                                               ; preds = %38
  %42 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm5) #33
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm5, i32 noundef 131072) #32
          to label %45 unwind label %1566

45:                                               ; preds = %44
  %46 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm5, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm5) #33
  br label %47

47:                                               ; preds = %45, %41, %38
  %48 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm6 acquire, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %56, !prof !100

50:                                               ; preds = %47
  %51 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm6) #33
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm6, i32 noundef 262144) #32
          to label %54 unwind label %1568

54:                                               ; preds = %53
  %55 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm6, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm6) #33
  br label %56

56:                                               ; preds = %54, %50, %47
  %57 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm7 acquire, align 8
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %65, !prof !100

59:                                               ; preds = %56
  %60 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm7) #33
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %59
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm7, i32 noundef 131072) #32
          to label %63 unwind label %1570

63:                                               ; preds = %62
  %64 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm7, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm7) #33
  br label %65

65:                                               ; preds = %63, %59, %56
  %66 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE2cm acquire, align 8
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %76, !prof !100

68:                                               ; preds = %65
  %69 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE2cm) #33
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %68
  %72 = load i32, ptr @level, align 4, !tbaa !18
  %73 = shl i32 262144, %72
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9model8bitR5MixeriE2cm, i32 noundef %73, i32 noundef 32) #32
          to label %74 unwind label %1572

74:                                               ; preds = %71
  %75 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE2cm, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE2cm) #33
  br label %76

76:                                               ; preds = %74, %68, %65
  %77 = load i32, ptr @bpos, align 4, !tbaa !18
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %1574

79:                                               ; preds = %76
  %80 = load i32, ptr @pos, align 4, !tbaa !18
  %81 = add nsw i32 %80, -1
  %82 = load i32, ptr @buf, align 8, !tbaa !23
  %83 = add nsw i32 %82, -1
  %84 = and i32 %83, %81
  %85 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %86 = sext i32 %84 to i64
  %87 = getelementptr inbounds i8, ptr %85, i64 %86
  %88 = load i8, ptr %87, align 1, !tbaa !27
  %89 = zext i8 %88 to i32
  %90 = add nsw i32 %1, -1
  %91 = sub nsw i32 %80, %90
  %92 = and i32 %83, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, ptr %85, i64 %93
  %95 = load i8, ptr %94, align 1, !tbaa !27
  %96 = zext i8 %95 to i32
  %97 = add nuw nsw i32 %96, %89
  %98 = sub nsw i32 %80, %1
  %99 = and i32 %83, %98
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8, ptr %85, i64 %100
  %102 = load i8, ptr %101, align 1, !tbaa !27
  %103 = zext i8 %102 to i32
  %104 = add nuw nsw i32 %97, %103
  %105 = add nsw i32 %1, 1
  %106 = sub nsw i32 %80, %105
  %107 = and i32 %83, %106
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, ptr %85, i64 %108
  %110 = load i8, ptr %109, align 1, !tbaa !27
  %111 = zext i8 %110 to i32
  %112 = add nuw nsw i32 %104, %111
  %113 = mul nuw nsw i32 %89, %89
  %114 = mul nuw nsw i32 %96, %96
  %115 = add nuw nsw i32 %114, %113
  %116 = mul nuw nsw i32 %103, %103
  %117 = add nuw nsw i32 %115, %116
  %118 = mul nuw nsw i32 %111, %111
  %119 = add nuw nsw i32 %117, %118
  %120 = mul nuw nsw i32 %112, %112
  %121 = lshr i32 %120, 2
  %122 = sub nsw i32 %119, %121
  %123 = lshr i32 %122, 2
  %124 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %125 = and i32 %123, 65535
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i8, ptr %124, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !27
  %129 = zext i8 %128 to i32
  %130 = lshr i32 %89, 2
  %131 = lshr i32 %103, 2
  %132 = mul nuw nsw i32 %130, 30005491
  %133 = mul nuw i32 %131, 50004239
  %134 = add nuw nsw i32 %132, 19995673
  %135 = add i32 %134, %133
  %136 = lshr i32 %135, 9
  %137 = lshr i32 %89, 5
  %138 = lshr i32 %103, 6
  %139 = xor i32 %138, %137
  %140 = or i32 %139, 67108864
  %141 = xor i32 %140, %136
  %142 = xor i32 %141, %135
  %143 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %144 = add nsw i32 %143, 1
  store i32 %144, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %145 = mul i32 %142, 987654323
  %146 = add i32 %145, %143
  %147 = tail call i32 @llvm.fshl.i32(i32 %146, i32 %146, i32 16)
  %148 = mul i32 %147, 123456791
  %149 = add i32 %148, %143
  %150 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !15
  %151 = sext i32 %143 to i64
  %152 = getelementptr inbounds i32, ptr %150, i64 %151
  store i32 %149, ptr %152, align 4, !tbaa !18
  %153 = load i32, ptr @pos, align 4, !tbaa !18
  %154 = add nsw i32 %153, -1
  %155 = load i32, ptr @buf, align 8, !tbaa !23
  %156 = add nsw i32 %155, -1
  %157 = and i32 %156, %154
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i8, ptr %85, i64 %158
  %160 = load i8, ptr %159, align 1, !tbaa !27
  %161 = lshr i8 %160, 2
  %162 = zext i8 %161 to i32
  %163 = add nsw i32 %153, -2
  %164 = and i32 %156, %163
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i8, ptr %85, i64 %165
  %167 = load i8, ptr %166, align 1, !tbaa !27
  %168 = lshr i8 %167, 2
  %169 = zext i8 %168 to i32
  %170 = mul nuw nsw i32 %162, 30005491
  %171 = mul nuw i32 %169, 50004239
  %172 = add nuw nsw i32 %170, 219998652
  %173 = add i32 %172, %171
  %174 = lshr i32 %173, 9
  %175 = lshr i32 %162, 3
  %176 = lshr i32 %169, 4
  %177 = xor i32 %176, %175
  %178 = or i32 %177, 67108864
  %179 = xor i32 %174, %178
  %180 = xor i32 %179, %173
  %181 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %182 = add nsw i32 %181, 1
  store i32 %182, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %183 = mul i32 %180, 987654323
  %184 = add i32 %183, %181
  %185 = tail call i32 @llvm.fshl.i32(i32 %184, i32 %184, i32 16)
  %186 = mul i32 %185, 123456791
  %187 = add i32 %186, %181
  %188 = sext i32 %181 to i64
  %189 = getelementptr inbounds i32, ptr %150, i64 %188
  store i32 %187, ptr %189, align 4, !tbaa !18
  %190 = load i32, ptr @pos, align 4, !tbaa !18
  %191 = sub nsw i32 %190, %1
  %192 = load i32, ptr @buf, align 8, !tbaa !23
  %193 = add nsw i32 %192, -1
  %194 = and i32 %193, %191
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, ptr %85, i64 %195
  %197 = load i8, ptr %196, align 1, !tbaa !27
  %198 = lshr i8 %197, 2
  %199 = zext i8 %198 to i32
  %200 = shl nsw i32 %1, 1
  %201 = sub nsw i32 %190, %200
  %202 = and i32 %193, %201
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, ptr %85, i64 %203
  %205 = load i8, ptr %204, align 1, !tbaa !27
  %206 = lshr i8 %205, 2
  %207 = zext i8 %206 to i32
  %208 = mul nuw nsw i32 %199, 30005491
  %209 = mul nuw i32 %207, 50004239
  %210 = add nuw i32 %208, 420001631
  %211 = add i32 %210, %209
  %212 = lshr i32 %211, 9
  %213 = lshr i32 %199, 3
  %214 = lshr i32 %207, 4
  %215 = xor i32 %214, %213
  %216 = or i32 %215, 67108864
  %217 = xor i32 %212, %216
  %218 = xor i32 %217, %211
  %219 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %220 = add nsw i32 %219, 1
  store i32 %220, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %221 = mul i32 %218, 987654323
  %222 = add i32 %221, %219
  %223 = tail call i32 @llvm.fshl.i32(i32 %222, i32 %222, i32 16)
  %224 = mul i32 %223, 123456791
  %225 = add i32 %224, %219
  %226 = sext i32 %219 to i64
  %227 = getelementptr inbounds i32, ptr %150, i64 %226
  store i32 %225, ptr %227, align 4, !tbaa !18
  %228 = load i32, ptr @pos, align 4, !tbaa !18
  %229 = add nsw i32 %228, -1
  %230 = load i32, ptr @buf, align 8, !tbaa !23
  %231 = add nsw i32 %230, -1
  %232 = and i32 %231, %229
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds i8, ptr %85, i64 %233
  %235 = load i8, ptr %234, align 1, !tbaa !27
  %236 = lshr i8 %235, 2
  %237 = zext i8 %236 to i32
  %238 = sub nsw i32 %228, %90
  %239 = and i32 %231, %238
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i8, ptr %85, i64 %240
  %242 = load i8, ptr %241, align 1, !tbaa !27
  %243 = lshr i8 %242, 2
  %244 = zext i8 %243 to i32
  %245 = mul nuw nsw i32 %237, 30005491
  %246 = mul nuw i32 %244, 50004239
  %247 = add nuw i32 %245, 620004610
  %248 = add i32 %247, %246
  %249 = lshr i32 %248, 9
  %250 = lshr i32 %237, 3
  %251 = lshr i32 %244, 4
  %252 = xor i32 %250, %251
  %253 = xor i32 %252, %249
  %254 = xor i32 %253, %248
  %255 = xor i32 %254, 67108865
  %256 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %257 = add nsw i32 %256, 1
  store i32 %257, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %258 = mul i32 %255, 987654323
  %259 = add i32 %258, %256
  %260 = tail call i32 @llvm.fshl.i32(i32 %259, i32 %259, i32 16)
  %261 = mul i32 %260, 123456791
  %262 = add i32 %261, %256
  %263 = sext i32 %256 to i64
  %264 = getelementptr inbounds i32, ptr %150, i64 %263
  store i32 %262, ptr %264, align 4, !tbaa !18
  %265 = load i32, ptr @pos, align 4, !tbaa !18
  %266 = sub nsw i32 %265, %1
  %267 = load i32, ptr @buf, align 8, !tbaa !23
  %268 = add nsw i32 %267, -1
  %269 = and i32 %268, %266
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i8, ptr %85, i64 %270
  %272 = load i8, ptr %271, align 1, !tbaa !27
  %273 = lshr i8 %272, 2
  %274 = zext i8 %273 to i32
  %275 = sub nsw i32 %265, %105
  %276 = and i32 %268, %275
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds i8, ptr %85, i64 %277
  %279 = load i8, ptr %278, align 1, !tbaa !27
  %280 = lshr i8 %279, 2
  %281 = zext i8 %280 to i32
  %282 = mul nuw nsw i32 %274, 30005491
  %283 = mul nuw i32 %281, 50004239
  %284 = add nuw i32 %282, 820007589
  %285 = add i32 %284, %283
  %286 = lshr i32 %285, 9
  %287 = lshr i32 %274, 3
  %288 = lshr i32 %281, 4
  %289 = xor i32 %287, %288
  %290 = xor i32 %289, %286
  %291 = xor i32 %290, %285
  %292 = xor i32 %291, 67108865
  %293 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %294 = add nsw i32 %293, 1
  store i32 %294, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %295 = mul i32 %292, 987654323
  %296 = add i32 %295, %293
  %297 = tail call i32 @llvm.fshl.i32(i32 %296, i32 %296, i32 16)
  %298 = mul i32 %297, 123456791
  %299 = add i32 %298, %293
  %300 = sext i32 %293 to i64
  %301 = getelementptr inbounds i32, ptr %150, i64 %300
  store i32 %299, ptr %301, align 4, !tbaa !18
  %302 = load i32, ptr @pos, align 4, !tbaa !18
  %303 = sub nsw i32 %302, %105
  %304 = load i32, ptr @buf, align 8, !tbaa !23
  %305 = add nsw i32 %304, -1
  %306 = and i32 %305, %303
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds i8, ptr %85, i64 %307
  %309 = load i8, ptr %308, align 1, !tbaa !27
  %310 = lshr i8 %309, 2
  %311 = zext i8 %310 to i32
  %312 = add nsw i32 %1, 2
  %313 = sub nsw i32 %302, %312
  %314 = and i32 %305, %313
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds i8, ptr %85, i64 %315
  %317 = load i8, ptr %316, align 1, !tbaa !27
  %318 = lshr i8 %317, 2
  %319 = zext i8 %318 to i32
  %320 = mul nuw nsw i32 %311, 30005491
  %321 = mul nuw i32 %319, 50004239
  %322 = add nuw i32 %320, 1020010568
  %323 = add i32 %322, %321
  %324 = lshr i32 %323, 9
  %325 = lshr i32 %311, 3
  %326 = lshr i32 %319, 4
  %327 = xor i32 %325, %326
  %328 = xor i32 %327, %324
  %329 = xor i32 %328, %323
  %330 = xor i32 %329, 67108865
  %331 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %332 = add nsw i32 %331, 1
  store i32 %332, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %333 = mul i32 %330, 987654323
  %334 = add i32 %333, %331
  %335 = tail call i32 @llvm.fshl.i32(i32 %334, i32 %334, i32 16)
  %336 = mul i32 %335, 123456791
  %337 = add i32 %336, %331
  %338 = sext i32 %331 to i64
  %339 = getelementptr inbounds i32, ptr %150, i64 %338
  store i32 %337, ptr %339, align 4, !tbaa !18
  %340 = load i32, ptr @pos, align 4, !tbaa !18
  %341 = sub nsw i32 %340, %105
  %342 = load i32, ptr @buf, align 8, !tbaa !23
  %343 = add nsw i32 %342, -1
  %344 = and i32 %343, %341
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds i8, ptr %85, i64 %345
  %347 = load i8, ptr %346, align 1, !tbaa !27
  %348 = lshr i8 %347, 2
  %349 = zext i8 %348 to i32
  %350 = add nsw i32 %200, 2
  %351 = sub nsw i32 %340, %350
  %352 = and i32 %343, %351
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds i8, ptr %85, i64 %353
  %355 = load i8, ptr %354, align 1, !tbaa !27
  %356 = lshr i8 %355, 2
  %357 = zext i8 %356 to i32
  %358 = mul nuw nsw i32 %349, 30005491
  %359 = mul nuw i32 %357, 50004239
  %360 = add nuw i32 %358, 1220013547
  %361 = add i32 %360, %359
  %362 = lshr i32 %361, 9
  %363 = lshr i32 %349, 3
  %364 = lshr i32 %357, 4
  %365 = xor i32 %363, %364
  %366 = xor i32 %365, %362
  %367 = xor i32 %366, %361
  %368 = xor i32 %367, 67108865
  %369 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %370 = add nsw i32 %369, 1
  store i32 %370, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %371 = mul i32 %368, 987654323
  %372 = add i32 %371, %369
  %373 = tail call i32 @llvm.fshl.i32(i32 %372, i32 %372, i32 16)
  %374 = mul i32 %373, 123456791
  %375 = add i32 %374, %369
  %376 = sext i32 %369 to i64
  %377 = getelementptr inbounds i32, ptr %150, i64 %376
  store i32 %375, ptr %377, align 4, !tbaa !18
  %378 = load i32, ptr @pos, align 4, !tbaa !18
  %379 = sub nsw i32 %378, %90
  %380 = load i32, ptr @buf, align 8, !tbaa !23
  %381 = add nsw i32 %380, -1
  %382 = and i32 %381, %379
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds i8, ptr %85, i64 %383
  %385 = load i8, ptr %384, align 1, !tbaa !27
  %386 = lshr i8 %385, 2
  %387 = zext i8 %386 to i32
  %388 = add nsw i32 %200, -2
  %389 = sub nsw i32 %378, %388
  %390 = and i32 %381, %389
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i8, ptr %85, i64 %391
  %393 = load i8, ptr %392, align 1, !tbaa !27
  %394 = lshr i8 %393, 2
  %395 = zext i8 %394 to i32
  %396 = mul nuw nsw i32 %387, 30005491
  %397 = mul nuw i32 %395, 50004239
  %398 = add nuw i32 %396, 1420016526
  %399 = add i32 %398, %397
  %400 = lshr i32 %399, 9
  %401 = lshr i32 %387, 3
  %402 = lshr i32 %395, 4
  %403 = xor i32 %401, %402
  %404 = xor i32 %403, %400
  %405 = xor i32 %404, %399
  %406 = xor i32 %405, 67108866
  %407 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %408 = add nsw i32 %407, 1
  store i32 %408, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %409 = mul i32 %406, 987654323
  %410 = add i32 %409, %407
  %411 = tail call i32 @llvm.fshl.i32(i32 %410, i32 %410, i32 16)
  %412 = mul i32 %411, 123456791
  %413 = add i32 %412, %407
  %414 = sext i32 %407 to i64
  %415 = getelementptr inbounds i32, ptr %150, i64 %414
  store i32 %413, ptr %415, align 4, !tbaa !18
  %416 = load i32, ptr @pos, align 4, !tbaa !18
  %417 = add nsw i32 %416, -1
  %418 = load i32, ptr @buf, align 8, !tbaa !23
  %419 = add nsw i32 %418, -1
  %420 = and i32 %419, %417
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds i8, ptr %85, i64 %421
  %423 = load i8, ptr %422, align 1, !tbaa !27
  %424 = zext i8 %423 to i32
  %425 = sub nsw i32 %416, %1
  %426 = and i32 %419, %425
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds i8, ptr %85, i64 %427
  %429 = load i8, ptr %428, align 1, !tbaa !27
  %430 = zext i8 %429 to i32
  %431 = add nuw nsw i32 %430, %424
  %432 = lshr i32 %431, 1
  %433 = mul i32 %432, 30005491
  %434 = add i32 %433, 1570015266
  %435 = lshr i32 %434, 9
  %436 = lshr i32 %431, 4
  %437 = xor i32 %436, %435
  %438 = xor i32 %437, %434
  %439 = xor i32 %438, 201326589
  %440 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %441 = add nsw i32 %440, 1
  store i32 %441, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %442 = mul i32 %439, 987654323
  %443 = add i32 %442, %440
  %444 = tail call i32 @llvm.fshl.i32(i32 %443, i32 %443, i32 16)
  %445 = mul i32 %444, 123456791
  %446 = add i32 %445, %440
  %447 = sext i32 %440 to i64
  %448 = getelementptr inbounds i32, ptr %150, i64 %447
  store i32 %446, ptr %448, align 4, !tbaa !18
  %449 = load i32, ptr @pos, align 4, !tbaa !18
  %450 = add nsw i32 %449, -1
  %451 = load i32, ptr @buf, align 8, !tbaa !23
  %452 = add nsw i32 %451, -1
  %453 = and i32 %452, %450
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds i8, ptr %85, i64 %454
  %456 = load i8, ptr %455, align 1, !tbaa !27
  %457 = zext i8 %456 to i32
  %458 = add nsw i32 %449, -2
  %459 = and i32 %452, %458
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds i8, ptr %85, i64 %460
  %462 = load i8, ptr %461, align 1, !tbaa !27
  %463 = zext i8 %462 to i32
  %464 = add nuw nsw i32 %463, %457
  %465 = lshr i32 %464, 1
  %466 = mul i32 %465, 30005491
  %467 = add i32 %466, 1770018245
  %468 = lshr i32 %467, 9
  %469 = lshr i32 %464, 4
  %470 = xor i32 %469, %468
  %471 = xor i32 %470, %467
  %472 = xor i32 %471, 201326589
  %473 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %474 = add nsw i32 %473, 1
  store i32 %474, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %475 = mul i32 %472, 987654323
  %476 = add i32 %475, %473
  %477 = tail call i32 @llvm.fshl.i32(i32 %476, i32 %476, i32 16)
  %478 = mul i32 %477, 123456791
  %479 = add i32 %478, %473
  %480 = sext i32 %473 to i64
  %481 = getelementptr inbounds i32, ptr %150, i64 %480
  store i32 %479, ptr %481, align 4, !tbaa !18
  %482 = load i32, ptr @pos, align 4, !tbaa !18
  %483 = sub nsw i32 %482, %1
  %484 = load i32, ptr @buf, align 8, !tbaa !23
  %485 = add nsw i32 %484, -1
  %486 = and i32 %485, %483
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds i8, ptr %85, i64 %487
  %489 = load i8, ptr %488, align 1, !tbaa !27
  %490 = zext i8 %489 to i32
  %491 = sub nsw i32 %482, %200
  %492 = and i32 %485, %491
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds i8, ptr %85, i64 %493
  %495 = load i8, ptr %494, align 1, !tbaa !27
  %496 = zext i8 %495 to i32
  %497 = add nuw nsw i32 %496, %490
  %498 = lshr i32 %497, 1
  %499 = mul i32 %498, 30005491
  %500 = add i32 %499, 1970021224
  %501 = lshr i32 %500, 9
  %502 = lshr i32 %497, 4
  %503 = xor i32 %502, %501
  %504 = xor i32 %503, %500
  %505 = xor i32 %504, 201326589
  %506 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %507 = add nsw i32 %506, 1
  store i32 %507, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %508 = mul i32 %505, 987654323
  %509 = add i32 %508, %506
  %510 = tail call i32 @llvm.fshl.i32(i32 %509, i32 %509, i32 16)
  %511 = mul i32 %510, 123456791
  %512 = add i32 %511, %506
  %513 = sext i32 %506 to i64
  %514 = getelementptr inbounds i32, ptr %150, i64 %513
  store i32 %512, ptr %514, align 4, !tbaa !18
  %515 = load i32, ptr @pos, align 4, !tbaa !18
  %516 = add nsw i32 %515, -1
  %517 = load i32, ptr @buf, align 8, !tbaa !23
  %518 = add nsw i32 %517, -1
  %519 = and i32 %518, %516
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds i8, ptr %85, i64 %520
  %522 = load i8, ptr %521, align 1, !tbaa !27
  %523 = zext i8 %522 to i32
  %524 = sub nsw i32 %515, %90
  %525 = and i32 %518, %524
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds i8, ptr %85, i64 %526
  %528 = load i8, ptr %527, align 1, !tbaa !27
  %529 = zext i8 %528 to i32
  %530 = add nuw nsw i32 %529, %523
  %531 = lshr i32 %530, 1
  %532 = mul i32 %531, 30005491
  %533 = add i32 %532, -2124943093
  %534 = lshr i32 %533, 9
  %535 = lshr i32 %530, 4
  %536 = xor i32 %535, %534
  %537 = xor i32 %536, %533
  %538 = xor i32 %537, 201326588
  %539 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %540 = add nsw i32 %539, 1
  store i32 %540, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %541 = mul i32 %538, 987654323
  %542 = add i32 %541, %539
  %543 = tail call i32 @llvm.fshl.i32(i32 %542, i32 %542, i32 16)
  %544 = mul i32 %543, 123456791
  %545 = add i32 %544, %539
  %546 = sext i32 %539 to i64
  %547 = getelementptr inbounds i32, ptr %150, i64 %546
  store i32 %545, ptr %547, align 4, !tbaa !18
  %548 = load i32, ptr @pos, align 4, !tbaa !18
  %549 = sub nsw i32 %548, %1
  %550 = load i32, ptr @buf, align 8, !tbaa !23
  %551 = add nsw i32 %550, -1
  %552 = and i32 %551, %549
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds i8, ptr %85, i64 %553
  %555 = load i8, ptr %554, align 1, !tbaa !27
  %556 = zext i8 %555 to i32
  %557 = sub nsw i32 %548, %105
  %558 = and i32 %551, %557
  %559 = sext i32 %558 to i64
  %560 = getelementptr inbounds i8, ptr %85, i64 %559
  %561 = load i8, ptr %560, align 1, !tbaa !27
  %562 = zext i8 %561 to i32
  %563 = add nuw nsw i32 %562, %556
  %564 = lshr i32 %563, 1
  %565 = mul i32 %564, 30005491
  %566 = add i32 %565, -1924940114
  %567 = lshr i32 %566, 9
  %568 = lshr i32 %563, 4
  %569 = xor i32 %568, %567
  %570 = xor i32 %569, %566
  %571 = xor i32 %570, 201326588
  %572 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %573 = add nsw i32 %572, 1
  store i32 %573, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %574 = mul i32 %571, 987654323
  %575 = add i32 %574, %572
  %576 = tail call i32 @llvm.fshl.i32(i32 %575, i32 %575, i32 16)
  %577 = mul i32 %576, 123456791
  %578 = add i32 %577, %572
  %579 = sext i32 %572 to i64
  %580 = getelementptr inbounds i32, ptr %150, i64 %579
  store i32 %578, ptr %580, align 4, !tbaa !18
  %581 = load i32, ptr @pos, align 4, !tbaa !18
  %582 = sub nsw i32 %581, %105
  %583 = load i32, ptr @buf, align 8, !tbaa !23
  %584 = add nsw i32 %583, -1
  %585 = and i32 %584, %582
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds i8, ptr %85, i64 %586
  %588 = load i8, ptr %587, align 1, !tbaa !27
  %589 = zext i8 %588 to i32
  %590 = sub nsw i32 %581, %312
  %591 = and i32 %584, %590
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds i8, ptr %85, i64 %592
  %594 = load i8, ptr %593, align 1, !tbaa !27
  %595 = zext i8 %594 to i32
  %596 = add nuw nsw i32 %595, %589
  %597 = lshr i32 %596, 1
  %598 = mul i32 %597, 30005491
  %599 = add i32 %598, -1724937135
  %600 = lshr i32 %599, 9
  %601 = lshr i32 %596, 4
  %602 = xor i32 %601, %600
  %603 = xor i32 %602, %599
  %604 = xor i32 %603, 201326588
  %605 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %606 = add nsw i32 %605, 1
  store i32 %606, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %607 = mul i32 %604, 987654323
  %608 = add i32 %607, %605
  %609 = tail call i32 @llvm.fshl.i32(i32 %608, i32 %608, i32 16)
  %610 = mul i32 %609, 123456791
  %611 = add i32 %610, %605
  %612 = sext i32 %605 to i64
  %613 = getelementptr inbounds i32, ptr %150, i64 %612
  store i32 %611, ptr %613, align 4, !tbaa !18
  %614 = load i32, ptr @pos, align 4, !tbaa !18
  %615 = sub nsw i32 %614, %105
  %616 = load i32, ptr @buf, align 8, !tbaa !23
  %617 = add nsw i32 %616, -1
  %618 = and i32 %617, %615
  %619 = sext i32 %618 to i64
  %620 = getelementptr inbounds i8, ptr %85, i64 %619
  %621 = load i8, ptr %620, align 1, !tbaa !27
  %622 = zext i8 %621 to i32
  %623 = sub nsw i32 %614, %350
  %624 = and i32 %617, %623
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds i8, ptr %85, i64 %625
  %627 = load i8, ptr %626, align 1, !tbaa !27
  %628 = zext i8 %627 to i32
  %629 = add nuw nsw i32 %628, %622
  %630 = lshr i32 %629, 1
  %631 = mul i32 %630, 30005491
  %632 = add i32 %631, -1524934156
  %633 = lshr i32 %632, 9
  %634 = lshr i32 %629, 4
  %635 = xor i32 %634, %633
  %636 = xor i32 %635, %632
  %637 = xor i32 %636, 201326588
  %638 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %639 = add nsw i32 %638, 1
  store i32 %639, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %640 = mul i32 %637, 987654323
  %641 = add i32 %640, %638
  %642 = tail call i32 @llvm.fshl.i32(i32 %641, i32 %641, i32 16)
  %643 = mul i32 %642, 123456791
  %644 = add i32 %643, %638
  %645 = sext i32 %638 to i64
  %646 = getelementptr inbounds i32, ptr %150, i64 %645
  store i32 %644, ptr %646, align 4, !tbaa !18
  %647 = load i32, ptr @pos, align 4, !tbaa !18
  %648 = sub nsw i32 %647, %90
  %649 = load i32, ptr @buf, align 8, !tbaa !23
  %650 = add nsw i32 %649, -1
  %651 = and i32 %650, %648
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds i8, ptr %85, i64 %652
  %654 = load i8, ptr %653, align 1, !tbaa !27
  %655 = zext i8 %654 to i32
  %656 = sub nsw i32 %647, %388
  %657 = and i32 %650, %656
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds i8, ptr %85, i64 %658
  %660 = load i8, ptr %659, align 1, !tbaa !27
  %661 = zext i8 %660 to i32
  %662 = add nuw nsw i32 %661, %655
  %663 = lshr i32 %662, 1
  %664 = mul i32 %663, 30005491
  %665 = add i32 %664, -1324931177
  %666 = lshr i32 %665, 9
  %667 = lshr i32 %662, 4
  %668 = xor i32 %667, %666
  %669 = xor i32 %668, %665
  %670 = xor i32 %669, 201326587
  %671 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %672 = add nsw i32 %671, 1
  store i32 %672, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %673 = mul i32 %670, 987654323
  %674 = add i32 %673, %671
  %675 = tail call i32 @llvm.fshl.i32(i32 %674, i32 %674, i32 16)
  %676 = mul i32 %675, 123456791
  %677 = add i32 %676, %671
  %678 = sext i32 %671 to i64
  %679 = getelementptr inbounds i32, ptr %150, i64 %678
  store i32 %677, ptr %679, align 4, !tbaa !18
  %680 = load i32, ptr @pos, align 4, !tbaa !18
  %681 = sub nsw i32 %680, %1
  %682 = load i32, ptr @buf, align 8, !tbaa !23
  %683 = add nsw i32 %682, -1
  %684 = and i32 %683, %681
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds i8, ptr %85, i64 %685
  %687 = load i8, ptr %686, align 1, !tbaa !27
  %688 = lshr i8 %687, 2
  %689 = zext i8 %688 to i32
  %690 = add nsw i32 %680, -1
  %691 = and i32 %683, %690
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds i8, ptr %85, i64 %692
  %694 = load i8, ptr %693, align 1, !tbaa !27
  %695 = lshr i8 %694, 2
  %696 = zext i8 %695 to i32
  %697 = sub nsw i32 %680, %90
  %698 = and i32 %683, %697
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds i8, ptr %85, i64 %699
  %701 = load i8, ptr %700, align 1, !tbaa !27
  %702 = lshr i8 %701, 2
  %703 = zext i8 %702 to i32
  %704 = mul nuw nsw i32 %689, 30005491
  %705 = mul nuw i32 %696, 50004239
  %706 = mul i32 %703, 70004807
  %707 = add nsw i32 %704, -1004919152
  %708 = add i32 %707, %705
  %709 = add i32 %708, %706
  %710 = lshr i32 %709, 9
  %711 = lshr i32 %689, 3
  %712 = lshr i32 %696, 4
  %713 = lshr i32 %703, 5
  %714 = xor i32 %711, %712
  %715 = xor i32 %714, %713
  %716 = xor i32 %715, %710
  %717 = xor i32 %716, %709
  %718 = xor i32 %717, 67108859
  %719 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %720 = add nsw i32 %719, 1
  store i32 %720, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %721 = mul i32 %718, 987654323
  %722 = add i32 %721, %719
  %723 = tail call i32 @llvm.fshl.i32(i32 %722, i32 %722, i32 16)
  %724 = mul i32 %723, 123456791
  %725 = add i32 %724, %719
  %726 = sext i32 %719 to i64
  %727 = getelementptr inbounds i32, ptr %150, i64 %726
  store i32 %725, ptr %727, align 4, !tbaa !18
  %728 = load i32, ptr @pos, align 4, !tbaa !18
  %729 = sub nsw i32 %728, %90
  %730 = load i32, ptr @buf, align 8, !tbaa !23
  %731 = add nsw i32 %730, -1
  %732 = and i32 %731, %729
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds i8, ptr %85, i64 %733
  %735 = load i8, ptr %734, align 1, !tbaa !27
  %736 = lshr i8 %735, 2
  %737 = zext i8 %736 to i32
  %738 = sub nsw i32 %728, %1
  %739 = and i32 %731, %738
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds i8, ptr %85, i64 %740
  %742 = load i8, ptr %741, align 1, !tbaa !27
  %743 = lshr i8 %742, 2
  %744 = zext i8 %743 to i32
  %745 = sub nsw i32 %728, %105
  %746 = and i32 %731, %745
  %747 = sext i32 %746 to i64
  %748 = getelementptr inbounds i8, ptr %85, i64 %747
  %749 = load i8, ptr %748, align 1, !tbaa !27
  %750 = lshr i8 %749, 2
  %751 = zext i8 %750 to i32
  %752 = mul nuw nsw i32 %737, 30005491
  %753 = mul nuw i32 %744, 50004239
  %754 = mul i32 %751, 70004807
  %755 = add nsw i32 %752, -804916173
  %756 = add i32 %755, %753
  %757 = add i32 %756, %754
  %758 = lshr i32 %757, 9
  %759 = lshr i32 %737, 3
  %760 = lshr i32 %744, 4
  %761 = lshr i32 %751, 5
  %762 = xor i32 %759, %760
  %763 = xor i32 %762, %761
  %764 = xor i32 %763, %758
  %765 = xor i32 %764, %757
  %766 = xor i32 %765, 67108859
  %767 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %768 = add nsw i32 %767, 1
  store i32 %768, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %769 = mul i32 %766, 987654323
  %770 = add i32 %769, %767
  %771 = tail call i32 @llvm.fshl.i32(i32 %770, i32 %770, i32 16)
  %772 = mul i32 %771, 123456791
  %773 = add i32 %772, %767
  %774 = sext i32 %767 to i64
  %775 = getelementptr inbounds i32, ptr %150, i64 %774
  store i32 %773, ptr %775, align 4, !tbaa !18
  %776 = load i32, ptr @pos, align 4, !tbaa !18
  %777 = add nsw i32 %776, -1
  %778 = load i32, ptr @buf, align 8, !tbaa !23
  %779 = add nsw i32 %778, -1
  %780 = and i32 %779, %777
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds i8, ptr %85, i64 %781
  %783 = load i8, ptr %782, align 1, !tbaa !27
  %784 = lshr i8 %783, 2
  %785 = zext i8 %784 to i32
  %786 = sub nsw i32 %776, %90
  %787 = and i32 %779, %786
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds i8, ptr %85, i64 %788
  %790 = load i8, ptr %789, align 1, !tbaa !27
  %791 = lshr i8 %790, 2
  %792 = zext i8 %791 to i32
  %793 = sub i32 %776, %200
  %794 = add i32 %793, 1
  %795 = and i32 %779, %794
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds i8, ptr %85, i64 %796
  %798 = load i8, ptr %797, align 1, !tbaa !27
  %799 = lshr i8 %798, 2
  %800 = zext i8 %799 to i32
  %801 = mul nuw nsw i32 %785, 30005491
  %802 = mul nuw i32 %792, 50004239
  %803 = mul i32 %800, 70004807
  %804 = add nsw i32 %801, -604913194
  %805 = add i32 %804, %802
  %806 = add i32 %805, %803
  %807 = lshr i32 %806, 9
  %808 = lshr i32 %785, 3
  %809 = lshr i32 %792, 4
  %810 = lshr i32 %800, 5
  %811 = xor i32 %808, %809
  %812 = xor i32 %811, %810
  %813 = xor i32 %812, %807
  %814 = xor i32 %813, %806
  %815 = xor i32 %814, 67108859
  %816 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %817 = add nsw i32 %816, 1
  store i32 %817, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %818 = mul i32 %815, 987654323
  %819 = add i32 %818, %816
  %820 = tail call i32 @llvm.fshl.i32(i32 %819, i32 %819, i32 16)
  %821 = mul i32 %820, 123456791
  %822 = add i32 %821, %816
  %823 = sext i32 %816 to i64
  %824 = getelementptr inbounds i32, ptr %150, i64 %823
  store i32 %822, ptr %824, align 4, !tbaa !18
  %825 = load i32, ptr @pos, align 4, !tbaa !18
  %826 = add nsw i32 %825, -3
  %827 = load i32, ptr @buf, align 8, !tbaa !23
  %828 = add nsw i32 %827, -1
  %829 = and i32 %828, %826
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds i8, ptr %85, i64 %830
  %832 = load i8, ptr %831, align 1, !tbaa !27
  %833 = zext i8 %832 to i32
  %834 = sub nsw i32 %825, %1
  %835 = and i32 %828, %834
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds i8, ptr %85, i64 %836
  %838 = load i8, ptr %837, align 1, !tbaa !27
  %839 = zext i8 %838 to i32
  %840 = add nuw nsw i32 %839, %833
  %841 = lshr i32 %840, 1
  %842 = add nsw i32 %825, -1
  %843 = and i32 %828, %842
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds i8, ptr %85, i64 %844
  %846 = load i8, ptr %845, align 1, !tbaa !27
  %847 = lshr i8 %846, 2
  %848 = zext i8 %847 to i32
  %849 = add nsw i32 %825, -2
  %850 = and i32 %828, %849
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds i8, ptr %85, i64 %851
  %853 = load i8, ptr %852, align 1, !tbaa !27
  %854 = lshr i8 %853, 2
  %855 = zext i8 %854 to i32
  %856 = mul i32 %841, 30005491
  %857 = mul nuw i32 %848, 50004239
  %858 = mul i32 %855, 70004807
  %859 = add i32 %856, -404910215
  %860 = add i32 %859, %857
  %861 = add i32 %860, %858
  %862 = lshr i32 %861, 9
  %863 = lshr i32 %855, 5
  %864 = xor i32 %840, %848
  %865 = lshr i32 %864, 4
  %866 = or i32 %863, 67108858
  %867 = xor i32 %866, %865
  %868 = xor i32 %867, %862
  %869 = xor i32 %868, %861
  %870 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %871 = add nsw i32 %870, 1
  store i32 %871, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %872 = mul i32 %869, 987654323
  %873 = add i32 %872, %870
  %874 = tail call i32 @llvm.fshl.i32(i32 %873, i32 %873, i32 16)
  %875 = mul i32 %874, 123456791
  %876 = add i32 %875, %870
  %877 = sext i32 %870 to i64
  %878 = getelementptr inbounds i32, ptr %150, i64 %877
  store i32 %876, ptr %878, align 4, !tbaa !18
  %879 = load i32, ptr @pos, align 4, !tbaa !18
  %880 = add nsw i32 %879, -2
  %881 = load i32, ptr @buf, align 8, !tbaa !23
  %882 = add nsw i32 %881, -1
  %883 = and i32 %882, %880
  %884 = sext i32 %883 to i64
  %885 = getelementptr inbounds i8, ptr %85, i64 %884
  %886 = load i8, ptr %885, align 1, !tbaa !27
  %887 = zext i8 %886 to i32
  %888 = add nsw i32 %879, -1
  %889 = and i32 %882, %888
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds i8, ptr %85, i64 %890
  %892 = load i8, ptr %891, align 1, !tbaa !27
  %893 = zext i8 %892 to i32
  %894 = add nuw nsw i32 %893, %887
  %895 = lshr i32 %894, 1
  %896 = sub nsw i32 %879, %1
  %897 = and i32 %882, %896
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds i8, ptr %85, i64 %898
  %900 = load i8, ptr %899, align 1, !tbaa !27
  %901 = zext i8 %900 to i32
  %902 = sub nsw i32 %879, %200
  %903 = and i32 %882, %902
  %904 = sext i32 %903 to i64
  %905 = getelementptr inbounds i8, ptr %85, i64 %904
  %906 = load i8, ptr %905, align 1, !tbaa !27
  %907 = zext i8 %906 to i32
  %908 = add nuw nsw i32 %907, %901
  %909 = lshr i32 %908, 1
  %910 = sub nsw i32 %879, %90
  %911 = and i32 %882, %910
  %912 = sext i32 %911 to i64
  %913 = getelementptr inbounds i8, ptr %85, i64 %912
  %914 = load i8, ptr %913, align 1, !tbaa !27
  %915 = lshr i8 %914, 2
  %916 = zext i8 %915 to i32
  %917 = mul i32 %895, 30005491
  %918 = mul i32 %909, 50004239
  %919 = mul i32 %916, 70004807
  %920 = add i32 %917, -204907236
  %921 = add i32 %920, %918
  %922 = add i32 %921, %919
  %923 = lshr i32 %922, 9
  %924 = lshr i32 %894, 4
  %925 = lshr i32 %908, 5
  %926 = lshr i32 %916, 5
  %927 = xor i32 %924, %925
  %928 = xor i32 %927, %926
  %929 = xor i32 %928, %923
  %930 = xor i32 %929, %922
  %931 = xor i32 %930, 67108858
  %932 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %933 = add nsw i32 %932, 1
  store i32 %933, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %934 = mul i32 %931, 987654323
  %935 = add i32 %934, %932
  %936 = tail call i32 @llvm.fshl.i32(i32 %935, i32 %935, i32 16)
  %937 = mul i32 %936, 123456791
  %938 = add i32 %937, %932
  %939 = sext i32 %932 to i64
  %940 = getelementptr inbounds i32, ptr %150, i64 %939
  store i32 %938, ptr %940, align 4, !tbaa !18
  %941 = load i32, ptr @pos, align 4, !tbaa !18
  %942 = add nsw i32 %941, -2
  %943 = load i32, ptr @buf, align 8, !tbaa !23
  %944 = add nsw i32 %943, -1
  %945 = and i32 %944, %942
  %946 = sext i32 %945 to i64
  %947 = getelementptr inbounds i8, ptr %85, i64 %946
  %948 = load i8, ptr %947, align 1, !tbaa !27
  %949 = zext i8 %948 to i32
  %950 = add nsw i32 %941, -1
  %951 = and i32 %944, %950
  %952 = sext i32 %951 to i64
  %953 = getelementptr inbounds i8, ptr %85, i64 %952
  %954 = load i8, ptr %953, align 1, !tbaa !27
  %955 = zext i8 %954 to i32
  %956 = add nuw nsw i32 %955, %949
  %957 = lshr i32 %956, 2
  %958 = sub nsw i32 %941, %90
  %959 = and i32 %944, %958
  %960 = sext i32 %959 to i64
  %961 = getelementptr inbounds i8, ptr %85, i64 %960
  %962 = load i8, ptr %961, align 1, !tbaa !27
  %963 = zext i8 %962 to i32
  %964 = sub nsw i32 %941, %1
  %965 = and i32 %944, %964
  %966 = sext i32 %965 to i64
  %967 = getelementptr inbounds i8, ptr %85, i64 %966
  %968 = load i8, ptr %967, align 1, !tbaa !27
  %969 = zext i8 %968 to i32
  %970 = add nuw nsw i32 %969, %963
  %971 = lshr i32 %970, 2
  %972 = mul nuw i32 %957, 30005491
  %973 = mul i32 %971, 50004239
  %974 = add i32 %972, -74909064
  %975 = add i32 %974, %973
  %976 = lshr i32 %975, 9
  %977 = lshr i32 %956, 5
  %978 = lshr i32 %970, 6
  %979 = xor i32 %977, %978
  %980 = xor i32 %979, %976
  %981 = xor i32 %980, %975
  %982 = xor i32 %981, 67108869
  %983 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %984 = add nsw i32 %983, 1
  store i32 %984, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %985 = mul i32 %982, 987654323
  %986 = add i32 %985, %983
  %987 = tail call i32 @llvm.fshl.i32(i32 %986, i32 %986, i32 16)
  %988 = mul i32 %987, 123456791
  %989 = add i32 %988, %983
  %990 = sext i32 %983 to i64
  %991 = getelementptr inbounds i32, ptr %150, i64 %990
  store i32 %989, ptr %991, align 4, !tbaa !18
  %992 = load i32, ptr @pos, align 4, !tbaa !18
  %993 = add nsw i32 %992, -2
  %994 = load i32, ptr @buf, align 8, !tbaa !23
  %995 = add nsw i32 %994, -1
  %996 = and i32 %995, %993
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds i8, ptr %85, i64 %997
  %999 = load i8, ptr %998, align 1, !tbaa !27
  %1000 = zext i8 %999 to i32
  %1001 = add nsw i32 %992, -1
  %1002 = and i32 %995, %1001
  %1003 = sext i32 %1002 to i64
  %1004 = getelementptr inbounds i8, ptr %85, i64 %1003
  %1005 = load i8, ptr %1004, align 1, !tbaa !27
  %1006 = zext i8 %1005 to i32
  %1007 = add nuw nsw i32 %1006, %1000
  %1008 = lshr i32 %1007, 1
  %1009 = sub nsw i32 %992, %1
  %1010 = and i32 %995, %1009
  %1011 = sext i32 %1010 to i64
  %1012 = getelementptr inbounds i8, ptr %85, i64 %1011
  %1013 = load i8, ptr %1012, align 1, !tbaa !27
  %1014 = zext i8 %1013 to i32
  %1015 = sub nsw i32 %992, %200
  %1016 = and i32 %995, %1015
  %1017 = sext i32 %1016 to i64
  %1018 = getelementptr inbounds i8, ptr %85, i64 %1017
  %1019 = load i8, ptr %1018, align 1, !tbaa !27
  %1020 = zext i8 %1019 to i32
  %1021 = add nuw nsw i32 %1020, %1014
  %1022 = lshr i32 %1021, 1
  %1023 = mul i32 %1008, 30005491
  %1024 = mul i32 %1022, 50004239
  %1025 = add i32 %1023, 125093915
  %1026 = add i32 %1025, %1024
  %1027 = lshr i32 %1026, 9
  %1028 = lshr i32 %1007, 4
  %1029 = lshr i32 %1021, 5
  %1030 = xor i32 %1028, %1029
  %1031 = xor i32 %1030, %1027
  %1032 = xor i32 %1031, %1026
  %1033 = xor i32 %1032, 67108869
  %1034 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1035 = add nsw i32 %1034, 1
  store i32 %1035, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1036 = mul i32 %1033, 987654323
  %1037 = add i32 %1036, %1034
  %1038 = tail call i32 @llvm.fshl.i32(i32 %1037, i32 %1037, i32 16)
  %1039 = mul i32 %1038, 123456791
  %1040 = add i32 %1039, %1034
  %1041 = sext i32 %1034 to i64
  %1042 = getelementptr inbounds i32, ptr %150, i64 %1041
  store i32 %1040, ptr %1042, align 4, !tbaa !18
  %1043 = load i32, ptr @pos, align 4, !tbaa !18
  %1044 = add nsw i32 %1043, -2
  %1045 = load i32, ptr @buf, align 8, !tbaa !23
  %1046 = add nsw i32 %1045, -1
  %1047 = and i32 %1046, %1044
  %1048 = sext i32 %1047 to i64
  %1049 = getelementptr inbounds i8, ptr %85, i64 %1048
  %1050 = load i8, ptr %1049, align 1, !tbaa !27
  %1051 = zext i8 %1050 to i32
  %1052 = add nsw i32 %1043, -1
  %1053 = and i32 %1046, %1052
  %1054 = sext i32 %1053 to i64
  %1055 = getelementptr inbounds i8, ptr %85, i64 %1054
  %1056 = load i8, ptr %1055, align 1, !tbaa !27
  %1057 = zext i8 %1056 to i32
  %1058 = add nuw nsw i32 %1057, %1051
  %1059 = lshr i32 %1058, 1
  %1060 = sub nsw i32 %1043, %90
  %1061 = and i32 %1046, %1060
  %1062 = sext i32 %1061 to i64
  %1063 = getelementptr inbounds i8, ptr %85, i64 %1062
  %1064 = load i8, ptr %1063, align 1, !tbaa !27
  %1065 = zext i8 %1064 to i32
  %1066 = sub nsw i32 %1043, %388
  %1067 = and i32 %1046, %1066
  %1068 = sext i32 %1067 to i64
  %1069 = getelementptr inbounds i8, ptr %85, i64 %1068
  %1070 = load i8, ptr %1069, align 1, !tbaa !27
  %1071 = zext i8 %1070 to i32
  %1072 = add nuw nsw i32 %1071, %1065
  %1073 = lshr i32 %1072, 1
  %1074 = mul i32 %1059, 30005491
  %1075 = mul i32 %1073, 50004239
  %1076 = add i32 %1074, 325096894
  %1077 = add i32 %1076, %1075
  %1078 = lshr i32 %1077, 9
  %1079 = lshr i32 %1058, 4
  %1080 = lshr i32 %1072, 5
  %1081 = xor i32 %1079, %1080
  %1082 = xor i32 %1081, %1078
  %1083 = xor i32 %1082, %1077
  %1084 = xor i32 %1083, 67108870
  %1085 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1086 = add nsw i32 %1085, 1
  store i32 %1086, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1087 = mul i32 %1084, 987654323
  %1088 = add i32 %1087, %1085
  %1089 = tail call i32 @llvm.fshl.i32(i32 %1088, i32 %1088, i32 16)
  %1090 = mul i32 %1089, 123456791
  %1091 = add i32 %1090, %1085
  %1092 = sext i32 %1085 to i64
  %1093 = getelementptr inbounds i32, ptr %150, i64 %1092
  store i32 %1091, ptr %1093, align 4, !tbaa !18
  %1094 = load i32, ptr @pos, align 4, !tbaa !18
  %1095 = add nsw i32 %1094, -2
  %1096 = load i32, ptr @buf, align 8, !tbaa !23
  %1097 = add nsw i32 %1096, -1
  %1098 = and i32 %1097, %1095
  %1099 = sext i32 %1098 to i64
  %1100 = getelementptr inbounds i8, ptr %85, i64 %1099
  %1101 = load i8, ptr %1100, align 1, !tbaa !27
  %1102 = zext i8 %1101 to i32
  %1103 = add nsw i32 %1094, -1
  %1104 = and i32 %1097, %1103
  %1105 = sext i32 %1104 to i64
  %1106 = getelementptr inbounds i8, ptr %85, i64 %1105
  %1107 = load i8, ptr %1106, align 1, !tbaa !27
  %1108 = zext i8 %1107 to i32
  %1109 = add nuw nsw i32 %1108, %1102
  %1110 = lshr i32 %1109, 1
  %1111 = sub nsw i32 %1094, %105
  %1112 = and i32 %1097, %1111
  %1113 = sext i32 %1112 to i64
  %1114 = getelementptr inbounds i8, ptr %85, i64 %1113
  %1115 = load i8, ptr %1114, align 1, !tbaa !27
  %1116 = zext i8 %1115 to i32
  %1117 = sub nsw i32 %1094, %350
  %1118 = and i32 %1097, %1117
  %1119 = sext i32 %1118 to i64
  %1120 = getelementptr inbounds i8, ptr %85, i64 %1119
  %1121 = load i8, ptr %1120, align 1, !tbaa !27
  %1122 = zext i8 %1121 to i32
  %1123 = add nuw nsw i32 %1122, %1116
  %1124 = lshr i32 %1123, 1
  %1125 = mul i32 %1110, 30005491
  %1126 = mul i32 %1124, 50004239
  %1127 = add i32 %1125, 525099873
  %1128 = add i32 %1127, %1126
  %1129 = lshr i32 %1128, 9
  %1130 = lshr i32 %1109, 4
  %1131 = lshr i32 %1123, 5
  %1132 = xor i32 %1130, %1131
  %1133 = xor i32 %1132, %1129
  %1134 = xor i32 %1133, %1128
  %1135 = xor i32 %1134, 67108870
  %1136 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1137 = add nsw i32 %1136, 1
  store i32 %1137, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1138 = mul i32 %1135, 987654323
  %1139 = add i32 %1138, %1136
  %1140 = tail call i32 @llvm.fshl.i32(i32 %1139, i32 %1139, i32 16)
  %1141 = mul i32 %1140, 123456791
  %1142 = add i32 %1141, %1136
  %1143 = sext i32 %1136 to i64
  %1144 = getelementptr inbounds i32, ptr %150, i64 %1143
  store i32 %1142, ptr %1144, align 4, !tbaa !18
  %1145 = load i32, ptr @pos, align 4, !tbaa !18
  %1146 = sub nsw i32 %1145, %1
  %1147 = load i32, ptr @buf, align 8, !tbaa !23
  %1148 = add nsw i32 %1147, -1
  %1149 = and i32 %1148, %1146
  %1150 = sext i32 %1149 to i64
  %1151 = getelementptr inbounds i8, ptr %85, i64 %1150
  %1152 = load i8, ptr %1151, align 1, !tbaa !27
  %1153 = zext i8 %1152 to i32
  %1154 = sub nsw i32 %1145, %200
  %1155 = and i32 %1148, %1154
  %1156 = sext i32 %1155 to i64
  %1157 = getelementptr inbounds i8, ptr %85, i64 %1156
  %1158 = load i8, ptr %1157, align 1, !tbaa !27
  %1159 = zext i8 %1158 to i32
  %1160 = add nuw nsw i32 %1159, %1153
  %1161 = lshr i32 %1160, 1
  %1162 = sub nsw i32 %1145, %90
  %1163 = and i32 %1148, %1162
  %1164 = sext i32 %1163 to i64
  %1165 = getelementptr inbounds i8, ptr %85, i64 %1164
  %1166 = load i8, ptr %1165, align 1, !tbaa !27
  %1167 = zext i8 %1166 to i32
  %1168 = sub nsw i32 %1145, %350
  %1169 = and i32 %1148, %1168
  %1170 = sext i32 %1169 to i64
  %1171 = getelementptr inbounds i8, ptr %85, i64 %1170
  %1172 = load i8, ptr %1171, align 1, !tbaa !27
  %1173 = zext i8 %1172 to i32
  %1174 = add nuw nsw i32 %1173, %1167
  %1175 = lshr i32 %1174, 1
  %1176 = mul i32 %1161, 30005491
  %1177 = mul i32 %1175, 50004239
  %1178 = add i32 %1176, 725102852
  %1179 = add i32 %1178, %1177
  %1180 = lshr i32 %1179, 9
  %1181 = lshr i32 %1160, 4
  %1182 = lshr i32 %1174, 5
  %1183 = xor i32 %1181, %1182
  %1184 = xor i32 %1183, %1180
  %1185 = xor i32 %1184, %1179
  %1186 = xor i32 %1185, 67108870
  %1187 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1188 = add nsw i32 %1187, 1
  store i32 %1188, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1189 = mul i32 %1186, 987654323
  %1190 = add i32 %1189, %1187
  %1191 = tail call i32 @llvm.fshl.i32(i32 %1190, i32 %1190, i32 16)
  %1192 = mul i32 %1191, 123456791
  %1193 = add i32 %1192, %1187
  %1194 = sext i32 %1187 to i64
  %1195 = getelementptr inbounds i32, ptr %150, i64 %1194
  store i32 %1193, ptr %1195, align 4, !tbaa !18
  %1196 = load i32, ptr @pos, align 4, !tbaa !18
  %1197 = sub nsw i32 %1196, %90
  %1198 = load i32, ptr @buf, align 8, !tbaa !23
  %1199 = add nsw i32 %1198, -1
  %1200 = and i32 %1199, %1197
  %1201 = sext i32 %1200 to i64
  %1202 = getelementptr inbounds i8, ptr %85, i64 %1201
  %1203 = load i8, ptr %1202, align 1, !tbaa !27
  %1204 = zext i8 %1203 to i32
  %1205 = sub nsw i32 %1196, %1
  %1206 = and i32 %1199, %1205
  %1207 = sext i32 %1206 to i64
  %1208 = getelementptr inbounds i8, ptr %85, i64 %1207
  %1209 = load i8, ptr %1208, align 1, !tbaa !27
  %1210 = zext i8 %1209 to i32
  %1211 = add nuw nsw i32 %1210, %1204
  %1212 = lshr i32 %1211, 1
  %1213 = sub nsw i32 %1196, %105
  %1214 = and i32 %1199, %1213
  %1215 = sext i32 %1214 to i64
  %1216 = getelementptr inbounds i8, ptr %85, i64 %1215
  %1217 = load i8, ptr %1216, align 1, !tbaa !27
  %1218 = zext i8 %1217 to i32
  %1219 = add nuw nsw i32 %1218, %1210
  %1220 = lshr i32 %1219, 1
  %1221 = mul i32 %1212, 30005491
  %1222 = mul i32 %1220, 50004239
  %1223 = add i32 %1221, 925105831
  %1224 = add i32 %1223, %1222
  %1225 = lshr i32 %1224, 9
  %1226 = lshr i32 %1211, 4
  %1227 = lshr i32 %1219, 5
  %1228 = xor i32 %1226, %1227
  %1229 = xor i32 %1228, %1225
  %1230 = xor i32 %1229, %1224
  %1231 = xor i32 %1230, 67108870
  %1232 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1233 = add nsw i32 %1232, 1
  store i32 %1233, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1234 = mul i32 %1231, 987654323
  %1235 = add i32 %1234, %1232
  %1236 = tail call i32 @llvm.fshl.i32(i32 %1235, i32 %1235, i32 16)
  %1237 = mul i32 %1236, 123456791
  %1238 = add i32 %1237, %1232
  %1239 = sext i32 %1232 to i64
  %1240 = getelementptr inbounds i32, ptr %150, i64 %1239
  store i32 %1238, ptr %1240, align 4, !tbaa !18
  %1241 = load i32, ptr @pos, align 4, !tbaa !18
  %1242 = add nsw i32 %1241, -1
  %1243 = load i32, ptr @buf, align 8, !tbaa !23
  %1244 = add nsw i32 %1243, -1
  %1245 = and i32 %1244, %1242
  %1246 = sext i32 %1245 to i64
  %1247 = getelementptr inbounds i8, ptr %85, i64 %1246
  %1248 = load i8, ptr %1247, align 1, !tbaa !27
  %1249 = zext i8 %1248 to i32
  %1250 = sub nsw i32 %1241, %90
  %1251 = and i32 %1244, %1250
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds i8, ptr %85, i64 %1252
  %1254 = load i8, ptr %1253, align 1, !tbaa !27
  %1255 = zext i8 %1254 to i32
  %1256 = add nuw nsw i32 %1255, %1249
  %1257 = lshr i32 %1256, 1
  %1258 = sub nsw i32 %1241, %1
  %1259 = and i32 %1244, %1258
  %1260 = sext i32 %1259 to i64
  %1261 = getelementptr inbounds i8, ptr %85, i64 %1260
  %1262 = load i8, ptr %1261, align 1, !tbaa !27
  %1263 = zext i8 %1262 to i32
  %1264 = sub nsw i32 %1241, %200
  %1265 = and i32 %1244, %1264
  %1266 = sext i32 %1265 to i64
  %1267 = getelementptr inbounds i8, ptr %85, i64 %1266
  %1268 = load i8, ptr %1267, align 1, !tbaa !27
  %1269 = zext i8 %1268 to i32
  %1270 = add nuw nsw i32 %1269, %1263
  %1271 = lshr i32 %1270, 1
  %1272 = mul i32 %1257, 30005491
  %1273 = mul i32 %1271, 50004239
  %1274 = add i32 %1272, 1125108810
  %1275 = add i32 %1274, %1273
  %1276 = lshr i32 %1275, 9
  %1277 = lshr i32 %1256, 4
  %1278 = lshr i32 %1270, 5
  %1279 = xor i32 %1277, %1278
  %1280 = xor i32 %1279, %1276
  %1281 = xor i32 %1280, %1275
  %1282 = xor i32 %1281, 67108871
  %1283 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1284 = add nsw i32 %1283, 1
  store i32 %1284, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1285 = mul i32 %1282, 987654323
  %1286 = add i32 %1285, %1283
  %1287 = tail call i32 @llvm.fshl.i32(i32 %1286, i32 %1286, i32 16)
  %1288 = mul i32 %1287, 123456791
  %1289 = add i32 %1288, %1283
  %1290 = sext i32 %1283 to i64
  %1291 = getelementptr inbounds i32, ptr %150, i64 %1290
  store i32 %1289, ptr %1291, align 4, !tbaa !18
  %1292 = load i32, ptr @pos, align 4, !tbaa !18
  %1293 = add nsw i32 %1292, -1
  %1294 = load i32, ptr @buf, align 8, !tbaa !23
  %1295 = add nsw i32 %1294, -1
  %1296 = and i32 %1295, %1293
  %1297 = sext i32 %1296 to i64
  %1298 = getelementptr inbounds i8, ptr %85, i64 %1297
  %1299 = load i8, ptr %1298, align 1, !tbaa !27
  %1300 = zext i8 %1299 to i32
  %1301 = sub nsw i32 %1292, %90
  %1302 = and i32 %1295, %1301
  %1303 = sext i32 %1302 to i64
  %1304 = getelementptr inbounds i8, ptr %85, i64 %1303
  %1305 = load i8, ptr %1304, align 1, !tbaa !27
  %1306 = zext i8 %1305 to i32
  %1307 = add nuw nsw i32 %1306, %1300
  %1308 = lshr i32 %1307, 2
  %1309 = sub nsw i32 %1292, %1
  %1310 = and i32 %1295, %1309
  %1311 = sext i32 %1310 to i64
  %1312 = getelementptr inbounds i8, ptr %85, i64 %1311
  %1313 = load i8, ptr %1312, align 1, !tbaa !27
  %1314 = zext i8 %1313 to i32
  %1315 = sub nsw i32 %1292, %105
  %1316 = and i32 %1295, %1315
  %1317 = sext i32 %1316 to i64
  %1318 = getelementptr inbounds i8, ptr %85, i64 %1317
  %1319 = load i8, ptr %1318, align 1, !tbaa !27
  %1320 = zext i8 %1319 to i32
  %1321 = add nuw nsw i32 %1320, %1314
  %1322 = lshr i32 %1321, 2
  %1323 = mul nuw i32 %1308, 30005491
  %1324 = mul i32 %1322, 50004239
  %1325 = add i32 %1323, 1325111789
  %1326 = add i32 %1325, %1324
  %1327 = lshr i32 %1326, 9
  %1328 = lshr i32 %1307, 5
  %1329 = lshr i32 %1321, 6
  %1330 = xor i32 %1328, %1329
  %1331 = xor i32 %1330, %1327
  %1332 = xor i32 %1331, %1326
  %1333 = xor i32 %1332, 67108871
  %1334 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1335 = add nsw i32 %1334, 1
  store i32 %1335, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1336 = mul i32 %1333, 987654323
  %1337 = add i32 %1336, %1334
  %1338 = tail call i32 @llvm.fshl.i32(i32 %1337, i32 %1337, i32 16)
  %1339 = mul i32 %1338, 123456791
  %1340 = add i32 %1339, %1334
  %1341 = sext i32 %1334 to i64
  %1342 = getelementptr inbounds i32, ptr %150, i64 %1341
  store i32 %1340, ptr %1342, align 4, !tbaa !18
  %1343 = load i32, ptr @pos, align 4, !tbaa !18
  %1344 = add nsw i32 %1343, -1
  %1345 = load i32, ptr @buf, align 8, !tbaa !23
  %1346 = add nsw i32 %1345, -1
  %1347 = and i32 %1346, %1344
  %1348 = sext i32 %1347 to i64
  %1349 = getelementptr inbounds i8, ptr %85, i64 %1348
  %1350 = load i8, ptr %1349, align 1, !tbaa !27
  %1351 = zext i8 %1350 to i32
  %1352 = sub nsw i32 %1343, %90
  %1353 = and i32 %1346, %1352
  %1354 = sext i32 %1353 to i64
  %1355 = getelementptr inbounds i8, ptr %85, i64 %1354
  %1356 = load i8, ptr %1355, align 1, !tbaa !27
  %1357 = zext i8 %1356 to i32
  %1358 = sub nsw i32 %1351, %1357
  %1359 = ashr i32 %1358, 1
  %1360 = sub nsw i32 %1343, %1
  %1361 = and i32 %1346, %1360
  %1362 = sext i32 %1361 to i64
  %1363 = getelementptr inbounds i8, ptr %85, i64 %1362
  %1364 = load i8, ptr %1363, align 1, !tbaa !27
  %1365 = zext i8 %1364 to i32
  %1366 = add nsw i32 %1359, %1365
  %1367 = ashr i32 %1366, 2
  %1368 = mul i32 %1367, 30005491
  %1369 = add i32 %1368, 1475110529
  %1370 = lshr i32 %1369, 9
  %1371 = lshr i32 %1367, 3
  %1372 = xor i32 %1371, %1370
  %1373 = xor i32 %1372, %1369
  %1374 = xor i32 %1373, 201326584
  %1375 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1376 = add nsw i32 %1375, 1
  store i32 %1376, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1377 = mul i32 %1374, 987654323
  %1378 = add i32 %1377, %1375
  %1379 = tail call i32 @llvm.fshl.i32(i32 %1378, i32 %1378, i32 16)
  %1380 = mul i32 %1379, 123456791
  %1381 = add i32 %1380, %1375
  %1382 = sext i32 %1375 to i64
  %1383 = getelementptr inbounds i32, ptr %150, i64 %1382
  store i32 %1381, ptr %1383, align 4, !tbaa !18
  %1384 = load i32, ptr @pos, align 4, !tbaa !18
  %1385 = sub nsw i32 %1384, %90
  %1386 = load i32, ptr @buf, align 8, !tbaa !23
  %1387 = add nsw i32 %1386, -1
  %1388 = and i32 %1387, %1385
  %1389 = sext i32 %1388 to i64
  %1390 = getelementptr inbounds i8, ptr %85, i64 %1389
  %1391 = load i8, ptr %1390, align 1, !tbaa !27
  %1392 = zext i8 %1391 to i32
  %1393 = sub nsw i32 %1384, %1
  %1394 = and i32 %1387, %1393
  %1395 = sext i32 %1394 to i64
  %1396 = getelementptr inbounds i8, ptr %85, i64 %1395
  %1397 = load i8, ptr %1396, align 1, !tbaa !27
  %1398 = zext i8 %1397 to i32
  %1399 = sub nsw i32 %1392, %1398
  %1400 = ashr i32 %1399, 1
  %1401 = add nsw i32 %1384, -1
  %1402 = and i32 %1387, %1401
  %1403 = sext i32 %1402 to i64
  %1404 = getelementptr inbounds i8, ptr %85, i64 %1403
  %1405 = load i8, ptr %1404, align 1, !tbaa !27
  %1406 = zext i8 %1405 to i32
  %1407 = add nsw i32 %1400, %1406
  %1408 = ashr i32 %1407, 2
  %1409 = mul i32 %1408, 30005491
  %1410 = add i32 %1409, 1675113508
  %1411 = lshr i32 %1410, 9
  %1412 = lshr i32 %1408, 3
  %1413 = xor i32 %1412, %1411
  %1414 = xor i32 %1413, %1410
  %1415 = xor i32 %1414, 201326584
  %1416 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1417 = add nsw i32 %1416, 1
  store i32 %1417, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1418 = mul i32 %1415, 987654323
  %1419 = add i32 %1418, %1416
  %1420 = tail call i32 @llvm.fshl.i32(i32 %1419, i32 %1419, i32 16)
  %1421 = mul i32 %1420, 123456791
  %1422 = add i32 %1421, %1416
  %1423 = sext i32 %1416 to i64
  %1424 = getelementptr inbounds i32, ptr %150, i64 %1423
  store i32 %1422, ptr %1424, align 4, !tbaa !18
  %1425 = load i32, ptr @pos, align 4, !tbaa !18
  %1426 = add nsw i32 %1425, -1
  %1427 = load i32, ptr @buf, align 8, !tbaa !23
  %1428 = add nsw i32 %1427, -1
  %1429 = and i32 %1428, %1426
  %1430 = sext i32 %1429 to i64
  %1431 = getelementptr inbounds i8, ptr %85, i64 %1430
  %1432 = load i8, ptr %1431, align 1, !tbaa !27
  %1433 = zext i8 %1432 to i32
  %1434 = sub nsw i32 %1425, %90
  %1435 = and i32 %1428, %1434
  %1436 = sext i32 %1435 to i64
  %1437 = getelementptr inbounds i8, ptr %85, i64 %1436
  %1438 = load i8, ptr %1437, align 1, !tbaa !27
  %1439 = zext i8 %1438 to i32
  %1440 = sub nsw i32 %1439, %1433
  %1441 = sub nsw i32 %1425, %1
  %1442 = and i32 %1428, %1441
  %1443 = sext i32 %1442 to i64
  %1444 = getelementptr inbounds i8, ptr %85, i64 %1443
  %1445 = load i8, ptr %1444, align 1, !tbaa !27
  %1446 = zext i8 %1445 to i32
  %1447 = add nsw i32 %1440, %1446
  %1448 = ashr i32 %1447, 2
  %1449 = mul i32 %1448, 30005491
  %1450 = add i32 %1449, 1875116487
  %1451 = lshr i32 %1450, 9
  %1452 = lshr i32 %1448, 3
  %1453 = xor i32 %1452, %1451
  %1454 = xor i32 %1453, %1450
  %1455 = xor i32 %1454, 201326583
  %1456 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1457 = add nsw i32 %1456, 1
  store i32 %1457, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1458 = mul i32 %1455, 987654323
  %1459 = add i32 %1458, %1456
  %1460 = tail call i32 @llvm.fshl.i32(i32 %1459, i32 %1459, i32 16)
  %1461 = mul i32 %1460, 123456791
  %1462 = add i32 %1461, %1456
  %1463 = sext i32 %1456 to i64
  %1464 = getelementptr inbounds i32, ptr %150, i64 %1463
  store i32 %1462, ptr %1464, align 4, !tbaa !18
  %1465 = load i32, ptr @pos, align 4, !tbaa !18
  %1466 = add nsw i32 %1465, -1
  %1467 = load i32, ptr @buf, align 8, !tbaa !23
  %1468 = add nsw i32 %1467, -1
  %1469 = and i32 %1468, %1466
  %1470 = sext i32 %1469 to i64
  %1471 = getelementptr inbounds i8, ptr %85, i64 %1470
  %1472 = load i8, ptr %1471, align 1, !tbaa !27
  %1473 = zext i8 %1472 to i32
  %1474 = sub nsw i32 %1465, %1
  %1475 = and i32 %1468, %1474
  %1476 = sext i32 %1475 to i64
  %1477 = getelementptr inbounds i8, ptr %85, i64 %1476
  %1478 = load i8, ptr %1477, align 1, !tbaa !27
  %1479 = zext i8 %1478 to i32
  %1480 = add nuw nsw i32 %1479, %1473
  %1481 = shl nuw nsw i32 %1480, 7
  %1482 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm1, align 8, !tbaa !74
  %1483 = add i32 %1482, 65280
  %1484 = and i32 %1483, 65280
  %1485 = and i32 %1484, %1481
  store i32 %1485, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 1), align 8, !tbaa !102
  %1486 = load i8, ptr %1471, align 1, !tbaa !27
  %1487 = zext i8 %1486 to i32
  %1488 = load i8, ptr %1477, align 1, !tbaa !27
  %1489 = zext i8 %1488 to i32
  %1490 = add nuw nsw i32 %1489, %1487
  %1491 = sub nsw i32 %1465, %105
  %1492 = and i32 %1468, %1491
  %1493 = sext i32 %1492 to i64
  %1494 = getelementptr inbounds i8, ptr %85, i64 %1493
  %1495 = load i8, ptr %1494, align 1, !tbaa !27
  %1496 = zext i8 %1495 to i32
  %1497 = sub nsw i32 %1490, %1496
  %1498 = shl nsw i32 %1497, 7
  %1499 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm2, align 8, !tbaa !74
  %1500 = and i32 %1499, -256
  %1501 = add nsw i32 %1500, -256
  %1502 = and i32 %1501, %1498
  store i32 %1502, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 1), align 8, !tbaa !102
  %1503 = load i8, ptr %1471, align 1, !tbaa !27
  %1504 = zext i8 %1503 to i32
  %1505 = add nsw i32 %1465, -2
  %1506 = and i32 %1468, %1505
  %1507 = sext i32 %1506 to i64
  %1508 = getelementptr inbounds i8, ptr %85, i64 %1507
  %1509 = load i8, ptr %1508, align 1, !tbaa !27
  %1510 = zext i8 %1509 to i32
  %1511 = shl nuw nsw i32 %1504, 8
  %1512 = shl nuw nsw i32 %1510, 7
  %1513 = sub nsw i32 %1511, %1512
  %1514 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm3, align 8, !tbaa !74
  %1515 = and i32 %1514, -256
  %1516 = add nsw i32 %1515, -256
  %1517 = and i32 %1516, %1513
  store i32 %1517, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 1), align 8, !tbaa !102
  %1518 = load i8, ptr %1477, align 1, !tbaa !27
  %1519 = zext i8 %1518 to i32
  %1520 = sub nsw i32 %1465, %200
  %1521 = and i32 %1468, %1520
  %1522 = sext i32 %1521 to i64
  %1523 = getelementptr inbounds i8, ptr %85, i64 %1522
  %1524 = load i8, ptr %1523, align 1, !tbaa !27
  %1525 = zext i8 %1524 to i32
  %1526 = shl nuw nsw i32 %1519, 8
  %1527 = shl nuw nsw i32 %1525, 7
  %1528 = sub nsw i32 %1526, %1527
  %1529 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm4, align 8, !tbaa !74
  %1530 = and i32 %1529, -256
  %1531 = add nsw i32 %1530, -256
  %1532 = and i32 %1531, %1528
  store i32 %1532, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 1), align 8, !tbaa !102
  %1533 = load i8, ptr %1471, align 1, !tbaa !27
  %1534 = zext i8 %1533 to i32
  %1535 = load i8, ptr %1477, align 1, !tbaa !27
  %1536 = zext i8 %1535 to i32
  %1537 = add nuw nsw i32 %1536, %1534
  %1538 = sub nsw i32 %1465, %90
  %1539 = and i32 %1468, %1538
  %1540 = sext i32 %1539 to i64
  %1541 = getelementptr inbounds i8, ptr %85, i64 %1540
  %1542 = load i8, ptr %1541, align 1, !tbaa !27
  %1543 = zext i8 %1542 to i32
  %1544 = sub nsw i32 %1537, %1543
  %1545 = shl nsw i32 %1544, 7
  %1546 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm5, align 8, !tbaa !74
  %1547 = and i32 %1546, -256
  %1548 = add nsw i32 %1547, -256
  %1549 = and i32 %1548, %1545
  store i32 %1549, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 1), align 8, !tbaa !102
  %1550 = lshr i32 %112, 3
  %1551 = shl nuw nsw i32 %129, 1
  %1552 = and i32 %1551, 384
  %1553 = or i32 %1552, %1550
  %1554 = shl nuw nsw i32 %1553, 8
  %1555 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm6, align 8, !tbaa !74
  %1556 = add i32 %1555, 2147483392
  %1557 = and i32 %1556, %1554
  store i32 %1557, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 1), align 8, !tbaa !102
  br label %1574

1558:                                             ; preds = %8
  %1559 = landingpad { ptr, i32 }
          cleanup
  br label %1576

1560:                                             ; preds = %17
  %1561 = landingpad { ptr, i32 }
          cleanup
  br label %1576

1562:                                             ; preds = %26
  %1563 = landingpad { ptr, i32 }
          cleanup
  br label %1576

1564:                                             ; preds = %35
  %1565 = landingpad { ptr, i32 }
          cleanup
  br label %1576

1566:                                             ; preds = %44
  %1567 = landingpad { ptr, i32 }
          cleanup
  br label %1576

1568:                                             ; preds = %53
  %1569 = landingpad { ptr, i32 }
          cleanup
  br label %1576

1570:                                             ; preds = %62
  %1571 = landingpad { ptr, i32 }
          cleanup
  br label %1576

1572:                                             ; preds = %71
  %1573 = landingpad { ptr, i32 }
          cleanup
  br label %1576

1574:                                             ; preds = %79, %76
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm1, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm2, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm3, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm4, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm5, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm6, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm7, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  %1575 = tail call noundef i32 @_ZN10ContextMap3mixER5Mixer(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9model8bitR5MixeriE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0) #32
  ret void

1576:                                             ; preds = %1572, %1570, %1568, %1566, %1564, %1562, %1560, %1558
  %1577 = phi ptr [ @_ZGVZ9model8bitR5MixeriE2cm, %1572 ], [ @_ZGVZ9model8bitR5MixeriE4scm7, %1570 ], [ @_ZGVZ9model8bitR5MixeriE4scm6, %1568 ], [ @_ZGVZ9model8bitR5MixeriE4scm5, %1566 ], [ @_ZGVZ9model8bitR5MixeriE4scm4, %1564 ], [ @_ZGVZ9model8bitR5MixeriE4scm3, %1562 ], [ @_ZGVZ9model8bitR5MixeriE4scm2, %1560 ], [ @_ZGVZ9model8bitR5MixeriE4scm1, %1558 ]
  %1578 = phi { ptr, i32 } [ %1573, %1572 ], [ %1571, %1570 ], [ %1569, %1568 ], [ %1567, %1566 ], [ %1565, %1564 ], [ %1563, %1562 ], [ %1561, %1560 ], [ %1559, %1558 ]
  tail call void @__cxa_guard_abort(ptr nonnull %1577) #33
  resume { ptr, i32 } %1578
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_Z8pgmModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) %0) #7 {
  %2 = alloca [32 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #33
  %3 = load i32, ptr @bpos, align 4, !tbaa !18
  %4 = icmp eq i32 %3, 0
  %5 = load i32, ptr @pos, align 4, !tbaa !18
  br i1 %4, label %6, label %111

6:                                                ; preds = %1
  %7 = add nsw i32 %5, -3
  %8 = load i32, ptr @buf, align 8, !tbaa !23
  %9 = add nsw i32 %8, -1
  %10 = and i32 %9, %7
  %11 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %12 = sext i32 %10 to i64
  %13 = getelementptr inbounds i8, ptr %11, i64 %12
  %14 = load i8, ptr %13, align 1, !tbaa !27
  %15 = icmp eq i8 %14, 80
  br i1 %15, label %16, label %30

16:                                               ; preds = %6
  %17 = add nsw i32 %5, -2
  %18 = and i32 %9, %17
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, ptr %11, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !27
  %22 = icmp eq i8 %21, 53
  br i1 %22, label %23, label %30

23:                                               ; preds = %16
  %24 = add nsw i32 %5, -1
  %25 = and i32 %9, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, ptr %11, i64 %26
  %28 = load i8, ptr %27, align 1, !tbaa !27
  switch i8 %28, label %30 [
    i8 32, label %29
    i8 9, label %29
    i8 10, label %29
    i8 13, label %29
  ]

29:                                               ; preds = %23, %23, %23, %23
  store i32 %5, ptr @_ZZ8pgmModelR5MixerE3pgm, align 4, !tbaa !18
  store i32 0, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4, !tbaa !18
  store i32 0, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !18
  br label %175

30:                                               ; preds = %23, %16, %6
  %31 = load i32, ptr @_ZZ8pgmModelR5MixerE3pgm, align 4, !tbaa !18
  %32 = icmp ne i32 %31, 0
  %33 = load i32, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4
  %34 = icmp ne i32 %33, 3
  %35 = select i1 %32, i1 %34, i1 false
  br i1 %35, label %36, label %111

36:                                               ; preds = %30
  %37 = add nsw i32 %5, -1
  %38 = icmp slt i32 %31, %37
  %39 = icmp slt i32 %33, 3
  %40 = select i1 %38, i1 %39, i1 false
  br i1 %40, label %41, label %111

41:                                               ; preds = %87, %36
  %42 = phi i32 [ %90, %87 ], [ %31, %36 ]
  %43 = phi i32 [ %88, %87 ], [ %33, %36 ]
  %44 = tail call i32 @llvm.smax.i32(i32 %42, i32 %37)
  br label %45

45:                                               ; preds = %53, %41
  %46 = phi i32 [ %54, %53 ], [ %42, %41 ]
  %47 = and i32 %46, %9
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, ptr %11, i64 %48
  %50 = load i8, ptr %49, align 1, !tbaa !27
  switch i8 %50, label %64 [
    i8 32, label %51
    i8 9, label %51
    i8 10, label %51
    i8 13, label %51
    i8 35, label %55
  ]

51:                                               ; preds = %45, %45, %45, %45
  %52 = icmp eq i32 %46, %44
  br i1 %52, label %94, label %53

53:                                               ; preds = %51
  %54 = add i32 %46, 1
  br label %45, !llvm.loop !110

55:                                               ; preds = %62, %45
  %56 = phi i32 [ %57, %62 ], [ %46, %45 ]
  %57 = add nsw i32 %56, 1
  %58 = and i32 %57, %9
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, ptr %11, i64 %59
  %61 = load i8, ptr %60, align 1, !tbaa !27
  switch i8 %61, label %62 [
    i8 10, label %87
    i8 13, label %87
  ]

62:                                               ; preds = %55
  %63 = icmp slt i32 %57, %37
  br i1 %63, label %55, label %87, !llvm.loop !111

64:                                               ; preds = %77, %45
  %65 = phi i64 [ %78, %77 ], [ 0, %45 ]
  %66 = phi i32 [ %72, %77 ], [ %46, %45 ]
  %67 = and i32 %66, %9
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8, ptr %11, i64 %68
  %70 = load i8, ptr %69, align 1, !tbaa !27
  %71 = getelementptr inbounds [32 x i8], ptr %2, i64 0, i64 %65
  store i8 %70, ptr %71, align 1, !tbaa !27
  %72 = add nsw i32 %66, 1
  %73 = and i32 %72, %9
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, ptr %11, i64 %74
  %76 = load i8, ptr %75, align 1, !tbaa !27
  switch i8 %76, label %77 [
    i8 32, label %82
    i8 9, label %82
    i8 10, label %82
    i8 13, label %82
  ]

77:                                               ; preds = %64
  %78 = add nuw nsw i64 %65, 1
  %79 = icmp slt i32 %72, %37
  %80 = icmp ult i64 %65, 31
  %81 = and i1 %80, %79
  br i1 %81, label %64, label %87, !llvm.loop !112

82:                                               ; preds = %64, %64, %64, %64
  %.lcssa = phi i32 [ %72, %64 ], [ %72, %64 ], [ %72, %64 ], [ %72, %64 ]
  %83 = call i32 @atoi(ptr nocapture noundef nonnull %2) #38
  %84 = add nsw i32 %43, 1
  store i32 %84, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4, !tbaa !18
  %85 = sext i32 %43 to i64
  %86 = getelementptr inbounds [3 x i32], ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 %85
  store i32 %83, ptr %86, align 4, !tbaa !18
  store i32 %.lcssa, ptr @_ZZ8pgmModelR5MixerE3pgm, align 4, !tbaa !18
  br label %87

87:                                               ; preds = %82, %77, %62, %55, %55
  %88 = phi i32 [ %84, %82 ], [ %43, %77 ], [ %43, %62 ], [ %43, %55 ], [ %43, %55 ]
  %89 = phi i32 [ %.lcssa, %82 ], [ %72, %77 ], [ %57, %62 ], [ %57, %55 ], [ %57, %55 ]
  %90 = add nsw i32 %89, 1
  %91 = icmp slt i32 %90, %37
  %92 = icmp slt i32 %88, 3
  %93 = select i1 %91, i1 %92, i1 false
  br i1 %93, label %41, label %94, !llvm.loop !113

94:                                               ; preds = %87, %51
  %95 = phi i32 [ %43, %51 ], [ %88, %87 ]
  %96 = icmp eq i32 %95, 3
  br i1 %96, label %97, label %111

97:                                               ; preds = %94
  %98 = load i32, ptr getelementptr inbounds ([3 x i32], ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 2), align 4, !tbaa !18
  %99 = icmp eq i32 %98, 255
  %100 = load i32, ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, align 4
  %101 = icmp sgt i32 %100, 0
  %102 = select i1 %99, i1 %101, i1 false
  %103 = load i32, ptr getelementptr inbounds ([3 x i32], ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 1), align 4
  %104 = icmp sgt i32 %103, 0
  %105 = select i1 %102, i1 %104, i1 false
  br i1 %105, label %106, label %111

106:                                              ; preds = %97
  store i32 %100, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !18
  %107 = mul nsw i32 %103, %100
  %108 = add nsw i32 %107, %5
  store i32 %108, ptr @_ZZ8pgmModelR5MixerE3eoi, align 4, !tbaa !18
  %109 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.6, i32 noundef %100, i32 noundef %103) #32
  %110 = load i32, ptr @pos, align 4, !tbaa !18
  br label %111

111:                                              ; preds = %106, %97, %94, %36, %30, %1
  %112 = phi i32 [ %5, %94 ], [ %110, %106 ], [ %5, %97 ], [ %5, %30 ], [ %5, %1 ], [ %5, %36 ]
  %113 = load i32, ptr @_ZZ8pgmModelR5MixerE3eoi, align 4, !tbaa !18
  %114 = icmp sgt i32 %112, %113
  br i1 %114, label %115, label %116

115:                                              ; preds = %111
  store i32 0, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !18
  br label %175

116:                                              ; preds = %111
  %117 = load i32, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !18
  tail call void @_Z9model8bitR5Mixeri(ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %117) #32
  %118 = load i32, ptr @_ZZ8pgmModelR5MixerE3col, align 4, !tbaa !18
  %119 = add nsw i32 %118, 1
  %120 = icmp sgt i32 %118, 6
  %121 = select i1 %120, i32 0, i32 %119
  store i32 %121, ptr @_ZZ8pgmModelR5MixerE3col, align 4
  %122 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 7
  %123 = load i32, ptr %122, align 4, !tbaa !56
  %124 = add nsw i32 %123, 2
  %125 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 6
  %126 = load i32, ptr %125, align 8, !tbaa !55
  %127 = add nsw i32 %126, 1
  store i32 %127, ptr %125, align 8, !tbaa !55
  %128 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 3
  %129 = load ptr, ptr %128, align 8, !tbaa !58
  %130 = sext i32 %126 to i64
  %131 = getelementptr inbounds i32, ptr %129, i64 %130
  store i32 %124, ptr %131, align 4, !tbaa !18
  %132 = load i32, ptr %122, align 4, !tbaa !56
  %133 = add nsw i32 %132, 8
  store i32 %133, ptr %122, align 4, !tbaa !56
  %134 = add nsw i32 %133, %121
  %135 = load i32, ptr %125, align 8, !tbaa !55
  %136 = add nsw i32 %135, 1
  store i32 %136, ptr %125, align 8, !tbaa !55
  %137 = sext i32 %135 to i64
  %138 = getelementptr inbounds i32, ptr %129, i64 %137
  store i32 %134, ptr %138, align 4, !tbaa !18
  %139 = load i32, ptr %122, align 4, !tbaa !56
  %140 = add nsw i32 %139, 8
  store i32 %140, ptr %122, align 4, !tbaa !56
  %141 = load i32, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !18
  %142 = load i32, ptr @pos, align 4, !tbaa !18
  %143 = sub nsw i32 %142, %141
  %144 = load i32, ptr @buf, align 8, !tbaa !23
  %145 = add nsw i32 %144, -1
  %146 = and i32 %145, %143
  %147 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %148 = sext i32 %146 to i64
  %149 = getelementptr inbounds i8, ptr %147, i64 %148
  %150 = load i8, ptr %149, align 1, !tbaa !27
  %151 = zext i8 %150 to i32
  %152 = add nsw i32 %142, -1
  %153 = and i32 %145, %152
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i8, ptr %147, i64 %154
  %156 = load i8, ptr %155, align 1, !tbaa !27
  %157 = zext i8 %156 to i32
  %158 = add nuw nsw i32 %157, %151
  %159 = lshr i32 %158, 4
  %160 = add nsw i32 %159, %140
  %161 = load i32, ptr %125, align 8, !tbaa !55
  %162 = add nsw i32 %161, 1
  store i32 %162, ptr %125, align 8, !tbaa !55
  %163 = sext i32 %161 to i64
  %164 = getelementptr inbounds i32, ptr %129, i64 %163
  store i32 %160, ptr %164, align 4, !tbaa !18
  %165 = load i32, ptr %122, align 4, !tbaa !56
  %166 = add nsw i32 %165, 32
  store i32 %166, ptr %122, align 4, !tbaa !56
  %167 = load i32, ptr @c0, align 4, !tbaa !18
  %168 = add nsw i32 %167, %166
  %169 = load i32, ptr %125, align 8, !tbaa !55
  %170 = add nsw i32 %169, 1
  store i32 %170, ptr %125, align 8, !tbaa !55
  %171 = sext i32 %169 to i64
  %172 = getelementptr inbounds i32, ptr %129, i64 %171
  store i32 %168, ptr %172, align 4, !tbaa !18
  %173 = load i32, ptr %122, align 4, !tbaa !56
  %174 = add nsw i32 %173, 256
  store i32 %174, ptr %122, align 4, !tbaa !56
  br label %175

175:                                              ; preds = %116, %115, %29
  %176 = phi i32 [ 0, %115 ], [ %141, %116 ], [ 0, %29 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #33
  ret i32 %176
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #18

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #14

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(read)
declare i32 @atoi(ptr nocapture noundef) local_unnamed_addr #15

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #18

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_Z9bmpModel8R5Mixer(ptr noundef nonnull align 8 dereferenceable(136) %0) #7 {
  %2 = load i32, ptr @bpos, align 4, !tbaa !18
  %3 = icmp eq i32 %2, 0
  %4 = load i32, ptr @pos, align 4, !tbaa !18
  br i1 %3, label %5, label %130

5:                                                ; preds = %1
  %6 = add i32 %4, -44
  %7 = load i32, ptr @buf, align 8, !tbaa !23
  %8 = add nsw i32 %7, -1
  %9 = and i32 %8, %6
  %10 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %11 = sext i32 %9 to i64
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = load i8, ptr %12, align 1, !tbaa !27
  %14 = zext i8 %13 to i32
  %15 = add i32 %4, -43
  %16 = and i32 %8, %15
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, ptr %10, i64 %17
  %19 = load i8, ptr %18, align 1, !tbaa !27
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = or i32 %21, %14
  %23 = add i32 %4, -42
  %24 = and i32 %8, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, ptr %10, i64 %25
  %27 = load i8, ptr %26, align 1, !tbaa !27
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 16
  %30 = or i32 %22, %29
  %31 = add i32 %4, -41
  %32 = and i32 %8, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, ptr %10, i64 %33
  %35 = load i8, ptr %34, align 1, !tbaa !27
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 24
  %38 = or i32 %30, %37
  %39 = icmp ult i32 %38, 1079
  br i1 %39, label %40, label %119

40:                                               ; preds = %5
  %41 = add i32 %4, -40
  %42 = and i32 %8, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, ptr %10, i64 %43
  %45 = load i8, ptr %44, align 1, !tbaa !27
  %46 = zext i8 %45 to i32
  %47 = add i32 %4, -39
  %48 = and i32 %8, %47
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, ptr %10, i64 %49
  %51 = load i8, ptr %50, align 1, !tbaa !27
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 8
  %54 = or i32 %53, %46
  %55 = add i32 %4, -38
  %56 = and i32 %8, %55
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, ptr %10, i64 %57
  %59 = load i8, ptr %58, align 1, !tbaa !27
  %60 = zext i8 %59 to i32
  %61 = shl nuw nsw i32 %60, 16
  %62 = or i32 %54, %61
  %63 = add i32 %4, -37
  %64 = and i32 %8, %63
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, ptr %10, i64 %65
  %67 = load i8, ptr %66, align 1, !tbaa !27
  %68 = zext i8 %67 to i32
  %69 = shl nuw nsw i32 %68, 24
  %70 = or i32 %62, %69
  %71 = icmp eq i32 %70, 40
  br i1 %71, label %72, label %119

72:                                               ; preds = %40
  %73 = add i32 %4, -24
  %74 = and i32 %8, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, ptr %10, i64 %75
  %77 = load i8, ptr %76, align 1, !tbaa !27
  %78 = zext i8 %77 to i32
  %79 = add i32 %4, -23
  %80 = and i32 %8, %79
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i8, ptr %10, i64 %81
  %83 = load i8, ptr %82, align 1, !tbaa !27
  %84 = zext i8 %83 to i32
  %85 = shl nuw nsw i32 %84, 8
  %86 = or i32 %85, %78
  %87 = add i32 %4, -22
  %88 = and i32 %8, %87
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, ptr %10, i64 %89
  %91 = load i8, ptr %90, align 1, !tbaa !27
  %92 = zext i8 %91 to i32
  %93 = shl nuw nsw i32 %92, 16
  %94 = or i32 %86, %93
  %95 = add i32 %4, -21
  %96 = and i32 %8, %95
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, ptr %10, i64 %97
  %99 = load i8, ptr %98, align 1, !tbaa !27
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 24
  %102 = or i32 %94, %101
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %119

104:                                              ; preds = %72
  %105 = add nsw i32 %4, -26
  %106 = and i32 %8, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i8, ptr %10, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !27
  %110 = icmp eq i8 %109, 8
  br i1 %110, label %111, label %119

111:                                              ; preds = %104
  %112 = tail call noundef i32 @_Z2i4i(i32 noundef 36) #32
  store i32 %112, ptr @_ZZ9bmpModel8R5MixerE2w1, align 4, !tbaa !18
  %113 = tail call noundef i32 @_Z2i4i(i32 noundef 32) #32
  store i32 %113, ptr @_ZZ9bmpModel8R5MixerE1h, align 4, !tbaa !18
  %114 = load i32, ptr @pos, align 4, !tbaa !18
  %115 = tail call noundef i32 @_Z2i4i(i32 noundef 44) #32
  %116 = add i32 %114, -54
  %117 = add i32 %116, %115
  store i32 %117, ptr @_ZZ9bmpModel8R5MixerE4ibmp, align 4, !tbaa !18
  %118 = load i32, ptr @pos, align 4, !tbaa !18
  br label %119

119:                                              ; preds = %111, %104, %72, %40, %5
  %120 = phi i32 [ %118, %111 ], [ %4, %104 ], [ %4, %72 ], [ %4, %40 ], [ %4, %5 ]
  %121 = load i32, ptr @_ZZ9bmpModel8R5MixerE4ibmp, align 4, !tbaa !18
  %122 = icmp eq i32 %121, %120
  br i1 %122, label %123, label %130

123:                                              ; preds = %119
  %124 = load i32, ptr @_ZZ9bmpModel8R5MixerE2w1, align 4, !tbaa !18
  store i32 %124, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !18
  %125 = load i32, ptr @_ZZ9bmpModel8R5MixerE1h, align 4, !tbaa !18
  %126 = mul nsw i32 %125, %124
  %127 = add nsw i32 %126, %120
  store i32 %127, ptr @_ZZ9bmpModel8R5MixerE3eoi, align 4, !tbaa !18
  %128 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7, i32 noundef %124, i32 noundef %125) #32
  store i32 0, ptr @_ZZ9bmpModel8R5MixerE4ibmp, align 4, !tbaa !18
  %129 = load i32, ptr @pos, align 4, !tbaa !18
  br label %130

130:                                              ; preds = %123, %119, %1
  %131 = phi i32 [ %120, %119 ], [ %129, %123 ], [ %4, %1 ]
  %132 = load i32, ptr @_ZZ9bmpModel8R5MixerE3eoi, align 4, !tbaa !18
  %133 = icmp sgt i32 %131, %132
  br i1 %133, label %134, label %135

134:                                              ; preds = %130
  store i32 0, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !18
  br label %194

135:                                              ; preds = %130
  %136 = load i32, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !18
  tail call void @_Z9model8bitR5Mixeri(ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %136) #32
  %137 = load i32, ptr @_ZZ9bmpModel8R5MixerE3col, align 4, !tbaa !18
  %138 = add nsw i32 %137, 1
  %139 = icmp sgt i32 %137, 6
  %140 = select i1 %139, i32 0, i32 %138
  store i32 %140, ptr @_ZZ9bmpModel8R5MixerE3col, align 4
  %141 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 7
  %142 = load i32, ptr %141, align 4, !tbaa !56
  %143 = add nsw i32 %142, 2
  %144 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 6
  %145 = load i32, ptr %144, align 8, !tbaa !55
  %146 = add nsw i32 %145, 1
  store i32 %146, ptr %144, align 8, !tbaa !55
  %147 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 3
  %148 = load ptr, ptr %147, align 8, !tbaa !58
  %149 = sext i32 %145 to i64
  %150 = getelementptr inbounds i32, ptr %148, i64 %149
  store i32 %143, ptr %150, align 4, !tbaa !18
  %151 = load i32, ptr %141, align 4, !tbaa !56
  %152 = add nsw i32 %151, 8
  store i32 %152, ptr %141, align 4, !tbaa !56
  %153 = add nsw i32 %152, %140
  %154 = load i32, ptr %144, align 8, !tbaa !55
  %155 = add nsw i32 %154, 1
  store i32 %155, ptr %144, align 8, !tbaa !55
  %156 = sext i32 %154 to i64
  %157 = getelementptr inbounds i32, ptr %148, i64 %156
  store i32 %153, ptr %157, align 4, !tbaa !18
  %158 = load i32, ptr %141, align 4, !tbaa !56
  %159 = add nsw i32 %158, 8
  store i32 %159, ptr %141, align 4, !tbaa !56
  %160 = load i32, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !18
  %161 = load i32, ptr @pos, align 4, !tbaa !18
  %162 = sub nsw i32 %161, %160
  %163 = load i32, ptr @buf, align 8, !tbaa !23
  %164 = add nsw i32 %163, -1
  %165 = and i32 %164, %162
  %166 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %167 = sext i32 %165 to i64
  %168 = getelementptr inbounds i8, ptr %166, i64 %167
  %169 = load i8, ptr %168, align 1, !tbaa !27
  %170 = zext i8 %169 to i32
  %171 = add nsw i32 %161, -1
  %172 = and i32 %164, %171
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i8, ptr %166, i64 %173
  %175 = load i8, ptr %174, align 1, !tbaa !27
  %176 = zext i8 %175 to i32
  %177 = add nuw nsw i32 %176, %170
  %178 = lshr i32 %177, 4
  %179 = add nsw i32 %178, %159
  %180 = load i32, ptr %144, align 8, !tbaa !55
  %181 = add nsw i32 %180, 1
  store i32 %181, ptr %144, align 8, !tbaa !55
  %182 = sext i32 %180 to i64
  %183 = getelementptr inbounds i32, ptr %148, i64 %182
  store i32 %179, ptr %183, align 4, !tbaa !18
  %184 = load i32, ptr %141, align 4, !tbaa !56
  %185 = add nsw i32 %184, 32
  store i32 %185, ptr %141, align 4, !tbaa !56
  %186 = load i32, ptr @c0, align 4, !tbaa !18
  %187 = add nsw i32 %186, %185
  %188 = load i32, ptr %144, align 8, !tbaa !55
  %189 = add nsw i32 %188, 1
  store i32 %189, ptr %144, align 8, !tbaa !55
  %190 = sext i32 %188 to i64
  %191 = getelementptr inbounds i32, ptr %148, i64 %190
  store i32 %187, ptr %191, align 4, !tbaa !18
  %192 = load i32, ptr %141, align 4, !tbaa !56
  %193 = add nsw i32 %192, 256
  store i32 %193, ptr %141, align 4, !tbaa !56
  br label %194

194:                                              ; preds = %135, %134
  %195 = phi i32 [ 0, %134 ], [ %160, %135 ]
  ret i32 %195
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_Z9rgbModel8R5Mixer(ptr noundef nonnull align 8 dereferenceable(136) %0) #7 {
  %2 = load i32, ptr @bpos, align 4, !tbaa !18
  %3 = icmp eq i32 %2, 0
  %4 = load i32, ptr @pos, align 4, !tbaa !18
  br i1 %3, label %5, label %78

5:                                                ; preds = %1
  %6 = add nsw i32 %4, -507
  %7 = load i32, ptr @buf, align 8, !tbaa !23
  %8 = add nsw i32 %7, -1
  %9 = and i32 %8, %6
  %10 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %11 = sext i32 %9 to i64
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = load i8, ptr %12, align 1, !tbaa !27
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %78

15:                                               ; preds = %5
  %16 = add nsw i32 %4, -506
  %17 = and i32 %8, %16
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, ptr %10, i64 %18
  %20 = load i8, ptr %19, align 1, !tbaa !27
  %21 = icmp eq i8 %20, -38
  br i1 %21, label %22, label %78

22:                                               ; preds = %15
  %23 = add nsw i32 %4, -505
  %24 = and i32 %8, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, ptr %10, i64 %25
  %27 = load i8, ptr %26, align 1, !tbaa !27
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %78

29:                                               ; preds = %22
  %30 = add i32 %4, -496
  %31 = and i32 %8, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, ptr %10, i64 %32
  %34 = load i8, ptr %33, align 1, !tbaa !27
  %35 = zext i8 %34 to i32
  %36 = add i32 %4, -495
  %37 = and i32 %8, %36
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, ptr %10, i64 %38
  %40 = load i8, ptr %39, align 1, !tbaa !27
  %41 = zext i8 %40 to i32
  %42 = shl nuw nsw i32 %41, 8
  %43 = or i32 %42, %35
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %78

45:                                               ; preds = %29
  %46 = add nsw i32 %4, -501
  %47 = and i32 %8, %46
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, ptr %10, i64 %48
  %50 = load i8, ptr %49, align 1, !tbaa !27
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 8
  %53 = add nsw i32 %4, -500
  %54 = and i32 %8, %53
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, ptr %10, i64 %55
  %57 = load i8, ptr %56, align 1, !tbaa !27
  %58 = zext i8 %57 to i32
  %59 = or i32 %52, %58
  store i32 %59, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !18
  %60 = add nsw i32 %4, -499
  %61 = and i32 %8, %60
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, ptr %10, i64 %62
  %64 = load i8, ptr %63, align 1, !tbaa !27
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 8
  %67 = add nsw i32 %4, -498
  %68 = and i32 %8, %67
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, ptr %10, i64 %69
  %71 = load i8, ptr %70, align 1, !tbaa !27
  %72 = zext i8 %71 to i32
  %73 = or i32 %66, %72
  %74 = mul nuw nsw i32 %73, %59
  %75 = add nsw i32 %74, %4
  store i32 %75, ptr @_ZZ9rgbModel8R5MixerE3eoi, align 4, !tbaa !18
  %76 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.8, i32 noundef %59, i32 noundef %73) #32
  %77 = load i32, ptr @pos, align 4, !tbaa !18
  br label %78

78:                                               ; preds = %45, %29, %22, %15, %5, %1
  %79 = phi i32 [ %4, %5 ], [ %4, %15 ], [ %4, %22 ], [ %4, %29 ], [ %77, %45 ], [ %4, %1 ]
  %80 = load i32, ptr @_ZZ9rgbModel8R5MixerE3eoi, align 4, !tbaa !18
  %81 = icmp sgt i32 %79, %80
  br i1 %81, label %82, label %83

82:                                               ; preds = %78
  store i32 0, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !18
  br label %142

83:                                               ; preds = %78
  %84 = load i32, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !18
  tail call void @_Z9model8bitR5Mixeri(ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %84) #32
  %85 = load i32, ptr @_ZZ9rgbModel8R5MixerE3col, align 4, !tbaa !18
  %86 = add nsw i32 %85, 1
  %87 = icmp sgt i32 %85, 6
  %88 = select i1 %87, i32 0, i32 %86
  store i32 %88, ptr @_ZZ9rgbModel8R5MixerE3col, align 4
  %89 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 7
  %90 = load i32, ptr %89, align 4, !tbaa !56
  %91 = add nsw i32 %90, 2
  %92 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 6
  %93 = load i32, ptr %92, align 8, !tbaa !55
  %94 = add nsw i32 %93, 1
  store i32 %94, ptr %92, align 8, !tbaa !55
  %95 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 3
  %96 = load ptr, ptr %95, align 8, !tbaa !58
  %97 = sext i32 %93 to i64
  %98 = getelementptr inbounds i32, ptr %96, i64 %97
  store i32 %91, ptr %98, align 4, !tbaa !18
  %99 = load i32, ptr %89, align 4, !tbaa !56
  %100 = add nsw i32 %99, 8
  store i32 %100, ptr %89, align 4, !tbaa !56
  %101 = add nsw i32 %100, %88
  %102 = load i32, ptr %92, align 8, !tbaa !55
  %103 = add nsw i32 %102, 1
  store i32 %103, ptr %92, align 8, !tbaa !55
  %104 = sext i32 %102 to i64
  %105 = getelementptr inbounds i32, ptr %96, i64 %104
  store i32 %101, ptr %105, align 4, !tbaa !18
  %106 = load i32, ptr %89, align 4, !tbaa !56
  %107 = add nsw i32 %106, 8
  store i32 %107, ptr %89, align 4, !tbaa !56
  %108 = load i32, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !18
  %109 = load i32, ptr @pos, align 4, !tbaa !18
  %110 = sub nsw i32 %109, %108
  %111 = load i32, ptr @buf, align 8, !tbaa !23
  %112 = add nsw i32 %111, -1
  %113 = and i32 %112, %110
  %114 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %115 = sext i32 %113 to i64
  %116 = getelementptr inbounds i8, ptr %114, i64 %115
  %117 = load i8, ptr %116, align 1, !tbaa !27
  %118 = zext i8 %117 to i32
  %119 = add nsw i32 %109, -1
  %120 = and i32 %112, %119
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8, ptr %114, i64 %121
  %123 = load i8, ptr %122, align 1, !tbaa !27
  %124 = zext i8 %123 to i32
  %125 = add nuw nsw i32 %124, %118
  %126 = lshr i32 %125, 4
  %127 = add nsw i32 %126, %107
  %128 = load i32, ptr %92, align 8, !tbaa !55
  %129 = add nsw i32 %128, 1
  store i32 %129, ptr %92, align 8, !tbaa !55
  %130 = sext i32 %128 to i64
  %131 = getelementptr inbounds i32, ptr %96, i64 %130
  store i32 %127, ptr %131, align 4, !tbaa !18
  %132 = load i32, ptr %89, align 4, !tbaa !56
  %133 = add nsw i32 %132, 32
  store i32 %133, ptr %89, align 4, !tbaa !56
  %134 = load i32, ptr @c0, align 4, !tbaa !18
  %135 = add nsw i32 %134, %133
  %136 = load i32, ptr %92, align 8, !tbaa !55
  %137 = add nsw i32 %136, 1
  store i32 %137, ptr %92, align 8, !tbaa !55
  %138 = sext i32 %136 to i64
  %139 = getelementptr inbounds i32, ptr %96, i64 %138
  store i32 %135, ptr %139, align 4, !tbaa !18
  %140 = load i32, ptr %89, align 4, !tbaa !56
  %141 = add nsw i32 %140, 256
  store i32 %141, ptr %89, align 4, !tbaa !56
  br label %142

142:                                              ; preds = %83, %82
  %143 = phi i32 [ 0, %82 ], [ %108, %83 ]
  ret i32 %143
}

; Function Attrs: mustprogress nofree nosync nounwind optsize willreturn memory(argmem: readwrite) uwtable
define internal void @_Z8update_kiiRiS_(i32 noundef %0, i32 noundef %1, ptr nocapture noundef nonnull align 4 dereferenceable(4) %2, ptr nocapture noundef nonnull align 4 dereferenceable(4) %3) #19 {
  %5 = load i32, ptr %2, align 4, !tbaa !18
  %6 = add nsw i32 %5, -1
  %7 = mul nsw i32 %6, %0
  %8 = sub nsw i32 9, %5
  %9 = mul nsw i32 %8, %1
  %10 = add nsw i32 %7, %9
  %11 = tail call i32 @llvm.abs.i32(i32 %10, i1 true)
  %12 = lshr i32 %11, 3
  %13 = mul nsw i32 %5, %0
  %14 = sub nsw i32 8, %5
  %15 = mul nsw i32 %14, %1
  %16 = add nsw i32 %15, %13
  %17 = tail call i32 @llvm.abs.i32(i32 %16, i1 true)
  %18 = lshr i32 %17, 3
  %19 = add nsw i32 %5, 1
  %20 = mul nsw i32 %19, %0
  %21 = sub nsw i32 7, %5
  %22 = mul nsw i32 %21, %1
  %23 = add nsw i32 %20, %22
  %24 = tail call i32 @llvm.abs.i32(i32 %23, i1 true)
  %25 = lshr i32 %24, 3
  switch i32 %5, label %26 [
    i32 0, label %35
    i32 8, label %27
  ]

26:                                               ; preds = %4
  br label %27

27:                                               ; preds = %26, %4
  %28 = phi i32 [ %25, %26 ], [ %18, %4 ]
  %29 = icmp ult i32 %12, %18
  %30 = icmp ult i32 %12, %28
  %31 = select i1 %29, i1 %30, i1 false
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = load i32, ptr %3, align 4, !tbaa !18
  %34 = add nsw i32 %33, -1
  store i32 %34, ptr %3, align 4, !tbaa !18
  br label %35

35:                                               ; preds = %32, %27, %4
  %36 = phi i32 [ %28, %32 ], [ %28, %27 ], [ %25, %4 ]
  %37 = phi i32 [ %12, %32 ], [ %12, %27 ], [ %18, %4 ]
  %38 = icmp ult i32 %36, %37
  %39 = icmp ult i32 %36, %18
  %40 = select i1 %38, i1 %39, i1 false
  %41 = load i32, ptr %3, align 4, !tbaa !18
  br i1 %40, label %42, label %44

42:                                               ; preds = %35
  %43 = add nsw i32 %41, 1
  store i32 %43, ptr %3, align 4, !tbaa !18
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp slt i32 %45, -2
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  %48 = icmp sgt i32 %45, 2
  br i1 %48, label %49, label %53

49:                                               ; preds = %47, %44
  %50 = phi i32 [ -1, %44 ], [ 1, %47 ]
  %51 = load i32, ptr %2, align 4, !tbaa !18
  %52 = add nsw i32 %51, %50
  store i32 %52, ptr %2, align 4, !tbaa !18
  store i32 0, ptr %3, align 4, !tbaa !18
  br label %53

53:                                               ; preds = %49, %47
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #14

; Function Attrs: optsize uwtable
define internal noundef i32 @_Z9jpegModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) #0 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2ht acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !100

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ht) #33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE2ht, i32 noundef 8) #32
          to label %8 unwind label %140

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2ht, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ht) #33
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE3huf acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19, !prof !100

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE3huf) #33
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  invoke void @_ZN5ArrayI3HUFLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE3huf, i32 noundef 128) #32
          to label %17 unwind label %142

17:                                               ; preds = %16
  %18 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayI3HUFLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE3huf, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE3huf) #33
  br label %19

19:                                               ; preds = %17, %13, %10
  %20 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4hbuf acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28, !prof !100

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4hbuf) #33
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  invoke void @_ZN5ArrayIhLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4hbuf, i32 noundef 2048) #32
          to label %26 unwind label %144

26:                                               ; preds = %25
  %27 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIhLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4hbuf, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4hbuf) #33
  br label %28

28:                                               ; preds = %26, %22, %19
  %29 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE5color acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %37, !prof !100

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE5color) #33
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE5color, i32 noundef 10) #32
          to label %35 unwind label %146

35:                                               ; preds = %34
  %36 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE5color, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE5color) #33
  br label %37

37:                                               ; preds = %35, %31, %28
  %38 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4pred acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %46, !prof !100

40:                                               ; preds = %37
  %41 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4pred) #33
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4pred, i32 noundef 4) #32
          to label %44 unwind label %148

44:                                               ; preds = %43
  %45 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4pred, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4pred) #33
  br label %46

46:                                               ; preds = %44, %40, %37
  %47 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4cbuf acquire, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %55, !prof !100

49:                                               ; preds = %46
  %50 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4cbuf) #33
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  invoke void @_ZN5ArrayIhLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4cbuf, i32 noundef 131072) #32
          to label %53 unwind label %150

53:                                               ; preds = %52
  %54 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN3BufD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4cbuf, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4cbuf) #33
  br label %55

55:                                               ; preds = %53, %49, %46
  %56 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE5cbuf2 acquire, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %64, !prof !100

58:                                               ; preds = %55
  %59 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE5cbuf2) #33
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE5cbuf2, i32 noundef 131072) #32
          to label %62 unwind label %152

62:                                               ; preds = %61
  %63 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN6IntBufD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE5cbuf2, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE5cbuf2) #33
  br label %64

64:                                               ; preds = %62, %58, %55
  %65 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE8adv_pred acquire, align 8
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %73, !prof !100

67:                                               ; preds = %64
  %68 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE8adv_pred) #33
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE8adv_pred, i32 noundef 7) #32
          to label %71 unwind label %154

71:                                               ; preds = %70
  %72 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE8adv_pred, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE8adv_pred) #33
  br label %73

73:                                               ; preds = %71, %67, %64
  %74 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4sumu acquire, align 8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %82, !prof !100

76:                                               ; preds = %73
  %77 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumu) #33
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4sumu, i32 noundef 8) #32
          to label %80 unwind label %156

80:                                               ; preds = %79
  %81 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4sumu, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumu) #33
  br label %82

82:                                               ; preds = %80, %76, %73
  %83 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4sumv acquire, align 8
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %91, !prof !100

85:                                               ; preds = %82
  %86 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumv) #33
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4sumv, i32 noundef 8) #32
          to label %89 unwind label %158

89:                                               ; preds = %88
  %90 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4sumv, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumv) #33
  br label %91

91:                                               ; preds = %89, %85, %82
  %92 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2ls acquire, align 8
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %100, !prof !100

94:                                               ; preds = %91
  %95 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ls) #33
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %94
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE2ls, i32 noundef 10) #32
          to label %98 unwind label %160

98:                                               ; preds = %97
  %99 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2ls, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ls) #33
  br label %100

100:                                              ; preds = %98, %94, %91
  %101 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE3lcp acquire, align 8
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %109, !prof !100

103:                                              ; preds = %100
  %104 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE3lcp) #33
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %103
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE3lcp, i32 noundef 4) #32
          to label %107 unwind label %162

107:                                              ; preds = %106
  %108 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE3lcp, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE3lcp) #33
  br label %109

109:                                              ; preds = %107, %103, %100
  %110 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4zpos acquire, align 8
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %118, !prof !100

112:                                              ; preds = %109
  %113 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4zpos) #33
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %112
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4zpos, i32 noundef 64) #32
          to label %116 unwind label %164

116:                                              ; preds = %115
  %117 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4zpos, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4zpos) #33
  br label %118

118:                                              ; preds = %116, %112, %109
  %119 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4qtab acquire, align 8
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %127, !prof !100

121:                                              ; preds = %118
  %122 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qtab) #33
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %127, label %124

124:                                              ; preds = %121
  invoke void @_ZN5ArrayIhLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4qtab, i32 noundef 256) #32
          to label %125 unwind label %166

125:                                              ; preds = %124
  %126 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIhLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4qtab, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qtab) #33
  br label %127

127:                                              ; preds = %125, %121, %118
  %128 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4qmap acquire, align 8
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %136, !prof !100

130:                                              ; preds = %127
  %131 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qmap) #33
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %130
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4qmap, i32 noundef 10) #32
          to label %134 unwind label %168

134:                                              ; preds = %133
  %135 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4qmap, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qmap) #33
  br label %136

136:                                              ; preds = %134, %130, %127
  %137 = load i32, ptr @bpos, align 4, !tbaa !18
  %138 = icmp eq i32 %137, 0
  %139 = load i32, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4
  br i1 %138, label %174, label %170

140:                                              ; preds = %7
  %141 = landingpad { ptr, i32 }
          cleanup
  br label %2578

142:                                              ; preds = %16
  %143 = landingpad { ptr, i32 }
          cleanup
  br label %2578

144:                                              ; preds = %25
  %145 = landingpad { ptr, i32 }
          cleanup
  br label %2578

146:                                              ; preds = %34
  %147 = landingpad { ptr, i32 }
          cleanup
  br label %2578

148:                                              ; preds = %43
  %149 = landingpad { ptr, i32 }
          cleanup
  br label %2578

150:                                              ; preds = %52
  %151 = landingpad { ptr, i32 }
          cleanup
  br label %2578

152:                                              ; preds = %61
  %153 = landingpad { ptr, i32 }
          cleanup
  br label %2578

154:                                              ; preds = %70
  %155 = landingpad { ptr, i32 }
          cleanup
  br label %2578

156:                                              ; preds = %79
  %157 = landingpad { ptr, i32 }
          cleanup
  br label %2578

158:                                              ; preds = %88
  %159 = landingpad { ptr, i32 }
          cleanup
  br label %2578

160:                                              ; preds = %97
  %161 = landingpad { ptr, i32 }
          cleanup
  br label %2578

162:                                              ; preds = %106
  %163 = landingpad { ptr, i32 }
          cleanup
  br label %2578

164:                                              ; preds = %115
  %165 = landingpad { ptr, i32 }
          cleanup
  br label %2578

166:                                              ; preds = %124
  %167 = landingpad { ptr, i32 }
          cleanup
  br label %2578

168:                                              ; preds = %133
  %169 = landingpad { ptr, i32 }
          cleanup
  br label %2578

170:                                              ; preds = %136
  %171 = icmp eq i32 %139, 0
  br i1 %171, label %172, label %182

172:                                              ; preds = %170
  %173 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

174:                                              ; preds = %136
  %175 = icmp sgt i32 %139, 1
  %176 = zext i1 %175 to i32
  store i32 %176, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  %177 = load i32, ptr @_ZZ9jpegModelR5MixerE3app, align 4
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %179, label %189

179:                                              ; preds = %174
  %180 = add nsw i32 %177, -1
  store i32 %180, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !18
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %189, label %2576

182:                                              ; preds = %170
  %183 = load i32, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !18
  %184 = icmp sgt i32 %183, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %182
  %186 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

187:                                              ; preds = %182
  %188 = load i32, ptr @_ZZ9jpegModelR5MixerE4data, align 4, !tbaa !18
  br label %471

189:                                              ; preds = %179, %174
  %190 = phi i32 [ 0, %179 ], [ %177, %174 ]
  %191 = icmp eq i32 %139, 0
  br i1 %191, label %192, label %234

192:                                              ; preds = %189
  %193 = load i32, ptr @pos, align 4, !tbaa !18
  %194 = add nsw i32 %193, -4
  %195 = load i32, ptr @buf, align 8, !tbaa !23
  %196 = add nsw i32 %195, -1
  %197 = and i32 %196, %194
  %198 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %199 = sext i32 %197 to i64
  %200 = getelementptr inbounds i8, ptr %198, i64 %199
  %201 = load i8, ptr %200, align 1, !tbaa !27
  %202 = icmp eq i8 %201, -1
  br i1 %202, label %203, label %2576

203:                                              ; preds = %192
  %204 = add nsw i32 %193, -3
  %205 = and i32 %196, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds i8, ptr %198, i64 %206
  %208 = load i8, ptr %207, align 1, !tbaa !27
  %209 = icmp eq i8 %208, -40
  br i1 %209, label %210, label %2576

210:                                              ; preds = %203
  %211 = add nsw i32 %193, -2
  %212 = and i32 %196, %211
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds i8, ptr %198, i64 %213
  %215 = load i8, ptr %214, align 1, !tbaa !27
  %216 = icmp eq i8 %215, -1
  br i1 %216, label %217, label %2576

217:                                              ; preds = %210
  %218 = add nsw i32 %193, -1
  %219 = and i32 %196, %218
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i8, ptr %198, i64 %220
  %222 = load i8, ptr %221, align 1, !tbaa !27
  %223 = and i8 %222, -16
  %224 = icmp eq i8 %223, -32
  br i1 %224, label %225, label %2576

225:                                              ; preds = %217
  store i32 1, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4data, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3sof, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3sos, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !18
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !18
  %226 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE3huf, i64 0, i32 3), align 8, !tbaa !114
  %227 = load i32, ptr @_ZZ9jpegModelR5MixerE3huf, align 8, !tbaa !116
  %228 = sext i32 %227 to i64
  %229 = mul nsw i64 %228, 12
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %226, i8 0, i64 %229, i1 false)
  %230 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE4pred, i64 0, i32 3), align 8, !tbaa !58
  %231 = load i32, ptr @_ZZ9jpegModelR5MixerE4pred, align 8, !tbaa !48
  %232 = sext i32 %231 to i64
  %233 = shl nsw i64 %232, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %230, i8 0, i64 %233, i1 false)
  br label %234

234:                                              ; preds = %225, %189
  %235 = phi i32 [ 0, %225 ], [ %190, %189 ]
  %236 = load i32, ptr @_ZZ9jpegModelR5MixerE4data, align 4
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %260, label %238

238:                                              ; preds = %234
  %239 = load i32, ptr @pos, align 4, !tbaa !18
  %240 = add nsw i32 %239, -2
  %241 = load i32, ptr @buf, align 8, !tbaa !23
  %242 = add nsw i32 %241, -1
  %243 = and i32 %242, %240
  %244 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %245 = sext i32 %243 to i64
  %246 = getelementptr inbounds i8, ptr %244, i64 %245
  %247 = load i8, ptr %246, align 1, !tbaa !27
  %248 = icmp eq i8 %247, -1
  br i1 %248, label %249, label %260

249:                                              ; preds = %238
  %250 = add nsw i32 %239, -1
  %251 = and i32 %242, %250
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds i8, ptr %244, i64 %252
  %254 = load i8, ptr %253, align 1, !tbaa !27
  %255 = icmp eq i8 %254, 0
  %256 = and i8 %254, -8
  %257 = icmp eq i8 %256, -48
  %258 = or i1 %255, %257
  br i1 %258, label %260, label %259

259:                                              ; preds = %249
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  br label %2576

260:                                              ; preds = %249, %238, %234
  %261 = or i32 %236, %235
  %262 = icmp eq i32 %261, 0
  %263 = load i32, ptr @pos, align 4, !tbaa !18
  %264 = load i32, ptr @buf, align 8, !tbaa !23
  %265 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  br i1 %262, label %268, label %266

266:                                              ; preds = %260
  %267 = add nsw i32 %264, -1
  br label %302

268:                                              ; preds = %260
  %269 = add nsw i32 %263, -4
  %270 = add nsw i32 %264, -1
  %271 = and i32 %270, %269
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds i8, ptr %265, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !27
  %275 = icmp eq i8 %274, -1
  br i1 %275, label %276, label %302

276:                                              ; preds = %268
  %277 = add nsw i32 %263, -3
  %278 = and i32 %270, %277
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds i8, ptr %265, i64 %279
  %281 = load i8, ptr %280, align 1, !tbaa !27
  %282 = and i8 %281, -16
  %283 = icmp eq i8 %282, -32
  %284 = icmp eq i8 %281, -2
  %285 = or i1 %284, %283
  br i1 %285, label %286, label %302

286:                                              ; preds = %276
  %287 = add nsw i32 %263, -2
  %288 = and i32 %270, %287
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i8, ptr %265, i64 %289
  %291 = load i8, ptr %290, align 1, !tbaa !27
  %292 = zext i8 %291 to i32
  %293 = shl nuw nsw i32 %292, 8
  %294 = add nsw i32 %263, -1
  %295 = and i32 %270, %294
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i8, ptr %265, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !27
  %299 = zext i8 %298 to i32
  %300 = or i32 %293, %299
  %301 = add nuw nsw i32 %300, 2
  store i32 %301, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !18
  br label %302

302:                                              ; preds = %286, %276, %268, %266
  %303 = phi i32 [ %267, %266 ], [ %270, %276 ], [ %270, %286 ], [ %270, %268 ]
  %304 = add nsw i32 %263, -5
  %305 = and i32 %303, %304
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds i8, ptr %265, i64 %306
  %308 = load i8, ptr %307, align 1, !tbaa !27
  %309 = icmp eq i8 %308, -1
  %310 = add nsw i32 %263, -4
  %311 = and i32 %303, %310
  %312 = sext i32 %311 to i64
  br i1 %309, label %313, label %346

313:                                              ; preds = %302
  %314 = getelementptr inbounds i8, ptr %265, i64 %312
  %315 = load i8, ptr %314, align 1, !tbaa !27
  %316 = icmp eq i8 %315, -38
  br i1 %316, label %317, label %346

317:                                              ; preds = %313
  %318 = add i32 %263, -3
  %319 = and i32 %303, %318
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i8, ptr %265, i64 %320
  %322 = load i8, ptr %321, align 1, !tbaa !27
  %323 = zext i8 %322 to i32
  %324 = shl nuw nsw i32 %323, 8
  %325 = add nsw i32 %263, -2
  %326 = and i32 %303, %325
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds i8, ptr %265, i64 %327
  %329 = load i8, ptr %328, align 1, !tbaa !27
  %330 = zext i8 %329 to i32
  %331 = or i32 %324, %330
  %332 = add nsw i32 %263, -1
  %333 = and i32 %303, %332
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds i8, ptr %265, i64 %334
  %336 = load i8, ptr %335, align 1, !tbaa !27
  %337 = zext i8 %336 to i32
  %338 = shl nuw nsw i32 %337, 1
  %339 = add nuw nsw i32 %338, 6
  %340 = icmp eq i32 %331, %339
  %341 = add i8 %336, -1
  %342 = icmp ult i8 %341, 4
  %343 = and i1 %342, %340
  br i1 %343, label %344, label %346

344:                                              ; preds = %317
  store i32 %304, ptr @_ZZ9jpegModelR5MixerE3sos, align 4, !tbaa !18
  %345 = add i32 %318, %331
  store i32 %345, ptr @_ZZ9jpegModelR5MixerE4data, align 4, !tbaa !18
  store i32 2, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  br label %346

346:                                              ; preds = %344, %317, %313, %302
  %347 = phi i32 [ %236, %317 ], [ %345, %344 ], [ %236, %313 ], [ %236, %302 ]
  %348 = getelementptr inbounds i8, ptr %265, i64 %312
  %349 = load i8, ptr %348, align 1, !tbaa !27
  %350 = icmp eq i8 %349, -1
  br i1 %350, label %351, label %372

351:                                              ; preds = %346
  %352 = add nsw i32 %263, -3
  %353 = and i32 %303, %352
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds i8, ptr %265, i64 %354
  %356 = load i8, ptr %355, align 1, !tbaa !27
  %357 = icmp eq i8 %356, -60
  %358 = load i32, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4
  %359 = icmp slt i32 %358, 8
  %360 = select i1 %357, i1 %359, i1 false
  br i1 %360, label %361, label %372

361:                                              ; preds = %351
  %362 = add nuw nsw i32 %358, 1
  store i32 %362, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4, !tbaa !18
  %363 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2ht, i64 0, i32 3), align 8, !tbaa !58
  %364 = sext i32 %358 to i64
  %365 = getelementptr inbounds i32, ptr %363, i64 %364
  store i32 %310, ptr %365, align 4, !tbaa !18
  %366 = load i32, ptr @pos, align 4, !tbaa !18
  %367 = load i32, ptr @buf, align 8, !tbaa !23
  %368 = add nsw i32 %366, -4
  %369 = add nsw i32 %367, -1
  %370 = and i32 %369, %368
  %371 = sext i32 %370 to i64
  br label %372

372:                                              ; preds = %361, %351, %346
  %373 = phi i64 [ %371, %361 ], [ %312, %351 ], [ %312, %346 ]
  %374 = phi i32 [ %369, %361 ], [ %303, %351 ], [ %303, %346 ]
  %375 = phi i32 [ %368, %361 ], [ %310, %351 ], [ %310, %346 ]
  %376 = phi i32 [ %366, %361 ], [ %263, %351 ], [ %263, %346 ]
  %377 = getelementptr inbounds i8, ptr %265, i64 %373
  %378 = load i8, ptr %377, align 1, !tbaa !27
  %379 = icmp eq i8 %378, -1
  br i1 %379, label %380, label %403

380:                                              ; preds = %372
  %381 = add nsw i32 %376, -3
  %382 = and i32 %374, %381
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds i8, ptr %265, i64 %383
  %385 = load i8, ptr %384, align 1, !tbaa !27
  switch i8 %385, label %403 [
    i8 -64, label %386
    i8 -37, label %387
  ]

386:                                              ; preds = %380
  store i32 %375, ptr @_ZZ9jpegModelR5MixerE3sof, align 4, !tbaa !18
  br label %403

387:                                              ; preds = %380
  %388 = add nsw i32 %376, -2
  %389 = and i32 %374, %388
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds i8, ptr %265, i64 %390
  %392 = load i8, ptr %391, align 1, !tbaa !27
  %393 = zext i8 %392 to i32
  %394 = shl nuw nsw i32 %393, 8
  %395 = add i32 %376, -1
  %396 = and i32 %374, %395
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds i8, ptr %265, i64 %397
  %399 = load i8, ptr %398, align 1, !tbaa !27
  %400 = zext i8 %399 to i32
  %401 = add i32 %395, %394
  %402 = add i32 %401, %400
  store i32 %402, ptr @_ZZ9jpegModelR5MixerE7dqt_end, align 4, !tbaa !18
  br label %443

403:                                              ; preds = %386, %380, %372
  %404 = load i32, ptr @_ZZ9jpegModelR5MixerE9dqt_state, align 4, !tbaa !18
  %405 = icmp sgt i32 %404, -1
  br i1 %405, label %406, label %448

406:                                              ; preds = %403
  %407 = load i32, ptr @_ZZ9jpegModelR5MixerE7dqt_end, align 4, !tbaa !18
  %408 = icmp slt i32 %376, %407
  br i1 %408, label %409, label %443

409:                                              ; preds = %406
  %410 = urem i32 %404, 65
  %411 = icmp eq i32 %410, 0
  %412 = add nsw i32 %376, -1
  %413 = and i32 %374, %412
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds i8, ptr %265, i64 %414
  %416 = load i8, ptr %415, align 1, !tbaa !27
  br i1 %411, label %417, label %419

417:                                              ; preds = %409
  %418 = zext i8 %416 to i32
  store i32 %418, ptr @_ZZ9jpegModelR5MixerE4qnum, align 4, !tbaa !18
  br label %438

419:                                              ; preds = %409
  %420 = icmp eq i8 %416, 0
  br i1 %420, label %421, label %422

421:                                              ; preds = %419
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  br label %2576

422:                                              ; preds = %419
  %423 = load i32, ptr @_ZZ9jpegModelR5MixerE4qnum, align 4
  %424 = icmp ult i32 %423, 4
  br i1 %424, label %426, label %425

425:                                              ; preds = %422
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  br label %2576

426:                                              ; preds = %422
  %427 = add i8 %416, -1
  %428 = shl nuw nsw i32 %423, 6
  %429 = add nsw i32 %410, -1
  %430 = add nuw nsw i32 %429, %428
  %431 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !26
  %432 = zext i32 %430 to i64
  %433 = getelementptr inbounds i8, ptr %431, i64 %432
  store i8 %427, ptr %433, align 1, !tbaa !27
  %434 = load i32, ptr @pos, align 4, !tbaa !18
  %435 = load i32, ptr @buf, align 8, !tbaa !23
  %436 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %437 = add nsw i32 %435, -1
  br label %438

438:                                              ; preds = %426, %417
  %439 = phi i32 [ %437, %426 ], [ %374, %417 ]
  %440 = phi ptr [ %436, %426 ], [ %265, %417 ]
  %441 = phi i32 [ %434, %426 ], [ %376, %417 ]
  %442 = add nuw nsw i32 %404, 1
  br label %443

443:                                              ; preds = %438, %406, %387
  %444 = phi i32 [ %442, %438 ], [ 0, %387 ], [ -1, %406 ]
  %445 = phi i32 [ %439, %438 ], [ %374, %387 ], [ %374, %406 ]
  %446 = phi ptr [ %440, %438 ], [ %265, %387 ], [ %265, %406 ]
  %447 = phi i32 [ %441, %438 ], [ %376, %387 ], [ %376, %406 ]
  store i32 %444, ptr @_ZZ9jpegModelR5MixerE9dqt_state, align 4, !tbaa !18
  br label %448

448:                                              ; preds = %443, %403
  %449 = phi i32 [ %374, %403 ], [ %445, %443 ]
  %450 = phi ptr [ %265, %403 ], [ %446, %443 ]
  %451 = phi i32 [ %376, %403 ], [ %447, %443 ]
  %452 = add nsw i32 %451, -2
  %453 = and i32 %449, %452
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds i8, ptr %450, i64 %454
  %456 = load i8, ptr %455, align 1, !tbaa !27
  %457 = icmp eq i8 %456, -1
  br i1 %457, label %458, label %471

458:                                              ; preds = %448
  %459 = add nsw i32 %451, -1
  %460 = and i32 %449, %459
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds i8, ptr %450, i64 %461
  %463 = load i8, ptr %462, align 1, !tbaa !27
  %464 = and i8 %463, -8
  %465 = icmp eq i8 %464, -48
  br i1 %465, label %466, label %471

466:                                              ; preds = %458
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !18
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !18
  %467 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE4pred, i64 0, i32 3), align 8, !tbaa !58
  %468 = load i32, ptr @_ZZ9jpegModelR5MixerE4pred, align 8, !tbaa !48
  %469 = sext i32 %468 to i64
  %470 = shl nsw i64 %469, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %467, i8 0, i64 %470, i1 false)
  br label %471

471:                                              ; preds = %466, %458, %448, %187
  %472 = phi i32 [ %188, %187 ], [ %347, %448 ], [ %347, %458 ], [ %347, %466 ]
  %473 = load i32, ptr @pos, align 4, !tbaa !18
  %474 = icmp eq i32 %473, %472
  %475 = load i32, ptr @bpos, align 4
  %476 = icmp eq i32 %475, 1
  %477 = select i1 %474, i1 %476, i1 false
  br i1 %477, label %478, label %852

478:                                              ; preds = %471
  %479 = load i32, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4, !tbaa !18
  %480 = icmp sgt i32 %479, 0
  br i1 %480, label %481, label %485

481:                                              ; preds = %478
  %482 = zext i32 %479 to i64
  %483 = load i32, ptr @buf, align 8, !tbaa !23
  %484 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  br label %490

485:                                              ; preds = %478
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %486 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

487:                                              ; preds = %613
  %488 = add nuw nsw i64 %495, 1
  %489 = icmp eq i64 %488, %482
  br i1 %489, label %622, label %490, !llvm.loop !117

490:                                              ; preds = %487, %481
  %491 = phi ptr [ %484, %481 ], [ %614, %487 ]
  %492 = phi i32 [ %483, %481 ], [ %615, %487 ]
  %493 = phi ptr [ %484, %481 ], [ %617, %487 ]
  %494 = phi i32 [ %483, %481 ], [ %618, %487 ]
  %495 = phi i64 [ 0, %481 ], [ %488, %487 ]
  %496 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2ht, i64 0, i32 3), align 8, !tbaa !58
  %497 = getelementptr inbounds i32, ptr %496, i64 %495
  %498 = load i32, ptr %497, align 4, !tbaa !18
  %499 = add nsw i32 %498, 4
  %500 = add i32 %498, 2
  %501 = add nsw i32 %494, -1
  %502 = and i32 %501, %500
  %503 = sext i32 %502 to i64
  %504 = getelementptr inbounds i8, ptr %493, i64 %503
  %505 = load i8, ptr %504, align 1, !tbaa !27
  %506 = zext i8 %505 to i32
  %507 = shl nuw nsw i32 %506, 8
  %508 = add nsw i32 %498, 3
  %509 = and i32 %501, %508
  %510 = sext i32 %509 to i64
  %511 = getelementptr inbounds i8, ptr %493, i64 %510
  %512 = load i8, ptr %511, align 1, !tbaa !27
  %513 = zext i8 %512 to i32
  %514 = add i32 %500, %507
  %515 = add i32 %514, %513
  %516 = icmp slt i32 %499, %515
  %517 = load i32, ptr @pos, align 4
  %518 = icmp slt i32 %515, %517
  %519 = select i1 %516, i1 %518, i1 false
  %520 = add nsw i32 %498, 2104
  %521 = icmp slt i32 %515, %520
  %522 = select i1 %519, i1 %521, i1 false
  br i1 %522, label %531, label %613

523:                                              ; preds = %609
  %524 = icmp slt i32 %.lcssa24, %515
  %525 = load i32, ptr @pos, align 4
  %526 = icmp slt i32 %515, %525
  %527 = select i1 %524, i1 %526, i1 false
  %528 = add nsw i32 %.lcssa24, 2100
  %529 = icmp slt i32 %515, %528
  %530 = select i1 %527, i1 %529, i1 false
  br i1 %530, label %531, label %613

531:                                              ; preds = %523, %490
  %532 = phi i32 [ %.lcssa24, %523 ], [ %499, %490 ]
  %533 = phi i32 [ %538, %523 ], [ 0, %490 ]
  %534 = phi i32 [ %567, %523 ], [ %494, %490 ]
  %535 = phi ptr [ %569, %523 ], [ %493, %490 ]
  %536 = phi i32 [ %567, %523 ], [ %492, %490 ]
  %537 = phi ptr [ %569, %523 ], [ %491, %490 ]
  %538 = add nuw nsw i32 %533, 1
  %539 = icmp eq i32 %533, 9
  br i1 %539, label %613, label %540

540:                                              ; preds = %531
  %541 = add nsw i32 %536, -1
  %542 = and i32 %541, %532
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds i8, ptr %537, i64 %543
  %545 = load i8, ptr %544, align 1, !tbaa !27
  %546 = and i8 %545, 15
  %547 = icmp ugt i8 %545, 31
  %548 = icmp ugt i8 %546, 3
  %549 = or i1 %547, %548
  br i1 %549, label %613, label %550

550:                                              ; preds = %540
  %551 = zext i8 %546 to i32
  %552 = lshr i8 %545, 4
  %553 = zext i8 %552 to i32
  %554 = shl nuw nsw i32 %553, 6
  %555 = shl nuw nsw i32 %551, 4
  %556 = add nuw nsw i32 %554, %555
  %557 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE3huf, i64 0, i32 3), align 8, !tbaa !114
  %558 = zext i32 %556 to i64
  %559 = add nsw i32 %532, 17
  %560 = shl nuw nsw i32 %553, 10
  %561 = shl nuw nsw i32 %551, 8
  %562 = add nuw nsw i32 %560, %561
  %563 = zext i32 %562 to i64
  br label %570

564:                                              ; preds = %570
  %565 = getelementptr inbounds %struct.HUF, ptr %557, i64 %558
  %566 = add nsw i32 %532, 1
  %567 = load i32, ptr @buf, align 8, !tbaa !23
  %568 = add nsw i32 %567, -1
  %569 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  br label %586

570:                                              ; preds = %570, %550
  %571 = phi i64 [ 0, %550 ], [ %584, %570 ]
  %572 = trunc i64 %571 to i32
  %573 = add nsw i32 %559, %572
  %574 = load i32, ptr @buf, align 8, !tbaa !23
  %575 = add nsw i32 %574, -1
  %576 = and i32 %575, %573
  %577 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %578 = sext i32 %576 to i64
  %579 = getelementptr inbounds i8, ptr %577, i64 %578
  %580 = load i8, ptr %579, align 1, !tbaa !27
  %581 = add nuw nsw i64 %571, %563
  %582 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE4hbuf, i64 0, i32 3), align 8, !tbaa !26
  %583 = getelementptr inbounds i8, ptr %582, i64 %581
  store i8 %580, ptr %583, align 1, !tbaa !27
  %584 = add nuw nsw i64 %571, 1
  %585 = icmp eq i64 %584, 256
  br i1 %585, label %564, label %570, !llvm.loop !118

586:                                              ; preds = %586, %564
  %587 = phi i64 [ 0, %564 ], [ %607, %586 ]
  %588 = phi i32 [ %559, %564 ], [ %604, %586 ]
  %589 = phi i32 [ %562, %564 ], [ %605, %586 ]
  %590 = phi i32 [ 0, %564 ], [ %606, %586 ]
  %591 = getelementptr inbounds %struct.HUF, ptr %565, i64 %587
  store i32 %590, ptr %591, align 4, !tbaa !119
  %592 = trunc i64 %587 to i32
  %593 = add i32 %566, %592
  %594 = and i32 %568, %593
  %595 = sext i32 %594 to i64
  %596 = getelementptr inbounds i8, ptr %569, i64 %595
  %597 = load i8, ptr %596, align 1, !tbaa !27
  %598 = zext i8 %597 to i32
  %599 = add nsw i32 %590, %598
  %600 = getelementptr inbounds %struct.HUF, ptr %565, i64 %587, i32 1
  store i32 %599, ptr %600, align 4, !tbaa !121
  %601 = getelementptr inbounds %struct.HUF, ptr %565, i64 %587, i32 2
  store i32 %589, ptr %601, align 4, !tbaa !122
  %602 = load i8, ptr %596, align 1, !tbaa !27
  %603 = zext i8 %602 to i32
  %604 = add nsw i32 %588, %603
  %605 = add nuw nsw i32 %589, %603
  %606 = shl nsw i32 %599, 1
  %607 = add nuw nsw i64 %587, 1
  %608 = icmp eq i64 %607, 16
  br i1 %608, label %609, label %586, !llvm.loop !123

609:                                              ; preds = %586
  %.lcssa24 = phi i32 [ %604, %586 ]
  %.lcssa23 = phi i32 [ %605, %586 ]
  %610 = icmp ult i32 %.lcssa23, 2048
  br i1 %610, label %523, label %611

611:                                              ; preds = %609
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %612 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

613:                                              ; preds = %540, %531, %523, %490
  %614 = phi ptr [ %491, %490 ], [ %537, %531 ], [ %569, %523 ], [ %537, %540 ]
  %615 = phi i32 [ %492, %490 ], [ %536, %531 ], [ %567, %523 ], [ %536, %540 ]
  %616 = phi i32 [ %499, %490 ], [ %532, %531 ], [ %.lcssa24, %523 ], [ %532, %540 ]
  %617 = phi ptr [ %493, %490 ], [ %535, %531 ], [ %569, %523 ], [ %537, %540 ]
  %618 = phi i32 [ %494, %490 ], [ %534, %531 ], [ %567, %523 ], [ %536, %540 ]
  %619 = icmp eq i32 %616, %515
  br i1 %619, label %487, label %620

620:                                              ; preds = %613
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %621 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

622:                                              ; preds = %487
  %.lcssa28 = phi ptr [ %614, %487 ]
  %.lcssa26 = phi i32 [ %615, %487 ]
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !18
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !18
  %623 = load i32, ptr @_ZZ9jpegModelR5MixerE3sof, align 4, !tbaa !18
  %624 = icmp eq i32 %623, 0
  %625 = load i32, ptr @_ZZ9jpegModelR5MixerE3sos, align 4
  %626 = icmp ne i32 %625, 0
  %627 = select i1 %624, i1 %626, i1 false
  br i1 %627, label %628, label %630

628:                                              ; preds = %622
  %629 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

630:                                              ; preds = %622
  %631 = add nsw i32 %625, 4
  %632 = add nsw i32 %.lcssa26, -1
  %633 = and i32 %632, %631
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds i8, ptr %.lcssa28, i64 %634
  %636 = load i8, ptr %635, align 1, !tbaa !27
  %637 = zext i8 %636 to i32
  %638 = add nsw i32 %623, 9
  %639 = and i32 %632, %638
  %640 = sext i32 %639 to i64
  %641 = getelementptr inbounds i8, ptr %.lcssa28, i64 %640
  %642 = load i8, ptr %641, align 1, !tbaa !27
  %643 = zext i8 %642 to i32
  %644 = icmp ult i8 %636, 5
  %645 = icmp ult i8 %642, 5
  %646 = select i1 %644, i1 %645, i1 false
  br i1 %646, label %649, label %647

647:                                              ; preds = %630
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %648 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

649:                                              ; preds = %630
  store i32 0, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !18
  %650 = icmp eq i8 %636, 0
  br i1 %650, label %764, label %651

651:                                              ; preds = %649
  %652 = icmp eq i8 %642, 0
  br label %653

653:                                              ; preds = %749, %651
  %654 = phi i32 [ 0, %651 ], [ %752, %749 ]
  %655 = phi i32 [ 0, %651 ], [ %751, %749 ]
  %656 = phi i32 [ 0, %651 ], [ %750, %749 ]
  br i1 %652, label %749, label %657

657:                                              ; preds = %653
  %658 = shl nuw nsw i32 %654, 1
  %659 = add nsw i32 %658, %625
  %660 = add nsw i32 %659, 5
  %661 = add nsw i32 %659, 6
  br label %662

662:                                              ; preds = %741, %657
  %663 = phi i32 [ %656, %657 ], [ %742, %741 ]
  %664 = phi i32 [ %655, %657 ], [ %744, %741 ]
  %665 = phi i32 [ 0, %657 ], [ %745, %741 ]
  %666 = phi i32 [ %656, %657 ], [ %743, %741 ]
  %667 = load i32, ptr @buf, align 8, !tbaa !23
  %668 = add nsw i32 %667, -1
  %669 = and i32 %668, %660
  %670 = sext i32 %669 to i64
  %671 = getelementptr inbounds i8, ptr %.lcssa28, i64 %670
  %672 = load i8, ptr %671, align 1, !tbaa !27
  %673 = mul nuw nsw i32 %665, 3
  %674 = add nsw i32 %673, %623
  %675 = add nsw i32 %674, 10
  %676 = and i32 %668, %675
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds i8, ptr %.lcssa28, i64 %677
  %679 = load i8, ptr %678, align 1, !tbaa !27
  %680 = icmp eq i8 %672, %679
  br i1 %680, label %681, label %741

681:                                              ; preds = %662
  %682 = add nsw i32 %674, 11
  %683 = and i32 %668, %682
  %684 = sext i32 %683 to i64
  %685 = getelementptr inbounds i8, ptr %.lcssa28, i64 %684
  %686 = load i8, ptr %685, align 1, !tbaa !27
  %687 = zext i8 %686 to i32
  %688 = lshr i32 %687, 4
  %689 = tail call i32 @llvm.smax.i32(i32 %688, i32 %664)
  %690 = and i32 %687, 15
  %691 = mul nuw nsw i32 %690, %688
  %692 = icmp ne i32 %691, 0
  %693 = add nsw i32 %666, %691
  %694 = icmp slt i32 %693, 11
  %695 = select i1 %692, i1 %694, i1 false
  br i1 %695, label %696, label %703

696:                                              ; preds = %681
  %697 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8
  %698 = add nsw i32 %674, 12
  %699 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE4qmap, i64 0, i32 3), align 8
  %700 = sext i32 %666 to i64
  %701 = tail call i32 @llvm.smax.i32(i32 %666, i32 10)
  %702 = zext i32 %701 to i64
  br label %705

703:                                              ; preds = %681
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %704 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

705:                                              ; preds = %734, %696
  %706 = phi i64 [ %700, %696 ], [ %738, %734 ]
  %707 = phi i32 [ %691, %696 ], [ %737, %734 ]
  %708 = icmp eq i64 %706, %702
  br i1 %708, label %747, label %709

709:                                              ; preds = %705
  %710 = load i32, ptr @buf, align 8, !tbaa !23
  %711 = add nsw i32 %710, -1
  %712 = and i32 %711, %661
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds i8, ptr %.lcssa28, i64 %713
  %715 = load i8, ptr %714, align 1, !tbaa !27
  %716 = lshr i8 %715, 4
  %717 = zext i8 %716 to i32
  %718 = getelementptr inbounds [10 x i32], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 %706
  store i32 %717, ptr %718, align 4, !tbaa !18
  %719 = and i8 %715, 15
  %720 = zext i8 %719 to i32
  %721 = getelementptr inbounds [2 x [10 x i32]], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 1, i64 %706
  store i32 %720, ptr %721, align 4, !tbaa !18
  %722 = icmp ult i8 %715, 64
  %723 = icmp ult i8 %719, 4
  %724 = and i1 %722, %723
  br i1 %724, label %725, label %747

725:                                              ; preds = %709
  %726 = getelementptr inbounds i32, ptr %697, i64 %706
  store i32 %654, ptr %726, align 4, !tbaa !18
  %727 = load i32, ptr @buf, align 8, !tbaa !23
  %728 = add nsw i32 %727, -1
  %729 = and i32 %728, %698
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds i8, ptr %.lcssa28, i64 %730
  %732 = load i8, ptr %731, align 1, !tbaa !27
  %733 = icmp ult i8 %732, 4
  br i1 %733, label %734, label %747

734:                                              ; preds = %725
  %735 = zext i8 %732 to i32
  %736 = getelementptr inbounds i32, ptr %699, i64 %706
  store i32 %735, ptr %736, align 4, !tbaa !18
  %737 = add nsw i32 %707, -1
  %738 = add nsw i64 %706, 1
  %739 = trunc i64 %738 to i32
  store i32 %739, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !18
  %740 = icmp eq i32 %737, 0
  br i1 %740, label %741, label %705, !llvm.loop !124

741:                                              ; preds = %734, %662
  %742 = phi i32 [ %663, %662 ], [ %739, %734 ]
  %743 = phi i32 [ %666, %662 ], [ %739, %734 ]
  %744 = phi i32 [ %664, %662 ], [ %689, %734 ]
  %745 = add nuw nsw i32 %665, 1
  %746 = icmp eq i32 %745, %643
  br i1 %746, label %749, label %662, !llvm.loop !125

747:                                              ; preds = %725, %709, %705
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %748 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

749:                                              ; preds = %741, %653
  %750 = phi i32 [ %656, %653 ], [ %742, %741 ]
  %751 = phi i32 [ %655, %653 ], [ %744, %741 ]
  %752 = add nuw nsw i32 %654, 1
  %753 = icmp eq i32 %752, %637
  br i1 %753, label %754, label %653, !llvm.loop !126

754:                                              ; preds = %749
  %.lcssa22 = phi i32 [ %750, %749 ]
  %.lcssa21 = phi i32 [ %751, %749 ]
  %755 = add nsw i32 %.lcssa21, -1
  %756 = icmp ult i32 %755, 10
  br i1 %756, label %757, label %764

757:                                              ; preds = %754
  %758 = icmp sgt i32 %.lcssa22, 0
  br i1 %758, label %759, label %766

759:                                              ; preds = %757
  %760 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !58
  %761 = icmp eq i32 %.lcssa22, 1
  %762 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8
  %763 = zext i32 %.lcssa22 to i64
  br label %768

764:                                              ; preds = %754, %649
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %765 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

766:                                              ; preds = %774, %757
  %767 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE4zpos, i64 0, i32 3), align 8, !tbaa !58
  br label %795

768:                                              ; preds = %774, %759
  %769 = phi i64 [ 0, %759 ], [ %778, %774 ]
  %770 = getelementptr inbounds i32, ptr %760, i64 %769
  store i32 0, ptr %770, align 4, !tbaa !18
  br i1 %761, label %774, label %771

771:                                              ; preds = %768
  %772 = getelementptr inbounds i32, ptr %762, i64 %769
  %773 = trunc i64 %769 to i32
  br label %780

774:                                              ; preds = %791, %768
  %775 = phi i32 [ 0, %768 ], [ %792, %791 ]
  %776 = sub nsw i32 %.lcssa22, %775
  %777 = shl i32 %776, 6
  store i32 %777, ptr %770, align 4, !tbaa !18
  %778 = add nuw nsw i64 %769, 1
  %779 = icmp eq i64 %778, %763
  br i1 %779, label %766, label %768, !llvm.loop !127

780:                                              ; preds = %791, %771
  %781 = phi i32 [ 0, %771 ], [ %792, %791 ]
  %782 = phi i32 [ 1, %771 ], [ %793, %791 ]
  %783 = add nuw nsw i32 %782, %773
  %784 = srem i32 %783, %.lcssa22
  %785 = zext i32 %784 to i64
  %786 = getelementptr inbounds i32, ptr %762, i64 %785
  %787 = load i32, ptr %786, align 4, !tbaa !18
  %788 = load i32, ptr %772, align 4, !tbaa !18
  %789 = icmp eq i32 %787, %788
  br i1 %789, label %790, label %791

790:                                              ; preds = %780
  store i32 %782, ptr %770, align 4, !tbaa !18
  br label %791

791:                                              ; preds = %790, %780
  %792 = phi i32 [ %781, %780 ], [ %782, %790 ]
  %793 = add nuw nsw i32 %782, 1
  %794 = icmp eq i32 %793, %.lcssa22
  br i1 %794, label %774, label %780, !llvm.loop !128

795:                                              ; preds = %795, %766
  %796 = phi i64 [ 0, %766 ], [ %807, %795 ]
  %797 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %796
  %798 = load i8, ptr %797, align 1, !tbaa !27
  %799 = zext i8 %798 to i64
  %800 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %796
  %801 = load i8, ptr %800, align 1, !tbaa !27
  %802 = zext i8 %801 to i64
  %803 = shl nuw nsw i64 %802, 3
  %804 = add nuw nsw i64 %803, %799
  %805 = getelementptr inbounds i32, ptr %767, i64 %804
  %806 = trunc i64 %796 to i32
  store i32 %806, ptr %805, align 4, !tbaa !18
  %807 = add nuw nsw i64 %796, 1
  %808 = icmp eq i64 %807, 64
  br i1 %808, label %809, label %795, !llvm.loop !129

809:                                              ; preds = %795
  %810 = add nsw i32 %623, 7
  %811 = load i32, ptr @buf, align 8, !tbaa !23
  %812 = add nsw i32 %811, -1
  %813 = and i32 %812, %810
  %814 = sext i32 %813 to i64
  %815 = getelementptr inbounds i8, ptr %.lcssa28, i64 %814
  %816 = load i8, ptr %815, align 1, !tbaa !27
  %817 = zext i8 %816 to i32
  %818 = shl nuw nsw i32 %817, 8
  %819 = add nsw i32 %623, 8
  %820 = and i32 %812, %819
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds i8, ptr %.lcssa28, i64 %821
  %823 = load i8, ptr %822, align 1, !tbaa !27
  %824 = zext i8 %823 to i32
  %825 = or i32 %818, %824
  store i32 %825, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !18
  %826 = add nsw i32 %623, 5
  %827 = and i32 %812, %826
  %828 = sext i32 %827 to i64
  %829 = getelementptr inbounds i8, ptr %.lcssa28, i64 %828
  %830 = load i8, ptr %829, align 1, !tbaa !27
  %831 = zext i8 %830 to i32
  %832 = shl nuw nsw i32 %831, 8
  %833 = add nsw i32 %623, 6
  %834 = and i32 %812, %833
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds i8, ptr %.lcssa28, i64 %835
  %837 = load i8, ptr %836, align 1, !tbaa !27
  %838 = zext i8 %837 to i32
  %839 = or i32 %832, %838
  %840 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.12, i32 noundef %825, i32 noundef %839) #32
  %841 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !18
  %842 = add nsw i32 %841, -1
  %843 = shl nuw nsw i32 %.lcssa21, 3
  %844 = sdiv i32 %842, %843
  %845 = add nsw i32 %844, 1
  store i32 %845, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !18
  %846 = icmp sgt i32 %844, -1
  br i1 %846, label %849, label %847

847:                                              ; preds = %809
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %848 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

849:                                              ; preds = %809
  %850 = load i32, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !18
  %851 = shl nsw i32 %850, 6
  store i32 %851, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !18
  br label %854

852:                                              ; preds = %471
  %853 = load i32, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !18
  br label %854

854:                                              ; preds = %852, %849
  %855 = phi i32 [ %853, %852 ], [ %851, %849 ]
  %856 = icmp eq i32 %855, 0
  br i1 %856, label %1697, label %857

857:                                              ; preds = %854
  %858 = load i32, ptr @bpos, align 4, !tbaa !18
  %859 = icmp eq i32 %858, 0
  %860 = select i1 %859, i32 -2, i32 -1
  %861 = load i32, ptr @pos, align 4, !tbaa !18
  %862 = add i32 %860, %861
  %863 = load i32, ptr @buf, align 8, !tbaa !23
  %864 = add nsw i32 %863, -1
  %865 = and i32 %864, %862
  %866 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %867 = sext i32 %865 to i64
  %868 = getelementptr inbounds i8, ptr %866, i64 %867
  %869 = load i8, ptr %868, align 1, !tbaa !27
  %870 = icmp eq i8 %869, -1
  br i1 %870, label %1697, label %871

871:                                              ; preds = %857
  %872 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !18
  %873 = icmp slt i32 %872, 33
  br i1 %873, label %876, label %874

874:                                              ; preds = %871
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %875 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

876:                                              ; preds = %871
  %877 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !18
  %878 = load i32, ptr @y, align 4, !tbaa !18
  %879 = shl i32 %877, 1
  %880 = add i32 %878, %879
  store i32 %880, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !18
  %881 = add nsw i32 %872, 1
  store i32 %881, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !18
  %882 = load i32, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !18
  %883 = icmp slt i32 %882, 0
  br i1 %883, label %884, label %941

884:                                              ; preds = %876
  %885 = icmp ult i32 %872, 16
  br i1 %885, label %888, label %886

886:                                              ; preds = %884
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %887 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

888:                                              ; preds = %884
  %889 = load i32, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !18
  %890 = and i32 %889, 63
  %891 = icmp ne i32 %890, 0
  %892 = icmp ult i32 %889, 640
  br i1 %892, label %895, label %893

893:                                              ; preds = %888
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %894 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

895:                                              ; preds = %888
  %896 = lshr i32 %889, 6
  %897 = zext i1 %891 to i64
  %898 = zext i32 %896 to i64
  %899 = getelementptr inbounds [2 x [10 x i32]], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 %897, i64 %898
  %900 = load i32, ptr %899, align 4, !tbaa !18
  %901 = icmp ult i32 %900, 4
  br i1 %901, label %904, label %902

902:                                              ; preds = %895
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %903 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

904:                                              ; preds = %895
  %905 = select i1 %891, i32 64, i32 0
  %906 = shl nuw nsw i32 %900, 4
  %907 = add nuw nsw i32 %906, %905
  %908 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE3huf, i64 0, i32 3), align 8, !tbaa !114
  %909 = zext i32 %907 to i64
  %910 = getelementptr inbounds %struct.HUF, ptr %908, i64 %909
  %911 = zext i32 %872 to i64
  %912 = getelementptr inbounds %struct.HUF, ptr %910, i64 %911
  %913 = load i32, ptr %912, align 4, !tbaa !119
  %914 = getelementptr inbounds %struct.HUF, ptr %910, i64 %911, i32 1
  %915 = load i32, ptr %914, align 4, !tbaa !121
  %916 = icmp ugt i32 %913, %915
  br i1 %916, label %921, label %917

917:                                              ; preds = %904
  %918 = getelementptr inbounds %struct.HUF, ptr %910, i64 %911, i32 2
  %919 = load i32, ptr %918, align 4, !tbaa !122
  %920 = icmp slt i32 %919, 2048
  br i1 %920, label %923, label %921

921:                                              ; preds = %917, %904
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %922 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

923:                                              ; preds = %917
  %924 = icmp ult i32 %880, %915
  br i1 %924, label %925, label %1697

925:                                              ; preds = %923
  %926 = icmp ult i32 %880, %913
  br i1 %926, label %927, label %929

927:                                              ; preds = %925
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %928 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

929:                                              ; preds = %925
  %930 = sub i32 %880, %913
  %931 = add i32 %930, %919
  %932 = icmp ult i32 %931, 2048
  br i1 %932, label %933, label %939

933:                                              ; preds = %929
  %934 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE4hbuf, i64 0, i32 3), align 8, !tbaa !26
  %935 = zext i32 %931 to i64
  %936 = getelementptr inbounds i8, ptr %934, i64 %935
  %937 = load i8, ptr %936, align 1, !tbaa !27
  %938 = zext i8 %937 to i32
  store i32 %938, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !18
  store i32 %881, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !18
  br label %941

939:                                              ; preds = %929
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %940 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

941:                                              ; preds = %933, %876
  %942 = phi i32 [ %882, %876 ], [ %938, %933 ]
  %943 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !18
  %944 = and i32 %942, 15
  %945 = add nsw i32 %943, %944
  %946 = icmp eq i32 %945, %881
  br i1 %946, label %947, label %1697

947:                                              ; preds = %941
  store i32 %942, ptr @_ZZ9jpegModelR5MixerE3rs1, align 4, !tbaa !18
  %948 = load i32, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !18
  %949 = and i32 %948, 63
  %950 = icmp eq i32 %949, 0
  br i1 %950, label %1058, label %951

951:                                              ; preds = %947
  %952 = icmp eq i32 %942, 0
  br i1 %952, label %953, label %984

953:                                              ; preds = %951
  %954 = add nsw i32 %948, 63
  %955 = and i32 %954, -64
  store i32 %955, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !18
  %956 = icmp sgt i32 %955, -1
  br i1 %956, label %957, label %965

957:                                              ; preds = %953
  %958 = icmp sle i32 %955, %855
  %959 = icmp ult i32 %955, 641
  %960 = and i1 %958, %959
  br i1 %960, label %961, label %965

961:                                              ; preds = %957
  %962 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !18
  %963 = and i32 %962, 63
  %964 = icmp eq i32 %963, 0
  br i1 %964, label %1120, label %967

965:                                              ; preds = %957, %953
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %966 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

967:                                              ; preds = %967, %961
  %968 = phi i32 [ %975, %967 ], [ %962, %961 ]
  %969 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !48
  %970 = add nsw i32 %969, -1
  %971 = and i32 %970, %968
  %972 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !58
  %973 = sext i32 %971 to i64
  %974 = getelementptr inbounds i32, ptr %972, i64 %973
  store i32 0, ptr %974, align 4, !tbaa !18
  %975 = add nsw i32 %968, 1
  %976 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !23
  %977 = add nsw i32 %976, -1
  %978 = and i32 %977, %968
  %979 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %980 = sext i32 %978 to i64
  %981 = getelementptr inbounds i8, ptr %979, i64 %980
  store i8 0, ptr %981, align 1, !tbaa !27
  %982 = and i32 %975, 63
  %983 = icmp eq i32 %982, 0
  br i1 %983, label %1119, label %967, !llvm.loop !130

984:                                              ; preds = %951
  %985 = icmp ult i32 %944, 11
  br i1 %985, label %988, label %986

986:                                              ; preds = %984
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %987 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

988:                                              ; preds = %984
  %989 = lshr i32 %942, 4
  %990 = add nsw i32 %948, %989
  %991 = xor i32 %990, %948
  %992 = icmp ult i32 %991, 64
  br i1 %992, label %995, label %993

993:                                              ; preds = %988
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %994 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

995:                                              ; preds = %988
  %996 = add nuw nsw i32 %989, 1
  %997 = add nsw i32 %996, %948
  store i32 %997, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !18
  %998 = shl nsw i32 -1, %944
  %999 = xor i32 %998, -1
  %1000 = and i32 %880, %999
  %1001 = icmp eq i32 %944, 0
  br i1 %1001, label %1008, label %1002

1002:                                             ; preds = %995
  %1003 = add nsw i32 %944, -1
  %1004 = lshr i32 %1000, %1003
  %1005 = icmp eq i32 %1004, 0
  %1006 = select i1 %1005, i32 %999, i32 0
  %1007 = sub nsw i32 %1000, %1006
  br label %1008

1008:                                             ; preds = %1002, %995
  %1009 = phi i32 [ %1000, %995 ], [ %1007, %1002 ]
  %1010 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !18
  %1011 = icmp ult i32 %942, 16
  br i1 %1011, label %1034, label %1012

1012:                                             ; preds = %1012, %1008
  %1013 = phi i32 [ %1031, %1012 ], [ %989, %1008 ]
  %1014 = phi i32 [ %1024, %1012 ], [ %1010, %1008 ]
  %1015 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !48
  %1016 = add nsw i32 %1015, -1
  %1017 = and i32 %1016, %1014
  %1018 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !58
  %1019 = sext i32 %1017 to i64
  %1020 = getelementptr inbounds i32, ptr %1018, i64 %1019
  store i32 0, ptr %1020, align 4, !tbaa !18
  %1021 = shl nuw nsw i32 %1013, 4
  %1022 = or i32 %1021, %944
  %1023 = trunc i32 %1022 to i8
  %1024 = add nsw i32 %1014, 1
  %1025 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !23
  %1026 = add nsw i32 %1025, -1
  %1027 = and i32 %1026, %1014
  %1028 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %1029 = sext i32 %1027 to i64
  %1030 = getelementptr inbounds i8, ptr %1028, i64 %1029
  store i8 %1023, ptr %1030, align 1, !tbaa !27
  %1031 = add nsw i32 %1013, -1
  %1032 = icmp ugt i32 %1013, 1
  br i1 %1032, label %1012, label %1033, !llvm.loop !131

1033:                                             ; preds = %1012
  %.lcssa20 = phi i32 [ %1024, %1012 ]
  store i32 %.lcssa20, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !18
  br label %1034

1034:                                             ; preds = %1033, %1008
  %1035 = phi i32 [ %.lcssa20, %1033 ], [ %1010, %1008 ]
  %1036 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !48
  %1037 = add nsw i32 %1036, -1
  %1038 = and i32 %1037, %1035
  %1039 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !58
  %1040 = sext i32 %1038 to i64
  %1041 = getelementptr inbounds i32, ptr %1039, i64 %1040
  store i32 %1009, ptr %1041, align 4, !tbaa !18
  %1042 = shl nuw nsw i32 %944, 4
  %1043 = shl i32 %880, 2
  %1044 = lshr i32 %1043, %944
  %1045 = and i32 %1044, 3
  %1046 = or i32 %1045, %1042
  %1047 = trunc i32 %1046 to i8
  %1048 = or i8 %1047, 12
  %1049 = add nsw i32 %1035, 1
  store i32 %1049, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !18
  %1050 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !23
  %1051 = add nsw i32 %1050, -1
  %1052 = and i32 %1051, %1035
  %1053 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %1054 = sext i32 %1052 to i64
  %1055 = getelementptr inbounds i8, ptr %1053, i64 %1054
  store i8 %1048, ptr %1055, align 1, !tbaa !27
  %1056 = load i32, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !18
  %1057 = add nsw i32 %1056, %944
  store i32 %1057, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !18
  br label %1120

1058:                                             ; preds = %947
  %1059 = icmp ult i32 %942, 12
  br i1 %1059, label %1062, label %1060

1060:                                             ; preds = %1058
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %1061 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

1062:                                             ; preds = %1058
  %1063 = add nuw nsw i32 %948, 1
  store i32 %1063, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !18
  %1064 = shl nsw i32 -1, %942
  %1065 = xor i32 %1064, -1
  %1066 = and i32 %880, %1065
  %1067 = icmp eq i32 %942, 0
  br i1 %1067, label %1074, label %1068

1068:                                             ; preds = %1062
  %1069 = add nsw i32 %942, -1
  %1070 = lshr i32 %1066, %1069
  %1071 = icmp eq i32 %1070, 0
  %1072 = select i1 %1071, i32 %1065, i32 0
  %1073 = sub nsw i32 %1066, %1072
  br label %1074

1074:                                             ; preds = %1068, %1062
  %1075 = phi i32 [ %1066, %1062 ], [ %1073, %1068 ]
  %1076 = icmp ult i32 %948, 639
  br i1 %1076, label %1079, label %1077

1077:                                             ; preds = %1074
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %1078 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

1079:                                             ; preds = %1074
  %1080 = lshr i32 %1063, 6
  %1081 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8, !tbaa !58
  %1082 = zext i32 %1080 to i64
  %1083 = getelementptr inbounds i32, ptr %1081, i64 %1082
  %1084 = load i32, ptr %1083, align 4, !tbaa !18
  %1085 = icmp ult i32 %1084, 4
  br i1 %1085, label %1088, label %1086

1086:                                             ; preds = %1079
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %1087 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

1088:                                             ; preds = %1079
  %1089 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE4pred, i64 0, i32 3), align 8, !tbaa !58
  %1090 = zext i32 %1084 to i64
  %1091 = getelementptr inbounds i32, ptr %1089, i64 %1090
  %1092 = load i32, ptr %1091, align 4, !tbaa !18
  %1093 = add nsw i32 %1092, %1075
  store i32 %1093, ptr %1091, align 4, !tbaa !18
  %1094 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !18
  %1095 = and i32 %1094, 63
  %1096 = icmp eq i32 %1095, 0
  br i1 %1096, label %1099, label %1097

1097:                                             ; preds = %1088
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %1098 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

1099:                                             ; preds = %1088
  %1100 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !48
  %1101 = add nsw i32 %1100, -1
  %1102 = and i32 %1101, %1094
  %1103 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !58
  %1104 = sext i32 %1102 to i64
  %1105 = getelementptr inbounds i32, ptr %1103, i64 %1104
  store i32 %1093, ptr %1105, align 4, !tbaa !18
  %1106 = add nsw i32 %1093, 1023
  %1107 = lshr i32 %1106, 3
  %1108 = trunc i32 %1107 to i8
  %1109 = add nuw nsw i32 %1094, 1
  store i32 %1109, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !18
  %1110 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !23
  %1111 = add nsw i32 %1110, -1
  %1112 = and i32 %1111, %1094
  %1113 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %1114 = sext i32 %1112 to i64
  %1115 = getelementptr inbounds i8, ptr %1113, i64 %1114
  store i8 %1108, ptr %1115, align 1, !tbaa !27
  %1116 = load i32, ptr @_ZZ9jpegModelR5MixerE5ssum2, align 4, !tbaa !18
  store i32 %1116, ptr @_ZZ9jpegModelR5MixerE5ssum3, align 4, !tbaa !18
  %1117 = load i32, ptr @_ZZ9jpegModelR5MixerE5ssum1, align 4, !tbaa !18
  store i32 %1117, ptr @_ZZ9jpegModelR5MixerE5ssum2, align 4, !tbaa !18
  %1118 = load i32, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !18
  store i32 %1118, ptr @_ZZ9jpegModelR5MixerE5ssum1, align 4, !tbaa !18
  store i32 %942, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !18
  br label %1120

1119:                                             ; preds = %967
  %.lcssa19 = phi i32 [ %975, %967 ]
  store i32 %.lcssa19, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !18
  br label %1120

1120:                                             ; preds = %1119, %1099, %1034, %961
  %1121 = phi i32 [ %962, %961 ], [ %.lcssa19, %1119 ], [ %1049, %1034 ], [ %1109, %1099 ]
  %1122 = phi i32 [ %955, %961 ], [ %955, %1119 ], [ %997, %1034 ], [ %1063, %1099 ]
  %1123 = icmp slt i32 %1122, 0
  %1124 = icmp sgt i32 %1122, %855
  %1125 = or i1 %1123, %1124
  br i1 %1125, label %1126, label %1128

1126:                                             ; preds = %1120
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %1127 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

1128:                                             ; preds = %1120
  %1129 = icmp slt i32 %1122, %855
  br i1 %1129, label %1138, label %1130

1130:                                             ; preds = %1128
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !18
  %1131 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !18
  %1132 = add nsw i32 %1131, 1
  store i32 %1132, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !18
  %1133 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !18
  %1134 = icmp eq i32 %1132, %1133
  br i1 %1134, label %1135, label %1138

1135:                                             ; preds = %1130
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !18
  %1136 = load i32, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !18
  %1137 = add nsw i32 %1136, 1
  store i32 %1137, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !18
  br label %1138

1138:                                             ; preds = %1135, %1130, %1128
  %1139 = phi i32 [ 0, %1130 ], [ 0, %1135 ], [ %1122, %1128 ]
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !18
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !18
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !18
  %1140 = lshr i32 %1139, 6
  %1141 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE4qmap, i64 0, i32 3), align 8, !tbaa !58
  %1142 = zext i32 %1140 to i64
  %1143 = getelementptr inbounds i32, ptr %1141, i64 %1142
  %1144 = load i32, ptr %1143, align 4, !tbaa !18
  %1145 = shl nsw i32 %1144, 6
  %1146 = and i32 %1139, 63
  %1147 = sub nsw i32 %1121, %1146
  %1148 = icmp eq i32 %1146, 0
  br i1 %1148, label %1162, label %1250

1149:                                             ; preds = %1162
  %1150 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !58
  %1151 = getelementptr inbounds i32, ptr %1150, i64 %1142
  %1152 = load i32, ptr %1151, align 4, !tbaa !18
  %1153 = sub i32 %1147, %1152
  %1154 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !18
  %1155 = mul nsw i32 %1154, %855
  %1156 = sub i32 %1147, %1155
  %1157 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !26
  %1158 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !48
  %1159 = add nsw i32 %1158, -1
  %1160 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !58
  %1161 = sext i32 %1145 to i64
  br label %1181

1162:                                             ; preds = %1162, %1138
  %1163 = phi i64 [ %1179, %1162 ], [ 0, %1138 ]
  %1164 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %1163
  %1165 = load i32, ptr %1164, align 4, !tbaa !18
  %1166 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %1163
  %1167 = load i32, ptr %1166, align 4, !tbaa !18
  %1168 = getelementptr inbounds [32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 %1163
  %1169 = add nuw nsw i64 %1163, 16
  %1170 = getelementptr inbounds [32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 %1169
  tail call void @_Z8update_kiiRiS_(i32 noundef %1165, i32 noundef %1167, ptr noundef nonnull align 4 dereferenceable(4) %1168, ptr noundef nonnull align 4 dereferenceable(4) %1170) #32
  %1171 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %1163
  %1172 = load i32, ptr %1171, align 4, !tbaa !18
  %1173 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %1163
  %1174 = load i32, ptr %1173, align 4, !tbaa !18
  %1175 = add nuw nsw i64 %1163, 8
  %1176 = getelementptr inbounds [32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 %1175
  %1177 = add nuw nsw i64 %1163, 24
  %1178 = getelementptr inbounds [32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 %1177
  tail call void @_Z8update_kiiRiS_(i32 noundef %1172, i32 noundef %1174, ptr noundef nonnull align 4 dereferenceable(4) %1176, ptr noundef nonnull align 4 dereferenceable(4) %1178) #32
  store i32 0, ptr %1166, align 4, !tbaa !18
  store i32 0, ptr %1173, align 4, !tbaa !18
  store i32 0, ptr %1164, align 4, !tbaa !18
  store i32 0, ptr %1171, align 4, !tbaa !18
  %1179 = add nuw nsw i64 %1163, 1
  %1180 = icmp eq i64 %1179, 8
  br i1 %1180, label %1149, label %1162, !llvm.loop !132

1181:                                             ; preds = %1181, %1149
  %1182 = phi i64 [ 0, %1149 ], [ %1248, %1181 ]
  %1183 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1182
  %1184 = load i8, ptr %1183, align 1, !tbaa !27
  %1185 = zext i8 %1184 to i64
  %1186 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1185
  %1187 = load i32, ptr %1186, align 4, !tbaa !18
  %1188 = lshr i64 2978192880766211435, %1182
  %1189 = and i64 %1188, 1
  %1190 = icmp eq i64 %1189, 0
  %1191 = sub nsw i32 0, %1187
  %1192 = select i1 %1190, i32 %1191, i32 %1187
  %1193 = add nuw nsw i64 %1182, %1161
  %1194 = getelementptr inbounds i8, ptr %1157, i64 %1193
  %1195 = load i8, ptr %1194, align 1, !tbaa !27
  %1196 = zext i8 %1195 to i32
  %1197 = add nuw nsw i32 %1196, 1
  %1198 = trunc i64 %1182 to i32
  %1199 = add i32 %1156, %1198
  %1200 = and i32 %1159, %1199
  %1201 = sext i32 %1200 to i64
  %1202 = getelementptr inbounds i32, ptr %1160, i64 %1201
  %1203 = load i32, ptr %1202, align 4, !tbaa !18
  %1204 = mul i32 %1203, %1197
  %1205 = mul i32 %1204, %1192
  %1206 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1182
  %1207 = load i8, ptr %1206, align 1, !tbaa !27
  %1208 = zext i8 %1207 to i64
  %1209 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %1208
  %1210 = load i32, ptr %1209, align 4, !tbaa !18
  %1211 = add nsw i32 %1210, %1205
  store i32 %1211, ptr %1209, align 4, !tbaa !18
  %1212 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1208
  %1213 = load i32, ptr %1212, align 4, !tbaa !18
  %1214 = lshr i64 5374292623298483885, %1182
  %1215 = and i64 %1214, 1
  %1216 = icmp eq i64 %1215, 0
  %1217 = sub nsw i32 0, %1213
  %1218 = select i1 %1216, i32 %1217, i32 %1213
  %1219 = trunc i64 %1182 to i32
  %1220 = add i32 %1153, %1219
  %1221 = and i32 %1159, %1220
  %1222 = sext i32 %1221 to i64
  %1223 = getelementptr inbounds i32, ptr %1160, i64 %1222
  %1224 = load i32, ptr %1223, align 4, !tbaa !18
  %1225 = mul i32 %1224, %1197
  %1226 = mul i32 %1225, %1218
  %1227 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %1185
  %1228 = load i32, ptr %1227, align 4, !tbaa !18
  %1229 = add nsw i32 %1226, %1228
  store i32 %1229, ptr %1227, align 4, !tbaa !18
  %1230 = lshr i64 402702435, %1182
  %1231 = and i64 %1230, 1
  %1232 = icmp eq i64 %1231, 0
  %1233 = select i1 %1190, i32 -256, i32 256
  %1234 = select i1 %1232, i32 %1233, i32 181
  %1235 = mul i32 %1204, %1234
  %1236 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %1208
  %1237 = load i32, ptr %1236, align 4, !tbaa !18
  %1238 = add nsw i32 %1237, %1235
  store i32 %1238, ptr %1236, align 4, !tbaa !18
  %1239 = lshr i64 34362885645, %1182
  %1240 = and i64 %1239, 1
  %1241 = icmp eq i64 %1240, 0
  %1242 = select i1 %1216, i32 -256, i32 256
  %1243 = select i1 %1241, i32 %1242, i32 181
  %1244 = mul i32 %1225, %1243
  %1245 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %1185
  %1246 = load i32, ptr %1245, align 4, !tbaa !18
  %1247 = add nsw i32 %1246, %1244
  store i32 %1247, ptr %1245, align 4, !tbaa !18
  %1248 = add nuw nsw i64 %1182, 1
  %1249 = icmp eq i64 %1248, 64
  br i1 %1249, label %1303, label %1181, !llvm.loop !133

1250:                                             ; preds = %1138
  %1251 = add nsw i32 %1146, -1
  %1252 = zext i32 %1251 to i64
  %1253 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1252
  %1254 = load i8, ptr %1253, align 1, !tbaa !27
  %1255 = zext i8 %1254 to i64
  %1256 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1255
  %1257 = load i32, ptr %1256, align 4, !tbaa !18
  %1258 = add nuw i32 %1251, %1145
  %1259 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !26
  %1260 = sext i32 %1258 to i64
  %1261 = getelementptr inbounds i8, ptr %1259, i64 %1260
  %1262 = load i8, ptr %1261, align 1, !tbaa !27
  %1263 = zext i8 %1262 to i32
  %1264 = xor i32 %1263, -1
  %1265 = add nsw i32 %1121, -1
  %1266 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !48
  %1267 = add nsw i32 %1266, -1
  %1268 = and i32 %1267, %1265
  %1269 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !58
  %1270 = sext i32 %1268 to i64
  %1271 = getelementptr inbounds i32, ptr %1269, i64 %1270
  %1272 = load i32, ptr %1271, align 4, !tbaa !18
  %1273 = mul i32 %1272, %1264
  %1274 = mul i32 %1273, %1257
  %1275 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1252
  %1276 = load i8, ptr %1275, align 1, !tbaa !27
  %1277 = zext i8 %1276 to i64
  %1278 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %1277
  %1279 = load i32, ptr %1278, align 4, !tbaa !18
  %1280 = add i32 %1279, %1274
  store i32 %1280, ptr %1278, align 4, !tbaa !18
  %1281 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1277
  %1282 = load i32, ptr %1281, align 4, !tbaa !18
  %1283 = mul i32 %1273, %1282
  %1284 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %1255
  %1285 = load i32, ptr %1284, align 4, !tbaa !18
  %1286 = add i32 %1283, %1285
  store i32 %1286, ptr %1284, align 4, !tbaa !18
  %1287 = lshr i64 402702435, %1252
  %1288 = and i64 %1287, 1
  %1289 = icmp eq i64 %1288, 0
  %1290 = select i1 %1289, i32 256, i32 181
  %1291 = mul i32 %1273, %1290
  %1292 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %1277
  %1293 = load i32, ptr %1292, align 4, !tbaa !18
  %1294 = add i32 %1293, %1291
  store i32 %1294, ptr %1292, align 4, !tbaa !18
  %1295 = lshr i64 34362885645, %1252
  %1296 = and i64 %1295, 1
  %1297 = icmp eq i64 %1296, 0
  %1298 = select i1 %1297, i32 256, i32 181
  %1299 = mul i32 %1273, %1298
  %1300 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %1255
  %1301 = load i32, ptr %1300, align 4, !tbaa !18
  %1302 = add i32 %1301, %1299
  store i32 %1302, ptr %1300, align 4, !tbaa !18
  br label %1303

1303:                                             ; preds = %1250, %1181
  %1304 = phi ptr [ %1259, %1250 ], [ %1157, %1181 ]
  %1305 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE4sumv, i64 0, i32 3), align 8, !tbaa !58
  %1306 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE4sumu, i64 0, i32 3), align 8, !tbaa !58
  br label %1307

1307:                                             ; preds = %1307, %1303
  %1308 = phi i64 [ 0, %1303 ], [ %1334, %1307 ]
  %1309 = getelementptr inbounds [32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 %1308
  %1310 = load i32, ptr %1309, align 4, !tbaa !18
  %1311 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %1308
  %1312 = load i32, ptr %1311, align 4, !tbaa !18
  %1313 = mul nsw i32 %1312, %1310
  %1314 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %1308
  %1315 = load i32, ptr %1314, align 4, !tbaa !18
  %1316 = sub nsw i32 8, %1310
  %1317 = mul nsw i32 %1315, %1316
  %1318 = add nsw i32 %1317, %1313
  %1319 = sdiv i32 %1318, 8
  %1320 = getelementptr inbounds i32, ptr %1305, i64 %1308
  store i32 %1319, ptr %1320, align 4, !tbaa !18
  %1321 = add nuw nsw i64 %1308, 8
  %1322 = getelementptr inbounds [32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 %1321
  %1323 = load i32, ptr %1322, align 4, !tbaa !18
  %1324 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %1308
  %1325 = load i32, ptr %1324, align 4, !tbaa !18
  %1326 = mul nsw i32 %1325, %1323
  %1327 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %1308
  %1328 = load i32, ptr %1327, align 4, !tbaa !18
  %1329 = sub nsw i32 8, %1323
  %1330 = mul nsw i32 %1328, %1329
  %1331 = add nsw i32 %1330, %1326
  %1332 = sdiv i32 %1331, 8
  %1333 = getelementptr inbounds i32, ptr %1306, i64 %1308
  store i32 %1332, ptr %1333, align 4, !tbaa !18
  %1334 = add nuw nsw i64 %1308, 1
  %1335 = icmp eq i64 %1334, 8
  br i1 %1335, label %1336, label %1307, !llvm.loop !134

1336:                                             ; preds = %1450, %1307
  %1337 = phi i64 [ %1451, %1450 ], [ 0, %1307 ]
  %1338 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @ilog, i64 0, i32 0, i32 3), align 8
  %1339 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8
  %1340 = getelementptr inbounds i32, ptr %1339, i64 %1142
  %1341 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8
  %1342 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8
  %1343 = getelementptr inbounds i32, ptr %1342, i64 %1337
  %1344 = add nuw nsw i64 %1337, 4
  %1345 = getelementptr inbounds i32, ptr %1342, i64 %1344
  %1346 = trunc i64 %1337 to i32
  %1347 = trunc i64 %1337 to i32
  %1348 = sub i32 2, %1347
  br label %1367

1349:                                             ; preds = %1450
  %1350 = zext i32 %1146 to i64
  %1351 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1350
  %1352 = load i8, ptr %1351, align 1, !tbaa !27
  %1353 = zext i8 %1352 to i32
  %1354 = zext i8 %1352 to i64
  %1355 = getelementptr inbounds i32, ptr %1306, i64 %1354
  %1356 = load i32, ptr %1355, align 4, !tbaa !18
  %1357 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1350
  %1358 = load i8, ptr %1357, align 1, !tbaa !27
  %1359 = zext i8 %1358 to i32
  %1360 = zext i8 %1358 to i64
  %1361 = getelementptr inbounds i32, ptr %1305, i64 %1360
  %1362 = load i32, ptr %1361, align 4, !tbaa !18
  %1363 = add i32 %1362, %1356
  %1364 = shl i32 %1363, 1
  %1365 = zext i8 %1358 to i64
  %1366 = zext i8 %1352 to i64
  br label %1462

1367:                                             ; preds = %1447, %1336
  %1368 = phi i32 [ 0, %1336 ], [ %1448, %1447 ]
  %1369 = add nuw nsw i32 %1368, %1146
  %1370 = tail call i32 @llvm.smin.i32(i32 %1369, i32 63)
  %1371 = zext i32 %1370 to i64
  %1372 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1371
  %1373 = load i8, ptr %1372, align 1, !tbaa !27
  %1374 = zext i8 %1373 to i64
  %1375 = getelementptr inbounds i32, ptr %1306, i64 %1374
  %1376 = load i32, ptr %1375, align 4, !tbaa !18
  %1377 = mul nsw i32 %1376, %1346
  %1378 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1371
  %1379 = load i8, ptr %1378, align 1, !tbaa !27
  %1380 = zext i8 %1379 to i64
  %1381 = getelementptr inbounds i32, ptr %1305, i64 %1380
  %1382 = load i32, ptr %1381, align 4, !tbaa !18
  %1383 = mul nsw i32 %1382, %1348
  %1384 = add nsw i32 %1383, %1377
  %1385 = sdiv i32 %1384, 2
  %1386 = or i32 %1370, %1145
  %1387 = sext i32 %1386 to i64
  %1388 = getelementptr inbounds i8, ptr %1304, i64 %1387
  %1389 = load i8, ptr %1388, align 1, !tbaa !27
  %1390 = zext i8 %1389 to i32
  %1391 = mul nuw nsw i32 %1390, 181
  %1392 = add nuw nsw i32 %1391, 181
  %1393 = sdiv i32 %1385, %1392
  %1394 = icmp eq i32 %1370, 0
  br i1 %1394, label %1395, label %1405

1395:                                             ; preds = %1367
  %1396 = load i32, ptr %1340, align 4, !tbaa !18
  %1397 = sub nsw i32 %1147, %1396
  %1398 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !48
  %1399 = add nsw i32 %1398, -1
  %1400 = and i32 %1399, %1397
  %1401 = sext i32 %1400 to i64
  %1402 = getelementptr inbounds i32, ptr %1341, i64 %1401
  %1403 = load i32, ptr %1402, align 4, !tbaa !18
  %1404 = sub nsw i32 %1393, %1403
  br label %1405

1405:                                             ; preds = %1395, %1367
  %1406 = phi i32 [ %1404, %1395 ], [ %1393, %1367 ]
  %1407 = phi i32 [ 14, %1395 ], [ 10, %1367 ]
  %1408 = tail call i32 @llvm.abs.i32(i32 %1406, i1 true)
  %1409 = mul i32 %1408, %1407
  %1410 = and i32 %1409, 65534
  %1411 = or i32 %1410, 1
  %1412 = zext i32 %1411 to i64
  %1413 = getelementptr inbounds i8, ptr %1338, i64 %1412
  %1414 = load i8, ptr %1413, align 1, !tbaa !27
  %1415 = zext i8 %1414 to i32
  %1416 = sub nsw i32 0, %1415
  %1417 = icmp slt i32 %1406, 0
  %1418 = select i1 %1417, i32 %1416, i32 %1415
  %1419 = trunc i32 %1418 to i16
  %1420 = sdiv i16 %1419, 10
  %1421 = sext i16 %1420 to i32
  %1422 = icmp eq i32 %1368, 0
  br i1 %1422, label %1423, label %1426

1423:                                             ; preds = %1405
  store i32 %1421, ptr %1343, align 4, !tbaa !18
  %1424 = sdiv i16 %1419, 40
  %1425 = sext i16 %1424 to i32
  store i32 %1425, ptr %1345, align 4, !tbaa !18
  br label %1447

1426:                                             ; preds = %1405
  %1427 = tail call i32 @llvm.abs.i32(i32 %1421, i1 true)
  %1428 = load i32, ptr %1343, align 4, !tbaa !18
  %1429 = tail call i32 @llvm.abs.i32(i32 %1428, i1 true)
  %1430 = add nuw nsw i32 %1429, 1
  %1431 = icmp ugt i32 %1427, %1430
  br i1 %1431, label %1432, label %1447

1432:                                             ; preds = %1426
  %.lcssa17 = phi i32 [ %1418, %1426 ]
  %.lcssa15 = phi i16 [ %1419, %1426 ]
  %.lcssa13 = phi i32 [ %1368, %1426 ]
  %.lcssa12 = phi i32 [ %1428, %1426 ]
  %1433 = icmp sgt i32 %.lcssa17, 9
  %1434 = shl nuw nsw i32 %.lcssa13, 7
  %1435 = select i1 %1433, i32 64, i32 0
  %1436 = or i32 %1435, %1434
  %1437 = add nsw i32 %.lcssa12, %1436
  store i32 %1437, ptr %1343, align 4, !tbaa !18
  %1438 = sdiv i16 %.lcssa15, 40
  %1439 = tail call i16 @llvm.abs.i16(i16 %1438, i1 true)
  %1440 = zext i16 %1439 to i32
  %1441 = load i32, ptr %1345, align 4, !tbaa !18
  %1442 = tail call i32 @llvm.abs.i32(i32 %1441, i1 true)
  %1443 = add nuw nsw i32 %1442, 1
  %1444 = icmp ult i32 %1443, %1440
  br i1 %1444, label %1445, label %1450

1445:                                             ; preds = %1432
  %1446 = add nsw i32 %1441, %1436
  store i32 %1446, ptr %1345, align 4, !tbaa !18
  br label %1450

1447:                                             ; preds = %1426, %1423
  %1448 = add nuw nsw i32 %1368, 1
  %1449 = icmp eq i32 %1448, 8
  br i1 %1449, label %1450, label %1367, !llvm.loop !135

1450:                                             ; preds = %1447, %1445, %1432
  %1451 = add nuw nsw i64 %1337, 1
  %1452 = icmp eq i64 %1451, 3
  br i1 %1452, label %1349, label %1336, !llvm.loop !136

1453:                                             ; preds = %1477
  %.lcssa11 = phi i32 [ %1478, %1477 ]
  %1454 = or i32 %1145, %1146
  %1455 = sext i32 %1454 to i64
  %1456 = getelementptr inbounds i8, ptr %1304, i64 %1455
  %1457 = load i8, ptr %1456, align 1, !tbaa !27
  %1458 = zext i8 %1457 to i32
  %1459 = mul nuw nsw i32 %1458, 181
  %1460 = add nuw nsw i32 %1459, 181
  %1461 = sdiv i32 %.lcssa11, %1460
  br i1 %1148, label %1481, label %1494

1462:                                             ; preds = %1477, %1349
  %1463 = phi i64 [ 0, %1349 ], [ %1479, %1477 ]
  %1464 = phi i32 [ %1364, %1349 ], [ %1478, %1477 ]
  %1465 = icmp ugt i64 %1463, %1366
  br i1 %1465, label %1466, label %1470

1466:                                             ; preds = %1462
  %1467 = getelementptr inbounds i32, ptr %1306, i64 %1463
  %1468 = load i32, ptr %1467, align 4, !tbaa !18
  %1469 = sub nsw i32 %1464, %1468
  br label %1470

1470:                                             ; preds = %1466, %1462
  %1471 = phi i32 [ %1469, %1466 ], [ %1464, %1462 ]
  %1472 = icmp ugt i64 %1463, %1365
  br i1 %1472, label %1473, label %1477

1473:                                             ; preds = %1470
  %1474 = getelementptr inbounds i32, ptr %1305, i64 %1463
  %1475 = load i32, ptr %1474, align 4, !tbaa !18
  %1476 = sub nsw i32 %1471, %1475
  br label %1477

1477:                                             ; preds = %1473, %1470
  %1478 = phi i32 [ %1476, %1473 ], [ %1471, %1470 ]
  %1479 = add nuw nsw i64 %1463, 1
  %1480 = icmp eq i64 %1479, 8
  br i1 %1480, label %1453, label %1462, !llvm.loop !137

1481:                                             ; preds = %1453
  %1482 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !58
  %1483 = getelementptr inbounds i32, ptr %1482, i64 %1142
  %1484 = load i32, ptr %1483, align 4, !tbaa !18
  %1485 = sub nsw i32 %1147, %1484
  %1486 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !48
  %1487 = add nsw i32 %1486, -1
  %1488 = and i32 %1487, %1485
  %1489 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !58
  %1490 = sext i32 %1488 to i64
  %1491 = getelementptr inbounds i32, ptr %1489, i64 %1490
  %1492 = load i32, ptr %1491, align 4, !tbaa !18
  %1493 = sub nsw i32 %1461, %1492
  br label %1494

1494:                                             ; preds = %1481, %1453
  %1495 = phi i32 [ %1493, %1481 ], [ %1461, %1453 ]
  %1496 = tail call i32 @llvm.abs.i32(i32 %1495, i1 true)
  %1497 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %1498 = mul i32 %1496, 10
  %1499 = and i32 %1498, 65534
  %1500 = or i32 %1499, 1
  %1501 = zext i32 %1500 to i64
  %1502 = getelementptr inbounds i8, ptr %1497, i64 %1501
  %1503 = load i8, ptr %1502, align 1, !tbaa !27
  %1504 = zext i8 %1503 to i16
  %1505 = sub nsw i16 0, %1504
  %1506 = icmp slt i32 %1495, 0
  %1507 = select i1 %1506, i16 %1505, i16 %1504
  %1508 = sdiv i16 %1507, 10
  %1509 = sext i16 %1508 to i32
  %1510 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8, !tbaa !58
  %1511 = getelementptr inbounds i32, ptr %1510, i64 3
  store i32 %1509, ptr %1511, align 4, !tbaa !18
  %1512 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE3lcp, i64 0, i32 3), align 8, !tbaa !58
  %1513 = shl nuw nsw i32 %1359, 3
  %1514 = add nuw nsw i32 %1513, %1353
  %1515 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE4zpos, i64 0, i32 3), align 8
  %1516 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8
  %1517 = lshr i64 34362885645, %1350
  %1518 = and i64 %1517, 1
  %1519 = icmp eq i64 %1518, 0
  br i1 %1519, label %1520, label %1556

1520:                                             ; preds = %1494
  %1521 = add nsw i32 %1514, -1
  %1522 = sext i32 %1521 to i64
  %1523 = getelementptr inbounds i32, ptr %1515, i64 %1522
  %1524 = load i32, ptr %1523, align 4, !tbaa !18
  %1525 = add nsw i32 %1524, %1145
  %1526 = sext i32 %1525 to i64
  %1527 = getelementptr inbounds i8, ptr %1304, i64 %1526
  %1528 = load i8, ptr %1527, align 1, !tbaa !27
  %1529 = zext i8 %1528 to i32
  %1530 = add nuw nsw i32 %1529, 1
  %1531 = add nsw i32 %1524, %1147
  %1532 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !48
  %1533 = add nsw i32 %1532, -1
  %1534 = and i32 %1533, %1531
  %1535 = sext i32 %1534 to i64
  %1536 = getelementptr inbounds i32, ptr %1516, i64 %1535
  %1537 = load i32, ptr %1536, align 4, !tbaa !18
  %1538 = mul nsw i32 %1537, %1530
  %1539 = load i8, ptr %1456, align 1, !tbaa !27
  %1540 = zext i8 %1539 to i32
  %1541 = add nuw nsw i32 %1540, 1
  %1542 = sdiv i32 %1538, %1541
  %1543 = tail call i32 @llvm.abs.i32(i32 %1542, i1 true)
  %1544 = zext i32 %1543 to i64
  %1545 = shl nuw nsw i64 %1544, 3
  %1546 = and i64 %1545, 65528
  %1547 = or i64 %1546, 1
  %1548 = getelementptr inbounds i8, ptr %1497, i64 %1547
  %1549 = load i8, ptr %1548, align 1, !tbaa !27
  %1550 = zext i8 %1549 to i16
  %1551 = sub nsw i16 0, %1550
  %1552 = icmp slt i32 %1542, 0
  %1553 = select i1 %1552, i16 %1551, i16 %1550
  %1554 = sdiv i16 %1553, 8
  %1555 = sext i16 %1554 to i32
  br label %1556

1556:                                             ; preds = %1520, %1494
  %1557 = phi i32 [ %1555, %1520 ], [ 255, %1494 ]
  store i32 %1557, ptr %1512, align 4, !tbaa !18
  %1558 = lshr i64 402702435, %1350
  %1559 = and i64 %1558, 1
  %1560 = icmp eq i64 %1559, 0
  br i1 %1560, label %1561, label %1597

1561:                                             ; preds = %1556
  %1562 = add nsw i32 %1514, -8
  %1563 = sext i32 %1562 to i64
  %1564 = getelementptr inbounds i32, ptr %1515, i64 %1563
  %1565 = load i32, ptr %1564, align 4, !tbaa !18
  %1566 = add nsw i32 %1565, %1145
  %1567 = sext i32 %1566 to i64
  %1568 = getelementptr inbounds i8, ptr %1304, i64 %1567
  %1569 = load i8, ptr %1568, align 1, !tbaa !27
  %1570 = zext i8 %1569 to i32
  %1571 = add nuw nsw i32 %1570, 1
  %1572 = add nsw i32 %1565, %1147
  %1573 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !48
  %1574 = add nsw i32 %1573, -1
  %1575 = and i32 %1574, %1572
  %1576 = sext i32 %1575 to i64
  %1577 = getelementptr inbounds i32, ptr %1516, i64 %1576
  %1578 = load i32, ptr %1577, align 4, !tbaa !18
  %1579 = mul nsw i32 %1578, %1571
  %1580 = load i8, ptr %1456, align 1, !tbaa !27
  %1581 = zext i8 %1580 to i32
  %1582 = add nuw nsw i32 %1581, 1
  %1583 = sdiv i32 %1579, %1582
  %1584 = tail call i32 @llvm.abs.i32(i32 %1583, i1 true)
  %1585 = zext i32 %1584 to i64
  %1586 = shl nuw nsw i64 %1585, 3
  %1587 = and i64 %1586, 65528
  %1588 = or i64 %1587, 1
  %1589 = getelementptr inbounds i8, ptr %1497, i64 %1588
  %1590 = load i8, ptr %1589, align 1, !tbaa !27
  %1591 = zext i8 %1590 to i16
  %1592 = sub nsw i16 0, %1591
  %1593 = icmp slt i32 %1583, 0
  %1594 = select i1 %1593, i16 %1592, i16 %1591
  %1595 = sdiv i16 %1594, 8
  %1596 = sext i16 %1595 to i32
  br label %1597

1597:                                             ; preds = %1561, %1556
  %1598 = phi i32 [ %1596, %1561 ], [ 255, %1556 ]
  %1599 = getelementptr inbounds i32, ptr %1512, i64 1
  store i32 %1598, ptr %1599, align 4, !tbaa !18
  %1600 = lshr i64 120266952479, %1350
  %1601 = and i64 %1600, 1
  %1602 = icmp eq i64 %1601, 0
  br i1 %1602, label %1603, label %1639

1603:                                             ; preds = %1597
  %1604 = add nsw i32 %1514, -2
  %1605 = sext i32 %1604 to i64
  %1606 = getelementptr inbounds i32, ptr %1515, i64 %1605
  %1607 = load i32, ptr %1606, align 4, !tbaa !18
  %1608 = add nsw i32 %1607, %1145
  %1609 = sext i32 %1608 to i64
  %1610 = getelementptr inbounds i8, ptr %1304, i64 %1609
  %1611 = load i8, ptr %1610, align 1, !tbaa !27
  %1612 = zext i8 %1611 to i32
  %1613 = add nuw nsw i32 %1612, 1
  %1614 = add nsw i32 %1607, %1147
  %1615 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !48
  %1616 = add nsw i32 %1615, -1
  %1617 = and i32 %1616, %1614
  %1618 = sext i32 %1617 to i64
  %1619 = getelementptr inbounds i32, ptr %1516, i64 %1618
  %1620 = load i32, ptr %1619, align 4, !tbaa !18
  %1621 = mul nsw i32 %1620, %1613
  %1622 = load i8, ptr %1456, align 1, !tbaa !27
  %1623 = zext i8 %1622 to i32
  %1624 = add nuw nsw i32 %1623, 1
  %1625 = sdiv i32 %1621, %1624
  %1626 = tail call i32 @llvm.abs.i32(i32 %1625, i1 true)
  %1627 = zext i32 %1626 to i64
  %1628 = shl nuw nsw i64 %1627, 3
  %1629 = and i64 %1628, 65528
  %1630 = or i64 %1629, 1
  %1631 = getelementptr inbounds i8, ptr %1497, i64 %1630
  %1632 = load i8, ptr %1631, align 1, !tbaa !27
  %1633 = zext i8 %1632 to i16
  %1634 = sub nsw i16 0, %1633
  %1635 = icmp slt i32 %1625, 0
  %1636 = select i1 %1635, i16 %1634, i16 %1633
  %1637 = sdiv i16 %1636, 8
  %1638 = sext i16 %1637 to i32
  br label %1639

1639:                                             ; preds = %1603, %1597
  %1640 = phi i32 [ %1638, %1603 ], [ 255, %1597 ]
  %1641 = getelementptr inbounds i32, ptr %1512, i64 2
  store i32 %1640, ptr %1641, align 4, !tbaa !18
  %1642 = lshr i64 4399053267191, %1350
  %1643 = and i64 %1642, 1
  %1644 = icmp eq i64 %1643, 0
  br i1 %1644, label %1645, label %1681

1645:                                             ; preds = %1639
  %1646 = add nsw i32 %1514, -16
  %1647 = sext i32 %1646 to i64
  %1648 = getelementptr inbounds i32, ptr %1515, i64 %1647
  %1649 = load i32, ptr %1648, align 4, !tbaa !18
  %1650 = add nsw i32 %1649, %1145
  %1651 = sext i32 %1650 to i64
  %1652 = getelementptr inbounds i8, ptr %1304, i64 %1651
  %1653 = load i8, ptr %1652, align 1, !tbaa !27
  %1654 = zext i8 %1653 to i32
  %1655 = add nuw nsw i32 %1654, 1
  %1656 = add nsw i32 %1649, %1147
  %1657 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !48
  %1658 = add nsw i32 %1657, -1
  %1659 = and i32 %1658, %1656
  %1660 = sext i32 %1659 to i64
  %1661 = getelementptr inbounds i32, ptr %1516, i64 %1660
  %1662 = load i32, ptr %1661, align 4, !tbaa !18
  %1663 = mul nsw i32 %1662, %1655
  %1664 = load i8, ptr %1456, align 1, !tbaa !27
  %1665 = zext i8 %1664 to i32
  %1666 = add nuw nsw i32 %1665, 1
  %1667 = sdiv i32 %1663, %1666
  %1668 = tail call i32 @llvm.abs.i32(i32 %1667, i1 true)
  %1669 = zext i32 %1668 to i64
  %1670 = shl nuw nsw i64 %1669, 3
  %1671 = and i64 %1670, 65528
  %1672 = or i64 %1671, 1
  %1673 = getelementptr inbounds i8, ptr %1497, i64 %1672
  %1674 = load i8, ptr %1673, align 1, !tbaa !27
  %1675 = zext i8 %1674 to i16
  %1676 = sub nsw i16 0, %1675
  %1677 = icmp slt i32 %1667, 0
  %1678 = select i1 %1677, i16 %1676, i16 %1675
  %1679 = sdiv i16 %1678, 8
  %1680 = sext i16 %1679 to i32
  br label %1681

1681:                                             ; preds = %1645, %1639
  %1682 = phi i32 [ %1680, %1645 ], [ 255, %1639 ]
  %1683 = getelementptr inbounds i32, ptr %1512, i64 3
  store i32 %1682, ptr %1683, align 4, !tbaa !18
  %1684 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !18
  %1685 = icmp eq i32 %1684, 0
  br i1 %1685, label %1686, label %1690

1686:                                             ; preds = %1681
  %1687 = getelementptr inbounds i32, ptr %1510, i64 2
  %1688 = load i32, ptr %1687, align 4, !tbaa !18
  %1689 = getelementptr inbounds i32, ptr %1510, i64 1
  store i32 %1688, ptr %1689, align 4, !tbaa !18
  store i32 1, ptr %1510, align 4, !tbaa !18
  br label %1690

1690:                                             ; preds = %1686, %1681
  %1691 = load i32, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !18
  %1692 = icmp eq i32 %1691, 0
  br i1 %1692, label %1693, label %1697

1693:                                             ; preds = %1690
  %1694 = load i32, ptr %1510, align 4, !tbaa !18
  %1695 = getelementptr inbounds i32, ptr %1510, i64 1
  store i32 %1694, ptr %1695, align 4, !tbaa !18
  %1696 = getelementptr inbounds i32, ptr %1510, i64 2
  store i32 1, ptr %1696, align 4, !tbaa !18
  br label %1697

1697:                                             ; preds = %1693, %1690, %941, %923, %857, %854
  %1698 = load i32, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %1699 = icmp ne i32 %1698, 0
  %1700 = load i32, ptr @_ZZ9jpegModelR5MixerE4data, align 4
  %1701 = icmp ne i32 %1700, 0
  %1702 = select i1 %1699, i1 %1701, i1 false
  br i1 %1702, label %1705, label %1703

1703:                                             ; preds = %1697
  %1704 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

1705:                                             ; preds = %1697
  %1706 = load i32, ptr @bpos, align 4, !tbaa !18
  %1707 = icmp eq i32 %1706, 0
  %1708 = select i1 %1707, i32 -2, i32 -1
  %1709 = load i32, ptr @pos, align 4, !tbaa !18
  %1710 = add i32 %1708, %1709
  %1711 = load i32, ptr @buf, align 8, !tbaa !23
  %1712 = add nsw i32 %1711, -1
  %1713 = and i32 %1712, %1710
  %1714 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %1715 = sext i32 %1713 to i64
  %1716 = getelementptr inbounds i8, ptr %1714, i64 %1715
  %1717 = load i8, ptr %1716, align 1, !tbaa !27
  %1718 = icmp eq i8 %1717, -1
  br i1 %1718, label %1719, label %1727

1719:                                             ; preds = %1705
  %1720 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %1721 = load i32, ptr %1720, align 8, !tbaa !57
  %1722 = add nsw i32 %1721, 1
  store i32 %1722, ptr %1720, align 8, !tbaa !57
  %1723 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %1724 = load ptr, ptr %1723, align 8, !tbaa !59
  %1725 = sext i32 %1721 to i64
  %1726 = getelementptr inbounds i16, ptr %1724, i64 %1725
  store i16 128, ptr %1726, align 2, !tbaa !29
  br label %2576

1727:                                             ; preds = %1705
  %1728 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE1t acquire, align 8
  %1729 = icmp eq i8 %1728, 0
  br i1 %1729, label %1730, label %1740, !prof !100

1730:                                             ; preds = %1727
  %1731 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE1t) #33
  %1732 = icmp eq i32 %1731, 0
  br i1 %1732, label %1740, label %1733

1733:                                             ; preds = %1730
  %1734 = load i32, ptr @level, align 4, !tbaa !18
  %1735 = shl i32 65536, %1734
  %1736 = mul nsw i32 %1735, 9
  invoke void @_ZN5ArrayIhLi64EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE1t, i32 noundef %1736) #32
          to label %1737 unwind label %1803

1737:                                             ; preds = %1733
  %1738 = add nsw i32 %1735, -1
  store i32 %1738, ptr getelementptr inbounds (%class.Random, ptr @_ZZ9jpegModelR5MixerE1t, i64 0, i32 1), align 8, !tbaa !138
  %1739 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN2BHILi9EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE1t, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE1t) #33
  br label %1740

1740:                                             ; preds = %1737, %1730, %1727
  %1741 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE3cxt acquire, align 8
  %1742 = icmp eq i8 %1741, 0
  br i1 %1742, label %1743, label %1749, !prof !100

1743:                                             ; preds = %1740
  %1744 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE3cxt) #33
  %1745 = icmp eq i32 %1744, 0
  br i1 %1745, label %1749, label %1746

1746:                                             ; preds = %1743
  invoke void @_ZN5ArrayIjLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE3cxt, i32 noundef 28) #32
          to label %1747 unwind label %1805

1747:                                             ; preds = %1746
  %1748 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIjLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE3cxt, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE3cxt) #33
  br label %1749

1749:                                             ; preds = %1747, %1743, %1740
  %1750 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2cp acquire, align 8
  %1751 = icmp eq i8 %1750, 0
  br i1 %1751, label %1752, label %1758, !prof !100

1752:                                             ; preds = %1749
  %1753 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2cp) #33
  %1754 = icmp eq i32 %1753, 0
  br i1 %1754, label %1758, label %1755

1755:                                             ; preds = %1752
  invoke void @_ZN5ArrayIPhLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE2cp, i32 noundef 28) #32
          to label %1756 unwind label %1807

1756:                                             ; preds = %1755
  %1757 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIPhLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2cp, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2cp) #33
  br label %1758

1758:                                             ; preds = %1756, %1752, %1749
  %1759 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2sm acquire, align 8
  %1760 = icmp eq i8 %1759, 0
  br i1 %1760, label %1761, label %1771, !prof !100

1761:                                             ; preds = %1758
  %1762 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2sm) #33
  %1763 = icmp eq i32 %1762, 0
  br i1 %1763, label %1771, label %1764

1764:                                             ; preds = %1766, %1761
  %1765 = phi ptr [ %1767, %1766 ], [ @_ZZ9jpegModelR5MixerE2sm, %1761 ]
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) %1765, i32 noundef 256) #32
          to label %1766 unwind label %1809

1766:                                             ; preds = %1764
  %1767 = getelementptr inbounds %class.APM1, ptr %1765, i64 1
  %1768 = icmp eq ptr %1767, getelementptr inbounds ([28 x %class.APM1], ptr @_ZZ9jpegModelR5MixerE2sm, i64 1, i64 0)
  br i1 %1768, label %1769, label %1764

1769:                                             ; preds = %1766
  %1770 = tail call i32 @__cxa_atexit(ptr nonnull @__cxx_global_array_dtor.13, ptr null, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2sm) #33
  br label %1771

1771:                                             ; preds = %1769, %1761, %1758
  %1772 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2m1 acquire, align 8
  %1773 = icmp eq i8 %1772, 0
  br i1 %1773, label %1774, label %1780, !prof !100

1774:                                             ; preds = %1771
  %1775 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2m1) #33
  %1776 = icmp eq i32 %1775, 0
  br i1 %1776, label %1780, label %1777

1777:                                             ; preds = %1774
  invoke void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ9jpegModelR5MixerE2m1, i32 noundef 32, i32 noundef 770, i32 noundef 3, i32 noundef 0) #32
          to label %1778 unwind label %1817

1778:                                             ; preds = %1777
  %1779 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5MixerD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2m1, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2m1) #33
  br label %1780

1780:                                             ; preds = %1778, %1774, %1771
  %1781 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2a1 acquire, align 8
  %1782 = icmp eq i8 %1781, 0
  br i1 %1782, label %1783, label %1789, !prof !100

1783:                                             ; preds = %1780
  %1784 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a1) #33
  %1785 = icmp eq i32 %1784, 0
  br i1 %1785, label %1789, label %1786

1786:                                             ; preds = %1783
  invoke void @_ZN3APMC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a1, i32 noundef 32768) #32
          to label %1787 unwind label %1819

1787:                                             ; preds = %1786
  %1788 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN8StateMapD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2a1, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a1) #33
  br label %1789

1789:                                             ; preds = %1787, %1783, %1780
  %1790 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2a2 acquire, align 8
  %1791 = icmp eq i8 %1790, 0
  br i1 %1791, label %1792, label %1798, !prof !100

1792:                                             ; preds = %1789
  %1793 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a2) #33
  %1794 = icmp eq i32 %1793, 0
  br i1 %1794, label %1798, label %1795

1795:                                             ; preds = %1792
  invoke void @_ZN3APMC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a2, i32 noundef 65536) #32
          to label %1796 unwind label %1821

1796:                                             ; preds = %1795
  %1797 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN8StateMapD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2a2, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a2) #33
  br label %1798

1798:                                             ; preds = %1796, %1792, %1789
  %1799 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !88
  %1800 = getelementptr inbounds ptr, ptr %1799, i64 27
  %1801 = load ptr, ptr %1800, align 8, !tbaa !38
  %1802 = icmp eq ptr %1801, null
  br i1 %1802, label %1836, label %1823

1803:                                             ; preds = %1733
  %1804 = landingpad { ptr, i32 }
          cleanup
  br label %2578

1805:                                             ; preds = %1746
  %1806 = landingpad { ptr, i32 }
          cleanup
  br label %2578

1807:                                             ; preds = %1755
  %1808 = landingpad { ptr, i32 }
          cleanup
  br label %2578

1809:                                             ; preds = %1764
  %.lcssa9 = phi ptr [ %1765, %1764 ]
  %1810 = landingpad { ptr, i32 }
          cleanup
  %1811 = icmp eq ptr %.lcssa9, @_ZZ9jpegModelR5MixerE2sm
  br i1 %1811, label %2578, label %1812

1812:                                             ; preds = %1812, %1809
  %1813 = phi ptr [ %1814, %1812 ], [ %.lcssa9, %1809 ]
  %1814 = getelementptr inbounds %class.APM1, ptr %1813, i64 -1
  %1815 = getelementptr %class.APM1, ptr %1813, i64 -1, i32 2
  tail call void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %1815) #31
  %1816 = icmp eq ptr %1814, @_ZZ9jpegModelR5MixerE2sm
  br i1 %1816, label %2578, label %1812

1817:                                             ; preds = %1777
  %1818 = landingpad { ptr, i32 }
          cleanup
  br label %2578

1819:                                             ; preds = %1786
  %1820 = landingpad { ptr, i32 }
          cleanup
  br label %2578

1821:                                             ; preds = %1795
  %1822 = landingpad { ptr, i32 }
          cleanup
  br label %2578

1823:                                             ; preds = %1823, %1798
  %1824 = phi i64 [ %1834, %1823 ], [ 0, %1798 ]
  %1825 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !88
  %1826 = getelementptr inbounds ptr, ptr %1825, i64 %1824
  %1827 = load ptr, ptr %1826, align 8, !tbaa !38
  %1828 = load i8, ptr %1827, align 1, !tbaa !27
  %1829 = zext i8 %1828 to i64
  %1830 = load i32, ptr @y, align 4, !tbaa !18
  %1831 = sext i32 %1830 to i64
  %1832 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %1829, i64 %1831
  %1833 = load i8, ptr %1832, align 1, !tbaa !27
  store i8 %1833, ptr %1827, align 1, !tbaa !27
  %1834 = add nuw nsw i64 %1824, 1
  %1835 = icmp eq i64 %1834, 28
  br i1 %1835, label %1836, label %1823, !llvm.loop !141

1836:                                             ; preds = %1823, %1798
  tail call void @_ZN5Mixer6updateEv(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ9jpegModelR5MixerE2m1) #32
  %1837 = load i32, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !18
  %1838 = ashr i32 %1837, 6
  %1839 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8, !tbaa !58
  %1840 = sext i32 %1838 to i64
  %1841 = getelementptr inbounds i32, ptr %1839, i64 %1840
  %1842 = load i32, ptr %1841, align 4, !tbaa !18
  %1843 = and i32 %1837, 63
  %1844 = shl i32 %1842, 6
  %1845 = or i32 %1844, %1843
  %1846 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !18
  %1847 = shl i32 %1846, 1
  %1848 = icmp eq i32 %1842, 0
  %1849 = zext i1 %1848 to i32
  %1850 = or i32 %1847, %1849
  %1851 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4
  %1852 = add nsw i32 %1851, 1
  %1853 = shl nuw i32 1, %1852
  %1854 = or i32 %1853, %1850
  %1855 = load i32, ptr @_ZZ9jpegModelR5MixerE7hbcount, align 4, !tbaa !18
  %1856 = add nsw i32 %1855, 1
  %1857 = icmp sgt i32 %1855, 1
  %1858 = icmp eq i32 %1851, 0
  %1859 = select i1 %1857, i1 true, i1 %1858
  %1860 = select i1 %1859, i32 0, i32 %1856
  store i32 %1860, ptr @_ZZ9jpegModelR5MixerE7hbcount, align 4
  %1861 = icmp ult i32 %1845, 256
  br i1 %1861, label %1864, label %1862

1862:                                             ; preds = %1836
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !18
  %1863 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !18
  br label %2576

1864:                                             ; preds = %1836
  %1865 = icmp eq i32 %1860, 0
  br i1 %1865, label %1866, label %2365

1866:                                             ; preds = %1864
  %1867 = zext i32 %1843 to i64
  %1868 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1867
  %1869 = load i8, ptr %1868, align 1, !tbaa !27
  %1870 = zext i8 %1869 to i32
  %1871 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1867
  %1872 = load i8, ptr %1871, align 1, !tbaa !27
  %1873 = zext i8 %1872 to i32
  %1874 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8, !tbaa !58
  %1875 = getelementptr inbounds i32, ptr %1874, i64 2
  %1876 = load i32, ptr %1875, align 4, !tbaa !18
  %1877 = mul i32 %1854, 30005491
  %1878 = mul i32 %1845, 50004239
  %1879 = mul i32 %1876, 70004807
  %1880 = add i32 %1877, %1878
  %1881 = add i32 %1880, 90000480
  %1882 = add i32 %1881, %1879
  %1883 = lshr i32 %1882, 9
  %1884 = lshr i32 %1854, 3
  %1885 = lshr i32 %1845, 4
  %1886 = lshr i32 %1876, 5
  %1887 = xor i32 %1884, %1885
  %1888 = xor i32 %1886, %1883
  %1889 = xor i32 %1888, %1887
  %1890 = xor i32 %1889, %1882
  %1891 = xor i32 %1890, 67108863
  %1892 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE3cxt, i64 0, i32 3), align 8, !tbaa !15
  store i32 %1891, ptr %1892, align 4, !tbaa !18
  %1893 = load i32, ptr %1874, align 4, !tbaa !18
  %1894 = mul i32 %1893, 70004807
  %1895 = add i32 %1880, 290003459
  %1896 = add i32 %1895, %1894
  %1897 = lshr i32 %1896, 9
  %1898 = lshr i32 %1893, 5
  %1899 = xor i32 %1898, %1897
  %1900 = xor i32 %1899, %1887
  %1901 = xor i32 %1900, %1896
  %1902 = xor i32 %1901, 67108863
  %1903 = getelementptr inbounds i32, ptr %1892, i64 1
  store i32 %1902, ptr %1903, align 4, !tbaa !18
  %1904 = getelementptr inbounds i32, ptr %1874, i64 1
  %1905 = load i32, ptr %1904, align 4, !tbaa !18
  %1906 = mul i32 %1905, 70004807
  %1907 = add i32 %1880, 490006438
  %1908 = add i32 %1907, %1906
  %1909 = lshr i32 %1908, 9
  %1910 = lshr i32 %1905, 5
  %1911 = xor i32 %1910, %1909
  %1912 = xor i32 %1911, %1887
  %1913 = xor i32 %1912, %1908
  %1914 = xor i32 %1913, 67108863
  %1915 = getelementptr inbounds i32, ptr %1892, i64 2
  store i32 %1914, ptr %1915, align 4, !tbaa !18
  %1916 = load i32, ptr @_ZZ9jpegModelR5MixerE3rs1, align 4, !tbaa !18
  %1917 = load i32, ptr %1875, align 4, !tbaa !18
  %1918 = mul i32 %1916, 50004239
  %1919 = mul i32 %1917, 70004807
  %1920 = add i32 %1918, %1877
  %1921 = add i32 %1920, 690009417
  %1922 = add i32 %1921, %1919
  %1923 = lshr i32 %1922, 9
  %1924 = lshr i32 %1916, 4
  %1925 = lshr i32 %1917, 5
  %1926 = xor i32 %1884, %1924
  %1927 = xor i32 %1926, 1
  %1928 = xor i32 %1925, %1923
  %1929 = xor i32 %1928, %1927
  %1930 = xor i32 %1929, %1922
  %1931 = xor i32 %1930, 67108863
  %1932 = getelementptr inbounds i32, ptr %1892, i64 3
  store i32 %1931, ptr %1932, align 4, !tbaa !18
  %1933 = load i32, ptr %1874, align 4, !tbaa !18
  %1934 = mul i32 %1933, 70004807
  %1935 = add i32 %1920, 890012396
  %1936 = add i32 %1935, %1934
  %1937 = lshr i32 %1936, 9
  %1938 = lshr i32 %1933, 5
  %1939 = xor i32 %1938, %1937
  %1940 = xor i32 %1939, %1927
  %1941 = xor i32 %1940, %1936
  %1942 = xor i32 %1941, 67108863
  %1943 = getelementptr inbounds i32, ptr %1892, i64 4
  store i32 %1942, ptr %1943, align 4, !tbaa !18
  %1944 = load i32, ptr %1904, align 4, !tbaa !18
  %1945 = mul i32 %1944, 70004807
  %1946 = add i32 %1920, 1090015375
  %1947 = add i32 %1946, %1945
  %1948 = lshr i32 %1947, 9
  %1949 = lshr i32 %1944, 5
  %1950 = xor i32 %1949, %1948
  %1951 = xor i32 %1950, %1927
  %1952 = xor i32 %1951, %1947
  %1953 = xor i32 %1952, 67108863
  %1954 = getelementptr inbounds i32, ptr %1892, i64 5
  store i32 %1953, ptr %1954, align 4, !tbaa !18
  %1955 = load i32, ptr %1875, align 4, !tbaa !18
  %1956 = load i32, ptr %1874, align 4, !tbaa !18
  %1957 = mul i32 %1955, 50004239
  %1958 = mul i32 %1956, 70004807
  %1959 = add i32 %1877, 1290018354
  %1960 = add i32 %1959, %1957
  %1961 = add i32 %1960, %1958
  %1962 = lshr i32 %1961, 9
  %1963 = lshr i32 %1955, 4
  %1964 = lshr i32 %1956, 5
  %1965 = xor i32 %1963, %1964
  %1966 = xor i32 %1965, %1962
  %1967 = xor i32 %1966, %1884
  %1968 = xor i32 %1967, %1961
  %1969 = xor i32 %1968, 67108862
  %1970 = getelementptr inbounds i32, ptr %1892, i64 6
  store i32 %1969, ptr %1970, align 4, !tbaa !18
  %1971 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !18
  %1972 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !18
  %1973 = load i32, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !18
  %1974 = mul nsw i32 %1973, %1972
  %1975 = sub nsw i32 %1971, %1974
  %1976 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !23
  %1977 = add nsw i32 %1976, -1
  %1978 = and i32 %1977, %1975
  %1979 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %1980 = sext i32 %1978 to i64
  %1981 = getelementptr inbounds i8, ptr %1979, i64 %1980
  %1982 = load i8, ptr %1981, align 1, !tbaa !27
  %1983 = zext i8 %1982 to i32
  %1984 = getelementptr inbounds i32, ptr %1874, i64 3
  %1985 = load i32, ptr %1984, align 4, !tbaa !18
  %1986 = mul i32 %1983, 50004239
  %1987 = mul i32 %1985, 70004807
  %1988 = add i32 %1877, 1490021333
  %1989 = add i32 %1988, %1986
  %1990 = add i32 %1989, %1987
  %1991 = lshr i32 %1990, 9
  %1992 = lshr i32 %1983, 4
  %1993 = lshr i32 %1985, 5
  %1994 = xor i32 %1884, 2
  %1995 = xor i32 %1993, %1992
  %1996 = xor i32 %1995, %1991
  %1997 = xor i32 %1996, %1884
  %1998 = xor i32 %1997, %1990
  %1999 = xor i32 %1998, 67108861
  %2000 = getelementptr inbounds i32, ptr %1892, i64 7
  store i32 %1999, ptr %2000, align 4, !tbaa !18
  %2001 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !58
  %2002 = getelementptr inbounds i32, ptr %2001, i64 %1840
  %2003 = load i32, ptr %2002, align 4, !tbaa !18
  %2004 = sub nsw i32 %1971, %2003
  %2005 = and i32 %2004, %1977
  %2006 = sext i32 %2005 to i64
  %2007 = getelementptr inbounds i8, ptr %1979, i64 %2006
  %2008 = load i8, ptr %2007, align 1, !tbaa !27
  %2009 = zext i8 %2008 to i32
  %2010 = load i32, ptr %1984, align 4, !tbaa !18
  %2011 = mul i32 %2009, 50004239
  %2012 = mul i32 %2010, 70004807
  %2013 = add i32 %1877, 1690024312
  %2014 = add i32 %2013, %2011
  %2015 = add i32 %2014, %2012
  %2016 = lshr i32 %2015, 9
  %2017 = lshr i32 %2009, 4
  %2018 = lshr i32 %2010, 5
  %2019 = xor i32 %2018, %2017
  %2020 = xor i32 %2019, %2016
  %2021 = xor i32 %2020, %1884
  %2022 = xor i32 %2021, %2015
  %2023 = xor i32 %2022, 67108861
  %2024 = getelementptr inbounds i32, ptr %1892, i64 8
  store i32 %2023, ptr %2024, align 4, !tbaa !18
  %2025 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE3lcp, i64 0, i32 3), align 8, !tbaa !58
  %2026 = load i32, ptr %2025, align 4, !tbaa !18
  %2027 = getelementptr inbounds i32, ptr %2025, i64 1
  %2028 = load i32, ptr %2027, align 4, !tbaa !18
  %2029 = load i32, ptr %1904, align 4, !tbaa !18
  %2030 = add i32 %1877, 2000029790
  %2031 = mul i32 %2026, 50004239
  %2032 = add i32 %2030, %2031
  %2033 = mul i32 %2028, 70004807
  %2034 = add i32 %2032, %2033
  %2035 = mul i32 %2029, 110002499
  %2036 = add i32 %2034, %2035
  %2037 = lshr i32 %2036, 9
  %2038 = lshr i32 %2026, 4
  %2039 = lshr i32 %2028, 5
  %2040 = lshr i32 %2029, 6
  %2041 = xor i32 %2038, %2039
  %2042 = xor i32 %2041, %2040
  %2043 = xor i32 %2042, %2037
  %2044 = xor i32 %2043, %1994
  %2045 = xor i32 %2044, %2036
  %2046 = getelementptr inbounds i32, ptr %1892, i64 9
  store i32 %2045, ptr %2046, align 4, !tbaa !18
  %2047 = load i32, ptr %2025, align 4, !tbaa !18
  %2048 = load i32, ptr %2027, align 4, !tbaa !18
  %2049 = mul i32 %2047, 50004239
  %2050 = mul i32 %2048, 70004807
  %2051 = mul i32 %1845, 110002499
  %2052 = add i32 %2051, -2094934527
  %2053 = add i32 %2052, %1877
  %2054 = add i32 %2053, %2049
  %2055 = add i32 %2054, %2050
  %2056 = lshr i32 %2055, 9
  %2057 = lshr i32 %2047, 4
  %2058 = lshr i32 %2048, 5
  %2059 = and i32 %1842, 67108863
  %2060 = xor i32 %2059, %2057
  %2061 = xor i32 %2060, %2058
  %2062 = xor i32 %2061, %2056
  %2063 = xor i32 %2062, %1994
  %2064 = xor i32 %2063, %2055
  %2065 = getelementptr inbounds i32, ptr %1892, i64 10
  store i32 %2064, ptr %2065, align 4, !tbaa !18
  %2066 = load i32, ptr %2025, align 4, !tbaa !18
  %2067 = getelementptr inbounds i32, ptr %2025, i64 2
  %2068 = load i32, ptr %2067, align 4, !tbaa !18
  %2069 = sdiv i32 %2068, 3
  %2070 = mul i32 %1873, 50004239
  %2071 = mul i32 %2066, 70004807
  %2072 = mul i32 %2069, 110002499
  %2073 = add i32 %2070, %1877
  %2074 = add i32 %2073, -1894931548
  %2075 = add i32 %2074, %2071
  %2076 = add i32 %2075, %2072
  %2077 = lshr i32 %2076, 9
  %2078 = lshr i32 %1873, 4
  %2079 = lshr i32 %2066, 5
  %2080 = lshr i32 %2069, 6
  %2081 = xor i32 %1884, 3
  %2082 = xor i32 %2079, %2080
  %2083 = xor i32 %2082, %2077
  %2084 = xor i32 %2083, %2081
  %2085 = xor i32 %2084, %2078
  %2086 = xor i32 %2085, %2076
  %2087 = getelementptr inbounds i32, ptr %1892, i64 11
  store i32 %2086, ptr %2087, align 4, !tbaa !18
  %2088 = load i32, ptr %2027, align 4, !tbaa !18
  %2089 = getelementptr inbounds i32, ptr %2025, i64 3
  %2090 = load i32, ptr %2089, align 4, !tbaa !18
  %2091 = sdiv i32 %2090, 3
  %2092 = mul i32 %1870, 50004239
  %2093 = mul i32 %2088, 70004807
  %2094 = mul i32 %2091, 110002499
  %2095 = add i32 %2092, %1877
  %2096 = add i32 %2095, -1694928569
  %2097 = add i32 %2096, %2093
  %2098 = add i32 %2097, %2094
  %2099 = lshr i32 %2098, 9
  %2100 = lshr i32 %1870, 4
  %2101 = lshr i32 %2088, 5
  %2102 = lshr i32 %2091, 6
  %2103 = xor i32 %2101, %2102
  %2104 = xor i32 %2103, %2099
  %2105 = xor i32 %2104, %2081
  %2106 = xor i32 %2105, %2100
  %2107 = xor i32 %2106, %2098
  %2108 = getelementptr inbounds i32, ptr %1892, i64 12
  store i32 %2107, ptr %2108, align 4, !tbaa !18
  %2109 = ashr i32 %1837, 2
  %2110 = tail call i32 @llvm.smin.i32(i32 %1843, i32 3)
  %2111 = mul i32 %2109, 50004239
  %2112 = mul nuw nsw i32 %2110, 70004807
  %2113 = add i32 %2111, -1604928089
  %2114 = add i32 %2113, %2112
  %2115 = add i32 %2114, %1877
  %2116 = lshr i32 %2115, 9
  %2117 = lshr i32 %2109, 4
  %2118 = xor i32 %2117, %2116
  %2119 = xor i32 %2118, %1884
  %2120 = xor i32 %2119, %2115
  %2121 = xor i32 %2120, 67108860
  %2122 = getelementptr inbounds i32, ptr %1892, i64 13
  store i32 %2121, ptr %2122, align 4, !tbaa !18
  %2123 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !18
  %2124 = ashr i32 %2123, 1
  %2125 = mul i32 %2124, 70004807
  %2126 = add i32 %1880, -1404925110
  %2127 = add i32 %2126, %2125
  %2128 = lshr i32 %2127, 9
  %2129 = lshr i32 %2124, 5
  %2130 = xor i32 %2129, %2128
  %2131 = xor i32 %2130, %1885
  %2132 = xor i32 %2131, %1884
  %2133 = xor i32 %2132, %2127
  %2134 = xor i32 %2133, 67108860
  %2135 = getelementptr inbounds i32, ptr %1892, i64 14
  store i32 %2134, ptr %2135, align 4, !tbaa !18
  %2136 = ashr i32 %2123, 2
  %2137 = load i32, ptr %2025, align 4, !tbaa !18
  %2138 = load i32, ptr %2067, align 4, !tbaa !18
  %2139 = sdiv i32 %2138, 3
  %2140 = shl nsw i32 %2139, 8
  %2141 = add nsw i32 %2140, %2137
  %2142 = load i32, ptr %2027, align 4, !tbaa !18
  %2143 = load i32, ptr %2089, align 4, !tbaa !18
  %2144 = sdiv i32 %2143, 3
  %2145 = shl nsw i32 %2144, 8
  %2146 = add nsw i32 %2145, %2142
  %2147 = add i32 %1877, -1094919632
  %2148 = mul i32 %2136, 50004239
  %2149 = add i32 %2147, %2148
  %2150 = mul i32 %2141, 70004807
  %2151 = add i32 %2149, %2150
  %2152 = mul i32 %2146, 110002499
  %2153 = add i32 %2151, %2152
  %2154 = lshr i32 %2153, 9
  %2155 = lshr i32 %2136, 4
  %2156 = lshr i32 %2141, 5
  %2157 = lshr i32 %2146, 6
  %2158 = xor i32 %1884, 4
  %2159 = xor i32 %2155, %2156
  %2160 = xor i32 %2159, %2157
  %2161 = xor i32 %2160, %2154
  %2162 = xor i32 %2161, %2158
  %2163 = xor i32 %2162, %2153
  %2164 = getelementptr inbounds i32, ptr %1892, i64 15
  store i32 %2163, ptr %2164, align 4, !tbaa !18
  %2165 = load i32, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !18
  %2166 = ashr i32 %2165, 4
  %2167 = mul i32 %2166, 50004239
  %2168 = mul i32 %1845, 70004807
  %2169 = add i32 %1877, %2168
  %2170 = add i32 %2169, -1004919152
  %2171 = add i32 %2170, %2167
  %2172 = lshr i32 %2171, 9
  %2173 = lshr i32 %2166, 4
  %2174 = lshr i32 %1845, 5
  %2175 = xor i32 %2173, %2172
  %2176 = xor i32 %2175, %2158
  %2177 = xor i32 %2176, %2174
  %2178 = xor i32 %2177, %2171
  %2179 = xor i32 %2178, 67108863
  %2180 = getelementptr inbounds i32, ptr %1892, i64 16
  store i32 %2179, ptr %2180, align 4, !tbaa !18
  %2181 = add i32 %1920, -804916173
  %2182 = add i32 %2181, %2168
  %2183 = lshr i32 %2182, 9
  %2184 = xor i32 %2158, %2183
  %2185 = xor i32 %2184, %2174
  %2186 = xor i32 %2185, %1924
  %2187 = xor i32 %2186, %2182
  %2188 = xor i32 %2187, 67108863
  %2189 = getelementptr inbounds i32, ptr %1892, i64 17
  store i32 %2188, ptr %2189, align 4, !tbaa !18
  %2190 = ashr i32 %1837, 3
  %2191 = load i32, ptr @_ZZ9jpegModelR5MixerE5ssum3, align 4, !tbaa !18
  %2192 = ashr i32 %2191, 3
  %2193 = load i32, ptr %1984, align 4, !tbaa !18
  %2194 = mul i32 %2190, 50004239
  %2195 = mul i32 %2192, 70004807
  %2196 = mul i32 %2193, 110002499
  %2197 = add i32 %2194, -494910695
  %2198 = add i32 %2197, %1877
  %2199 = add i32 %2198, %2195
  %2200 = add i32 %2199, %2196
  %2201 = lshr i32 %2200, 9
  %2202 = lshr i32 %2190, 4
  %2203 = lshr i32 %2192, 5
  %2204 = lshr i32 %2193, 6
  %2205 = xor i32 %2202, %2203
  %2206 = xor i32 %2205, %2204
  %2207 = xor i32 %2206, %2201
  %2208 = xor i32 %2207, %2158
  %2209 = xor i32 %2208, %2200
  %2210 = getelementptr inbounds i32, ptr %1892, i64 18
  store i32 %2209, ptr %2210, align 4, !tbaa !18
  %2211 = load i32, ptr %2025, align 4, !tbaa !18
  %2212 = sdiv i32 %2211, 3
  %2213 = load i32, ptr %2027, align 4, !tbaa !18
  %2214 = sdiv i32 %2213, 3
  %2215 = getelementptr inbounds i32, ptr %1874, i64 5
  %2216 = load i32, ptr %2215, align 4, !tbaa !18
  %2217 = add i32 %1877, -294907716
  %2218 = mul i32 %2212, 50004239
  %2219 = add i32 %2217, %2218
  %2220 = mul i32 %2214, 70004807
  %2221 = add i32 %2219, %2220
  %2222 = mul i32 %2216, 110002499
  %2223 = add i32 %2221, %2222
  %2224 = lshr i32 %2223, 9
  %2225 = lshr i32 %2212, 4
  %2226 = lshr i32 %2214, 5
  %2227 = lshr i32 %2216, 6
  %2228 = xor i32 %2225, %2226
  %2229 = xor i32 %2228, %2227
  %2230 = xor i32 %2229, %2224
  %2231 = xor i32 %1884, %2230
  %2232 = xor i32 %2231, %2223
  %2233 = xor i32 %2232, 5
  %2234 = getelementptr inbounds i32, ptr %1892, i64 19
  store i32 %2233, ptr %2234, align 4, !tbaa !18
  %2235 = load i8, ptr %1981, align 1, !tbaa !27
  %2236 = zext i8 %2235 to i32
  %2237 = getelementptr inbounds i32, ptr %1874, i64 6
  %2238 = load i32, ptr %2237, align 4, !tbaa !18
  %2239 = mul i32 %2236, 50004239
  %2240 = mul i32 %2238, 70004807
  %2241 = add i32 %1877, -204907236
  %2242 = add i32 %2241, %2239
  %2243 = add i32 %2242, %2240
  %2244 = lshr i32 %2243, 9
  %2245 = lshr i32 %2236, 4
  %2246 = lshr i32 %2238, 5
  %2247 = xor i32 %2246, %2245
  %2248 = xor i32 %2247, %2244
  %2249 = xor i32 %2248, %1884
  %2250 = xor i32 %2249, %2243
  %2251 = xor i32 %2250, 67108858
  %2252 = getelementptr inbounds i32, ptr %1892, i64 20
  store i32 %2251, ptr %2252, align 4, !tbaa !18
  %2253 = load i32, ptr %2002, align 4, !tbaa !18
  %2254 = sub nsw i32 %1971, %2253
  %2255 = and i32 %2254, %1977
  %2256 = sext i32 %2255 to i64
  %2257 = getelementptr inbounds i8, ptr %1979, i64 %2256
  %2258 = load i8, ptr %2257, align 1, !tbaa !27
  %2259 = zext i8 %2258 to i32
  %2260 = getelementptr inbounds i32, ptr %1874, i64 4
  %2261 = load i32, ptr %2260, align 4, !tbaa !18
  %2262 = mul i32 %2259, 50004239
  %2263 = mul i32 %2261, 70004807
  %2264 = add i32 %1877, -4904257
  %2265 = add i32 %2264, %2262
  %2266 = add i32 %2265, %2263
  %2267 = lshr i32 %2266, 9
  %2268 = lshr i32 %2259, 4
  %2269 = lshr i32 %2261, 5
  %2270 = xor i32 %2269, %2268
  %2271 = xor i32 %2270, %2267
  %2272 = xor i32 %2271, %1884
  %2273 = xor i32 %2272, %2266
  %2274 = xor i32 %2273, 67108858
  %2275 = getelementptr inbounds i32, ptr %1892, i64 21
  store i32 %2274, ptr %2275, align 4, !tbaa !18
  %2276 = load i32, ptr %1875, align 4, !tbaa !18
  %2277 = mul i32 %2276, 50004239
  %2278 = add i32 %1877, 125093915
  %2279 = add i32 %2278, %2277
  %2280 = lshr i32 %2279, 9
  %2281 = lshr i32 %2276, 4
  %2282 = xor i32 %2281, %2280
  %2283 = xor i32 %2282, %1884
  %2284 = xor i32 %2283, %2279
  %2285 = xor i32 %2284, 67108869
  %2286 = getelementptr inbounds i32, ptr %1892, i64 22
  store i32 %2285, ptr %2286, align 4, !tbaa !18
  %2287 = load i32, ptr %1874, align 4, !tbaa !18
  %2288 = mul i32 %2287, 50004239
  %2289 = add i32 %2278, %2288
  %2290 = lshr i32 %2289, 9
  %2291 = lshr i32 %2287, 4
  %2292 = xor i32 %2291, %2290
  %2293 = xor i32 %2292, %1884
  %2294 = xor i32 %2293, %2289
  %2295 = xor i32 %2294, 67108869
  %2296 = getelementptr inbounds i32, ptr %1892, i64 23
  store i32 %2295, ptr %2296, align 4, !tbaa !18
  %2297 = load i32, ptr %1904, align 4, !tbaa !18
  %2298 = mul i32 %2297, 50004239
  %2299 = add i32 %2278, %2298
  %2300 = lshr i32 %2299, 9
  %2301 = lshr i32 %2297, 4
  %2302 = xor i32 %2301, %2300
  %2303 = xor i32 %2302, %1884
  %2304 = xor i32 %2303, %2299
  %2305 = xor i32 %2304, 67108869
  %2306 = getelementptr inbounds i32, ptr %1892, i64 24
  store i32 %2305, ptr %2306, align 4, !tbaa !18
  %2307 = load i32, ptr %2027, align 4, !tbaa !18
  %2308 = load i32, ptr %2237, align 4, !tbaa !18
  %2309 = mul i32 %2307, 70004807
  %2310 = mul i32 %2308, 110002499
  %2311 = add i32 %2095, 505104200
  %2312 = add i32 %2311, %2309
  %2313 = add i32 %2312, %2310
  %2314 = lshr i32 %2313, 9
  %2315 = lshr i32 %2307, 5
  %2316 = lshr i32 %2308, 6
  %2317 = xor i32 %1884, 6
  %2318 = xor i32 %2315, %2316
  %2319 = xor i32 %2318, %2314
  %2320 = xor i32 %2319, %2317
  %2321 = xor i32 %2320, %2100
  %2322 = xor i32 %2321, %2313
  %2323 = getelementptr inbounds i32, ptr %1892, i64 25
  store i32 %2322, ptr %2323, align 4, !tbaa !18
  %2324 = load i32, ptr %2025, align 4, !tbaa !18
  %2325 = load i32, ptr %2260, align 4, !tbaa !18
  %2326 = mul i32 %2324, 70004807
  %2327 = mul i32 %2325, 110002499
  %2328 = add i32 %2073, 705107179
  %2329 = add i32 %2328, %2326
  %2330 = add i32 %2329, %2327
  %2331 = lshr i32 %2330, 9
  %2332 = lshr i32 %2324, 5
  %2333 = lshr i32 %2325, 6
  %2334 = xor i32 %2332, %2333
  %2335 = xor i32 %2334, %2331
  %2336 = xor i32 %2335, %2317
  %2337 = xor i32 %2336, %2078
  %2338 = xor i32 %2337, %2330
  %2339 = getelementptr inbounds i32, ptr %1892, i64 26
  store i32 %2338, ptr %2339, align 4, !tbaa !18
  %2340 = load i32, ptr %2025, align 4, !tbaa !18
  %2341 = load i32, ptr %2027, align 4, !tbaa !18
  %2342 = load i32, ptr %1984, align 4, !tbaa !18
  %2343 = add i32 %1877, 905110158
  %2344 = mul i32 %2340, 50004239
  %2345 = add i32 %2343, %2344
  %2346 = mul i32 %2341, 70004807
  %2347 = add i32 %2345, %2346
  %2348 = mul i32 %2342, 110002499
  %2349 = add i32 %2347, %2348
  %2350 = lshr i32 %2349, 9
  %2351 = lshr i32 %2340, 4
  %2352 = lshr i32 %2341, 5
  %2353 = lshr i32 %2342, 6
  %2354 = xor i32 %2351, %2352
  %2355 = xor i32 %2354, %2353
  %2356 = xor i32 %2355, %2350
  %2357 = xor i32 %2356, %2317
  %2358 = xor i32 %2357, %2349
  %2359 = getelementptr inbounds i32, ptr %1892, i64 27
  store i32 %2358, ptr %2359, align 4, !tbaa !18
  %2360 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !57
  %2361 = add nsw i32 %2360, 1
  store i32 %2361, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !57
  %2362 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %2363 = sext i32 %2360 to i64
  %2364 = getelementptr inbounds i16, ptr %2362, i64 %2363
  store i16 128, ptr %2364, align 2, !tbaa !29
  br label %2373

2365:                                             ; preds = %1864
  %2366 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !57
  %2367 = add nsw i32 %2366, 1
  store i32 %2367, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !57
  %2368 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %2369 = sext i32 %2366 to i64
  %2370 = getelementptr inbounds i16, ptr %2368, i64 %2369
  store i16 128, ptr %2370, align 2, !tbaa !29
  %2371 = icmp eq i32 %1860, 1
  %2372 = and i32 %1846, 1
  br i1 %2371, label %2461, label %2488

2373:                                             ; preds = %2438, %1866
  %2374 = phi i64 [ 0, %1866 ], [ %2459, %2438 ]
  %2375 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE3cxt, i64 0, i32 3), align 8, !tbaa !15
  %2376 = getelementptr inbounds i32, ptr %2375, i64 %2374
  %2377 = load i32, ptr %2376, align 4, !tbaa !18
  %2378 = lshr i32 %2377, 16
  %2379 = and i32 %2377, 65535
  %2380 = xor i32 %2378, %2379
  %2381 = shl i32 %2377, 3
  %2382 = load i32, ptr getelementptr inbounds (%class.Random, ptr @_ZZ9jpegModelR5MixerE1t, i64 0, i32 1), align 8, !tbaa !138
  %2383 = and i32 %2382, %2381
  %2384 = load ptr, ptr getelementptr inbounds (%class.Random, ptr @_ZZ9jpegModelR5MixerE1t, i64 0, i32 0, i32 3), align 8, !tbaa !142
  br label %2385

2385:                                             ; preds = %2401, %2373
  %2386 = phi i64 [ 0, %2373 ], [ %2402, %2401 ]
  %2387 = trunc i64 %2386 to i32
  %2388 = add i32 %2383, %2387
  %2389 = mul i32 %2388, 9
  %2390 = sext i32 %2389 to i64
  %2391 = getelementptr inbounds i8, ptr %2384, i64 %2390
  %2392 = getelementptr inbounds i8, ptr %2391, i64 2
  %2393 = load i8, ptr %2392, align 1, !tbaa !27
  %2394 = icmp eq i8 %2393, 0
  br i1 %2394, label %2395, label %2397

2395:                                             ; preds = %2385
  %.lcssa6 = phi i64 [ %2386, %2385 ]
  %.lcssa3 = phi i32 [ %2387, %2385 ]
  %.lcssa = phi ptr [ %2391, %2385 ]
  %2396 = trunc i32 %2380 to i16
  store i16 %2396, ptr %.lcssa, align 2, !tbaa !29
  br label %2404

2397:                                             ; preds = %2385
  %2398 = load i16, ptr %2391, align 2, !tbaa !29
  %2399 = zext i16 %2398 to i32
  %2400 = icmp eq i32 %2380, %2399
  br i1 %2400, label %2404, label %2401

2401:                                             ; preds = %2397
  %2402 = add nuw nsw i64 %2386, 1
  %2403 = icmp eq i64 %2402, 8
  br i1 %2403, label %2407, label %2385, !llvm.loop !143

2404:                                             ; preds = %2397, %2395
  %.lcssa7 = phi i64 [ %2386, %2397 ], [ %.lcssa6, %2395 ]
  %.lcssa4 = phi i32 [ %2387, %2397 ], [ %.lcssa3, %2395 ]
  %.lcssa1 = phi ptr [ %2391, %2397 ], [ %.lcssa, %2395 ]
  switch i32 %.lcssa4, label %2420 [
    i32 0, label %2405
    i32 8, label %2407
  ]

2405:                                             ; preds = %2404
  %2406 = getelementptr inbounds i8, ptr %.lcssa1, i64 1
  br label %2438

2407:                                             ; preds = %2404, %2401
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(9) getelementptr inbounds ([9 x i8], ptr @_ZZN2BHILi9EEixEjE3tmp, i64 0, i64 2), i8 0, i64 7, i1 false)
  %2408 = trunc i32 %2380 to i16
  store i16 %2408, ptr @_ZZN2BHILi9EEixEjE3tmp, align 1, !tbaa !29
  %2409 = mul i32 %2383, 9
  %2410 = add i32 %2409, 65
  %2411 = sext i32 %2410 to i64
  %2412 = getelementptr inbounds i8, ptr %2384, i64 %2411
  %2413 = load i8, ptr %2412, align 1, !tbaa !27
  %2414 = add i32 %2409, 56
  %2415 = sext i32 %2414 to i64
  %2416 = getelementptr inbounds i8, ptr %2384, i64 %2415
  %2417 = load i8, ptr %2416, align 1, !tbaa !27
  %2418 = icmp ugt i8 %2413, %2417
  %2419 = select i1 %2418, i64 6, i64 7
  br label %2422

2420:                                             ; preds = %2404
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(9) @_ZZN2BHILi9EEixEjE3tmp, ptr noundef nonnull align 2 dereferenceable(9) %.lcssa1, i64 9, i1 false)
  %2421 = mul i32 %2383, 9
  br label %2422

2422:                                             ; preds = %2420, %2407
  %2423 = phi i32 [ %2409, %2407 ], [ %2421, %2420 ]
  %2424 = phi i64 [ %2419, %2407 ], [ %.lcssa7, %2420 ]
  %2425 = add i32 %2423, 9
  %2426 = sext i32 %2425 to i64
  %2427 = getelementptr inbounds i8, ptr %2384, i64 %2426
  %2428 = sext i32 %2423 to i64
  %2429 = getelementptr inbounds i8, ptr %2384, i64 %2428
  %2430 = mul i64 %2424, 9
  %2431 = and i64 %2430, 4294967295
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %2427, ptr nonnull align 1 %2429, i64 %2431, i1 false)
  %2432 = load ptr, ptr getelementptr inbounds (%class.Random, ptr @_ZZ9jpegModelR5MixerE1t, i64 0, i32 0, i32 3), align 8, !tbaa !142
  %2433 = getelementptr inbounds i8, ptr %2432, i64 %2428
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(9) %2433, ptr noundef nonnull align 1 dereferenceable(9) @_ZZN2BHILi9EEixEjE3tmp, i64 9, i1 false)
  %2434 = or i32 %2423, 1
  %2435 = load ptr, ptr getelementptr inbounds (%class.Random, ptr @_ZZ9jpegModelR5MixerE1t, i64 0, i32 0, i32 3), align 8, !tbaa !142
  %2436 = sext i32 %2434 to i64
  %2437 = getelementptr inbounds i8, ptr %2435, i64 %2436
  br label %2438

2438:                                             ; preds = %2422, %2405
  %2439 = phi ptr [ %2406, %2405 ], [ %2437, %2422 ]
  %2440 = getelementptr inbounds i8, ptr %2439, i64 1
  %2441 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !88
  %2442 = getelementptr inbounds ptr, ptr %2441, i64 %2374
  store ptr %2440, ptr %2442, align 8, !tbaa !38
  %2443 = getelementptr inbounds [28 x %class.APM1], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %2374
  %2444 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !88
  %2445 = getelementptr inbounds ptr, ptr %2444, i64 %2374
  %2446 = load ptr, ptr %2445, align 8, !tbaa !38
  %2447 = load i8, ptr %2446, align 1, !tbaa !27
  %2448 = zext i8 %2447 to i32
  %2449 = tail call noundef i32 @_ZN8StateMap1pEii(ptr noundef nonnull align 8 dereferenceable(32) %2443, i32 noundef %2448, i32 noundef 1023) #32
  %2450 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !39
  %2451 = sext i32 %2449 to i64
  %2452 = getelementptr inbounds i16, ptr %2450, i64 %2451
  %2453 = load i16, ptr %2452, align 2, !tbaa !29
  %2454 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !57
  %2455 = add nsw i32 %2454, 1
  store i32 %2455, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !57
  %2456 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %2457 = sext i32 %2454 to i64
  %2458 = getelementptr inbounds i16, ptr %2456, i64 %2457
  store i16 %2453, ptr %2458, align 2, !tbaa !29
  %2459 = add nuw nsw i64 %2374, 1
  %2460 = icmp eq i64 %2459, 28
  br i1 %2460, label %2515, label %2373, !llvm.loop !144

2461:                                             ; preds = %2365
  %2462 = icmp eq i32 %2372, 0
  %2463 = select i1 %2462, i64 1, i64 4
  br label %2464

2464:                                             ; preds = %2464, %2461
  %2465 = phi i64 [ 0, %2461 ], [ %2486, %2464 ]
  %2466 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !88
  %2467 = getelementptr inbounds ptr, ptr %2466, i64 %2465
  %2468 = load ptr, ptr %2467, align 8, !tbaa !38
  %2469 = getelementptr inbounds i8, ptr %2468, i64 %2463
  store ptr %2469, ptr %2467, align 8, !tbaa !38
  %2470 = getelementptr inbounds [28 x %class.APM1], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %2465
  %2471 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !88
  %2472 = getelementptr inbounds ptr, ptr %2471, i64 %2465
  %2473 = load ptr, ptr %2472, align 8, !tbaa !38
  %2474 = load i8, ptr %2473, align 1, !tbaa !27
  %2475 = zext i8 %2474 to i32
  %2476 = tail call noundef i32 @_ZN8StateMap1pEii(ptr noundef nonnull align 8 dereferenceable(32) %2470, i32 noundef %2475, i32 noundef 1023) #32
  %2477 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !39
  %2478 = sext i32 %2476 to i64
  %2479 = getelementptr inbounds i16, ptr %2477, i64 %2478
  %2480 = load i16, ptr %2479, align 2, !tbaa !29
  %2481 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !57
  %2482 = add nsw i32 %2481, 1
  store i32 %2482, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !57
  %2483 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %2484 = sext i32 %2481 to i64
  %2485 = getelementptr inbounds i16, ptr %2483, i64 %2484
  store i16 %2480, ptr %2485, align 2, !tbaa !29
  %2486 = add nuw nsw i64 %2465, 1
  %2487 = icmp eq i64 %2486, 28
  br i1 %2487, label %2515, label %2464, !llvm.loop !145

2488:                                             ; preds = %2365
  %2489 = add nuw nsw i32 %2372, 1
  %2490 = zext i32 %2489 to i64
  br label %2491

2491:                                             ; preds = %2491, %2488
  %2492 = phi i64 [ 0, %2488 ], [ %2513, %2491 ]
  %2493 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !88
  %2494 = getelementptr inbounds ptr, ptr %2493, i64 %2492
  %2495 = load ptr, ptr %2494, align 8, !tbaa !38
  %2496 = getelementptr inbounds i8, ptr %2495, i64 %2490
  store ptr %2496, ptr %2494, align 8, !tbaa !38
  %2497 = getelementptr inbounds [28 x %class.APM1], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %2492
  %2498 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !88
  %2499 = getelementptr inbounds ptr, ptr %2498, i64 %2492
  %2500 = load ptr, ptr %2499, align 8, !tbaa !38
  %2501 = load i8, ptr %2500, align 1, !tbaa !27
  %2502 = zext i8 %2501 to i32
  %2503 = tail call noundef i32 @_ZN8StateMap1pEii(ptr noundef nonnull align 8 dereferenceable(32) %2497, i32 noundef %2502, i32 noundef 1023) #32
  %2504 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !39
  %2505 = sext i32 %2503 to i64
  %2506 = getelementptr inbounds i16, ptr %2504, i64 %2505
  %2507 = load i16, ptr %2506, align 2, !tbaa !29
  %2508 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !57
  %2509 = add nsw i32 %2508, 1
  store i32 %2509, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !57
  %2510 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %2511 = sext i32 %2508 to i64
  %2512 = getelementptr inbounds i16, ptr %2510, i64 %2511
  store i16 %2507, ptr %2512, align 2, !tbaa !29
  %2513 = add nuw nsw i64 %2492, 1
  %2514 = icmp eq i64 %2513, 28
  br i1 %2514, label %2515, label %2491, !llvm.loop !146

2515:                                             ; preds = %2491, %2464, %2438
  %2516 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !18
  %2517 = icmp eq i32 %2516, 0
  %2518 = zext i1 %2517 to i32
  %2519 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !56
  %2520 = add nsw i32 %2519, %2518
  %2521 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !55
  %2522 = add nsw i32 %2521, 1
  store i32 %2522, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !55
  %2523 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 5, i32 3), align 8, !tbaa !58
  %2524 = sext i32 %2521 to i64
  %2525 = getelementptr inbounds i32, ptr %2523, i64 %2524
  store i32 %2520, ptr %2525, align 4, !tbaa !18
  %2526 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !56
  %2527 = add nsw i32 %2526, 2
  store i32 %2527, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !56
  %2528 = add nsw i32 %2527, %1845
  %2529 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !55
  %2530 = add nsw i32 %2529, 1
  store i32 %2530, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !55
  %2531 = sext i32 %2529 to i64
  %2532 = getelementptr inbounds i32, ptr %2523, i64 %2531
  store i32 %2528, ptr %2532, align 4, !tbaa !18
  %2533 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !56
  %2534 = add nsw i32 %2533, 256
  store i32 %2534, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !56
  %2535 = and i32 %1854, 511
  %2536 = add nsw i32 %2534, %2535
  %2537 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !55
  %2538 = add nsw i32 %2537, 1
  store i32 %2538, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !55
  %2539 = sext i32 %2537 to i64
  %2540 = getelementptr inbounds i32, ptr %2523, i64 %2539
  store i32 %2536, ptr %2540, align 4, !tbaa !18
  %2541 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !56
  %2542 = add nsw i32 %2541, 512
  store i32 %2542, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !56
  %2543 = tail call noundef i32 @_ZN5Mixer1pEv(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ9jpegModelR5MixerE2m1) #32
  %2544 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !39
  %2545 = sext i32 %2543 to i64
  %2546 = getelementptr inbounds i16, ptr %2544, i64 %2545
  %2547 = load i16, ptr %2546, align 2, !tbaa !29
  %2548 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %2549 = load i32, ptr %2548, align 8, !tbaa !57
  %2550 = add nsw i32 %2549, 1
  store i32 %2550, ptr %2548, align 8, !tbaa !57
  %2551 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %2552 = load ptr, ptr %2551, align 8, !tbaa !59
  %2553 = sext i32 %2549 to i64
  %2554 = getelementptr inbounds i16, ptr %2552, i64 %2553
  store i16 %2547, ptr %2554, align 2, !tbaa !29
  %2555 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8, !tbaa !58
  %2556 = getelementptr inbounds i32, ptr %2555, i64 1
  %2557 = load i32, ptr %2556, align 4, !tbaa !18
  %2558 = shl i32 %2557, 9
  %2559 = and i32 %2558, 32256
  %2560 = or i32 %2559, %2535
  %2561 = tail call noundef i32 @_ZN3APM1pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a1, i32 noundef %2543, i32 noundef %2560, i32 noundef 1023) #32
  %2562 = and i32 %1854, 255
  %2563 = shl nuw nsw i32 %1845, 8
  %2564 = or i32 %2562, %2563
  %2565 = tail call noundef i32 @_ZN3APM1pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a2, i32 noundef %2561, i32 noundef %2564, i32 noundef 255) #32
  %2566 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !39
  %2567 = sext i32 %2565 to i64
  %2568 = getelementptr inbounds i16, ptr %2566, i64 %2567
  %2569 = load i16, ptr %2568, align 2, !tbaa !29
  %2570 = load i32, ptr %2548, align 8, !tbaa !57
  %2571 = add nsw i32 %2570, 1
  store i32 %2571, ptr %2548, align 8, !tbaa !57
  %2572 = load ptr, ptr %2551, align 8, !tbaa !59
  %2573 = sext i32 %2570 to i64
  %2574 = getelementptr inbounds i16, ptr %2572, i64 %2573
  store i16 %2569, ptr %2574, align 2, !tbaa !29
  %2575 = add nuw nsw i32 %2562, 2
  br label %2576

2576:                                             ; preds = %2515, %1862, %1719, %1703, %1126, %1097, %1086, %1077, %1060, %993, %986, %965, %939, %927, %921, %902, %893, %886, %874, %847, %764, %747, %703, %647, %628, %620, %611, %485, %425, %421, %259, %217, %210, %203, %192, %185, %179, %172
  %2577 = phi i32 [ 1, %1719 ], [ %1704, %1703 ], [ %887, %886 ], [ %875, %874 ], [ %486, %485 ], [ %176, %425 ], [ %176, %421 ], [ %173, %172 ], [ %2575, %2515 ], [ %1863, %1862 ], [ %704, %703 ], [ %848, %847 ], [ %765, %764 ], [ %748, %747 ], [ %648, %647 ], [ %629, %628 ], [ %612, %611 ], [ %621, %620 ], [ %922, %921 ], [ %928, %927 ], [ %940, %939 ], [ %903, %902 ], [ %894, %893 ], [ %994, %993 ], [ %1061, %1060 ], [ %1078, %1077 ], [ %987, %986 ], [ %966, %965 ], [ %1127, %1126 ], [ %1087, %1086 ], [ %1098, %1097 ], [ %186, %185 ], [ %176, %179 ], [ %176, %259 ], [ %176, %217 ], [ %176, %210 ], [ %176, %203 ], [ %176, %192 ]
  ret i32 %2577

2578:                                             ; preds = %1821, %1819, %1817, %1812, %1809, %1807, %1805, %1803, %168, %166, %164, %162, %160, %158, %156, %154, %152, %150, %148, %146, %144, %142, %140
  %2579 = phi ptr [ @_ZGVZ9jpegModelR5MixerE1t, %1803 ], [ @_ZGVZ9jpegModelR5MixerE3cxt, %1805 ], [ @_ZGVZ9jpegModelR5MixerE2cp, %1807 ], [ @_ZGVZ9jpegModelR5MixerE2m1, %1817 ], [ @_ZGVZ9jpegModelR5MixerE2a1, %1819 ], [ @_ZGVZ9jpegModelR5MixerE2a2, %1821 ], [ @_ZGVZ9jpegModelR5MixerE4qmap, %168 ], [ @_ZGVZ9jpegModelR5MixerE4qtab, %166 ], [ @_ZGVZ9jpegModelR5MixerE4zpos, %164 ], [ @_ZGVZ9jpegModelR5MixerE3lcp, %162 ], [ @_ZGVZ9jpegModelR5MixerE2ls, %160 ], [ @_ZGVZ9jpegModelR5MixerE4sumv, %158 ], [ @_ZGVZ9jpegModelR5MixerE4sumu, %156 ], [ @_ZGVZ9jpegModelR5MixerE8adv_pred, %154 ], [ @_ZGVZ9jpegModelR5MixerE5cbuf2, %152 ], [ @_ZGVZ9jpegModelR5MixerE4cbuf, %150 ], [ @_ZGVZ9jpegModelR5MixerE4pred, %148 ], [ @_ZGVZ9jpegModelR5MixerE5color, %146 ], [ @_ZGVZ9jpegModelR5MixerE4hbuf, %144 ], [ @_ZGVZ9jpegModelR5MixerE3huf, %142 ], [ @_ZGVZ9jpegModelR5MixerE2ht, %140 ], [ @_ZGVZ9jpegModelR5MixerE2sm, %1809 ], [ @_ZGVZ9jpegModelR5MixerE2sm, %1812 ]
  %2580 = phi { ptr, i32 } [ %1804, %1803 ], [ %1806, %1805 ], [ %1808, %1807 ], [ %1818, %1817 ], [ %1820, %1819 ], [ %1822, %1821 ], [ %169, %168 ], [ %167, %166 ], [ %165, %164 ], [ %163, %162 ], [ %161, %160 ], [ %159, %158 ], [ %157, %156 ], [ %155, %154 ], [ %153, %152 ], [ %151, %150 ], [ %149, %148 ], [ %147, %146 ], [ %145, %144 ], [ %143, %142 ], [ %141, %140 ], [ %1810, %1809 ], [ %1810, %1812 ]
  tail call void @__cxa_guard_abort(ptr nonnull %2579) #33
  resume { ptr, i32 } %2580
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayI3HUFLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !147
  store i32 %1, ptr %0, align 8, !tbaa !116
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = mul i32 %1, 12
  %9 = load i32, ptr @programChecker, align 8, !tbaa !7
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !7
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #34
  %17 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !148
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.59, ptr %20, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !114
  br label %23

23:                                               ; preds = %21, %5
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN5ArrayI3HUFLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !116
  %3 = mul i32 %2, -12
  %4 = load i32, ptr @programChecker, align 8, !tbaa !7
  %5 = add nsw i32 %4, %3
  store i32 %5, ptr @programChecker, align 8, !tbaa !7
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %9

9:                                                ; preds = %8, %1
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !148
  tail call void @free(ptr noundef %11) #31
  ret void
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN6IntBufD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #2 comdat align 2 {
  tail call void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) #31
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.abs.i16(i16, i1 immarg) #14

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIhLi64EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !149
  store i32 %1, ptr %0, align 8, !tbaa !150
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %28

7:                                                ; preds = %2
  %8 = add nuw i32 %1, 64
  %9 = load i32, ptr @programChecker, align 8, !tbaa !7
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !7
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #34
  %17 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !151
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.59, ptr %20, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds i8, ptr %16, i64 64
  %23 = ptrtoint ptr %16 to i64
  %24 = and i64 %23, 63
  %25 = sub nsw i64 0, %24
  %26 = getelementptr inbounds i8, ptr %22, i64 %25
  %27 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %26, ptr %27, align 8, !tbaa !142
  br label %28

28:                                               ; preds = %21, %5
  ret void
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN2BHILi9EED2Ev(ptr noundef nonnull align 8 dereferenceable(28) %0) unnamed_addr #2 comdat align 2 {
  tail call void @_ZN5ArrayIhLi64EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) #31
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @__cxx_global_array_dtor.13(ptr nocapture readnone %0) #5 section ".text.startup" {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi ptr [ getelementptr inbounds ([28 x %class.APM1], ptr @_ZZ9jpegModelR5MixerE2sm, i64 1, i64 0), %1 ], [ %4, %2 ]
  %4 = getelementptr inbounds %class.APM1, ptr %3, i64 -1
  %5 = getelementptr %class.APM1, ptr %3, i64 -1, i32 2
  tail call void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %5) #31
  %6 = icmp eq ptr %4, @_ZZ9jpegModelR5MixerE2sm
  br i1 %6, label %7, label %2

7:                                                ; preds = %2
  ret void
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN8StateMapD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %0) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2
  tail call void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %2) #31
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5Mixer6updateEv(ptr noundef nonnull align 8 dereferenceable(136) %0) #7 comdat align 2 {
  %2 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 6
  %3 = load i32, ptr %2, align 8, !tbaa !55
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %24

5:                                                ; preds = %1
  %6 = load i32, ptr @y, align 4, !tbaa !18
  %7 = shl i32 %6, 12
  %8 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !58
  %10 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 3
  %13 = load ptr, ptr %12, align 8
  %14 = load i32, ptr %0, align 8
  %15 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %18 = load i32, ptr %17, align 8
  %19 = add nsw i32 %18, 7
  %20 = and i32 %19, -8
  %21 = icmp sgt i32 %20, 0
  %22 = zext i32 %20 to i64
  %23 = zext i32 %3 to i64
  br label %27

24:                                               ; preds = %58, %1
  store i32 0, ptr %2, align 8, !tbaa !55
  %25 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 7
  store i32 0, ptr %25, align 4, !tbaa !56
  %26 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  store i32 0, ptr %26, align 8, !tbaa !57
  ret void

27:                                               ; preds = %58, %5
  %28 = phi i64 [ 0, %5 ], [ %59, %58 ]
  %29 = getelementptr inbounds i32, ptr %9, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !18
  %31 = icmp eq i32 %7, %30
  br i1 %31, label %58, label %32

32:                                               ; preds = %27
  %33 = sub nsw i32 %7, %30
  %34 = mul nsw i32 %33, 7
  %35 = getelementptr inbounds i32, ptr %13, i64 %28
  %36 = load i32, ptr %35, align 4, !tbaa !18
  %37 = mul nsw i32 %14, %36
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i16, ptr %16, i64 %38
  br i1 %21, label %40, label %58

40:                                               ; preds = %40, %32
  %41 = phi i64 [ %56, %40 ], [ 0, %32 ]
  %42 = getelementptr inbounds i16, ptr %39, i64 %41
  %43 = load i16, ptr %42, align 2, !tbaa !29
  %44 = sext i16 %43 to i32
  %45 = getelementptr inbounds i16, ptr %11, i64 %41
  %46 = load i16, ptr %45, align 2, !tbaa !29
  %47 = sext i16 %46 to i32
  %48 = mul nsw i32 %34, %47
  %49 = ashr i32 %48, 15
  %50 = add nsw i32 %49, 1
  %51 = ashr i32 %50, 1
  %52 = add nsw i32 %51, %44
  %53 = tail call i32 @llvm.smax.i32(i32 %52, i32 -32768)
  %54 = tail call i32 @llvm.smin.i32(i32 %53, i32 32767)
  %55 = trunc i32 %54 to i16
  store i16 %55, ptr %42, align 2, !tbaa !29
  %56 = add nuw nsw i64 %41, 1
  %57 = icmp eq i64 %56, %22
  br i1 %57, label %58, label %40, !llvm.loop !152

58:                                               ; preds = %40, %32, %27
  %59 = add nuw nsw i64 %28, 1
  %60 = icmp eq i64 %59, %23
  br i1 %60, label %24, label %27, !llvm.loop !153
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #20

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #20

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_ZN5Mixer1pEv(ptr noundef nonnull align 8 dereferenceable(136) %0) #7 comdat align 2 {
  br label %2

2:                                                ; preds = %49, %1
  %3 = phi ptr [ %0, %1 ], [ %35, %49 ]
  %4 = getelementptr inbounds %class.Mixer, ptr %3, i64 0, i32 8
  %5 = load i32, ptr %4, align 8, !tbaa !57
  %6 = and i32 %5, 7
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %26, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.Mixer, ptr %3, i64 0, i32 3, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !59
  %11 = sext i32 %5 to i64
  %12 = shl nsw i64 %11, 1
  %13 = getelementptr i8, ptr %10, i64 %12
  %14 = shl i32 %5, 1
  %15 = and i32 %14, 14
  %16 = xor i32 %15, 14
  %17 = add nuw nsw i32 %16, 2
  %18 = zext i32 %17 to i64
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(1) %13, i8 0, i64 %18, i1 false), !tbaa !29
  br label %19

19:                                               ; preds = %19, %8
  %20 = phi i64 [ %11, %8 ], [ %21, %19 ]
  %21 = add nsw i64 %20, 1
  %22 = trunc i64 %21 to i32
  %23 = and i32 %22, 7
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %19, !llvm.loop !154

25:                                               ; preds = %19
  %.lcssa1 = phi i32 [ %22, %19 ]
  store i32 %.lcssa1, ptr %4, align 8, !tbaa !57
  br label %26

26:                                               ; preds = %25, %2
  %27 = phi i32 [ %.lcssa1, %25 ], [ %5, %2 ]
  %28 = getelementptr inbounds %class.Mixer, ptr %3, i64 0, i32 10
  %29 = load ptr, ptr %28, align 8, !tbaa !44
  %30 = icmp eq ptr %29, null
  br i1 %30, label %114, label %31

31:                                               ; preds = %26
  tail call void @_ZN5Mixer6updateEv(ptr noundef nonnull align 8 dereferenceable(136) %29) #32
  %32 = getelementptr inbounds %class.Mixer, ptr %3, i64 0, i32 6
  %33 = load i32, ptr %32, align 8, !tbaa !55
  %34 = icmp sgt i32 %33, 0
  %35 = load ptr, ptr %28, align 8, !tbaa !44
  br i1 %34, label %36, label %49

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.Mixer, ptr %3, i64 0, i32 3, i32 3
  %38 = load ptr, ptr %37, align 8, !tbaa !59
  %39 = getelementptr inbounds %class.Mixer, ptr %3, i64 0, i32 5, i32 3
  %40 = load ptr, ptr %39, align 8, !tbaa !58
  %41 = getelementptr inbounds %class.Mixer, ptr %3, i64 0, i32 4, i32 3
  %42 = load ptr, ptr %41, align 8, !tbaa !59
  %43 = getelementptr inbounds %class.Mixer, ptr %3, i64 0, i32 9, i32 3
  %44 = load ptr, ptr %43, align 8, !tbaa !58
  %45 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !39
  %46 = getelementptr inbounds %class.Mixer, ptr %35, i64 0, i32 8
  %47 = getelementptr inbounds %class.Mixer, ptr %35, i64 0, i32 3, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !59
  br label %61

49:                                               ; preds = %98, %31
  %50 = getelementptr inbounds %class.Mixer, ptr %35, i64 0, i32 7
  %51 = load i32, ptr %50, align 4, !tbaa !56
  %52 = getelementptr inbounds %class.Mixer, ptr %35, i64 0, i32 6
  %53 = load i32, ptr %52, align 8, !tbaa !55
  %54 = add nsw i32 %53, 1
  store i32 %54, ptr %52, align 8, !tbaa !55
  %55 = getelementptr inbounds %class.Mixer, ptr %35, i64 0, i32 5, i32 3
  %56 = load ptr, ptr %55, align 8, !tbaa !58
  %57 = sext i32 %53 to i64
  %58 = getelementptr inbounds i32, ptr %56, i64 %57
  store i32 %51, ptr %58, align 4, !tbaa !18
  %59 = load i32, ptr %50, align 4, !tbaa !56
  %60 = add nsw i32 %59, 1
  store i32 %60, ptr %50, align 4, !tbaa !56
  br label %2

61:                                               ; preds = %98, %36
  %62 = phi i64 [ 0, %36 ], [ %110, %98 ]
  %63 = getelementptr inbounds i32, ptr %40, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !18
  %65 = load i32, ptr %3, align 8, !tbaa !52
  %66 = mul nsw i32 %65, %64
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i16, ptr %42, i64 %67
  %69 = load i32, ptr %4, align 8, !tbaa !57
  %70 = add nsw i32 %69, 7
  %71 = and i32 %70, -8
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %98

73:                                               ; preds = %61
  %74 = zext i32 %71 to i64
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %96, %75 ]
  %77 = phi i32 [ 0, %73 ], [ %95, %75 ]
  %78 = getelementptr inbounds i16, ptr %38, i64 %76
  %79 = load i16, ptr %78, align 2, !tbaa !29
  %80 = sext i16 %79 to i32
  %81 = getelementptr inbounds i16, ptr %68, i64 %76
  %82 = load i16, ptr %81, align 2, !tbaa !29
  %83 = sext i16 %82 to i32
  %84 = mul nsw i32 %83, %80
  %85 = or i64 %76, 1
  %86 = getelementptr inbounds i16, ptr %38, i64 %85
  %87 = load i16, ptr %86, align 2, !tbaa !29
  %88 = sext i16 %87 to i32
  %89 = getelementptr inbounds i16, ptr %68, i64 %85
  %90 = load i16, ptr %89, align 2, !tbaa !29
  %91 = sext i16 %90 to i32
  %92 = mul nsw i32 %91, %88
  %93 = add nsw i32 %92, %84
  %94 = ashr i32 %93, 8
  %95 = add nsw i32 %94, %77
  %96 = add nuw nsw i64 %76, 2
  %97 = icmp ult i64 %96, %74
  br i1 %97, label %75, label %98, !llvm.loop !155

98:                                               ; preds = %75, %61
  %99 = phi i32 [ 0, %61 ], [ %95, %75 ]
  %100 = ashr i32 %99, 5
  %101 = tail call noundef i32 @_Z6squashi(i32 noundef %100) #32, !range !31
  %102 = getelementptr inbounds i32, ptr %44, i64 %62
  store i32 %101, ptr %102, align 4, !tbaa !18
  %103 = sext i32 %101 to i64
  %104 = getelementptr inbounds i16, ptr %45, i64 %103
  %105 = load i16, ptr %104, align 2, !tbaa !29
  %106 = load i32, ptr %46, align 8, !tbaa !57
  %107 = add nsw i32 %106, 1
  store i32 %107, ptr %46, align 8, !tbaa !57
  %108 = sext i32 %106 to i64
  %109 = getelementptr inbounds i16, ptr %48, i64 %108
  store i16 %105, ptr %109, align 2, !tbaa !29
  %110 = add nuw nsw i64 %62, 1
  %111 = load i32, ptr %32, align 8, !tbaa !55
  %112 = sext i32 %111 to i64
  %113 = icmp slt i64 %110, %112
  br i1 %113, label %61, label %49, !llvm.loop !156

114:                                              ; preds = %26
  %.lcssa3 = phi i32 [ %27, %26 ]
  %.lcssa2 = phi ptr [ %3, %26 ]
  %115 = getelementptr inbounds %class.Mixer, ptr %.lcssa2, i64 0, i32 3, i32 3
  %116 = load ptr, ptr %115, align 8, !tbaa !59
  %117 = getelementptr inbounds %class.Mixer, ptr %.lcssa2, i64 0, i32 4, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !59
  %119 = add nuw nsw i32 %.lcssa3, 7
  %120 = and i32 %119, -8
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %122, label %149

122:                                              ; preds = %114
  %123 = zext i32 %120 to i64
  br label %124

124:                                              ; preds = %124, %122
  %125 = phi i64 [ 0, %122 ], [ %145, %124 ]
  %126 = phi i32 [ 0, %122 ], [ %144, %124 ]
  %127 = getelementptr inbounds i16, ptr %116, i64 %125
  %128 = load i16, ptr %127, align 2, !tbaa !29
  %129 = sext i16 %128 to i32
  %130 = getelementptr inbounds i16, ptr %118, i64 %125
  %131 = load i16, ptr %130, align 2, !tbaa !29
  %132 = sext i16 %131 to i32
  %133 = mul nsw i32 %132, %129
  %134 = or i64 %125, 1
  %135 = getelementptr inbounds i16, ptr %116, i64 %134
  %136 = load i16, ptr %135, align 2, !tbaa !29
  %137 = sext i16 %136 to i32
  %138 = getelementptr inbounds i16, ptr %118, i64 %134
  %139 = load i16, ptr %138, align 2, !tbaa !29
  %140 = sext i16 %139 to i32
  %141 = mul nsw i32 %140, %137
  %142 = add nsw i32 %141, %133
  %143 = ashr i32 %142, 8
  %144 = add nsw i32 %143, %126
  %145 = add nuw nsw i64 %125, 2
  %146 = icmp ult i64 %145, %123
  br i1 %146, label %124, label %147, !llvm.loop !155

147:                                              ; preds = %124
  %.lcssa = phi i32 [ %144, %124 ]
  %148 = ashr i32 %.lcssa, 8
  br label %149

149:                                              ; preds = %147, %114
  %150 = phi i32 [ 0, %114 ], [ %148, %147 ]
  %151 = tail call noundef i32 @_Z6squashi(i32 noundef %150) #32, !range !31
  %152 = getelementptr inbounds %class.Mixer, ptr %.lcssa2, i64 0, i32 9, i32 3
  %153 = load ptr, ptr %152, align 8, !tbaa !58
  store i32 %151, ptr %153, align 4, !tbaa !18
  ret i32 %151
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_ZN3APM1pEiii(ptr noundef nonnull align 8 dereferenceable(32) %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #7 comdat align 2 {
  %5 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !78
  %7 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !15
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds i32, ptr %8, i64 %9
  %11 = load i32, ptr %10, align 4, !tbaa !18
  %12 = and i32 %11, 1023
  %13 = icmp slt i32 %12, %3
  %14 = add i32 %11, 1
  %15 = and i32 %11, -1024
  %16 = or i32 %15, %3
  %17 = select i1 %13, i32 %14, i32 %16
  %18 = lshr i32 %11, 10
  %19 = load i32, ptr @y, align 4, !tbaa !18
  %20 = shl i32 %19, 22
  %21 = sub nsw i32 %20, %18
  %22 = ashr i32 %21, 3
  %23 = zext i32 %12 to i64
  %24 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %23
  %25 = load i32, ptr %24, align 4, !tbaa !18
  %26 = mul nsw i32 %22, %25
  %27 = and i32 %26, -1024
  %28 = add i32 %27, %17
  store i32 %28, ptr %10, align 4, !tbaa !18
  %29 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !39
  %30 = sext i32 %1 to i64
  %31 = getelementptr inbounds i16, ptr %29, i64 %30
  %32 = load i16, ptr %31, align 2, !tbaa !29
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %33, 23
  %35 = add nsw i32 %34, 47104
  %36 = and i32 %35, 4095
  %37 = mul nsw i32 %2, 24
  %38 = ashr i32 %35, 12
  %39 = add nsw i32 %38, %37
  %40 = lshr i32 %36, 11
  %41 = add nsw i32 %39, %40
  store i32 %41, ptr %5, align 4, !tbaa !78
  %42 = sext i32 %39 to i64
  %43 = getelementptr inbounds i32, ptr %8, i64 %42
  %44 = load i32, ptr %43, align 4, !tbaa !18
  %45 = lshr i32 %44, 13
  %46 = sub nuw nsw i32 4096, %36
  %47 = mul nuw nsw i32 %46, %45
  %48 = add nsw i32 %39, 1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %8, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !18
  %52 = lshr i32 %51, 13
  %53 = mul nuw nsw i32 %52, %36
  %54 = add nuw i32 %47, %53
  %55 = lshr i32 %54, 19
  ret i32 %55
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN5ArrayIhLi64EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load i32, ptr %0, align 8, !tbaa !150
  %3 = load i32, ptr @programChecker, align 8, !tbaa !7
  %4 = sub i32 %3, %2
  %5 = add i32 %4, -64
  store i32 %5, ptr @programChecker, align 8, !tbaa !7
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %9

9:                                                ; preds = %8, %1
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !151
  tail call void @free(ptr noundef %11) #31
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_Z8wavModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) %0) #7 personality ptr @__gxx_personality_v0 {
  %2 = alloca [49 x [49 x [2 x double]]], align 16
  %3 = alloca [49 x [49 x double]], align 16
  %4 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE1K acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %13, !prof !100

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE1K) #33
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = load i32, ptr @level, align 4, !tbaa !18
  %11 = add nsw i32 %10, -1
  %12 = lshr i32 128, %11
  store i32 %12, ptr @_ZZ8wavModelR5MixerE1K, align 4, !tbaa !18
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE1K) #33
  br label %13

13:                                               ; preds = %9, %6, %1
  call void @llvm.lifetime.start.p0(i64 38416, ptr nonnull %2) #33
  call void @llvm.lifetime.start.p0(i64 19208, ptr nonnull %3) #33
  %14 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm1 acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %22, !prof !100

16:                                               ; preds = %13
  %17 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm1) #33
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm1, i32 noundef 131072) #32
          to label %20 unwind label %133

20:                                               ; preds = %19
  %21 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm1, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm1) #33
  br label %22

22:                                               ; preds = %20, %16, %13
  %23 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm2 acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %31, !prof !100

25:                                               ; preds = %22
  %26 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm2) #33
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm2, i32 noundef 131072) #32
          to label %29 unwind label %135

29:                                               ; preds = %28
  %30 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm2, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm2) #33
  br label %31

31:                                               ; preds = %29, %25, %22
  %32 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm3 acquire, align 8
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %40, !prof !100

34:                                               ; preds = %31
  %35 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm3) #33
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm3, i32 noundef 131072) #32
          to label %38 unwind label %137

38:                                               ; preds = %37
  %39 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm3, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm3) #33
  br label %40

40:                                               ; preds = %38, %34, %31
  %41 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm4 acquire, align 8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %49, !prof !100

43:                                               ; preds = %40
  %44 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm4) #33
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm4, i32 noundef 131072) #32
          to label %47 unwind label %139

47:                                               ; preds = %46
  %48 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm4, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm4) #33
  br label %49

49:                                               ; preds = %47, %43, %40
  %50 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm5 acquire, align 8
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %58, !prof !100

52:                                               ; preds = %49
  %53 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm5) #33
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm5, i32 noundef 131072) #32
          to label %56 unwind label %141

56:                                               ; preds = %55
  %57 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm5, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm5) #33
  br label %58

58:                                               ; preds = %56, %52, %49
  %59 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm6 acquire, align 8
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %67, !prof !100

61:                                               ; preds = %58
  %62 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm6) #33
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %61
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm6, i32 noundef 131072) #32
          to label %65 unwind label %143

65:                                               ; preds = %64
  %66 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm6, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm6) #33
  br label %67

67:                                               ; preds = %65, %61, %58
  %68 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm7 acquire, align 8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %76, !prof !100

70:                                               ; preds = %67
  %71 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm7) #33
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm7, i32 noundef 131072) #32
          to label %74 unwind label %145

74:                                               ; preds = %73
  %75 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm7, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm7) #33
  br label %76

76:                                               ; preds = %74, %70, %67
  %77 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm8 acquire, align 8
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %85, !prof !100

79:                                               ; preds = %76
  %80 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm8) #33
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %79
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm8, i32 noundef 131072) #32
          to label %83 unwind label %147

83:                                               ; preds = %82
  %84 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm8, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm8) #33
  br label %85

85:                                               ; preds = %83, %79, %76
  %86 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE2cm acquire, align 8
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %96, !prof !100

88:                                               ; preds = %85
  %89 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE2cm) #33
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %96, label %91

91:                                               ; preds = %88
  %92 = load i32, ptr @level, align 4, !tbaa !18
  %93 = shl i32 262144, %92
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8wavModelR5MixerE2cm, i32 noundef %93, i32 noundef 10) #32
          to label %94 unwind label %149

94:                                               ; preds = %91
  %95 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE2cm, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE2cm) #33
  br label %96

96:                                               ; preds = %94, %88, %85
  %97 = load i32, ptr @bpos, align 4, !tbaa !18
  %98 = icmp eq i32 %97, 0
  %99 = load i32, ptr @pos, align 4, !tbaa !18
  br i1 %98, label %100, label %306

100:                                              ; preds = %96
  %101 = add nsw i32 %99, -8
  %102 = load i32, ptr @buf, align 8, !tbaa !23
  %103 = add nsw i32 %102, -1
  %104 = and i32 %103, %101
  %105 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %106 = sext i32 %104 to i64
  %107 = getelementptr inbounds i8, ptr %105, i64 %106
  %108 = load i8, ptr %107, align 1, !tbaa !27
  %109 = icmp eq i8 %108, 100
  br i1 %109, label %110, label %306

110:                                              ; preds = %100
  %111 = add nsw i32 %99, -7
  %112 = and i32 %103, %111
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, ptr %105, i64 %113
  %115 = load i8, ptr %114, align 1, !tbaa !27
  %116 = icmp eq i8 %115, 97
  br i1 %116, label %117, label %306

117:                                              ; preds = %110
  %118 = add nsw i32 %99, -6
  %119 = and i32 %103, %118
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, ptr %105, i64 %120
  %122 = load i8, ptr %121, align 1, !tbaa !27
  %123 = icmp eq i8 %122, 116
  br i1 %123, label %124, label %306

124:                                              ; preds = %117
  %125 = add nsw i32 %99, -5
  %126 = and i32 %103, %125
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i8, ptr %105, i64 %127
  %129 = load i8, ptr %128, align 1, !tbaa !27
  %130 = icmp eq i8 %129, 97
  br i1 %130, label %131, label %306

131:                                              ; preds = %124
  %132 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 1
  br label %151

133:                                              ; preds = %19
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %2266

135:                                              ; preds = %28
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %2266

137:                                              ; preds = %37
  %138 = landingpad { ptr, i32 }
          cleanup
  br label %2266

139:                                              ; preds = %46
  %140 = landingpad { ptr, i32 }
          cleanup
  br label %2266

141:                                              ; preds = %55
  %142 = landingpad { ptr, i32 }
          cleanup
  br label %2266

143:                                              ; preds = %64
  %144 = landingpad { ptr, i32 }
          cleanup
  br label %2266

145:                                              ; preds = %73
  %146 = landingpad { ptr, i32 }
          cleanup
  br label %2266

147:                                              ; preds = %82
  %148 = landingpad { ptr, i32 }
          cleanup
  br label %2266

149:                                              ; preds = %91
  %150 = landingpad { ptr, i32 }
          cleanup
  br label %2266

151:                                              ; preds = %300, %131
  %152 = phi i32 [ -32, %131 ], [ %302, %300 ]
  %153 = phi i32 [ 32, %131 ], [ %301, %300 ]
  %154 = load i32, ptr @pos, align 4, !tbaa !18
  %155 = sub nsw i32 %154, %153
  %156 = load i32, ptr @buf, align 8, !tbaa !23
  %157 = add nsw i32 %156, -1
  %158 = and i32 %157, %155
  %159 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %160 = sext i32 %158 to i64
  %161 = getelementptr inbounds i8, ptr %159, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !27
  %163 = icmp eq i8 %162, 102
  br i1 %163, label %164, label %300

164:                                              ; preds = %151
  %165 = add nuw nsw i32 %152, 1
  %166 = add i32 %165, %154
  %167 = and i32 %157, %166
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i8, ptr %159, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !27
  %171 = icmp eq i8 %170, 109
  br i1 %171, label %172, label %300

172:                                              ; preds = %164
  %173 = add nuw nsw i32 %152, 2
  %174 = add i32 %173, %154
  %175 = and i32 %157, %174
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i8, ptr %159, i64 %176
  %178 = load i8, ptr %177, align 1, !tbaa !27
  %179 = icmp eq i8 %178, 116
  br i1 %179, label %180, label %300

180:                                              ; preds = %172
  %181 = add nuw nsw i32 %152, 3
  %182 = add i32 %181, %154
  %183 = and i32 %157, %182
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i8, ptr %159, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !27
  %187 = icmp eq i8 %186, 32
  br i1 %187, label %188, label %300

188:                                              ; preds = %180
  %189 = add nuw nsw i32 %152, 8
  %190 = add i32 %189, %154
  %191 = and i32 %157, %190
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i8, ptr %159, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !27
  %195 = zext i8 %194 to i16
  %196 = add i32 %190, 1
  %197 = and i32 %157, %196
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i8, ptr %159, i64 %198
  %200 = load i8, ptr %199, align 1, !tbaa !27
  %201 = zext i8 %200 to i16
  %202 = shl nuw i16 %201, 8
  %203 = or i16 %202, %195
  switch i16 %203, label %300 [
    i16 1, label %204
    i16 -2, label %204
  ]

204:                                              ; preds = %188, %188
  %205 = add nuw nsw i32 %152, 22
  %206 = add i32 %205, %154
  %207 = and i32 %157, %206
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds i8, ptr %159, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !27
  %211 = zext i8 %210 to i32
  store i32 %211, ptr @_ZZ8wavModelR5MixerE4bits, align 4, !tbaa !18
  %212 = add nuw nsw i32 %211, 7
  %213 = lshr i32 %212, 3
  store i32 %213, ptr @_ZZ8wavModelR5MixerE5bytes, align 4, !tbaa !18
  %214 = add nuw nsw i32 %152, 10
  %215 = add i32 %214, %154
  %216 = and i32 %157, %215
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds i8, ptr %159, i64 %217
  %219 = load i8, ptr %218, align 1, !tbaa !27
  %220 = zext i8 %219 to i32
  store i32 %220, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !18
  %221 = mul nuw nsw i32 %213, %220
  store i32 %221, ptr @_ZZ8wavModelR5MixerE1w, align 4, !tbaa !18
  %222 = add i32 %154, -4
  %223 = and i32 %157, %222
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i8, ptr %159, i64 %224
  %226 = load i8, ptr %225, align 1, !tbaa !27
  %227 = zext i8 %226 to i32
  %228 = add i32 %154, -3
  %229 = and i32 %157, %228
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds i8, ptr %159, i64 %230
  %232 = load i8, ptr %231, align 1, !tbaa !27
  %233 = zext i8 %232 to i32
  %234 = shl nuw nsw i32 %233, 8
  %235 = or i32 %234, %227
  %236 = add i32 %154, -2
  %237 = and i32 %157, %236
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds i8, ptr %159, i64 %238
  %240 = load i8, ptr %239, align 1, !tbaa !27
  %241 = zext i8 %240 to i32
  %242 = shl nuw nsw i32 %241, 16
  %243 = or i32 %235, %242
  %244 = add i32 %154, -1
  %245 = and i32 %157, %244
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i8, ptr %159, i64 %246
  %248 = load i8, ptr %247, align 1, !tbaa !27
  %249 = zext i8 %248 to i32
  %250 = shl nuw nsw i32 %249, 24
  %251 = or i32 %243, %250
  store i32 %251, ptr @_ZZ8wavModelR5MixerE1s, align 4, !tbaa !18
  %252 = add nsw i32 %220, -1
  %253 = icmp ult i32 %252, 2
  br i1 %253, label %254, label %299

254:                                              ; preds = %204
  switch i8 %210, label %299 [
    i8 16, label %255
    i8 8, label %255
  ]

255:                                              ; preds = %254, %254
  %256 = add nsw i32 %251, %154
  store i32 %256, ptr @_ZZ8wavModelR5MixerE3eof, align 4, !tbaa !18
  %257 = icmp eq i8 %219, 0
  br i1 %257, label %272, label %258

258:                                              ; preds = %255
  %259 = load i32, ptr @_ZL1S, align 4, !tbaa !18
  %260 = load i1, ptr @_ZL1D, align 4
  %261 = select i1 %260, i32 12, i32 0
  %262 = add nuw nsw i32 %261, %259
  %263 = icmp slt i32 %262, 0
  %264 = or i32 %261, 1
  %265 = add i32 %264, %259
  %266 = zext i8 %219 to i64
  %267 = shl nuw nsw i64 %266, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 @_ZZ8wavModelR5MixerE7counter, i8 0, i64 %267, i1 false), !tbaa !18
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 @_ZZ8wavModelR5MixerE1n, i8 0, i64 %267, i1 false), !tbaa !18
  %268 = zext i8 %219 to i64
  %269 = zext i32 %265 to i64
  br label %270

270:                                              ; preds = %291, %258
  %271 = phi i64 [ 0, %258 ], [ %293, %291 ]
  br i1 %263, label %291, label %277

272:                                              ; preds = %291, %255
  %273 = add nuw nsw i32 %220, %211
  store i32 %273, ptr @_ZL5wmode, align 4, !tbaa !18
  %274 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.14, i32 noundef %211) #32
  %275 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !18
  %276 = icmp eq i32 %275, 1
  br i1 %276, label %295, label %297

277:                                              ; preds = %288, %270
  %278 = phi i64 [ %289, %288 ], [ 0, %270 ]
  %279 = trunc i64 %278 to i32
  %280 = tail call i32 @llvm.smax.i32(i32 %279, i32 %262)
  %281 = add nuw i32 %280, 1
  %282 = zext i32 %281 to i64
  br label %283

283:                                              ; preds = %283, %277
  %284 = phi i64 [ %278, %277 ], [ %286, %283 ]
  %285 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %278, i64 %284, i64 %271
  store double 0.000000e+00, ptr %285, align 8, !tbaa !157
  %286 = add nuw nsw i64 %284, 1
  %287 = icmp eq i64 %286, %282
  br i1 %287, label %288, label %283, !llvm.loop !159

288:                                              ; preds = %283
  %289 = add nuw nsw i64 %278, 1
  %290 = icmp eq i64 %289, %269
  br i1 %290, label %291, label %277, !llvm.loop !160

291:                                              ; preds = %288, %270
  %292 = getelementptr inbounds [2 x double], ptr %132, i64 0, i64 %271
  store double 1.000000e+00, ptr %292, align 8, !tbaa !157
  %293 = add nuw nsw i64 %271, 1
  %294 = icmp eq i64 %293, %268
  br i1 %294, label %272, label %270, !llvm.loop !161

295:                                              ; preds = %272
  %296 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.15) #32
  store i32 48, ptr @_ZL1S, align 4, !tbaa !18
  store i1 false, ptr @_ZL1D, align 4
  br label %300

297:                                              ; preds = %272
  %298 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.16) #32
  store i32 36, ptr @_ZL1S, align 4, !tbaa !18
  store i1 true, ptr @_ZL1D, align 4
  br label %300

299:                                              ; preds = %254, %204
  store i32 %154, ptr @_ZZ8wavModelR5MixerE3eof, align 4, !tbaa !18
  br label %300

300:                                              ; preds = %299, %297, %295, %188, %180, %172, %164, %151
  %301 = add nuw nsw i32 %153, 1
  %302 = xor i32 %153, -1
  %303 = icmp eq i32 %301, 1001
  br i1 %303, label %304, label %151, !llvm.loop !162

304:                                              ; preds = %300
  %305 = load i32, ptr @pos, align 4, !tbaa !18
  br label %306

306:                                              ; preds = %304, %124, %117, %110, %100, %96
  %307 = phi i32 [ %305, %304 ], [ %99, %124 ], [ %99, %117 ], [ %99, %110 ], [ %99, %100 ], [ %99, %96 ]
  %308 = load i32, ptr @_ZZ8wavModelR5MixerE3eof, align 4, !tbaa !18
  %309 = icmp sgt i32 %307, %308
  br i1 %309, label %310, label %311

310:                                              ; preds = %306
  store i32 0, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !18
  store i32 0, ptr @_ZZ8wavModelR5MixerE4bits, align 4, !tbaa !18
  br label %2264

311:                                              ; preds = %306
  %312 = load i32, ptr @bpos, align 4, !tbaa !18
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %2258

314:                                              ; preds = %311
  %315 = load i32, ptr @_ZZ8wavModelR5MixerE1s, align 4, !tbaa !18
  %316 = sub i32 %307, %308
  %317 = add i32 %316, %315
  %318 = load i32, ptr @_ZZ8wavModelR5MixerE5bytes, align 4, !tbaa !18
  %319 = srem i32 %317, %318
  %320 = load i32, ptr @_ZZ8wavModelR5MixerE1w, align 4, !tbaa !18
  %321 = srem i32 %317, %320
  %322 = sdiv i32 %321, %318
  %323 = icmp eq i32 %319, 0
  br i1 %323, label %324, label %1113

324:                                              ; preds = %314
  %325 = load i32, ptr @_ZL1S, align 4, !tbaa !18
  %326 = load i1, ptr @_ZL1D, align 4
  %327 = select i1 %326, i32 12, i32 0
  %328 = add nuw nsw i32 %327, %325
  %329 = icmp slt i32 %328, 0
  br i1 %329, label %368, label %330

330:                                              ; preds = %324
  %331 = sext i32 %322 to i64
  %332 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %331
  br label %333

333:                                              ; preds = %360, %330
  %334 = phi i1 [ %326, %330 ], [ %361, %360 ]
  %335 = phi i32 [ %325, %330 ], [ %362, %360 ]
  %336 = phi i64 [ 0, %330 ], [ %363, %360 ]
  %337 = load i32, ptr %332, align 4, !tbaa !18
  %338 = sext i32 %337 to i64
  %339 = icmp slt i64 %336, %338
  br i1 %339, label %340, label %342

340:                                              ; preds = %333
  %341 = trunc i64 %336 to i32
  br label %349

342:                                              ; preds = %333
  %343 = xor i32 %335, -1
  %344 = trunc i64 %336 to i32
  %345 = add i32 %344, %343
  %346 = icmp sgt i32 %345, -1
  %347 = icmp slt i32 %345, %337
  %348 = and i1 %346, %347
  br i1 %348, label %349, label %360

349:                                              ; preds = %342, %340
  %350 = phi i32 [ %341, %340 ], [ %344, %342 ]
  %351 = getelementptr inbounds [49 x [2 x double]], ptr %2, i64 0, i64 %336, i64 %331
  %352 = load double, ptr %351, align 8, !tbaa !157
  %353 = tail call noundef i32 @_Z1Xii(i32 noundef 0, i32 noundef 1) #32
  %354 = tail call noundef i32 @_Z1Xii(i32 noundef %350, i32 noundef 1) #32
  %355 = mul nsw i32 %354, %353
  %356 = sitofp i32 %355 to double
  %357 = tail call double @llvm.fmuladd.f64(double %352, double 0x3FEFDF3B645A1CAC, double %356)
  store double %357, ptr %351, align 8, !tbaa !157
  %358 = load i32, ptr @_ZL1S, align 4, !tbaa !18
  %359 = load i1, ptr @_ZL1D, align 4
  br label %360

360:                                              ; preds = %349, %342
  %361 = phi i1 [ %334, %342 ], [ %359, %349 ]
  %362 = phi i32 [ %335, %342 ], [ %358, %349 ]
  %363 = add nuw nsw i64 %336, 1
  %364 = select i1 %361, i32 12, i32 0
  %365 = add nuw nsw i32 %364, %362
  %366 = sext i32 %365 to i64
  %367 = icmp slt i64 %336, %366
  br i1 %367, label %333, label %368, !llvm.loop !163

368:                                              ; preds = %360, %324
  %369 = phi i1 [ %326, %324 ], [ %361, %360 ]
  %370 = phi i32 [ %325, %324 ], [ %362, %360 ]
  %371 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !18
  %372 = icmp eq i32 %371, 2
  br i1 %372, label %373, label %444

373:                                              ; preds = %368
  br i1 %369, label %374, label %378

374:                                              ; preds = %373
  %375 = sext i32 %322 to i64
  %376 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %375
  %377 = sext i32 %370 to i64
  br label %384

378:                                              ; preds = %409, %373
  %379 = phi i32 [ %370, %373 ], [ %411, %409 ]
  %380 = icmp slt i32 %379, 1
  br i1 %380, label %444, label %381

381:                                              ; preds = %378
  %382 = sext i32 %322 to i64
  %383 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %382
  br label %416

384:                                              ; preds = %409, %374
  %385 = phi i1 [ true, %374 ], [ %410, %409 ]
  %386 = phi i32 [ %370, %374 ], [ %411, %409 ]
  %387 = phi i64 [ %377, %374 ], [ %389, %409 ]
  %388 = trunc i64 %387 to i32
  %389 = add nsw i64 %387, 1
  %390 = sub i32 %388, %386
  %391 = load i32, ptr %376, align 4, !tbaa !18
  %392 = icmp slt i32 %390, %391
  br i1 %392, label %393, label %409

393:                                              ; preds = %384
  %394 = add nuw nsw i32 %386, 1
  %395 = zext i32 %394 to i64
  %396 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %395, i64 %389, i64 %375
  %397 = load double, ptr %396, align 8, !tbaa !157
  %398 = tail call noundef i32 @_Z1Xii(i32 noundef %394, i32 noundef 1) #32
  %399 = trunc i64 %389 to i32
  %400 = tail call noundef i32 @_Z1Xii(i32 noundef %399, i32 noundef 1) #32
  %401 = mul nsw i32 %400, %398
  %402 = sitofp i32 %401 to double
  %403 = tail call double @llvm.fmuladd.f64(double %397, double 0x3FEFDF3B645A1CAC, double %402)
  %404 = load i32, ptr @_ZL1S, align 4, !tbaa !18
  %405 = add nuw nsw i32 %404, 1
  %406 = zext i32 %405 to i64
  %407 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %406, i64 %389, i64 %375
  store double %403, ptr %407, align 8, !tbaa !157
  %408 = load i1, ptr @_ZL1D, align 4
  br label %409

409:                                              ; preds = %393, %384
  %410 = phi i1 [ %385, %384 ], [ %408, %393 ]
  %411 = phi i32 [ %386, %384 ], [ %404, %393 ]
  %412 = select i1 %410, i32 12, i32 0
  %413 = add nuw nsw i32 %412, %411
  %414 = sext i32 %413 to i64
  %415 = icmp slt i64 %389, %414
  br i1 %415, label %384, label %378, !llvm.loop !164

416:                                              ; preds = %439, %381
  %417 = phi i32 [ %379, %381 ], [ %440, %439 ]
  %418 = phi i64 [ 1, %381 ], [ %441, %439 ]
  %419 = load i32, ptr %383, align 4, !tbaa !18
  %420 = sext i32 %419 to i64
  %421 = icmp slt i64 %418, %420
  br i1 %421, label %422, label %439

422:                                              ; preds = %416
  %423 = add nuw nsw i32 %417, 1
  %424 = zext i32 %423 to i64
  %425 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %418, i64 %424, i64 %382
  %426 = load double, ptr %425, align 8, !tbaa !157
  %427 = trunc i64 %418 to i32
  %428 = tail call noundef i32 @_Z1Xii(i32 noundef %427, i32 noundef 1) #32
  %429 = load i32, ptr @_ZL1S, align 4, !tbaa !18
  %430 = add nuw nsw i32 %429, 1
  %431 = tail call noundef i32 @_Z1Xii(i32 noundef %430, i32 noundef 1) #32
  %432 = mul nsw i32 %431, %428
  %433 = sitofp i32 %432 to double
  %434 = tail call double @llvm.fmuladd.f64(double %426, double 0x3FEFDF3B645A1CAC, double %433)
  %435 = load i32, ptr @_ZL1S, align 4, !tbaa !18
  %436 = add nuw nsw i32 %435, 1
  %437 = zext i32 %436 to i64
  %438 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %418, i64 %437, i64 %382
  store double %434, ptr %438, align 8, !tbaa !157
  br label %439

439:                                              ; preds = %422, %416
  %440 = phi i32 [ %417, %416 ], [ %435, %422 ]
  %441 = add nuw nsw i64 %418, 1
  %442 = sext i32 %440 to i64
  %443 = icmp slt i64 %418, %442
  br i1 %443, label %416, label %444, !llvm.loop !165

444:                                              ; preds = %439, %378, %368
  %445 = phi i32 [ %379, %378 ], [ %370, %368 ], [ %440, %439 ]
  %446 = sext i32 %322 to i64
  %447 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE1n, i64 0, i64 %446
  %448 = load i32, ptr %447, align 4, !tbaa !18
  %449 = add nsw i32 %448, 1
  store i32 %449, ptr %447, align 4, !tbaa !18
  %450 = load i32, ptr @_ZZ8wavModelR5MixerE1K, align 4, !tbaa !18
  %451 = icmp eq i32 %449, %450
  br i1 %451, label %454, label %452

452:                                              ; preds = %444
  %453 = load i1, ptr @_ZL1D, align 4
  br label %690

454:                                              ; preds = %444
  %455 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !18
  %456 = icmp eq i32 %455, 1
  %457 = load i1, ptr @_ZL1D, align 4
  %458 = select i1 %457, i32 12, i32 0
  %459 = add nuw nsw i32 %458, %445
  %460 = icmp slt i32 %459, 1
  br i1 %456, label %462, label %461

461:                                              ; preds = %454
  br i1 %460, label %617, label %501

462:                                              ; preds = %454
  br i1 %460, label %617, label %463

463:                                              ; preds = %494, %462
  %464 = phi i1 [ %497, %494 ], [ %457, %462 ]
  %465 = phi i32 [ %498, %494 ], [ %445, %462 ]
  %466 = phi i64 [ %499, %494 ], [ 1, %462 ]
  %467 = select i1 %464, i32 12, i32 0
  %468 = add nuw nsw i32 %467, %465
  %469 = sext i32 %468 to i64
  %470 = icmp sgt i64 %466, %469
  br i1 %470, label %494, label %471

471:                                              ; preds = %463
  %472 = add nsw i64 %466, -1
  %473 = trunc i64 %472 to i32
  br label %474

474:                                              ; preds = %474, %471
  %475 = phi i64 [ %466, %471 ], [ %487, %474 ]
  %476 = add nsw i64 %475, -1
  %477 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %472, i64 %476, i64 %446
  %478 = load double, ptr %477, align 8, !tbaa !157
  %479 = tail call noundef i32 @_Z1Xii(i32 noundef %473, i32 noundef 1) #32
  %480 = trunc i64 %476 to i32
  %481 = tail call noundef i32 @_Z1Xii(i32 noundef %480, i32 noundef 1) #32
  %482 = mul nsw i32 %481, %479
  %483 = sitofp i32 %482 to double
  %484 = fsub double %478, %483
  %485 = fdiv double %484, 0x3FEFDF3B645A1CAC
  %486 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %466, i64 %475, i64 %446
  store double %485, ptr %486, align 8, !tbaa !157
  %487 = add nuw nsw i64 %475, 1
  %488 = load i32, ptr @_ZL1S, align 4, !tbaa !18
  %489 = load i1, ptr @_ZL1D, align 4
  %490 = select i1 %489, i32 12, i32 0
  %491 = add nuw nsw i32 %490, %488
  %492 = sext i32 %491 to i64
  %493 = icmp slt i64 %475, %492
  br i1 %493, label %474, label %494, !llvm.loop !166

494:                                              ; preds = %474, %463
  %495 = phi i64 [ %469, %463 ], [ %492, %474 ]
  %496 = phi i32 [ %468, %463 ], [ %491, %474 ]
  %497 = phi i1 [ %464, %463 ], [ %489, %474 ]
  %498 = phi i32 [ %465, %463 ], [ %488, %474 ]
  %499 = add nuw nsw i64 %466, 1
  %500 = icmp slt i64 %466, %495
  br i1 %500, label %463, label %557, !llvm.loop !167

501:                                              ; preds = %549, %461
  %502 = phi i1 [ %550, %549 ], [ %457, %461 ]
  %503 = phi i32 [ %551, %549 ], [ %445, %461 ]
  %504 = phi i64 [ %552, %549 ], [ 1, %461 ]
  %505 = add nuw nsw i32 %503, 1
  %506 = zext i32 %505 to i64
  %507 = icmp eq i64 %504, %506
  br i1 %507, label %549, label %508

508:                                              ; preds = %501
  %509 = select i1 %502, i32 12, i32 0
  %510 = add nuw nsw i32 %509, %503
  %511 = sext i32 %510 to i64
  %512 = icmp sgt i64 %504, %511
  br i1 %512, label %549, label %513

513:                                              ; preds = %508
  %514 = add nsw i64 %504, -1
  %515 = trunc i64 %514 to i32
  br label %516

516:                                              ; preds = %539, %513
  %517 = phi i1 [ %502, %513 ], [ %540, %539 ]
  %518 = phi i32 [ %503, %513 ], [ %541, %539 ]
  %519 = phi i1 [ %502, %513 ], [ %542, %539 ]
  %520 = phi i32 [ %503, %513 ], [ %543, %539 ]
  %521 = phi i64 [ %504, %513 ], [ %544, %539 ]
  %522 = add nuw nsw i32 %520, 1
  %523 = zext i32 %522 to i64
  %524 = icmp eq i64 %521, %523
  br i1 %524, label %539, label %525

525:                                              ; preds = %516
  %526 = add nsw i64 %521, -1
  %527 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %514, i64 %526, i64 %446
  %528 = load double, ptr %527, align 8, !tbaa !157
  %529 = tail call noundef i32 @_Z1Xii(i32 noundef %515, i32 noundef 1) #32
  %530 = trunc i64 %526 to i32
  %531 = tail call noundef i32 @_Z1Xii(i32 noundef %530, i32 noundef 1) #32
  %532 = mul nsw i32 %531, %529
  %533 = sitofp i32 %532 to double
  %534 = fsub double %528, %533
  %535 = fdiv double %534, 0x3FEFDF3B645A1CAC
  %536 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %504, i64 %521, i64 %446
  store double %535, ptr %536, align 8, !tbaa !157
  %537 = load i32, ptr @_ZL1S, align 4, !tbaa !18
  %538 = load i1, ptr @_ZL1D, align 4
  br label %539

539:                                              ; preds = %525, %516
  %540 = phi i1 [ %517, %516 ], [ %538, %525 ]
  %541 = phi i32 [ %518, %516 ], [ %537, %525 ]
  %542 = phi i1 [ %519, %516 ], [ %538, %525 ]
  %543 = phi i32 [ %520, %516 ], [ %537, %525 ]
  %544 = add nuw nsw i64 %521, 1
  %545 = select i1 %542, i32 12, i32 0
  %546 = add nuw nsw i32 %545, %543
  %547 = sext i32 %546 to i64
  %548 = icmp slt i64 %521, %547
  br i1 %548, label %516, label %549, !llvm.loop !168

549:                                              ; preds = %539, %508, %501
  %550 = phi i1 [ %502, %508 ], [ %502, %501 ], [ %540, %539 ]
  %551 = phi i32 [ %503, %508 ], [ %503, %501 ], [ %541, %539 ]
  %552 = add nuw nsw i64 %504, 1
  %553 = select i1 %550, i32 12, i32 0
  %554 = add nuw nsw i32 %553, %551
  %555 = sext i32 %554 to i64
  %556 = icmp slt i64 %504, %555
  br i1 %556, label %501, label %557, !llvm.loop !169

557:                                              ; preds = %549, %494
  %558 = phi i32 [ %496, %494 ], [ %554, %549 ]
  %559 = phi i1 [ %497, %494 ], [ %550, %549 ]
  %560 = phi i32 [ %498, %494 ], [ %551, %549 ]
  %561 = icmp slt i32 %558, 1
  br i1 %561, label %617, label %564

562:                                              ; preds = %609
  %563 = add nuw nsw i64 %568, 1
  br i1 %593, label %564, label %617, !llvm.loop !170

564:                                              ; preds = %562, %557
  %565 = phi i1 [ %589, %562 ], [ %559, %557 ]
  %566 = phi i32 [ %588, %562 ], [ %560, %557 ]
  %567 = phi i64 [ %587, %562 ], [ 1, %557 ]
  %568 = phi i64 [ %563, %562 ], [ 2, %557 ]
  %569 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %567, i64 %567, i64 %446
  %570 = load double, ptr %569, align 8, !tbaa !157
  %571 = icmp ugt i64 %567, 1
  br i1 %571, label %572, label %581

572:                                              ; preds = %572, %564
  %573 = phi i64 [ %579, %572 ], [ 1, %564 ]
  %574 = phi double [ %578, %572 ], [ %570, %564 ]
  %575 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %567, i64 %573
  %576 = load double, ptr %575, align 8, !tbaa !157
  %577 = fneg double %576
  %578 = tail call double @llvm.fmuladd.f64(double %577, double %576, double %574)
  %579 = add nuw nsw i64 %573, 1
  %580 = icmp eq i64 %579, %567
  br i1 %580, label %581, label %572, !llvm.loop !171

581:                                              ; preds = %572, %564
  %582 = phi double [ %570, %564 ], [ %578, %572 ]
  %583 = fcmp ogt double %582, 0.000000e+00
  br i1 %583, label %584, label %687

584:                                              ; preds = %581
  %585 = tail call double @sqrt(double noundef %582) #31
  %586 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %567, i64 %567
  store double %585, ptr %586, align 8, !tbaa !157
  %587 = add nuw nsw i64 %567, 1
  %588 = load i32, ptr @_ZL1S, align 4, !tbaa !18
  %589 = load i1, ptr @_ZL1D, align 4
  %590 = select i1 %589, i32 12, i32 0
  %591 = add nuw nsw i32 %590, %588
  %592 = sext i32 %591 to i64
  %593 = icmp slt i64 %567, %592
  br i1 %593, label %594, label %617

594:                                              ; preds = %609, %584
  %595 = phi i64 [ %614, %609 ], [ %568, %584 ]
  %596 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %567, i64 %595, i64 %446
  %597 = load double, ptr %596, align 8, !tbaa !157
  br i1 %571, label %598, label %609

598:                                              ; preds = %598, %594
  %599 = phi i64 [ %607, %598 ], [ 1, %594 ]
  %600 = phi double [ %606, %598 ], [ %597, %594 ]
  %601 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %595, i64 %599
  %602 = load double, ptr %601, align 8, !tbaa !157
  %603 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %567, i64 %599
  %604 = load double, ptr %603, align 8, !tbaa !157
  %605 = fneg double %602
  %606 = tail call double @llvm.fmuladd.f64(double %605, double %604, double %600)
  %607 = add nuw nsw i64 %599, 1
  %608 = icmp eq i64 %607, %567
  br i1 %608, label %609, label %598, !llvm.loop !172

609:                                              ; preds = %598, %594
  %610 = phi double [ %597, %594 ], [ %606, %598 ]
  %611 = load double, ptr %586, align 8, !tbaa !157
  %612 = fdiv double %610, %611
  %613 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %595, i64 %567
  store double %612, ptr %613, align 8, !tbaa !157
  %614 = add nuw nsw i64 %595, 1
  %615 = trunc i64 %595 to i32
  %616 = icmp sgt i32 %591, %615
  br i1 %616, label %594, label %562, !llvm.loop !173

617:                                              ; preds = %584, %562, %557, %462, %461
  %618 = phi i1 [ %559, %557 ], [ %457, %462 ], [ %457, %461 ], [ %589, %584 ], [ %589, %562 ]
  %619 = phi i32 [ %560, %557 ], [ %445, %462 ], [ %445, %461 ], [ %588, %584 ], [ %588, %562 ]
  %620 = phi i32 [ %558, %557 ], [ %459, %462 ], [ %459, %461 ], [ %591, %584 ], [ %591, %562 ]
  %621 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %446
  %622 = load i32, ptr %621, align 4, !tbaa !18
  %623 = add nuw nsw i32 %619, 1
  %624 = icmp sgt i32 %622, %623
  br i1 %624, label %625, label %687

625:                                              ; preds = %617
  %626 = getelementptr [2 x double], ptr %2, i64 0, i64 %446
  %627 = icmp slt i32 %620, 1
  br i1 %627, label %687, label %628

628:                                              ; preds = %625
  %629 = add nuw i32 %620, 1
  %630 = zext i32 %629 to i64
  br label %636

631:                                              ; preds = %653
  %632 = icmp sgt i32 %620, 0
  br i1 %632, label %633, label %687

633:                                              ; preds = %631
  %634 = zext i32 %620 to i64
  %635 = zext i32 %620 to i64
  br label %660

636:                                              ; preds = %653, %628
  %637 = phi i64 [ 1, %628 ], [ %658, %653 ]
  %638 = getelementptr inbounds [49 x [2 x double]], ptr %2, i64 0, i64 %637, i64 %446
  %639 = load double, ptr %638, align 8, !tbaa !157
  %640 = getelementptr [49 x [49 x [2 x double]]], ptr %626, i64 0, i64 %637
  store double %639, ptr %640, align 8, !tbaa !157
  %641 = icmp ugt i64 %637, 1
  br i1 %641, label %642, label %653

642:                                              ; preds = %642, %636
  %643 = phi i64 [ %651, %642 ], [ 1, %636 ]
  %644 = phi double [ %650, %642 ], [ %639, %636 ]
  %645 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %637, i64 %643
  %646 = load double, ptr %645, align 8, !tbaa !157
  %647 = getelementptr [49 x [49 x [2 x double]]], ptr %626, i64 0, i64 %643
  %648 = load double, ptr %647, align 8, !tbaa !157
  %649 = fneg double %646
  %650 = tail call double @llvm.fmuladd.f64(double %649, double %648, double %644)
  store double %650, ptr %640, align 8, !tbaa !157
  %651 = add nuw nsw i64 %643, 1
  %652 = icmp eq i64 %651, %637
  br i1 %652, label %653, label %642, !llvm.loop !174

653:                                              ; preds = %642, %636
  %654 = phi double [ %639, %636 ], [ %650, %642 ]
  %655 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %637, i64 %637
  %656 = load double, ptr %655, align 8, !tbaa !157
  %657 = fdiv double %654, %656
  store double %657, ptr %640, align 8, !tbaa !157
  %658 = add nuw nsw i64 %637, 1
  %659 = icmp eq i64 %658, %630
  br i1 %659, label %631, label %636, !llvm.loop !175

660:                                              ; preds = %678, %633
  %661 = phi i64 [ %635, %633 ], [ %686, %678 ]
  %662 = phi i64 [ %634, %633 ], [ %684, %678 ]
  %663 = icmp slt i64 %661, %634
  %664 = getelementptr [49 x [49 x [2 x double]]], ptr %626, i64 0, i64 %661
  %665 = load double, ptr %664, align 8, !tbaa !157
  br i1 %663, label %666, label %678

666:                                              ; preds = %666, %660
  %667 = phi i64 [ %669, %666 ], [ %662, %660 ]
  %668 = phi double [ %675, %666 ], [ %665, %660 ]
  %669 = add nsw i64 %667, 1
  %670 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %669, i64 %661
  %671 = load double, ptr %670, align 8, !tbaa !157
  %672 = getelementptr [49 x [49 x [2 x double]]], ptr %626, i64 0, i64 %669
  %673 = load double, ptr %672, align 8, !tbaa !157
  %674 = fneg double %671
  %675 = tail call double @llvm.fmuladd.f64(double %674, double %673, double %668)
  store double %675, ptr %664, align 8, !tbaa !157
  %676 = trunc i64 %669 to i32
  %677 = icmp eq i32 %620, %676
  br i1 %677, label %678, label %666, !llvm.loop !176

678:                                              ; preds = %666, %660
  %679 = phi double [ %665, %660 ], [ %675, %666 ]
  %680 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %661, i64 %661
  %681 = load double, ptr %680, align 8, !tbaa !157
  %682 = getelementptr [49 x [49 x [2 x double]]], ptr %626, i64 0, i64 %661
  %683 = fdiv double %679, %681
  store double %683, ptr %682, align 8, !tbaa !157
  %684 = add nsw i64 %662, -1
  %685 = icmp sgt i64 %661, 1
  %686 = add nsw i64 %661, -1
  br i1 %685, label %660, label %687, !llvm.loop !177

687:                                              ; preds = %678, %631, %625, %617, %581
  %688 = phi i1 [ %618, %631 ], [ %618, %617 ], [ %618, %625 ], [ %618, %678 ], [ %565, %581 ]
  %689 = phi i32 [ %619, %631 ], [ %619, %617 ], [ %619, %625 ], [ %619, %678 ], [ %566, %581 ]
  store i32 0, ptr %447, align 4, !tbaa !18
  br label %690

690:                                              ; preds = %687, %452
  %691 = phi i1 [ %688, %687 ], [ %453, %452 ]
  %692 = phi i32 [ %689, %687 ], [ %445, %452 ]
  %693 = getelementptr [2 x double], ptr %2, i64 0, i64 %446
  %694 = select i1 %691, i32 12, i32 0
  %695 = add nuw nsw i32 %694, %692
  %696 = icmp slt i32 %695, 1
  br i1 %696, label %713, label %697

697:                                              ; preds = %697, %690
  %698 = phi i64 [ %706, %697 ], [ 1, %690 ]
  %699 = phi double [ %705, %697 ], [ 0.000000e+00, %690 ]
  %700 = getelementptr [49 x [49 x [2 x double]]], ptr %693, i64 0, i64 %698
  %701 = load double, ptr %700, align 8, !tbaa !157
  %702 = trunc i64 %698 to i32
  %703 = tail call noundef i32 @_Z1Xii(i32 noundef %702, i32 noundef 0) #32
  %704 = sitofp i32 %703 to double
  %705 = tail call double @llvm.fmuladd.f64(double %701, double %704, double %699)
  %706 = add nuw nsw i64 %698, 1
  %707 = load i32, ptr @_ZL1S, align 4, !tbaa !18
  %708 = load i1, ptr @_ZL1D, align 4
  %709 = select i1 %708, i32 12, i32 0
  %710 = add nuw nsw i32 %709, %707
  %711 = sext i32 %710 to i64
  %712 = icmp slt i64 %698, %711
  br i1 %712, label %697, label %713, !llvm.loop !178

713:                                              ; preds = %697, %690
  %714 = phi double [ 0.000000e+00, %690 ], [ %705, %697 ]
  %715 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 2, i64 %446
  %716 = load i32, ptr %715, align 4, !tbaa !18
  %717 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 3, i64 %446
  store i32 %716, ptr %717, align 4, !tbaa !18
  %718 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1, i64 %446
  %719 = load i32, ptr %718, align 4, !tbaa !18
  store i32 %719, ptr %715, align 4, !tbaa !18
  %720 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 %446
  %721 = load i32, ptr %720, align 4, !tbaa !18
  store i32 %721, ptr %718, align 4, !tbaa !18
  %722 = tail call double @llvm.floor.f64(double %714)
  %723 = fptosi double %722 to i32
  store i32 %723, ptr %720, align 4, !tbaa !18
  %724 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %446
  %725 = load i32, ptr %724, align 4, !tbaa !18
  %726 = add nsw i32 %725, 1
  store i32 %726, ptr %724, align 4, !tbaa !18
  %727 = load i32, ptr @pos, align 4, !tbaa !18
  %728 = add nsw i32 %727, -1
  %729 = load i32, ptr @buf, align 8, !tbaa !23
  %730 = add nsw i32 %729, -1
  %731 = and i32 %730, %728
  %732 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %733 = sext i32 %731 to i64
  %734 = getelementptr inbounds i8, ptr %732, i64 %733
  %735 = load i8, ptr %734, align 1, !tbaa !27
  %736 = zext i8 %735 to i32
  %737 = mul i32 %736, 30005491
  %738 = mul i32 %321, 50004239
  %739 = add i32 %738, 19995673
  %740 = add i32 %739, %737
  %741 = lshr i32 %740, 9
  %742 = lshr i32 %736, 3
  %743 = lshr i32 %321, 4
  %744 = xor i32 %742, %741
  %745 = xor i32 %744, %743
  %746 = xor i32 %745, %740
  %747 = xor i32 %746, 67108864
  %748 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %749 = add nsw i32 %748, 1
  store i32 %749, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %750 = mul i32 %747, 987654323
  %751 = add i32 %750, %748
  %752 = tail call i32 @llvm.fshl.i32(i32 %751, i32 %751, i32 16)
  %753 = mul i32 %752, 123456791
  %754 = add i32 %753, %748
  %755 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !15
  %756 = sext i32 %748 to i64
  %757 = getelementptr inbounds i32, ptr %755, i64 %756
  store i32 %754, ptr %757, align 4, !tbaa !18
  %758 = load i32, ptr @pos, align 4, !tbaa !18
  %759 = add nsw i32 %758, -1
  %760 = load i32, ptr @buf, align 8, !tbaa !23
  %761 = add nsw i32 %760, -1
  %762 = and i32 %761, %759
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds i8, ptr %732, i64 %763
  %765 = load i8, ptr %764, align 1, !tbaa !27
  %766 = zext i8 %765 to i32
  %767 = add nsw i32 %758, -2
  %768 = and i32 %761, %767
  %769 = sext i32 %768 to i64
  %770 = getelementptr inbounds i8, ptr %732, i64 %769
  %771 = load i8, ptr %770, align 1, !tbaa !27
  %772 = zext i8 %771 to i32
  %773 = mul i32 %766, 30005491
  %774 = mul i32 %772, 50004239
  %775 = mul i32 %321, 70004807
  %776 = add i32 %775, 290003459
  %777 = add i32 %776, %773
  %778 = add i32 %777, %774
  %779 = lshr i32 %778, 9
  %780 = lshr i32 %766, 3
  %781 = lshr i32 %772, 4
  %782 = lshr i32 %321, 5
  %783 = xor i32 %780, %781
  %784 = xor i32 %783, %779
  %785 = xor i32 %784, %782
  %786 = xor i32 %785, %778
  %787 = xor i32 %786, 67108863
  %788 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %789 = add nsw i32 %788, 1
  store i32 %789, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %790 = mul i32 %787, 987654323
  %791 = add i32 %790, %788
  %792 = tail call i32 @llvm.fshl.i32(i32 %791, i32 %791, i32 16)
  %793 = mul i32 %792, 123456791
  %794 = add i32 %793, %788
  %795 = sext i32 %788 to i64
  %796 = getelementptr inbounds i32, ptr %755, i64 %795
  store i32 %794, ptr %796, align 4, !tbaa !18
  %797 = load i32, ptr @pos, align 4, !tbaa !18
  %798 = add nsw i32 %797, -1
  %799 = load i32, ptr @buf, align 8, !tbaa !23
  %800 = add nsw i32 %799, -1
  %801 = and i32 %800, %798
  %802 = sext i32 %801 to i64
  %803 = getelementptr inbounds i8, ptr %732, i64 %802
  %804 = load i8, ptr %803, align 1, !tbaa !27
  %805 = zext i8 %804 to i32
  %806 = add nsw i32 %797, -2
  %807 = and i32 %800, %806
  %808 = sext i32 %807 to i64
  %809 = getelementptr inbounds i8, ptr %732, i64 %808
  %810 = load i8, ptr %809, align 1, !tbaa !27
  %811 = lshr i8 %810, 3
  %812 = zext i8 %811 to i32
  %813 = add nsw i32 %797, -3
  %814 = and i32 %800, %813
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds i8, ptr %732, i64 %815
  %817 = load i8, ptr %816, align 1, !tbaa !27
  %818 = zext i8 %817 to i32
  %819 = mul i32 %805, 30005491
  %820 = mul nuw nsw i32 %812, 50004239
  %821 = mul i32 %818, 70004807
  %822 = mul i32 %321, 110002499
  %823 = add i32 %822, 600008937
  %824 = add i32 %823, %819
  %825 = add i32 %824, %820
  %826 = add i32 %825, %821
  %827 = lshr i32 %826, 9
  %828 = lshr i32 %805, 3
  %829 = lshr i32 %812, 4
  %830 = lshr i32 %818, 5
  %831 = lshr i32 %321, 6
  %832 = xor i32 %828, %831
  %833 = xor i32 %832, %829
  %834 = xor i32 %833, %830
  %835 = xor i32 %834, %827
  %836 = xor i32 %835, %826
  %837 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %838 = add nsw i32 %837, 1
  store i32 %838, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %839 = mul i32 %836, 987654323
  %840 = add i32 %839, %837
  %841 = tail call i32 @llvm.fshl.i32(i32 %840, i32 %840, i32 16)
  %842 = mul i32 %841, 123456791
  %843 = add i32 %842, %837
  %844 = sext i32 %837 to i64
  %845 = getelementptr inbounds i32, ptr %755, i64 %844
  store i32 %843, ptr %845, align 4, !tbaa !18
  %846 = load i32, ptr @pos, align 4, !tbaa !18
  %847 = add i32 %846, -4
  %848 = load i32, ptr @buf, align 8, !tbaa !23
  %849 = add nsw i32 %848, -1
  %850 = and i32 %849, %847
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds i8, ptr %732, i64 %851
  %853 = load i8, ptr %852, align 1, !tbaa !27
  %854 = add i32 %846, -2
  %855 = and i32 %849, %854
  %856 = sext i32 %855 to i64
  %857 = getelementptr inbounds i8, ptr %732, i64 %856
  %858 = load i8, ptr %857, align 1, !tbaa !27
  %859 = add i8 %858, %853
  %860 = add i32 %846, -6
  %861 = and i32 %849, %860
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds i8, ptr %732, i64 %862
  %864 = load i8, ptr %863, align 1, !tbaa !27
  %865 = sub i8 %859, %864
  %866 = zext i8 %865 to i32
  %867 = mul i32 %866, 30005491
  %868 = add i32 %738, 620004610
  %869 = add i32 %868, %867
  %870 = lshr i32 %869, 9
  %871 = lshr i32 %866, 3
  %872 = xor i32 %871, %870
  %873 = xor i32 %872, %743
  %874 = xor i32 %873, %869
  %875 = xor i32 %874, 67108865
  %876 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %877 = add nsw i32 %876, 1
  store i32 %877, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %878 = mul i32 %875, 987654323
  %879 = add i32 %878, %876
  %880 = tail call i32 @llvm.fshl.i32(i32 %879, i32 %879, i32 16)
  %881 = mul i32 %880, 123456791
  %882 = add i32 %881, %876
  %883 = sext i32 %876 to i64
  %884 = getelementptr inbounds i32, ptr %755, i64 %883
  store i32 %882, ptr %884, align 4, !tbaa !18
  %885 = and i32 %723, 255
  %886 = mul i32 %885, 30005491
  %887 = add i32 %738, 820007589
  %888 = add i32 %887, %886
  %889 = lshr i32 %888, 9
  %890 = lshr i32 %885, 3
  %891 = xor i32 %890, 1
  %892 = xor i32 %891, %889
  %893 = xor i32 %892, %743
  %894 = xor i32 %893, %888
  %895 = xor i32 %894, 67108864
  %896 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %897 = add nsw i32 %896, 1
  store i32 %897, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %898 = mul i32 %895, 987654323
  %899 = add i32 %896, %898
  %900 = tail call i32 @llvm.fshl.i32(i32 %899, i32 %899, i32 16)
  %901 = mul i32 %900, 123456791
  %902 = add i32 %901, %896
  %903 = sext i32 %896 to i64
  %904 = getelementptr inbounds i32, ptr %755, i64 %903
  store i32 %902, ptr %904, align 4, !tbaa !18
  %905 = load i32, ptr @_ZZ8wavModelR5MixerE1w, align 4, !tbaa !18
  %906 = load i32, ptr @pos, align 4, !tbaa !18
  %907 = sub i32 %906, %905
  %908 = load i32, ptr @buf, align 8, !tbaa !23
  %909 = add nsw i32 %908, -1
  %910 = and i32 %909, %907
  %911 = sext i32 %910 to i64
  %912 = getelementptr inbounds i8, ptr %732, i64 %911
  %913 = load i8, ptr %912, align 1, !tbaa !27
  %914 = sub i32 %723, %721
  %915 = trunc i32 %914 to i8
  %916 = add i8 %913, %915
  %917 = zext i8 %916 to i32
  %918 = mul i32 %917, 30005491
  %919 = add i32 %738, 1020010568
  %920 = add i32 %919, %918
  %921 = lshr i32 %920, 9
  %922 = lshr i32 %917, 3
  %923 = xor i32 %922, %921
  %924 = xor i32 %923, %743
  %925 = xor i32 %924, %920
  %926 = xor i32 %925, 67108865
  %927 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %928 = add nsw i32 %927, 1
  store i32 %928, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %929 = mul i32 %926, 987654323
  %930 = add i32 %929, %927
  %931 = tail call i32 @llvm.fshl.i32(i32 %930, i32 %930, i32 16)
  %932 = mul i32 %931, 123456791
  %933 = add i32 %932, %927
  %934 = sext i32 %927 to i64
  %935 = getelementptr inbounds i32, ptr %755, i64 %934
  store i32 %933, ptr %935, align 4, !tbaa !18
  %936 = load i32, ptr @pos, align 4, !tbaa !18
  %937 = sub i32 %936, %905
  %938 = load i32, ptr @buf, align 8, !tbaa !23
  %939 = add nsw i32 %938, -1
  %940 = and i32 %939, %937
  %941 = sext i32 %940 to i64
  %942 = getelementptr inbounds i8, ptr %732, i64 %941
  %943 = load i8, ptr %942, align 1, !tbaa !27
  %944 = zext i8 %943 to i32
  %945 = add i32 %937, 1
  %946 = and i32 %939, %945
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds i8, ptr %732, i64 %947
  %949 = load i8, ptr %948, align 1, !tbaa !27
  %950 = zext i8 %949 to i32
  %951 = shl nuw nsw i32 %950, 8
  %952 = or i32 %951, %944
  %953 = shl nsw i32 %905, 1
  %954 = sub i32 %936, %953
  %955 = and i32 %939, %954
  %956 = sext i32 %955 to i64
  %957 = getelementptr inbounds i8, ptr %732, i64 %956
  %958 = load i8, ptr %957, align 1, !tbaa !27
  %959 = zext i8 %958 to i32
  %960 = add i32 %954, 1
  %961 = and i32 %939, %960
  %962 = sext i32 %961 to i64
  %963 = getelementptr inbounds i8, ptr %732, i64 %962
  %964 = load i8, ptr %963, align 1, !tbaa !27
  %965 = zext i8 %964 to i32
  %966 = shl nuw nsw i32 %965, 8
  %967 = or i32 %966, %959
  %968 = add i32 %721, %719
  %969 = sub i32 %952, %968
  %970 = add i32 %969, %967
  %971 = lshr i32 %970, 1
  %972 = and i32 %971, 255
  %973 = mul i32 %972, 50004239
  %974 = add i32 %775, 1290018354
  %975 = add i32 %974, %886
  %976 = add i32 %975, %973
  %977 = lshr i32 %976, 9
  %978 = lshr i32 %972, 4
  %979 = xor i32 %978, %977
  %980 = xor i32 %979, %891
  %981 = xor i32 %980, %782
  %982 = xor i32 %981, %976
  %983 = xor i32 %982, 67108863
  %984 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %985 = add nsw i32 %984, 1
  store i32 %985, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %986 = mul i32 %983, 987654323
  %987 = add i32 %986, %984
  %988 = tail call i32 @llvm.fshl.i32(i32 %987, i32 %987, i32 16)
  %989 = mul i32 %988, 123456791
  %990 = add i32 %989, %984
  %991 = sext i32 %984 to i64
  %992 = getelementptr inbounds i32, ptr %755, i64 %991
  store i32 %990, ptr %992, align 4, !tbaa !18
  %993 = load i32, ptr @pos, align 4, !tbaa !18
  %994 = sub i32 %993, %905
  %995 = load i32, ptr @buf, align 8, !tbaa !23
  %996 = add nsw i32 %995, -1
  %997 = and i32 %996, %994
  %998 = sext i32 %997 to i64
  %999 = getelementptr inbounds i8, ptr %732, i64 %998
  %1000 = load i8, ptr %999, align 1, !tbaa !27
  %1001 = zext i8 %1000 to i32
  %1002 = sub i32 %993, %953
  %1003 = and i32 %996, %1002
  %1004 = sext i32 %1003 to i64
  %1005 = getelementptr inbounds i8, ptr %732, i64 %1004
  %1006 = load i8, ptr %1005, align 1, !tbaa !27
  %1007 = zext i8 %1006 to i32
  %1008 = sub i32 %1001, %721
  %1009 = shl i32 %1008, 1
  %1010 = add i32 %719, %723
  %1011 = sub i32 %1010, %1007
  %1012 = add i32 %1011, %1009
  %1013 = and i32 %1012, 255
  %1014 = mul i32 %1013, 30005491
  %1015 = add i32 %738, 1420016526
  %1016 = add i32 %1015, %1014
  %1017 = lshr i32 %1016, 9
  %1018 = lshr i32 %1013, 3
  %1019 = xor i32 %1018, %1017
  %1020 = xor i32 %1019, %743
  %1021 = xor i32 %1020, %1016
  %1022 = xor i32 %1021, 67108866
  %1023 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1024 = add nsw i32 %1023, 1
  store i32 %1024, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1025 = mul i32 %1022, 987654323
  %1026 = add i32 %1025, %1023
  %1027 = tail call i32 @llvm.fshl.i32(i32 %1026, i32 %1026, i32 16)
  %1028 = mul i32 %1027, 123456791
  %1029 = add i32 %1028, %1023
  %1030 = sext i32 %1023 to i64
  %1031 = getelementptr inbounds i32, ptr %755, i64 %1030
  store i32 %1029, ptr %1031, align 4, !tbaa !18
  %1032 = load i32, ptr @pos, align 4, !tbaa !18
  %1033 = sub i32 %1032, %905
  %1034 = load i32, ptr @buf, align 8, !tbaa !23
  %1035 = add nsw i32 %1034, -1
  %1036 = and i32 %1035, %1033
  %1037 = sext i32 %1036 to i64
  %1038 = getelementptr inbounds i8, ptr %732, i64 %1037
  %1039 = load i8, ptr %1038, align 1, !tbaa !27
  %1040 = zext i8 %1039 to i32
  %1041 = add i32 %1033, 1
  %1042 = and i32 %1035, %1041
  %1043 = sext i32 %1042 to i64
  %1044 = getelementptr inbounds i8, ptr %732, i64 %1043
  %1045 = load i8, ptr %1044, align 1, !tbaa !27
  %1046 = zext i8 %1045 to i32
  %1047 = shl nuw nsw i32 %1046, 8
  %1048 = and i32 %1047, 256
  %1049 = or i32 %1048, %1040
  %1050 = shl nuw nsw i32 %1049, 8
  %1051 = load i32, ptr @_ZZ8wavModelR5MixerE4scm1, align 8, !tbaa !74
  %1052 = add i32 %1051, 130816
  %1053 = and i32 %1050, %1052
  store i32 %1053, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !102
  %1054 = load i8, ptr %1038, align 1, !tbaa !27
  %1055 = zext i8 %1054 to i32
  %1056 = sub i32 %1032, %953
  %1057 = and i32 %1035, %1056
  %1058 = sext i32 %1057 to i64
  %1059 = getelementptr inbounds i8, ptr %732, i64 %1058
  %1060 = load i8, ptr %1059, align 1, !tbaa !27
  %1061 = zext i8 %1060 to i32
  %1062 = add i32 %1056, 1
  %1063 = and i32 %1035, %1062
  %1064 = sext i32 %1063 to i64
  %1065 = getelementptr inbounds i8, ptr %732, i64 %1064
  %1066 = load i8, ptr %1065, align 1, !tbaa !27
  %1067 = zext i8 %1066 to i32
  %1068 = shl nuw nsw i32 %1055, 9
  %1069 = shl nuw nsw i32 %1067, 16
  %1070 = shl nuw nsw i32 %1061, 8
  %1071 = or i32 %1069, %1070
  %1072 = sub nsw i32 %1068, %1071
  %1073 = load i32, ptr @_ZZ8wavModelR5MixerE4scm2, align 8, !tbaa !74
  %1074 = add i32 %1073, 130816
  %1075 = and i32 %1074, 130816
  %1076 = and i32 %1075, %1072
  store i32 %1076, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !102
  %1077 = load i8, ptr %1038, align 1, !tbaa !27
  %1078 = zext i8 %1077 to i32
  %1079 = load i8, ptr %1044, align 1, !tbaa !27
  %1080 = zext i8 %1079 to i32
  %1081 = shl nuw nsw i32 %1080, 8
  %1082 = or i32 %1081, %1078
  %1083 = mul nuw nsw i32 %1082, 3
  %1084 = load i8, ptr %1059, align 1, !tbaa !27
  %1085 = zext i8 %1084 to i32
  %1086 = load i8, ptr %1065, align 1, !tbaa !27
  %1087 = zext i8 %1086 to i32
  %1088 = shl nuw nsw i32 %1087, 8
  %1089 = or i32 %1088, %1085
  %1090 = mul nuw nsw i32 %1089, 509
  %1091 = add nuw nsw i32 %1090, %1083
  %1092 = mul i32 %905, -3
  %1093 = add i32 %1032, %1092
  %1094 = and i32 %1035, %1093
  %1095 = sext i32 %1094 to i64
  %1096 = getelementptr inbounds i8, ptr %732, i64 %1095
  %1097 = load i8, ptr %1096, align 1, !tbaa !27
  %1098 = zext i8 %1097 to i32
  %1099 = add i32 %1093, 1
  %1100 = and i32 %1035, %1099
  %1101 = sext i32 %1100 to i64
  %1102 = getelementptr inbounds i8, ptr %732, i64 %1101
  %1103 = load i8, ptr %1102, align 1, !tbaa !27
  %1104 = zext i8 %1103 to i32
  %1105 = shl nuw nsw i32 %1104, 8
  %1106 = or i32 %1105, %1098
  %1107 = add nuw nsw i32 %1091, %1106
  %1108 = shl i32 %1107, 8
  %1109 = load i32, ptr @_ZZ8wavModelR5MixerE4scm3, align 8, !tbaa !74
  %1110 = add i32 %1109, 130816
  %1111 = and i32 %1110, 130816
  %1112 = and i32 %1111, %1108
  store i32 %1112, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !102
  br label %2258

1113:                                             ; preds = %314
  %1114 = add nsw i32 %307, -1
  %1115 = load i32, ptr @buf, align 8, !tbaa !23
  %1116 = add nsw i32 %1115, -1
  %1117 = and i32 %1116, %1114
  %1118 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %1119 = sext i32 %1117 to i64
  %1120 = getelementptr inbounds i8, ptr %1118, i64 %1119
  %1121 = load i8, ptr %1120, align 1, !tbaa !27
  %1122 = zext i8 %1121 to i32
  %1123 = mul i32 %1122, 30005491
  %1124 = mul i32 %321, 50004239
  %1125 = add i32 %1124, 19995673
  %1126 = add i32 %1125, %1123
  %1127 = lshr i32 %1126, 9
  %1128 = lshr i32 %1122, 3
  %1129 = lshr i32 %321, 4
  %1130 = xor i32 %1128, %1127
  %1131 = xor i32 %1130, %1129
  %1132 = xor i32 %1131, %1126
  %1133 = xor i32 %1132, 67108864
  %1134 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1135 = add nsw i32 %1134, 1
  store i32 %1135, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1136 = mul i32 %1133, 987654323
  %1137 = add i32 %1136, %1134
  %1138 = tail call i32 @llvm.fshl.i32(i32 %1137, i32 %1137, i32 16)
  %1139 = mul i32 %1138, 123456791
  %1140 = add i32 %1139, %1134
  %1141 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !15
  %1142 = sext i32 %1134 to i64
  %1143 = getelementptr inbounds i32, ptr %1141, i64 %1142
  store i32 %1140, ptr %1143, align 4, !tbaa !18
  %1144 = load i32, ptr @pos, align 4, !tbaa !18
  %1145 = add nsw i32 %1144, -1
  %1146 = load i32, ptr @buf, align 8, !tbaa !23
  %1147 = add nsw i32 %1146, -1
  %1148 = and i32 %1147, %1145
  %1149 = sext i32 %1148 to i64
  %1150 = getelementptr inbounds i8, ptr %1118, i64 %1149
  %1151 = load i8, ptr %1150, align 1, !tbaa !27
  %1152 = lshr i8 %1151, 7
  %1153 = zext i8 %1152 to i32
  %1154 = add nsw i32 %1144, -2
  %1155 = and i32 %1147, %1154
  %1156 = sext i32 %1155 to i64
  %1157 = getelementptr inbounds i8, ptr %1118, i64 %1156
  %1158 = load i8, ptr %1157, align 1, !tbaa !27
  %1159 = zext i8 %1158 to i32
  %1160 = add nsw i32 %1144, -3
  %1161 = and i32 %1147, %1160
  %1162 = sext i32 %1161 to i64
  %1163 = getelementptr inbounds i8, ptr %1118, i64 %1162
  %1164 = load i8, ptr %1163, align 1, !tbaa !27
  %1165 = lshr i8 %1164, 7
  %1166 = zext i8 %1165 to i32
  %1167 = mul nuw nsw i32 %1153, 30005491
  %1168 = mul i32 %1159, 50004239
  %1169 = mul nuw nsw i32 %1166, 70004807
  %1170 = mul i32 %321, 110002499
  %1171 = add i32 %1170, 400005958
  %1172 = add i32 %1171, %1167
  %1173 = add i32 %1172, %1168
  %1174 = add i32 %1173, %1169
  %1175 = lshr i32 %1174, 9
  %1176 = lshr i32 %1159, 4
  %1177 = lshr i32 %321, 6
  %1178 = xor i32 %1176, %1175
  %1179 = xor i32 %1178, %1177
  %1180 = xor i32 %1179, %1174
  %1181 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1182 = add nsw i32 %1181, 1
  store i32 %1182, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1183 = mul i32 %1180, 987654323
  %1184 = add i32 %1183, %1181
  %1185 = tail call i32 @llvm.fshl.i32(i32 %1184, i32 %1184, i32 16)
  %1186 = mul i32 %1185, 123456791
  %1187 = add i32 %1186, %1181
  %1188 = sext i32 %1181 to i64
  %1189 = getelementptr inbounds i32, ptr %1141, i64 %1188
  store i32 %1187, ptr %1189, align 4, !tbaa !18
  %1190 = shl nsw i32 %320, 1
  %1191 = mul nsw i32 %320, 3
  %1192 = shl nsw i32 %320, 2
  %1193 = load i32, ptr @pos, align 4, !tbaa !18
  %1194 = sub nsw i32 %1193, %320
  %1195 = load i32, ptr @buf, align 8, !tbaa !23
  %1196 = add nsw i32 %1195, -1
  %1197 = and i32 %1196, %1194
  %1198 = sext i32 %1197 to i64
  %1199 = getelementptr inbounds i8, ptr %1118, i64 %1198
  %1200 = load i8, ptr %1199, align 1, !tbaa !27
  %1201 = lshr i8 %1200, 1
  %1202 = zext i8 %1201 to i32
  %1203 = icmp eq i32 %320, 0
  br i1 %1203, label %1232, label %1204

1204:                                             ; preds = %1113
  %1205 = sub nsw i32 %1193, %1190
  %1206 = and i32 %1196, %1205
  %1207 = sext i32 %1206 to i64
  %1208 = getelementptr inbounds i8, ptr %1118, i64 %1207
  %1209 = load i8, ptr %1208, align 1, !tbaa !27
  %1210 = lshr i8 %1209, 1
  %1211 = zext i8 %1210 to i32
  %1212 = shl nuw nsw i32 %1202, 14
  %1213 = shl nuw nsw i32 %1211, 7
  %1214 = or i32 %1212, %1213
  %1215 = sub nsw i32 %1193, %1191
  %1216 = and i32 %1196, %1215
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds i8, ptr %1118, i64 %1217
  %1219 = load i8, ptr %1218, align 1, !tbaa !27
  %1220 = lshr i8 %1219, 1
  %1221 = zext i8 %1220 to i32
  %1222 = or i32 %1214, %1221
  %1223 = shl nuw nsw i32 %1222, 7
  %1224 = sub nsw i32 %1193, %1192
  %1225 = and i32 %1196, %1224
  %1226 = sext i32 %1225 to i64
  %1227 = getelementptr inbounds i8, ptr %1118, i64 %1226
  %1228 = load i8, ptr %1227, align 1, !tbaa !27
  %1229 = lshr i8 %1228, 1
  %1230 = zext i8 %1229 to i32
  %1231 = or i32 %1223, %1230
  br label %1232

1232:                                             ; preds = %1204, %1113
  %1233 = phi i32 [ %1231, %1204 ], [ %1202, %1113 ]
  %1234 = mul i32 %1233, 30005491
  %1235 = add i32 %1124, 420001631
  %1236 = add i32 %1235, %1234
  %1237 = lshr i32 %1236, 9
  %1238 = lshr i32 %1233, 3
  %1239 = xor i32 %1238, %1237
  %1240 = xor i32 %1239, %1129
  %1241 = xor i32 %1240, %1236
  %1242 = xor i32 %1241, 67108864
  %1243 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1244 = add nsw i32 %1243, 1
  store i32 %1244, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1245 = mul i32 %1242, 987654323
  %1246 = add i32 %1245, %1243
  %1247 = tail call i32 @llvm.fshl.i32(i32 %1246, i32 %1246, i32 16)
  %1248 = mul i32 %1247, 123456791
  %1249 = add i32 %1248, %1243
  %1250 = sext i32 %1243 to i64
  %1251 = getelementptr inbounds i32, ptr %1141, i64 %1250
  store i32 %1249, ptr %1251, align 4, !tbaa !18
  %1252 = load i32, ptr @pos, align 4, !tbaa !18
  %1253 = sub nsw i32 %1252, %320
  %1254 = load i32, ptr @buf, align 8, !tbaa !23
  %1255 = add nsw i32 %1254, -1
  %1256 = and i32 %1255, %1253
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds i8, ptr %1118, i64 %1257
  %1259 = load i8, ptr %1258, align 1, !tbaa !27
  %1260 = lshr i8 %1259, 3
  %1261 = zext i8 %1260 to i32
  br i1 %1203, label %1290, label %1262

1262:                                             ; preds = %1232
  %1263 = sub nsw i32 %1252, %1190
  %1264 = and i32 %1255, %1263
  %1265 = sext i32 %1264 to i64
  %1266 = getelementptr inbounds i8, ptr %1118, i64 %1265
  %1267 = load i8, ptr %1266, align 1, !tbaa !27
  %1268 = lshr i8 %1267, 3
  %1269 = zext i8 %1268 to i32
  %1270 = shl nuw nsw i32 %1261, 10
  %1271 = shl nuw nsw i32 %1269, 5
  %1272 = or i32 %1270, %1271
  %1273 = sub nsw i32 %1252, %1191
  %1274 = and i32 %1255, %1273
  %1275 = sext i32 %1274 to i64
  %1276 = getelementptr inbounds i8, ptr %1118, i64 %1275
  %1277 = load i8, ptr %1276, align 1, !tbaa !27
  %1278 = lshr i8 %1277, 3
  %1279 = zext i8 %1278 to i32
  %1280 = or i32 %1272, %1279
  %1281 = shl nuw nsw i32 %1280, 5
  %1282 = sub nsw i32 %1252, %1192
  %1283 = and i32 %1255, %1282
  %1284 = sext i32 %1283 to i64
  %1285 = getelementptr inbounds i8, ptr %1118, i64 %1284
  %1286 = load i8, ptr %1285, align 1, !tbaa !27
  %1287 = lshr i8 %1286, 3
  %1288 = zext i8 %1287 to i32
  %1289 = or i32 %1281, %1288
  br label %1290

1290:                                             ; preds = %1262, %1232
  %1291 = phi i32 [ %1289, %1262 ], [ %1261, %1232 ]
  %1292 = mul nsw i32 %320, 5
  %1293 = mul nsw i32 %320, 6
  %1294 = sub nsw i32 %1252, %1292
  %1295 = and i32 %1255, %1294
  %1296 = sext i32 %1295 to i64
  %1297 = getelementptr inbounds i8, ptr %1118, i64 %1296
  %1298 = load i8, ptr %1297, align 1, !tbaa !27
  %1299 = lshr i8 %1298, 3
  %1300 = zext i8 %1299 to i32
  br i1 %1203, label %1311, label %1301

1301:                                             ; preds = %1290
  %1302 = shl nuw nsw i32 %1300, 5
  %1303 = sub nsw i32 %1252, %1293
  %1304 = and i32 %1255, %1303
  %1305 = sext i32 %1304 to i64
  %1306 = getelementptr inbounds i8, ptr %1118, i64 %1305
  %1307 = load i8, ptr %1306, align 1, !tbaa !27
  %1308 = lshr i8 %1307, 3
  %1309 = zext i8 %1308 to i32
  %1310 = or i32 %1302, %1309
  br label %1311

1311:                                             ; preds = %1301, %1290
  %1312 = phi i32 [ %1310, %1301 ], [ %1300, %1290 ]
  %1313 = mul i32 %1291, 30005491
  %1314 = mul i32 %1312, 50004239
  %1315 = mul i32 %321, 70004807
  %1316 = add i32 %1315, 690009417
  %1317 = add i32 %1316, %1313
  %1318 = add i32 %1317, %1314
  %1319 = lshr i32 %1318, 9
  %1320 = lshr i32 %1291, 3
  %1321 = lshr i32 %1312, 4
  %1322 = lshr i32 %321, 5
  %1323 = xor i32 %1320, %1321
  %1324 = xor i32 %1323, %1319
  %1325 = xor i32 %1324, %1322
  %1326 = xor i32 %1325, %1318
  %1327 = xor i32 %1326, 67108862
  %1328 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1329 = add nsw i32 %1328, 1
  store i32 %1329, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1330 = mul i32 %1327, 987654323
  %1331 = add i32 %1330, %1328
  %1332 = tail call i32 @llvm.fshl.i32(i32 %1331, i32 %1331, i32 16)
  %1333 = mul i32 %1332, 123456791
  %1334 = add i32 %1333, %1328
  %1335 = sext i32 %1328 to i64
  %1336 = getelementptr inbounds i32, ptr %1141, i64 %1335
  store i32 %1334, ptr %1336, align 4, !tbaa !18
  %1337 = load i32, ptr @pos, align 4, !tbaa !18
  %1338 = sub nsw i32 %1337, %320
  %1339 = load i32, ptr @buf, align 8, !tbaa !23
  %1340 = add nsw i32 %1339, -1
  %1341 = and i32 %1340, %1338
  %1342 = sext i32 %1341 to i64
  %1343 = getelementptr inbounds i8, ptr %1118, i64 %1342
  %1344 = load i8, ptr %1343, align 1, !tbaa !27
  %1345 = lshr i8 %1344, 4
  %1346 = zext i8 %1345 to i32
  br i1 %1203, label %1374, label %1347

1347:                                             ; preds = %1311
  %1348 = sub nsw i32 %1337, %1190
  %1349 = and i32 %1340, %1348
  %1350 = sext i32 %1349 to i64
  %1351 = getelementptr inbounds i8, ptr %1118, i64 %1350
  %1352 = load i8, ptr %1351, align 1, !tbaa !27
  %1353 = and i8 %1352, -16
  %1354 = shl nuw nsw i32 %1346, 8
  %1355 = zext i8 %1353 to i32
  %1356 = or i32 %1354, %1355
  %1357 = sub nsw i32 %1337, %1191
  %1358 = and i32 %1340, %1357
  %1359 = sext i32 %1358 to i64
  %1360 = getelementptr inbounds i8, ptr %1118, i64 %1359
  %1361 = load i8, ptr %1360, align 1, !tbaa !27
  %1362 = lshr i8 %1361, 4
  %1363 = zext i8 %1362 to i32
  %1364 = or i32 %1356, %1363
  %1365 = shl nuw nsw i32 %1364, 4
  %1366 = sub nsw i32 %1337, %1192
  %1367 = and i32 %1340, %1366
  %1368 = sext i32 %1367 to i64
  %1369 = getelementptr inbounds i8, ptr %1118, i64 %1368
  %1370 = load i8, ptr %1369, align 1, !tbaa !27
  %1371 = lshr i8 %1370, 4
  %1372 = zext i8 %1371 to i32
  %1373 = or i32 %1365, %1372
  br label %1374

1374:                                             ; preds = %1347, %1311
  %1375 = phi i32 [ %1373, %1347 ], [ %1346, %1311 ]
  %1376 = mul nsw i32 %320, 7
  %1377 = shl nsw i32 %320, 3
  %1378 = sub nsw i32 %1337, %1292
  %1379 = and i32 %1340, %1378
  %1380 = sext i32 %1379 to i64
  %1381 = getelementptr inbounds i8, ptr %1118, i64 %1380
  %1382 = load i8, ptr %1381, align 1, !tbaa !27
  %1383 = lshr i8 %1382, 5
  %1384 = zext i8 %1383 to i32
  br i1 %1203, label %1413, label %1385

1385:                                             ; preds = %1374
  %1386 = sub nsw i32 %1337, %1293
  %1387 = and i32 %1340, %1386
  %1388 = sext i32 %1387 to i64
  %1389 = getelementptr inbounds i8, ptr %1118, i64 %1388
  %1390 = load i8, ptr %1389, align 1, !tbaa !27
  %1391 = shl nuw nsw i32 %1384, 6
  %1392 = lshr i8 %1390, 2
  %1393 = and i8 %1392, 56
  %1394 = zext i8 %1393 to i32
  %1395 = or i32 %1391, %1394
  %1396 = sub nsw i32 %1337, %1376
  %1397 = and i32 %1340, %1396
  %1398 = sext i32 %1397 to i64
  %1399 = getelementptr inbounds i8, ptr %1118, i64 %1398
  %1400 = load i8, ptr %1399, align 1, !tbaa !27
  %1401 = lshr i8 %1400, 5
  %1402 = zext i8 %1401 to i32
  %1403 = or i32 %1395, %1402
  %1404 = shl nuw nsw i32 %1403, 3
  %1405 = sub nsw i32 %1337, %1377
  %1406 = and i32 %1340, %1405
  %1407 = sext i32 %1406 to i64
  %1408 = getelementptr inbounds i8, ptr %1118, i64 %1407
  %1409 = load i8, ptr %1408, align 1, !tbaa !27
  %1410 = lshr i8 %1409, 5
  %1411 = zext i8 %1410 to i32
  %1412 = or i32 %1404, %1411
  br label %1413

1413:                                             ; preds = %1385, %1374
  %1414 = phi i32 [ %1412, %1385 ], [ %1384, %1374 ]
  %1415 = mul nsw i32 %320, 9
  %1416 = mul nsw i32 %320, 10
  %1417 = mul nsw i32 %320, 11
  %1418 = mul nsw i32 %320, 12
  %1419 = sub nsw i32 %1337, %1415
  %1420 = and i32 %1340, %1419
  %1421 = sext i32 %1420 to i64
  %1422 = getelementptr inbounds i8, ptr %1118, i64 %1421
  %1423 = load i8, ptr %1422, align 1, !tbaa !27
  %1424 = lshr i8 %1423, 6
  %1425 = zext i8 %1424 to i32
  br i1 %1203, label %1454, label %1426

1426:                                             ; preds = %1413
  %1427 = sub nsw i32 %1337, %1416
  %1428 = and i32 %1340, %1427
  %1429 = sext i32 %1428 to i64
  %1430 = getelementptr inbounds i8, ptr %1118, i64 %1429
  %1431 = load i8, ptr %1430, align 1, !tbaa !27
  %1432 = shl nuw nsw i32 %1425, 4
  %1433 = lshr i8 %1431, 4
  %1434 = and i8 %1433, 12
  %1435 = zext i8 %1434 to i32
  %1436 = or i32 %1432, %1435
  %1437 = sub nsw i32 %1337, %1417
  %1438 = and i32 %1340, %1437
  %1439 = sext i32 %1438 to i64
  %1440 = getelementptr inbounds i8, ptr %1118, i64 %1439
  %1441 = load i8, ptr %1440, align 1, !tbaa !27
  %1442 = lshr i8 %1441, 6
  %1443 = zext i8 %1442 to i32
  %1444 = or i32 %1436, %1443
  %1445 = shl nuw nsw i32 %1444, 2
  %1446 = sub nsw i32 %1337, %1418
  %1447 = and i32 %1340, %1446
  %1448 = sext i32 %1447 to i64
  %1449 = getelementptr inbounds i8, ptr %1118, i64 %1448
  %1450 = load i8, ptr %1449, align 1, !tbaa !27
  %1451 = lshr i8 %1450, 6
  %1452 = zext i8 %1451 to i32
  %1453 = or i32 %1445, %1452
  br label %1454

1454:                                             ; preds = %1426, %1413
  %1455 = phi i32 [ %1453, %1426 ], [ %1425, %1413 ]
  %1456 = mul i32 %1375, 30005491
  %1457 = mul i32 %1414, 50004239
  %1458 = mul i32 %1455, 70004807
  %1459 = add i32 %1170, 1000014895
  %1460 = add i32 %1459, %1456
  %1461 = add i32 %1460, %1457
  %1462 = add i32 %1461, %1458
  %1463 = lshr i32 %1462, 9
  %1464 = lshr i32 %1375, 3
  %1465 = lshr i32 %1414, 4
  %1466 = lshr i32 %1455, 5
  %1467 = xor i32 %1464, %1465
  %1468 = xor i32 %1467, %1466
  %1469 = xor i32 %1468, %1463
  %1470 = xor i32 %1469, %1177
  %1471 = xor i32 %1470, %1462
  %1472 = xor i32 %1471, 1
  %1473 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1474 = add nsw i32 %1473, 1
  store i32 %1474, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1475 = mul i32 %1472, 987654323
  %1476 = add i32 %1475, %1473
  %1477 = tail call i32 @llvm.fshl.i32(i32 %1476, i32 %1476, i32 16)
  %1478 = mul i32 %1477, 123456791
  %1479 = add i32 %1478, %1473
  %1480 = sext i32 %1473 to i64
  %1481 = getelementptr inbounds i32, ptr %1141, i64 %1480
  store i32 %1479, ptr %1481, align 4, !tbaa !18
  %1482 = load i32, ptr @pos, align 4, !tbaa !18
  %1483 = sub nsw i32 %1482, %320
  %1484 = load i32, ptr @buf, align 8, !tbaa !23
  %1485 = add nsw i32 %1484, -1
  %1486 = and i32 %1485, %1483
  %1487 = sext i32 %1486 to i64
  %1488 = getelementptr inbounds i8, ptr %1118, i64 %1487
  %1489 = load i8, ptr %1488, align 1, !tbaa !27
  %1490 = lshr i8 %1489, 6
  %1491 = zext i8 %1490 to i32
  br i1 %1203, label %1520, label %1492

1492:                                             ; preds = %1454
  %1493 = sub nsw i32 %1482, %1190
  %1494 = and i32 %1485, %1493
  %1495 = sext i32 %1494 to i64
  %1496 = getelementptr inbounds i8, ptr %1118, i64 %1495
  %1497 = load i8, ptr %1496, align 1, !tbaa !27
  %1498 = shl nuw nsw i32 %1491, 4
  %1499 = lshr i8 %1497, 4
  %1500 = and i8 %1499, 12
  %1501 = zext i8 %1500 to i32
  %1502 = or i32 %1498, %1501
  %1503 = sub nsw i32 %1482, %1191
  %1504 = and i32 %1485, %1503
  %1505 = sext i32 %1504 to i64
  %1506 = getelementptr inbounds i8, ptr %1118, i64 %1505
  %1507 = load i8, ptr %1506, align 1, !tbaa !27
  %1508 = lshr i8 %1507, 6
  %1509 = zext i8 %1508 to i32
  %1510 = or i32 %1502, %1509
  %1511 = shl nuw nsw i32 %1510, 2
  %1512 = sub nsw i32 %1482, %1192
  %1513 = and i32 %1485, %1512
  %1514 = sext i32 %1513 to i64
  %1515 = getelementptr inbounds i8, ptr %1118, i64 %1514
  %1516 = load i8, ptr %1515, align 1, !tbaa !27
  %1517 = lshr i8 %1516, 6
  %1518 = zext i8 %1517 to i32
  %1519 = or i32 %1511, %1518
  br label %1520

1520:                                             ; preds = %1492, %1454
  %1521 = phi i32 [ %1519, %1492 ], [ %1491, %1454 ]
  %1522 = shl nuw nsw i32 %1521, 8
  %1523 = sub nsw i32 %1482, %1292
  %1524 = and i32 %1485, %1523
  %1525 = sext i32 %1524 to i64
  %1526 = getelementptr inbounds i8, ptr %1118, i64 %1525
  %1527 = load i8, ptr %1526, align 1, !tbaa !27
  %1528 = lshr i8 %1527, 6
  %1529 = zext i8 %1528 to i32
  br i1 %1203, label %1558, label %1530

1530:                                             ; preds = %1520
  %1531 = sub nsw i32 %1482, %1293
  %1532 = and i32 %1485, %1531
  %1533 = sext i32 %1532 to i64
  %1534 = getelementptr inbounds i8, ptr %1118, i64 %1533
  %1535 = load i8, ptr %1534, align 1, !tbaa !27
  %1536 = shl nuw nsw i32 %1529, 4
  %1537 = lshr i8 %1535, 4
  %1538 = and i8 %1537, 12
  %1539 = zext i8 %1538 to i32
  %1540 = or i32 %1536, %1539
  %1541 = sub nsw i32 %1482, %1376
  %1542 = and i32 %1485, %1541
  %1543 = sext i32 %1542 to i64
  %1544 = getelementptr inbounds i8, ptr %1118, i64 %1543
  %1545 = load i8, ptr %1544, align 1, !tbaa !27
  %1546 = lshr i8 %1545, 6
  %1547 = zext i8 %1546 to i32
  %1548 = or i32 %1540, %1547
  %1549 = shl nuw nsw i32 %1548, 2
  %1550 = sub nsw i32 %1482, %1377
  %1551 = and i32 %1485, %1550
  %1552 = sext i32 %1551 to i64
  %1553 = getelementptr inbounds i8, ptr %1118, i64 %1552
  %1554 = load i8, ptr %1553, align 1, !tbaa !27
  %1555 = lshr i8 %1554, 6
  %1556 = zext i8 %1555 to i32
  %1557 = or i32 %1549, %1556
  br label %1558

1558:                                             ; preds = %1530, %1520
  %1559 = phi i32 [ %1557, %1530 ], [ %1529, %1520 ]
  %1560 = or i32 %1559, %1522
  %1561 = sub nsw i32 %1482, %1415
  %1562 = and i32 %1485, %1561
  %1563 = sext i32 %1562 to i64
  %1564 = getelementptr inbounds i8, ptr %1118, i64 %1563
  %1565 = load i8, ptr %1564, align 1, !tbaa !27
  %1566 = lshr i8 %1565, 6
  %1567 = zext i8 %1566 to i32
  br i1 %1203, label %1596, label %1568

1568:                                             ; preds = %1558
  %1569 = sub nsw i32 %1482, %1416
  %1570 = and i32 %1485, %1569
  %1571 = sext i32 %1570 to i64
  %1572 = getelementptr inbounds i8, ptr %1118, i64 %1571
  %1573 = load i8, ptr %1572, align 1, !tbaa !27
  %1574 = shl nuw nsw i32 %1567, 4
  %1575 = lshr i8 %1573, 4
  %1576 = and i8 %1575, 12
  %1577 = zext i8 %1576 to i32
  %1578 = or i32 %1574, %1577
  %1579 = sub nsw i32 %1482, %1417
  %1580 = and i32 %1485, %1579
  %1581 = sext i32 %1580 to i64
  %1582 = getelementptr inbounds i8, ptr %1118, i64 %1581
  %1583 = load i8, ptr %1582, align 1, !tbaa !27
  %1584 = lshr i8 %1583, 6
  %1585 = zext i8 %1584 to i32
  %1586 = or i32 %1578, %1585
  %1587 = shl nuw nsw i32 %1586, 2
  %1588 = sub nsw i32 %1482, %1418
  %1589 = and i32 %1485, %1588
  %1590 = sext i32 %1589 to i64
  %1591 = getelementptr inbounds i8, ptr %1118, i64 %1590
  %1592 = load i8, ptr %1591, align 1, !tbaa !27
  %1593 = lshr i8 %1592, 6
  %1594 = zext i8 %1593 to i32
  %1595 = or i32 %1587, %1594
  br label %1596

1596:                                             ; preds = %1568, %1558
  %1597 = phi i32 [ %1595, %1568 ], [ %1567, %1558 ]
  %1598 = shl nuw nsw i32 %1597, 8
  %1599 = mul i32 %320, -13
  %1600 = add i32 %1482, %1599
  %1601 = and i32 %1485, %1600
  %1602 = sext i32 %1601 to i64
  %1603 = getelementptr inbounds i8, ptr %1118, i64 %1602
  %1604 = load i8, ptr %1603, align 1, !tbaa !27
  %1605 = lshr i8 %1604, 6
  %1606 = zext i8 %1605 to i32
  br i1 %1203, label %1638, label %1607

1607:                                             ; preds = %1596
  %1608 = shl nsw i32 %320, 4
  %1609 = mul i32 %320, -15
  %1610 = mul i32 %320, -14
  %1611 = add i32 %1482, %1610
  %1612 = and i32 %1485, %1611
  %1613 = sext i32 %1612 to i64
  %1614 = getelementptr inbounds i8, ptr %1118, i64 %1613
  %1615 = load i8, ptr %1614, align 1, !tbaa !27
  %1616 = shl nuw nsw i32 %1606, 4
  %1617 = lshr i8 %1615, 4
  %1618 = and i8 %1617, 12
  %1619 = zext i8 %1618 to i32
  %1620 = or i32 %1616, %1619
  %1621 = add i32 %1482, %1609
  %1622 = and i32 %1485, %1621
  %1623 = sext i32 %1622 to i64
  %1624 = getelementptr inbounds i8, ptr %1118, i64 %1623
  %1625 = load i8, ptr %1624, align 1, !tbaa !27
  %1626 = lshr i8 %1625, 6
  %1627 = zext i8 %1626 to i32
  %1628 = or i32 %1620, %1627
  %1629 = shl nuw nsw i32 %1628, 2
  %1630 = sub nsw i32 %1482, %1608
  %1631 = and i32 %1485, %1630
  %1632 = sext i32 %1631 to i64
  %1633 = getelementptr inbounds i8, ptr %1118, i64 %1632
  %1634 = load i8, ptr %1633, align 1, !tbaa !27
  %1635 = lshr i8 %1634, 6
  %1636 = zext i8 %1635 to i32
  %1637 = or i32 %1629, %1636
  br label %1638

1638:                                             ; preds = %1607, %1596
  %1639 = phi i32 [ %1637, %1607 ], [ %1606, %1596 ]
  %1640 = or i32 %1639, %1598
  %1641 = mul i32 %320, -17
  %1642 = add i32 %1482, %1641
  %1643 = and i32 %1485, %1642
  %1644 = sext i32 %1643 to i64
  %1645 = getelementptr inbounds i8, ptr %1118, i64 %1644
  %1646 = load i8, ptr %1645, align 1, !tbaa !27
  %1647 = lshr i8 %1646, 6
  %1648 = zext i8 %1647 to i32
  br i1 %1203, label %1680, label %1649

1649:                                             ; preds = %1638
  %1650 = mul i32 %320, -20
  %1651 = mul i32 %320, -19
  %1652 = mul i32 %320, -18
  %1653 = add i32 %1482, %1652
  %1654 = and i32 %1485, %1653
  %1655 = sext i32 %1654 to i64
  %1656 = getelementptr inbounds i8, ptr %1118, i64 %1655
  %1657 = load i8, ptr %1656, align 1, !tbaa !27
  %1658 = shl nuw nsw i32 %1648, 4
  %1659 = lshr i8 %1657, 4
  %1660 = and i8 %1659, 12
  %1661 = zext i8 %1660 to i32
  %1662 = or i32 %1658, %1661
  %1663 = add i32 %1482, %1651
  %1664 = and i32 %1485, %1663
  %1665 = sext i32 %1664 to i64
  %1666 = getelementptr inbounds i8, ptr %1118, i64 %1665
  %1667 = load i8, ptr %1666, align 1, !tbaa !27
  %1668 = lshr i8 %1667, 6
  %1669 = zext i8 %1668 to i32
  %1670 = or i32 %1662, %1669
  %1671 = shl nuw nsw i32 %1670, 2
  %1672 = add i32 %1482, %1650
  %1673 = and i32 %1485, %1672
  %1674 = sext i32 %1673 to i64
  %1675 = getelementptr inbounds i8, ptr %1118, i64 %1674
  %1676 = load i8, ptr %1675, align 1, !tbaa !27
  %1677 = lshr i8 %1676, 6
  %1678 = zext i8 %1677 to i32
  %1679 = or i32 %1671, %1678
  br label %1680

1680:                                             ; preds = %1649, %1638
  %1681 = phi i32 [ %1679, %1649 ], [ %1648, %1638 ]
  %1682 = shl nuw nsw i32 %1681, 8
  %1683 = mul i32 %320, -21
  %1684 = add i32 %1482, %1683
  %1685 = and i32 %1485, %1684
  %1686 = sext i32 %1685 to i64
  %1687 = getelementptr inbounds i8, ptr %1118, i64 %1686
  %1688 = load i8, ptr %1687, align 1, !tbaa !27
  %1689 = lshr i8 %1688, 6
  %1690 = zext i8 %1689 to i32
  br i1 %1203, label %1722, label %1691

1691:                                             ; preds = %1680
  %1692 = mul i32 %320, -24
  %1693 = mul i32 %320, -23
  %1694 = mul i32 %320, -22
  %1695 = add i32 %1482, %1694
  %1696 = and i32 %1485, %1695
  %1697 = sext i32 %1696 to i64
  %1698 = getelementptr inbounds i8, ptr %1118, i64 %1697
  %1699 = load i8, ptr %1698, align 1, !tbaa !27
  %1700 = shl nuw nsw i32 %1690, 4
  %1701 = lshr i8 %1699, 4
  %1702 = and i8 %1701, 12
  %1703 = zext i8 %1702 to i32
  %1704 = or i32 %1700, %1703
  %1705 = add i32 %1482, %1693
  %1706 = and i32 %1485, %1705
  %1707 = sext i32 %1706 to i64
  %1708 = getelementptr inbounds i8, ptr %1118, i64 %1707
  %1709 = load i8, ptr %1708, align 1, !tbaa !27
  %1710 = lshr i8 %1709, 6
  %1711 = zext i8 %1710 to i32
  %1712 = or i32 %1704, %1711
  %1713 = shl nuw nsw i32 %1712, 2
  %1714 = add i32 %1482, %1692
  %1715 = and i32 %1485, %1714
  %1716 = sext i32 %1715 to i64
  %1717 = getelementptr inbounds i8, ptr %1118, i64 %1716
  %1718 = load i8, ptr %1717, align 1, !tbaa !27
  %1719 = lshr i8 %1718, 6
  %1720 = zext i8 %1719 to i32
  %1721 = or i32 %1713, %1720
  br label %1722

1722:                                             ; preds = %1691, %1680
  %1723 = phi i32 [ %1721, %1691 ], [ %1690, %1680 ]
  %1724 = or i32 %1723, %1682
  %1725 = mul i32 %1560, 30005491
  %1726 = mul i32 %1640, 50004239
  %1727 = mul i32 %1724, 70004807
  %1728 = add i32 %1170, 1200017874
  %1729 = add i32 %1728, %1725
  %1730 = add i32 %1729, %1726
  %1731 = add i32 %1730, %1727
  %1732 = lshr i32 %1731, 9
  %1733 = lshr i32 %1560, 3
  %1734 = lshr i32 %1640, 4
  %1735 = lshr i32 %1724, 5
  %1736 = xor i32 %1733, %1734
  %1737 = xor i32 %1736, %1735
  %1738 = xor i32 %1737, %1732
  %1739 = xor i32 %1738, %1177
  %1740 = xor i32 %1739, %1731
  %1741 = xor i32 %1740, 1
  %1742 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1743 = add nsw i32 %1742, 1
  store i32 %1743, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1744 = mul i32 %1741, 987654323
  %1745 = add i32 %1744, %1742
  %1746 = tail call i32 @llvm.fshl.i32(i32 %1745, i32 %1745, i32 16)
  %1747 = mul i32 %1746, 123456791
  %1748 = add i32 %1747, %1742
  %1749 = sext i32 %1742 to i64
  %1750 = getelementptr inbounds i32, ptr %1141, i64 %1749
  store i32 %1748, ptr %1750, align 4, !tbaa !18
  %1751 = sext i32 %322 to i64
  %1752 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 %1751
  %1753 = load i32, ptr %1752, align 4, !tbaa !18
  %1754 = ashr i32 %1753, 8
  %1755 = mul i32 %1754, 30005491
  %1756 = add i32 %1124, 1220013547
  %1757 = add i32 %1756, %1755
  %1758 = lshr i32 %1757, 9
  %1759 = lshr i32 %1754, 3
  %1760 = xor i32 %1759, %1758
  %1761 = xor i32 %1760, %1129
  %1762 = xor i32 %1761, %1757
  %1763 = xor i32 %1762, 67108865
  %1764 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1765 = add nsw i32 %1764, 1
  store i32 %1765, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1766 = mul i32 %1763, 987654323
  %1767 = add i32 %1766, %1764
  %1768 = tail call i32 @llvm.fshl.i32(i32 %1767, i32 %1767, i32 16)
  %1769 = mul i32 %1768, 123456791
  %1770 = add i32 %1769, %1764
  %1771 = sext i32 %1764 to i64
  %1772 = getelementptr inbounds i32, ptr %1141, i64 %1771
  store i32 %1770, ptr %1772, align 4, !tbaa !18
  %1773 = add nsw i32 %320, 1
  %1774 = load i32, ptr @pos, align 4, !tbaa !18
  %1775 = sub i32 %1774, %1773
  %1776 = load i32, ptr @buf, align 8, !tbaa !23
  %1777 = add nsw i32 %1776, -1
  %1778 = and i32 %1777, %1775
  %1779 = sext i32 %1778 to i64
  %1780 = getelementptr inbounds i8, ptr %1118, i64 %1779
  %1781 = load i8, ptr %1780, align 1, !tbaa !27
  %1782 = zext i8 %1781 to i32
  %1783 = add i32 %1775, 1
  %1784 = and i32 %1777, %1783
  %1785 = sext i32 %1784 to i64
  %1786 = getelementptr inbounds i8, ptr %1118, i64 %1785
  %1787 = load i8, ptr %1786, align 1, !tbaa !27
  %1788 = zext i8 %1787 to i32
  %1789 = shl nuw i32 %1788, 24
  %1790 = shl nuw nsw i32 %1782, 16
  %1791 = or i32 %1789, %1790
  %1792 = ashr exact i32 %1791, 16
  %1793 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1, i64 %1751
  %1794 = load i32, ptr %1793, align 4, !tbaa !18
  %1795 = sub i32 %1753, %1794
  %1796 = add i32 %1795, %1792
  %1797 = ashr i32 %1796, 8
  %1798 = mul i32 %1797, 30005491
  %1799 = add i32 %1124, 1420016526
  %1800 = add i32 %1799, %1798
  %1801 = lshr i32 %1800, 9
  %1802 = lshr i32 %1797, 3
  %1803 = xor i32 %1802, %1801
  %1804 = xor i32 %1803, %1129
  %1805 = xor i32 %1804, %1800
  %1806 = xor i32 %1805, 67108866
  %1807 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1808 = add nsw i32 %1807, 1
  store i32 %1808, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1809 = mul i32 %1806, 987654323
  %1810 = add i32 %1809, %1807
  %1811 = tail call i32 @llvm.fshl.i32(i32 %1810, i32 %1810, i32 16)
  %1812 = mul i32 %1811, 123456791
  %1813 = add i32 %1812, %1807
  %1814 = sext i32 %1807 to i64
  %1815 = getelementptr inbounds i32, ptr %1141, i64 %1814
  store i32 %1813, ptr %1815, align 4, !tbaa !18
  %1816 = load i32, ptr @pos, align 4, !tbaa !18
  %1817 = sub i32 %1816, %1773
  %1818 = load i32, ptr @buf, align 8, !tbaa !23
  %1819 = add nsw i32 %1818, -1
  %1820 = and i32 %1819, %1817
  %1821 = sext i32 %1820 to i64
  %1822 = getelementptr inbounds i8, ptr %1118, i64 %1821
  %1823 = load i8, ptr %1822, align 1, !tbaa !27
  %1824 = zext i8 %1823 to i32
  %1825 = add i32 %1817, 1
  %1826 = and i32 %1819, %1825
  %1827 = sext i32 %1826 to i64
  %1828 = getelementptr inbounds i8, ptr %1118, i64 %1827
  %1829 = load i8, ptr %1828, align 1, !tbaa !27
  %1830 = zext i8 %1829 to i32
  %1831 = shl nuw i32 %1830, 24
  %1832 = shl nuw nsw i32 %1824, 16
  %1833 = or i32 %1831, %1832
  %1834 = ashr exact i32 %1833, 16
  %1835 = or i32 %1190, 1
  %1836 = sub i32 %1816, %1835
  %1837 = and i32 %1819, %1836
  %1838 = sext i32 %1837 to i64
  %1839 = getelementptr inbounds i8, ptr %1118, i64 %1838
  %1840 = load i8, ptr %1839, align 1, !tbaa !27
  %1841 = zext i8 %1840 to i32
  %1842 = add i32 %1836, 1
  %1843 = and i32 %1819, %1842
  %1844 = sext i32 %1843 to i64
  %1845 = getelementptr inbounds i8, ptr %1118, i64 %1844
  %1846 = load i8, ptr %1845, align 1, !tbaa !27
  %1847 = zext i8 %1846 to i32
  %1848 = shl nuw i32 %1847, 24
  %1849 = shl nuw nsw i32 %1841, 16
  %1850 = or i32 %1848, %1849
  %1851 = ashr exact i32 %1850, 16
  %1852 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 2, i64 %1751
  %1853 = load i32, ptr %1852, align 4, !tbaa !18
  %1854 = add i32 %1853, %1794
  %1855 = sub i32 %1834, %1854
  %1856 = add i32 %1855, %1851
  %1857 = ashr i32 %1856, 9
  %1858 = mul i32 %1857, 50004239
  %1859 = add i32 %1315, 1690024312
  %1860 = add i32 %1859, %1755
  %1861 = add i32 %1860, %1858
  %1862 = lshr i32 %1861, 9
  %1863 = lshr i32 %1857, 4
  %1864 = xor i32 %1863, %1862
  %1865 = xor i32 %1864, %1759
  %1866 = xor i32 %1865, %1322
  %1867 = xor i32 %1866, %1861
  %1868 = xor i32 %1867, 67108861
  %1869 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1870 = add nsw i32 %1869, 1
  store i32 %1870, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1871 = mul i32 %1868, 987654323
  %1872 = add i32 %1871, %1869
  %1873 = tail call i32 @llvm.fshl.i32(i32 %1872, i32 %1872, i32 16)
  %1874 = mul i32 %1873, 123456791
  %1875 = add i32 %1874, %1869
  %1876 = sext i32 %1869 to i64
  %1877 = getelementptr inbounds i32, ptr %1141, i64 %1876
  store i32 %1875, ptr %1877, align 4, !tbaa !18
  %1878 = load i32, ptr @pos, align 4, !tbaa !18
  %1879 = sub i32 %1878, %1773
  %1880 = load i32, ptr @buf, align 8, !tbaa !23
  %1881 = add nsw i32 %1880, -1
  %1882 = and i32 %1881, %1879
  %1883 = sext i32 %1882 to i64
  %1884 = getelementptr inbounds i8, ptr %1118, i64 %1883
  %1885 = load i8, ptr %1884, align 1, !tbaa !27
  %1886 = zext i8 %1885 to i32
  %1887 = add i32 %1879, 1
  %1888 = and i32 %1881, %1887
  %1889 = sext i32 %1888 to i64
  %1890 = getelementptr inbounds i8, ptr %1118, i64 %1889
  %1891 = load i8, ptr %1890, align 1, !tbaa !27
  %1892 = zext i8 %1891 to i32
  %1893 = shl nuw i32 %1892, 24
  %1894 = shl nuw nsw i32 %1886, 16
  %1895 = or i32 %1893, %1894
  %1896 = ashr exact i32 %1895, 15
  %1897 = sub i32 %1878, %1835
  %1898 = and i32 %1881, %1897
  %1899 = sext i32 %1898 to i64
  %1900 = getelementptr inbounds i8, ptr %1118, i64 %1899
  %1901 = load i8, ptr %1900, align 1, !tbaa !27
  %1902 = zext i8 %1901 to i32
  %1903 = add i32 %1897, 1
  %1904 = and i32 %1881, %1903
  %1905 = sext i32 %1904 to i64
  %1906 = getelementptr inbounds i8, ptr %1118, i64 %1905
  %1907 = load i8, ptr %1906, align 1, !tbaa !27
  %1908 = zext i8 %1907 to i32
  %1909 = shl nuw i32 %1908, 24
  %1910 = shl nuw nsw i32 %1902, 16
  %1911 = or i32 %1909, %1910
  %1912 = ashr exact i32 %1911, 16
  %1913 = shl i32 %1794, 1
  %1914 = sub i32 %1753, %1913
  %1915 = add i32 %1914, %1853
  %1916 = add i32 %1915, %1896
  %1917 = sub i32 %1916, %1912
  %1918 = ashr i32 %1917, 8
  %1919 = mul i32 %1918, 30005491
  %1920 = add i32 %1124, 1820022484
  %1921 = add i32 %1920, %1919
  %1922 = lshr i32 %1921, 9
  %1923 = lshr i32 %1918, 3
  %1924 = xor i32 %1923, %1922
  %1925 = xor i32 %1924, %1129
  %1926 = xor i32 %1925, %1921
  %1927 = xor i32 %1926, 67108866
  %1928 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1929 = add nsw i32 %1928, 1
  store i32 %1929, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %1930 = mul i32 %1927, 987654323
  %1931 = add i32 %1930, %1928
  %1932 = tail call i32 @llvm.fshl.i32(i32 %1931, i32 %1931, i32 16)
  %1933 = mul i32 %1932, 123456791
  %1934 = add i32 %1933, %1928
  %1935 = sext i32 %1928 to i64
  %1936 = getelementptr inbounds i32, ptr %1141, i64 %1935
  store i32 %1934, ptr %1936, align 4, !tbaa !18
  %1937 = load i32, ptr @pos, align 4, !tbaa !18
  %1938 = add i32 %1937, -5
  %1939 = load i32, ptr @buf, align 8, !tbaa !23
  %1940 = add nsw i32 %1939, -1
  %1941 = and i32 %1940, %1938
  %1942 = sext i32 %1941 to i64
  %1943 = getelementptr inbounds i8, ptr %1118, i64 %1942
  %1944 = load i8, ptr %1943, align 1, !tbaa !27
  %1945 = zext i8 %1944 to i32
  %1946 = add i32 %1937, -4
  %1947 = and i32 %1940, %1946
  %1948 = sext i32 %1947 to i64
  %1949 = getelementptr inbounds i8, ptr %1118, i64 %1948
  %1950 = load i8, ptr %1949, align 1, !tbaa !27
  %1951 = zext i8 %1950 to i32
  %1952 = shl nuw i32 %1951, 24
  %1953 = shl nuw nsw i32 %1945, 16
  %1954 = or i32 %1952, %1953
  %1955 = ashr exact i32 %1954, 16
  %1956 = add i32 %1937, -3
  %1957 = and i32 %1940, %1956
  %1958 = sext i32 %1957 to i64
  %1959 = getelementptr inbounds i8, ptr %1118, i64 %1958
  %1960 = load i8, ptr %1959, align 1, !tbaa !27
  %1961 = zext i8 %1960 to i32
  %1962 = add i32 %1937, -2
  %1963 = and i32 %1940, %1962
  %1964 = sext i32 %1963 to i64
  %1965 = getelementptr inbounds i8, ptr %1118, i64 %1964
  %1966 = load i8, ptr %1965, align 1, !tbaa !27
  %1967 = zext i8 %1966 to i32
  %1968 = shl nuw i32 %1967, 24
  %1969 = shl nuw nsw i32 %1961, 16
  %1970 = or i32 %1968, %1969
  %1971 = ashr exact i32 %1970, 16
  %1972 = add i32 %1937, -7
  %1973 = and i32 %1940, %1972
  %1974 = sext i32 %1973 to i64
  %1975 = getelementptr inbounds i8, ptr %1118, i64 %1974
  %1976 = load i8, ptr %1975, align 1, !tbaa !27
  %1977 = zext i8 %1976 to i32
  %1978 = add i32 %1937, -6
  %1979 = and i32 %1940, %1978
  %1980 = sext i32 %1979 to i64
  %1981 = getelementptr inbounds i8, ptr %1118, i64 %1980
  %1982 = load i8, ptr %1981, align 1, !tbaa !27
  %1983 = zext i8 %1982 to i32
  %1984 = shl nuw i32 %1983, 24
  %1985 = shl nuw nsw i32 %1977, 16
  %1986 = or i32 %1984, %1985
  %1987 = ashr exact i32 %1986, 16
  %1988 = add nsw i32 %1937, -1
  %1989 = and i32 %1940, %1988
  %1990 = sext i32 %1989 to i64
  %1991 = getelementptr inbounds i8, ptr %1118, i64 %1990
  %1992 = load i8, ptr %1991, align 1, !tbaa !27
  %1993 = zext i8 %1992 to i32
  %1994 = add i32 %1955, %1753
  %1995 = add i32 %1994, %1971
  %1996 = add nsw i32 %1987, %1993
  %1997 = sub i32 %1995, %1996
  %1998 = ashr i32 %1997, 1
  %1999 = load i32, ptr @_ZZ8wavModelR5MixerE4scm1, align 8, !tbaa !74
  %2000 = and i32 %1999, -256
  %2001 = add nsw i32 %2000, -256
  %2002 = and i32 %2001, %1998
  store i32 %2002, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !102
  %2003 = sub i32 %1937, %1773
  %2004 = and i32 %1940, %2003
  %2005 = sext i32 %2004 to i64
  %2006 = getelementptr inbounds i8, ptr %1118, i64 %2005
  %2007 = load i8, ptr %2006, align 1, !tbaa !27
  %2008 = zext i8 %2007 to i32
  %2009 = add i32 %2003, 1
  %2010 = and i32 %1940, %2009
  %2011 = sext i32 %2010 to i64
  %2012 = getelementptr inbounds i8, ptr %1118, i64 %2011
  %2013 = load i8, ptr %2012, align 1, !tbaa !27
  %2014 = zext i8 %2013 to i32
  %2015 = shl nuw i32 %2014, 24
  %2016 = shl nuw nsw i32 %2008, 16
  %2017 = or i32 %2015, %2016
  %2018 = ashr exact i32 %2017, 16
  %2019 = load i8, ptr %1991, align 1, !tbaa !27
  %2020 = zext i8 %2019 to i32
  %2021 = sub i32 %1753, %2020
  %2022 = add i32 %2021, %2018
  %2023 = ashr i32 %2022, 1
  %2024 = load i32, ptr @_ZZ8wavModelR5MixerE4scm2, align 8, !tbaa !74
  %2025 = and i32 %2024, -256
  %2026 = add nsw i32 %2025, -256
  %2027 = and i32 %2026, %2023
  store i32 %2027, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !102
  %2028 = load i8, ptr %2006, align 1, !tbaa !27
  %2029 = zext i8 %2028 to i32
  %2030 = load i8, ptr %2012, align 1, !tbaa !27
  %2031 = zext i8 %2030 to i32
  %2032 = shl nuw i32 %2031, 24
  %2033 = shl nuw nsw i32 %2029, 16
  %2034 = or i32 %2032, %2033
  %2035 = ashr exact i32 %2034, 15
  %2036 = sub i32 %1937, %1835
  %2037 = and i32 %1940, %2036
  %2038 = sext i32 %2037 to i64
  %2039 = getelementptr inbounds i8, ptr %1118, i64 %2038
  %2040 = load i8, ptr %2039, align 1, !tbaa !27
  %2041 = zext i8 %2040 to i32
  %2042 = add i32 %2036, 1
  %2043 = and i32 %1940, %2042
  %2044 = sext i32 %2043 to i64
  %2045 = getelementptr inbounds i8, ptr %1118, i64 %2044
  %2046 = load i8, ptr %2045, align 1, !tbaa !27
  %2047 = zext i8 %2046 to i32
  %2048 = shl nuw i32 %2047, 24
  %2049 = shl nuw nsw i32 %2041, 16
  %2050 = or i32 %2048, %2049
  %2051 = ashr exact i32 %2050, 16
  %2052 = load i8, ptr %1991, align 1, !tbaa !27
  %2053 = zext i8 %2052 to i32
  %2054 = add i32 %1753, %2035
  %2055 = add nsw i32 %2051, %2053
  %2056 = sub i32 %2054, %2055
  %2057 = load i32, ptr @_ZZ8wavModelR5MixerE4scm3, align 8, !tbaa !74
  %2058 = and i32 %2057, -256
  %2059 = add nsw i32 %2058, -256
  %2060 = and i32 %2059, %2056
  store i32 %2060, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !102
  %2061 = load i8, ptr %2006, align 1, !tbaa !27
  %2062 = zext i8 %2061 to i32
  %2063 = load i8, ptr %2012, align 1, !tbaa !27
  %2064 = zext i8 %2063 to i32
  %2065 = shl nuw i32 %2064, 24
  %2066 = shl nuw nsw i32 %2062, 16
  %2067 = or i32 %2065, %2066
  %2068 = ashr exact i32 %2067, 16
  %2069 = load i8, ptr %2039, align 1, !tbaa !27
  %2070 = zext i8 %2069 to i32
  %2071 = load i8, ptr %2045, align 1, !tbaa !27
  %2072 = zext i8 %2071 to i32
  %2073 = shl nuw i32 %2072, 24
  %2074 = shl nuw nsw i32 %2070, 16
  %2075 = or i32 %2073, %2074
  %2076 = ashr exact i32 %2075, 16
  %2077 = xor i32 %1191, -1
  %2078 = add i32 %1937, %2077
  %2079 = and i32 %1940, %2078
  %2080 = sext i32 %2079 to i64
  %2081 = getelementptr inbounds i8, ptr %1118, i64 %2080
  %2082 = load i8, ptr %2081, align 1, !tbaa !27
  %2083 = zext i8 %2082 to i32
  %2084 = sub i32 %1937, %1191
  %2085 = and i32 %1940, %2084
  %2086 = sext i32 %2085 to i64
  %2087 = getelementptr inbounds i8, ptr %1118, i64 %2086
  %2088 = load i8, ptr %2087, align 1, !tbaa !27
  %2089 = zext i8 %2088 to i32
  %2090 = shl nuw i32 %2089, 24
  %2091 = shl nuw nsw i32 %2083, 16
  %2092 = or i32 %2090, %2091
  %2093 = ashr exact i32 %2092, 16
  %2094 = load i8, ptr %1991, align 1, !tbaa !27
  %2095 = zext i8 %2094 to i32
  %2096 = sub nsw i32 %2068, %2076
  %2097 = mul nsw i32 %2096, 3
  %2098 = sub nsw i32 %2093, %2095
  %2099 = add nsw i32 %2098, %2097
  %2100 = shl nsw i32 %2099, 1
  %2101 = load i32, ptr @_ZZ8wavModelR5MixerE4scm4, align 8, !tbaa !74
  %2102 = and i32 %2101, -256
  %2103 = add nsw i32 %2102, -256
  %2104 = and i32 %2103, %2100
  store i32 %2104, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 1), align 8, !tbaa !102
  %2105 = sub i32 %1937, %320
  %2106 = add i32 %2105, 1
  %2107 = and i32 %1940, %2106
  %2108 = sext i32 %2107 to i64
  %2109 = getelementptr inbounds i8, ptr %1118, i64 %2108
  %2110 = load i8, ptr %2109, align 1, !tbaa !27
  %2111 = zext i8 %2110 to i32
  %2112 = add i32 %2105, 2
  %2113 = and i32 %1940, %2112
  %2114 = sext i32 %2113 to i64
  %2115 = getelementptr inbounds i8, ptr %1118, i64 %2114
  %2116 = load i8, ptr %2115, align 1, !tbaa !27
  %2117 = zext i8 %2116 to i32
  %2118 = shl nuw i32 %2117, 24
  %2119 = shl nuw nsw i32 %2111, 16
  %2120 = or i32 %2118, %2119
  %2121 = ashr exact i32 %2120, 16
  %2122 = load i8, ptr %2006, align 1, !tbaa !27
  %2123 = zext i8 %2122 to i32
  %2124 = load i8, ptr %2012, align 1, !tbaa !27
  %2125 = zext i8 %2124 to i32
  %2126 = shl nuw i32 %2125, 24
  %2127 = shl nuw nsw i32 %2123, 16
  %2128 = or i32 %2126, %2127
  %2129 = ashr exact i32 %2128, 16
  %2130 = load i8, ptr %1991, align 1, !tbaa !27
  %2131 = zext i8 %2130 to i32
  %2132 = shl nsw i32 %1753, 1
  %2133 = add i32 %2121, %2132
  %2134 = sub i32 %2133, %2131
  %2135 = add i32 %2134, %2129
  %2136 = ashr i32 %2135, 2
  %2137 = load i32, ptr @_ZZ8wavModelR5MixerE4scm5, align 8, !tbaa !74
  %2138 = and i32 %2137, -256
  %2139 = add nsw i32 %2138, -256
  %2140 = and i32 %2139, %2136
  store i32 %2140, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 1), align 8, !tbaa !102
  %2141 = load i8, ptr %2006, align 1, !tbaa !27
  %2142 = zext i8 %2141 to i32
  %2143 = load i8, ptr %2012, align 1, !tbaa !27
  %2144 = zext i8 %2143 to i32
  %2145 = shl nuw i32 %2144, 24
  %2146 = shl nuw nsw i32 %2142, 16
  %2147 = or i32 %2145, %2146
  %2148 = ashr exact i32 %2147, 14
  %2149 = load i8, ptr %2039, align 1, !tbaa !27
  %2150 = zext i8 %2149 to i32
  %2151 = load i8, ptr %2045, align 1, !tbaa !27
  %2152 = zext i8 %2151 to i32
  %2153 = shl nuw i32 %2152, 24
  %2154 = shl nuw nsw i32 %2150, 16
  %2155 = or i32 %2153, %2154
  %2156 = ashr exact i32 %2155, 16
  %2157 = mul i32 %2156, 2147483642
  %2158 = load i8, ptr %2081, align 1, !tbaa !27
  %2159 = zext i8 %2158 to i32
  %2160 = load i8, ptr %2087, align 1, !tbaa !27
  %2161 = zext i8 %2160 to i32
  %2162 = shl nuw i32 %2161, 24
  %2163 = shl nuw nsw i32 %2159, 16
  %2164 = or i32 %2162, %2163
  %2165 = ashr exact i32 %2164, 14
  %2166 = xor i32 %1192, -1
  %2167 = add i32 %1937, %2166
  %2168 = and i32 %1940, %2167
  %2169 = sext i32 %2168 to i64
  %2170 = getelementptr inbounds i8, ptr %1118, i64 %2169
  %2171 = load i8, ptr %2170, align 1, !tbaa !27
  %2172 = zext i8 %2171 to i32
  %2173 = sub i32 %1937, %1192
  %2174 = and i32 %1940, %2173
  %2175 = sext i32 %2174 to i64
  %2176 = getelementptr inbounds i8, ptr %1118, i64 %2175
  %2177 = load i8, ptr %2176, align 1, !tbaa !27
  %2178 = zext i8 %2177 to i32
  %2179 = shl nuw i32 %2178, 24
  %2180 = shl nuw nsw i32 %2172, 16
  %2181 = or i32 %2179, %2180
  %2182 = ashr exact i32 %2181, 16
  %2183 = load i8, ptr %1991, align 1, !tbaa !27
  %2184 = zext i8 %2183 to i32
  %2185 = add i32 %2157, %2148
  %2186 = add i32 %2185, %2165
  %2187 = add nsw i32 %2182, %2184
  %2188 = sub i32 %2186, %2187
  %2189 = shl i32 %2188, 1
  %2190 = load i32, ptr @_ZZ8wavModelR5MixerE4scm7, align 8, !tbaa !74
  %2191 = and i32 %2190, -256
  %2192 = add nsw i32 %2191, -256
  %2193 = and i32 %2192, %2189
  store i32 %2193, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 1), align 8, !tbaa !102
  %2194 = load i8, ptr %2006, align 1, !tbaa !27
  %2195 = zext i8 %2194 to i32
  %2196 = load i8, ptr %2012, align 1, !tbaa !27
  %2197 = zext i8 %2196 to i32
  %2198 = shl nuw i32 %2197, 24
  %2199 = shl nuw nsw i32 %2195, 16
  %2200 = or i32 %2198, %2199
  %2201 = ashr exact i32 %2200, 16
  %2202 = load i8, ptr %2039, align 1, !tbaa !27
  %2203 = zext i8 %2202 to i32
  %2204 = load i8, ptr %2045, align 1, !tbaa !27
  %2205 = zext i8 %2204 to i32
  %2206 = shl nuw i32 %2205, 24
  %2207 = shl nuw nsw i32 %2203, 16
  %2208 = or i32 %2206, %2207
  %2209 = ashr exact i32 %2208, 16
  %2210 = load i8, ptr %2081, align 1, !tbaa !27
  %2211 = zext i8 %2210 to i32
  %2212 = load i8, ptr %2087, align 1, !tbaa !27
  %2213 = zext i8 %2212 to i32
  %2214 = shl nuw i32 %2213, 24
  %2215 = shl nuw nsw i32 %2211, 16
  %2216 = or i32 %2214, %2215
  %2217 = ashr exact i32 %2216, 16
  %2218 = load i8, ptr %2170, align 1, !tbaa !27
  %2219 = zext i8 %2218 to i32
  %2220 = load i8, ptr %2176, align 1, !tbaa !27
  %2221 = zext i8 %2220 to i32
  %2222 = shl nuw i32 %2221, 24
  %2223 = shl nuw nsw i32 %2219, 16
  %2224 = or i32 %2222, %2223
  %2225 = ashr exact i32 %2224, 16
  %2226 = xor i32 %1292, -1
  %2227 = add i32 %1937, %2226
  %2228 = and i32 %1940, %2227
  %2229 = sext i32 %2228 to i64
  %2230 = getelementptr inbounds i8, ptr %1118, i64 %2229
  %2231 = load i8, ptr %2230, align 1, !tbaa !27
  %2232 = zext i8 %2231 to i32
  %2233 = sub i32 %1937, %1292
  %2234 = and i32 %1940, %2233
  %2235 = sext i32 %2234 to i64
  %2236 = getelementptr inbounds i8, ptr %1118, i64 %2235
  %2237 = load i8, ptr %2236, align 1, !tbaa !27
  %2238 = zext i8 %2237 to i32
  %2239 = shl nuw i32 %2238, 24
  %2240 = shl nuw nsw i32 %2232, 16
  %2241 = or i32 %2239, %2240
  %2242 = ashr exact i32 %2241, 16
  %2243 = load i8, ptr %1991, align 1, !tbaa !27
  %2244 = zext i8 %2243 to i32
  %2245 = sub nsw i32 %2217, %2209
  %2246 = mul nsw i32 %2245, 10
  %2247 = sub nsw i32 %2201, %2225
  %2248 = mul nsw i32 %2247, 5
  %2249 = sub i32 %1753, %2244
  %2250 = add i32 %2249, %2246
  %2251 = add i32 %2250, %2242
  %2252 = add i32 %2251, %2248
  %2253 = ashr i32 %2252, 1
  %2254 = load i32, ptr @_ZZ8wavModelR5MixerE4scm8, align 8, !tbaa !74
  %2255 = and i32 %2254, -256
  %2256 = add nsw i32 %2255, -256
  %2257 = and i32 %2256, %2253
  store i32 %2257, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 1), align 8, !tbaa !102
  br label %2258

2258:                                             ; preds = %1722, %713, %311
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm1, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm2, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm3, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm4, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm5, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm6, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm7, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  tail call void @_ZN25SmallStationaryContextMap3mixER5Mixeri(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm8, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef 7) #32
  %2259 = tail call noundef i32 @_ZN10ContextMap3mixER5Mixer(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8wavModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0) #32
  %2260 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !18
  %2261 = shl i32 %2260, 8
  %2262 = load i32, ptr @_ZZ8wavModelR5MixerE4bits, align 4, !tbaa !18
  %2263 = or i32 %2261, %2262
  br label %2264

2264:                                             ; preds = %2258, %310
  %2265 = phi i32 [ 0, %310 ], [ %2263, %2258 ]
  call void @llvm.lifetime.end.p0(i64 19208, ptr nonnull %3) #33
  call void @llvm.lifetime.end.p0(i64 38416, ptr nonnull %2) #33
  ret i32 %2265

2266:                                             ; preds = %149, %147, %145, %143, %141, %139, %137, %135, %133
  %2267 = phi ptr [ @_ZGVZ8wavModelR5MixerE2cm, %149 ], [ @_ZGVZ8wavModelR5MixerE4scm8, %147 ], [ @_ZGVZ8wavModelR5MixerE4scm7, %145 ], [ @_ZGVZ8wavModelR5MixerE4scm6, %143 ], [ @_ZGVZ8wavModelR5MixerE4scm5, %141 ], [ @_ZGVZ8wavModelR5MixerE4scm4, %139 ], [ @_ZGVZ8wavModelR5MixerE4scm3, %137 ], [ @_ZGVZ8wavModelR5MixerE4scm2, %135 ], [ @_ZGVZ8wavModelR5MixerE4scm1, %133 ]
  %2268 = phi { ptr, i32 } [ %150, %149 ], [ %148, %147 ], [ %146, %145 ], [ %144, %143 ], [ %142, %141 ], [ %140, %139 ], [ %138, %137 ], [ %136, %135 ], [ %134, %133 ]
  tail call void @__cxa_guard_abort(ptr nonnull %2267) #33
  call void @llvm.lifetime.end.p0(i64 19208, ptr nonnull %3) #33
  call void @llvm.lifetime.end.p0(i64 38416, ptr nonnull %2) #33
  resume { ptr, i32 } %2268
}

; Function Attrs: inlinehint mustprogress optsize uwtable
define internal noundef i32 @_Z1Xii(i32 noundef %0, i32 noundef %1) #16 comdat {
  %3 = load i32, ptr @_ZL5wmode, align 4, !tbaa !18
  switch i32 %3, label %107 [
    i32 18, label %4
    i32 17, label %54
    i32 10, label %77
  ]

4:                                                ; preds = %2
  %5 = load i32, ptr @_ZL1S, align 4, !tbaa !18
  %6 = icmp slt i32 %5, %0
  %7 = add i32 %1, %0
  br i1 %6, label %30, label %8

8:                                                ; preds = %4
  %9 = shl i32 %7, 2
  %10 = load i32, ptr @pos, align 4, !tbaa !18
  %11 = sub i32 %10, %9
  %12 = load i32, ptr @buf, align 8, !tbaa !23
  %13 = add nsw i32 %12, -1
  %14 = and i32 %13, %11
  %15 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds i8, ptr %15, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !27
  %19 = zext i8 %18 to i32
  %20 = add i32 %11, 1
  %21 = and i32 %13, %20
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, ptr %15, i64 %22
  %24 = load i8, ptr %23, align 1, !tbaa !27
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = shl nuw nsw i32 %19, 16
  %28 = or i32 %26, %27
  %29 = ashr exact i32 %28, 16
  br label %119

30:                                               ; preds = %4
  %31 = sub i32 %5, %7
  %32 = shl i32 %31, 2
  %33 = or i32 %32, 2
  %34 = load i32, ptr @pos, align 4, !tbaa !18
  %35 = add i32 %33, %34
  %36 = load i32, ptr @buf, align 8, !tbaa !23
  %37 = add nsw i32 %36, -1
  %38 = and i32 %37, %35
  %39 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %40 = sext i32 %38 to i64
  %41 = getelementptr inbounds i8, ptr %39, i64 %40
  %42 = load i8, ptr %41, align 1, !tbaa !27
  %43 = zext i8 %42 to i32
  %44 = add i32 %35, 1
  %45 = and i32 %37, %44
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, ptr %39, i64 %46
  %48 = load i8, ptr %47, align 1, !tbaa !27
  %49 = zext i8 %48 to i32
  %50 = shl nuw i32 %49, 24
  %51 = shl nuw nsw i32 %43, 16
  %52 = or i32 %50, %51
  %53 = ashr exact i32 %52, 16
  br label %119

54:                                               ; preds = %2
  %55 = add nsw i32 %1, %0
  %56 = shl i32 %55, 1
  %57 = load i32, ptr @pos, align 4, !tbaa !18
  %58 = sub i32 %57, %56
  %59 = load i32, ptr @buf, align 8, !tbaa !23
  %60 = add nsw i32 %59, -1
  %61 = and i32 %60, %58
  %62 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %63 = sext i32 %61 to i64
  %64 = getelementptr inbounds i8, ptr %62, i64 %63
  %65 = load i8, ptr %64, align 1, !tbaa !27
  %66 = zext i8 %65 to i32
  %67 = add i32 %58, 1
  %68 = and i32 %60, %67
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, ptr %62, i64 %69
  %71 = load i8, ptr %70, align 1, !tbaa !27
  %72 = zext i8 %71 to i32
  %73 = shl nuw i32 %72, 24
  %74 = shl nuw nsw i32 %66, 16
  %75 = or i32 %73, %74
  %76 = ashr exact i32 %75, 16
  br label %119

77:                                               ; preds = %2
  %78 = load i32, ptr @_ZL1S, align 4, !tbaa !18
  %79 = icmp slt i32 %78, %0
  %80 = add i32 %1, %0
  br i1 %79, label %93, label %81

81:                                               ; preds = %77
  %82 = shl i32 %80, 1
  %83 = load i32, ptr @pos, align 4, !tbaa !18
  %84 = sub nsw i32 %83, %82
  %85 = load i32, ptr @buf, align 8, !tbaa !23
  %86 = add nsw i32 %85, -1
  %87 = and i32 %86, %84
  %88 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %89 = sext i32 %87 to i64
  %90 = getelementptr inbounds i8, ptr %88, i64 %89
  %91 = load i8, ptr %90, align 1, !tbaa !27
  %92 = zext i8 %91 to i32
  br label %119

93:                                               ; preds = %77
  %94 = sub i32 %78, %80
  %95 = shl i32 %94, 1
  %96 = or i32 %95, 1
  %97 = load i32, ptr @pos, align 4, !tbaa !18
  %98 = add i32 %96, %97
  %99 = load i32, ptr @buf, align 8, !tbaa !23
  %100 = add nsw i32 %99, -1
  %101 = and i32 %100, %98
  %102 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %103 = sext i32 %101 to i64
  %104 = getelementptr inbounds i8, ptr %102, i64 %103
  %105 = load i8, ptr %104, align 1, !tbaa !27
  %106 = zext i8 %105 to i32
  br label %119

107:                                              ; preds = %2
  %108 = load i32, ptr @pos, align 4, !tbaa !18
  %109 = add i32 %1, %0
  %110 = sub i32 %108, %109
  %111 = load i32, ptr @buf, align 8, !tbaa !23
  %112 = add nsw i32 %111, -1
  %113 = and i32 %112, %110
  %114 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %115 = sext i32 %113 to i64
  %116 = getelementptr inbounds i8, ptr %114, i64 %115
  %117 = load i8, ptr %116, align 1, !tbaa !27
  %118 = zext i8 %117 to i32
  br label %119

119:                                              ; preds = %107, %93, %81, %54, %30, %8
  %120 = phi i32 [ %29, %8 ], [ %53, %30 ], [ %76, %54 ], [ %92, %81 ], [ %106, %93 ], [ %118, %107 ]
  ret i32 %120
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #14

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(write)
declare double @sqrt(double noundef) local_unnamed_addr #21

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.floor.f64(double) #14

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal noundef i32 @_Z6execxtii(i32 noundef %0, i32 noundef %1) #11 {
  %3 = load i32, ptr @pos, align 4, !tbaa !18
  %4 = sub i32 %3, %0
  %5 = add i32 %4, -2
  %6 = load i32, ptr @buf, align 8, !tbaa !23
  %7 = add nsw i32 %6, -1
  %8 = and i32 %7, %5
  %9 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %10 = sext i32 %8 to i64
  %11 = getelementptr inbounds i8, ptr %9, i64 %10
  %12 = load i8, ptr %11, align 1, !tbaa !27
  %13 = add i32 %4, -3
  %14 = and i32 %7, %13
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, ptr %9, i64 %15
  %17 = load i8, ptr %16, align 1, !tbaa !27
  %18 = xor i32 %0, -1
  %19 = add i32 %3, %18
  %20 = and i32 %7, %19
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, ptr %9, i64 %21
  %23 = load i8, ptr %22, align 1, !tbaa !27
  %24 = icmp eq i32 %0, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %2
  %26 = and i32 %7, %4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, ptr %9, i64 %27
  %29 = load i8, ptr %28, align 1, !tbaa !27
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 12
  %32 = and i32 %31, 815104
  br label %33

33:                                               ; preds = %25, %2
  %34 = phi i32 [ %32, %25 ], [ 0, %2 ]
  %35 = zext i8 %23 to i32
  %36 = icmp eq i8 %12, 102
  %37 = select i1 %36, i32 2, i32 0
  %38 = icmp eq i8 %12, 15
  %39 = zext i1 %38 to i32
  %40 = or i32 %37, %39
  %41 = icmp eq i8 %12, 103
  %42 = select i1 %41, i32 3, i32 0
  %43 = add nuw nsw i32 %40, %42
  %44 = icmp eq i8 %17, 15
  %45 = select i1 %44, i32 4, i32 0
  %46 = add nuw nsw i32 %43, %45
  %47 = icmp eq i8 %17, 102
  %48 = select i1 %47, i32 8, i32 0
  %49 = add nuw nsw i32 %46, %48
  %50 = icmp eq i8 %17, 103
  %51 = select i1 %50, i32 12, i32 0
  %52 = add nuw nsw i32 %49, %51
  %53 = shl nuw nsw i32 %35, 4
  %54 = shl i32 %1, 20
  %55 = or i32 %53, %54
  %56 = or i32 %55, %52
  %57 = or i32 %56, %34
  ret i32 %57
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_Z8exeModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) %0) #7 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ8exeModelR5MixerE2cm acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !100

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8exeModelR5MixerE2cm) #33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !18
  %9 = shl i32 65536, %8
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8exeModelR5MixerE2cm, i32 noundef %9, i32 noundef 12) #32
          to label %10 unwind label %18

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ8exeModelR5MixerE2cm, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8exeModelR5MixerE2cm) #33
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load i32, ptr @bpos, align 4, !tbaa !18
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %45

15:                                               ; preds = %12
  %16 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %17 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !15
  br label %20

18:                                               ; preds = %7
  %19 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ8exeModelR5MixerE2cm) #33
  resume { ptr, i32 } %19

20:                                               ; preds = %20, %15
  %21 = phi i32 [ 0, %15 ], [ %43, %20 ]
  %22 = load i32, ptr @pos, align 4, !tbaa !18
  %23 = add nsw i32 %22, -1
  %24 = load i32, ptr @buf, align 8, !tbaa !23
  %25 = add nsw i32 %24, -1
  %26 = and i32 %25, %23
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, ptr %16, i64 %27
  %29 = load i8, ptr %28, align 1, !tbaa !27
  %30 = zext i8 %29 to i32
  %31 = icmp ugt i32 %21, 4
  %32 = select i1 %31, i32 %30, i32 0
  %33 = tail call noundef i32 @_Z6execxtii(i32 noundef %21, i32 noundef %32) #32
  %34 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %35 = add nsw i32 %34, 1
  store i32 %35, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %36 = mul i32 %33, 987654323
  %37 = add i32 %34, %36
  %38 = tail call i32 @llvm.fshl.i32(i32 %37, i32 %37, i32 16)
  %39 = mul i32 %38, 123456791
  %40 = add i32 %39, %34
  %41 = sext i32 %34 to i64
  %42 = getelementptr inbounds i32, ptr %17, i64 %41
  store i32 %40, ptr %42, align 4, !tbaa !18
  %43 = add nuw nsw i32 %21, 1
  %44 = icmp eq i32 %43, 12
  br i1 %44, label %45, label %20, !llvm.loop !179

45:                                               ; preds = %20, %12
  %46 = tail call noundef i32 @_ZN10ContextMap3mixER5Mixer(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8exeModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0) #32
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_Z13indirectModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) %0) #7 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ13indirectModelR5MixerE2cm acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !100

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13indirectModelR5MixerE2cm) #33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !18
  %9 = shl i32 65536, %8
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13indirectModelR5MixerE2cm, i32 noundef %9, i32 noundef 6) #32
          to label %10 unwind label %104

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ13indirectModelR5MixerE2cm, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13indirectModelR5MixerE2cm) #33
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load i32, ptr @bpos, align 4, !tbaa !18
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %106

15:                                               ; preds = %12
  %16 = load i32, ptr @c4, align 4, !tbaa !18
  %17 = and i32 %16, 65535
  %18 = and i32 %16, 255
  %19 = lshr i32 %17, 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [256 x i32], ptr @_ZZ13indirectModelR5MixerE2t1, i64 0, i64 %20
  %22 = load i32, ptr %21, align 4, !tbaa !18
  %23 = shl i32 %22, 8
  %24 = or i32 %23, %18
  store i32 %24, ptr %21, align 4, !tbaa !18
  %25 = lshr i32 %16, 8
  %26 = and i32 %25, 65535
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [65536 x i16], ptr @_ZZ13indirectModelR5MixerE2t2, i64 0, i64 %27
  %29 = load i16, ptr %28, align 2, !tbaa !29
  %30 = zext i16 %29 to i32
  %31 = shl nuw nsw i32 %30, 8
  %32 = or i32 %31, %18
  %33 = trunc i32 %32 to i16
  store i16 %33, ptr %28, align 2, !tbaa !29
  %34 = zext i32 %18 to i64
  %35 = getelementptr inbounds [256 x i32], ptr @_ZZ13indirectModelR5MixerE2t1, i64 0, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !18
  %37 = shl i32 %36, 8
  %38 = or i32 %37, %18
  %39 = and i32 %38, 65535
  %40 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %41 = add nsw i32 %40, 1
  store i32 %41, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %42 = mul i32 %39, 987654323
  %43 = add i32 %42, %40
  %44 = tail call i32 @llvm.fshl.i32(i32 %43, i32 %43, i32 16)
  %45 = mul i32 %44, 123456791
  %46 = add i32 %45, %40
  %47 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !15
  %48 = sext i32 %40 to i64
  %49 = getelementptr inbounds i32, ptr %47, i64 %48
  store i32 %46, ptr %49, align 4, !tbaa !18
  %50 = and i32 %38, 16777215
  %51 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %52 = add nsw i32 %51, 1
  store i32 %52, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %53 = mul i32 %50, 987654323
  %54 = add i32 %51, %53
  %55 = tail call i32 @llvm.fshl.i32(i32 %54, i32 %54, i32 16)
  %56 = mul i32 %55, 123456791
  %57 = add i32 %56, %51
  %58 = sext i32 %51 to i64
  %59 = getelementptr inbounds i32, ptr %47, i64 %58
  store i32 %57, ptr %59, align 4, !tbaa !18
  %60 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %61 = add nsw i32 %60, 1
  store i32 %61, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %62 = mul i32 %38, 987654323
  %63 = add i32 %60, %62
  %64 = tail call i32 @llvm.fshl.i32(i32 %63, i32 %63, i32 16)
  %65 = mul i32 %64, 123456791
  %66 = add i32 %65, %60
  %67 = sext i32 %60 to i64
  %68 = getelementptr inbounds i32, ptr %47, i64 %67
  store i32 %66, ptr %68, align 4, !tbaa !18
  %69 = and i32 %37, 65280
  %70 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %71 = add nsw i32 %70, 1
  store i32 %71, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %72 = mul i32 %69, 987654323
  %73 = add i32 %70, %72
  %74 = tail call i32 @llvm.fshl.i32(i32 %73, i32 %73, i32 16)
  %75 = mul i32 %74, 123456791
  %76 = add i32 %75, %70
  %77 = sext i32 %70 to i64
  %78 = getelementptr inbounds i32, ptr %47, i64 %77
  store i32 %76, ptr %78, align 4, !tbaa !18
  %79 = zext i32 %17 to i64
  %80 = getelementptr inbounds [65536 x i16], ptr @_ZZ13indirectModelR5MixerE2t2, i64 0, i64 %79
  %81 = load i16, ptr %80, align 2, !tbaa !29
  %82 = zext i16 %81 to i32
  %83 = shl nuw i32 %82, 16
  %84 = or i32 %83, %17
  %85 = and i32 %84, 16777215
  %86 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %87 = add nsw i32 %86, 1
  store i32 %87, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %88 = mul i32 %85, 987654323
  %89 = add i32 %88, %86
  %90 = tail call i32 @llvm.fshl.i32(i32 %89, i32 %89, i32 16)
  %91 = mul i32 %90, 123456791
  %92 = add i32 %91, %86
  %93 = sext i32 %86 to i64
  %94 = getelementptr inbounds i32, ptr %47, i64 %93
  store i32 %92, ptr %94, align 4, !tbaa !18
  %95 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %96 = add nsw i32 %95, 1
  store i32 %96, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !85
  %97 = mul i32 %84, 987654323
  %98 = add i32 %95, %97
  %99 = tail call i32 @llvm.fshl.i32(i32 %98, i32 %98, i32 16)
  %100 = mul i32 %99, 123456791
  %101 = add i32 %100, %95
  %102 = sext i32 %95 to i64
  %103 = getelementptr inbounds i32, ptr %47, i64 %102
  store i32 %101, ptr %103, align 4, !tbaa !18
  br label %106

104:                                              ; preds = %7
  %105 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ13indirectModelR5MixerE2cm) #33
  resume { ptr, i32 } %105

106:                                              ; preds = %15, %12
  %107 = tail call noundef i32 @_ZN10ContextMap3mixER5Mixer(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13indirectModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0) #32
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_Z8dmcModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) #0 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ8dmcModelR5MixerE1t acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !100

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8dmcModelR5MixerE1t) #33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !18
  %9 = shl i32 131072, %8
  invoke void @_ZN5ArrayI7DMCNodeLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ8dmcModelR5MixerE1t, i32 noundef %9) #32
          to label %10 unwind label %121

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayI7DMCNodeLi0EED2Ev, ptr nonnull @_ZZ8dmcModelR5MixerE1t, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8dmcModelR5MixerE1t) #33
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load atomic i8, ptr @_ZGVZ8dmcModelR5MixerE2sm acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %21, !prof !100

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8dmcModelR5MixerE2sm) #33
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ8dmcModelR5MixerE2sm, i32 noundef 256) #32
          to label %19 unwind label %123

19:                                               ; preds = %18
  %20 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN8StateMapD2Ev, ptr nonnull @_ZZ8dmcModelR5MixerE2sm, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8dmcModelR5MixerE2sm) #33
  br label %21

21:                                               ; preds = %19, %15, %12
  %22 = load i32, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !18
  %23 = icmp sgt i32 %22, 0
  %24 = load i32, ptr @_ZZ8dmcModelR5MixerE1t, align 8
  %25 = icmp slt i32 %22, %24
  %26 = select i1 %23, i1 %25, i1 false
  br i1 %26, label %27, label %127

27:                                               ; preds = %21
  %28 = load i32, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !18
  %29 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !180
  %30 = sext i32 %28 to i64
  %31 = getelementptr inbounds %struct.DMCNode, ptr %29, i64 %30
  %32 = load i32, ptr @y, align 4, !tbaa !18
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [2 x i32], ptr %31, i64 0, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !18
  %36 = icmp eq i32 %32, 0
  %37 = getelementptr inbounds %struct.DMCNode, ptr %29, i64 %30, i32 2
  %38 = load i24, ptr %37, align 1
  %39 = and i24 %38, 4095
  %40 = lshr i24 %38, 12
  %41 = select i1 %36, i24 %39, i24 %40
  %42 = zext i24 %41 to i32
  %43 = sext i32 %35 to i64
  %44 = getelementptr inbounds %struct.DMCNode, ptr %29, i64 %43, i32 2
  %45 = load i24, ptr %44, align 1
  %46 = and i24 %45, 4095
  %47 = lshr i24 %45, 12
  %48 = add nuw nsw i24 %46, %47
  %49 = zext i24 %48 to i32
  %50 = load i32, ptr @_ZZ8dmcModelR5MixerE9threshold, align 4, !tbaa !18
  %51 = shl nuw nsw i32 %50, 1
  %52 = icmp ugt i32 %51, %42
  br i1 %52, label %127, label %53

53:                                               ; preds = %27
  %54 = sub nsw i32 %49, %42
  %55 = mul nuw nsw i32 %50, 3
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %127, label %57

57:                                               ; preds = %53
  %58 = shl nuw nsw i32 %42, 12
  %59 = udiv i32 %58, %49
  %60 = zext i24 %46 to i32
  %61 = mul nsw i32 %59, %60
  %62 = zext i32 %22 to i64
  %63 = getelementptr inbounds %struct.DMCNode, ptr %29, i64 %62, i32 2
  %64 = trunc i32 %61 to i24
  %65 = lshr i24 %64, 12
  %66 = load i24, ptr %63, align 1
  %67 = and i24 %66, -4096
  %68 = or i24 %65, %67
  store i24 %68, ptr %63, align 1
  %69 = zext i24 %65 to i32
  %70 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !180
  %71 = getelementptr inbounds %struct.DMCNode, ptr %70, i64 %43, i32 2
  %72 = load i24, ptr %71, align 1
  %73 = zext i24 %72 to i32
  %74 = sub nsw i32 %73, %69
  %75 = trunc i32 %74 to i24
  %76 = and i24 %75, 4095
  %77 = and i24 %72, -4096
  %78 = or i24 %76, %77
  store i24 %78, ptr %71, align 1
  %79 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !180
  %80 = getelementptr inbounds %struct.DMCNode, ptr %79, i64 %43, i32 2
  %81 = load i24, ptr %80, align 1
  %82 = lshr i24 %81, 12
  %83 = zext i24 %82 to i32
  %84 = mul nsw i32 %59, %83
  %85 = getelementptr inbounds %struct.DMCNode, ptr %79, i64 %62, i32 2
  %86 = trunc i32 %84 to i24
  %87 = lshr i32 %84, 12
  %88 = load i24, ptr %85, align 1
  %89 = and i24 %86, -4096
  %90 = and i24 %88, 4095
  %91 = or i24 %89, %90
  store i24 %91, ptr %85, align 1
  %92 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !180
  %93 = getelementptr inbounds %struct.DMCNode, ptr %92, i64 %43, i32 2
  %94 = load i24, ptr %93, align 1
  %95 = lshr i24 %94, 12
  %96 = zext i24 %95 to i32
  %97 = sub nsw i32 %96, %87
  %98 = trunc i32 %97 to i24
  %99 = shl i24 %98, 12
  %100 = and i24 %94, 4095
  %101 = or i24 %99, %100
  store i24 %101, ptr %93, align 1
  %102 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !180
  %103 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %43
  %104 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %62
  %105 = load <2 x i32>, ptr %103, align 4, !tbaa !18
  store <2 x i32> %105, ptr %104, align 4, !tbaa !18
  %106 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %43, i32 1
  %107 = load i8, ptr %106, align 4, !tbaa !182
  %108 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %62, i32 1
  store i8 %107, ptr %108, align 4, !tbaa !182
  %109 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %30
  %110 = load i32, ptr @y, align 4, !tbaa !18
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [2 x i32], ptr %109, i64 0, i64 %111
  store i32 %22, ptr %112, align 4, !tbaa !18
  %113 = add nuw nsw i32 %22, 1
  store i32 %113, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !18
  %114 = load i32, ptr @level, align 4, !tbaa !18
  %115 = shl i32 131072, %114
  %116 = icmp eq i32 %113, %115
  %117 = shl i32 65536, %114
  %118 = mul nsw i32 %117, 3
  %119 = icmp eq i32 %113, %118
  %120 = or i1 %116, %119
  br i1 %120, label %125, label %127

121:                                              ; preds = %7
  %122 = landingpad { ptr, i32 }
          cleanup
  br label %255

123:                                              ; preds = %18
  %124 = landingpad { ptr, i32 }
          cleanup
  br label %255

125:                                              ; preds = %57
  %126 = select i1 %119, i32 768, i32 512
  store i32 %126, ptr @_ZZ8dmcModelR5MixerE9threshold, align 4, !tbaa !18
  br label %127

127:                                              ; preds = %125, %57, %53, %27, %21
  %128 = phi i32 [ %113, %125 ], [ %113, %57 ], [ %22, %27 ], [ %22, %53 ], [ %22, %21 ]
  %129 = load i32, ptr @_ZZ8dmcModelR5MixerE1t, align 8, !tbaa !184
  %130 = icmp eq i32 %128, %129
  %131 = load i32, ptr @bpos, align 4
  %132 = icmp eq i32 %131, 1
  %133 = select i1 %130, i1 %132, i1 false
  br i1 %133, label %134, label %135

134:                                              ; preds = %127
  store i32 0, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !18
  br label %137

135:                                              ; preds = %127
  %136 = icmp eq i32 %128, 0
  br i1 %136, label %137, label %183

137:                                              ; preds = %135, %134
  br label %138

138:                                              ; preds = %148, %137
  %139 = phi i64 [ %149, %148 ], [ 0, %137 ]
  %140 = icmp ult i64 %139, 127
  %141 = shl i64 %139, 8
  %142 = shl nuw nsw i64 %139, 1
  %143 = trunc i64 %141 to i32
  %144 = add i32 %143, -32512
  %145 = trunc i64 %141 to i32
  %146 = add i32 %145, 256
  br label %151

147:                                              ; preds = %148
  store i32 65536, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !18
  store i32 0, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !18
  store i32 256, ptr @_ZZ8dmcModelR5MixerE9threshold, align 4, !tbaa !18
  br label %183

148:                                              ; preds = %169
  %149 = add nuw nsw i64 %139, 1
  %150 = icmp eq i64 %149, 256
  br i1 %150, label %147, label %138, !llvm.loop !185

151:                                              ; preds = %169, %138
  %152 = phi i64 [ 0, %138 ], [ %181, %169 ]
  %153 = shl nuw nsw i64 %152, 8
  br i1 %140, label %154, label %164

154:                                              ; preds = %151
  %155 = add nuw nsw i64 %153, %142
  %156 = add nuw nsw i64 %153, %139
  %157 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !180
  %158 = getelementptr inbounds %struct.DMCNode, ptr %157, i64 %156
  %159 = trunc i64 %155 to i32
  %160 = or i32 %159, 1
  store i32 %160, ptr %158, align 4, !tbaa !18
  %161 = getelementptr inbounds [2 x i32], ptr %158, i64 0, i64 1
  %162 = trunc i64 %155 to i32
  %163 = add i32 %162, 2
  store i32 %163, ptr %161, align 4, !tbaa !18
  br label %169

164:                                              ; preds = %151
  %165 = add nuw nsw i64 %153, %139
  %166 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !180
  %167 = getelementptr inbounds %struct.DMCNode, ptr %166, i64 %165
  store i32 %144, ptr %167, align 4, !tbaa !18
  %168 = getelementptr inbounds [2 x i32], ptr %167, i64 0, i64 1
  store i32 %146, ptr %168, align 4, !tbaa !18
  br label %169

169:                                              ; preds = %164, %154
  %170 = phi i64 [ %165, %164 ], [ %156, %154 ]
  %171 = phi ptr [ %166, %164 ], [ %157, %154 ]
  %172 = getelementptr inbounds %struct.DMCNode, ptr %171, i64 %170, i32 2
  %173 = load i24, ptr %172, align 1
  %174 = and i24 %173, -4096
  %175 = or i24 %174, 128
  store i24 %175, ptr %172, align 1
  %176 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !180
  %177 = getelementptr inbounds %struct.DMCNode, ptr %176, i64 %170, i32 2
  %178 = load i24, ptr %177, align 1
  %179 = and i24 %178, 4095
  %180 = or i24 %179, 524288
  store i24 %180, ptr %177, align 1
  %181 = add nuw nsw i64 %152, 1
  %182 = icmp eq i64 %181, 256
  br i1 %182, label %148, label %151, !llvm.loop !186

183:                                              ; preds = %147, %135
  %184 = load i32, ptr @y, align 4, !tbaa !18
  %185 = icmp eq i32 %184, 0
  %186 = load i32, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !18
  %187 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !180
  %188 = sext i32 %186 to i64
  %189 = getelementptr inbounds %struct.DMCNode, ptr %187, i64 %188, i32 2
  %190 = load i24, ptr %189, align 1
  br i1 %185, label %196, label %191

191:                                              ; preds = %183
  %192 = icmp ult i24 %190, -1212416
  br i1 %192, label %193, label %207

193:                                              ; preds = %191
  %194 = and i24 %190, -4096
  %195 = add nuw i24 %194, 1048576
  br label %202

196:                                              ; preds = %183
  %197 = and i24 %190, 4088
  %198 = icmp ult i24 %197, 3800
  br i1 %198, label %199, label %207

199:                                              ; preds = %196
  %200 = add i24 %190, 256
  %201 = and i24 %200, 4095
  br label %202

202:                                              ; preds = %199, %193
  %203 = phi i24 [ -4096, %199 ], [ 4095, %193 ]
  %204 = phi i24 [ %201, %199 ], [ %195, %193 ]
  %205 = and i24 %190, %203
  %206 = or i24 %204, %205
  store i24 %206, ptr %189, align 1
  br label %207

207:                                              ; preds = %202, %196, %191
  %208 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !180
  %209 = getelementptr inbounds %struct.DMCNode, ptr %208, i64 %188
  %210 = getelementptr inbounds %struct.DMCNode, ptr %208, i64 %188, i32 1
  %211 = load i8, ptr %210, align 4, !tbaa !182
  %212 = zext i8 %211 to i64
  %213 = load i32, ptr @y, align 4, !tbaa !18
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %212, i64 %214
  %216 = load i8, ptr %215, align 1, !tbaa !27
  store i8 %216, ptr %210, align 4, !tbaa !182
  %217 = getelementptr inbounds [2 x i32], ptr %209, i64 0, i64 %214
  %218 = load i32, ptr %217, align 4, !tbaa !18
  store i32 %218, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !18
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds %struct.DMCNode, ptr %208, i64 %219, i32 1
  %221 = load i8, ptr %220, align 4, !tbaa !182
  %222 = zext i8 %221 to i32
  %223 = tail call noundef i32 @_ZN8StateMap1pEii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ8dmcModelR5MixerE2sm, i32 noundef %222, i32 noundef 1023) #32
  %224 = load i32, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !18
  %225 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !180
  %226 = sext i32 %224 to i64
  %227 = getelementptr inbounds %struct.DMCNode, ptr %225, i64 %226, i32 2
  %228 = load i24, ptr %227, align 1
  %229 = lshr i24 %228, 12
  %230 = and i24 %228, 4095
  %231 = and i24 %228, -4096
  %232 = zext i24 %231 to i32
  %233 = add nuw nsw i32 %232, 20480
  %234 = add nuw nsw i24 %229, 10
  %235 = add nuw nsw i24 %234, %230
  %236 = zext i24 %235 to i32
  %237 = udiv i32 %233, %236
  %238 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !39
  %239 = sext i32 %223 to i64
  %240 = getelementptr inbounds i16, ptr %238, i64 %239
  %241 = load i16, ptr %240, align 2, !tbaa !29
  %242 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %243 = load i32, ptr %242, align 8, !tbaa !57
  %244 = add nsw i32 %243, 1
  %245 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %246 = load ptr, ptr %245, align 8, !tbaa !59
  %247 = sext i32 %243 to i64
  %248 = getelementptr inbounds i16, ptr %246, i64 %247
  store i16 %241, ptr %248, align 2, !tbaa !29
  %249 = zext i32 %237 to i64
  %250 = getelementptr inbounds i16, ptr %238, i64 %249
  %251 = load i16, ptr %250, align 2, !tbaa !29
  %252 = add nsw i32 %243, 2
  store i32 %252, ptr %242, align 8, !tbaa !57
  %253 = sext i32 %244 to i64
  %254 = getelementptr inbounds i16, ptr %246, i64 %253
  store i16 %251, ptr %254, align 2, !tbaa !29
  ret void

255:                                              ; preds = %123, %121
  %256 = phi ptr [ @_ZGVZ8dmcModelR5MixerE2sm, %123 ], [ @_ZGVZ8dmcModelR5MixerE1t, %121 ]
  %257 = phi { ptr, i32 } [ %124, %123 ], [ %122, %121 ]
  tail call void @__cxa_guard_abort(ptr nonnull %256) #33
  resume { ptr, i32 } %257
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayI7DMCNodeLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !187
  store i32 %1, ptr %0, align 8, !tbaa !184
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = mul i32 %1, 12
  %9 = load i32, ptr @programChecker, align 8, !tbaa !7
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !7
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #34
  %17 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !188
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.59, ptr %20, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !180
  br label %23

23:                                               ; preds = %21, %5
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN5ArrayI7DMCNodeLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !184
  %3 = mul i32 %2, -12
  %4 = load i32, ptr @programChecker, align 8, !tbaa !7
  %5 = add nsw i32 %4, %3
  store i32 %5, ptr @programChecker, align 8, !tbaa !7
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %9

9:                                                ; preds = %8, %1
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !188
  tail call void @free(ptr noundef %11) #31
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_Z13contextModel2v() #7 personality ptr @__gxx_personality_v0 {
  %1 = load atomic i8, ptr @_ZGVZ13contextModel2vE2cm acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %11, !prof !100

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE2cm) #33
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = load i32, ptr @level, align 4, !tbaa !18
  %8 = shl i32 2097152, %7
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13contextModel2vE2cm, i32 noundef %8, i32 noundef 9) #32
          to label %9 unwind label %71

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE2cm, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE2cm) #33
  br label %11

11:                                               ; preds = %9, %3, %0
  %12 = load atomic i8, ptr @_ZGVZ13contextModel2vE4rcm7 acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %22, !prof !100

14:                                               ; preds = %11
  %15 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE4rcm7) #33
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = load i32, ptr @level, align 4, !tbaa !18
  %19 = shl i32 65536, %18
  invoke void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE4rcm7, i32 noundef %19) #32
          to label %20 unwind label %73

20:                                               ; preds = %17
  %21 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN13RunContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE4rcm7, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE4rcm7) #33
  br label %22

22:                                               ; preds = %20, %14, %11
  %23 = load atomic i8, ptr @_ZGVZ13contextModel2vE4rcm9 acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %33, !prof !100

25:                                               ; preds = %22
  %26 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE4rcm9) #33
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = load i32, ptr @level, align 4, !tbaa !18
  %30 = shl i32 65536, %29
  invoke void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE4rcm9, i32 noundef %30) #32
          to label %31 unwind label %75

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN13RunContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE4rcm9, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE4rcm9) #33
  br label %33

33:                                               ; preds = %31, %25, %22
  %34 = load atomic i8, ptr @_ZGVZ13contextModel2vE5rcm10 acquire, align 8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %44, !prof !100

36:                                               ; preds = %33
  %37 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE5rcm10) #33
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %36
  %40 = load i32, ptr @level, align 4, !tbaa !18
  %41 = shl i32 65536, %40
  invoke void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE5rcm10, i32 noundef %41) #32
          to label %42 unwind label %77

42:                                               ; preds = %39
  %43 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN13RunContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE5rcm10, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE5rcm10) #33
  br label %44

44:                                               ; preds = %42, %36, %33
  %45 = load atomic i8, ptr @_ZGVZ13contextModel2vE1m acquire, align 8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %53, !prof !100

47:                                               ; preds = %44
  %48 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE1m) #33
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  invoke void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m, i32 noundef 800, i32 noundef 3088, i32 noundef 7, i32 noundef 128) #32
          to label %51 unwind label %79

51:                                               ; preds = %50
  %52 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5MixerD2Ev, ptr nonnull @_ZZ13contextModel2vE1m, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE1m) #33
  br label %53

53:                                               ; preds = %51, %47, %44
  %54 = load i32, ptr @bpos, align 4, !tbaa !18
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %122

56:                                               ; preds = %53
  %57 = load i32, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !18
  %58 = add nsw i32 %57, -1
  store i32 %58, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !18
  %59 = icmp eq i32 %57, 0
  br i1 %59, label %60, label %81

60:                                               ; preds = %56
  %61 = load i32, ptr @pos, align 4, !tbaa !18
  %62 = add nsw i32 %61, -1
  %63 = load i32, ptr @buf, align 8, !tbaa !23
  %64 = add nsw i32 %63, -1
  %65 = and i32 %64, %62
  %66 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %67 = sext i32 %65 to i64
  %68 = getelementptr inbounds i8, ptr %66, i64 %67
  %69 = load i8, ptr %68, align 1, !tbaa !27
  %70 = zext i8 %69 to i32
  store i32 %70, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !189
  br label %122

71:                                               ; preds = %6
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %498

73:                                               ; preds = %17
  %74 = landingpad { ptr, i32 }
          cleanup
  br label %498

75:                                               ; preds = %28
  %76 = landingpad { ptr, i32 }
          cleanup
  br label %498

77:                                               ; preds = %39
  %78 = landingpad { ptr, i32 }
          cleanup
  br label %498

79:                                               ; preds = %50
  %80 = landingpad { ptr, i32 }
          cleanup
  br label %498

81:                                               ; preds = %56
  %82 = icmp eq i32 %58, -5
  br i1 %82, label %83, label %122

83:                                               ; preds = %81
  %84 = load i32, ptr @pos, align 4, !tbaa !18
  %85 = add nsw i32 %84, -4
  %86 = load i32, ptr @buf, align 8, !tbaa !23
  %87 = add nsw i32 %86, -1
  %88 = and i32 %87, %85
  %89 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %90 = sext i32 %88 to i64
  %91 = getelementptr inbounds i8, ptr %89, i64 %90
  %92 = load i8, ptr %91, align 1, !tbaa !27
  %93 = zext i8 %92 to i32
  %94 = shl nuw i32 %93, 24
  %95 = add nsw i32 %84, -3
  %96 = and i32 %87, %95
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, ptr %89, i64 %97
  %99 = load i8, ptr %98, align 1, !tbaa !27
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 16
  %102 = or i32 %101, %94
  %103 = add nsw i32 %84, -2
  %104 = and i32 %87, %103
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, ptr %89, i64 %105
  %107 = load i8, ptr %106, align 1, !tbaa !27
  %108 = zext i8 %107 to i32
  %109 = shl nuw nsw i32 %108, 8
  %110 = or i32 %102, %109
  %111 = add nsw i32 %84, -1
  %112 = and i32 %87, %111
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, ptr %89, i64 %113
  %115 = load i8, ptr %114, align 1, !tbaa !27
  %116 = zext i8 %115 to i32
  %117 = or i32 %110, %116
  store i32 %117, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !18
  %118 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !189
  %119 = icmp eq i32 %118, 8
  br i1 %119, label %120, label %122

120:                                              ; preds = %83
  %121 = add nsw i32 %117, 8
  store i32 %121, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !18
  br label %122

122:                                              ; preds = %120, %83, %81, %60, %53
  tail call void @_ZN5Mixer6updateEv(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  %123 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !57
  %124 = add nsw i32 %123, 1
  store i32 %124, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !57
  %125 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %126 = sext i32 %123 to i64
  %127 = getelementptr inbounds i16, ptr %125, i64 %126
  store i16 256, ptr %127, align 2, !tbaa !29
  %128 = tail call noundef i32 @_Z10matchModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  %129 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %130 = and i32 %128, 65535
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds i8, ptr %129, i64 %131
  %133 = load i8, ptr %132, align 1, !tbaa !27
  %134 = zext i8 %133 to i32
  %135 = tail call noundef i32 @_Z8wavModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  %136 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %172

138:                                              ; preds = %122
  %139 = tail call noundef i32 @_Z9jpegModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  %142 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4
  br label %172

143:                                              ; preds = %138
  %144 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %145 = add nsw i32 %144, 1
  %146 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %147 = add nsw i32 %146, 1
  store i32 %147, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %148 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !58
  %149 = sext i32 %146 to i64
  %150 = getelementptr inbounds i32, ptr %148, i64 %149
  store i32 %145, ptr %150, align 4, !tbaa !18
  %151 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %152 = add nsw i32 %151, 8
  store i32 %152, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %153 = add nsw i32 %139, -1
  %154 = add nsw i32 %153, %152
  %155 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %156 = add nsw i32 %155, 1
  store i32 %156, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %157 = sext i32 %155 to i64
  %158 = getelementptr inbounds i32, ptr %148, i64 %157
  store i32 %154, ptr %158, align 4, !tbaa !18
  %159 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %160 = add nsw i32 %159, 257
  store i32 %160, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %161 = load i32, ptr @pos, align 4, !tbaa !18
  %162 = add nsw i32 %161, -1
  %163 = load i32, ptr @buf, align 8, !tbaa !23
  %164 = add nsw i32 %163, -1
  %165 = and i32 %164, %162
  %166 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %167 = sext i32 %165 to i64
  %168 = getelementptr inbounds i8, ptr %166, i64 %167
  %169 = load i8, ptr %168, align 1, !tbaa !27
  %170 = zext i8 %169 to i32
  %171 = add nsw i32 %160, %170
  br label %486

172:                                              ; preds = %141, %122
  %173 = phi i32 [ %142, %141 ], [ %136, %122 ]
  %174 = and i32 %173, -2
  %175 = icmp eq i32 %174, 4
  br i1 %175, label %176, label %229

176:                                              ; preds = %172
  %177 = tail call noundef i32 @_Z8bmpModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  %178 = icmp slt i32 %177, 1
  br i1 %178, label %179, label %181

179:                                              ; preds = %176
  %180 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !189
  br label %229

181:                                              ; preds = %176
  %182 = load i32, ptr @_ZZ13contextModel2vE3col, align 4, !tbaa !18
  %183 = add nsw i32 %182, 1
  %184 = icmp sgt i32 %182, 22
  %185 = select i1 %184, i32 0, i32 %183
  store i32 %185, ptr @_ZZ13contextModel2vE3col, align 4
  %186 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %187 = add nsw i32 %186, 2
  %188 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %189 = add nsw i32 %188, 1
  store i32 %189, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %190 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !58
  %191 = sext i32 %188 to i64
  %192 = getelementptr inbounds i32, ptr %190, i64 %191
  store i32 %187, ptr %192, align 4, !tbaa !18
  %193 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %194 = add nsw i32 %193, 8
  store i32 %194, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %195 = add nsw i32 %194, %185
  %196 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %197 = add nsw i32 %196, 1
  store i32 %197, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %198 = sext i32 %196 to i64
  %199 = getelementptr inbounds i32, ptr %190, i64 %198
  store i32 %195, ptr %199, align 4, !tbaa !18
  %200 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %201 = add nsw i32 %200, 24
  store i32 %201, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %202 = load i32, ptr @pos, align 4, !tbaa !18
  %203 = sub nsw i32 %202, %177
  %204 = load i32, ptr @buf, align 8, !tbaa !23
  %205 = add nsw i32 %204, -1
  %206 = and i32 %205, %203
  %207 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %208 = sext i32 %206 to i64
  %209 = getelementptr inbounds i8, ptr %207, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !27
  %211 = zext i8 %210 to i32
  %212 = add nsw i32 %202, -3
  %213 = and i32 %205, %212
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i8, ptr %207, i64 %214
  %216 = load i8, ptr %215, align 1, !tbaa !27
  %217 = zext i8 %216 to i32
  %218 = add nuw nsw i32 %217, %211
  %219 = lshr i32 %218, 4
  %220 = add nsw i32 %219, %201
  %221 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %222 = add nsw i32 %221, 1
  store i32 %222, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %223 = sext i32 %221 to i64
  %224 = getelementptr inbounds i32, ptr %190, i64 %223
  store i32 %220, ptr %224, align 4, !tbaa !18
  %225 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %226 = add nsw i32 %225, 32
  store i32 %226, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %227 = load i32, ptr @c0, align 4, !tbaa !18
  %228 = add nsw i32 %227, %226
  br label %486

229:                                              ; preds = %179, %172
  %230 = phi i32 [ %180, %179 ], [ %173, %172 ]
  %231 = icmp eq i32 %230, 6
  br i1 %231, label %232, label %237

232:                                              ; preds = %229
  %233 = tail call noundef i32 @_Z8pgmModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32, !range !191
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %496

235:                                              ; preds = %232
  %236 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !189
  br label %237

237:                                              ; preds = %235, %229
  %238 = phi i32 [ %236, %235 ], [ %230, %229 ]
  %239 = icmp eq i32 %238, 3
  br i1 %239, label %240, label %245

240:                                              ; preds = %237
  %241 = tail call noundef i32 @_Z9bmpModel8R5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  %242 = icmp sgt i32 %241, 0
  br i1 %242, label %496, label %243

243:                                              ; preds = %240
  %244 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !189
  br label %245

245:                                              ; preds = %243, %237
  %246 = phi i32 [ %244, %243 ], [ %238, %237 ]
  %247 = icmp eq i32 %246, 7
  br i1 %247, label %248, label %251

248:                                              ; preds = %245
  %249 = tail call noundef i32 @_Z9rgbModel8R5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32, !range !192
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %496

251:                                              ; preds = %248, %245
  %252 = icmp sgt i32 %135, 0
  br i1 %252, label %253, label %283

253:                                              ; preds = %251
  %254 = and i32 %135, 255
  %255 = lshr i32 %135, 8
  %256 = mul nuw nsw i32 %255, %254
  %257 = load i32, ptr @_ZZ13contextModel2vE3col_0, align 4, !tbaa !18
  %258 = add nsw i32 %257, 1
  %259 = icmp slt i32 %258, %256
  %260 = select i1 %259, i32 %258, i32 0
  store i32 %260, ptr @_ZZ13contextModel2vE3col_0, align 4
  %261 = icmp eq i32 %256, %254
  %262 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %263 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !58
  br i1 %261, label %272, label %264

264:                                              ; preds = %253
  %265 = add nsw i32 %262, %260
  %266 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %267 = add nsw i32 %266, 1
  store i32 %267, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %268 = sext i32 %266 to i64
  %269 = getelementptr inbounds i32, ptr %263, i64 %268
  store i32 %265, ptr %269, align 4, !tbaa !18
  %270 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %271 = add nsw i32 %270, %256
  store i32 %271, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  br label %272

272:                                              ; preds = %264, %253
  %273 = phi i32 [ %271, %264 ], [ %262, %253 ]
  %274 = add nsw i32 %273, %260
  %275 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %276 = add nsw i32 %275, 1
  store i32 %276, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %277 = sext i32 %275 to i64
  %278 = getelementptr inbounds i32, ptr %263, i64 %277
  store i32 %274, ptr %278, align 4, !tbaa !18
  %279 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %280 = add nsw i32 %279, %254
  store i32 %280, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %281 = load i32, ptr @c0, align 4, !tbaa !18
  %282 = add nsw i32 %281, %280
  br label %486

283:                                              ; preds = %251
  %284 = load i32, ptr @bpos, align 4, !tbaa !18
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %342

286:                                              ; preds = %283
  %287 = load i32, ptr @c4, align 4, !tbaa !18
  %288 = and i32 %287, 255
  br label %291

289:                                              ; preds = %291
  %290 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !15
  br label %301

291:                                              ; preds = %291, %286
  %292 = phi i64 [ 15, %286 ], [ %293, %291 ]
  %293 = add nsw i64 %292, -1
  %294 = getelementptr inbounds [16 x i32], ptr @_ZZ13contextModel2vE3cxt, i64 0, i64 %293
  %295 = load i32, ptr %294, align 4, !tbaa !18
  %296 = mul i32 %295, 257
  %297 = add i32 %296, 1
  %298 = add i32 %297, %288
  %299 = getelementptr inbounds [16 x i32], ptr @_ZZ13contextModel2vE3cxt, i64 0, i64 %292
  store i32 %298, ptr %299, align 4, !tbaa !18
  %300 = icmp ugt i64 %292, 1
  br i1 %300, label %291, label %289, !llvm.loop !193

301:                                              ; preds = %301, %289
  %302 = phi i64 [ 0, %289 ], [ %314, %301 ]
  %303 = getelementptr inbounds [16 x i32], ptr @_ZZ13contextModel2vE3cxt, i64 0, i64 %302
  %304 = load i32, ptr %303, align 4, !tbaa !18
  %305 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !85
  %306 = add nsw i32 %305, 1
  store i32 %306, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !85
  %307 = mul i32 %304, 987654323
  %308 = add i32 %305, %307
  %309 = tail call i32 @llvm.fshl.i32(i32 %308, i32 %308, i32 16)
  %310 = mul i32 %309, 123456791
  %311 = add i32 %310, %305
  %312 = sext i32 %305 to i64
  %313 = getelementptr inbounds i32, ptr %290, i64 %312
  store i32 %311, ptr %313, align 4, !tbaa !18
  %314 = add nuw nsw i64 %302, 1
  %315 = icmp eq i64 %314, 7
  br i1 %315, label %316, label %301, !llvm.loop !194

316:                                              ; preds = %301
  %317 = load i32, ptr getelementptr inbounds ([16 x i32], ptr @_ZZ13contextModel2vE3cxt, i64 0, i64 7), align 4, !tbaa !18
  tail call void @_ZN13RunContextMap3setEj(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE4rcm7, i32 noundef %317) #32
  %318 = load i32, ptr getelementptr inbounds ([16 x i32], ptr @_ZZ13contextModel2vE3cxt, i64 0, i64 8), align 16, !tbaa !18
  %319 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !85
  %320 = add nsw i32 %319, 1
  store i32 %320, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !85
  %321 = mul i32 %318, 987654323
  %322 = add i32 %319, %321
  %323 = tail call i32 @llvm.fshl.i32(i32 %322, i32 %322, i32 16)
  %324 = mul i32 %323, 123456791
  %325 = add i32 %324, %319
  %326 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !15
  %327 = sext i32 %319 to i64
  %328 = getelementptr inbounds i32, ptr %326, i64 %327
  store i32 %325, ptr %328, align 4, !tbaa !18
  %329 = load i32, ptr getelementptr inbounds ([16 x i32], ptr @_ZZ13contextModel2vE3cxt, i64 0, i64 10), align 8, !tbaa !18
  tail call void @_ZN13RunContextMap3setEj(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE4rcm9, i32 noundef %329) #32
  %330 = load i32, ptr getelementptr inbounds ([16 x i32], ptr @_ZZ13contextModel2vE3cxt, i64 0, i64 12), align 16, !tbaa !18
  tail call void @_ZN13RunContextMap3setEj(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE5rcm10, i32 noundef %330) #32
  %331 = load i32, ptr getelementptr inbounds ([16 x i32], ptr @_ZZ13contextModel2vE3cxt, i64 0, i64 14), align 8, !tbaa !18
  %332 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !85
  %333 = add nsw i32 %332, 1
  store i32 %333, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !85
  %334 = mul i32 %331, 987654323
  %335 = add i32 %332, %334
  %336 = tail call i32 @llvm.fshl.i32(i32 %335, i32 %335, i32 16)
  %337 = mul i32 %336, 123456791
  %338 = add i32 %337, %332
  %339 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !15
  %340 = sext i32 %332 to i64
  %341 = getelementptr inbounds i32, ptr %339, i64 %340
  store i32 %338, ptr %341, align 4, !tbaa !18
  br label %342

342:                                              ; preds = %316, %283
  %343 = tail call noundef i32 @_ZN10ContextMap3mixER5Mixer(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13contextModel2vE2cm, ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  %344 = tail call noundef i32 @_ZN13RunContextMap1pEv(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE4rcm7) #32
  %345 = trunc i32 %344 to i16
  %346 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !57
  %347 = add nsw i32 %346, 1
  store i32 %347, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !57
  %348 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %349 = sext i32 %346 to i64
  %350 = getelementptr inbounds i16, ptr %348, i64 %349
  store i16 %345, ptr %350, align 2, !tbaa !29
  %351 = tail call noundef i32 @_ZN13RunContextMap1pEv(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE4rcm9) #32
  %352 = trunc i32 %351 to i16
  %353 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !57
  %354 = add nsw i32 %353, 1
  store i32 %354, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !57
  %355 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %356 = sext i32 %353 to i64
  %357 = getelementptr inbounds i16, ptr %355, i64 %356
  store i16 %352, ptr %357, align 2, !tbaa !29
  %358 = tail call noundef i32 @_ZN13RunContextMap1pEv(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE5rcm10) #32
  %359 = trunc i32 %358 to i16
  %360 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !57
  %361 = add nsw i32 %360, 1
  store i32 %361, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !57
  %362 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %363 = sext i32 %360 to i64
  %364 = getelementptr inbounds i16, ptr %362, i64 %363
  store i16 %359, ptr %364, align 2, !tbaa !29
  %365 = load i32, ptr @level, align 4, !tbaa !18
  %366 = icmp sgt i32 %365, 3
  br i1 %366, label %367, label %371

367:                                              ; preds = %342
  tail call void @_Z11sparseModelR5Mixerii(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m, i32 noundef %134, i32 noundef %343) #32
  tail call void @_Z13distanceModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  tail call void @_Z8picModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  tail call void @_Z11recordModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  tail call void @_Z9wordModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  tail call void @_Z13indirectModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  tail call void @_Z8dmcModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  %368 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !189
  %369 = icmp eq i32 %368, 8
  br i1 %369, label %370, label %371

370:                                              ; preds = %367
  tail call void @_Z8exeModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  br label %371

371:                                              ; preds = %370, %367, %342
  %372 = tail call i32 @llvm.smax.i32(i32 %343, i32 2)
  %373 = add nsw i32 %372, -2
  %374 = load i32, ptr @pos, align 4, !tbaa !18
  %375 = add nsw i32 %374, -1
  %376 = load i32, ptr @buf, align 8, !tbaa !23
  %377 = add nsw i32 %376, -1
  %378 = and i32 %377, %375
  %379 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %380 = sext i32 %378 to i64
  %381 = getelementptr inbounds i8, ptr %379, i64 %380
  %382 = load i8, ptr %381, align 1, !tbaa !27
  %383 = zext i8 %382 to i32
  %384 = add nsw i32 %374, -2
  %385 = and i32 %377, %384
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds i8, ptr %379, i64 %386
  %388 = load i8, ptr %387, align 1, !tbaa !27
  %389 = zext i8 %388 to i32
  %390 = add nsw i32 %374, -3
  %391 = and i32 %377, %390
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds i8, ptr %379, i64 %392
  %394 = load i8, ptr %393, align 1, !tbaa !27
  %395 = zext i8 %394 to i32
  %396 = add nuw nsw i32 %383, 8
  %397 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %398 = add nsw i32 %396, %397
  %399 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %400 = add nsw i32 %399, 1
  store i32 %400, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %401 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !58
  %402 = sext i32 %399 to i64
  %403 = getelementptr inbounds i32, ptr %401, i64 %402
  store i32 %398, ptr %403, align 4, !tbaa !18
  %404 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %405 = add nsw i32 %404, 264
  store i32 %405, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %406 = load i32, ptr @c0, align 4, !tbaa !18
  %407 = add nsw i32 %406, %405
  %408 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %409 = add nsw i32 %408, 1
  store i32 %409, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %410 = sext i32 %408 to i64
  %411 = getelementptr inbounds i32, ptr %401, i64 %410
  store i32 %407, ptr %411, align 4, !tbaa !18
  %412 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %413 = add nsw i32 %412, 256
  store i32 %413, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %414 = load i32, ptr @c4, align 4, !tbaa !18
  %415 = lshr i32 %414, 2
  %416 = and i32 %415, 56
  %417 = icmp eq i8 %382, %388
  %418 = select i1 %417, i32 64, i32 0
  %419 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !189
  %420 = icmp eq i32 %419, 8
  %421 = select i1 %420, i32 128, i32 0
  %422 = add nuw i32 %373, %418
  %423 = add i32 %422, %413
  %424 = add i32 %423, %416
  %425 = add i32 %424, %421
  %426 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %427 = add nsw i32 %426, 1
  store i32 %427, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %428 = sext i32 %426 to i64
  %429 = getelementptr inbounds i32, ptr %401, i64 %428
  store i32 %425, ptr %429, align 4, !tbaa !18
  %430 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %431 = add nsw i32 %430, 256
  store i32 %431, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %432 = add nsw i32 %431, %389
  %433 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %434 = add nsw i32 %433, 1
  store i32 %434, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %435 = sext i32 %433 to i64
  %436 = getelementptr inbounds i32, ptr %401, i64 %435
  store i32 %432, ptr %436, align 4, !tbaa !18
  %437 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %438 = add nsw i32 %437, 256
  store i32 %438, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %439 = add nsw i32 %438, %395
  %440 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %441 = add nsw i32 %440, 1
  store i32 %441, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %442 = sext i32 %440 to i64
  %443 = getelementptr inbounds i32, ptr %401, i64 %442
  store i32 %439, ptr %443, align 4, !tbaa !18
  %444 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %445 = add nsw i32 %444, 256
  store i32 %445, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %446 = add nsw i32 %445, %134
  %447 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %448 = add nsw i32 %447, 1
  store i32 %448, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %449 = sext i32 %447 to i64
  %450 = getelementptr inbounds i32, ptr %401, i64 %449
  store i32 %446, ptr %450, align 4, !tbaa !18
  %451 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %452 = add nsw i32 %451, 256
  store i32 %452, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %453 = load i32, ptr @bpos, align 4, !tbaa !18
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %472, label %455

455:                                              ; preds = %371
  %456 = load i32, ptr @c0, align 4, !tbaa !18
  %457 = sub nsw i32 8, %453
  %458 = shl i32 %456, %457
  %459 = icmp eq i32 %453, 1
  %460 = lshr i32 %395, 1
  %461 = select i1 %459, i32 %460, i32 0
  %462 = add i32 %458, %461
  %463 = tail call i32 @llvm.smin.i32(i32 %453, i32 5)
  %464 = shl nsw i32 %463, 8
  %465 = lshr i32 %383, 5
  %466 = or i32 %464, %465
  %467 = lshr i32 %389, 2
  %468 = and i32 %467, 56
  %469 = or i32 %466, %468
  %470 = and i32 %462, 192
  %471 = or i32 %470, %469
  br label %483

472:                                              ; preds = %371
  %473 = lshr i32 %395, 7
  %474 = load i32, ptr @c4, align 4, !tbaa !18
  %475 = lshr i32 %474, 30
  %476 = and i32 %475, 2
  %477 = lshr i32 %389, 4
  %478 = and i32 %477, 12
  %479 = and i32 %383, 240
  %480 = or i32 %473, %479
  %481 = or i32 %480, %478
  %482 = or i32 %481, %476
  br label %483

483:                                              ; preds = %472, %455
  %484 = phi i32 [ %471, %455 ], [ %482, %472 ]
  %485 = add nsw i32 %484, %452
  br label %486

486:                                              ; preds = %483, %272, %181, %143
  %487 = phi ptr [ %190, %181 ], [ %148, %143 ], [ %401, %483 ], [ %263, %272 ]
  %488 = phi i32 [ %228, %181 ], [ %171, %143 ], [ %485, %483 ], [ %282, %272 ]
  %489 = phi i32 [ 256, %181 ], [ 256, %143 ], [ 1536, %483 ], [ 256, %272 ]
  %490 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %491 = add nsw i32 %490, 1
  store i32 %491, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !55
  %492 = sext i32 %490 to i64
  %493 = getelementptr inbounds i32, ptr %487, i64 %492
  store i32 %488, ptr %493, align 4, !tbaa !18
  %494 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  %495 = add nsw i32 %494, %489
  store i32 %495, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !56
  br label %496

496:                                              ; preds = %486, %248, %240, %232
  %497 = tail call noundef i32 @_ZN5Mixer1pEv(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m) #32
  ret i32 %497

498:                                              ; preds = %79, %77, %75, %73, %71
  %499 = phi ptr [ @_ZGVZ13contextModel2vE1m, %79 ], [ @_ZGVZ13contextModel2vE5rcm10, %77 ], [ @_ZGVZ13contextModel2vE4rcm9, %75 ], [ @_ZGVZ13contextModel2vE4rcm7, %73 ], [ @_ZGVZ13contextModel2vE2cm, %71 ]
  %500 = phi { ptr, i32 } [ %80, %79 ], [ %78, %77 ], [ %76, %75 ], [ %74, %73 ], [ %72, %71 ]
  tail call void @__cxa_guard_abort(ptr nonnull %499) #33
  resume { ptr, i32 } %500
}

; Function Attrs: optsize uwtable
define internal void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = sdiv i32 %1, 4
  %4 = shl nsw i32 %3, 2
  tail call void @_ZN5ArrayIhLi64EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %4) #32
  %5 = getelementptr inbounds %class.Random, ptr %0, i64 0, i32 1
  %6 = add nsw i32 %3, -1
  store i32 %6, ptr %5, align 8, !tbaa !195
  %7 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !142
  br label %9

9:                                                ; preds = %22, %2
  %10 = phi i64 [ 0, %2 ], [ %23, %22 ]
  %11 = trunc i64 %10 to i32
  %12 = shl i32 %11, 2
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, ptr %8, i64 %13
  %15 = getelementptr inbounds i8, ptr %14, i64 2
  %16 = load i8, ptr %15, align 1, !tbaa !27
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %9
  %.lcssa6 = phi i64 [ %10, %9 ]
  %.lcssa3 = phi i32 [ %11, %9 ]
  %.lcssa = phi ptr [ %14, %9 ]
  store i16 0, ptr %.lcssa, align 2, !tbaa !29
  br label %25

19:                                               ; preds = %9
  %20 = load i16, ptr %14, align 2, !tbaa !29
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = add nuw nsw i64 %10, 1
  %24 = icmp eq i64 %23, 8
  br i1 %24, label %26, label %9, !llvm.loop !197

25:                                               ; preds = %19, %18
  %.lcssa7 = phi i64 [ %10, %19 ], [ %.lcssa6, %18 ]
  %.lcssa4 = phi i32 [ %11, %19 ], [ %.lcssa3, %18 ]
  %.lcssa1 = phi ptr [ %14, %19 ], [ %.lcssa, %18 ]
  switch i32 %.lcssa4, label %34 [
    i32 0, label %44
    i32 8, label %26
  ]

26:                                               ; preds = %25, %22
  store i32 0, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  %27 = getelementptr inbounds i8, ptr %8, i64 30
  %28 = load i8, ptr %27, align 1, !tbaa !27
  %29 = getelementptr inbounds i8, ptr %8, i64 26
  %30 = load i8, ptr %29, align 1, !tbaa !27
  %31 = icmp ugt i8 %28, %30
  %32 = select i1 %31, i64 6, i64 7
  %33 = load i32, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  br label %36

34:                                               ; preds = %25
  %35 = load i32, ptr %.lcssa1, align 2
  store i32 %35, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  br label %36

36:                                               ; preds = %34, %26
  %37 = phi i32 [ %33, %26 ], [ %35, %34 ]
  %38 = phi i64 [ %32, %26 ], [ %.lcssa7, %34 ]
  %39 = getelementptr inbounds i8, ptr %8, i64 4
  %40 = shl i64 %38, 2
  %41 = and i64 %40, 4294967292
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %39, ptr nonnull align 1 %8, i64 %41, i1 false)
  %42 = load ptr, ptr %7, align 8, !tbaa !142
  store i32 %37, ptr %42, align 1
  %43 = load ptr, ptr %7, align 8, !tbaa !142
  br label %44

44:                                               ; preds = %36, %25
  %45 = phi ptr [ %43, %36 ], [ %.lcssa1, %25 ]
  %46 = getelementptr inbounds i8, ptr %45, i64 2
  %47 = getelementptr inbounds %class.RunContextMap, ptr %0, i64 0, i32 1
  store ptr %46, ptr %47, align 8, !tbaa !198
  ret void
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN13RunContextMapD2Ev(ptr noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #2 comdat align 2 {
  tail call void @_ZN5ArrayIhLi64EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) #31
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN13RunContextMap3setEj(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.RunContextMap, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !198
  %5 = load i8, ptr %4, align 1, !tbaa !27
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds i8, ptr %4, i64 1
  %9 = load i8, ptr %8, align 1, !tbaa !27
  %10 = load i32, ptr @pos, align 4, !tbaa !18
  %11 = add nsw i32 %10, -1
  %12 = load i32, ptr @buf, align 8, !tbaa !23
  %13 = add nsw i32 %12, -1
  %14 = and i32 %13, %11
  %15 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds i8, ptr %15, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !27
  %19 = icmp eq i8 %18, %9
  br i1 %19, label %32, label %20

20:                                               ; preds = %7, %2
  store i8 1, ptr %4, align 1, !tbaa !27
  %21 = load i32, ptr @pos, align 4, !tbaa !18
  %22 = add nsw i32 %21, -1
  %23 = load i32, ptr @buf, align 8, !tbaa !23
  %24 = add nsw i32 %23, -1
  %25 = and i32 %24, %22
  %26 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %27 = sext i32 %25 to i64
  %28 = getelementptr inbounds i8, ptr %26, i64 %27
  %29 = load i8, ptr %28, align 1, !tbaa !27
  %30 = load ptr, ptr %3, align 8, !tbaa !198
  %31 = getelementptr inbounds i8, ptr %30, i64 1
  store i8 %29, ptr %31, align 1, !tbaa !27
  br label %36

32:                                               ; preds = %7
  %33 = icmp eq i8 %5, -1
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = add nuw i8 %5, 1
  store i8 %35, ptr %4, align 1, !tbaa !27
  br label %36

36:                                               ; preds = %34, %32, %20
  %37 = lshr i32 %1, 16
  %38 = and i32 %1, 65535
  %39 = xor i32 %37, %38
  %40 = shl i32 %1, 3
  %41 = getelementptr inbounds %class.Random, ptr %0, i64 0, i32 1
  %42 = load i32, ptr %41, align 8, !tbaa !195
  %43 = and i32 %42, %40
  %44 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  %45 = load ptr, ptr %44, align 8, !tbaa !142
  br label %46

46:                                               ; preds = %62, %36
  %47 = phi i64 [ 0, %36 ], [ %63, %62 ]
  %48 = trunc i64 %47 to i32
  %49 = add i32 %43, %48
  %50 = shl i32 %49, 2
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, ptr %45, i64 %51
  %53 = getelementptr inbounds i8, ptr %52, i64 2
  %54 = load i8, ptr %53, align 1, !tbaa !27
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %46
  %.lcssa6 = phi i64 [ %47, %46 ]
  %.lcssa3 = phi i32 [ %48, %46 ]
  %.lcssa = phi ptr [ %52, %46 ]
  %57 = trunc i32 %39 to i16
  store i16 %57, ptr %.lcssa, align 2, !tbaa !29
  br label %65

58:                                               ; preds = %46
  %59 = load i16, ptr %52, align 2, !tbaa !29
  %60 = zext i16 %59 to i32
  %61 = icmp eq i32 %39, %60
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = add nuw nsw i64 %47, 1
  %64 = icmp eq i64 %63, 8
  br i1 %64, label %68, label %46, !llvm.loop !197

65:                                               ; preds = %58, %56
  %.lcssa7 = phi i64 [ %47, %58 ], [ %.lcssa6, %56 ]
  %.lcssa4 = phi i32 [ %48, %58 ], [ %.lcssa3, %56 ]
  %.lcssa1 = phi ptr [ %52, %58 ], [ %.lcssa, %56 ]
  switch i32 %.lcssa4, label %81 [
    i32 0, label %66
    i32 8, label %68
  ]

66:                                               ; preds = %65
  %67 = getelementptr inbounds i8, ptr %.lcssa1, i64 1
  br label %101

68:                                               ; preds = %65, %62
  store i32 0, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  %69 = trunc i32 %39 to i16
  store i16 %69, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1, !tbaa !29
  %70 = shl i32 %43, 2
  %71 = or i32 %70, 30
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, ptr %45, i64 %72
  %74 = load i8, ptr %73, align 1, !tbaa !27
  %75 = or i32 %70, 26
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, ptr %45, i64 %76
  %78 = load i8, ptr %77, align 1, !tbaa !27
  %79 = icmp ugt i8 %74, %78
  %80 = select i1 %79, i64 6, i64 7
  br label %84

81:                                               ; preds = %65
  %82 = load i32, ptr %.lcssa1, align 2
  store i32 %82, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  %83 = shl i32 %43, 2
  br label %84

84:                                               ; preds = %81, %68
  %85 = phi i32 [ %70, %68 ], [ %83, %81 ]
  %86 = phi i64 [ %80, %68 ], [ %.lcssa7, %81 ]
  %87 = or i32 %85, 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8, ptr %45, i64 %88
  %90 = sext i32 %85 to i64
  %91 = getelementptr inbounds i8, ptr %45, i64 %90
  %92 = shl i64 %86, 2
  %93 = and i64 %92, 4294967292
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %89, ptr nonnull align 1 %91, i64 %93, i1 false)
  %94 = load ptr, ptr %44, align 8, !tbaa !142
  %95 = getelementptr inbounds i8, ptr %94, i64 %90
  %96 = load i32, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  store i32 %96, ptr %95, align 1
  %97 = or i32 %85, 1
  %98 = load ptr, ptr %44, align 8, !tbaa !142
  %99 = sext i32 %97 to i64
  %100 = getelementptr inbounds i8, ptr %98, i64 %99
  br label %101

101:                                              ; preds = %84, %66
  %102 = phi ptr [ %67, %66 ], [ %100, %84 ]
  %103 = getelementptr inbounds i8, ptr %102, i64 1
  store ptr %103, ptr %3, align 8, !tbaa !198
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_ZN13RunContextMap1pEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #7 comdat align 2 {
  %2 = getelementptr inbounds %class.RunContextMap, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !198
  %4 = getelementptr inbounds i8, ptr %3, i64 1
  %5 = load i8, ptr %4, align 1, !tbaa !27
  %6 = zext i8 %5 to i32
  %7 = or i32 %6, 256
  %8 = load i32, ptr @bpos, align 4, !tbaa !18
  %9 = sub nsw i32 8, %8
  %10 = lshr i32 %7, %9
  %11 = load i32, ptr @c0, align 4, !tbaa !18
  %12 = icmp eq i32 %10, %11
  br i1 %12, label %13, label %27

13:                                               ; preds = %1
  %14 = sub nsw i32 7, %8
  %15 = lshr i32 %6, %14
  %16 = shl nuw nsw i32 %15, 4
  %17 = and i32 %16, 16
  %18 = load i8, ptr %3, align 1, !tbaa !27
  %19 = zext i8 %18 to i64
  %20 = add nuw nsw i64 %19, 1
  %21 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %22 = getelementptr inbounds i8, ptr %21, i64 %20
  %23 = load i8, ptr %22, align 1, !tbaa !27
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %17, -8
  %26 = mul nsw i32 %25, %24
  br label %27

27:                                               ; preds = %13, %1
  %28 = phi i32 [ %26, %13 ], [ 0, %1 ]
  ret i32 %28
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN9Predictor6updateEv(ptr nocapture noundef nonnull align 4 dereferenceable(4) %0) #7 align 2 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE1a acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !100

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE1a) #33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE1a, i32 noundef 256) #32
          to label %8 unwind label %85

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE1a, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE1a) #33
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a1 acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19, !prof !100

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a1) #33
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a1, i32 noundef 65536) #32
          to label %17 unwind label %87

17:                                               ; preds = %16
  %18 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a1, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a1) #33
  br label %19

19:                                               ; preds = %17, %13, %10
  %20 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a2 acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28, !prof !100

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a2) #33
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a2, i32 noundef 65536) #32
          to label %26 unwind label %89

26:                                               ; preds = %25
  %27 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a2, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a2) #33
  br label %28

28:                                               ; preds = %26, %22, %19
  %29 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a3 acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %37, !prof !100

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a3) #33
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a3, i32 noundef 65536) #32
          to label %35 unwind label %91

35:                                               ; preds = %34
  %36 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a3, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a3) #33
  br label %37

37:                                               ; preds = %35, %31, %28
  %38 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a4 acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %46, !prof !100

40:                                               ; preds = %37
  %41 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a4) #33
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a4, i32 noundef 65536) #32
          to label %44 unwind label %93

44:                                               ; preds = %43
  %45 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a4, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a4) #33
  br label %46

46:                                               ; preds = %44, %40, %37
  %47 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a5 acquire, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %55, !prof !100

49:                                               ; preds = %46
  %50 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a5) #33
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a5, i32 noundef 65536) #32
          to label %53 unwind label %95

53:                                               ; preds = %52
  %54 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a5, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a5) #33
  br label %55

55:                                               ; preds = %53, %49, %46
  %56 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a6 acquire, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %64, !prof !100

58:                                               ; preds = %55
  %59 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a6) #33
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a6, i32 noundef 65536) #32
          to label %62 unwind label %97

62:                                               ; preds = %61
  %63 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a6, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a6) #33
  br label %64

64:                                               ; preds = %62, %58, %55
  %65 = load i32, ptr @c0, align 4, !tbaa !18
  %66 = load i32, ptr @y, align 4, !tbaa !18
  %67 = shl i32 %65, 1
  %68 = add i32 %66, %67
  store i32 %68, ptr @c0, align 4, !tbaa !18
  %69 = icmp sgt i32 %68, 255
  br i1 %69, label %70, label %99

70:                                               ; preds = %64
  %71 = trunc i32 %68 to i8
  %72 = load i32, ptr @pos, align 4, !tbaa !18
  %73 = add nsw i32 %72, 1
  store i32 %73, ptr @pos, align 4, !tbaa !18
  %74 = load i32, ptr @buf, align 8, !tbaa !23
  %75 = add nsw i32 %74, -1
  %76 = and i32 %75, %72
  %77 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %78 = sext i32 %76 to i64
  %79 = getelementptr inbounds i8, ptr %77, i64 %78
  store i8 %71, ptr %79, align 1, !tbaa !27
  %80 = load i32, ptr @c4, align 4, !tbaa !18
  %81 = shl i32 %80, 8
  %82 = load i32, ptr @c0, align 4, !tbaa !18
  %83 = add i32 %82, -256
  %84 = add i32 %83, %81
  store i32 %84, ptr @c4, align 4, !tbaa !18
  store i32 1, ptr @c0, align 4, !tbaa !18
  br label %99

85:                                               ; preds = %7
  %86 = landingpad { ptr, i32 }
          cleanup
  br label %293

87:                                               ; preds = %16
  %88 = landingpad { ptr, i32 }
          cleanup
  br label %293

89:                                               ; preds = %25
  %90 = landingpad { ptr, i32 }
          cleanup
  br label %293

91:                                               ; preds = %34
  %92 = landingpad { ptr, i32 }
          cleanup
  br label %293

93:                                               ; preds = %43
  %94 = landingpad { ptr, i32 }
          cleanup
  br label %293

95:                                               ; preds = %52
  %96 = landingpad { ptr, i32 }
          cleanup
  br label %293

97:                                               ; preds = %61
  %98 = landingpad { ptr, i32 }
          cleanup
  br label %293

99:                                               ; preds = %70, %64
  %100 = load i32, ptr @bpos, align 4, !tbaa !18
  %101 = add nsw i32 %100, 1
  %102 = and i32 %101, 7
  store i32 %102, ptr @bpos, align 4, !tbaa !18
  %103 = tail call noundef i32 @_Z13contextModel2v() #32
  %104 = load i32, ptr @c0, align 4, !tbaa !18
  %105 = tail call noundef i32 @_ZN4APM11pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE1a, i32 noundef %103, i32 noundef %104, i32 noundef 7) #32
  store i32 %105, ptr %0, align 4, !tbaa !200
  %106 = load i32, ptr @c0, align 4, !tbaa !18
  %107 = load i32, ptr @pos, align 4, !tbaa !18
  %108 = add nsw i32 %107, -1
  %109 = load i32, ptr @buf, align 8, !tbaa !23
  %110 = add nsw i32 %109, -1
  %111 = and i32 %110, %108
  %112 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %113 = sext i32 %111 to i64
  %114 = getelementptr inbounds i8, ptr %112, i64 %113
  %115 = load i8, ptr %114, align 1, !tbaa !27
  %116 = zext i8 %115 to i32
  %117 = shl nuw nsw i32 %116, 8
  %118 = add nsw i32 %117, %106
  %119 = tail call noundef i32 @_ZN4APM11pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a1, i32 noundef %103, i32 noundef %118, i32 noundef 7) #32
  %120 = load i32, ptr @c0, align 4, !tbaa !18
  %121 = load i32, ptr @pos, align 4, !tbaa !18
  %122 = add nsw i32 %121, -1
  %123 = load i32, ptr @buf, align 8, !tbaa !23
  %124 = add nsw i32 %123, -1
  %125 = and i32 %124, %122
  %126 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %127 = sext i32 %125 to i64
  %128 = getelementptr inbounds i8, ptr %126, i64 %127
  %129 = load i8, ptr %128, align 1, !tbaa !27
  %130 = zext i8 %129 to i32
  %131 = add nsw i32 %121, -2
  %132 = and i32 %124, %131
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, ptr %126, i64 %133
  %135 = load i8, ptr %134, align 1, !tbaa !27
  %136 = zext i8 %135 to i32
  %137 = mul i32 %130, 200002979
  %138 = mul i32 %136, 30005491
  %139 = add i32 %137, -230011545
  %140 = add i32 %139, %138
  %141 = lshr i32 %140, 9
  %142 = lshr i32 %130, 2
  %143 = lshr i32 %136, 3
  %144 = xor i32 %143, %142
  %145 = xor i32 %144, %141
  %146 = xor i32 %145, %140
  %147 = and i32 %146, 65535
  %148 = xor i32 %120, %147
  %149 = xor i32 %148, 65535
  %150 = tail call noundef i32 @_ZN4APM11pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a2, i32 noundef %103, i32 noundef %149, i32 noundef 7) #32
  %151 = load i32, ptr @c0, align 4, !tbaa !18
  %152 = load i32, ptr @pos, align 4, !tbaa !18
  %153 = add nsw i32 %152, -1
  %154 = load i32, ptr @buf, align 8, !tbaa !23
  %155 = add nsw i32 %154, -1
  %156 = and i32 %155, %153
  %157 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %158 = sext i32 %156 to i64
  %159 = getelementptr inbounds i8, ptr %157, i64 %158
  %160 = load i8, ptr %159, align 1, !tbaa !27
  %161 = zext i8 %160 to i32
  %162 = add nsw i32 %152, -2
  %163 = and i32 %155, %162
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i8, ptr %157, i64 %164
  %166 = load i8, ptr %165, align 1, !tbaa !27
  %167 = zext i8 %166 to i32
  %168 = add nsw i32 %152, -3
  %169 = and i32 %155, %168
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, ptr %157, i64 %170
  %172 = load i8, ptr %171, align 1, !tbaa !27
  %173 = zext i8 %172 to i32
  %174 = mul i32 %161, 200002979
  %175 = mul i32 %167, 30005491
  %176 = mul i32 %173, 50004239
  %177 = add i32 %174, -180007306
  %178 = add i32 %177, %175
  %179 = add i32 %178, %176
  %180 = lshr i32 %179, 9
  %181 = lshr i32 %161, 2
  %182 = lshr i32 %167, 3
  %183 = lshr i32 %173, 4
  %184 = xor i32 %182, %181
  %185 = xor i32 %184, %183
  %186 = xor i32 %185, %180
  %187 = xor i32 %186, %179
  %188 = and i32 %187, 65535
  %189 = xor i32 %188, %151
  %190 = tail call noundef i32 @_ZN4APM11pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a3, i32 noundef %103, i32 noundef %189, i32 noundef 7) #32
  %191 = add i32 %103, 2
  %192 = add i32 %191, %119
  %193 = add i32 %192, %150
  %194 = add i32 %193, %190
  %195 = ashr i32 %194, 2
  %196 = load i32, ptr %0, align 4, !tbaa !200
  %197 = load i32, ptr @c0, align 4, !tbaa !18
  %198 = load i32, ptr @pos, align 4, !tbaa !18
  %199 = add nsw i32 %198, -1
  %200 = load i32, ptr @buf, align 8, !tbaa !23
  %201 = add nsw i32 %200, -1
  %202 = and i32 %201, %199
  %203 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %204 = sext i32 %202 to i64
  %205 = getelementptr inbounds i8, ptr %203, i64 %204
  %206 = load i8, ptr %205, align 1, !tbaa !27
  %207 = zext i8 %206 to i32
  %208 = shl nuw nsw i32 %207, 8
  %209 = add nsw i32 %208, %197
  %210 = tail call noundef i32 @_ZN4APM11pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a4, i32 noundef %196, i32 noundef %209, i32 noundef 7) #32
  %211 = load i32, ptr %0, align 4, !tbaa !200
  %212 = load i32, ptr @c0, align 4, !tbaa !18
  %213 = load i32, ptr @pos, align 4, !tbaa !18
  %214 = add nsw i32 %213, -1
  %215 = load i32, ptr @buf, align 8, !tbaa !23
  %216 = add nsw i32 %215, -1
  %217 = and i32 %216, %214
  %218 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %219 = sext i32 %217 to i64
  %220 = getelementptr inbounds i8, ptr %218, i64 %219
  %221 = load i8, ptr %220, align 1, !tbaa !27
  %222 = zext i8 %221 to i32
  %223 = add nsw i32 %213, -2
  %224 = and i32 %216, %223
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds i8, ptr %218, i64 %225
  %227 = load i8, ptr %226, align 1, !tbaa !27
  %228 = zext i8 %227 to i32
  %229 = mul i32 %222, 200002979
  %230 = mul i32 %228, 30005491
  %231 = add i32 %229, -230011545
  %232 = add i32 %231, %230
  %233 = lshr i32 %232, 9
  %234 = lshr i32 %222, 2
  %235 = lshr i32 %228, 3
  %236 = xor i32 %235, %234
  %237 = xor i32 %236, %233
  %238 = xor i32 %237, %232
  %239 = and i32 %238, 65535
  %240 = xor i32 %212, %239
  %241 = xor i32 %240, 65535
  %242 = tail call noundef i32 @_ZN4APM11pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a5, i32 noundef %211, i32 noundef %241, i32 noundef 7) #32
  %243 = load i32, ptr %0, align 4, !tbaa !200
  %244 = load i32, ptr @c0, align 4, !tbaa !18
  %245 = load i32, ptr @pos, align 4, !tbaa !18
  %246 = add nsw i32 %245, -1
  %247 = load i32, ptr @buf, align 8, !tbaa !23
  %248 = add nsw i32 %247, -1
  %249 = and i32 %248, %246
  %250 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !26
  %251 = sext i32 %249 to i64
  %252 = getelementptr inbounds i8, ptr %250, i64 %251
  %253 = load i8, ptr %252, align 1, !tbaa !27
  %254 = zext i8 %253 to i32
  %255 = add nsw i32 %245, -2
  %256 = and i32 %248, %255
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds i8, ptr %250, i64 %257
  %259 = load i8, ptr %258, align 1, !tbaa !27
  %260 = zext i8 %259 to i32
  %261 = add nsw i32 %245, -3
  %262 = and i32 %248, %261
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds i8, ptr %250, i64 %263
  %265 = load i8, ptr %264, align 1, !tbaa !27
  %266 = zext i8 %265 to i32
  %267 = mul i32 %254, 200002979
  %268 = mul i32 %260, 30005491
  %269 = mul i32 %266, 50004239
  %270 = add i32 %267, -180007306
  %271 = add i32 %270, %268
  %272 = add i32 %271, %269
  %273 = lshr i32 %272, 9
  %274 = lshr i32 %254, 2
  %275 = lshr i32 %260, 3
  %276 = lshr i32 %266, 4
  %277 = xor i32 %275, %274
  %278 = xor i32 %277, %276
  %279 = xor i32 %278, %273
  %280 = xor i32 %279, %272
  %281 = and i32 %280, 65535
  %282 = xor i32 %281, %244
  %283 = tail call noundef i32 @_ZN4APM11pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a6, i32 noundef %243, i32 noundef %282, i32 noundef 7) #32
  %284 = load i32, ptr %0, align 4, !tbaa !200
  %285 = add i32 %210, 2
  %286 = add i32 %285, %242
  %287 = add i32 %286, %283
  %288 = add i32 %287, %284
  %289 = ashr i32 %288, 2
  %290 = add nsw i32 %195, 1
  %291 = add nsw i32 %290, %289
  %292 = ashr i32 %291, 1
  store i32 %292, ptr %0, align 4, !tbaa !200
  ret void

293:                                              ; preds = %97, %95, %93, %91, %89, %87, %85
  %294 = phi ptr [ @_ZGVZN9Predictor6updateEvE2a6, %97 ], [ @_ZGVZN9Predictor6updateEvE2a5, %95 ], [ @_ZGVZN9Predictor6updateEvE2a4, %93 ], [ @_ZGVZN9Predictor6updateEvE2a3, %91 ], [ @_ZGVZN9Predictor6updateEvE2a2, %89 ], [ @_ZGVZN9Predictor6updateEvE2a1, %87 ], [ @_ZGVZN9Predictor6updateEvE1a, %85 ]
  %295 = phi { ptr, i32 } [ %98, %97 ], [ %96, %95 ], [ %94, %93 ], [ %92, %91 ], [ %90, %89 ], [ %88, %87 ], [ %86, %85 ]
  tail call void @__cxa_guard_abort(ptr nonnull %294) #33
  resume { ptr, i32 } %295
}

; Function Attrs: inlinehint nounwind optsize uwtable
define internal void @_ZN4APM1D2Ev(ptr noundef nonnull align 8 dereferenceable(32) %0) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2
  tail call void @_ZN5ArrayItLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %2) #31
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_ZN4APM11pEiii(ptr noundef nonnull align 8 dereferenceable(32) %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #7 comdat align 2 {
  %5 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !39
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds i16, ptr %5, i64 %6
  %8 = load i16, ptr %7, align 2, !tbaa !29
  %9 = sext i16 %8 to i32
  %10 = load i32, ptr @y, align 4, !tbaa !18
  %11 = shl i32 %10, 16
  %12 = shl i32 %10, %3
  %13 = add nsw i32 %11, %12
  %14 = shl i32 %10, 1
  %15 = sub i32 %13, %14
  %16 = load i32, ptr %0, align 8, !tbaa !66
  %17 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !70
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds i16, ptr %18, i64 %19
  %21 = load i16, ptr %20, align 2, !tbaa !29
  %22 = zext i16 %21 to i32
  %23 = sub nsw i32 %15, %22
  %24 = ashr i32 %23, %3
  %25 = trunc i32 %24 to i16
  %26 = add i16 %21, %25
  store i16 %26, ptr %20, align 2, !tbaa !29
  %27 = add nsw i32 %16, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i16, ptr %18, i64 %28
  %30 = load i16, ptr %29, align 2, !tbaa !29
  %31 = zext i16 %30 to i32
  %32 = sub nsw i32 %15, %31
  %33 = ashr i32 %32, %3
  %34 = trunc i32 %33 to i16
  %35 = add i16 %30, %34
  store i16 %35, ptr %29, align 2, !tbaa !29
  %36 = and i32 %9, 127
  %37 = add nsw i32 %9, 2048
  %38 = ashr i32 %37, 7
  %39 = mul nsw i32 %2, 33
  %40 = add nsw i32 %38, %39
  store i32 %40, ptr %0, align 8, !tbaa !66
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i16, ptr %18, i64 %41
  %43 = load i16, ptr %42, align 2, !tbaa !29
  %44 = zext i16 %43 to i32
  %45 = sub nuw nsw i32 128, %36
  %46 = mul nuw nsw i32 %45, %44
  %47 = add nsw i32 %40, 1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i16, ptr %18, i64 %48
  %50 = load i16, ptr %49, align 2, !tbaa !29
  %51 = zext i16 %50 to i32
  %52 = mul nuw nsw i32 %36, %51
  %53 = add nuw nsw i32 %52, %46
  %54 = lshr i32 %53, 11
  ret i32 %54
}

; Function Attrs: nofree nounwind optsize uwtable
define internal void @_ZN7EncoderC2E4ModeP8_IO_FILE(ptr nocapture noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1, ptr noundef %2) unnamed_addr #22 align 2 {
  store i32 2048, ptr %0, align 8, !tbaa !200
  %4 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 1
  store i32 %1, ptr %4, align 4, !tbaa !202
  %5 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 2
  store ptr %2, ptr %5, align 8, !tbaa !205
  %6 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 3
  store i32 0, ptr %6, align 8, !tbaa !206
  %7 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 4
  store i32 -1, ptr %7, align 4, !tbaa !207
  %8 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 5
  store i32 0, ptr %8, align 8, !tbaa !208
  %9 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 6
  store ptr null, ptr %9, align 8, !tbaa !209
  %10 = load i32, ptr @level, align 4, !tbaa !18
  %11 = icmp sgt i32 %10, 0
  %12 = icmp eq i32 %1, 1
  %13 = and i1 %12, %11
  br i1 %13, label %15, label %14

14:                                               ; preds = %15, %3
  br label %26

15:                                               ; preds = %15, %3
  %16 = phi i32 [ %22, %15 ], [ 0, %3 ]
  %17 = phi i32 [ %23, %15 ], [ 0, %3 ]
  %18 = shl i32 %16, 8
  %19 = load ptr, ptr %5, align 8, !tbaa !205
  %20 = tail call i32 @getc(ptr noundef %19) #32
  %21 = and i32 %20, 255
  %22 = or i32 %21, %18
  store i32 %22, ptr %8, align 8, !tbaa !208
  %23 = add nuw nsw i32 %17, 1
  %24 = icmp eq i32 %23, 4
  br i1 %24, label %14, label %15, !llvm.loop !210

25:                                               ; preds = %26
  ret void

26:                                               ; preds = %26, %14
  %27 = phi i64 [ %34, %26 ], [ 0, %14 ]
  %28 = trunc i64 %27 to i16
  %29 = shl i16 %28, 1
  %30 = add i16 %29, 3
  %31 = udiv i16 16384, %30
  %32 = zext i16 %31 to i32
  %33 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %27
  store i32 %32, ptr %33, align 4, !tbaa !18
  %34 = add nuw nsw i64 %27, 1
  %35 = icmp eq i64 %34, 1024
  br i1 %35, label %25, label %26, !llvm.loop !211
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @getc(ptr nocapture noundef) local_unnamed_addr #17

; Function Attrs: optsize uwtable
define internal noundef i32 @_Z6detectP8_IO_FILEi8Filetype(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 personality ptr @__gxx_personality_v0 {
  %4 = alloca %class.Array, align 8
  %5 = alloca %class.Array, align 8
  %6 = alloca [32 x i8], align 16
  %7 = tail call i64 @ftell(ptr noundef %0) #32
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #33
  call void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %4, i32 noundef 256) #32
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #33
  invoke void @_ZN5ArrayIiLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef 256) #32
          to label %8 unwind label %21

8:                                                ; preds = %3
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #33
  %9 = icmp sgt i32 %1, 0
  br i1 %9, label %10, label %536

10:                                               ; preds = %8
  %11 = icmp eq i32 %2, 1
  %12 = icmp ne i32 %2, 1
  %13 = add i32 %2, -2
  %14 = icmp ult i32 %13, 3
  %15 = icmp eq i32 %2, 6
  %16 = icmp eq i32 %2, 7
  %17 = getelementptr inbounds %class.Array, ptr %5, i64 0, i32 3
  %18 = getelementptr inbounds %class.Array, ptr %4, i64 0, i32 3
  %19 = icmp ne i32 %2, 8
  %20 = icmp eq i32 %2, 8
  br label %33

21:                                               ; preds = %3
  %22 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #33
  %23 = load i32, ptr %4, align 8, !tbaa !48
  %24 = load i32, ptr @programChecker, align 8, !tbaa !7
  %25 = shl i32 %23, 2
  %26 = sub i32 %24, %25
  store i32 %26, ptr @programChecker, align 8, !tbaa !7
  %27 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %28 = icmp sgt i32 %26, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %21
  store i32 %26, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %30

30:                                               ; preds = %29, %21
  %31 = getelementptr inbounds %class.Array, ptr %4, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !49
  call void @free(ptr noundef %32) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #33
  resume { ptr, i32 } %22

33:                                               ; preds = %529, %10
  %34 = phi i32 [ 0, %10 ], [ %65, %529 ]
  %35 = phi i32 [ 0, %10 ], [ %522, %529 ]
  %36 = phi i32 [ 0, %10 ], [ %521, %529 ]
  %37 = phi i32 [ 0, %10 ], [ %530, %529 ]
  %38 = phi i32 [ 0, %10 ], [ %476, %529 ]
  %39 = phi i32 [ 0, %10 ], [ %475, %529 ]
  %40 = phi i32 [ 0, %10 ], [ %474, %529 ]
  %41 = phi i32 [ -1, %10 ], [ %473, %529 ]
  %42 = phi i32 [ 0, %10 ], [ %472, %529 ]
  %43 = phi i32 [ 0, %10 ], [ %118, %529 ]
  %44 = phi i32 [ 0, %10 ], [ %117, %529 ]
  %45 = phi i32 [ 0, %10 ], [ %116, %529 ]
  %46 = phi i32 [ 0, %10 ], [ %115, %529 ]
  %47 = phi i32 [ 0, %10 ], [ %373, %529 ]
  %48 = phi i32 [ 0, %10 ], [ %372, %529 ]
  %49 = phi i32 [ 0, %10 ], [ %371, %529 ]
  %50 = phi i32 [ 0, %10 ], [ %370, %529 ]
  %51 = phi i32 [ 0, %10 ], [ %369, %529 ]
  %52 = phi i32 [ 0, %10 ], [ %520, %529 ]
  %53 = phi i32 [ 0, %10 ], [ %368, %529 ]
  %54 = phi i32 [ -1, %10 ], [ %274, %529 ]
  %55 = phi i32 [ 0, %10 ], [ %273, %529 ]
  %56 = phi i32 [ 0, %10 ], [ %272, %529 ]
  %57 = phi i32 [ 0, %10 ], [ %271, %529 ]
  %58 = phi i32 [ 0, %10 ], [ %270, %529 ]
  %59 = phi i32 [ 0, %10 ], [ %269, %529 ]
  %60 = phi i32 [ 0, %10 ], [ %268, %529 ]
  %61 = call i32 @getc(ptr noundef %0) #32
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %536, label %63

63:                                               ; preds = %33
  %64 = shl i32 %34, 8
  %65 = or i32 %61, %64
  %66 = icmp eq i32 %46, 0
  %67 = icmp ugt i32 %37, 2
  %68 = and i1 %66, %67
  br i1 %68, label %69, label %73

69:                                               ; preds = %63
  %70 = and i32 %65, -16
  %71 = icmp eq i32 %70, -2555936
  %72 = add nuw nsw i32 %37, 2
  br i1 %71, label %86, label %114

73:                                               ; preds = %63
  br i1 %66, label %114, label %74

74:                                               ; preds = %73
  %75 = icmp eq i32 %43, %37
  br i1 %75, label %76, label %86

76:                                               ; preds = %74
  %77 = and i32 %65, -1048576
  %78 = icmp eq i32 %77, -2097152
  %79 = and i32 %65, -65536
  %80 = icmp eq i32 %79, -131072
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %86

82:                                               ; preds = %76
  %83 = and i32 %65, 65535
  %84 = add nuw i32 %37, 2
  %85 = add i32 %84, %83
  br label %86

86:                                               ; preds = %82, %76, %74, %69
  %87 = phi i32 [ %46, %82 ], [ %46, %74 ], [ %46, %76 ], [ %37, %69 ]
  %88 = phi i32 [ %85, %82 ], [ %43, %74 ], [ %37, %76 ], [ %72, %69 ]
  %89 = icmp slt i32 %88, %37
  %90 = sub nsw i32 %37, %87
  %91 = icmp slt i32 %90, 65536
  %92 = select i1 %89, i1 %91, i1 false
  %93 = icmp ugt i32 %34, -16777217
  %94 = select i1 %92, i1 %93, i1 false
  %95 = and i32 %65, -16776961
  %96 = icmp eq i32 %95, -1073741816
  %97 = select i1 %94, i1 %96, i1 false
  %98 = select i1 %97, i32 %37, i32 %45
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %114, label %100

100:                                              ; preds = %86
  %101 = icmp sgt i32 %98, %87
  %102 = select i1 %101, i1 %91, i1 false
  %103 = sub nsw i32 %37, %98
  %104 = icmp slt i32 %103, 4096
  %105 = select i1 %102, i1 %104, i1 false
  %106 = and i32 %65, 65535
  %107 = icmp eq i32 %106, 65498
  %108 = select i1 %105, i1 %107, i1 false
  br i1 %108, label %109, label %114

109:                                              ; preds = %100
  br i1 %11, label %114, label %110

110:                                              ; preds = %109
  %.lcssa = phi i32 [ %87, %109 ]
  %111 = zext i32 %.lcssa to i64
  %112 = add i64 %7, -3
  %113 = add i64 %112, %111
  br label %532

114:                                              ; preds = %109, %100, %86, %73, %69
  %115 = phi i32 [ %87, %109 ], [ %87, %100 ], [ %87, %86 ], [ 0, %73 ], [ 0, %69 ]
  %116 = phi i32 [ %98, %109 ], [ %98, %100 ], [ 0, %86 ], [ %45, %73 ], [ %45, %69 ]
  %117 = phi i32 [ %37, %109 ], [ %44, %100 ], [ %44, %86 ], [ %44, %73 ], [ %44, %69 ]
  %118 = phi i32 [ %88, %109 ], [ %88, %100 ], [ %88, %86 ], [ %43, %73 ], [ %43, %69 ]
  %119 = icmp eq i32 %117, 0
  %120 = select i1 %12, i1 true, i1 %119
  %121 = icmp sle i32 %37, %117
  %122 = select i1 %120, i1 true, i1 %121
  %123 = and i32 %65, 65280
  %124 = icmp ne i32 %123, 65280
  %125 = select i1 %122, i1 true, i1 %124
  %126 = and i32 %61, 255
  %127 = icmp eq i32 %126, 0
  %128 = or i1 %127, %125
  %129 = and i32 %61, 248
  %130 = icmp eq i32 %129, 208
  %131 = or i1 %130, %128
  br i1 %131, label %132, label %536

132:                                              ; preds = %114
  %133 = and i32 %65, 65535
  %134 = icmp eq i32 %133, 16973
  %135 = select i1 %134, i32 %37, i32 %60
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %267, label %137

137:                                              ; preds = %132
  %138 = sub nsw i32 %37, %135
  switch i32 %138, label %159 [
    i32 4, label %139
    i32 12, label %149
  ]

139:                                              ; preds = %137
  %140 = lshr i32 %65, 24
  %141 = lshr i32 %65, 8
  %142 = and i32 %141, 65280
  %143 = shl i32 %65, 8
  %144 = and i32 %143, 16711680
  %145 = shl i32 %61, 24
  %146 = or i32 %140, %145
  %147 = or i32 %146, %142
  %148 = or i32 %147, %144
  br label %164

149:                                              ; preds = %137
  %150 = lshr i32 %65, 24
  %151 = lshr i32 %65, 8
  %152 = and i32 %151, 65280
  %153 = shl i32 %65, 8
  %154 = and i32 %153, 16711680
  %155 = shl i32 %61, 24
  %156 = or i32 %150, %155
  %157 = or i32 %156, %152
  %158 = or i32 %157, %154
  br label %164

159:                                              ; preds = %137
  %160 = icmp eq i32 %138, 16
  %161 = icmp ne i32 %65, 671088640
  %162 = select i1 %160, i1 %161, i1 false
  br i1 %162, label %163, label %164

163:                                              ; preds = %159
  br label %164

164:                                              ; preds = %163, %159, %149, %139
  %165 = phi i32 [ %55, %163 ], [ %55, %159 ], [ %55, %139 ], [ %158, %149 ]
  %166 = phi i32 [ 0, %163 ], [ %135, %159 ], [ %135, %139 ], [ %135, %149 ]
  %167 = phi i32 [ 0, %163 ], [ %59, %159 ], [ %148, %139 ], [ %59, %149 ]
  %168 = phi i32 [ 0, %163 ], [ %58, %159 ], [ %58, %139 ], [ %58, %149 ]
  %169 = phi i32 [ -1, %163 ], [ %54, %159 ], [ %54, %139 ], [ %54, %149 ]
  %170 = sub nsw i32 %37, %166
  %171 = icmp eq i32 %170, 20
  br i1 %171, label %172, label %184

172:                                              ; preds = %164
  %173 = lshr i32 %65, 24
  %174 = lshr i32 %65, 8
  %175 = and i32 %174, 65280
  %176 = or i32 %175, %173
  %177 = shl i32 %65, 8
  %178 = and i32 %177, 16711680
  %179 = or i32 %176, %178
  %180 = shl i32 %61, 24
  %181 = or i32 %179, %180
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %172
  br label %184

184:                                              ; preds = %183, %172, %164
  %185 = phi i32 [ 0, %183 ], [ %166, %172 ], [ %166, %164 ]
  %186 = phi i32 [ 0, %183 ], [ %167, %172 ], [ %167, %164 ]
  %187 = phi i32 [ 0, %183 ], [ %168, %172 ], [ %168, %164 ]
  %188 = phi i32 [ 0, %183 ], [ %181, %172 ], [ %57, %164 ]
  %189 = phi i32 [ -1, %183 ], [ %169, %172 ], [ %169, %164 ]
  %190 = sub nsw i32 %37, %185
  %191 = icmp eq i32 %190, 24
  br i1 %191, label %192, label %204

192:                                              ; preds = %184
  %193 = lshr i32 %65, 24
  %194 = lshr i32 %65, 8
  %195 = and i32 %194, 65280
  %196 = or i32 %195, %193
  %197 = shl i32 %65, 8
  %198 = and i32 %197, 16711680
  %199 = or i32 %196, %198
  %200 = shl i32 %61, 24
  %201 = or i32 %199, %200
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %192
  br label %204

204:                                              ; preds = %203, %192, %184
  %205 = phi i32 [ 0, %203 ], [ %185, %192 ], [ %185, %184 ]
  %206 = phi i32 [ 0, %203 ], [ %186, %192 ], [ %186, %184 ]
  %207 = phi i32 [ 0, %203 ], [ %187, %192 ], [ %187, %184 ]
  %208 = phi i32 [ 0, %203 ], [ %201, %192 ], [ %56, %184 ]
  %209 = phi i32 [ -1, %203 ], [ %189, %192 ], [ %189, %184 ]
  %210 = sub nsw i32 %37, %205
  %211 = icmp eq i32 %210, 27
  %212 = select i1 %211, i32 %61, i32 %207
  %213 = icmp eq i32 %210, 31
  br i1 %213, label %214, label %217

214:                                              ; preds = %204
  %215 = icmp eq i32 %65, 0
  br i1 %215, label %217, label %216

216:                                              ; preds = %214
  br label %217

217:                                              ; preds = %216, %214, %204
  %218 = phi i32 [ 0, %216 ], [ %205, %214 ], [ %205, %204 ]
  %219 = phi i32 [ 0, %216 ], [ %206, %214 ], [ %206, %204 ]
  %220 = phi i32 [ 0, %216 ], [ %212, %214 ], [ %212, %204 ]
  %221 = phi i32 [ -1, %216 ], [ 0, %214 ], [ %209, %204 ]
  br i1 %14, label %222, label %245

222:                                              ; preds = %217
  %223 = icmp eq i32 %220, 4
  %224 = icmp eq i32 %220, 8
  %225 = or i1 %223, %224
  %226 = icmp eq i32 %220, 24
  %227 = or i1 %226, %225
  %228 = icmp eq i32 %221, 0
  %229 = select i1 %227, i1 %228, i1 false
  br i1 %229, label %230, label %245

230:                                              ; preds = %222
  %.lcssa16 = phi i32 [ %219, %222 ]
  %.lcssa12 = phi i32 [ %208, %222 ]
  %.lcssa8 = phi i32 [ %188, %222 ]
  %.lcssa4 = phi i32 [ %165, %222 ]
  %.lcssa3 = phi i1 [ %223, %222 ]
  %.lcssa2 = phi i1 [ %224, %222 ]
  %.lcssa1 = phi i1 [ %226, %222 ]
  %231 = mul nsw i32 %.lcssa12, %.lcssa8
  br i1 %.lcssa3, label %232, label %235

232:                                              ; preds = %230
  %233 = ashr i32 %231, 1
  %234 = add nsw i32 %233, %.lcssa4
  br label %241

235:                                              ; preds = %230
  %236 = add nsw i32 %231, %.lcssa4
  %237 = select i1 %.lcssa2, i32 %236, i32 %.lcssa16
  br i1 %.lcssa1, label %238, label %241

238:                                              ; preds = %235
  %239 = mul nsw i32 %231, 3
  %240 = add nsw i32 %239, %.lcssa4
  br label %241

241:                                              ; preds = %238, %235, %232
  %242 = phi i32 [ %237, %235 ], [ %240, %238 ], [ %234, %232 ]
  %243 = sext i32 %242 to i64
  %244 = add nsw i64 %7, %243
  br label %532

245:                                              ; preds = %222, %217
  %246 = icmp eq i32 %220, 4
  %247 = icmp eq i32 %221, 0
  %248 = select i1 %246, i1 %247, i1 false
  br i1 %248, label %249, label %253

249:                                              ; preds = %245
  %.lcssa21 = phi i32 [ %218, %245 ]
  %250 = sext i32 %.lcssa21 to i64
  %251 = add i64 %7, -1
  %252 = add i64 %251, %250
  br label %532

253:                                              ; preds = %245
  %254 = icmp eq i32 %220, 8
  %255 = select i1 %254, i1 %247, i1 false
  br i1 %255, label %256, label %260

256:                                              ; preds = %253
  %.lcssa22 = phi i32 [ %218, %253 ]
  %257 = sext i32 %.lcssa22 to i64
  %258 = add i64 %7, -1
  %259 = add i64 %258, %257
  br label %532

260:                                              ; preds = %253
  %261 = icmp eq i32 %220, 24
  %262 = select i1 %261, i1 %247, i1 false
  br i1 %262, label %263, label %267

263:                                              ; preds = %260
  %.lcssa23 = phi i32 [ %218, %260 ]
  %264 = sext i32 %.lcssa23 to i64
  %265 = add i64 %7, -1
  %266 = add i64 %265, %264
  br label %532

267:                                              ; preds = %260, %132
  %268 = phi i32 [ %218, %260 ], [ 0, %132 ]
  %269 = phi i32 [ %219, %260 ], [ %59, %132 ]
  %270 = phi i32 [ %220, %260 ], [ %58, %132 ]
  %271 = phi i32 [ %188, %260 ], [ %57, %132 ]
  %272 = phi i32 [ %208, %260 ], [ %56, %132 ]
  %273 = phi i32 [ %165, %260 ], [ %55, %132 ]
  %274 = phi i32 [ %221, %260 ], [ %54, %132 ]
  %275 = and i32 %65, 16777215
  %276 = icmp eq i32 %275, 5256458
  %277 = select i1 %276, i32 %37, i32 %53
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %367, label %279

279:                                              ; preds = %267
  %280 = sub nsw i32 %37, %277
  %281 = icmp eq i32 %280, 1
  %282 = icmp eq i32 %61, 35
  %283 = and i1 %282, %281
  %284 = select i1 %283, i32 1, i32 %51
  %285 = icmp eq i32 %284, 0
  %286 = icmp eq i32 %61, 32
  %287 = and i1 %286, %285
  %288 = icmp eq i32 %50, 0
  %289 = select i1 %287, i1 %288, i1 false
  %290 = icmp ne i32 %48, 0
  %291 = select i1 %289, i1 %290, i1 false
  br i1 %291, label %292, label %298

292:                                              ; preds = %279
  %293 = sext i32 %48 to i64
  %294 = getelementptr inbounds [32 x i8], ptr %6, i64 0, i64 %293
  store i8 0, ptr %294, align 1, !tbaa !27
  %295 = call i32 @atoi(ptr nocapture noundef nonnull %6) #38
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %292
  br label %298

298:                                              ; preds = %297, %292, %279
  %299 = phi i32 [ %277, %279 ], [ 0, %297 ], [ %277, %292 ]
  %300 = phi i32 [ %50, %279 ], [ 0, %297 ], [ %295, %292 ]
  %301 = phi i32 [ %49, %279 ], [ 0, %297 ], [ %49, %292 ]
  %302 = phi i32 [ %48, %279 ], [ 0, %297 ], [ 0, %292 ]
  %303 = phi i32 [ %47, %279 ], [ 0, %297 ], [ %47, %292 ]
  %304 = icmp eq i32 %284, 0
  %305 = icmp eq i32 %61, 10
  %306 = and i1 %305, %304
  %307 = icmp eq i32 %301, 0
  %308 = select i1 %306, i1 %307, i1 false
  %309 = icmp ne i32 %302, 0
  %310 = select i1 %308, i1 %309, i1 false
  br i1 %310, label %311, label %317

311:                                              ; preds = %298
  %312 = sext i32 %302 to i64
  %313 = getelementptr inbounds [32 x i8], ptr %6, i64 0, i64 %312
  store i8 0, ptr %313, align 1, !tbaa !27
  %314 = call i32 @atoi(ptr nocapture noundef nonnull %6) #38
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %326

316:                                              ; preds = %311
  br label %326

317:                                              ; preds = %298
  %318 = icmp eq i32 %303, 0
  %319 = select i1 %306, i1 %318, i1 false
  %320 = select i1 %319, i1 %309, i1 false
  br i1 %320, label %321, label %325

321:                                              ; preds = %317
  %322 = sext i32 %302 to i64
  %323 = getelementptr inbounds [32 x i8], ptr %6, i64 0, i64 %322
  store i8 0, ptr %323, align 1, !tbaa !27
  %324 = call i32 @atoi(ptr nocapture noundef nonnull %6) #38
  br label %326

325:                                              ; preds = %317
  br i1 %304, label %326, label %336

326:                                              ; preds = %325, %321, %316, %311
  %327 = phi i32 [ %303, %325 ], [ %324, %321 ], [ %303, %311 ], [ 0, %316 ]
  %328 = phi i32 [ %302, %325 ], [ 0, %321 ], [ 0, %311 ], [ 0, %316 ]
  %329 = phi i32 [ %299, %325 ], [ %299, %321 ], [ %299, %311 ], [ 0, %316 ]
  %330 = phi i32 [ %300, %325 ], [ %300, %321 ], [ %300, %311 ], [ 0, %316 ]
  %331 = phi i32 [ %301, %325 ], [ %301, %321 ], [ %314, %311 ], [ 0, %316 ]
  %332 = trunc i32 %61 to i8
  %333 = add nsw i32 %328, 1
  %334 = sext i32 %328 to i64
  %335 = getelementptr inbounds [32 x i8], ptr %6, i64 0, i64 %334
  store i8 %332, ptr %335, align 1, !tbaa !27
  br label %336

336:                                              ; preds = %326, %325
  %337 = phi i32 [ %303, %325 ], [ %327, %326 ]
  %338 = phi i32 [ %299, %325 ], [ %329, %326 ]
  %339 = phi i32 [ %300, %325 ], [ %330, %326 ]
  %340 = phi i32 [ %301, %325 ], [ %331, %326 ]
  %341 = phi i32 [ %302, %325 ], [ %333, %326 ]
  %342 = icmp sgt i32 %341, 31
  br i1 %342, label %367, label %343

343:                                              ; preds = %336
  %344 = icmp ne i32 %339, 0
  %345 = select i1 %15, i1 %344, i1 false
  %346 = icmp ne i32 %340, 0
  %347 = select i1 %345, i1 %346, i1 false
  %348 = icmp ne i32 %337, 0
  %349 = select i1 %347, i1 %348, i1 false
  br i1 %349, label %350, label %357

350:                                              ; preds = %343
  %.lcssa40 = phi i32 [ %37, %343 ]
  %.lcssa28 = phi i32 [ %338, %343 ]
  %.lcssa26 = phi i32 [ %339, %343 ]
  %.lcssa24 = phi i32 [ %340, %343 ]
  %351 = mul nsw i32 %.lcssa24, %.lcssa26
  %352 = add nsw i32 %.lcssa40, -1
  %353 = add i32 %352, %.lcssa28
  %354 = add i32 %353, %351
  %355 = sext i32 %354 to i64
  %356 = add nsw i64 %7, %355
  br label %532

357:                                              ; preds = %343
  %358 = icmp ne i32 %284, 0
  %359 = and i1 %305, %358
  %360 = select i1 %359, i32 0, i32 %284
  %361 = select i1 %344, i1 %346, i1 false
  %362 = select i1 %361, i1 %348, i1 false
  br i1 %362, label %363, label %367

363:                                              ; preds = %357
  %.lcssa29 = phi i32 [ %338, %357 ]
  %364 = sext i32 %.lcssa29 to i64
  %365 = add i64 %7, -2
  %366 = add i64 %365, %364
  br label %532

367:                                              ; preds = %357, %336, %267
  %368 = phi i32 [ %338, %357 ], [ 0, %267 ], [ 0, %336 ]
  %369 = phi i32 [ %360, %357 ], [ %51, %267 ], [ 0, %336 ]
  %370 = phi i32 [ %339, %357 ], [ %50, %267 ], [ 0, %336 ]
  %371 = phi i32 [ %340, %357 ], [ %49, %267 ], [ 0, %336 ]
  %372 = phi i32 [ %341, %357 ], [ %48, %267 ], [ 0, %336 ]
  %373 = phi i32 [ %337, %357 ], [ %47, %267 ], [ 0, %336 ]
  %374 = icmp eq i32 %133, 474
  %375 = select i1 %374, i32 %37, i32 %42
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %471, label %377

377:                                              ; preds = %367
  %378 = sub nsw i32 %37, %375
  %379 = icmp eq i32 %378, 1
  br i1 %379, label %380, label %386

380:                                              ; preds = %377
  %381 = icmp ult i32 %61, 2
  %382 = select i1 %381, i32 %375, i32 0
  %383 = select i1 %381, i32 %61, i32 -1
  %384 = select i1 %381, i32 %40, i32 0
  %385 = select i1 %381, i32 %39, i32 0
  br label %386

386:                                              ; preds = %380, %377
  %387 = phi i32 [ %375, %377 ], [ %382, %380 ]
  %388 = phi i32 [ %41, %377 ], [ %383, %380 ]
  %389 = phi i32 [ %40, %377 ], [ %384, %380 ]
  %390 = phi i32 [ %39, %377 ], [ %385, %380 ]
  %391 = sub nsw i32 %37, %387
  %392 = icmp eq i32 %391, 2
  br i1 %392, label %393, label %400

393:                                              ; preds = %386
  %394 = add i32 %61, -1
  %395 = icmp ult i32 %394, 2
  %396 = select i1 %395, i32 %387, i32 0
  %397 = select i1 %395, i32 %388, i32 -1
  %398 = select i1 %395, i32 %389, i32 0
  %399 = select i1 %395, i32 %390, i32 0
  br label %400

400:                                              ; preds = %393, %386
  %401 = phi i32 [ %387, %386 ], [ %396, %393 ]
  %402 = phi i32 [ %388, %386 ], [ %397, %393 ]
  %403 = phi i32 [ %389, %386 ], [ %398, %393 ]
  %404 = phi i32 [ %390, %386 ], [ %399, %393 ]
  %405 = sub nsw i32 %37, %401
  %406 = icmp ne i32 %405, 4
  %407 = add nsw i32 %133, -1
  %408 = icmp ult i32 %407, 3
  %409 = or i1 %408, %406
  br i1 %409, label %411, label %410

410:                                              ; preds = %400
  br label %411

411:                                              ; preds = %410, %400
  %412 = phi i32 [ 0, %410 ], [ %401, %400 ]
  %413 = phi i32 [ -1, %410 ], [ %402, %400 ]
  %414 = phi i32 [ 0, %410 ], [ %403, %400 ]
  %415 = phi i32 [ 0, %410 ], [ %404, %400 ]
  %416 = sub nsw i32 %37, %412
  %417 = icmp eq i32 %416, 6
  br i1 %417, label %418, label %423

418:                                              ; preds = %411
  %419 = icmp eq i32 %133, 0
  %420 = select i1 %419, i32 0, i32 %412
  %421 = select i1 %419, i32 -1, i32 %413
  %422 = select i1 %419, i32 0, i32 %414
  br label %423

423:                                              ; preds = %418, %411
  %424 = phi i32 [ %412, %411 ], [ %420, %418 ]
  %425 = phi i32 [ %413, %411 ], [ %421, %418 ]
  %426 = phi i32 [ %414, %411 ], [ %422, %418 ]
  %427 = phi i32 [ %415, %411 ], [ %133, %418 ]
  %428 = sub nsw i32 %37, %424
  %429 = icmp eq i32 %428, 8
  br i1 %429, label %430, label %435

430:                                              ; preds = %423
  %431 = icmp eq i32 %133, 0
  br i1 %431, label %435, label %432

432:                                              ; preds = %430
  %433 = mul nuw nsw i32 %427, %133
  %434 = add nuw nsw i32 %433, 512
  br label %435

435:                                              ; preds = %432, %430, %423
  %436 = phi i32 [ %424, %432 ], [ %424, %423 ], [ 0, %430 ]
  %437 = phi i32 [ %425, %432 ], [ %425, %423 ], [ -1, %430 ]
  %438 = phi i32 [ %426, %432 ], [ %426, %423 ], [ 0, %430 ]
  %439 = phi i32 [ %427, %432 ], [ %427, %423 ], [ 0, %430 ]
  %440 = phi i32 [ %434, %432 ], [ %38, %423 ], [ %38, %430 ]
  %441 = sub nsw i32 %37, %436
  %442 = icmp eq i32 %441, 10
  br i1 %442, label %443, label %446

443:                                              ; preds = %435
  %444 = trunc i32 %65 to i16
  switch i16 %444, label %445 [
    i16 1, label %446
    i16 3, label %446
    i16 4, label %446
  ]

445:                                              ; preds = %443
  br label %446

446:                                              ; preds = %445, %443, %443, %443, %435
  %447 = phi i32 [ 0, %445 ], [ %436, %435 ], [ %436, %443 ], [ %436, %443 ], [ %436, %443 ]
  %448 = phi i32 [ -1, %445 ], [ %437, %435 ], [ %437, %443 ], [ %437, %443 ], [ %437, %443 ]
  %449 = phi i32 [ 0, %445 ], [ %438, %435 ], [ %133, %443 ], [ %133, %443 ], [ %133, %443 ]
  %450 = phi i32 [ 0, %445 ], [ %439, %435 ], [ %439, %443 ], [ %439, %443 ], [ %439, %443 ]
  %451 = icmp eq i32 %440, 0
  br i1 %451, label %471, label %452

452:                                              ; preds = %446
  %453 = sub nsw i32 %37, %447
  %454 = icmp sgt i32 %453, 0
  %455 = icmp sgt i32 %453, %440
  %456 = select i1 %454, i1 %455, i1 false
  br i1 %456, label %457, label %471

457:                                              ; preds = %452
  %458 = icmp eq i32 %449, 1
  %459 = select i1 %16, i1 %458, i1 false
  %460 = icmp eq i32 %448, 0
  %461 = select i1 %459, i1 %460, i1 false
  br i1 %461, label %462, label %465

462:                                              ; preds = %457
  %.lcssa30 = phi i32 [ %440, %457 ]
  %463 = sext i32 %.lcssa30 to i64
  %464 = add nsw i64 %7, %463
  br label %532

465:                                              ; preds = %457
  %466 = select i1 %458, i1 %460, i1 false
  br i1 %466, label %467, label %471

467:                                              ; preds = %465
  %.lcssa33 = phi i32 [ %447, %465 ]
  %468 = sext i32 %.lcssa33 to i64
  %469 = add i64 %7, -1
  %470 = add i64 %469, %468
  br label %532

471:                                              ; preds = %465, %452, %446, %367
  %472 = phi i32 [ %447, %465 ], [ %447, %452 ], [ %447, %446 ], [ 0, %367 ]
  %473 = phi i32 [ %448, %465 ], [ %448, %452 ], [ %448, %446 ], [ %41, %367 ]
  %474 = phi i32 [ %449, %465 ], [ %449, %452 ], [ %449, %446 ], [ %40, %367 ]
  %475 = phi i32 [ %450, %465 ], [ %450, %452 ], [ %450, %446 ], [ %39, %367 ]
  %476 = phi i32 [ %440, %465 ], [ %440, %452 ], [ 0, %446 ], [ %38, %367 ]
  %477 = and i32 %34, -33554432
  %478 = icmp eq i32 %477, -402653184
  br i1 %478, label %479, label %519

479:                                              ; preds = %471
  %480 = add nuw i32 %61, 1
  %481 = and i32 %480, 254
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %483, label %519

483:                                              ; preds = %479
  %484 = lshr i32 %65, 24
  %485 = add nuw i32 %484, %37
  %486 = and i32 %485, 255
  %487 = load ptr, ptr %17, align 8, !tbaa !58
  %488 = zext i32 %484 to i64
  %489 = getelementptr inbounds i32, ptr %487, i64 %488
  %490 = load i32, ptr %489, align 4, !tbaa !18
  %491 = load ptr, ptr %18, align 8, !tbaa !58
  %492 = zext i32 %486 to i64
  %493 = getelementptr inbounds i32, ptr %491, i64 %492
  %494 = load i32, ptr %493, align 4, !tbaa !18
  %495 = sub nsw i32 %37, %494
  %496 = icmp slt i32 %490, %494
  %497 = icmp slt i32 %495, 4096
  %498 = select i1 %496, i1 %497, i1 false
  %499 = icmp sgt i32 %494, 5
  %500 = and i1 %499, %498
  br i1 %500, label %501, label %515

501:                                              ; preds = %483
  %502 = add nsw i32 %35, 1
  %503 = icmp eq i32 %36, 0
  %504 = icmp sgt i32 %36, %494
  %505 = or i1 %503, %504
  %506 = select i1 %505, i32 %494, i32 %36
  %507 = icmp sgt i32 %35, 2
  %508 = select i1 %19, i1 %507, i1 false
  %509 = icmp sgt i32 %506, 5
  %510 = select i1 %508, i1 %509, i1 false
  br i1 %510, label %511, label %515

511:                                              ; preds = %501
  %.lcssa34 = phi i32 [ %506, %501 ]
  %512 = zext i32 %.lcssa34 to i64
  %513 = add i64 %7, -5
  %514 = add i64 %513, %512
  br label %532

515:                                              ; preds = %501, %483
  %516 = phi i32 [ %502, %501 ], [ 0, %483 ]
  %517 = phi i32 [ %506, %501 ], [ %36, %483 ]
  %518 = phi i32 [ %37, %501 ], [ %52, %483 ]
  store i32 %37, ptr %493, align 4, !tbaa !18
  store i32 %37, ptr %489, align 4, !tbaa !18
  br label %519

519:                                              ; preds = %515, %479, %471
  %520 = phi i32 [ %518, %515 ], [ %52, %479 ], [ %52, %471 ]
  %521 = phi i32 [ %517, %515 ], [ %36, %479 ], [ %36, %471 ]
  %522 = phi i32 [ %516, %515 ], [ %35, %479 ], [ %35, %471 ]
  %523 = sub nsw i32 %37, %520
  %524 = icmp sgt i32 %523, 4096
  %525 = select i1 %20, i1 %524, i1 false
  br i1 %525, label %526, label %529

526:                                              ; preds = %519
  %.lcssa46 = phi i32 [ %520, %519 ]
  %527 = sext i32 %.lcssa46 to i64
  %528 = add nsw i64 %7, %527
  br label %532

529:                                              ; preds = %519
  %530 = add nuw nsw i32 %37, 1
  %531 = icmp eq i32 %530, %1
  br i1 %531, label %536, label %33, !llvm.loop !212

532:                                              ; preds = %526, %511, %467, %462, %363, %350, %263, %256, %249, %241, %110
  %533 = phi i64 [ %514, %511 ], [ %528, %526 ], [ %470, %467 ], [ %464, %462 ], [ %366, %363 ], [ %356, %350 ], [ %266, %263 ], [ %259, %256 ], [ %252, %249 ], [ %244, %241 ], [ %113, %110 ]
  %534 = phi i32 [ 8, %511 ], [ 0, %526 ], [ 7, %467 ], [ 0, %462 ], [ 6, %363 ], [ 0, %350 ], [ 4, %263 ], [ 3, %256 ], [ 2, %249 ], [ 0, %241 ], [ 1, %110 ]
  %535 = call i32 @fseek(ptr noundef %0, i64 noundef %533, i32 noundef 0) #32
  br label %536

536:                                              ; preds = %532, %529, %114, %33, %8
  %537 = phi i32 [ %2, %8 ], [ %534, %532 ], [ %2, %529 ], [ -1, %33 ], [ 0, %114 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #33
  %538 = load i32, ptr %5, align 8, !tbaa !48
  %539 = load i32, ptr @programChecker, align 8, !tbaa !7
  %540 = shl i32 %538, 2
  %541 = sub i32 %539, %540
  store i32 %541, ptr @programChecker, align 8, !tbaa !7
  %542 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %543 = icmp sgt i32 %541, %542
  br i1 %543, label %544, label %545

544:                                              ; preds = %536
  store i32 %541, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %545

545:                                              ; preds = %544, %536
  %546 = getelementptr inbounds %class.Array, ptr %5, i64 0, i32 2
  %547 = load ptr, ptr %546, align 8, !tbaa !49
  call void @free(ptr noundef %547) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #33
  %548 = load i32, ptr %4, align 8, !tbaa !48
  %549 = load i32, ptr @programChecker, align 8, !tbaa !7
  %550 = shl i32 %548, 2
  %551 = sub i32 %549, %550
  store i32 %551, ptr @programChecker, align 8, !tbaa !7
  %552 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %553 = icmp sgt i32 %551, %552
  br i1 %553, label %554, label %555

554:                                              ; preds = %545
  store i32 %551, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %555

555:                                              ; preds = %554, %545
  %556 = getelementptr inbounds %class.Array, ptr %4, i64 0, i32 2
  %557 = load ptr, ptr %556, align 8, !tbaa !49
  call void @free(ptr noundef %557) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #33
  ret i32 %537
}

; Function Attrs: nofree nounwind optsize
declare noundef i64 @ftell(ptr nocapture noundef) local_unnamed_addr #17

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fseek(ptr nocapture noundef, i64 noundef, i32 noundef) local_unnamed_addr #17

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal void @_Z14encode_defaultP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) #23 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0) #32
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1) #32
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !213

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @putc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #17

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #7 comdat align 2 {
  %2 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 4, !tbaa !202
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 6
  br label %20

7:                                                ; preds = %1
  %8 = load i32, ptr @level, align 4, !tbaa !18
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 2
  br label %20

12:                                               ; preds = %12, %7
  %13 = phi i32 [ %18, %12 ], [ 0, %7 ]
  %14 = phi i32 [ %17, %12 ], [ 0, %7 ]
  %15 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0) #32
  %16 = shl i32 %14, 1
  %17 = add i32 %15, %16
  %18 = add nuw nsw i32 %13, 1
  %19 = icmp eq i32 %18, 8
  br i1 %19, label %24, label %12, !llvm.loop !214

20:                                               ; preds = %10, %5
  %21 = phi ptr [ %11, %10 ], [ %6, %5 ]
  %22 = load ptr, ptr %21, align 8, !tbaa !38
  %23 = tail call i32 @getc(ptr noundef %22) #32
  br label %24

24:                                               ; preds = %20, %12
  %25 = phi i32 [ %23, %20 ], [ %17, %12 ]
  ret i32 %25
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = load i32, ptr %0, align 8, !tbaa !200
  %4 = icmp slt i32 %3, 2048
  %5 = zext i1 %4 to i32
  %6 = add nsw i32 %3, %5
  %7 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 3
  %8 = load i32, ptr %7, align 8, !tbaa !206
  %9 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 4
  %10 = load i32, ptr %9, align 4, !tbaa !207
  %11 = sub i32 %10, %8
  %12 = lshr i32 %11, 12
  %13 = mul i32 %12, %6
  %14 = add i32 %13, %8
  %15 = and i32 %11, 4095
  %16 = mul i32 %15, %6
  %17 = lshr i32 %16, 12
  %18 = add i32 %14, %17
  %19 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 1
  %20 = load i32, ptr %19, align 4, !tbaa !202
  %21 = icmp eq i32 %20, 1
  %22 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 5
  %23 = load i32, ptr %22, align 8
  %24 = icmp ule i32 %23, %18
  %25 = zext i1 %24 to i32
  %26 = select i1 %21, i32 %25, i32 %1
  store i32 %26, ptr @y, align 4, !tbaa !18
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %2
  store i32 %18, ptr %9, align 4, !tbaa !207
  br label %31

29:                                               ; preds = %2
  %30 = add i32 %18, 1
  store i32 %30, ptr %7, align 8, !tbaa !206
  br label %31

31:                                               ; preds = %29, %28
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %0) #32
  %32 = load i32, ptr %7, align 8, !tbaa !206
  %33 = load i32, ptr %9, align 4, !tbaa !207
  %34 = xor i32 %33, %32
  %35 = icmp ult i32 %34, 16777216
  br i1 %35, label %36, label %72

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 2
  br label %38

38:                                               ; preds = %67, %36
  %39 = phi i32 [ %32, %36 ], [ %69, %67 ]
  %40 = phi i32 [ %33, %36 ], [ %68, %67 ]
  %41 = load i32, ptr %19, align 4, !tbaa !202
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = lshr i32 %40, 24
  %45 = load ptr, ptr %37, align 8, !tbaa !205
  %46 = tail call i32 @putc(i32 noundef %44, ptr noundef %45) #32
  %47 = load i32, ptr %7, align 8, !tbaa !206
  %48 = load i32, ptr %9, align 4, !tbaa !207
  %49 = load i32, ptr %19, align 4, !tbaa !202
  br label %50

50:                                               ; preds = %43, %38
  %51 = phi i32 [ %49, %43 ], [ %41, %38 ]
  %52 = phi i32 [ %48, %43 ], [ %40, %38 ]
  %53 = phi i32 [ %47, %43 ], [ %39, %38 ]
  %54 = shl i32 %53, 8
  store i32 %54, ptr %7, align 8, !tbaa !206
  %55 = shl i32 %52, 8
  %56 = or i32 %55, 255
  store i32 %56, ptr %9, align 4, !tbaa !207
  %57 = icmp eq i32 %51, 1
  br i1 %57, label %58, label %67

58:                                               ; preds = %50
  %59 = load i32, ptr %22, align 8, !tbaa !208
  %60 = shl i32 %59, 8
  %61 = load ptr, ptr %37, align 8, !tbaa !205
  %62 = tail call i32 @getc(ptr noundef %61) #32
  %63 = and i32 %62, 255
  %64 = or i32 %63, %60
  store i32 %64, ptr %22, align 8, !tbaa !208
  %65 = load i32, ptr %7, align 8, !tbaa !206
  %66 = load i32, ptr %9, align 4, !tbaa !207
  br label %67

67:                                               ; preds = %58, %50
  %68 = phi i32 [ %66, %58 ], [ %56, %50 ]
  %69 = phi i32 [ %65, %58 ], [ %54, %50 ]
  %70 = xor i32 %68, %69
  %71 = icmp ult i32 %70, 16777216
  br i1 %71, label %38, label %72, !llvm.loop !215

72:                                               ; preds = %67, %31
  %73 = load i32, ptr @y, align 4, !tbaa !18
  ret i32 %73
}

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal void @_Z11encode_jpegP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) #23 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0) #32
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1) #32
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !216

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal void @_Z10encode_bmpP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) #23 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0) #32
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1) #32
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !217

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal void @_Z10encode_pgmP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) #23 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0) #32
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1) #32
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !218

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal void @_Z10encode_rgbP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) #23 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0) #32
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1) #32
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !219

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: optsize uwtable
define internal void @_Z10encode_exeP8_IO_FILES0_ii(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2, i32 noundef %3) #0 personality ptr @__gxx_personality_v0 {
  %5 = alloca %class.Array, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #33
  call void @_ZN5ArrayIhLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef 65536) #32
  %6 = ashr i32 %2, 24
  %7 = ashr i32 %2, 16
  %8 = ashr i32 %2, 8
  %9 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.17, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %2) #32
  %10 = ashr i32 %3, 24
  %11 = ashr i32 %3, 16
  %12 = ashr i32 %3, 8
  %13 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.17, i32 noundef %10, i32 noundef %11, i32 noundef %12, i32 noundef %3) #32
  %14 = icmp sgt i32 %2, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.Array, ptr %5, i64 0, i32 3
  br label %27

17:                                               ; preds = %55, %4
  %18 = load i32, ptr %5, align 8, !tbaa !23
  %19 = load i32, ptr @programChecker, align 8, !tbaa !7
  %20 = sub i32 %19, %18
  store i32 %20, ptr @programChecker, align 8, !tbaa !7
  %21 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %22 = icmp sgt i32 %20, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  store i32 %20, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %24

24:                                               ; preds = %23, %17
  %25 = getelementptr inbounds %class.Array, ptr %5, i64 0, i32 2
  %26 = load ptr, ptr %25, align 8, !tbaa !25
  call void @free(ptr noundef %26) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #33
  ret void

27:                                               ; preds = %55, %15
  %28 = phi i32 [ 0, %15 ], [ %60, %55 ]
  %29 = sub nsw i32 %2, %28
  %30 = call i32 @llvm.smin.i32(i32 %29, i32 65536)
  %31 = load ptr, ptr %16, align 8, !tbaa !26
  %32 = sext i32 %30 to i64
  %33 = call i64 @fread(ptr noundef nonnull %31, i64 noundef 1, i64 noundef %32, ptr noundef %0) #32
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %30, %34
  br i1 %35, label %36, label %41

36:                                               ; preds = %27
  %37 = icmp sgt i32 %30, 4
  br i1 %37, label %38, label %55

38:                                               ; preds = %36
  %39 = add i32 %28, %3
  %40 = zext i32 %30 to i64
  br label %62

41:                                               ; preds = %27
  %42 = call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.18, ptr %42, align 16, !tbaa !38
  invoke void @__cxa_throw(ptr nonnull %42, ptr nonnull @_ZTIPKc, ptr null) #35
          to label %43 unwind label %44

43:                                               ; preds = %41
  unreachable

44:                                               ; preds = %41
  %45 = landingpad { ptr, i32 }
          cleanup
  %46 = load i32, ptr %5, align 8, !tbaa !23
  %47 = load i32, ptr @programChecker, align 8, !tbaa !7
  %48 = sub i32 %47, %46
  store i32 %48, ptr @programChecker, align 8, !tbaa !7
  %49 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %50 = icmp sgt i32 %48, %49
  br i1 %50, label %51, label %52

51:                                               ; preds = %44
  store i32 %48, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %52

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %class.Array, ptr %5, i64 0, i32 2
  %54 = load ptr, ptr %53, align 8, !tbaa !25
  call void @free(ptr noundef %54) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #33
  resume { ptr, i32 } %45

55:                                               ; preds = %116, %36
  %56 = load ptr, ptr %16, align 8, !tbaa !26
  %57 = shl i64 %33, 32
  %58 = ashr exact i64 %57, 32
  %59 = call i64 @fwrite(ptr noundef nonnull %56, i64 noundef 1, i64 noundef %58, ptr noundef %1) #32
  %60 = add nuw nsw i32 %28, 65536
  %61 = icmp slt i32 %60, %2
  br i1 %61, label %27, label %17, !llvm.loop !220

62:                                               ; preds = %116, %38
  %63 = phi i64 [ %40, %38 ], [ %65, %116 ]
  %64 = trunc i64 %63 to i32
  %65 = add nsw i64 %63, -1
  %66 = add nuw i64 %63, 4294967291
  %67 = load ptr, ptr %16, align 8, !tbaa !26
  %68 = and i64 %66, 4294967295
  %69 = getelementptr inbounds i8, ptr %67, i64 %68
  %70 = load i8, ptr %69, align 1, !tbaa !27
  %71 = and i8 %70, -2
  %72 = icmp eq i8 %71, -24
  br i1 %72, label %73, label %116

73:                                               ; preds = %62
  %74 = and i64 %65, 4294967295
  %75 = getelementptr inbounds i8, ptr %67, i64 %74
  %76 = load i8, ptr %75, align 1, !tbaa !27
  switch i8 %76, label %116 [
    i8 0, label %77
    i8 -1, label %77
  ]

77:                                               ; preds = %73, %73
  %78 = add nuw i64 %63, 4294967292
  %79 = and i64 %78, 4294967295
  %80 = getelementptr inbounds i8, ptr %67, i64 %79
  %81 = load i8, ptr %80, align 1, !tbaa !27
  %82 = zext i8 %81 to i32
  %83 = add nuw i64 %63, 4294967293
  %84 = and i64 %83, 4294967295
  %85 = getelementptr inbounds i8, ptr %67, i64 %84
  %86 = load i8, ptr %85, align 1, !tbaa !27
  %87 = zext i8 %86 to i32
  %88 = shl nuw nsw i32 %87, 8
  %89 = add nuw i64 %63, 4294967294
  %90 = and i64 %89, 4294967295
  %91 = getelementptr inbounds i8, ptr %67, i64 %90
  %92 = load i8, ptr %91, align 1, !tbaa !27
  %93 = zext i8 %92 to i32
  %94 = shl nuw nsw i32 %93, 16
  %95 = zext i8 %76 to i32
  %96 = shl nuw i32 %95, 24
  %97 = or i32 %96, %82
  %98 = or i32 %97, %88
  %99 = or i32 %98, %94
  %100 = add i32 %39, %64
  %101 = add i32 %100, %99
  %102 = shl i32 %101, 7
  %103 = ashr i32 %102, 31
  %104 = trunc i32 %103 to i8
  store i8 %104, ptr %75, align 1, !tbaa !27
  %105 = lshr i32 %102, 23
  %106 = trunc i32 %105 to i8
  %107 = load ptr, ptr %16, align 8, !tbaa !26
  %108 = getelementptr inbounds i8, ptr %107, i64 %90
  store i8 %106, ptr %108, align 1, !tbaa !27
  %109 = lshr i32 %102, 15
  %110 = trunc i32 %109 to i8
  %111 = load ptr, ptr %16, align 8, !tbaa !26
  %112 = getelementptr inbounds i8, ptr %111, i64 %84
  store i8 %110, ptr %112, align 1, !tbaa !27
  %113 = trunc i32 %101 to i8
  %114 = load ptr, ptr %16, align 8, !tbaa !26
  %115 = getelementptr inbounds i8, ptr %114, i64 %79
  store i8 %113, ptr %115, align 1, !tbaa !27
  br label %116

116:                                              ; preds = %77, %73, %62
  %117 = icmp ugt i64 %63, 5
  br i1 %117, label %62, label %55, !llvm.loop !221
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #17

; Function Attrs: nofree nounwind optsize
declare noundef i64 @fread(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #17

; Function Attrs: nofree nounwind optsize
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #17

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_Z10decode_exeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) #7 {
  %2 = load i32, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !18
  %3 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !18
  %4 = icmp eq i32 %2, %3
  %5 = load i32, ptr @_ZZ10decode_exeR7EncoderE1q, align 4
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %15, label %8

8:                                                ; preds = %15, %1
  %9 = phi i32 [ %3, %1 ], [ %43, %15 ]
  %10 = phi i32 [ %2, %1 ], [ %42, %15 ]
  %11 = phi i32 [ %5, %1 ], [ %45, %15 ]
  %12 = icmp slt i32 %10, %9
  %13 = icmp slt i32 %11, 5
  %14 = select i1 %12, i1 %13, i1 false
  br i1 %14, label %48, label %60

15:                                               ; preds = %15, %1
  store i32 0, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !18
  %16 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  %17 = shl i32 %16, 24
  store i32 %17, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !18
  %18 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  %19 = shl i32 %18, 16
  %20 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !18
  %21 = or i32 %20, %19
  store i32 %21, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !18
  %22 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  %23 = shl i32 %22, 8
  %24 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !18
  %25 = or i32 %24, %23
  store i32 %25, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !18
  %26 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  %27 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !18
  %28 = or i32 %27, %26
  store i32 %28, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !18
  %29 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  %30 = shl i32 %29, 24
  store i32 %30, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !18
  %31 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  %32 = shl i32 %31, 16
  %33 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !18
  %34 = or i32 %33, %32
  store i32 %34, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !18
  %35 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  %36 = shl i32 %35, 8
  %37 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !18
  %38 = or i32 %37, %36
  store i32 %38, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !18
  %39 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  %40 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !18
  %41 = or i32 %40, %39
  store i32 %41, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !18
  %42 = load i32, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !18
  %43 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !18
  %44 = icmp eq i32 %42, %43
  %45 = load i32, ptr @_ZZ10decode_exeR7EncoderE1q, align 4
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %44, i1 %46, i1 false
  br i1 %47, label %15, label %8, !llvm.loop !222

48:                                               ; preds = %48, %8
  %49 = load i32, ptr @_ZZ10decode_exeR7EncoderE1c, align 4
  store i32 %49, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), align 1
  %50 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  %51 = trunc i32 %50 to i8
  store i8 %51, ptr @_ZZ10decode_exeR7EncoderE1c, align 4, !tbaa !27
  %52 = load i32, ptr @_ZZ10decode_exeR7EncoderE1q, align 4, !tbaa !18
  %53 = add nsw i32 %52, 1
  store i32 %53, ptr @_ZZ10decode_exeR7EncoderE1q, align 4, !tbaa !18
  %54 = load i32, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !18
  %55 = add nsw i32 %54, 1
  store i32 %55, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !18
  %56 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !18
  %57 = icmp slt i32 %55, %56
  %58 = icmp slt i32 %52, 4
  %59 = select i1 %57, i1 %58, i1 false
  br i1 %59, label %48, label %60, !llvm.loop !223

60:                                               ; preds = %48, %8
  %61 = phi i32 [ %11, %8 ], [ %53, %48 ]
  %62 = phi i32 [ %10, %8 ], [ %55, %48 ]
  %63 = icmp eq i32 %61, 5
  br i1 %63, label %64, label %102

64:                                               ; preds = %60
  %65 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 4), align 4
  %66 = and i8 %65, -2
  %67 = icmp eq i8 %66, -24
  br i1 %67, label %68, label %102

68:                                               ; preds = %64
  %69 = load i8, ptr @_ZZ10decode_exeR7EncoderE1c, align 4
  %70 = zext i8 %69 to i32
  %71 = add i8 %69, 1
  %72 = icmp ult i8 %71, 2
  br i1 %72, label %73, label %102

73:                                               ; preds = %68
  %74 = add nsw i32 %62, -1
  %75 = add nsw i32 %62, -5
  %76 = xor i32 %74, %75
  %77 = icmp ult i32 %76, 65536
  br i1 %77, label %78, label %102

78:                                               ; preds = %73
  %79 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 3), align 1, !tbaa !27
  %80 = zext i8 %79 to i32
  %81 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 2), align 2, !tbaa !27
  %82 = zext i8 %81 to i32
  %83 = shl nuw nsw i32 %82, 8
  %84 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), align 1, !tbaa !27
  %85 = zext i8 %84 to i32
  %86 = shl nuw nsw i32 %85, 16
  %87 = shl nuw i32 %70, 24
  %88 = or i32 %87, %80
  %89 = or i32 %88, %83
  %90 = or i32 %89, %86
  %91 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !18
  %92 = add i32 %91, %62
  %93 = sub i32 %90, %92
  %94 = shl i32 %93, 7
  %95 = trunc i32 %93 to i8
  store i8 %95, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 3), align 1, !tbaa !27
  %96 = lshr i32 %94, 15
  %97 = trunc i32 %96 to i8
  store i8 %97, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 2), align 2, !tbaa !27
  %98 = lshr i32 %94, 23
  %99 = trunc i32 %98 to i8
  store i8 %99, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), align 1, !tbaa !27
  %100 = ashr i32 %94, 31
  %101 = trunc i32 %100 to i8
  store i8 %101, ptr @_ZZ10decode_exeR7EncoderE1c, align 4, !tbaa !27
  br label %102

102:                                              ; preds = %78, %73, %68, %64, %60
  %103 = add nsw i32 %61, -1
  store i32 %103, ptr @_ZZ10decode_exeR7EncoderE1q, align 4, !tbaa !18
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 %104
  %106 = load i8, ptr %105, align 1, !tbaa !27
  %107 = zext i8 %106 to i32
  ret i32 %107
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_Z6encodeP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) #7 {
  %4 = tail call i64 @ftell(ptr noundef %0) #32
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %31

6:                                                ; preds = %28, %3
  %7 = phi i32 [ %29, %28 ], [ %2, %3 ]
  %8 = phi i32 [ %10, %28 ], [ 0, %3 ]
  %9 = phi i64 [ %11, %28 ], [ %4, %3 ]
  %10 = tail call noundef i32 @_Z6detectP8_IO_FILEi8Filetype(ptr noundef %0, i32 noundef %7, i32 noundef %8) #32
  %11 = tail call i64 @ftell(ptr noundef %0) #32
  %12 = tail call i32 @fseek(ptr noundef %0, i64 noundef %9, i32 noundef 0) #32
  %13 = sub nsw i64 %11, %9
  %14 = trunc i64 %13 to i32
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %6
  %17 = lshr i32 %14, 24
  %18 = lshr i32 %14, 16
  %19 = lshr i32 %14, 8
  %20 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.19, i32 noundef %8, i32 noundef %17, i32 noundef %18, i32 noundef %19, i32 noundef %14) #32
  switch i32 %8, label %27 [
    i32 1, label %21
    i32 2, label %22
    i32 3, label %22
    i32 4, label %22
    i32 6, label %23
    i32 7, label %24
    i32 8, label %25
  ]

21:                                               ; preds = %16
  tail call void @_Z11encode_jpegP8_IO_FILES0_i(ptr noundef %0, ptr noundef %1, i32 noundef %14) #32
  br label %28

22:                                               ; preds = %16, %16, %16
  tail call void @_Z10encode_bmpP8_IO_FILES0_i(ptr noundef %0, ptr noundef %1, i32 noundef %14) #32
  br label %28

23:                                               ; preds = %16
  tail call void @_Z10encode_pgmP8_IO_FILES0_i(ptr noundef %0, ptr noundef %1, i32 noundef %14) #32
  br label %28

24:                                               ; preds = %16
  tail call void @_Z10encode_rgbP8_IO_FILES0_i(ptr noundef %0, ptr noundef %1, i32 noundef %14) #32
  br label %28

25:                                               ; preds = %16
  %26 = trunc i64 %9 to i32
  tail call void @_Z10encode_exeP8_IO_FILES0_ii(ptr noundef %0, ptr noundef %1, i32 noundef %14, i32 noundef %26) #32
  br label %28

27:                                               ; preds = %16
  tail call void @_Z14encode_defaultP8_IO_FILES0_i(ptr noundef %0, ptr noundef %1, i32 noundef %14) #32
  br label %28

28:                                               ; preds = %27, %25, %24, %23, %22, %21, %6
  %29 = sub nsw i32 %7, %14
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %6, label %31, !llvm.loop !224

31:                                               ; preds = %28, %3
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) #7 {
  %2 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !18
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %4, %1
  %5 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  store i32 %5, ptr @_ZZ6decodeR7EncoderE4type, align 4, !tbaa !189
  %6 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  %7 = shl i32 %6, 24
  store i32 %7, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !18
  %8 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  %9 = shl i32 %8, 16
  %10 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !18
  %11 = or i32 %10, %9
  store i32 %11, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !18
  %12 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  %13 = shl i32 %12, 8
  %14 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !18
  %15 = or i32 %14, %13
  store i32 %15, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !18
  %16 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  %17 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !18
  %18 = or i32 %17, %16
  %19 = icmp slt i32 %18, 0
  %20 = select i1 %19, i32 1, i32 %18
  store i32 %20, ptr @_ZZ6decodeR7EncoderE3len, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %4, label %22, !llvm.loop !225

22:                                               ; preds = %4, %1
  %23 = phi i32 [ %2, %1 ], [ %20, %4 ]
  %24 = add nsw i32 %23, -1
  store i32 %24, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !18
  %25 = load i32, ptr @_ZZ6decodeR7EncoderE4type, align 4, !tbaa !189
  switch i32 %25, label %36 [
    i32 1, label %26
    i32 2, label %28
    i32 3, label %28
    i32 4, label %28
    i32 6, label %30
    i32 7, label %32
    i32 8, label %34
  ]

26:                                               ; preds = %22
  %27 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  br label %38

28:                                               ; preds = %22, %22, %22
  %29 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  br label %38

30:                                               ; preds = %22
  %31 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  br label %38

32:                                               ; preds = %22
  %33 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  br label %38

34:                                               ; preds = %22
  %35 = tail call noundef i32 @_Z10decode_exeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) #32, !range !226
  br label %38

36:                                               ; preds = %22
  %37 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) #32
  br label %38

38:                                               ; preds = %36, %34, %32, %30, %28, %26
  %39 = phi i32 [ %37, %36 ], [ %35, %34 ], [ %33, %32 ], [ %31, %30 ], [ %29, %28 ], [ %27, %26 ]
  ret i32 %39
}

; Function Attrs: mustprogress nofree nounwind optsize uwtable
define internal void @_Z11printStatusi(i32 noundef %0) #23 {
  %2 = icmp sgt i32 %0, 0
  %3 = and i32 %0, 4095
  %4 = icmp eq i32 %3, 0
  %5 = and i1 %2, %4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %0) #32
  %8 = load ptr, ptr @stdout, align 8, !tbaa !38
  %9 = tail call i32 @fflush(ptr noundef %8) #32
  br label %10

10:                                               ; preds = %6, %1
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fflush(ptr nocapture noundef) local_unnamed_addr #17

; Function Attrs: mustprogress optsize uwtable
define internal void @_Z8compressPKclR7Encoder(ptr noundef %0, i64 noundef %1, ptr noundef nonnull align 8 dereferenceable(40) %2) #7 {
  %4 = tail call noalias ptr @fopen(ptr noundef %0, ptr noundef nonnull @.str.21) #32
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  tail call void @perror(ptr noundef %0) #39
  %7 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr null, ptr %7, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %7, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.Encoder, ptr %2, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !205
  %11 = tail call i64 @ftell(ptr noundef %10) #32
  %12 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %0, i32 noundef 47) #38
  %13 = icmp eq ptr %12, null
  %14 = getelementptr inbounds i8, ptr %12, i64 1
  %15 = select i1 %13, ptr %0, ptr %14
  %16 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.22, ptr noundef %15, i64 noundef %1) #32
  %17 = load i32, ptr @level, align 4, !tbaa !18
  %18 = shl i32 4194304, %17
  %19 = icmp sgt i64 %1, 0
  br i1 %19, label %20, label %89

20:                                               ; preds = %8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds %class.Encoder, ptr %2, i64 0, i32 6
  br label %23

23:                                               ; preds = %84, %20
  %24 = phi i64 [ 0, %20 ], [ %87, %84 ]
  %25 = phi i64 [ %1, %20 ], [ %85, %84 ]
  %26 = icmp slt i64 %25, %21
  %27 = trunc i64 %25 to i32
  %28 = select i1 %26, i32 %27, i32 %18
  %29 = tail call noalias ptr @tmpfile() #32
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %23
  tail call void @perror(ptr noundef nonnull @.str.23) #39
  %32 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr null, ptr %32, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %32, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

33:                                               ; preds = %23
  %34 = tail call i64 @ftell(ptr noundef nonnull %4) #32
  tail call void @_Z6encodeP8_IO_FILES0_i(ptr noundef nonnull %4, ptr noundef nonnull %29, i32 noundef %28) #32
  tail call void @rewind(ptr noundef nonnull %29) #32
  store ptr %29, ptr %22, align 8, !tbaa !209
  %35 = tail call i32 @fseek(ptr noundef nonnull %4, i64 noundef %34, i32 noundef 0) #32
  %36 = sext i32 %28 to i64
  %37 = icmp sgt i32 %28, 0
  br i1 %37, label %38, label %46

38:                                               ; preds = %43, %33
  %39 = phi i64 [ %44, %43 ], [ 0, %33 ]
  %40 = tail call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2) #32
  %41 = tail call i32 @getc(ptr noundef nonnull %4) #32
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = add nuw nsw i64 %39, 1
  %45 = icmp eq i64 %44, %36
  br i1 %45, label %51, label %38, !llvm.loop !227

46:                                               ; preds = %38, %33
  %47 = phi i64 [ 0, %33 ], [ %39, %38 ]
  %48 = phi i32 [ 0, %33 ], [ %40, %38 ]
  %49 = phi i32 [ 0, %33 ], [ %41, %38 ]
  %50 = icmp eq i64 %47, %36
  br i1 %50, label %51, label %57

51:                                               ; preds = %46, %43
  %52 = phi i32 [ %49, %46 ], [ %40, %43 ]
  %53 = phi i32 [ %48, %46 ], [ %40, %43 ]
  %54 = phi i64 [ %47, %46 ], [ %36, %43 ]
  %55 = tail call i32 @getc(ptr noundef nonnull %29) #32
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %75, label %57

57:                                               ; preds = %51, %46
  %58 = phi i32 [ %52, %51 ], [ %49, %46 ]
  %59 = phi i32 [ %53, %51 ], [ %48, %46 ]
  %60 = phi i64 [ %54, %51 ], [ %47, %46 ]
  %61 = add nsw i64 %60, %24
  %62 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.24, i64 noundef %61, i32 noundef %58, i32 noundef %59) #32
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef 0) #32
  %63 = ashr i32 %28, 24
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef %63) #32
  %64 = ashr i32 %28, 16
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef %64) #32
  %65 = ashr i32 %28, 8
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef %65) #32
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef %28) #32
  %66 = tail call i32 @fseek(ptr noundef nonnull %4, i64 noundef %34, i32 noundef 0) #32
  br i1 %37, label %67, label %84

67:                                               ; preds = %57
  %68 = trunc i64 %24 to i32
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i32 [ %73, %69 ], [ 0, %67 ]
  %71 = add nsw i32 %70, %68
  tail call void @_Z11printStatusi(i32 noundef %71) #32
  %72 = tail call i32 @getc(ptr noundef nonnull %4) #32
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef %72) #32
  %73 = add nuw nsw i32 %70, 1
  %74 = icmp eq i32 %73, %28
  br i1 %74, label %84, label %69, !llvm.loop !228

75:                                               ; preds = %51
  tail call void @rewind(ptr noundef nonnull %29) #32
  %76 = trunc i64 %24 to i32
  br label %77

77:                                               ; preds = %81, %75
  %78 = phi i32 [ 0, %75 ], [ %82, %81 ]
  %79 = tail call i32 @getc(ptr noundef nonnull %29) #32
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %84, label %81

81:                                               ; preds = %77
  %82 = add i32 %78, 1
  %83 = add i32 %78, %76
  tail call void @_Z11printStatusi(i32 noundef %83) #32
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef %79) #32
  br label %77, !llvm.loop !229

84:                                               ; preds = %77, %69, %57
  %85 = sub nsw i64 %25, %36
  %86 = tail call i32 @fclose(ptr noundef nonnull %29) #32
  %87 = add i64 %24, %21
  %88 = icmp sgt i64 %85, 0
  br i1 %88, label %23, label %89, !llvm.loop !230

89:                                               ; preds = %84, %8
  %90 = tail call i32 @fclose(ptr noundef nonnull %4) #32
  %91 = load ptr, ptr %9, align 8, !tbaa !205
  %92 = tail call i64 @ftell(ptr noundef %91) #32
  %93 = sub nsw i64 %92, %11
  %94 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.25, i64 noundef %93) #32
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noalias noundef ptr @fopen(ptr nocapture noundef readonly, ptr nocapture noundef readonly) local_unnamed_addr #17

; Function Attrs: nofree nounwind optsize
declare void @perror(ptr nocapture noundef readonly) local_unnamed_addr #17

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(argmem: read)
declare noundef ptr @strrchr(ptr noundef, i32 noundef) local_unnamed_addr #24

; Function Attrs: nofree nounwind optsize
declare noalias noundef ptr @tmpfile() local_unnamed_addr #17

; Function Attrs: nofree nounwind optsize
declare void @rewind(ptr nocapture noundef) local_unnamed_addr #17

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = load i32, ptr @level, align 4, !tbaa !18
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !205
  %8 = tail call i32 @putc(i32 noundef %1, ptr noundef %7) #32
  br label %16

9:                                                ; preds = %9, %2
  %10 = phi i32 [ %14, %9 ], [ 7, %2 ]
  %11 = lshr i32 %1, %10
  %12 = and i32 %11, 1
  %13 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %12) #32
  %14 = add nsw i32 %10, -1
  %15 = icmp eq i32 %10, 0
  br i1 %15, label %16, label %9, !llvm.loop !231

16:                                               ; preds = %9, %5
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fclose(ptr nocapture noundef) local_unnamed_addr #17

; Function Attrs: optsize uwtable
define internal void @_Z10decompressPKclR7Encoder(ptr noundef %0, i64 noundef %1, ptr noundef nonnull align 8 dereferenceable(40) %2) #0 personality ptr @__gxx_personality_v0 {
  %4 = alloca %class.Buf, align 8
  %5 = tail call noalias ptr @fopen(ptr noundef %0, ptr noundef nonnull @.str.21) #32
  %6 = icmp eq ptr %5, null
  br i1 %6, label %43, label %7

7:                                                ; preds = %3
  %8 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %0, i32 noundef 47) #38
  %9 = icmp eq ptr %8, null
  %10 = getelementptr inbounds i8, ptr %8, i64 1
  %11 = select i1 %9, ptr %0, ptr %10
  %12 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.26, ptr noundef %11, i64 noundef %1) #32
  %13 = icmp sgt i64 %1, 0
  br i1 %13, label %17, label %36

14:                                               ; preds = %32
  %.lcssa = phi i8 [ %33, %32 ]
  %15 = and i8 %.lcssa, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %36, label %41

17:                                               ; preds = %32, %7
  %18 = phi i64 [ %34, %32 ], [ 0, %7 ]
  %19 = phi i8 [ %33, %32 ], [ 0, %7 ]
  %20 = trunc i64 %18 to i32
  tail call void @_Z11printStatusi(i32 noundef %20) #32
  %21 = and i8 %19, 1
  %22 = icmp ne i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = tail call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2) #32
  br label %32

25:                                               ; preds = %17
  %26 = tail call i32 @getc(ptr noundef nonnull %5) #32
  %27 = tail call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2) #32
  %28 = icmp eq i32 %26, %27
  %29 = or i1 %22, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.27, i32 noundef %20, i32 noundef %26, i32 noundef %27) #32
  br label %32

32:                                               ; preds = %30, %25, %23
  %33 = phi i8 [ 1, %30 ], [ %19, %25 ], [ %19, %23 ]
  %34 = add nuw nsw i64 %18, 1
  %35 = icmp eq i64 %34, %1
  br i1 %35, label %14, label %17, !llvm.loop !232

36:                                               ; preds = %14, %7
  %37 = tail call i32 @getc(ptr noundef nonnull %5) #32
  %38 = icmp eq i32 %37, -1
  %39 = select i1 %38, ptr @str.61, ptr @str.62
  %40 = tail call i32 @puts(ptr nonnull dereferenceable(1) %39)
  br label %41

41:                                               ; preds = %36, %14
  %42 = tail call i32 @fclose(ptr noundef nonnull %5) #32
  br label %95

43:                                               ; preds = %3
  %44 = tail call noalias ptr @fopen(ptr noundef %0, ptr noundef nonnull @.str.30) #32
  %45 = icmp eq ptr %44, null
  br i1 %45, label %46, label %70

46:                                               ; preds = %43
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #33
  call void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %0) #32
  %47 = getelementptr inbounds %class.Array, ptr %4, i64 0, i32 3
  br label %48

48:                                               ; preds = %64, %46
  %49 = phi i64 [ %65, %64 ], [ 0, %46 ]
  %50 = load ptr, ptr %47, align 8, !tbaa !233
  %51 = getelementptr inbounds i8, ptr %50, i64 %49
  %52 = load i8, ptr %51, align 1, !tbaa !27
  switch i8 %52, label %64 [
    i8 0, label %53
    i8 47, label %61
    i8 92, label %61
  ]

53:                                               ; preds = %48
  %54 = call noalias ptr @fopen(ptr noundef %0, ptr noundef nonnull @.str.30) #32
  %55 = load i32, ptr %4, align 8, !tbaa !235
  %56 = load i32, ptr @programChecker, align 8, !tbaa !7
  %57 = sub i32 %56, %55
  store i32 %57, ptr @programChecker, align 8, !tbaa !7
  %58 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %59 = icmp sgt i32 %57, %58
  br i1 %59, label %60, label %66

60:                                               ; preds = %53
  store i32 %57, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %66

61:                                               ; preds = %48, %48
  store i8 0, ptr %51, align 1, !tbaa !27
  %62 = load ptr, ptr %47, align 8, !tbaa !233
  %63 = getelementptr inbounds i8, ptr %62, i64 %49
  store i8 %52, ptr %63, align 1, !tbaa !27
  br label %64

64:                                               ; preds = %61, %48
  %65 = add nuw i64 %49, 1
  br label %48, !llvm.loop !236

66:                                               ; preds = %60, %53
  %67 = getelementptr inbounds %class.Array, ptr %4, i64 0, i32 2
  %68 = load ptr, ptr %67, align 8, !tbaa !237
  call void @free(ptr noundef %68) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #33
  %69 = icmp eq ptr %54, null
  br i1 %69, label %84, label %70

70:                                               ; preds = %66, %43
  %71 = phi ptr [ %54, %66 ], [ %44, %43 ]
  %72 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.32, ptr noundef %0, i64 noundef %1) #32
  %73 = icmp sgt i64 %1, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %77, %70
  %75 = call i32 @fclose(ptr noundef nonnull %71) #32
  %76 = call i32 @puts(ptr nonnull dereferenceable(1) @str.60)
  br label %95

77:                                               ; preds = %77, %70
  %78 = phi i64 [ %82, %77 ], [ 0, %70 ]
  %79 = trunc i64 %78 to i32
  call void @_Z11printStatusi(i32 noundef %79) #32
  %80 = call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2) #32
  %81 = call i32 @putc(i32 noundef %80, ptr noundef nonnull %71) #32
  %82 = add nuw nsw i64 %78, 1
  %83 = icmp eq i64 %82, %1
  br i1 %83, label %74, label %77, !llvm.loop !238

84:                                               ; preds = %66
  call void @perror(ptr noundef %0) #39
  %85 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.34, ptr noundef %0, i64 noundef %1) #32
  %86 = icmp sgt i64 %1, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %89, %84
  %88 = call i32 @puts(ptr nonnull dereferenceable(1) @str)
  br label %95

89:                                               ; preds = %89, %84
  %90 = phi i64 [ %93, %89 ], [ 0, %84 ]
  %91 = trunc i64 %90 to i32
  call void @_Z11printStatusi(i32 noundef %91) #32
  %92 = call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2) #32
  %93 = add nuw nsw i64 %90, 1
  %94 = icmp eq i64 %93, %1
  br i1 %94, label %87, label %89, !llvm.loop !239

95:                                               ; preds = %87, %74, %41
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #3

; Function Attrs: optsize uwtable
define internal void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZN5ArrayIcLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef 1) #32
  invoke void @_ZN6StringpLEPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef %1) #32
          to label %3 unwind label %4

3:                                                ; preds = %2
  ret void

4:                                                ; preds = %2
  %5 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZN5ArrayIcLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) #31
  resume { ptr, i32 } %5
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIcLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !240
  store i32 %1, ptr %0, align 8, !tbaa !235
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %22

7:                                                ; preds = %2
  %8 = zext i32 %1 to i64
  %9 = load i32, ptr @programChecker, align 8, !tbaa !7
  %10 = add nsw i32 %9, %1
  store i32 %10, ptr @programChecker, align 8, !tbaa !7
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %14

14:                                               ; preds = %13, %7
  %15 = tail call noalias ptr @calloc(i64 noundef %8, i64 noundef 1) #34
  %16 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %15, ptr %16, align 8, !tbaa !237
  %17 = icmp eq ptr %15, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.59, ptr %19, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %15, ptr %21, align 8, !tbaa !233
  br label %22

22:                                               ; preds = %20, %5
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN6StringpLEPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef %1) #7 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = load i32, ptr %0, align 8, !tbaa !235
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = add nsw i32 %4, -1
  store i32 %7, ptr %0, align 8, !tbaa !235
  br label %8

8:                                                ; preds = %6, %2
  %9 = load i8, ptr %1, align 1, !tbaa !27
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %11, %8
  %12 = phi ptr [ %13, %11 ], [ %1, %8 ]
  %13 = getelementptr inbounds i8, ptr %12, i64 1
  tail call void @_ZN5ArrayIcLi0EE9push_backERKc(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 1 dereferenceable(1) %12) #32
  %14 = load i8, ptr %13, align 1, !tbaa !27
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %11, !llvm.loop !241

16:                                               ; preds = %11, %8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #33
  store i8 0, ptr %3, align 1, !tbaa !27
  call void @_ZN5ArrayIcLi0EE9push_backERKc(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 1 dereferenceable(1) %3) #32
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #33
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @_ZN5ArrayIcLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !235
  %3 = load i32, ptr @programChecker, align 8, !tbaa !7
  %4 = sub i32 %3, %2
  store i32 %4, ptr @programChecker, align 8, !tbaa !7
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !237
  tail call void @free(ptr noundef %10) #31
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIcLi0EE9push_backERKc(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 1 dereferenceable(1) %1) #7 comdat align 2 {
  %3 = load i32, ptr %0, align 8, !tbaa !235
  %4 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !240
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = shl nsw i32 %3, 1
  %9 = tail call i32 @llvm.smax.i32(i32 %8, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %9) #32
  store i32 %3, ptr %0, align 8, !tbaa !235
  br label %10

10:                                               ; preds = %7, %2
  %11 = load i8, ptr %1, align 1, !tbaa !27
  %12 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !233
  %14 = add nsw i32 %3, 1
  store i32 %14, ptr %0, align 8, !tbaa !235
  %15 = sext i32 %3 to i64
  %16 = getelementptr inbounds i8, ptr %13, i64 %15
  store i8 %11, ptr %16, align 1, !tbaa !27
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !240
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, ptr %0, align 8, !tbaa !235
  br label %27

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !237
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !233
  %12 = load i32, ptr %0, align 8, !tbaa !235
  tail call void @_ZN5ArrayIcLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #32
  %13 = icmp eq ptr %9, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %7
  %15 = icmp eq ptr %11, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %14
  %17 = load ptr, ptr %10, align 8, !tbaa !233
  %18 = tail call i32 @llvm.smin.i32(i32 %1, i32 %12)
  %19 = sext i32 %18 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %17, ptr nonnull align 1 %11, i64 %19, i1 false)
  %20 = load i32, ptr %0, align 8, !tbaa !235
  %21 = load i32, ptr @programChecker, align 8, !tbaa !7
  %22 = sub i32 %21, %20
  store i32 %22, ptr @programChecker, align 8, !tbaa !7
  %23 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %24 = icmp sgt i32 %22, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %16
  store i32 %22, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %26

26:                                               ; preds = %25, %16, %14
  tail call void @free(ptr noundef nonnull %9) #31
  br label %27

27:                                               ; preds = %26, %7, %6
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef ptr @_Z7getlineP8_IO_FILE(ptr nocapture noundef %0) #7 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ7getlineP8_IO_FILEE1s acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !100

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ7getlineP8_IO_FILEE1s) #33
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ7getlineP8_IO_FILEE1s, ptr noundef nonnull @.str.36) #32
          to label %8 unwind label %21

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIcLi0EED2Ev, ptr nonnull @_ZZ7getlineP8_IO_FILEE1s, ptr nonnull @__dso_handle) #33
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ7getlineP8_IO_FILEE1s) #33
  br label %10

10:                                               ; preds = %8, %4, %1
  br label %11

11:                                               ; preds = %25, %10
  %12 = phi i32 [ 0, %10 ], [ %27, %25 ]
  %13 = shl nuw nsw i32 %12, 1
  %14 = or i32 %13, 1
  br label %15

15:                                               ; preds = %23, %11
  %16 = tail call i32 @getc(ptr noundef %0) #32
  switch i32 %16, label %17 [
    i32 -1, label %31
    i32 26, label %31
    i32 10, label %31
  ]

17:                                               ; preds = %15
  %18 = load i32, ptr @_ZZ7getlineP8_IO_FILEE1s, align 8, !tbaa !235
  %19 = icmp slt i32 %12, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ7getlineP8_IO_FILEE1s, i32 noundef %14) #32
  br label %23

21:                                               ; preds = %7
  %22 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ7getlineP8_IO_FILEE1s) #33
  resume { ptr, i32 } %22

23:                                               ; preds = %20, %17
  %24 = icmp eq i32 %16, 13
  br i1 %24, label %15, label %25, !llvm.loop !242

25:                                               ; preds = %23
  %.lcssa1 = phi i32 [ %16, %23 ]
  %26 = trunc i32 %.lcssa1 to i8
  %27 = add nuw nsw i32 %12, 1
  %28 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ7getlineP8_IO_FILEE1s, i64 0, i32 0, i32 3), align 8, !tbaa !233
  %29 = zext i32 %12 to i64
  %30 = getelementptr inbounds i8, ptr %28, i64 %29
  store i8 %26, ptr %30, align 1, !tbaa !27
  br label %11, !llvm.loop !242

31:                                               ; preds = %15, %15, %15
  %.lcssa2 = phi i32 [ %12, %15 ], [ %12, %15 ], [ %12, %15 ]
  %.lcssa = phi i32 [ %16, %15 ], [ %16, %15 ], [ %16, %15 ]
  %32 = load i32, ptr @_ZZ7getlineP8_IO_FILEE1s, align 8, !tbaa !235
  %33 = icmp slt i32 %.lcssa2, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %.lcssa2, 1
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ7getlineP8_IO_FILEE1s, i32 noundef %35) #32
  br label %36

36:                                               ; preds = %34, %31
  %37 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ7getlineP8_IO_FILEE1s, i64 0, i32 0, i32 3), align 8, !tbaa !233
  %38 = zext i32 %.lcssa2 to i64
  %39 = getelementptr inbounds i8, ptr %37, i64 %38
  store i8 0, ptr %39, align 1, !tbaa !27
  switch i32 %.lcssa, label %40 [
    i32 -1, label %42
    i32 26, label %42
  ]

40:                                               ; preds = %36
  %41 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ7getlineP8_IO_FILEE1s, i64 0, i32 0, i32 3), align 8, !tbaa !233
  br label %42

42:                                               ; preds = %40, %36, %36
  %43 = phi ptr [ %41, %40 ], [ null, %36 ], [ null, %36 ]
  ret ptr %43
}

; Function Attrs: mustprogress optsize uwtable
define internal noundef i32 @_Z7putsizeR6StringS0_PKci(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef %2, i32 noundef %3) #7 {
  %5 = tail call noalias ptr @fopen(ptr noundef %2, ptr noundef nonnull @.str.21) #32
  %6 = icmp eq ptr %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @fseek(ptr noundef nonnull %5, i64 noundef 0, i32 noundef 2) #32
  %9 = tail call i64 @ftell(ptr noundef nonnull %5) #32
  %10 = icmp sgt i64 %9, -1
  br i1 %10, label %11, label %15

11:                                               ; preds = %7
  %12 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @_ZZ7putsizeR6StringS0_PKciE3blk, ptr noundef nonnull dereferenceable(1) @.str.37, i64 noundef %9) #31
  tail call void @_ZN6StringpLEPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull @_ZZ7putsizeR6StringS0_PKciE3blk) #32
  %13 = sext i32 %3 to i64
  %14 = getelementptr inbounds i8, ptr %2, i64 %13
  tail call void @_ZN6StringpLEPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef %14) #32
  tail call void @_ZN6StringpLEPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull @.str.38) #32
  tail call void @_ZN6StringpLEPKc(ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef %2) #32
  tail call void @_ZN6StringpLEPKc(ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull @.str.11) #32
  br label %15

15:                                               ; preds = %11, %7
  %16 = phi i32 [ 1, %11 ], [ 0, %7 ]
  %17 = tail call i32 @fclose(ptr noundef nonnull %5) #32
  br label %18

18:                                               ; preds = %15, %4
  %19 = phi i32 [ %16, %15 ], [ 0, %4 ]
  ret i32 %19
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #17

; Function Attrs: optsize uwtable
define internal noundef i32 @_Z7paqmainiPPc(i32 noundef %0, ptr nocapture noundef readonly %1) #0 personality ptr @__gxx_personality_v0 {
  %3 = alloca %class.Array, align 8
  %4 = alloca %class.Array, align 8
  %5 = alloca %class.Buf, align 8
  %6 = alloca %class.Buf, align 8
  %7 = alloca %class.Buf, align 8
  %8 = alloca %class.Buf, align 8
  %9 = alloca %class.Encoder, align 8
  %10 = alloca %class.Buf, align 8
  %11 = alloca %class.Buf, align 8
  %12 = load ptr, ptr %1, align 8, !tbaa !38
  %13 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %12, i32 noundef 47) #38
  %14 = icmp eq ptr %13, null
  %15 = getelementptr inbounds i8, ptr %13, i64 1
  %16 = select i1 %14, ptr %12, ptr %15
  %17 = icmp slt i32 %0, 3
  %18 = zext i1 %17 to i8
  %19 = icmp sgt i32 %0, 1
  br i1 %19, label %20, label %49

20:                                               ; preds = %2
  %21 = getelementptr inbounds ptr, ptr %1, i64 1
  %22 = load ptr, ptr %21, align 8, !tbaa !38
  %23 = load i8, ptr %22, align 1, !tbaa !27
  %24 = icmp eq i8 %23, 45
  br i1 %24, label %25, label %54

25:                                               ; preds = %20
  %26 = getelementptr inbounds i8, ptr %22, i64 1
  %27 = load i8, ptr %26, align 1, !tbaa !27
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %54, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds i8, ptr %22, i64 2
  %31 = load i8, ptr %30, align 1, !tbaa !27
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %54

33:                                               ; preds = %29
  %34 = add i8 %27, -58
  %35 = icmp ult i8 %34, -10
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = zext i8 %27 to i32
  %38 = add nsw i32 %37, -48
  store i32 %38, ptr @level, align 4, !tbaa !18
  br label %46

39:                                               ; preds = %33
  %40 = icmp eq i8 %27, 100
  br i1 %40, label %46, label %41

41:                                               ; preds = %39
  invoke void @_Z4quitPKc(ptr noundef nonnull @.str.39) #32
          to label %45 unwind label %42

42:                                               ; preds = %49, %41
  %43 = phi i8 [ %18, %41 ], [ %50, %49 ]
  %44 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %672

45:                                               ; preds = %41
  unreachable

46:                                               ; preds = %39, %36
  %47 = add nsw i32 %0, -1
  %48 = icmp ult i32 %0, 3
  br i1 %48, label %49, label %54

49:                                               ; preds = %46, %2
  %50 = phi i8 [ 0, %46 ], [ %18, %2 ]
  %51 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.40, i32 noundef 5) #32
  %52 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr null, ptr %52, align 16, !tbaa !38
  invoke void @__cxa_throw(ptr nonnull %52, ptr nonnull @_ZTIPKc, ptr null) #35
          to label %53 unwind label %42

53:                                               ; preds = %49
  unreachable

54:                                               ; preds = %46, %29, %25, %20
  %55 = phi i32 [ %47, %46 ], [ %0, %29 ], [ %0, %25 ], [ %0, %20 ]
  %56 = phi ptr [ %21, %46 ], [ %1, %29 ], [ %1, %25 ], [ %1, %20 ]
  %57 = phi i8 [ 0, %46 ], [ %18, %29 ], [ %18, %25 ], [ %18, %20 ]
  %58 = phi i1 [ %35, %46 ], [ false, %29 ], [ false, %25 ], [ false, %20 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #33
  invoke void @_ZN5ArrayIPcLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %3, i32 noundef 1) #32
          to label %59 unwind label %94

59:                                               ; preds = %54
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #33
  invoke void @_ZN5ArrayIlLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %4, i32 noundef 1) #32
          to label %60 unwind label %96

60:                                               ; preds = %59
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #33
  %61 = getelementptr inbounds ptr, ptr %56, i64 1
  %62 = load ptr, ptr %61, align 8, !tbaa !38
  %63 = call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %62, i32 noundef 47) #38
  %64 = icmp eq ptr %63, null
  %65 = getelementptr inbounds i8, ptr %63, i64 1
  %66 = select i1 %64, ptr %62, ptr %65
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %66) #32
          to label %67 unwind label %98

67:                                               ; preds = %60
  %68 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %16) #38
  %69 = trunc i64 %68 to i32
  %70 = load ptr, ptr %61, align 8, !tbaa !38
  %71 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %70) #38
  %72 = trunc i64 %71 to i32
  %73 = add nsw i32 %69, 1
  %74 = icmp slt i32 %73, %72
  br i1 %74, label %75, label %100

75:                                               ; preds = %67
  %76 = xor i64 %68, -1
  %77 = add i64 %71, %76
  %78 = shl i64 %77, 32
  %79 = ashr exact i64 %78, 32
  %80 = getelementptr inbounds i8, ptr %70, i64 %79
  %81 = load i8, ptr %80, align 1, !tbaa !27
  %82 = icmp eq i8 %81, 46
  br i1 %82, label %83, label %100

83:                                               ; preds = %75
  %84 = shl i64 %71, 32
  %85 = ashr exact i64 %84, 32
  %86 = getelementptr inbounds i8, ptr %70, i64 %85
  %87 = shl i64 %68, 32
  %88 = ashr exact i64 %87, 32
  %89 = sub nsw i64 0, %88
  %90 = getelementptr inbounds i8, ptr %86, i64 %89
  %91 = call noundef i32 @_Z6equalsPKcS0_(ptr noundef %16, ptr noundef %90) #32
  %92 = icmp ne i32 %91, 0
  %93 = or i1 %58, %92
  br i1 %93, label %105, label %101

94:                                               ; preds = %54
  %95 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %670

96:                                               ; preds = %59
  %97 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %658

98:                                               ; preds = %60
  %99 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %646

100:                                              ; preds = %75, %67
  br i1 %58, label %105, label %101

101:                                              ; preds = %100, %83
  invoke void @_ZN6StringpLEPKc(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull @.str.41) #32
          to label %102 unwind label %103

102:                                              ; preds = %101
  invoke void @_ZN6StringpLEPKc(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %16) #32
          to label %105 unwind label %103

103:                                              ; preds = %102, %101
  %104 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %635

105:                                              ; preds = %102, %100, %83
  %106 = phi i1 [ true, %102 ], [ false, %83 ], [ false, %100 ]
  %107 = phi i1 [ false, %102 ], [ true, %83 ], [ true, %100 ]
  %108 = phi i32 [ 0, %102 ], [ 1, %83 ], [ 1, %100 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #33
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull @.str.36) #32
          to label %109 unwind label %131

109:                                              ; preds = %105
  br i1 %106, label %110, label %294

110:                                              ; preds = %109
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #33
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull @.str.36) #32
          to label %111 unwind label %133

111:                                              ; preds = %110
  %112 = getelementptr inbounds %class.Array, ptr %8, i64 0, i32 3
  %113 = icmp eq i32 %55, 2
  %114 = getelementptr inbounds %class.Array, ptr %8, i64 0, i32 2
  %115 = zext i32 %55 to i64
  br label %116

116:                                              ; preds = %210, %111
  %117 = phi i64 [ 1, %111 ], [ %212, %210 ]
  %118 = phi i32 [ 0, %111 ], [ %203, %210 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #33
  %119 = getelementptr inbounds ptr, ptr %56, i64 %117
  %120 = load ptr, ptr %119, align 8, !tbaa !38
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef %120) #32
          to label %121 unwind label %135

121:                                              ; preds = %116
  %122 = load i32, ptr %8, align 8, !tbaa !235
  %123 = add i32 %122, -1
  %124 = icmp sgt i32 %122, 0
  br i1 %124, label %125, label %159

125:                                              ; preds = %121
  %126 = zext i32 %122 to i64
  br label %137

127:                                              ; preds = %144
  %128 = icmp sgt i32 %122, 1
  br i1 %128, label %129, label %159

129:                                              ; preds = %127
  %130 = zext i32 %123 to i64
  br label %147

131:                                              ; preds = %105
  %132 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %633

133:                                              ; preds = %110
  %134 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %292

135:                                              ; preds = %116
  %136 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %214

137:                                              ; preds = %144, %125
  %138 = phi i64 [ 0, %125 ], [ %145, %144 ]
  %139 = load ptr, ptr %112, align 8, !tbaa !233
  %140 = getelementptr inbounds i8, ptr %139, i64 %138
  %141 = load i8, ptr %140, align 1, !tbaa !27
  %142 = icmp eq i8 %141, 92
  br i1 %142, label %143, label %144

143:                                              ; preds = %137
  store i8 47, ptr %140, align 1, !tbaa !27
  br label %144

144:                                              ; preds = %143, %137
  %145 = add nuw nsw i64 %138, 1
  %146 = icmp eq i64 %145, %126
  br i1 %146, label %127, label %137, !llvm.loop !243

147:                                              ; preds = %155, %129
  %148 = phi i64 [ %130, %129 ], [ %149, %155 ]
  %149 = add nsw i64 %148, -1
  %150 = load ptr, ptr %112, align 8, !tbaa !233
  %151 = and i64 %149, 4294967295
  %152 = getelementptr inbounds i8, ptr %150, i64 %151
  %153 = load i8, ptr %152, align 1, !tbaa !27
  %154 = icmp eq i8 %153, 47
  br i1 %154, label %155, label %157

155:                                              ; preds = %147
  store i8 0, ptr %152, align 1, !tbaa !27
  %156 = icmp ugt i64 %148, 1
  br i1 %156, label %147, label %159, !llvm.loop !244

157:                                              ; preds = %147
  %.lcssa10 = phi i64 [ %148, %147 ]
  %158 = trunc i64 %.lcssa10 to i32
  br label %159

159:                                              ; preds = %157, %155, %127, %121
  %160 = phi i32 [ %123, %127 ], [ %123, %121 ], [ %158, %157 ], [ 0, %155 ]
  %161 = load ptr, ptr %112, align 8
  %162 = zext i32 %160 to i64
  br label %163

163:                                              ; preds = %167, %159
  %164 = phi i64 [ %168, %167 ], [ %162, %159 ]
  %165 = trunc i64 %164 to i32
  %166 = icmp sgt i32 %165, 0
  br i1 %166, label %167, label %172

167:                                              ; preds = %163
  %168 = add nsw i64 %164, -1
  %169 = getelementptr inbounds i8, ptr %161, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !27
  %171 = icmp eq i8 %170, 47
  br i1 %171, label %181, label %163, !llvm.loop !245

172:                                              ; preds = %163
  %.lcssa11 = phi i32 [ %165, %163 ]
  %173 = icmp eq i32 %.lcssa11, 0
  %174 = icmp sgt i32 %160, 1
  %175 = and i1 %174, %173
  br i1 %175, label %176, label %181

176:                                              ; preds = %172
  %177 = getelementptr inbounds i8, ptr %161, i64 1
  %178 = load i8, ptr %177, align 1, !tbaa !27
  %179 = icmp eq i8 %178, 58
  %180 = select i1 %179, i32 2, i32 0
  br label %181

181:                                              ; preds = %176, %172, %167
  %182 = phi i32 [ %.lcssa11, %172 ], [ %180, %176 ], [ %165, %167 ]
  %183 = invoke noundef i32 @_Z7putsizeR6StringS0_PKci(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef %161, i32 noundef %182) #32
          to label %184 unwind label %192

184:                                              ; preds = %181
  %185 = icmp eq i32 %183, 0
  %186 = icmp ugt i64 %117, 1
  %187 = or i1 %113, %186
  %188 = select i1 %185, i1 %187, i1 false
  br i1 %188, label %189, label %202

189:                                              ; preds = %184
  %190 = load ptr, ptr %112, align 8, !tbaa !233
  %191 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.42, ptr noundef %190) #32
  br label %202

192:                                              ; preds = %181
  %193 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  %194 = load i32, ptr %8, align 8, !tbaa !235
  %195 = load i32, ptr @programChecker, align 8, !tbaa !7
  %196 = sub i32 %195, %194
  store i32 %196, ptr @programChecker, align 8, !tbaa !7
  %197 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %198 = icmp sgt i32 %196, %197
  br i1 %198, label %199, label %200

199:                                              ; preds = %192
  store i32 %196, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %200

200:                                              ; preds = %199, %192
  %201 = load ptr, ptr %114, align 8, !tbaa !237
  call void @free(ptr noundef %201) #31
  br label %214

202:                                              ; preds = %189, %184
  %203 = add nuw nsw i32 %183, %118
  %204 = load i32, ptr %8, align 8, !tbaa !235
  %205 = load i32, ptr @programChecker, align 8, !tbaa !7
  %206 = sub i32 %205, %204
  store i32 %206, ptr @programChecker, align 8, !tbaa !7
  %207 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %208 = icmp sgt i32 %206, %207
  br i1 %208, label %209, label %210

209:                                              ; preds = %202
  store i32 %206, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %210

210:                                              ; preds = %209, %202
  %211 = load ptr, ptr %114, align 8, !tbaa !237
  call void @free(ptr noundef %211) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #33
  %212 = add nuw nsw i64 %117, 1
  %213 = icmp eq i64 %212, %115
  br i1 %213, label %216, label %116, !llvm.loop !246

214:                                              ; preds = %200, %135
  %215 = phi { ptr, i32 } [ %193, %200 ], [ %136, %135 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #33
  br label %281

216:                                              ; preds = %210
  %.lcssa13 = phi i32 [ %203, %210 ]
  %217 = icmp eq i32 %.lcssa13, 0
  br i1 %217, label %218, label %222

218:                                              ; preds = %216
  %219 = call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.43, ptr %219, align 16, !tbaa !38
  br label %230

220:                                              ; preds = %239, %233, %230
  %221 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %281

222:                                              ; preds = %216
  %223 = getelementptr inbounds %class.Array, ptr %5, i64 0, i32 3
  %224 = load ptr, ptr %223, align 8, !tbaa !233
  %225 = call noalias ptr @fopen(ptr noundef %224, ptr noundef nonnull @.str.44) #32
  %226 = icmp eq ptr %225, null
  br i1 %226, label %227, label %233

227:                                              ; preds = %222
  %228 = load ptr, ptr %223, align 8, !tbaa !233
  call void @perror(ptr noundef %228) #39
  %229 = call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr null, ptr %229, align 16, !tbaa !38
  br label %230

230:                                              ; preds = %227, %218
  %231 = phi ptr [ %229, %227 ], [ %219, %218 ]
  invoke void @__cxa_throw(ptr nonnull %231, ptr nonnull @_ZTIPKc, ptr null) #35
          to label %232 unwind label %220

232:                                              ; preds = %230
  unreachable

233:                                              ; preds = %222
  %234 = load i32, ptr @level, align 4, !tbaa !18
  %235 = getelementptr inbounds %class.Array, ptr %7, i64 0, i32 3
  %236 = load ptr, ptr %235, align 8, !tbaa !233
  %237 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %225, ptr noundef nonnull @.str.45, i32 noundef %234, ptr noundef %236) #32
  %238 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.46, i32 noundef %.lcssa13) #32
  invoke void @_ZN5ArrayIPcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %3, i32 noundef %.lcssa13) #32
          to label %239 unwind label %220

239:                                              ; preds = %233
  invoke void @_ZN5ArrayIlLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %4, i32 noundef %.lcssa13) #32
          to label %240 unwind label %220

240:                                              ; preds = %239
  %241 = getelementptr inbounds %class.Array, ptr %6, i64 0, i32 3
  %242 = load ptr, ptr %241, align 8, !tbaa !233
  call void @rewind(ptr noundef nonnull %225) #32
  %243 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %225) #32
          to label %244 unwind label %263

244:                                              ; preds = %240
  %245 = getelementptr inbounds %class.Array, ptr %4, i64 0, i32 3
  %246 = getelementptr inbounds %class.Array, ptr %3, i64 0, i32 3
  %247 = zext i32 %.lcssa13 to i64
  br label %248

248:                                              ; preds = %267, %244
  %249 = phi i64 [ 0, %244 ], [ %268, %267 ]
  %250 = phi ptr [ %242, %244 ], [ %.lcssa8, %267 ]
  %251 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %225) #32
          to label %252 unwind label %265

252:                                              ; preds = %248
  %253 = call i64 @atol(ptr nocapture noundef %251) #38
  %254 = load ptr, ptr %245, align 8, !tbaa !247
  %255 = getelementptr inbounds i64, ptr %254, i64 %249
  store i64 %253, ptr %255, align 8, !tbaa !249
  %256 = load ptr, ptr %246, align 8, !tbaa !250
  %257 = getelementptr inbounds ptr, ptr %256, i64 %249
  store ptr %250, ptr %257, align 8, !tbaa !38
  br label %258

258:                                              ; preds = %258, %252
  %259 = phi ptr [ %250, %252 ], [ %262, %258 ]
  %260 = load i8, ptr %259, align 1, !tbaa !27
  %261 = icmp eq i8 %260, 10
  %262 = getelementptr inbounds i8, ptr %259, i64 1
  br i1 %261, label %267, label %258, !llvm.loop !252

263:                                              ; preds = %240
  %264 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %281

265:                                              ; preds = %248
  %266 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %281

267:                                              ; preds = %258
  %.lcssa9 = phi ptr [ %259, %258 ]
  %.lcssa8 = phi ptr [ %262, %258 ]
  store i8 0, ptr %.lcssa9, align 1, !tbaa !27
  %268 = add nuw nsw i64 %249, 1
  %269 = icmp eq i64 %268, %247
  br i1 %269, label %270, label %248, !llvm.loop !253

270:                                              ; preds = %267
  %271 = call i32 @fseek(ptr noundef nonnull %225, i64 noundef 0, i32 noundef 2) #32
  %272 = load i32, ptr %7, align 8, !tbaa !235
  %273 = load i32, ptr @programChecker, align 8, !tbaa !7
  %274 = sub i32 %273, %272
  store i32 %274, ptr @programChecker, align 8, !tbaa !7
  %275 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %276 = icmp sgt i32 %274, %275
  br i1 %276, label %277, label %278

277:                                              ; preds = %270
  store i32 %274, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %278

278:                                              ; preds = %277, %270
  %279 = getelementptr inbounds %class.Array, ptr %7, i64 0, i32 2
  %280 = load ptr, ptr %279, align 8, !tbaa !237
  call void @free(ptr noundef %280) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #33
  br label %294

281:                                              ; preds = %265, %263, %220, %214
  %282 = phi { ptr, i32 } [ %215, %214 ], [ %221, %220 ], [ %266, %265 ], [ %264, %263 ]
  %283 = load i32, ptr %7, align 8, !tbaa !235
  %284 = load i32, ptr @programChecker, align 8, !tbaa !7
  %285 = sub i32 %284, %283
  store i32 %285, ptr @programChecker, align 8, !tbaa !7
  %286 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %287 = icmp sgt i32 %285, %286
  br i1 %287, label %288, label %289

288:                                              ; preds = %281
  store i32 %285, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %289

289:                                              ; preds = %288, %281
  %290 = getelementptr inbounds %class.Array, ptr %7, i64 0, i32 2
  %291 = load ptr, ptr %290, align 8, !tbaa !237
  call void @free(ptr noundef %291) #31
  br label %292

292:                                              ; preds = %289, %133
  %293 = phi { ptr, i32 } [ %282, %289 ], [ %134, %133 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #33
  br label %622

294:                                              ; preds = %278, %109
  %295 = phi i32 [ %.lcssa13, %278 ], [ 0, %109 ]
  %296 = phi ptr [ %225, %278 ], [ null, %109 ]
  br i1 %107, label %297, label %397

297:                                              ; preds = %294
  %298 = getelementptr inbounds %class.Array, ptr %5, i64 0, i32 3
  %299 = load ptr, ptr %298, align 8, !tbaa !233
  %300 = call noalias ptr @fopen(ptr noundef %299, ptr noundef nonnull @.str.47) #32
  %301 = icmp eq ptr %300, null
  br i1 %301, label %302, label %308

302:                                              ; preds = %297
  %303 = load ptr, ptr %298, align 8, !tbaa !233
  call void @perror(ptr noundef %303) #39
  %304 = call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr null, ptr %304, align 16, !tbaa !38
  invoke void @__cxa_throw(ptr nonnull %304, ptr nonnull @_ZTIPKc, ptr null) #35
          to label %305 unwind label %306

305:                                              ; preds = %302
  unreachable

306:                                              ; preds = %402, %302
  %307 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %622

308:                                              ; preds = %297
  %309 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %300) #32
          to label %310 unwind label %320

310:                                              ; preds = %308
  %311 = call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %309, ptr noundef nonnull dereferenceable(8) @.str.48, i64 noundef 7) #38
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %322, label %313

313:                                              ; preds = %310
  %314 = load ptr, ptr %298, align 8, !tbaa !233
  %315 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.49, ptr noundef %314, ptr noundef nonnull @.str.50) #32
  %316 = call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr null, ptr %316, align 16, !tbaa !38
  invoke void @__cxa_throw(ptr nonnull %316, ptr nonnull @_ZTIPKc, ptr null) #35
          to label %317 unwind label %320

317:                                              ; preds = %313
  unreachable

318:                                              ; preds = %330
  %319 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %622

320:                                              ; preds = %313, %308
  %321 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %622

322:                                              ; preds = %310
  %323 = getelementptr inbounds i8, ptr %309, i64 7
  %324 = load i8, ptr %323, align 1, !tbaa !27
  %325 = sext i8 %324 to i32
  %326 = add nsw i32 %325, -48
  %327 = add i8 %324, -58
  %328 = icmp ult i8 %327, -10
  %329 = select i1 %328, i32 5, i32 %326
  store i32 %329, ptr @level, align 4
  br label %330

330:                                              ; preds = %335, %322
  %331 = phi i32 [ %295, %322 ], [ %336, %335 ]
  %332 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %300) #32
          to label %333 unwind label %318

333:                                              ; preds = %330
  %334 = icmp eq ptr %332, null
  br i1 %334, label %337, label %335

335:                                              ; preds = %333
  %336 = add nsw i32 %331, 1
  br label %330, !llvm.loop !254

337:                                              ; preds = %333
  %.lcssa7 = phi i32 [ %331, %333 ]
  %338 = load i32, ptr @level, align 4, !tbaa !18
  %339 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.51, i32 noundef %.lcssa7, i32 noundef %338) #32
  %340 = call i64 @ftell(ptr noundef nonnull %300) #32
  %341 = trunc i64 %340 to i32
  %342 = add i32 %341, 4
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %6, i32 noundef %342) #32
          to label %343 unwind label %355

343:                                              ; preds = %337
  call void @rewind(ptr noundef nonnull %300) #32
  %344 = getelementptr inbounds %class.Array, ptr %6, i64 0, i32 3
  %345 = load ptr, ptr %344, align 8, !tbaa !233
  %346 = call i64 @fread(ptr noundef nonnull %345, i64 noundef 1, i64 noundef %340, ptr noundef nonnull %300) #32
  invoke void @_ZN5ArrayIPcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %3, i32 noundef %.lcssa7) #32
          to label %347 unwind label %355

347:                                              ; preds = %343
  invoke void @_ZN5ArrayIlLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %4, i32 noundef %.lcssa7) #32
          to label %348 unwind label %355

348:                                              ; preds = %347
  %349 = load ptr, ptr %344, align 8, !tbaa !233
  br label %350

350:                                              ; preds = %353, %348
  %351 = phi ptr [ %349, %348 ], [ %354, %353 ]
  %352 = load i8, ptr %351, align 1, !tbaa !27
  switch i8 %352, label %353 [
    i8 0, label %357
    i8 13, label %357
  ]

353:                                              ; preds = %350
  %354 = getelementptr inbounds i8, ptr %351, i64 1
  br label %350, !llvm.loop !255

355:                                              ; preds = %347, %343, %337
  %356 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %622

357:                                              ; preds = %350, %350
  %.lcssa5 = phi ptr [ %351, %350 ], [ %351, %350 ]
  %358 = icmp sgt i32 %.lcssa7, 0
  br i1 %358, label %359, label %397

359:                                              ; preds = %357
  %360 = getelementptr inbounds %class.Array, ptr %4, i64 0, i32 3
  %361 = getelementptr inbounds %class.Array, ptr %3, i64 0, i32 3
  %362 = zext i32 %.lcssa7 to i64
  br label %363

363:                                              ; preds = %394, %359
  %364 = phi i64 [ 0, %359 ], [ %395, %394 ]
  %365 = phi ptr [ %.lcssa5, %359 ], [ %.lcssa4, %394 ]
  %366 = getelementptr inbounds i8, ptr %365, i64 2
  %367 = call i64 @atol(ptr nocapture noundef nonnull %366) #38
  %368 = load ptr, ptr %360, align 8, !tbaa !247
  %369 = getelementptr inbounds i64, ptr %368, i64 %364
  store i64 %367, ptr %369, align 8, !tbaa !249
  br label %370

370:                                              ; preds = %370, %363
  %371 = phi ptr [ %365, %363 ], [ %372, %370 ]
  %372 = getelementptr inbounds i8, ptr %371, i64 1
  %373 = load i8, ptr %372, align 1, !tbaa !27
  switch i8 %373, label %370 [
    i8 0, label %376
    i8 9, label %376
  ], !llvm.loop !256

374:                                              ; preds = %385
  %375 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %622

376:                                              ; preds = %370, %370
  %.lcssa2 = phi ptr [ %371, %370 ], [ %371, %370 ]
  %.lcssa1 = phi ptr [ %372, %370 ], [ %372, %370 ]
  %377 = getelementptr inbounds i8, ptr %.lcssa2, i64 2
  %378 = load ptr, ptr %361, align 8, !tbaa !250
  %379 = getelementptr inbounds ptr, ptr %378, i64 %364
  store ptr %377, ptr %379, align 8, !tbaa !38
  br label %380

380:                                              ; preds = %383, %376
  %381 = phi ptr [ %.lcssa1, %376 ], [ %384, %383 ]
  %382 = load i8, ptr %381, align 1, !tbaa !27
  switch i8 %382, label %383 [
    i8 0, label %385
    i8 13, label %394
  ]

383:                                              ; preds = %380
  %384 = getelementptr inbounds i8, ptr %381, i64 1
  br label %380, !llvm.loop !257

385:                                              ; preds = %380
  %.lcssa3 = phi ptr [ %381, %380 ]
  %386 = load ptr, ptr %298, align 8, !tbaa !233
  %387 = load ptr, ptr %344, align 8, !tbaa !233
  %388 = ptrtoint ptr %.lcssa3 to i64
  %389 = ptrtoint ptr %387 to i64
  %390 = sub i64 %388, %389
  %391 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.52, ptr noundef %386, i64 noundef %390) #32
  %392 = call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr null, ptr %392, align 16, !tbaa !38
  invoke void @__cxa_throw(ptr nonnull %392, ptr nonnull @_ZTIPKc, ptr null) #35
          to label %393 unwind label %374

393:                                              ; preds = %385
  unreachable

394:                                              ; preds = %380
  %.lcssa4 = phi ptr [ %381, %380 ]
  store i8 0, ptr %.lcssa4, align 1, !tbaa !27
  %395 = add nuw nsw i64 %364, 1
  %396 = icmp eq i64 %395, %362
  br i1 %396, label %397, label %363, !llvm.loop !258

397:                                              ; preds = %394, %357, %294
  %398 = phi i32 [ %295, %294 ], [ %.lcssa7, %357 ], [ %.lcssa7, %394 ]
  %399 = phi ptr [ %296, %294 ], [ %300, %357 ], [ %300, %394 ]
  %400 = load i32, ptr @level, align 4, !tbaa !18
  %401 = icmp ugt i32 %400, 12
  br i1 %401, label %404, label %402

402:                                              ; preds = %397
  %403 = shl nuw i32 524288, %400
  invoke void @_ZN5ArrayIhLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) @buf, i32 noundef %403) #32
          to label %404 unwind label %306

404:                                              ; preds = %402, %397
  %405 = icmp sgt i32 %398, 0
  br i1 %405, label %406, label %411

406:                                              ; preds = %404
  %407 = getelementptr inbounds %class.Array, ptr %4, i64 0, i32 3
  %408 = load ptr, ptr %407, align 8, !tbaa !247
  %409 = zext i32 %398 to i64
  br label %417

410:                                              ; preds = %417
  %.lcssa = phi i64 [ %422, %417 ]
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %9) #33
  call void @_ZN7EncoderC2E4ModeP8_IO_FILE(ptr noundef nonnull align 8 dereferenceable(40) %9, i32 noundef %108, ptr noundef %399) #32
  br i1 %106, label %412, label %458

411:                                              ; preds = %404
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %9) #33
  call void @_ZN7EncoderC2E4ModeP8_IO_FILE(ptr noundef nonnull align 8 dereferenceable(40) %9, i32 noundef %108, ptr noundef %399) #32
  br i1 %106, label %425, label %458

412:                                              ; preds = %410
  br i1 %405, label %413, label %425

413:                                              ; preds = %412
  %414 = getelementptr inbounds %class.Array, ptr %3, i64 0, i32 3
  %415 = getelementptr inbounds %class.Array, ptr %4, i64 0, i32 3
  %416 = zext i32 %398 to i64
  br label %440

417:                                              ; preds = %417, %406
  %418 = phi i64 [ 0, %406 ], [ %423, %417 ]
  %419 = phi i64 [ 0, %406 ], [ %422, %417 ]
  %420 = getelementptr inbounds i64, ptr %408, i64 %418
  %421 = load i64, ptr %420, align 8, !tbaa !249
  %422 = add nsw i64 %421, %419
  %423 = add nuw nsw i64 %418, 1
  %424 = icmp eq i64 %423, %409
  br i1 %424, label %410, label %417, !llvm.loop !259

425:                                              ; preds = %448, %412, %411
  %426 = phi i64 [ %.lcssa, %412 ], [ 0, %411 ], [ %.lcssa, %448 ]
  %427 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 1
  %428 = load i32, ptr %427, align 4, !tbaa !202
  %429 = icmp eq i32 %428, 0
  %430 = load i32, ptr @level, align 4
  %431 = icmp sgt i32 %430, 0
  %432 = select i1 %429, i1 %431, i1 false
  br i1 %432, label %433, label %453

433:                                              ; preds = %425
  %434 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 3
  %435 = load i32, ptr %434, align 8, !tbaa !206
  %436 = lshr i32 %435, 24
  %437 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 2
  %438 = load ptr, ptr %437, align 8, !tbaa !205
  %439 = call i32 @putc(i32 noundef %436, ptr noundef %438) #32
  br label %453

440:                                              ; preds = %448, %413
  %441 = phi i64 [ 0, %413 ], [ %449, %448 ]
  %442 = load ptr, ptr %414, align 8, !tbaa !250
  %443 = getelementptr inbounds ptr, ptr %442, i64 %441
  %444 = load ptr, ptr %443, align 8, !tbaa !38
  %445 = load ptr, ptr %415, align 8, !tbaa !247
  %446 = getelementptr inbounds i64, ptr %445, i64 %441
  %447 = load i64, ptr %446, align 8, !tbaa !249
  invoke void @_Z8compressPKclR7Encoder(ptr noundef %444, i64 noundef %447, ptr noundef nonnull align 8 dereferenceable(40) %9) #32
          to label %448 unwind label %451

448:                                              ; preds = %440
  %449 = add nuw nsw i64 %441, 1
  %450 = icmp eq i64 %449, %416
  br i1 %450, label %425, label %440, !llvm.loop !260

451:                                              ; preds = %440
  %452 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %620

453:                                              ; preds = %433, %425
  %454 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 2
  %455 = load ptr, ptr %454, align 8, !tbaa !205
  %456 = call i64 @ftell(ptr noundef %455) #32
  %457 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.53, i64 noundef %426, i64 noundef %456) #32
  br label %580

458:                                              ; preds = %411, %410
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #33
  %459 = icmp sgt i32 %55, 2
  %460 = getelementptr inbounds ptr, ptr %56, i64 2
  %461 = select i1 %459, ptr %460, ptr %61
  %462 = load ptr, ptr %461, align 8, !tbaa !38
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %10, ptr noundef %462) #32
          to label %463 unwind label %478

463:                                              ; preds = %458
  %464 = icmp eq i32 %55, 2
  br i1 %464, label %465, label %496

465:                                              ; preds = %463
  %466 = load i32, ptr %10, align 8, !tbaa !235
  %467 = add i32 %466, -2
  %468 = icmp sgt i32 %466, 1
  br i1 %468, label %469, label %490

469:                                              ; preds = %465
  %470 = getelementptr inbounds %class.Array, ptr %10, i64 0, i32 3
  %471 = load ptr, ptr %470, align 8, !tbaa !233
  %472 = getelementptr inbounds i8, ptr %471, i64 1
  %473 = zext i32 %467 to i64
  br label %474

474:                                              ; preds = %487, %469
  %475 = phi i64 [ %473, %469 ], [ %488, %487 ]
  %476 = getelementptr inbounds i8, ptr %471, i64 %475
  %477 = load i8, ptr %476, align 1, !tbaa !27
  switch i8 %477, label %482 [
    i8 47, label %493
    i8 92, label %493
  ]

478:                                              ; preds = %458
  %479 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %578

480:                                              ; preds = %492
  %481 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %567

482:                                              ; preds = %474
  %483 = icmp eq i64 %475, 1
  br i1 %483, label %484, label %487

484:                                              ; preds = %482
  %485 = load i8, ptr %472, align 1, !tbaa !27
  %486 = icmp eq i8 %485, 58
  br i1 %486, label %493, label %487

487:                                              ; preds = %484, %482
  %488 = add nsw i64 %475, -1
  %489 = icmp sgt i64 %475, 0
  br i1 %489, label %474, label %492, !llvm.loop !261

490:                                              ; preds = %465
  %491 = icmp eq i32 %467, -1
  br i1 %491, label %492, label %496

492:                                              ; preds = %490, %487
  invoke void @_ZN6StringaSEPKc(ptr noundef nonnull align 8 dereferenceable(24) %10, ptr noundef nonnull @.str.41) #32
          to label %496 unwind label %480

493:                                              ; preds = %484, %474, %474
  %494 = phi i64 [ %475, %474 ], [ %475, %474 ], [ 2, %484 ]
  %495 = getelementptr inbounds i8, ptr %471, i64 %494
  store i8 0, ptr %495, align 1, !tbaa !27
  br label %496

496:                                              ; preds = %493, %492, %490, %463
  %497 = getelementptr inbounds %class.Array, ptr %10, i64 0, i32 3
  %498 = load ptr, ptr %497, align 8, !tbaa !233
  invoke void @_ZN6StringaSEPKc(ptr noundef nonnull align 8 dereferenceable(24) %10, ptr noundef %498) #32
          to label %499 unwind label %511

499:                                              ; preds = %496
  %500 = load ptr, ptr %497, align 8, !tbaa !233
  %501 = load i8, ptr %500, align 1, !tbaa !27
  %502 = icmp eq i8 %501, 0
  br i1 %502, label %513, label %503

503:                                              ; preds = %499
  %504 = load i32, ptr %10, align 8, !tbaa !235
  %505 = icmp eq i32 %504, 3
  br i1 %505, label %506, label %510

506:                                              ; preds = %503
  %507 = getelementptr inbounds i8, ptr %500, i64 1
  %508 = load i8, ptr %507, align 1, !tbaa !27
  %509 = icmp eq i8 %508, 58
  br i1 %509, label %513, label %510

510:                                              ; preds = %506, %503
  invoke void @_ZN6StringpLEPKc(ptr noundef nonnull align 8 dereferenceable(24) %10, ptr noundef nonnull @.str.54) #32
          to label %513 unwind label %511

511:                                              ; preds = %510, %496
  %512 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %567

513:                                              ; preds = %510, %506, %499
  br i1 %405, label %514, label %520

514:                                              ; preds = %513
  %515 = getelementptr inbounds %class.Array, ptr %3, i64 0, i32 3
  %516 = getelementptr inbounds %class.Array, ptr %11, i64 0, i32 3
  %517 = getelementptr inbounds %class.Array, ptr %4, i64 0, i32 3
  %518 = getelementptr inbounds %class.Array, ptr %11, i64 0, i32 2
  %519 = zext i32 %398 to i64
  br label %530

520:                                              ; preds = %549, %513
  %521 = load i32, ptr %10, align 8, !tbaa !235
  %522 = load i32, ptr @programChecker, align 8, !tbaa !7
  %523 = sub i32 %522, %521
  store i32 %523, ptr @programChecker, align 8, !tbaa !7
  %524 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %525 = icmp sgt i32 %523, %524
  br i1 %525, label %526, label %527

526:                                              ; preds = %520
  store i32 %523, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %527

527:                                              ; preds = %526, %520
  %528 = getelementptr inbounds %class.Array, ptr %10, i64 0, i32 2
  %529 = load ptr, ptr %528, align 8, !tbaa !237
  call void @free(ptr noundef %529) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #33
  br label %580

530:                                              ; preds = %549, %514
  %531 = phi i64 [ 0, %514 ], [ %551, %549 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #33
  %532 = load ptr, ptr %497, align 8, !tbaa !233
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %11, ptr noundef %532) #32
          to label %533 unwind label %553

533:                                              ; preds = %530
  %534 = load ptr, ptr %515, align 8, !tbaa !250
  %535 = getelementptr inbounds ptr, ptr %534, i64 %531
  %536 = load ptr, ptr %535, align 8, !tbaa !38
  invoke void @_ZN6StringpLEPKc(ptr noundef nonnull align 8 dereferenceable(24) %11, ptr noundef %536) #32
          to label %537 unwind label %555

537:                                              ; preds = %533
  %538 = load ptr, ptr %516, align 8, !tbaa !233
  %539 = load ptr, ptr %517, align 8, !tbaa !247
  %540 = getelementptr inbounds i64, ptr %539, i64 %531
  %541 = load i64, ptr %540, align 8, !tbaa !249
  invoke void @_Z10decompressPKclR7Encoder(ptr noundef %538, i64 noundef %541, ptr noundef nonnull align 8 dereferenceable(40) %9) #32
          to label %542 unwind label %555

542:                                              ; preds = %537
  %543 = load i32, ptr %11, align 8, !tbaa !235
  %544 = load i32, ptr @programChecker, align 8, !tbaa !7
  %545 = sub i32 %544, %543
  store i32 %545, ptr @programChecker, align 8, !tbaa !7
  %546 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %547 = icmp sgt i32 %545, %546
  br i1 %547, label %548, label %549

548:                                              ; preds = %542
  store i32 %545, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %549

549:                                              ; preds = %548, %542
  %550 = load ptr, ptr %518, align 8, !tbaa !237
  call void @free(ptr noundef %550) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #33
  %551 = add nuw nsw i64 %531, 1
  %552 = icmp eq i64 %551, %519
  br i1 %552, label %520, label %530, !llvm.loop !262

553:                                              ; preds = %530
  %554 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %565

555:                                              ; preds = %537, %533
  %556 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  %557 = load i32, ptr %11, align 8, !tbaa !235
  %558 = load i32, ptr @programChecker, align 8, !tbaa !7
  %559 = sub i32 %558, %557
  store i32 %559, ptr @programChecker, align 8, !tbaa !7
  %560 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %561 = icmp sgt i32 %559, %560
  br i1 %561, label %562, label %563

562:                                              ; preds = %555
  store i32 %559, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %563

563:                                              ; preds = %562, %555
  %564 = load ptr, ptr %518, align 8, !tbaa !237
  call void @free(ptr noundef %564) #31
  br label %565

565:                                              ; preds = %563, %553
  %566 = phi { ptr, i32 } [ %556, %563 ], [ %554, %553 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #33
  br label %567

567:                                              ; preds = %565, %511, %480
  %568 = phi { ptr, i32 } [ %566, %565 ], [ %512, %511 ], [ %481, %480 ]
  %569 = load i32, ptr %10, align 8, !tbaa !235
  %570 = load i32, ptr @programChecker, align 8, !tbaa !7
  %571 = sub i32 %570, %569
  store i32 %571, ptr @programChecker, align 8, !tbaa !7
  %572 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %573 = icmp sgt i32 %571, %572
  br i1 %573, label %574, label %575

574:                                              ; preds = %567
  store i32 %571, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %575

575:                                              ; preds = %574, %567
  %576 = getelementptr inbounds %class.Array, ptr %10, i64 0, i32 2
  %577 = load ptr, ptr %576, align 8, !tbaa !237
  call void @free(ptr noundef %577) #31
  br label %578

578:                                              ; preds = %575, %478
  %579 = phi { ptr, i32 } [ %568, %575 ], [ %479, %478 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #33
  br label %620

580:                                              ; preds = %527, %453
  %581 = call i32 @fclose(ptr noundef %399) #32
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %9) #33
  %582 = load i32, ptr %6, align 8, !tbaa !235
  %583 = load i32, ptr @programChecker, align 8, !tbaa !7
  %584 = sub i32 %583, %582
  store i32 %584, ptr @programChecker, align 8, !tbaa !7
  %585 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %586 = icmp sgt i32 %584, %585
  br i1 %586, label %587, label %588

587:                                              ; preds = %580
  store i32 %584, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %588

588:                                              ; preds = %587, %580
  %589 = getelementptr inbounds %class.Array, ptr %6, i64 0, i32 2
  %590 = load ptr, ptr %589, align 8, !tbaa !237
  call void @free(ptr noundef %590) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #33
  %591 = load i32, ptr %5, align 8, !tbaa !235
  %592 = load i32, ptr @programChecker, align 8, !tbaa !7
  %593 = sub i32 %592, %591
  store i32 %593, ptr @programChecker, align 8, !tbaa !7
  %594 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %595 = icmp sgt i32 %593, %594
  br i1 %595, label %596, label %597

596:                                              ; preds = %588
  store i32 %593, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %597

597:                                              ; preds = %596, %588
  %598 = getelementptr inbounds %class.Array, ptr %5, i64 0, i32 2
  %599 = load ptr, ptr %598, align 8, !tbaa !237
  call void @free(ptr noundef %599) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #33
  %600 = load i32, ptr %4, align 8, !tbaa !263
  %601 = load i32, ptr @programChecker, align 8, !tbaa !7
  %602 = shl i32 %600, 3
  %603 = sub i32 %601, %602
  store i32 %603, ptr @programChecker, align 8, !tbaa !7
  %604 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %605 = icmp sgt i32 %603, %604
  br i1 %605, label %606, label %607

606:                                              ; preds = %597
  store i32 %603, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %607

607:                                              ; preds = %606, %597
  %608 = getelementptr inbounds %class.Array, ptr %4, i64 0, i32 2
  %609 = load ptr, ptr %608, align 8, !tbaa !264
  call void @free(ptr noundef %609) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #33
  %610 = load i32, ptr %3, align 8, !tbaa !265
  %611 = load i32, ptr @programChecker, align 8, !tbaa !7
  %612 = shl i32 %610, 3
  %613 = sub i32 %611, %612
  store i32 %613, ptr @programChecker, align 8, !tbaa !7
  %614 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %615 = icmp sgt i32 %613, %614
  br i1 %615, label %616, label %617

616:                                              ; preds = %607
  store i32 %613, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %617

617:                                              ; preds = %616, %607
  %618 = getelementptr inbounds %class.Array, ptr %3, i64 0, i32 2
  %619 = load ptr, ptr %618, align 8, !tbaa !266
  call void @free(ptr noundef %619) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #33
  br label %685

620:                                              ; preds = %578, %451
  %621 = phi { ptr, i32 } [ %452, %451 ], [ %579, %578 ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %9) #33
  br label %622

622:                                              ; preds = %620, %374, %355, %320, %318, %306, %292
  %623 = phi { ptr, i32 } [ %293, %292 ], [ %621, %620 ], [ %307, %306 ], [ %375, %374 ], [ %356, %355 ], [ %319, %318 ], [ %321, %320 ]
  %624 = load i32, ptr %6, align 8, !tbaa !235
  %625 = load i32, ptr @programChecker, align 8, !tbaa !7
  %626 = sub i32 %625, %624
  store i32 %626, ptr @programChecker, align 8, !tbaa !7
  %627 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %628 = icmp sgt i32 %626, %627
  br i1 %628, label %629, label %630

629:                                              ; preds = %622
  store i32 %626, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %630

630:                                              ; preds = %629, %622
  %631 = getelementptr inbounds %class.Array, ptr %6, i64 0, i32 2
  %632 = load ptr, ptr %631, align 8, !tbaa !237
  call void @free(ptr noundef %632) #31
  br label %633

633:                                              ; preds = %630, %131
  %634 = phi { ptr, i32 } [ %623, %630 ], [ %132, %131 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #33
  br label %635

635:                                              ; preds = %633, %103
  %636 = phi { ptr, i32 } [ %634, %633 ], [ %104, %103 ]
  %637 = load i32, ptr %5, align 8, !tbaa !235
  %638 = load i32, ptr @programChecker, align 8, !tbaa !7
  %639 = sub i32 %638, %637
  store i32 %639, ptr @programChecker, align 8, !tbaa !7
  %640 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %641 = icmp sgt i32 %639, %640
  br i1 %641, label %642, label %643

642:                                              ; preds = %635
  store i32 %639, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %643

643:                                              ; preds = %642, %635
  %644 = getelementptr inbounds %class.Array, ptr %5, i64 0, i32 2
  %645 = load ptr, ptr %644, align 8, !tbaa !237
  call void @free(ptr noundef %645) #31
  br label %646

646:                                              ; preds = %643, %98
  %647 = phi { ptr, i32 } [ %636, %643 ], [ %99, %98 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #33
  %648 = load i32, ptr %4, align 8, !tbaa !263
  %649 = load i32, ptr @programChecker, align 8, !tbaa !7
  %650 = shl i32 %648, 3
  %651 = sub i32 %649, %650
  store i32 %651, ptr @programChecker, align 8, !tbaa !7
  %652 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %653 = icmp sgt i32 %651, %652
  br i1 %653, label %654, label %655

654:                                              ; preds = %646
  store i32 %651, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %655

655:                                              ; preds = %654, %646
  %656 = getelementptr inbounds %class.Array, ptr %4, i64 0, i32 2
  %657 = load ptr, ptr %656, align 8, !tbaa !264
  call void @free(ptr noundef %657) #31
  br label %658

658:                                              ; preds = %655, %96
  %659 = phi { ptr, i32 } [ %647, %655 ], [ %97, %96 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #33
  %660 = load i32, ptr %3, align 8, !tbaa !265
  %661 = load i32, ptr @programChecker, align 8, !tbaa !7
  %662 = shl i32 %660, 3
  %663 = sub i32 %661, %662
  store i32 %663, ptr @programChecker, align 8, !tbaa !7
  %664 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %665 = icmp sgt i32 %663, %664
  br i1 %665, label %666, label %667

666:                                              ; preds = %658
  store i32 %663, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %667

667:                                              ; preds = %666, %658
  %668 = getelementptr inbounds %class.Array, ptr %3, i64 0, i32 2
  %669 = load ptr, ptr %668, align 8, !tbaa !266
  call void @free(ptr noundef %669) #31
  br label %670

670:                                              ; preds = %667, %94
  %671 = phi { ptr, i32 } [ %659, %667 ], [ %95, %94 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #33
  br label %672

672:                                              ; preds = %670, %42
  %673 = phi { ptr, i32 } [ %671, %670 ], [ %44, %42 ]
  %674 = phi i8 [ %57, %670 ], [ %43, %42 ]
  %675 = extractvalue { ptr, i32 } %673, 1
  %676 = call i32 @llvm.eh.typeid.for(ptr nonnull @_ZTIPKc) #33
  %677 = icmp eq i32 %675, %676
  br i1 %677, label %678, label %693

678:                                              ; preds = %672
  %679 = extractvalue { ptr, i32 } %673, 0
  %680 = call ptr @__cxa_begin_catch(ptr %679) #33
  %681 = icmp eq ptr %680, null
  br i1 %681, label %684, label %682

682:                                              ; preds = %678
  %683 = call i32 @puts(ptr nonnull dereferenceable(1) %680)
  br label %684

684:                                              ; preds = %682, %678
  call void @__cxa_end_catch() #33
  br label %685

685:                                              ; preds = %684, %617
  %686 = phi i8 [ %674, %684 ], [ %57, %617 ]
  %687 = and i8 %686, 1
  %688 = icmp eq i8 %687, 0
  br i1 %688, label %692, label %689

689:                                              ; preds = %685
  %690 = call i32 @puts(ptr nonnull dereferenceable(1) @str.63)
  %691 = call i32 @getchar() #32
  br label %692

692:                                              ; preds = %689, %685
  ret i32 0

693:                                              ; preds = %672
  resume { ptr, i32 } %673
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIPcLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !267
  store i32 %1, ptr %0, align 8, !tbaa !265
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl i32 %1, 3
  %9 = load i32, ptr @programChecker, align 8, !tbaa !7
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !7
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #34
  %17 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !266
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.59, ptr %20, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !250
  br label %23

23:                                               ; preds = %21, %5
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIlLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !268
  store i32 %1, ptr %0, align 8, !tbaa !263
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl i32 %1, 3
  %9 = load i32, ptr @programChecker, align 8, !tbaa !7
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !7
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #34
  %17 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !264
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #33
  store ptr @.str.59, ptr %20, align 16, !tbaa !38
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #35
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !247
  br label %23

23:                                               ; preds = %21, %5
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #24

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIPcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !267
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, ptr %0, align 8, !tbaa !265
  br label %29

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !266
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !250
  %12 = load i32, ptr %0, align 8, !tbaa !265
  tail call void @_ZN5ArrayIPcLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #32
  %13 = icmp eq ptr %9, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %7
  %15 = icmp eq ptr %11, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %14
  %17 = load ptr, ptr %10, align 8, !tbaa !250
  %18 = tail call i32 @llvm.smin.i32(i32 %1, i32 %12)
  %19 = sext i32 %18 to i64
  %20 = shl nsw i64 %19, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr nonnull align 8 %11, i64 %20, i1 false)
  %21 = load i32, ptr %0, align 8, !tbaa !265
  %22 = load i32, ptr @programChecker, align 8, !tbaa !7
  %23 = shl i32 %21, 3
  %24 = sub i32 %22, %23
  store i32 %24, ptr @programChecker, align 8, !tbaa !7
  %25 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %26 = icmp sgt i32 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %16
  store i32 %24, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %28

28:                                               ; preds = %27, %16, %14
  tail call void @free(ptr noundef nonnull %9) #31
  br label %29

29:                                               ; preds = %28, %7, %6
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIlLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !268
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, ptr %0, align 8, !tbaa !263
  br label %29

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !264
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !247
  %12 = load i32, ptr %0, align 8, !tbaa !263
  tail call void @_ZN5ArrayIlLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #32
  %13 = icmp eq ptr %9, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %7
  %15 = icmp eq ptr %11, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %14
  %17 = load ptr, ptr %10, align 8, !tbaa !247
  %18 = tail call i32 @llvm.smin.i32(i32 %1, i32 %12)
  %19 = sext i32 %18 to i64
  %20 = shl nsw i64 %19, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr nonnull align 8 %11, i64 %20, i1 false)
  %21 = load i32, ptr %0, align 8, !tbaa !263
  %22 = load i32, ptr @programChecker, align 8, !tbaa !7
  %23 = shl i32 %21, 3
  %24 = sub i32 %22, %23
  store i32 %24, ptr @programChecker, align 8, !tbaa !7
  %25 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %26 = icmp sgt i32 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %16
  store i32 %24, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %28

28:                                               ; preds = %27, %16, %14
  tail call void @free(ptr noundef nonnull %9) #31
  br label %29

29:                                               ; preds = %28, %7, %6
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(read)
declare i64 @atol(ptr nocapture noundef) local_unnamed_addr #15

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #24

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN5ArrayIhLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #7 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !40
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, ptr %0, align 8, !tbaa !23
  br label %27

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !25
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !26
  %12 = load i32, ptr %0, align 8, !tbaa !23
  tail call void @_ZN5ArrayIhLi0EE6createEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) #32
  %13 = icmp eq ptr %9, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %7
  %15 = icmp eq ptr %11, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %14
  %17 = load ptr, ptr %10, align 8, !tbaa !26
  %18 = tail call i32 @llvm.smin.i32(i32 %1, i32 %12)
  %19 = sext i32 %18 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %17, ptr nonnull align 1 %11, i64 %19, i1 false)
  %20 = load i32, ptr %0, align 8, !tbaa !23
  %21 = load i32, ptr @programChecker, align 8, !tbaa !7
  %22 = sub i32 %21, %20
  store i32 %22, ptr @programChecker, align 8, !tbaa !7
  %23 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %24 = icmp sgt i32 %22, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %16
  store i32 %22, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %26

26:                                               ; preds = %25, %16, %14
  tail call void @free(ptr noundef nonnull %9) #31
  br label %27

27:                                               ; preds = %26, %7, %6
  ret void
}

; Function Attrs: mustprogress optsize uwtable
define internal void @_ZN6StringaSEPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef %1) #7 comdat align 2 {
  %3 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #38
  %4 = trunc i64 %3 to i32
  %5 = add i32 %4, 1
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %5) #32
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !233
  %8 = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %7, ptr noundef nonnull dereferenceable(1) %1) #31
  ret void
}

; Function Attrs: nounwind memory(none)
declare i32 @llvm.eh.typeid.for(ptr) #25

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: nofree nounwind optsize
declare noundef i32 @getchar() local_unnamed_addr #17

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(argmem: readwrite)
declare ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #26

; Function Attrs: norecurse optsize uwtable
define dso_local noundef i32 @main(i32 noundef %0, ptr nocapture noundef readonly %1) #27 personality ptr @__gxx_personality_v0 {
  %3 = alloca i32, align 4
  %4 = alloca [3 x ptr], align 16
  %5 = alloca %class.Buf, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #33
  store i32 1, ptr %3, align 4, !tbaa !18
  %6 = tail call i32 @fork() #31
  switch i32 %6, label %10 [
    i32 0, label %7
    i32 -1, label %9
  ]

7:                                                ; preds = %2
  %8 = tail call noundef i32 @_Z7paqmainiPPc(i32 noundef %0, ptr noundef %1) #32
  tail call void @exit(i32 noundef 0) #40
  unreachable

9:                                                ; preds = %2
  tail call void @perror(ptr noundef nonnull @.str.57) #39
  tail call void @exit(i32 noundef 1) #40
  unreachable

10:                                               ; preds = %2
  %11 = call i32 @wait(ptr noundef nonnull %3) #32
  %12 = load i32, ptr %3, align 4, !tbaa !18
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %62

14:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #33
  %15 = load ptr, ptr %1, align 8, !tbaa !38
  store ptr %15, ptr %4, align 16, !tbaa !38
  %16 = call noalias dereferenceable_or_null(3) ptr @strdup(ptr noundef nonnull @.str.58) #31
  %17 = getelementptr inbounds [3 x ptr], ptr %4, i64 0, i64 1
  store ptr %16, ptr %17, align 8, !tbaa !38
  br label %18

18:                                               ; preds = %25, %14
  %19 = phi ptr [ %1, %14 ], [ %21, %25 ]
  %20 = phi i32 [ %0, %14 ], [ %22, %25 ]
  %21 = getelementptr inbounds ptr, ptr %19, i64 1
  %22 = add nsw i32 %20, -1
  %23 = icmp eq i32 %22, 0
  %24 = load ptr, ptr %21, align 8, !tbaa !38
  br i1 %23, label %28, label %25

25:                                               ; preds = %18
  %26 = load i8, ptr %24, align 1, !tbaa !27
  %27 = icmp eq i8 %26, 45
  br i1 %27, label %18, label %28, !llvm.loop !269

28:                                               ; preds = %25, %18
  %.lcssa = phi ptr [ %24, %25 ], [ %24, %18 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #33
  call void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %.lcssa) #32
  invoke void @_ZN6StringpLEPKc(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull @.str.41) #32
          to label %29 unwind label %40

29:                                               ; preds = %28
  %30 = call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %15, i32 noundef 47) #38
  %31 = icmp eq ptr %30, null
  %32 = getelementptr inbounds i8, ptr %30, i64 1
  %33 = select i1 %31, ptr %15, ptr %32
  invoke void @_ZN6StringpLEPKc(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %33) #32
          to label %34 unwind label %40

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.Array, ptr %5, i64 0, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !233
  %37 = call noalias ptr @strdup(ptr noundef %36) #31
  %38 = getelementptr inbounds [3 x ptr], ptr %4, i64 0, i64 2
  store ptr %37, ptr %38, align 16, !tbaa !38
  %39 = invoke noundef i32 @_Z7paqmainiPPc(i32 noundef 3, ptr noundef nonnull %4) #32
          to label %51 unwind label %40

40:                                               ; preds = %34, %29, %28
  %41 = landingpad { ptr, i32 }
          cleanup
  %42 = load i32, ptr %5, align 8, !tbaa !235
  %43 = load i32, ptr @programChecker, align 8, !tbaa !7
  %44 = sub i32 %43, %42
  store i32 %44, ptr @programChecker, align 8, !tbaa !7
  %45 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %46 = icmp sgt i32 %44, %45
  br i1 %46, label %47, label %48

47:                                               ; preds = %40
  store i32 %44, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %48

48:                                               ; preds = %47, %40
  %49 = getelementptr inbounds %class.Array, ptr %5, i64 0, i32 2
  %50 = load ptr, ptr %49, align 8, !tbaa !237
  call void @free(ptr noundef %50) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #33
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #33
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #33
  resume { ptr, i32 } %41

51:                                               ; preds = %34
  call void @free(ptr noundef %16) #31
  %52 = call i32 @unlink(ptr noundef %37) #31
  call void @free(ptr noundef %37) #31
  %53 = load i32, ptr %5, align 8, !tbaa !235
  %54 = load i32, ptr @programChecker, align 8, !tbaa !7
  %55 = sub i32 %54, %53
  store i32 %55, ptr @programChecker, align 8, !tbaa !7
  %56 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  %57 = icmp sgt i32 %55, %56
  br i1 %57, label %58, label %59

58:                                               ; preds = %51
  store i32 %55, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !13
  br label %59

59:                                               ; preds = %58, %51
  %60 = getelementptr inbounds %class.Array, ptr %5, i64 0, i32 2
  %61 = load ptr, ptr %60, align 8, !tbaa !237
  call void @free(ptr noundef %61) #31
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #33
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #33
  br label %62

62:                                               ; preds = %59, %10
  %63 = phi i32 [ 0, %59 ], [ %12, %10 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #33
  ret i32 %63
}

; Function Attrs: nofree nounwind optsize
declare i32 @fork() local_unnamed_addr #17

; Function Attrs: noreturn nounwind optsize
declare void @exit(i32 noundef) local_unnamed_addr #28

; Function Attrs: optsize
declare i32 @wait(ptr noundef) local_unnamed_addr #29

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(argmem: readwrite, inaccessiblemem: readwrite)
declare noalias ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #30

; Function Attrs: nofree nounwind optsize
declare noundef i32 @unlink(ptr nocapture noundef readonly) local_unnamed_addr #17

attributes #0 = { optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { inlinehint nounwind optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nofree nounwind }
attributes #4 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #5 = { nounwind optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress nounwind optsize willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nofree nounwind optsize willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { mustprogress noreturn optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nobuiltin nounwind optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { nobuiltin optsize allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #15 = { mustprogress nofree nounwind optsize willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { inlinehint mustprogress optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { nofree nounwind optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #19 = { mustprogress nofree nosync nounwind optsize willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #21 = { mustprogress nofree nounwind optsize willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { nofree nounwind optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { mustprogress nofree nounwind optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { mustprogress nofree nounwind optsize willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { nounwind memory(none) }
attributes #26 = { mustprogress nofree nounwind optsize willreturn memory(argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { norecurse optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { noreturn nounwind optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #29 = { optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #30 = { mustprogress nofree nounwind optsize willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #31 = { nounwind optsize }
attributes #32 = { optsize }
attributes #33 = { nounwind }
attributes #34 = { nounwind optsize allocsize(0,1) }
attributes #35 = { noreturn }
attributes #36 = { builtin nounwind optsize }
attributes #37 = { builtin optsize allocsize(0) }
attributes #38 = { nounwind optsize willreturn memory(read) }
attributes #39 = { cold optsize }
attributes #40 = { noreturn nounwind optsize }

!llvm.ident = !{!0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6}

!0 = !{!"clang version 17.0.6 (https://github.com/Casperento/llvm-project.git 9b0073551ece0d22bf3378af2b03e456a26031b6)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 2}
!5 = !{i32 1, !"ThinLTO", i32 0}
!6 = !{i32 1, !"EnableSplitLTOUnit", i32 1}
!7 = !{!8, !9, i64 0}
!8 = !{!"_ZTS14ProgramChecker", !9, i64 0, !9, i64 4, !12, i64 8}
!9 = !{!"int", !10, i64 0}
!10 = !{!"omnipotent char", !11, i64 0}
!11 = !{!"Simple C++ TBAA"}
!12 = !{!"long", !10, i64 0}
!13 = !{!8, !9, i64 4}
!14 = !{!8, !12, i64 8}
!15 = !{!16, !17, i64 16}
!16 = !{!"_ZTS5ArrayIjLi0EE", !9, i64 0, !9, i64 4, !17, i64 8, !17, i64 16}
!17 = !{!"any pointer", !10, i64 0}
!18 = !{!9, !9, i64 0}
!19 = !{!20, !9, i64 24}
!20 = !{!"_ZTS6Random", !16, i64 0, !9, i64 24}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.mustprogress"}
!23 = !{!24, !9, i64 0}
!24 = !{!"_ZTS5ArrayIhLi0EE", !9, i64 0, !9, i64 4, !17, i64 8, !17, i64 16}
!25 = !{!24, !17, i64 8}
!26 = !{!24, !17, i64 16}
!27 = !{!10, !10, i64 0}
!28 = distinct !{!28, !22}
!29 = !{!30, !30, i64 0}
!30 = !{!"short", !10, i64 0}
!31 = !{i32 -16777216, i32 16777216}
!32 = distinct !{!32, !22}
!33 = distinct !{!33, !22}
!34 = !{!35, !9, i64 0}
!35 = !{!"_ZTS5ArrayIsLi0EE", !9, i64 0, !9, i64 4, !17, i64 8, !17, i64 16}
!36 = !{!35, !17, i64 8}
!37 = !{!35, !9, i64 4}
!38 = !{!17, !17, i64 0}
!39 = !{!35, !17, i64 16}
!40 = !{!24, !9, i64 4}
!41 = !{!16, !9, i64 0}
!42 = !{!16, !17, i64 8}
!43 = !{!16, !9, i64 4}
!44 = !{!45, !17, i64 128}
!45 = !{!"_ZTS5Mixer", !9, i64 0, !9, i64 4, !9, i64 8, !46, i64 16, !46, i64 40, !47, i64 64, !9, i64 88, !9, i64 92, !9, i64 96, !47, i64 104, !17, i64 128}
!46 = !{!"_ZTS5ArrayIsLi16EE", !9, i64 0, !9, i64 4, !17, i64 8, !17, i64 16}
!47 = !{!"_ZTS5ArrayIiLi0EE", !9, i64 0, !9, i64 4, !17, i64 8, !17, i64 16}
!48 = !{!47, !9, i64 0}
!49 = !{!47, !17, i64 8}
!50 = !{!46, !9, i64 0}
!51 = !{!46, !17, i64 8}
!52 = !{!45, !9, i64 0}
!53 = !{!45, !9, i64 4}
!54 = !{!45, !9, i64 8}
!55 = !{!45, !9, i64 88}
!56 = !{!45, !9, i64 92}
!57 = !{!45, !9, i64 96}
!58 = !{!47, !17, i64 16}
!59 = !{!46, !17, i64 16}
!60 = distinct !{!60, !22, !61, !62}
!61 = !{!"llvm.loop.isvectorized", i32 1}
!62 = !{!"llvm.loop.unroll.runtime.disable"}
!63 = distinct !{!63, !22}
!64 = !{!46, !9, i64 4}
!65 = !{!47, !9, i64 4}
!66 = !{!67, !9, i64 0}
!67 = !{!"_ZTS4APM1", !9, i64 0, !9, i64 4, !68, i64 8}
!68 = !{!"_ZTS5ArrayItLi0EE", !9, i64 0, !9, i64 4, !17, i64 8, !17, i64 16}
!69 = !{!67, !9, i64 4}
!70 = !{!68, !17, i64 16}
!71 = distinct !{!71, !22}
!72 = distinct !{!72, !22}
!73 = !{!68, !9, i64 4}
!74 = !{!68, !9, i64 0}
!75 = !{!68, !17, i64 8}
!76 = !{!77, !9, i64 0}
!77 = !{!"_ZTS8StateMap", !9, i64 0, !9, i64 4, !16, i64 8}
!78 = !{!77, !9, i64 4}
!79 = distinct !{!79, !22}
!80 = distinct !{!80, !22}
!81 = !{!82, !9, i64 0}
!82 = !{!"_ZTS10ContextMap", !9, i64 0, !83, i64 8, !84, i64 32, !84, i64 56, !16, i64 80, !84, i64 104, !17, i64 128, !9, i64 136}
!83 = !{!"_ZTS5ArrayIN10ContextMap1EELi64EE", !9, i64 0, !9, i64 4, !17, i64 8, !17, i64 16}
!84 = !{!"_ZTS5ArrayIPhLi0EE", !9, i64 0, !9, i64 4, !17, i64 8, !17, i64 16}
!85 = !{!82, !9, i64 136}
!86 = !{!82, !17, i64 128}
!87 = !{!83, !17, i64 16}
!88 = !{!84, !17, i64 16}
!89 = distinct !{!89, !22}
!90 = !{!83, !9, i64 4}
!91 = !{!83, !9, i64 0}
!92 = !{!83, !17, i64 8}
!93 = !{!84, !9, i64 4}
!94 = !{!84, !9, i64 0}
!95 = !{!84, !17, i64 8}
!96 = !{!97, !10, i64 14}
!97 = !{!"_ZTSN10ContextMap1EE", !10, i64 0, !10, i64 14, !10, i64 15}
!98 = distinct !{!98, !22}
!99 = distinct !{!99, !22}
!100 = !{!"branch_weights", i32 1, i32 1048575}
!101 = distinct !{!101, !22}
!102 = !{!103, !9, i64 24}
!103 = !{!"_ZTS25SmallStationaryContextMap", !68, i64 0, !9, i64 24, !17, i64 32}
!104 = distinct !{!104, !22, !61, !62}
!105 = !{!103, !17, i64 32}
!106 = distinct !{!106, !22}
!107 = distinct !{!107, !22}
!108 = distinct !{!108, !22}
!109 = distinct !{!109, !22}
!110 = distinct !{!110, !22}
!111 = distinct !{!111, !22}
!112 = distinct !{!112, !22}
!113 = distinct !{!113, !22}
!114 = !{!115, !17, i64 16}
!115 = !{!"_ZTS5ArrayI3HUFLi0EE", !9, i64 0, !9, i64 4, !17, i64 8, !17, i64 16}
!116 = !{!115, !9, i64 0}
!117 = distinct !{!117, !22}
!118 = distinct !{!118, !22}
!119 = !{!120, !9, i64 0}
!120 = !{!"_ZTS3HUF", !9, i64 0, !9, i64 4, !9, i64 8}
!121 = !{!120, !9, i64 4}
!122 = !{!120, !9, i64 8}
!123 = distinct !{!123, !22}
!124 = distinct !{!124, !22}
!125 = distinct !{!125, !22}
!126 = distinct !{!126, !22}
!127 = distinct !{!127, !22}
!128 = distinct !{!128, !22}
!129 = distinct !{!129, !22}
!130 = distinct !{!130, !22}
!131 = distinct !{!131, !22}
!132 = distinct !{!132, !22}
!133 = distinct !{!133, !22}
!134 = distinct !{!134, !22}
!135 = distinct !{!135, !22}
!136 = distinct !{!136, !22}
!137 = distinct !{!137, !22}
!138 = !{!139, !9, i64 24}
!139 = !{!"_ZTS2BHILi9EE", !140, i64 0, !9, i64 24}
!140 = !{!"_ZTS5ArrayIhLi64EE", !9, i64 0, !9, i64 4, !17, i64 8, !17, i64 16}
!141 = distinct !{!141, !22}
!142 = !{!140, !17, i64 16}
!143 = distinct !{!143, !22}
!144 = distinct !{!144, !22}
!145 = distinct !{!145, !22}
!146 = distinct !{!146, !22}
!147 = !{!115, !9, i64 4}
!148 = !{!115, !17, i64 8}
!149 = !{!140, !9, i64 4}
!150 = !{!140, !9, i64 0}
!151 = !{!140, !17, i64 8}
!152 = distinct !{!152, !22}
!153 = distinct !{!153, !22}
!154 = distinct !{!154, !22}
!155 = distinct !{!155, !22}
!156 = distinct !{!156, !22}
!157 = !{!158, !158, i64 0}
!158 = !{!"double", !10, i64 0}
!159 = distinct !{!159, !22}
!160 = distinct !{!160, !22}
!161 = distinct !{!161, !22}
!162 = distinct !{!162, !22}
!163 = distinct !{!163, !22}
!164 = distinct !{!164, !22}
!165 = distinct !{!165, !22}
!166 = distinct !{!166, !22}
!167 = distinct !{!167, !22}
!168 = distinct !{!168, !22}
!169 = distinct !{!169, !22}
!170 = distinct !{!170, !22}
!171 = distinct !{!171, !22}
!172 = distinct !{!172, !22}
!173 = distinct !{!173, !22}
!174 = distinct !{!174, !22}
!175 = distinct !{!175, !22}
!176 = distinct !{!176, !22}
!177 = distinct !{!177, !22}
!178 = distinct !{!178, !22}
!179 = distinct !{!179, !22}
!180 = !{!181, !17, i64 16}
!181 = !{!"_ZTS5ArrayI7DMCNodeLi0EE", !9, i64 0, !9, i64 4, !17, i64 8, !17, i64 16}
!182 = !{!183, !10, i64 8}
!183 = !{!"_ZTS7DMCNode", !10, i64 0, !10, i64 8, !9, i64 9, !9, i64 10}
!184 = !{!181, !9, i64 0}
!185 = distinct !{!185, !22}
!186 = distinct !{!186, !22}
!187 = !{!181, !9, i64 4}
!188 = !{!181, !17, i64 8}
!189 = !{!190, !190, i64 0}
!190 = !{!"_ZTS8Filetype", !10, i64 0}
!191 = !{i32 0, i32 -2147483648}
!192 = !{i32 0, i32 65536}
!193 = distinct !{!193, !22}
!194 = distinct !{!194, !22}
!195 = !{!196, !9, i64 24}
!196 = !{!"_ZTS2BHILi4EE", !140, i64 0, !9, i64 24}
!197 = distinct !{!197, !22}
!198 = !{!199, !17, i64 32}
!199 = !{!"_ZTS13RunContextMap", !196, i64 0, !17, i64 32}
!200 = !{!201, !9, i64 0}
!201 = !{!"_ZTS9Predictor", !9, i64 0}
!202 = !{!203, !204, i64 4}
!203 = !{!"_ZTS7Encoder", !201, i64 0, !204, i64 4, !17, i64 8, !9, i64 16, !9, i64 20, !9, i64 24, !17, i64 32}
!204 = !{!"_ZTS4Mode", !10, i64 0}
!205 = !{!203, !17, i64 8}
!206 = !{!203, !9, i64 16}
!207 = !{!203, !9, i64 20}
!208 = !{!203, !9, i64 24}
!209 = !{!203, !17, i64 32}
!210 = distinct !{!210, !22}
!211 = distinct !{!211, !22}
!212 = distinct !{!212, !22}
!213 = distinct !{!213, !22}
!214 = distinct !{!214, !22}
!215 = distinct !{!215, !22}
!216 = distinct !{!216, !22}
!217 = distinct !{!217, !22}
!218 = distinct !{!218, !22}
!219 = distinct !{!219, !22}
!220 = distinct !{!220, !22}
!221 = distinct !{!221, !22}
!222 = distinct !{!222, !22}
!223 = distinct !{!223, !22}
!224 = distinct !{!224, !22}
!225 = distinct !{!225, !22}
!226 = !{i32 0, i32 256}
!227 = distinct !{!227, !22}
!228 = distinct !{!228, !22}
!229 = distinct !{!229, !22}
!230 = distinct !{!230, !22}
!231 = distinct !{!231, !22}
!232 = distinct !{!232, !22}
!233 = !{!234, !17, i64 16}
!234 = !{!"_ZTS5ArrayIcLi0EE", !9, i64 0, !9, i64 4, !17, i64 8, !17, i64 16}
!235 = !{!234, !9, i64 0}
!236 = distinct !{!236, !22}
!237 = !{!234, !17, i64 8}
!238 = distinct !{!238, !22}
!239 = distinct !{!239, !22}
!240 = !{!234, !9, i64 4}
!241 = distinct !{!241, !22}
!242 = distinct !{!242, !22}
!243 = distinct !{!243, !22}
!244 = distinct !{!244, !22}
!245 = distinct !{!245, !22}
!246 = distinct !{!246, !22}
!247 = !{!248, !17, i64 16}
!248 = !{!"_ZTS5ArrayIlLi0EE", !9, i64 0, !9, i64 4, !17, i64 8, !17, i64 16}
!249 = !{!12, !12, i64 0}
!250 = !{!251, !17, i64 16}
!251 = !{!"_ZTS5ArrayIPcLi0EE", !9, i64 0, !9, i64 4, !17, i64 8, !17, i64 16}
!252 = distinct !{!252, !22}
!253 = distinct !{!253, !22}
!254 = distinct !{!254, !22}
!255 = distinct !{!255, !22}
!256 = distinct !{!256, !22}
!257 = distinct !{!257, !22}
!258 = distinct !{!258, !22}
!259 = distinct !{!259, !22}
!260 = distinct !{!260, !22}
!261 = distinct !{!261, !22}
!262 = distinct !{!262, !22}
!263 = !{!248, !9, i64 0}
!264 = !{!248, !17, i64 8}
!265 = !{!251, !9, i64 0}
!266 = !{!251, !17, i64 8}
!267 = !{!251, !9, i64 4}
!268 = !{!248, !9, i64 4}
!269 = distinct !{!269, !22}
