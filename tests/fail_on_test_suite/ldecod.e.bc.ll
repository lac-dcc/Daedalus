; ModuleID = '/src/llvm-test-suite/build/MultiSource/Applications/JM/ldecod/ldecod.e.bc'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.old_slice_par = type { i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32 }
%struct.decoded_picture_buffer = type { ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.pic_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, [8 x i32], [6 x [16 x i32]], [2 x [64 x i32]], [6 x i32], [2 x i32], i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.seq_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], [6 x [16 x i32]], [2 x [64 x i32]], [6 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vui_seq_parameters_t }
%struct.vui_seq_parameters_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrd_parameters_t, i32, %struct.hrd_parameters_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hrd_parameters_t = type { i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], i32, i32, i32, i32 }
%struct.NALU_t = type { i32, i32, i32, i32, i32, i32, ptr }
%struct.DecodingEnvironment = type { i32, i32, i32, i32, i32, ptr, ptr }
%struct.BiContextType = type { i16, i8 }
%struct.img_par = type { i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [16 x [16 x i16]], [6 x [32 x i32]], [16 x [16 x i32]], [4 x [12 x [4 x [4 x i32]]]], [16 x i32], ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, ptr, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x [2 x i32]], [3 x [2 x i32]], i32, i32, i64, i64, %struct.timeb, %struct.timeb, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.timeb = type { i64, i16, i16, i16 }
%struct.pix_pos = type { i32, i32, i32, i32, i32, i32 }
%struct.storable_picture = type { i32, i32, i32, i32, i32, [50 x [6 x [33 x i64]]], [50 x [6 x [33 x i64]]], [50 x [6 x [33 x i64]]], [50 x [6 x [33 x i64]]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, ptr, i32 }
%struct.macroblock = type { i32, [2 x i32], i32, i32, ptr, ptr, i32, [2 x [4 x [4 x [2 x i32]]]], i32, i64, i64, i32, i32, [4 x i8], [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.MotionInfoContexts = type { [4 x [11 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]], [4 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x %struct.BiContextType] }
%struct.syntaxelement = type { i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr }
%struct.datapartition = type { ptr, %struct.DecodingEnvironment, ptr }
%struct.TextureInfoContexts = type { [2 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]] }
%struct.Bitstream = type { i32, i32, i32, i32, ptr, i32 }
%struct.ercVariables_s = type { i32, i32, ptr, ptr, ptr, ptr, i32, ptr, i32, i32, i32 }
%struct.ercSegment_s = type { i32, i32, i32 }
%struct.frame.16 = type { ptr, ptr, ptr }
%struct.objectBuffer_t = type { i8, i32, i32, [3 x i32] }
%struct.frame_store = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr }
%struct.concealment_node = type { ptr, i32, ptr }
%struct.DecRefPicMarking_s = type { i32, i32, i32, i32, i32, ptr }
%struct.inp_par = type { [1000 x i8], [1000 x i8], [1000 x i8], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.snr_par = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.colocated_params = type { i32, i32, i32, [6 x [33 x i64]], ptr, ptr, ptr, ptr, [6 x [33 x i64]], ptr, ptr, ptr, ptr, [6 x [33 x i64]], ptr, ptr, ptr, ptr, i8, ptr }
%struct.RTPpacket_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, ptr, i32 }

@IsFirstByteStreamNALU = internal global i32 1, align 4
@LastAccessUnitExists = internal global i32 0, align 4
@NALUCount = internal global i32 0, align 4
@.str = private unnamed_addr constant [19 x i8] c"GetAnnexbNALU: Buf\00", align 1
@.str.5 = private unnamed_addr constant [54 x i8] c"GetAnnexbNALU: Cannot fseek %d in the bit stream file\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"Cannot open Annex B ByteStream file '%s'\00", align 1
@str = private unnamed_addr constant [41 x i8] c" Panic: Error in next start code search \00", align 1
@str.9 = private unnamed_addr constant [110 x i8] c"GetAnnexbNALU: The leading_zero_8bits syntax can only be present in the first byte stream NAL unit, return -1\00", align 1
@str.11 = private unnamed_addr constant [65 x i8] c"GetAnnexbNALU: no Start Code at the begin of the NALU, return -1\00", align 1
@str.12 = private unnamed_addr constant [36 x i8] c"GetAnnexbNALU can't read start code\00", align 1
@str.14 = private unnamed_addr constant [31 x i8] c"warning: zero_byte shall exist\00", align 1
@rLPS_table_64x4 = internal constant [64 x [4 x i8]] [[4 x i8] c"\80\B0\D0\F0", [4 x i8] c"\80\A7\C5\E3", [4 x i8] c"\80\9E\BB\D8", [4 x i8] c"{\96\B2\CD", [4 x i8] c"t\8E\A9\C3", [4 x i8] c"o\87\A0\B9", [4 x i8] c"i\80\98\AF", [4 x i8] c"dz\90\A6", [4 x i8] c"_t\89\9E", [4 x i8] c"Zn\82\96", [4 x i8] c"Uh{\8E", [4 x i8] c"Qcu\87", [4 x i8] c"M^o\80", [4 x i8] c"IYiz", [4 x i8] c"EUdt", [4 x i8] c"BP_n", [4 x i8] c">LZh", [4 x i8] c";HVc", [4 x i8] c"8EQ^", [4 x i8] c"5AMY", [4 x i8] c"3>IU", [4 x i8] c"0;EP", [4 x i8] c".8BL", [4 x i8] c"+5?H", [4 x i8] c")2;E", [4 x i8] c"'08A", [4 x i8] c"%-6>", [4 x i8] c"#+3;", [4 x i8] c"!)08", [4 x i8] c" '.5", [4 x i8] c"\1E%+2", [4 x i8] c"\1D#)0", [4 x i8] c"\1B!'-", [4 x i8] c"\1A\1F%+", [4 x i8] c"\18\1E#)", [4 x i8] c"\17\1C!'", [4 x i8] c"\16\1B %", [4 x i8] c"\15\1A\1E#", [4 x i8] c"\14\18\1D!", [4 x i8] c"\13\17\1B\1F", [4 x i8] c"\12\16\1A\1E", [4 x i8] c"\11\15\19\1C", [4 x i8] c"\10\14\17\1B", [4 x i8] c"\0F\13\16\19", [4 x i8] c"\0E\12\15\18", [4 x i8] c"\0E\11\14\17", [4 x i8] c"\0D\10\13\16", [4 x i8] c"\0C\0F\12\15", [4 x i8] c"\0C\0E\11\14", [4 x i8] c"\0B\0E\10\13", [4 x i8] c"\0B\0D\0F\12", [4 x i8] c"\0A\0C\0F\11", [4 x i8] c"\0A\0C\0E\10", [4 x i8] c"\09\0B\0D\0F", [4 x i8] c"\09\0B\0C\0E", [4 x i8] c"\08\0A\0C\0E", [4 x i8] c"\08\09\0B\0D", [4 x i8] c"\07\09\0B\0C", [4 x i8] c"\07\09\0A\0C", [4 x i8] c"\07\08\0A\0B", [4 x i8] c"\06\08\09\0B", [4 x i8] c"\06\07\09\0A", [4 x i8] c"\06\07\08\09", [4 x i8] c"\02\02\02\02"], align 16
@AC_next_state_MPS_64 = internal constant [64 x i16] [i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 62, i16 63], align 16
@AC_next_state_LPS_64 = internal constant [64 x i16] [i16 0, i16 0, i16 1, i16 2, i16 2, i16 4, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 9, i16 11, i16 11, i16 12, i16 13, i16 13, i16 15, i16 15, i16 16, i16 16, i16 18, i16 18, i16 19, i16 19, i16 21, i16 21, i16 22, i16 22, i16 23, i16 24, i16 24, i16 25, i16 26, i16 26, i16 27, i16 27, i16 28, i16 29, i16 29, i16 30, i16 30, i16 30, i16 31, i16 32, i16 32, i16 33, i16 33, i16 33, i16 34, i16 34, i16 35, i16 35, i16 35, i16 36, i16 36, i16 36, i16 37, i16 37, i16 37, i16 38, i16 38, i16 63], align 16
@quant_intra_default = internal global [16 x i32] [i32 6, i32 13, i32 20, i32 28, i32 13, i32 20, i32 28, i32 32, i32 20, i32 28, i32 32, i32 37, i32 28, i32 32, i32 37, i32 42], align 16
@quant_inter_default = internal global [16 x i32] [i32 10, i32 14, i32 20, i32 24, i32 14, i32 20, i32 24, i32 27, i32 20, i32 24, i32 27, i32 30, i32 24, i32 27, i32 30, i32 34], align 16
@quant8_intra_default = internal global [64 x i32] [i32 6, i32 10, i32 13, i32 16, i32 18, i32 23, i32 25, i32 27, i32 10, i32 11, i32 16, i32 18, i32 23, i32 25, i32 27, i32 29, i32 13, i32 16, i32 18, i32 23, i32 25, i32 27, i32 29, i32 31, i32 16, i32 18, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 18, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 36, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 36, i32 38, i32 25, i32 27, i32 29, i32 31, i32 33, i32 36, i32 38, i32 40, i32 27, i32 29, i32 31, i32 33, i32 36, i32 38, i32 40, i32 42], align 16
@quant8_inter_default = internal global [64 x i32] [i32 9, i32 13, i32 15, i32 17, i32 19, i32 21, i32 22, i32 24, i32 13, i32 13, i32 17, i32 19, i32 21, i32 22, i32 24, i32 25, i32 15, i32 17, i32 19, i32 21, i32 22, i32 24, i32 25, i32 27, i32 17, i32 19, i32 21, i32 22, i32 24, i32 25, i32 27, i32 28, i32 19, i32 21, i32 22, i32 24, i32 25, i32 27, i32 28, i32 30, i32 21, i32 22, i32 24, i32 25, i32 27, i32 28, i32 30, i32 32, i32 22, i32 24, i32 25, i32 27, i32 28, i32 30, i32 32, i32 33, i32 24, i32 25, i32 27, i32 28, i32 30, i32 32, i32 33, i32 35], align 16
@quant_org = internal global [16 x i32] [i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16], align 16
@quant8_org = internal global [64 x i32] [i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16], align 16
@.str.1 = private unnamed_addr constant [66 x i8] c"warning: Intra_4x4_Vertical prediction mode not allowed at mb %d\0A\00", align 1
@.str.1.2 = private unnamed_addr constant [68 x i8] c"warning: Intra_4x4_Horizontal prediction mode not allowed at mb %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [77 x i8] c"warning: Intra_4x4_Diagonal_Down_Right prediction mode not allowed at mb %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [76 x i8] c"warning: Intra_4x4_Diagonal_Down_Left prediction mode not allowed at mb %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [72 x i8] c"warning: Intra_4x4_Vertical_Right prediction mode not allowed at mb %d\0A\00", align 1
@.str.5.3 = private unnamed_addr constant [71 x i8] c"warning: Intra_4x4_Vertical_Left prediction mode not allowed at mb %d\0A\00", align 1
@.str.6.4 = private unnamed_addr constant [71 x i8] c"warning: Intra_4x4_Horizontal_Up prediction mode not allowed at mb %d\0A\00", align 1
@.str.7.5 = private unnamed_addr constant [73 x i8] c"warning: Intra_4x4_Horizontal_Down prediction mode not allowed at mb %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [46 x i8] c"Error: illegal intra_4x4 prediction mode: %d\0A\00", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c"invalid 16x16 intra pred Mode VERT_PRED_16\00", align 1
@.str.10 = private unnamed_addr constant [42 x i8] c"invalid 16x16 intra pred Mode HOR_PRED_16\00", align 1
@.str.11 = private unnamed_addr constant [39 x i8] c"invalid 16x16 intra pred Mode PLANE_16\00", align 1
@.str.12 = private unnamed_addr constant [47 x i8] c"illegal 16x16 intra prediction mode input: %d\0A\00", align 1
@__const.intrapred_chroma.block_pos = private unnamed_addr constant [3 x [4 x [4 x i32]]] [[4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer], [4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] [i32 2, i32 3, i32 2, i32 3], [4 x i32] zeroinitializer, [4 x i32] zeroinitializer], [4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] [i32 1, i32 1, i32 3, i32 3], [4 x i32] [i32 2, i32 3, i32 2, i32 3], [4 x i32] [i32 3, i32 3, i32 3, i32 3]]], align 16
@.str.13 = private unnamed_addr constant [48 x i8] c"unexpected PLANE_8 chroma intra prediction mode\00", align 1
@.str.14 = private unnamed_addr constant [51 x i8] c"unexpected HOR_PRED_8 chroma intra prediction mode\00", align 1
@.str.15 = private unnamed_addr constant [52 x i8] c"unexpected VERT_PRED_8 chroma intra prediction mode\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"illegal chroma intra prediction mode\00", align 1
@quant_coef = internal unnamed_addr constant [6 x [4 x [4 x i32]]] [[4 x [4 x i32]] [[4 x i32] [i32 13107, i32 8066, i32 13107, i32 8066], [4 x i32] [i32 8066, i32 5243, i32 8066, i32 5243], [4 x i32] [i32 13107, i32 8066, i32 13107, i32 8066], [4 x i32] [i32 8066, i32 5243, i32 8066, i32 5243]], [4 x [4 x i32]] [[4 x i32] [i32 11916, i32 7490, i32 11916, i32 7490], [4 x i32] [i32 7490, i32 4660, i32 7490, i32 4660], [4 x i32] [i32 11916, i32 7490, i32 11916, i32 7490], [4 x i32] [i32 7490, i32 4660, i32 7490, i32 4660]], [4 x [4 x i32]] [[4 x i32] [i32 10082, i32 6554, i32 10082, i32 6554], [4 x i32] [i32 6554, i32 4194, i32 6554, i32 4194], [4 x i32] [i32 10082, i32 6554, i32 10082, i32 6554], [4 x i32] [i32 6554, i32 4194, i32 6554, i32 4194]], [4 x [4 x i32]] [[4 x i32] [i32 9362, i32 5825, i32 9362, i32 5825], [4 x i32] [i32 5825, i32 3647, i32 5825, i32 3647], [4 x i32] [i32 9362, i32 5825, i32 9362, i32 5825], [4 x i32] [i32 5825, i32 3647, i32 5825, i32 3647]], [4 x [4 x i32]] [[4 x i32] [i32 8192, i32 5243, i32 8192, i32 5243], [4 x i32] [i32 5243, i32 3355, i32 5243, i32 3355], [4 x i32] [i32 8192, i32 5243, i32 8192, i32 5243], [4 x i32] [i32 5243, i32 3355, i32 5243, i32 3355]], [4 x [4 x i32]] [[4 x i32] [i32 7282, i32 4559, i32 7282, i32 4559], [4 x i32] [i32 4559, i32 2893, i32 4559, i32 2893], [4 x i32] [i32 7282, i32 4559, i32 7282, i32 4559], [4 x i32] [i32 4559, i32 2893, i32 4559, i32 2893]]], align 16
@A = internal unnamed_addr constant [4 x [4 x i32]] [[4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 20, i32 25, i32 20, i32 25], [4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 20, i32 25, i32 20, i32 25]], align 16
@.str.17 = private unnamed_addr constant [37 x i8] c"create_contexts_MotionInfo: deco_ctx\00", align 1
@.str.1.18 = private unnamed_addr constant [38 x i8] c"create_contexts_TextureInfo: deco_ctx\00", align 1
@type2ctx_bcbp = internal unnamed_addr constant [10 x i32] [i32 0, i32 1, i32 2, i32 2, i32 3, i32 4, i32 5, i32 6, i32 5, i32 5], align 16
@maxpos = internal unnamed_addr constant [10 x i32] [i32 16, i32 15, i32 64, i32 32, i32 32, i32 16, i32 4, i32 15, i32 8, i32 16], align 16
@pos2ctx_map_int = internal unnamed_addr constant [10 x ptr] [ptr @pos2ctx_map4x4, ptr @pos2ctx_map4x4, ptr @pos2ctx_map8x8i, ptr @pos2ctx_map8x4i, ptr @pos2ctx_map4x8i, ptr @pos2ctx_map4x4, ptr @pos2ctx_map4x4, ptr @pos2ctx_map4x4, ptr @pos2ctx_map2x4c, ptr @pos2ctx_map4x4c], align 16
@pos2ctx_map = internal unnamed_addr constant [10 x ptr] [ptr @pos2ctx_map4x4, ptr @pos2ctx_map4x4, ptr @pos2ctx_map8x8, ptr @pos2ctx_map8x4, ptr @pos2ctx_map8x4, ptr @pos2ctx_map4x4, ptr @pos2ctx_map4x4, ptr @pos2ctx_map4x4, ptr @pos2ctx_map2x4c, ptr @pos2ctx_map4x4c], align 16
@type2ctx_last = internal unnamed_addr constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 6, i32 6], align 16
@pos2ctx_last = internal unnamed_addr constant [10 x ptr] [ptr @pos2ctx_last4x4, ptr @pos2ctx_last4x4, ptr @pos2ctx_last8x8, ptr @pos2ctx_last8x4, ptr @pos2ctx_last8x4, ptr @pos2ctx_last4x4, ptr @pos2ctx_last4x4, ptr @pos2ctx_last4x4, ptr @pos2ctx_last2x4c, ptr @pos2ctx_last4x4c], align 16
@max_c2 = internal unnamed_addr constant [10 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 3, i32 4, i32 3, i32 3], align 16
@type2ctx_abs = internal unnamed_addr constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 3, i32 4, i32 5, i32 6, i32 5, i32 5], align 16
@readRunLevel_CABAC.coeff = internal global [64 x i32] zeroinitializer, align 16
@readRunLevel_CABAC.coeff_ctr = internal unnamed_addr global i32 -1, align 4
@readRunLevel_CABAC.pos = internal unnamed_addr global i32 0, align 4
@pos2ctx_map4x4 = internal constant [16 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 14], align 16
@pos2ctx_map8x8i = internal constant [64 x i32] [i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 4, i32 5, i32 6, i32 7, i32 7, i32 7, i32 8, i32 4, i32 5, i32 6, i32 9, i32 10, i32 10, i32 8, i32 11, i32 12, i32 11, i32 9, i32 9, i32 10, i32 10, i32 8, i32 11, i32 12, i32 11, i32 9, i32 9, i32 10, i32 10, i32 8, i32 11, i32 12, i32 11, i32 9, i32 9, i32 10, i32 10, i32 8, i32 13, i32 13, i32 9, i32 9, i32 10, i32 10, i32 8, i32 13, i32 13, i32 9, i32 9, i32 10, i32 10, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14], align 16
@pos2ctx_map8x4i = internal constant [32 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 3, i32 4, i32 5, i32 6, i32 3, i32 4, i32 7, i32 6, i32 8, i32 9, i32 7, i32 6, i32 8, i32 9, i32 10, i32 11, i32 12, i32 12, i32 10, i32 11, i32 13, i32 13, i32 14, i32 14, i32 14], align 16
@pos2ctx_map4x8i = internal constant [32 x i32] [i32 0, i32 1, i32 1, i32 1, i32 2, i32 3, i32 3, i32 4, i32 4, i32 4, i32 5, i32 6, i32 2, i32 7, i32 7, i32 8, i32 8, i32 8, i32 5, i32 6, i32 9, i32 10, i32 10, i32 11, i32 11, i32 11, i32 12, i32 13, i32 13, i32 14, i32 14, i32 14], align 16
@pos2ctx_map2x4c = internal constant [16 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2], align 16
@pos2ctx_map4x4c = internal constant [16 x i32] [i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2], align 16
@pos2ctx_map8x8 = internal constant [64 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 5, i32 4, i32 4, i32 3, i32 3, i32 4, i32 4, i32 4, i32 5, i32 5, i32 4, i32 4, i32 4, i32 4, i32 3, i32 3, i32 6, i32 7, i32 7, i32 7, i32 8, i32 9, i32 10, i32 9, i32 8, i32 7, i32 7, i32 6, i32 11, i32 12, i32 13, i32 11, i32 6, i32 7, i32 8, i32 9, i32 14, i32 10, i32 9, i32 8, i32 6, i32 11, i32 12, i32 13, i32 11, i32 6, i32 9, i32 14, i32 10, i32 9, i32 11, i32 12, i32 13, i32 11, i32 14, i32 10, i32 12, i32 14], align 16
@pos2ctx_map8x4 = internal constant [32 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 7, i32 8, i32 9, i32 10, i32 11, i32 9, i32 8, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 9, i32 8, i32 6, i32 12, i32 8, i32 9, i32 10, i32 11, i32 9, i32 13, i32 13, i32 14, i32 14], align 16
@pos2ctx_last4x4 = internal constant [16 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15], align 16
@pos2ctx_last8x8 = internal constant [64 x i32] [i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 5, i32 5, i32 6, i32 6, i32 6, i32 6, i32 7, i32 7, i32 7, i32 7, i32 8, i32 8, i32 8, i32 8], align 16
@pos2ctx_last8x4 = internal constant [32 x i32] [i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 7, i32 7, i32 8, i32 8], align 16
@pos2ctx_last2x4c = internal constant [16 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2], align 16
@pos2ctx_last4x4c = internal constant [16 x i32] [i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2], align 16
@INIT_MB_TYPE_I = internal constant [1 x [3 x [11 x [2 x i32]]]] [[3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 20, i32 -15], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 3, i32 74], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -28, i32 127], [2 x i32] [i32 -23, i32 104], [2 x i32] [i32 -6, i32 53], [2 x i32] [i32 -1, i32 54], [2 x i32] [i32 7, i32 51], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 20, i32 -15], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 3, i32 74], [2 x i32] [i32 20, i32 -15], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 3, i32 74], [2 x i32] [i32 -28, i32 127], [2 x i32] [i32 -23, i32 104], [2 x i32] [i32 -6, i32 53], [2 x i32] [i32 -1, i32 54], [2 x i32] [i32 7, i32 51]], [11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MB_TYPE_P = internal constant [3 x [3 x [11 x [2 x i32]]]] [[3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 23, i32 33], [2 x i32] [i32 23, i32 2], [2 x i32] [i32 21, i32 0], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 9], [2 x i32] [i32 0, i32 49], [2 x i32] [i32 -37, i32 118], [2 x i32] [i32 5, i32 57], [2 x i32] [i32 -13, i32 78], [2 x i32] [i32 -11, i32 65], [2 x i32] [i32 1, i32 62]], [11 x [2 x i32]] [[2 x i32] [i32 26, i32 67], [2 x i32] [i32 16, i32 90], [2 x i32] [i32 9, i32 104], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -46, i32 127], [2 x i32] [i32 -20, i32 104], [2 x i32] [i32 1, i32 67], [2 x i32] [i32 18, i32 64], [2 x i32] [i32 9, i32 43], [2 x i32] [i32 29, i32 0], [2 x i32] [i32 0, i32 64]]], [3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 22, i32 25], [2 x i32] [i32 34, i32 0], [2 x i32] [i32 16, i32 0], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -2, i32 9], [2 x i32] [i32 4, i32 41], [2 x i32] [i32 -29, i32 118], [2 x i32] [i32 2, i32 65], [2 x i32] [i32 -6, i32 71], [2 x i32] [i32 -13, i32 79], [2 x i32] [i32 5, i32 52]], [11 x [2 x i32]] [[2 x i32] [i32 57, i32 2], [2 x i32] [i32 41, i32 36], [2 x i32] [i32 26, i32 69], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -45, i32 127], [2 x i32] [i32 -15, i32 101], [2 x i32] [i32 -4, i32 76], [2 x i32] [i32 26, i32 34], [2 x i32] [i32 19, i32 22], [2 x i32] [i32 40, i32 0], [2 x i32] [i32 0, i32 64]]], [3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 29, i32 16], [2 x i32] [i32 25, i32 0], [2 x i32] [i32 14, i32 0], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -10, i32 51], [2 x i32] [i32 -3, i32 62], [2 x i32] [i32 -27, i32 99], [2 x i32] [i32 26, i32 16], [2 x i32] [i32 -4, i32 85], [2 x i32] [i32 -24, i32 102], [2 x i32] [i32 5, i32 57]], [11 x [2 x i32]] [[2 x i32] [i32 54, i32 0], [2 x i32] [i32 37, i32 42], [2 x i32] [i32 12, i32 97], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -32, i32 127], [2 x i32] [i32 -22, i32 117], [2 x i32] [i32 -2, i32 74], [2 x i32] [i32 20, i32 40], [2 x i32] [i32 20, i32 10], [2 x i32] [i32 29, i32 0], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_B8_TYPE_I = internal constant [1 x [2 x [9 x [2 x i32]]]] [[2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_B8_TYPE_P = internal constant [3 x [2 x [9 x [2 x i32]]]] [[2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 12, i32 49], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 73], [2 x i32] [i32 17, i32 50], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 -6, i32 86], [2 x i32] [i32 -17, i32 95], [2 x i32] [i32 -6, i32 61], [2 x i32] [i32 9, i32 45], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 9, i32 50], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 70], [2 x i32] [i32 10, i32 54], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 6, i32 69], [2 x i32] [i32 -13, i32 90], [2 x i32] [i32 0, i32 52], [2 x i32] [i32 8, i32 43], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 6, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -17, i32 73], [2 x i32] [i32 14, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 -6, i32 93], [2 x i32] [i32 -14, i32 88], [2 x i32] [i32 -6, i32 44], [2 x i32] [i32 4, i32 55], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MV_RES_I = internal constant [1 x [2 x [10 x [2 x i32]]]] [[2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MV_RES_P = internal constant [3 x [2 x [10 x [2 x i32]]]] [[2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 -3, i32 69], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -6, i32 81], [2 x i32] [i32 -11, i32 96], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 76], [2 x i32] [i32 -10, i32 94], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 6, i32 55], [2 x i32] [i32 7, i32 67], [2 x i32] [i32 -5, i32 86], [2 x i32] [i32 2, i32 88], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 5, i32 54], [2 x i32] [i32 4, i32 69], [2 x i32] [i32 -3, i32 81], [2 x i32] [i32 0, i32 88], [2 x i32] [i32 0, i32 64]]], [2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 -2, i32 69], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -5, i32 82], [2 x i32] [i32 -10, i32 96], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 56], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 74], [2 x i32] [i32 -6, i32 85], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 2, i32 59], [2 x i32] [i32 2, i32 75], [2 x i32] [i32 -3, i32 87], [2 x i32] [i32 -3, i32 100], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 -3, i32 81], [2 x i32] [i32 -7, i32 86], [2 x i32] [i32 -5, i32 95], [2 x i32] [i32 0, i32 64]]], [2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 -11, i32 89], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -15, i32 103], [2 x i32] [i32 -21, i32 116], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 63], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -5, i32 85], [2 x i32] [i32 -13, i32 106], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 19, i32 57], [2 x i32] [i32 20, i32 58], [2 x i32] [i32 4, i32 84], [2 x i32] [i32 6, i32 96], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 5, i32 63], [2 x i32] [i32 6, i32 75], [2 x i32] [i32 -3, i32 90], [2 x i32] [i32 -1, i32 101], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_REF_NO_I = internal constant [1 x [2 x [6 x [2 x i32]]]] [[2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_REF_NO_P = internal constant [3 x [2 x [6 x [2 x i32]]]] [[2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 -7, i32 67], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 -4, i32 74], [2 x i32] [i32 -5, i32 80], [2 x i32] [i32 -7, i32 72], [2 x i32] [i32 1, i32 58]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 -1, i32 66], [2 x i32] [i32 -1, i32 77], [2 x i32] [i32 1, i32 70], [2 x i32] [i32 -2, i32 86], [2 x i32] [i32 -5, i32 72], [2 x i32] [i32 0, i32 61]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 3, i32 55], [2 x i32] [i32 -4, i32 79], [2 x i32] [i32 -2, i32 75], [2 x i32] [i32 -12, i32 97], [2 x i32] [i32 -7, i32 50], [2 x i32] [i32 1, i32 60]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_DELTA_QP_I = internal constant [1 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]]], align 16
@INIT_DELTA_QP_P = internal constant [3 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]]], align 16
@INIT_MB_AFF_I = internal constant [1 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 11], [2 x i32] [i32 1, i32 55], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MB_AFF_P = internal constant [3 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 45], [2 x i32] [i32 -4, i32 78], [2 x i32] [i32 -3, i32 96], [2 x i32] [i32 0, i32 64]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 13, i32 15], [2 x i32] [i32 7, i32 51], [2 x i32] [i32 2, i32 80], [2 x i32] [i32 0, i32 64]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 7, i32 34], [2 x i32] [i32 -9, i32 88], [2 x i32] [i32 -20, i32 127], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_TRANSFORM_SIZE_I = internal constant [1 x [1 x [3 x [2 x i32]]]] [[1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 31, i32 21], [2 x i32] [i32 31, i32 31], [2 x i32] [i32 25, i32 50]]]], align 16
@INIT_TRANSFORM_SIZE_P = internal constant [3 x [1 x [3 x [2 x i32]]]] [[1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 12, i32 40], [2 x i32] [i32 11, i32 51], [2 x i32] [i32 14, i32 59]]], [1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 25, i32 32], [2 x i32] [i32 21, i32 49], [2 x i32] [i32 21, i32 54]]], [1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 21, i32 33], [2 x i32] [i32 19, i32 50], [2 x i32] [i32 17, i32 61]]]], align 16
@INIT_IPR_I = internal constant [1 x [1 x [2 x [2 x i32]]]] [[1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]]], align 16
@INIT_IPR_P = internal constant [3 x [1 x [2 x [2 x i32]]]] [[1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]], [1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]], [1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]]], align 16
@INIT_CIPR_I = internal constant [1 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]]], align 16
@INIT_CIPR_P = internal constant [3 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]]], align 16
@INIT_CBP_I = internal constant [1 x [3 x [4 x [2 x i32]]]] [[3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -17, i32 127], [2 x i32] [i32 -13, i32 102], [2 x i32] [i32 0, i32 82], [2 x i32] [i32 -7, i32 74]], [4 x [2 x i32]] [[2 x i32] [i32 -21, i32 107], [2 x i32] [i32 -27, i32 127], [2 x i32] [i32 -31, i32 127], [2 x i32] [i32 -24, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -18, i32 95], [2 x i32] [i32 -27, i32 127], [2 x i32] [i32 -21, i32 114], [2 x i32] [i32 -30, i32 127]]]], align 16
@INIT_CBP_P = internal constant [3 x [3 x [4 x [2 x i32]]]] [[3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -27, i32 126], [2 x i32] [i32 -28, i32 98], [2 x i32] [i32 -25, i32 101], [2 x i32] [i32 -23, i32 67]], [4 x [2 x i32]] [[2 x i32] [i32 -28, i32 82], [2 x i32] [i32 -20, i32 94], [2 x i32] [i32 -16, i32 83], [2 x i32] [i32 -22, i32 110]], [4 x [2 x i32]] [[2 x i32] [i32 -21, i32 91], [2 x i32] [i32 -18, i32 102], [2 x i32] [i32 -13, i32 93], [2 x i32] [i32 -29, i32 127]]], [3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -39, i32 127], [2 x i32] [i32 -18, i32 91], [2 x i32] [i32 -17, i32 96], [2 x i32] [i32 -26, i32 81]], [4 x [2 x i32]] [[2 x i32] [i32 -35, i32 98], [2 x i32] [i32 -24, i32 102], [2 x i32] [i32 -23, i32 97], [2 x i32] [i32 -27, i32 119]], [4 x [2 x i32]] [[2 x i32] [i32 -24, i32 99], [2 x i32] [i32 -21, i32 110], [2 x i32] [i32 -18, i32 102], [2 x i32] [i32 -36, i32 127]]], [3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -36, i32 127], [2 x i32] [i32 -17, i32 91], [2 x i32] [i32 -14, i32 95], [2 x i32] [i32 -25, i32 84]], [4 x [2 x i32]] [[2 x i32] [i32 -25, i32 86], [2 x i32] [i32 -12, i32 89], [2 x i32] [i32 -17, i32 91], [2 x i32] [i32 -31, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -14, i32 76], [2 x i32] [i32 -18, i32 103], [2 x i32] [i32 -13, i32 90], [2 x i32] [i32 -37, i32 127]]]], align 16
@INIT_BCBP_I = internal constant [1 x [8 x [4 x [2 x i32]]]] [[8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -17, i32 123], [2 x i32] [i32 -12, i32 115], [2 x i32] [i32 -16, i32 122], [2 x i32] [i32 -11, i32 115]], [4 x [2 x i32]] [[2 x i32] [i32 -12, i32 63], [2 x i32] [i32 -2, i32 68], [2 x i32] [i32 -15, i32 84], [2 x i32] [i32 -13, i32 104]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 70], [2 x i32] [i32 -8, i32 93], [2 x i32] [i32 -10, i32 90], [2 x i32] [i32 -30, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -1, i32 74], [2 x i32] [i32 -6, i32 97], [2 x i32] [i32 -7, i32 91], [2 x i32] [i32 -20, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -4, i32 56], [2 x i32] [i32 -5, i32 82], [2 x i32] [i32 -7, i32 76], [2 x i32] [i32 -22, i32 125]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_BCBP_P = internal constant [3 x [8 x [4 x [2 x i32]]]] [[8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -7, i32 92], [2 x i32] [i32 -5, i32 89], [2 x i32] [i32 -7, i32 96], [2 x i32] [i32 -13, i32 108]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 46], [2 x i32] [i32 -1, i32 65], [2 x i32] [i32 -1, i32 57], [2 x i32] [i32 -9, i32 93]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 74], [2 x i32] [i32 -9, i32 92], [2 x i32] [i32 -8, i32 87], [2 x i32] [i32 -23, i32 126]], [4 x [2 x i32]] [[2 x i32] [i32 5, i32 54], [2 x i32] [i32 6, i32 60], [2 x i32] [i32 6, i32 59], [2 x i32] [i32 6, i32 69]], [4 x [2 x i32]] [[2 x i32] [i32 -1, i32 48], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -4, i32 69], [2 x i32] [i32 -8, i32 88]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 80], [2 x i32] [i32 -5, i32 89], [2 x i32] [i32 -7, i32 94], [2 x i32] [i32 -4, i32 92]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 39], [2 x i32] [i32 0, i32 65], [2 x i32] [i32 -15, i32 84], [2 x i32] [i32 -35, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -2, i32 73], [2 x i32] [i32 -12, i32 104], [2 x i32] [i32 -9, i32 91], [2 x i32] [i32 -31, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 3, i32 55], [2 x i32] [i32 7, i32 56], [2 x i32] [i32 7, i32 55], [2 x i32] [i32 8, i32 61]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 53], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -7, i32 74], [2 x i32] [i32 -9, i32 88]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 11, i32 80], [2 x i32] [i32 5, i32 76], [2 x i32] [i32 2, i32 84], [2 x i32] [i32 5, i32 78]], [4 x [2 x i32]] [[2 x i32] [i32 -6, i32 55], [2 x i32] [i32 4, i32 61], [2 x i32] [i32 -14, i32 83], [2 x i32] [i32 -37, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -5, i32 79], [2 x i32] [i32 -11, i32 104], [2 x i32] [i32 -11, i32 91], [2 x i32] [i32 -30, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 65], [2 x i32] [i32 -2, i32 79], [2 x i32] [i32 0, i32 72], [2 x i32] [i32 -4, i32 92]], [4 x [2 x i32]] [[2 x i32] [i32 -6, i32 56], [2 x i32] [i32 3, i32 68], [2 x i32] [i32 -8, i32 71], [2 x i32] [i32 -13, i32 98]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MAP_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -7, i32 93], [2 x i32] [i32 -11, i32 87], [2 x i32] [i32 -3, i32 77], [2 x i32] [i32 -5, i32 71], [2 x i32] [i32 -4, i32 63], [2 x i32] [i32 -4, i32 68], [2 x i32] [i32 -12, i32 84], [2 x i32] [i32 -7, i32 62], [2 x i32] [i32 -7, i32 65], [2 x i32] [i32 8, i32 61], [2 x i32] [i32 5, i32 56], [2 x i32] [i32 -2, i32 66], [2 x i32] [i32 1, i32 64], [2 x i32] [i32 0, i32 61], [2 x i32] [i32 -2, i32 78]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 50], [2 x i32] [i32 7, i32 52], [2 x i32] [i32 10, i32 35], [2 x i32] [i32 0, i32 44], [2 x i32] [i32 11, i32 38], [2 x i32] [i32 1, i32 45], [2 x i32] [i32 0, i32 46], [2 x i32] [i32 5, i32 44], [2 x i32] [i32 31, i32 17], [2 x i32] [i32 1, i32 51], [2 x i32] [i32 7, i32 50], [2 x i32] [i32 28, i32 19], [2 x i32] [i32 16, i32 33], [2 x i32] [i32 14, i32 62]], [15 x [2 x i32]] [[2 x i32] [i32 -17, i32 120], [2 x i32] [i32 -20, i32 112], [2 x i32] [i32 -18, i32 114], [2 x i32] [i32 -11, i32 85], [2 x i32] [i32 -15, i32 92], [2 x i32] [i32 -14, i32 89], [2 x i32] [i32 -26, i32 71], [2 x i32] [i32 -15, i32 81], [2 x i32] [i32 -14, i32 80], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -14, i32 70], [2 x i32] [i32 -24, i32 56], [2 x i32] [i32 -23, i32 68], [2 x i32] [i32 -24, i32 50], [2 x i32] [i32 -11, i32 74]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -13, i32 108], [2 x i32] [i32 -15, i32 100], [2 x i32] [i32 -13, i32 101], [2 x i32] [i32 -13, i32 91], [2 x i32] [i32 -12, i32 94], [2 x i32] [i32 -10, i32 88], [2 x i32] [i32 -16, i32 84], [2 x i32] [i32 -10, i32 86], [2 x i32] [i32 -7, i32 83], [2 x i32] [i32 -13, i32 87], [2 x i32] [i32 -19, i32 94], [2 x i32] [i32 1, i32 70], [2 x i32] [i32 0, i32 72], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 18, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 -8, i32 102], [2 x i32] [i32 -15, i32 100], [2 x i32] [i32 0, i32 95], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 75], [2 x i32] [i32 2, i32 72], [2 x i32] [i32 -11, i32 75], [2 x i32] [i32 -3, i32 71], [2 x i32] [i32 15, i32 46], [2 x i32] [i32 -13, i32 69], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 0, i32 65], [2 x i32] [i32 21, i32 37], [2 x i32] [i32 -15, i32 72], [2 x i32] [i32 9, i32 57], [2 x i32] [i32 16, i32 54], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 12, i32 72]]]], align 16
@INIT_MAP_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -2, i32 85], [2 x i32] [i32 -6, i32 78], [2 x i32] [i32 -1, i32 75], [2 x i32] [i32 -7, i32 77], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 5, i32 50], [2 x i32] [i32 -3, i32 68], [2 x i32] [i32 1, i32 50], [2 x i32] [i32 6, i32 42], [2 x i32] [i32 -4, i32 81], [2 x i32] [i32 1, i32 63], [2 x i32] [i32 -4, i32 70], [2 x i32] [i32 0, i32 67], [2 x i32] [i32 2, i32 57], [2 x i32] [i32 -2, i32 76]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 11, i32 35], [2 x i32] [i32 4, i32 64], [2 x i32] [i32 1, i32 61], [2 x i32] [i32 11, i32 35], [2 x i32] [i32 18, i32 25], [2 x i32] [i32 12, i32 24], [2 x i32] [i32 13, i32 29], [2 x i32] [i32 13, i32 36], [2 x i32] [i32 -10, i32 93], [2 x i32] [i32 -7, i32 73], [2 x i32] [i32 -2, i32 73], [2 x i32] [i32 13, i32 46], [2 x i32] [i32 9, i32 49], [2 x i32] [i32 -7, i32 100]], [15 x [2 x i32]] [[2 x i32] [i32 -4, i32 79], [2 x i32] [i32 -7, i32 71], [2 x i32] [i32 -5, i32 69], [2 x i32] [i32 -9, i32 70], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -10, i32 68], [2 x i32] [i32 -19, i32 73], [2 x i32] [i32 -12, i32 69], [2 x i32] [i32 -16, i32 70], [2 x i32] [i32 -15, i32 67], [2 x i32] [i32 -20, i32 62], [2 x i32] [i32 -19, i32 70], [2 x i32] [i32 -16, i32 66], [2 x i32] [i32 -22, i32 65], [2 x i32] [i32 -20, i32 63]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 53], [2 x i32] [i32 2, i32 53], [2 x i32] [i32 5, i32 53], [2 x i32] [i32 -2, i32 61], [2 x i32] [i32 0, i32 56], [2 x i32] [i32 0, i32 56], [2 x i32] [i32 -13, i32 63], [2 x i32] [i32 -5, i32 60], [2 x i32] [i32 -1, i32 62], [2 x i32] [i32 4, i32 57], [2 x i32] [i32 -6, i32 69], [2 x i32] [i32 4, i32 57], [2 x i32] [i32 14, i32 39], [2 x i32] [i32 4, i32 51], [2 x i32] [i32 13, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 3, i32 64], [2 x i32] [i32 1, i32 61], [2 x i32] [i32 9, i32 63], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 7, i32 50], [2 x i32] [i32 16, i32 39], [2 x i32] [i32 5, i32 44], [2 x i32] [i32 4, i32 52], [2 x i32] [i32 11, i32 48], [2 x i32] [i32 -5, i32 60], [2 x i32] [i32 -1, i32 59], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 22, i32 33], [2 x i32] [i32 5, i32 44], [2 x i32] [i32 14, i32 43], [2 x i32] [i32 -1, i32 78], [2 x i32] [i32 0, i32 60], [2 x i32] [i32 9, i32 69]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -13, i32 103], [2 x i32] [i32 -13, i32 91], [2 x i32] [i32 -9, i32 89], [2 x i32] [i32 -14, i32 92], [2 x i32] [i32 -8, i32 76], [2 x i32] [i32 -12, i32 87], [2 x i32] [i32 -23, i32 110], [2 x i32] [i32 -24, i32 105], [2 x i32] [i32 -10, i32 78], [2 x i32] [i32 -20, i32 112], [2 x i32] [i32 -17, i32 99], [2 x i32] [i32 -78, i32 127], [2 x i32] [i32 -70, i32 127], [2 x i32] [i32 -50, i32 127], [2 x i32] [i32 -46, i32 127]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 66], [2 x i32] [i32 -5, i32 78], [2 x i32] [i32 -4, i32 71], [2 x i32] [i32 -8, i32 72], [2 x i32] [i32 2, i32 59], [2 x i32] [i32 -1, i32 55], [2 x i32] [i32 -7, i32 70], [2 x i32] [i32 -6, i32 75], [2 x i32] [i32 -8, i32 89], [2 x i32] [i32 -34, i32 119], [2 x i32] [i32 -3, i32 75], [2 x i32] [i32 32, i32 20], [2 x i32] [i32 30, i32 22], [2 x i32] [i32 -44, i32 127]], [15 x [2 x i32]] [[2 x i32] [i32 -5, i32 85], [2 x i32] [i32 -6, i32 81], [2 x i32] [i32 -10, i32 77], [2 x i32] [i32 -7, i32 81], [2 x i32] [i32 -17, i32 80], [2 x i32] [i32 -18, i32 73], [2 x i32] [i32 -4, i32 74], [2 x i32] [i32 -10, i32 83], [2 x i32] [i32 -9, i32 71], [2 x i32] [i32 -9, i32 67], [2 x i32] [i32 -1, i32 61], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -14, i32 66], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 2, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 54], [2 x i32] [i32 -5, i32 61], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 -1, i32 60], [2 x i32] [i32 -3, i32 61], [2 x i32] [i32 -8, i32 67], [2 x i32] [i32 -25, i32 84], [2 x i32] [i32 -14, i32 74], [2 x i32] [i32 -5, i32 65], [2 x i32] [i32 5, i32 52], [2 x i32] [i32 2, i32 57], [2 x i32] [i32 0, i32 61], [2 x i32] [i32 -9, i32 69], [2 x i32] [i32 -11, i32 70], [2 x i32] [i32 18, i32 55]], [15 x [2 x i32]] [[2 x i32] [i32 -4, i32 71], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 7, i32 61], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 9, i32 41], [2 x i32] [i32 18, i32 25], [2 x i32] [i32 9, i32 32], [2 x i32] [i32 5, i32 43], [2 x i32] [i32 9, i32 47], [2 x i32] [i32 0, i32 44], [2 x i32] [i32 0, i32 51], [2 x i32] [i32 2, i32 46], [2 x i32] [i32 19, i32 38], [2 x i32] [i32 -4, i32 66], [2 x i32] [i32 15, i32 38], [2 x i32] [i32 12, i32 42], [2 x i32] [i32 9, i32 34], [2 x i32] [i32 0, i32 89]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -4, i32 86], [2 x i32] [i32 -12, i32 88], [2 x i32] [i32 -5, i32 82], [2 x i32] [i32 -3, i32 72], [2 x i32] [i32 -4, i32 67], [2 x i32] [i32 -8, i32 72], [2 x i32] [i32 -16, i32 89], [2 x i32] [i32 -9, i32 69], [2 x i32] [i32 -1, i32 59], [2 x i32] [i32 5, i32 66], [2 x i32] [i32 4, i32 57], [2 x i32] [i32 -4, i32 71], [2 x i32] [i32 -2, i32 71], [2 x i32] [i32 2, i32 58], [2 x i32] [i32 -1, i32 74]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 44], [2 x i32] [i32 -1, i32 69], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 -7, i32 51], [2 x i32] [i32 -4, i32 47], [2 x i32] [i32 -6, i32 42], [2 x i32] [i32 -3, i32 41], [2 x i32] [i32 -6, i32 53], [2 x i32] [i32 8, i32 76], [2 x i32] [i32 -9, i32 78], [2 x i32] [i32 -11, i32 83], [2 x i32] [i32 9, i32 52], [2 x i32] [i32 0, i32 67], [2 x i32] [i32 -5, i32 90]], [15 x [2 x i32]] [[2 x i32] [i32 -3, i32 78], [2 x i32] [i32 -8, i32 74], [2 x i32] [i32 -9, i32 72], [2 x i32] [i32 -10, i32 72], [2 x i32] [i32 -18, i32 75], [2 x i32] [i32 -12, i32 71], [2 x i32] [i32 -11, i32 63], [2 x i32] [i32 -5, i32 70], [2 x i32] [i32 -17, i32 75], [2 x i32] [i32 -14, i32 72], [2 x i32] [i32 -16, i32 67], [2 x i32] [i32 -8, i32 53], [2 x i32] [i32 -14, i32 59], [2 x i32] [i32 -9, i32 52], [2 x i32] [i32 -11, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 1, i32 67], [2 x i32] [i32 -15, i32 72], [2 x i32] [i32 -5, i32 75], [2 x i32] [i32 -8, i32 80], [2 x i32] [i32 -21, i32 83], [2 x i32] [i32 -21, i32 64], [2 x i32] [i32 -13, i32 31], [2 x i32] [i32 -25, i32 64], [2 x i32] [i32 -29, i32 94], [2 x i32] [i32 9, i32 75], [2 x i32] [i32 17, i32 63], [2 x i32] [i32 -8, i32 74], [2 x i32] [i32 -5, i32 35], [2 x i32] [i32 -2, i32 27], [2 x i32] [i32 13, i32 91]], [15 x [2 x i32]] [[2 x i32] [i32 3, i32 65], [2 x i32] [i32 -7, i32 69], [2 x i32] [i32 8, i32 77], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -10, i32 66], [2 x i32] [i32 3, i32 62], [2 x i32] [i32 -3, i32 68], [2 x i32] [i32 -20, i32 81], [2 x i32] [i32 0, i32 30], [2 x i32] [i32 1, i32 7], [2 x i32] [i32 -3, i32 23], [2 x i32] [i32 -21, i32 74], [2 x i32] [i32 16, i32 66], [2 x i32] [i32 -23, i32 124], [2 x i32] [i32 17, i32 37], [2 x i32] [i32 44, i32 -18], [2 x i32] [i32 50, i32 -34], [2 x i32] [i32 -22, i32 127]]]], align 16
@INIT_LAST_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 24, i32 0], [2 x i32] [i32 15, i32 9], [2 x i32] [i32 8, i32 25], [2 x i32] [i32 13, i32 18], [2 x i32] [i32 15, i32 9], [2 x i32] [i32 13, i32 19], [2 x i32] [i32 10, i32 37], [2 x i32] [i32 12, i32 18], [2 x i32] [i32 6, i32 29], [2 x i32] [i32 20, i32 33], [2 x i32] [i32 15, i32 30], [2 x i32] [i32 4, i32 45], [2 x i32] [i32 1, i32 58], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 7, i32 61]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 12, i32 38], [2 x i32] [i32 11, i32 45], [2 x i32] [i32 15, i32 39], [2 x i32] [i32 11, i32 42], [2 x i32] [i32 13, i32 44], [2 x i32] [i32 16, i32 45], [2 x i32] [i32 12, i32 41], [2 x i32] [i32 10, i32 49], [2 x i32] [i32 30, i32 34], [2 x i32] [i32 18, i32 42], [2 x i32] [i32 10, i32 55], [2 x i32] [i32 17, i32 51], [2 x i32] [i32 17, i32 46], [2 x i32] [i32 0, i32 89]], [15 x [2 x i32]] [[2 x i32] [i32 23, i32 -13], [2 x i32] [i32 26, i32 -13], [2 x i32] [i32 40, i32 -15], [2 x i32] [i32 49, i32 -14], [2 x i32] [i32 44, i32 3], [2 x i32] [i32 45, i32 6], [2 x i32] [i32 44, i32 34], [2 x i32] [i32 33, i32 54], [2 x i32] [i32 19, i32 82], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 26, i32 -19], [2 x i32] [i32 22, i32 -17], [2 x i32] [i32 26, i32 -17], [2 x i32] [i32 30, i32 -25], [2 x i32] [i32 28, i32 -20], [2 x i32] [i32 33, i32 -23], [2 x i32] [i32 37, i32 -27], [2 x i32] [i32 33, i32 -23], [2 x i32] [i32 40, i32 -28], [2 x i32] [i32 38, i32 -17], [2 x i32] [i32 33, i32 -11], [2 x i32] [i32 40, i32 -15], [2 x i32] [i32 41, i32 -6], [2 x i32] [i32 38, i32 1], [2 x i32] [i32 41, i32 17]], [15 x [2 x i32]] [[2 x i32] [i32 30, i32 -6], [2 x i32] [i32 27, i32 3], [2 x i32] [i32 26, i32 22], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 37, i32 -16], [2 x i32] [i32 35, i32 -4], [2 x i32] [i32 38, i32 -8], [2 x i32] [i32 38, i32 -3], [2 x i32] [i32 37, i32 3], [2 x i32] [i32 38, i32 5], [2 x i32] [i32 42, i32 0], [2 x i32] [i32 35, i32 16], [2 x i32] [i32 39, i32 22], [2 x i32] [i32 14, i32 48], [2 x i32] [i32 27, i32 37], [2 x i32] [i32 21, i32 60], [2 x i32] [i32 12, i32 68], [2 x i32] [i32 2, i32 97]]]], align 16
@INIT_LAST_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 11, i32 28], [2 x i32] [i32 2, i32 40], [2 x i32] [i32 3, i32 44], [2 x i32] [i32 0, i32 49], [2 x i32] [i32 0, i32 46], [2 x i32] [i32 2, i32 44], [2 x i32] [i32 2, i32 51], [2 x i32] [i32 0, i32 47], [2 x i32] [i32 4, i32 39], [2 x i32] [i32 2, i32 62], [2 x i32] [i32 6, i32 46], [2 x i32] [i32 0, i32 54], [2 x i32] [i32 3, i32 54], [2 x i32] [i32 2, i32 58], [2 x i32] [i32 4, i32 63]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 6, i32 51], [2 x i32] [i32 6, i32 57], [2 x i32] [i32 7, i32 53], [2 x i32] [i32 6, i32 52], [2 x i32] [i32 6, i32 55], [2 x i32] [i32 11, i32 45], [2 x i32] [i32 14, i32 36], [2 x i32] [i32 8, i32 53], [2 x i32] [i32 -1, i32 82], [2 x i32] [i32 7, i32 55], [2 x i32] [i32 -3, i32 78], [2 x i32] [i32 15, i32 46], [2 x i32] [i32 22, i32 31], [2 x i32] [i32 -1, i32 84]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 -2], [2 x i32] [i32 26, i32 -9], [2 x i32] [i32 33, i32 -9], [2 x i32] [i32 39, i32 -7], [2 x i32] [i32 41, i32 -2], [2 x i32] [i32 45, i32 3], [2 x i32] [i32 49, i32 9], [2 x i32] [i32 45, i32 27], [2 x i32] [i32 36, i32 59], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 25, i32 7], [2 x i32] [i32 30, i32 -7], [2 x i32] [i32 28, i32 3], [2 x i32] [i32 28, i32 4], [2 x i32] [i32 32, i32 0], [2 x i32] [i32 34, i32 -1], [2 x i32] [i32 30, i32 6], [2 x i32] [i32 30, i32 6], [2 x i32] [i32 32, i32 9], [2 x i32] [i32 31, i32 19], [2 x i32] [i32 26, i32 27], [2 x i32] [i32 26, i32 30], [2 x i32] [i32 37, i32 20], [2 x i32] [i32 28, i32 34], [2 x i32] [i32 17, i32 70]], [15 x [2 x i32]] [[2 x i32] [i32 1, i32 67], [2 x i32] [i32 5, i32 59], [2 x i32] [i32 9, i32 67], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 16, i32 30], [2 x i32] [i32 18, i32 32], [2 x i32] [i32 18, i32 35], [2 x i32] [i32 22, i32 29], [2 x i32] [i32 24, i32 31], [2 x i32] [i32 23, i32 38], [2 x i32] [i32 18, i32 43], [2 x i32] [i32 20, i32 41], [2 x i32] [i32 11, i32 63], [2 x i32] [i32 9, i32 59], [2 x i32] [i32 9, i32 64], [2 x i32] [i32 -1, i32 94], [2 x i32] [i32 -2, i32 89], [2 x i32] [i32 -9, i32 108]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 4, i32 45], [2 x i32] [i32 10, i32 28], [2 x i32] [i32 10, i32 31], [2 x i32] [i32 33, i32 -11], [2 x i32] [i32 52, i32 -43], [2 x i32] [i32 18, i32 15], [2 x i32] [i32 28, i32 0], [2 x i32] [i32 35, i32 -22], [2 x i32] [i32 38, i32 -25], [2 x i32] [i32 34, i32 0], [2 x i32] [i32 39, i32 -18], [2 x i32] [i32 32, i32 -12], [2 x i32] [i32 102, i32 -94], [2 x i32] zeroinitializer, [2 x i32] [i32 56, i32 -15]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 33, i32 -4], [2 x i32] [i32 29, i32 10], [2 x i32] [i32 37, i32 -5], [2 x i32] [i32 51, i32 -29], [2 x i32] [i32 39, i32 -9], [2 x i32] [i32 52, i32 -34], [2 x i32] [i32 69, i32 -58], [2 x i32] [i32 67, i32 -63], [2 x i32] [i32 44, i32 -5], [2 x i32] [i32 32, i32 7], [2 x i32] [i32 55, i32 -29], [2 x i32] [i32 32, i32 1], [2 x i32] zeroinitializer, [2 x i32] [i32 27, i32 36]], [15 x [2 x i32]] [[2 x i32] [i32 17, i32 -10], [2 x i32] [i32 32, i32 -13], [2 x i32] [i32 42, i32 -9], [2 x i32] [i32 49, i32 -5], [2 x i32] [i32 53, i32 0], [2 x i32] [i32 64, i32 3], [2 x i32] [i32 68, i32 10], [2 x i32] [i32 66, i32 27], [2 x i32] [i32 47, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 33, i32 -25], [2 x i32] [i32 34, i32 -30], [2 x i32] [i32 36, i32 -28], [2 x i32] [i32 38, i32 -28], [2 x i32] [i32 38, i32 -27], [2 x i32] [i32 34, i32 -18], [2 x i32] [i32 35, i32 -16], [2 x i32] [i32 34, i32 -14], [2 x i32] [i32 32, i32 -8], [2 x i32] [i32 37, i32 -6], [2 x i32] [i32 35, i32 0], [2 x i32] [i32 30, i32 10], [2 x i32] [i32 28, i32 18], [2 x i32] [i32 26, i32 25], [2 x i32] [i32 29, i32 41]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 75], [2 x i32] [i32 2, i32 72], [2 x i32] [i32 8, i32 77], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 14, i32 35], [2 x i32] [i32 18, i32 31], [2 x i32] [i32 17, i32 35], [2 x i32] [i32 21, i32 30], [2 x i32] [i32 17, i32 45], [2 x i32] [i32 20, i32 42], [2 x i32] [i32 18, i32 45], [2 x i32] [i32 27, i32 26], [2 x i32] [i32 16, i32 54], [2 x i32] [i32 7, i32 66], [2 x i32] [i32 16, i32 56], [2 x i32] [i32 11, i32 73], [2 x i32] [i32 10, i32 67], [2 x i32] [i32 -10, i32 116]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 4, i32 39], [2 x i32] [i32 0, i32 42], [2 x i32] [i32 7, i32 34], [2 x i32] [i32 11, i32 29], [2 x i32] [i32 8, i32 31], [2 x i32] [i32 6, i32 37], [2 x i32] [i32 7, i32 42], [2 x i32] [i32 3, i32 40], [2 x i32] [i32 8, i32 33], [2 x i32] [i32 13, i32 43], [2 x i32] [i32 13, i32 36], [2 x i32] [i32 4, i32 47], [2 x i32] [i32 3, i32 55], [2 x i32] [i32 2, i32 58], [2 x i32] [i32 6, i32 60]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 8, i32 44], [2 x i32] [i32 11, i32 44], [2 x i32] [i32 14, i32 42], [2 x i32] [i32 7, i32 48], [2 x i32] [i32 4, i32 56], [2 x i32] [i32 4, i32 52], [2 x i32] [i32 13, i32 37], [2 x i32] [i32 9, i32 49], [2 x i32] [i32 19, i32 58], [2 x i32] [i32 10, i32 48], [2 x i32] [i32 12, i32 45], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 20, i32 33], [2 x i32] [i32 8, i32 63]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 -2], [2 x i32] [i32 30, i32 -10], [2 x i32] [i32 31, i32 -4], [2 x i32] [i32 33, i32 -1], [2 x i32] [i32 33, i32 7], [2 x i32] [i32 31, i32 12], [2 x i32] [i32 37, i32 23], [2 x i32] [i32 31, i32 38], [2 x i32] [i32 20, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 35, i32 -18], [2 x i32] [i32 33, i32 -25], [2 x i32] [i32 28, i32 -3], [2 x i32] [i32 24, i32 10], [2 x i32] [i32 27, i32 0], [2 x i32] [i32 34, i32 -14], [2 x i32] [i32 52, i32 -44], [2 x i32] [i32 39, i32 -24], [2 x i32] [i32 19, i32 17], [2 x i32] [i32 31, i32 25], [2 x i32] [i32 36, i32 29], [2 x i32] [i32 24, i32 33], [2 x i32] [i32 34, i32 15], [2 x i32] [i32 30, i32 20], [2 x i32] [i32 22, i32 73]], [15 x [2 x i32]] [[2 x i32] [i32 20, i32 34], [2 x i32] [i32 19, i32 31], [2 x i32] [i32 27, i32 44], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 19, i32 16], [2 x i32] [i32 15, i32 36], [2 x i32] [i32 15, i32 36], [2 x i32] [i32 21, i32 28], [2 x i32] [i32 25, i32 21], [2 x i32] [i32 30, i32 20], [2 x i32] [i32 31, i32 12], [2 x i32] [i32 27, i32 16], [2 x i32] [i32 24, i32 42], [2 x i32] [i32 0, i32 93], [2 x i32] [i32 14, i32 56], [2 x i32] [i32 15, i32 57], [2 x i32] [i32 26, i32 38], [2 x i32] [i32 -24, i32 127]]]], align 16
@INIT_ONE_I = internal constant [1 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -3, i32 71], [2 x i32] [i32 -6, i32 42], [2 x i32] [i32 -5, i32 50], [2 x i32] [i32 -3, i32 54], [2 x i32] [i32 -2, i32 62]], [5 x [2 x i32]] [[2 x i32] [i32 -5, i32 67], [2 x i32] [i32 -5, i32 27], [2 x i32] [i32 -3, i32 39], [2 x i32] [i32 -2, i32 44], [2 x i32] [i32 0, i32 46]], [5 x [2 x i32]] [[2 x i32] [i32 -3, i32 75], [2 x i32] [i32 -1, i32 23], [2 x i32] [i32 1, i32 34], [2 x i32] [i32 1, i32 43], [2 x i32] [i32 0, i32 54]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 92], [2 x i32] [i32 -15, i32 55], [2 x i32] [i32 -10, i32 60], [2 x i32] [i32 -6, i32 62], [2 x i32] [i32 -4, i32 65]], [5 x [2 x i32]] [[2 x i32] [i32 -11, i32 97], [2 x i32] [i32 -20, i32 84], [2 x i32] [i32 -11, i32 79], [2 x i32] [i32 -6, i32 73], [2 x i32] [i32 -4, i32 74]], [5 x [2 x i32]] [[2 x i32] [i32 -8, i32 78], [2 x i32] [i32 -5, i32 33], [2 x i32] [i32 -4, i32 48], [2 x i32] [i32 -2, i32 53], [2 x i32] [i32 -3, i32 62]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_ONE_P = internal constant [3 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -6, i32 76], [2 x i32] [i32 -2, i32 44], [2 x i32] [i32 0, i32 45], [2 x i32] [i32 0, i32 52], [2 x i32] [i32 -3, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -9, i32 77], [2 x i32] [i32 3, i32 24], [2 x i32] [i32 0, i32 42], [2 x i32] [i32 0, i32 48], [2 x i32] [i32 0, i32 55]], [5 x [2 x i32]] [[2 x i32] [i32 -6, i32 66], [2 x i32] [i32 -7, i32 35], [2 x i32] [i32 -7, i32 42], [2 x i32] [i32 -8, i32 45], [2 x i32] [i32 -5, i32 48]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 1, i32 58], [2 x i32] [i32 -3, i32 29], [2 x i32] [i32 -1, i32 36], [2 x i32] [i32 1, i32 38], [2 x i32] [i32 2, i32 43]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 70], [2 x i32] [i32 -4, i32 29], [2 x i32] [i32 5, i32 31], [2 x i32] [i32 7, i32 42], [2 x i32] [i32 1, i32 59]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 58], [2 x i32] [i32 8, i32 5], [2 x i32] [i32 10, i32 14], [2 x i32] [i32 14, i32 18], [2 x i32] [i32 13, i32 27]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -23, i32 112], [2 x i32] [i32 -15, i32 71], [2 x i32] [i32 -7, i32 61], [2 x i32] [i32 0, i32 53], [2 x i32] [i32 -5, i32 66]], [5 x [2 x i32]] [[2 x i32] [i32 -21, i32 101], [2 x i32] [i32 -3, i32 39], [2 x i32] [i32 -5, i32 53], [2 x i32] [i32 -7, i32 61], [2 x i32] [i32 -11, i32 75]], [5 x [2 x i32]] [[2 x i32] [i32 -5, i32 71], [2 x i32] [i32 0, i32 24], [2 x i32] [i32 -1, i32 36], [2 x i32] [i32 -2, i32 42], [2 x i32] [i32 -2, i32 52]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -11, i32 76], [2 x i32] [i32 -10, i32 44], [2 x i32] [i32 -10, i32 52], [2 x i32] [i32 -10, i32 57], [2 x i32] [i32 -9, i32 58]], [5 x [2 x i32]] [[2 x i32] [i32 2, i32 66], [2 x i32] [i32 -9, i32 34], [2 x i32] [i32 1, i32 32], [2 x i32] [i32 11, i32 31], [2 x i32] [i32 5, i32 52]], [5 x [2 x i32]] [[2 x i32] [i32 3, i32 52], [2 x i32] [i32 7, i32 4], [2 x i32] [i32 10, i32 8], [2 x i32] [i32 17, i32 8], [2 x i32] [i32 16, i32 19]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -24, i32 115], [2 x i32] [i32 -22, i32 82], [2 x i32] [i32 -9, i32 62], [2 x i32] [i32 0, i32 53], [2 x i32] [i32 0, i32 59]], [5 x [2 x i32]] [[2 x i32] [i32 -21, i32 100], [2 x i32] [i32 -14, i32 57], [2 x i32] [i32 -12, i32 67], [2 x i32] [i32 -11, i32 71], [2 x i32] [i32 -10, i32 77]], [5 x [2 x i32]] [[2 x i32] [i32 -9, i32 71], [2 x i32] [i32 -7, i32 37], [2 x i32] [i32 -8, i32 44], [2 x i32] [i32 -11, i32 49], [2 x i32] [i32 -10, i32 56]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -10, i32 82], [2 x i32] [i32 -8, i32 48], [2 x i32] [i32 -8, i32 61], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -7, i32 70]], [5 x [2 x i32]] [[2 x i32] [i32 -4, i32 79], [2 x i32] [i32 -22, i32 69], [2 x i32] [i32 -16, i32 75], [2 x i32] [i32 -2, i32 58], [2 x i32] [i32 1, i32 58]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 81], [2 x i32] [i32 -6, i32 38], [2 x i32] [i32 -13, i32 62], [2 x i32] [i32 -6, i32 58], [2 x i32] [i32 -2, i32 59]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_ABS_I = internal constant [1 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 0, i32 58], [2 x i32] [i32 1, i32 63], [2 x i32] [i32 -2, i32 72], [2 x i32] [i32 -1, i32 74], [2 x i32] [i32 -9, i32 91]], [5 x [2 x i32]] [[2 x i32] [i32 -16, i32 64], [2 x i32] [i32 -8, i32 68], [2 x i32] [i32 -10, i32 78], [2 x i32] [i32 -6, i32 77], [2 x i32] [i32 -10, i32 86]], [5 x [2 x i32]] [[2 x i32] [i32 -2, i32 55], [2 x i32] [i32 0, i32 61], [2 x i32] [i32 1, i32 64], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -9, i32 92]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 73], [2 x i32] [i32 -8, i32 76], [2 x i32] [i32 -7, i32 80], [2 x i32] [i32 -9, i32 88], [2 x i32] [i32 -17, i32 110]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 86], [2 x i32] [i32 -13, i32 96], [2 x i32] [i32 -11, i32 97], [2 x i32] [i32 -19, i32 117], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 71], [2 x i32] [i32 -10, i32 79], [2 x i32] [i32 -12, i32 86], [2 x i32] [i32 -13, i32 90], [2 x i32] [i32 -14, i32 97]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_ABS_P = internal constant [3 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -2, i32 59], [2 x i32] [i32 -4, i32 70], [2 x i32] [i32 -4, i32 75], [2 x i32] [i32 -8, i32 82], [2 x i32] [i32 -17, i32 102]], [5 x [2 x i32]] [[2 x i32] [i32 -6, i32 59], [2 x i32] [i32 -7, i32 71], [2 x i32] [i32 -12, i32 83], [2 x i32] [i32 -11, i32 87], [2 x i32] [i32 -30, i32 119]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 56], [2 x i32] [i32 -6, i32 60], [2 x i32] [i32 -5, i32 62], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -8, i32 76]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -6, i32 55], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 74], [2 x i32] [i32 -10, i32 90]], [5 x [2 x i32]] [[2 x i32] [i32 -2, i32 58], [2 x i32] [i32 -3, i32 72], [2 x i32] [i32 -3, i32 81], [2 x i32] [i32 -11, i32 97], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 2, i32 40], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 -3, i32 70], [2 x i32] [i32 -6, i32 79], [2 x i32] [i32 -8, i32 85]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -11, i32 77], [2 x i32] [i32 -9, i32 80], [2 x i32] [i32 -9, i32 84], [2 x i32] [i32 -10, i32 87], [2 x i32] [i32 -34, i32 127]], [5 x [2 x i32]] [[2 x i32] [i32 -15, i32 77], [2 x i32] [i32 -17, i32 91], [2 x i32] [i32 -25, i32 107], [2 x i32] [i32 -25, i32 111], [2 x i32] [i32 -28, i32 122]], [5 x [2 x i32]] [[2 x i32] [i32 -9, i32 57], [2 x i32] [i32 -6, i32 63], [2 x i32] [i32 -4, i32 65], [2 x i32] [i32 -4, i32 67], [2 x i32] [i32 -7, i32 82]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -16, i32 72], [2 x i32] [i32 -7, i32 69], [2 x i32] [i32 -4, i32 69], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 -9, i32 86]], [5 x [2 x i32]] [[2 x i32] [i32 -2, i32 55], [2 x i32] [i32 -2, i32 67], [2 x i32] [i32 0, i32 73], [2 x i32] [i32 -8, i32 89], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 3, i32 37], [2 x i32] [i32 -1, i32 61], [2 x i32] [i32 -5, i32 73], [2 x i32] [i32 -1, i32 70], [2 x i32] [i32 -4, i32 78]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -14, i32 85], [2 x i32] [i32 -13, i32 89], [2 x i32] [i32 -13, i32 94], [2 x i32] [i32 -11, i32 92], [2 x i32] [i32 -29, i32 127]], [5 x [2 x i32]] [[2 x i32] [i32 -21, i32 85], [2 x i32] [i32 -16, i32 88], [2 x i32] [i32 -23, i32 104], [2 x i32] [i32 -15, i32 98], [2 x i32] [i32 -37, i32 127]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 59], [2 x i32] [i32 -8, i32 63], [2 x i32] [i32 -9, i32 67], [2 x i32] [i32 -6, i32 68], [2 x i32] [i32 -10, i32 79]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -14, i32 75], [2 x i32] [i32 -10, i32 79], [2 x i32] [i32 -9, i32 83], [2 x i32] [i32 -12, i32 92], [2 x i32] [i32 -18, i32 108]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 78], [2 x i32] [i32 -9, i32 83], [2 x i32] [i32 -4, i32 81], [2 x i32] [i32 -13, i32 99], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -16, i32 73], [2 x i32] [i32 -10, i32 76], [2 x i32] [i32 -13, i32 86], [2 x i32] [i32 -9, i32 83], [2 x i32] [i32 -10, i32 87]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_FLD_MAP_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -6, i32 93], [2 x i32] [i32 -6, i32 84], [2 x i32] [i32 -8, i32 79], [2 x i32] [i32 0, i32 66], [2 x i32] [i32 -1, i32 71], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 -2, i32 60], [2 x i32] [i32 -2, i32 59], [2 x i32] [i32 -5, i32 75], [2 x i32] [i32 -3, i32 62], [2 x i32] [i32 -4, i32 58], [2 x i32] [i32 -9, i32 66], [2 x i32] [i32 -1, i32 79], [2 x i32] [i32 0, i32 71], [2 x i32] [i32 3, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 10, i32 44], [2 x i32] [i32 -7, i32 62], [2 x i32] [i32 15, i32 36], [2 x i32] [i32 14, i32 40], [2 x i32] [i32 16, i32 27], [2 x i32] [i32 12, i32 29], [2 x i32] [i32 1, i32 44], [2 x i32] [i32 20, i32 36], [2 x i32] [i32 18, i32 32], [2 x i32] [i32 5, i32 42], [2 x i32] [i32 1, i32 48], [2 x i32] [i32 10, i32 62], [2 x i32] [i32 17, i32 46], [2 x i32] [i32 9, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -14, i32 106], [2 x i32] [i32 -13, i32 97], [2 x i32] [i32 -15, i32 90], [2 x i32] [i32 -12, i32 90], [2 x i32] [i32 -18, i32 88], [2 x i32] [i32 -10, i32 73], [2 x i32] [i32 -9, i32 79], [2 x i32] [i32 -14, i32 86], [2 x i32] [i32 -10, i32 73], [2 x i32] [i32 -10, i32 70], [2 x i32] [i32 -10, i32 69], [2 x i32] [i32 -5, i32 66], [2 x i32] [i32 -9, i32 64], [2 x i32] [i32 -5, i32 58], [2 x i32] [i32 2, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -12, i32 104], [2 x i32] [i32 -11, i32 97], [2 x i32] [i32 -16, i32 96], [2 x i32] [i32 -7, i32 88], [2 x i32] [i32 -8, i32 85], [2 x i32] [i32 -7, i32 85], [2 x i32] [i32 -9, i32 85], [2 x i32] [i32 -13, i32 88], [2 x i32] [i32 4, i32 66], [2 x i32] [i32 -3, i32 77], [2 x i32] [i32 -3, i32 76], [2 x i32] [i32 -6, i32 76], [2 x i32] [i32 10, i32 58], [2 x i32] [i32 -1, i32 76], [2 x i32] [i32 -1, i32 83]], [15 x [2 x i32]] [[2 x i32] [i32 -7, i32 99], [2 x i32] [i32 -14, i32 95], [2 x i32] [i32 2, i32 95], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 76], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 0, i32 70], [2 x i32] [i32 -11, i32 75], [2 x i32] [i32 1, i32 68], [2 x i32] [i32 0, i32 65], [2 x i32] [i32 -14, i32 73], [2 x i32] [i32 3, i32 62], [2 x i32] [i32 4, i32 62], [2 x i32] [i32 -1, i32 68], [2 x i32] [i32 -13, i32 75], [2 x i32] [i32 11, i32 55], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 12, i32 70]]]], align 16
@INIT_FLD_MAP_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -13, i32 106], [2 x i32] [i32 -16, i32 106], [2 x i32] [i32 -10, i32 87], [2 x i32] [i32 -21, i32 114], [2 x i32] [i32 -18, i32 110], [2 x i32] [i32 -14, i32 98], [2 x i32] [i32 -22, i32 110], [2 x i32] [i32 -21, i32 106], [2 x i32] [i32 -18, i32 103], [2 x i32] [i32 -21, i32 107], [2 x i32] [i32 -23, i32 108], [2 x i32] [i32 -26, i32 112], [2 x i32] [i32 -10, i32 96], [2 x i32] [i32 -12, i32 95], [2 x i32] [i32 -5, i32 91]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -9, i32 93], [2 x i32] [i32 -22, i32 94], [2 x i32] [i32 -5, i32 86], [2 x i32] [i32 9, i32 67], [2 x i32] [i32 -4, i32 80], [2 x i32] [i32 -10, i32 85], [2 x i32] [i32 -1, i32 70], [2 x i32] [i32 7, i32 60], [2 x i32] [i32 9, i32 58], [2 x i32] [i32 5, i32 61], [2 x i32] [i32 12, i32 50], [2 x i32] [i32 15, i32 50], [2 x i32] [i32 18, i32 49], [2 x i32] [i32 17, i32 54]], [15 x [2 x i32]] [[2 x i32] [i32 -5, i32 85], [2 x i32] [i32 -6, i32 81], [2 x i32] [i32 -10, i32 77], [2 x i32] [i32 -7, i32 81], [2 x i32] [i32 -17, i32 80], [2 x i32] [i32 -18, i32 73], [2 x i32] [i32 -4, i32 74], [2 x i32] [i32 -10, i32 83], [2 x i32] [i32 -9, i32 71], [2 x i32] [i32 -9, i32 67], [2 x i32] [i32 -1, i32 61], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -14, i32 66], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 2, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 10, i32 41], [2 x i32] [i32 7, i32 46], [2 x i32] [i32 -1, i32 51], [2 x i32] [i32 7, i32 49], [2 x i32] [i32 8, i32 52], [2 x i32] [i32 9, i32 41], [2 x i32] [i32 6, i32 47], [2 x i32] [i32 2, i32 55], [2 x i32] [i32 13, i32 41], [2 x i32] [i32 10, i32 44], [2 x i32] [i32 6, i32 50], [2 x i32] [i32 5, i32 53], [2 x i32] [i32 13, i32 49], [2 x i32] [i32 4, i32 63], [2 x i32] [i32 6, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -2, i32 69], [2 x i32] [i32 -2, i32 59], [2 x i32] [i32 6, i32 70], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 10, i32 44], [2 x i32] [i32 9, i32 31], [2 x i32] [i32 12, i32 43], [2 x i32] [i32 3, i32 53], [2 x i32] [i32 14, i32 34], [2 x i32] [i32 10, i32 38], [2 x i32] [i32 -3, i32 52], [2 x i32] [i32 13, i32 40], [2 x i32] [i32 17, i32 32], [2 x i32] [i32 7, i32 44], [2 x i32] [i32 7, i32 38], [2 x i32] [i32 13, i32 50], [2 x i32] [i32 10, i32 57], [2 x i32] [i32 26, i32 43]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -21, i32 126], [2 x i32] [i32 -23, i32 124], [2 x i32] [i32 -20, i32 110], [2 x i32] [i32 -26, i32 126], [2 x i32] [i32 -25, i32 124], [2 x i32] [i32 -17, i32 105], [2 x i32] [i32 -27, i32 121], [2 x i32] [i32 -27, i32 117], [2 x i32] [i32 -17, i32 102], [2 x i32] [i32 -26, i32 117], [2 x i32] [i32 -27, i32 116], [2 x i32] [i32 -33, i32 122], [2 x i32] [i32 -10, i32 95], [2 x i32] [i32 -14, i32 100], [2 x i32] [i32 -8, i32 95]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -17, i32 111], [2 x i32] [i32 -28, i32 114], [2 x i32] [i32 -6, i32 89], [2 x i32] [i32 -2, i32 80], [2 x i32] [i32 -4, i32 82], [2 x i32] [i32 -9, i32 85], [2 x i32] [i32 -8, i32 81], [2 x i32] [i32 -1, i32 72], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 1, i32 67], [2 x i32] [i32 9, i32 56], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 1, i32 69], [2 x i32] [i32 7, i32 69]], [15 x [2 x i32]] [[2 x i32] [i32 -3, i32 81], [2 x i32] [i32 -3, i32 76], [2 x i32] [i32 -7, i32 72], [2 x i32] [i32 -6, i32 78], [2 x i32] [i32 -12, i32 72], [2 x i32] [i32 -14, i32 68], [2 x i32] [i32 -3, i32 70], [2 x i32] [i32 -6, i32 76], [2 x i32] [i32 -5, i32 66], [2 x i32] [i32 -5, i32 62], [2 x i32] [i32 0, i32 57], [2 x i32] [i32 -4, i32 61], [2 x i32] [i32 -9, i32 60], [2 x i32] [i32 1, i32 54], [2 x i32] [i32 2, i32 58]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -7, i32 69], [2 x i32] [i32 -6, i32 67], [2 x i32] [i32 -16, i32 77], [2 x i32] [i32 -2, i32 64], [2 x i32] [i32 2, i32 61], [2 x i32] [i32 -6, i32 67], [2 x i32] [i32 -3, i32 64], [2 x i32] [i32 2, i32 57], [2 x i32] [i32 -3, i32 65], [2 x i32] [i32 -3, i32 66], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 9, i32 51], [2 x i32] [i32 -1, i32 66], [2 x i32] [i32 -2, i32 71], [2 x i32] [i32 -2, i32 75]], [15 x [2 x i32]] [[2 x i32] [i32 -1, i32 70], [2 x i32] [i32 -9, i32 72], [2 x i32] [i32 14, i32 60], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 16, i32 37], [2 x i32] [i32 0, i32 47], [2 x i32] [i32 18, i32 35], [2 x i32] [i32 11, i32 37], [2 x i32] [i32 12, i32 41], [2 x i32] [i32 10, i32 41], [2 x i32] [i32 2, i32 48], [2 x i32] [i32 12, i32 41], [2 x i32] [i32 13, i32 41], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 3, i32 50], [2 x i32] [i32 19, i32 40], [2 x i32] [i32 3, i32 66], [2 x i32] [i32 18, i32 50]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -22, i32 127], [2 x i32] [i32 -25, i32 127], [2 x i32] [i32 -25, i32 120], [2 x i32] [i32 -27, i32 127], [2 x i32] [i32 -19, i32 114], [2 x i32] [i32 -23, i32 117], [2 x i32] [i32 -25, i32 118], [2 x i32] [i32 -26, i32 117], [2 x i32] [i32 -24, i32 113], [2 x i32] [i32 -28, i32 118], [2 x i32] [i32 -31, i32 120], [2 x i32] [i32 -37, i32 124], [2 x i32] [i32 -10, i32 94], [2 x i32] [i32 -15, i32 102], [2 x i32] [i32 -10, i32 99]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -13, i32 106], [2 x i32] [i32 -50, i32 127], [2 x i32] [i32 -5, i32 92], [2 x i32] [i32 17, i32 57], [2 x i32] [i32 -5, i32 86], [2 x i32] [i32 -13, i32 94], [2 x i32] [i32 -12, i32 91], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 0, i32 71], [2 x i32] [i32 -1, i32 73], [2 x i32] [i32 4, i32 64], [2 x i32] [i32 -7, i32 81], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 15, i32 57]], [15 x [2 x i32]] [[2 x i32] [i32 -3, i32 78], [2 x i32] [i32 -8, i32 74], [2 x i32] [i32 -9, i32 72], [2 x i32] [i32 -10, i32 72], [2 x i32] [i32 -18, i32 75], [2 x i32] [i32 -12, i32 71], [2 x i32] [i32 -11, i32 63], [2 x i32] [i32 -5, i32 70], [2 x i32] [i32 -17, i32 75], [2 x i32] [i32 -14, i32 72], [2 x i32] [i32 -16, i32 67], [2 x i32] [i32 -8, i32 53], [2 x i32] [i32 -14, i32 59], [2 x i32] [i32 -9, i32 52], [2 x i32] [i32 -11, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 1, i32 67], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -10, i32 67], [2 x i32] [i32 1, i32 68], [2 x i32] [i32 0, i32 77], [2 x i32] [i32 2, i32 64], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -5, i32 78], [2 x i32] [i32 7, i32 55], [2 x i32] [i32 5, i32 59], [2 x i32] [i32 2, i32 65], [2 x i32] [i32 14, i32 54], [2 x i32] [i32 15, i32 44], [2 x i32] [i32 5, i32 60], [2 x i32] [i32 2, i32 70]], [15 x [2 x i32]] [[2 x i32] [i32 -2, i32 76], [2 x i32] [i32 -18, i32 86], [2 x i32] [i32 12, i32 70], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 -12, i32 70], [2 x i32] [i32 11, i32 55], [2 x i32] [i32 5, i32 56], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 2, i32 65], [2 x i32] [i32 -6, i32 74], [2 x i32] [i32 5, i32 54], [2 x i32] [i32 7, i32 54], [2 x i32] [i32 -6, i32 76], [2 x i32] [i32 -11, i32 82], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 25, i32 42]]]], align 16
@INIT_FLD_LAST_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 15, i32 6], [2 x i32] [i32 6, i32 19], [2 x i32] [i32 7, i32 16], [2 x i32] [i32 12, i32 14], [2 x i32] [i32 18, i32 13], [2 x i32] [i32 13, i32 11], [2 x i32] [i32 13, i32 15], [2 x i32] [i32 15, i32 16], [2 x i32] [i32 12, i32 23], [2 x i32] [i32 13, i32 23], [2 x i32] [i32 15, i32 20], [2 x i32] [i32 14, i32 26], [2 x i32] [i32 14, i32 44], [2 x i32] [i32 17, i32 40], [2 x i32] [i32 17, i32 47]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 24, i32 17], [2 x i32] [i32 21, i32 21], [2 x i32] [i32 25, i32 22], [2 x i32] [i32 31, i32 27], [2 x i32] [i32 22, i32 29], [2 x i32] [i32 19, i32 35], [2 x i32] [i32 14, i32 50], [2 x i32] [i32 10, i32 57], [2 x i32] [i32 7, i32 63], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 -4, i32 82], [2 x i32] [i32 -3, i32 94], [2 x i32] [i32 9, i32 69], [2 x i32] [i32 -12, i32 109]], [15 x [2 x i32]] [[2 x i32] [i32 21, i32 -10], [2 x i32] [i32 24, i32 -11], [2 x i32] [i32 28, i32 -8], [2 x i32] [i32 28, i32 -1], [2 x i32] [i32 29, i32 3], [2 x i32] [i32 29, i32 9], [2 x i32] [i32 35, i32 20], [2 x i32] [i32 29, i32 36], [2 x i32] [i32 14, i32 67], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 36, i32 -35], [2 x i32] [i32 36, i32 -34], [2 x i32] [i32 32, i32 -26], [2 x i32] [i32 37, i32 -30], [2 x i32] [i32 44, i32 -32], [2 x i32] [i32 34, i32 -18], [2 x i32] [i32 34, i32 -15], [2 x i32] [i32 40, i32 -15], [2 x i32] [i32 33, i32 -7], [2 x i32] [i32 35, i32 -5], [2 x i32] [i32 33, i32 0], [2 x i32] [i32 38, i32 2], [2 x i32] [i32 33, i32 13], [2 x i32] [i32 23, i32 35], [2 x i32] [i32 13, i32 58]], [15 x [2 x i32]] [[2 x i32] [i32 29, i32 -3], [2 x i32] [i32 26, i32 0], [2 x i32] [i32 22, i32 30], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 31, i32 -7], [2 x i32] [i32 35, i32 -15], [2 x i32] [i32 34, i32 -3], [2 x i32] [i32 34, i32 3], [2 x i32] [i32 36, i32 -1], [2 x i32] [i32 34, i32 5], [2 x i32] [i32 32, i32 11], [2 x i32] [i32 35, i32 5], [2 x i32] [i32 34, i32 12], [2 x i32] [i32 39, i32 11], [2 x i32] [i32 30, i32 29], [2 x i32] [i32 34, i32 26], [2 x i32] [i32 29, i32 39], [2 x i32] [i32 19, i32 66]]]], align 16
@INIT_FLD_LAST_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 14, i32 11], [2 x i32] [i32 11, i32 14], [2 x i32] [i32 9, i32 11], [2 x i32] [i32 18, i32 11], [2 x i32] [i32 21, i32 9], [2 x i32] [i32 23, i32 -2], [2 x i32] [i32 32, i32 -15], [2 x i32] [i32 32, i32 -15], [2 x i32] [i32 34, i32 -21], [2 x i32] [i32 39, i32 -23], [2 x i32] [i32 42, i32 -33], [2 x i32] [i32 41, i32 -31], [2 x i32] [i32 46, i32 -28], [2 x i32] [i32 38, i32 -12], [2 x i32] [i32 21, i32 29]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 45, i32 -24], [2 x i32] [i32 53, i32 -45], [2 x i32] [i32 48, i32 -26], [2 x i32] [i32 65, i32 -43], [2 x i32] [i32 43, i32 -19], [2 x i32] [i32 39, i32 -10], [2 x i32] [i32 30, i32 9], [2 x i32] [i32 18, i32 26], [2 x i32] [i32 20, i32 27], [2 x i32] [i32 0, i32 57], [2 x i32] [i32 -14, i32 82], [2 x i32] [i32 -5, i32 75], [2 x i32] [i32 -19, i32 97], [2 x i32] [i32 -35, i32 125]], [15 x [2 x i32]] [[2 x i32] [i32 21, i32 -13], [2 x i32] [i32 33, i32 -14], [2 x i32] [i32 39, i32 -7], [2 x i32] [i32 46, i32 -2], [2 x i32] [i32 51, i32 2], [2 x i32] [i32 60, i32 6], [2 x i32] [i32 61, i32 17], [2 x i32] [i32 55, i32 34], [2 x i32] [i32 42, i32 62], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 27, i32 0], [2 x i32] [i32 28, i32 0], [2 x i32] [i32 31, i32 -4], [2 x i32] [i32 27, i32 6], [2 x i32] [i32 34, i32 8], [2 x i32] [i32 30, i32 10], [2 x i32] [i32 24, i32 22], [2 x i32] [i32 33, i32 19], [2 x i32] [i32 22, i32 32], [2 x i32] [i32 26, i32 31], [2 x i32] [i32 21, i32 41], [2 x i32] [i32 26, i32 44], [2 x i32] [i32 23, i32 47], [2 x i32] [i32 16, i32 65], [2 x i32] [i32 14, i32 71]], [15 x [2 x i32]] [[2 x i32] [i32 8, i32 60], [2 x i32] [i32 6, i32 63], [2 x i32] [i32 17, i32 65], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 21, i32 24], [2 x i32] [i32 23, i32 20], [2 x i32] [i32 26, i32 23], [2 x i32] [i32 27, i32 32], [2 x i32] [i32 28, i32 23], [2 x i32] [i32 28, i32 24], [2 x i32] [i32 23, i32 40], [2 x i32] [i32 24, i32 32], [2 x i32] [i32 28, i32 29], [2 x i32] [i32 23, i32 42], [2 x i32] [i32 19, i32 57], [2 x i32] [i32 22, i32 53], [2 x i32] [i32 22, i32 61], [2 x i32] [i32 11, i32 86]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 19, i32 -6], [2 x i32] [i32 18, i32 -6], [2 x i32] [i32 14, i32 0], [2 x i32] [i32 26, i32 -12], [2 x i32] [i32 31, i32 -16], [2 x i32] [i32 33, i32 -25], [2 x i32] [i32 33, i32 -22], [2 x i32] [i32 37, i32 -28], [2 x i32] [i32 39, i32 -30], [2 x i32] [i32 42, i32 -30], [2 x i32] [i32 47, i32 -42], [2 x i32] [i32 45, i32 -36], [2 x i32] [i32 49, i32 -34], [2 x i32] [i32 41, i32 -17], [2 x i32] [i32 32, i32 9]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 69, i32 -71], [2 x i32] [i32 63, i32 -63], [2 x i32] [i32 66, i32 -64], [2 x i32] [i32 77, i32 -74], [2 x i32] [i32 54, i32 -39], [2 x i32] [i32 52, i32 -35], [2 x i32] [i32 41, i32 -10], [2 x i32] [i32 36, i32 0], [2 x i32] [i32 40, i32 -1], [2 x i32] [i32 30, i32 14], [2 x i32] [i32 28, i32 26], [2 x i32] [i32 23, i32 37], [2 x i32] [i32 12, i32 55], [2 x i32] [i32 11, i32 65]], [15 x [2 x i32]] [[2 x i32] [i32 17, i32 -10], [2 x i32] [i32 32, i32 -13], [2 x i32] [i32 42, i32 -9], [2 x i32] [i32 49, i32 -5], [2 x i32] [i32 53, i32 0], [2 x i32] [i32 64, i32 3], [2 x i32] [i32 68, i32 10], [2 x i32] [i32 66, i32 27], [2 x i32] [i32 47, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 37, i32 -33], [2 x i32] [i32 39, i32 -36], [2 x i32] [i32 40, i32 -37], [2 x i32] [i32 38, i32 -30], [2 x i32] [i32 46, i32 -33], [2 x i32] [i32 42, i32 -30], [2 x i32] [i32 40, i32 -24], [2 x i32] [i32 49, i32 -29], [2 x i32] [i32 38, i32 -12], [2 x i32] [i32 40, i32 -10], [2 x i32] [i32 38, i32 -3], [2 x i32] [i32 46, i32 -5], [2 x i32] [i32 31, i32 20], [2 x i32] [i32 29, i32 30], [2 x i32] [i32 25, i32 44]], [15 x [2 x i32]] [[2 x i32] [i32 12, i32 48], [2 x i32] [i32 11, i32 49], [2 x i32] [i32 26, i32 45], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 22, i32 22], [2 x i32] [i32 23, i32 22], [2 x i32] [i32 27, i32 21], [2 x i32] [i32 33, i32 20], [2 x i32] [i32 26, i32 28], [2 x i32] [i32 30, i32 24], [2 x i32] [i32 27, i32 34], [2 x i32] [i32 18, i32 42], [2 x i32] [i32 25, i32 39], [2 x i32] [i32 18, i32 50], [2 x i32] [i32 12, i32 70], [2 x i32] [i32 21, i32 54], [2 x i32] [i32 14, i32 71], [2 x i32] [i32 11, i32 83]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 17, i32 -13], [2 x i32] [i32 16, i32 -9], [2 x i32] [i32 17, i32 -12], [2 x i32] [i32 27, i32 -21], [2 x i32] [i32 37, i32 -30], [2 x i32] [i32 41, i32 -40], [2 x i32] [i32 42, i32 -41], [2 x i32] [i32 48, i32 -47], [2 x i32] [i32 39, i32 -32], [2 x i32] [i32 46, i32 -40], [2 x i32] [i32 52, i32 -51], [2 x i32] [i32 46, i32 -41], [2 x i32] [i32 52, i32 -39], [2 x i32] [i32 43, i32 -19], [2 x i32] [i32 32, i32 11]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 61, i32 -55], [2 x i32] [i32 56, i32 -46], [2 x i32] [i32 62, i32 -50], [2 x i32] [i32 81, i32 -67], [2 x i32] [i32 45, i32 -20], [2 x i32] [i32 35, i32 -2], [2 x i32] [i32 28, i32 15], [2 x i32] [i32 34, i32 1], [2 x i32] [i32 39, i32 1], [2 x i32] [i32 30, i32 17], [2 x i32] [i32 20, i32 38], [2 x i32] [i32 18, i32 45], [2 x i32] [i32 15, i32 54], [2 x i32] [i32 0, i32 79]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 -2], [2 x i32] [i32 30, i32 -10], [2 x i32] [i32 31, i32 -4], [2 x i32] [i32 33, i32 -1], [2 x i32] [i32 33, i32 7], [2 x i32] [i32 31, i32 12], [2 x i32] [i32 37, i32 23], [2 x i32] [i32 31, i32 38], [2 x i32] [i32 20, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 36, i32 -16], [2 x i32] [i32 37, i32 -14], [2 x i32] [i32 37, i32 -17], [2 x i32] [i32 32, i32 1], [2 x i32] [i32 34, i32 15], [2 x i32] [i32 29, i32 15], [2 x i32] [i32 24, i32 25], [2 x i32] [i32 34, i32 22], [2 x i32] [i32 31, i32 16], [2 x i32] [i32 35, i32 18], [2 x i32] [i32 31, i32 28], [2 x i32] [i32 33, i32 41], [2 x i32] [i32 36, i32 28], [2 x i32] [i32 27, i32 47], [2 x i32] [i32 21, i32 62]], [15 x [2 x i32]] [[2 x i32] [i32 18, i32 31], [2 x i32] [i32 19, i32 26], [2 x i32] [i32 36, i32 24], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 24, i32 23], [2 x i32] [i32 27, i32 16], [2 x i32] [i32 24, i32 30], [2 x i32] [i32 31, i32 29], [2 x i32] [i32 22, i32 41], [2 x i32] [i32 22, i32 42], [2 x i32] [i32 16, i32 60], [2 x i32] [i32 15, i32 52], [2 x i32] [i32 14, i32 60], [2 x i32] [i32 3, i32 78], [2 x i32] [i32 -16, i32 123], [2 x i32] [i32 21, i32 53], [2 x i32] [i32 22, i32 56], [2 x i32] [i32 25, i32 61]]]], align 16
@.str.19 = private unnamed_addr constant [25 x i8] c"ercInit: erc_object_list\00", align 1
@.str.1.20 = private unnamed_addr constant [18 x i8] c"ercOpen: errorVar\00", align 1
@.str.2.21 = private unnamed_addr constant [29 x i8] c"ercReset: errorVar->segments\00", align 1
@.str.3.22 = private unnamed_addr constant [31 x i8] c"ercReset: errorVar->yCondition\00", align 1
@.str.4.23 = private unnamed_addr constant [40 x i8] c"ercReset: errorVar->prevFrameYCondition\00", align 1
@.str.5.24 = private unnamed_addr constant [31 x i8] c"ercReset: errorVar->uCondition\00", align 1
@.str.6.25 = private unnamed_addr constant [31 x i8] c"ercReset: errorVar->vCondition\00", align 1
@concealment_head = internal global ptr null, align 8
@concealment_end = internal global ptr null, align 8
@.str.26 = private unnamed_addr constant [29 x i8] c"ercConcealInterFrame: predMB\00", align 1
@uv_div = internal unnamed_addr constant [2 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 1, i32 0], [4 x i32] [i32 0, i32 1, i32 0, i32 0]], align 16
@ec_flag = internal unnamed_addr global [20 x i32] zeroinitializer, align 16
@.str.29 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@MbToSliceGroupMap = internal global ptr null, align 8
@MapUnitToSliceGroupMap = internal global ptr null, align 8
@NumberOfSliceGroups = internal unnamed_addr global i32 0, align 4
@.str.30 = private unnamed_addr constant [72 x i8] c"wrong pps->num_slice_group_map_units_minus1 for used SPS and FMO type 6\00", align 1
@.str.1.31 = private unnamed_addr constant [60 x i8] c"cannot allocated %d bytes for MapUnitToSliceGroupMap, exit\0A\00", align 1
@.str.2.32 = private unnamed_addr constant [41 x i8] c"Illegal slice_group_map_type %d , exit \0A\00", align 1
@.str.3.33 = private unnamed_addr constant [54 x i8] c"cannot allocate %d bytes for MbToSliceGroupMap, exit\0A\00", align 1
@.str.34 = private unnamed_addr constant [22 x i8] c"SH: first_mb_in_slice\00", align 1
@.str.1.35 = private unnamed_addr constant [15 x i8] c"SH: slice_type\00", align 1
@.str.2.36 = private unnamed_addr constant [25 x i8] c"SH: pic_parameter_set_id\00", align 1
@.str.3.37 = private unnamed_addr constant [14 x i8] c"SH: frame_num\00", align 1
@.str.4.38 = private unnamed_addr constant [19 x i8] c"SH: field_pic_flag\00", align 1
@.str.5.39 = private unnamed_addr constant [22 x i8] c"SH: bottom_field_flag\00", align 1
@.str.6.40 = private unnamed_addr constant [15 x i8] c"SH: idr_pic_id\00", align 1
@.str.7.41 = private unnamed_addr constant [22 x i8] c"SH: pic_order_cnt_lsb\00", align 1
@.str.8.42 = private unnamed_addr constant [31 x i8] c"SH: delta_pic_order_cnt_bottom\00", align 1
@.str.9.43 = private unnamed_addr constant [27 x i8] c"SH: delta_pic_order_cnt[0]\00", align 1
@.str.10.44 = private unnamed_addr constant [27 x i8] c"SH: delta_pic_order_cnt[1]\00", align 1
@.str.11.45 = private unnamed_addr constant [22 x i8] c"SH: redundant_pic_cnt\00", align 1
@.str.12.46 = private unnamed_addr constant [32 x i8] c"SH: direct_spatial_mv_pred_flag\00", align 1
@.str.13.47 = private unnamed_addr constant [30 x i8] c"SH: num_ref_idx_override_flag\00", align 1
@.str.14.48 = private unnamed_addr constant [33 x i8] c"SH: num_ref_idx_l0_active_minus1\00", align 1
@.str.15.49 = private unnamed_addr constant [33 x i8] c"SH: num_ref_idx_l1_active_minus1\00", align 1
@.str.16.50 = private unnamed_addr constant [19 x i8] c"SH: cabac_init_idc\00", align 1
@.str.17.51 = private unnamed_addr constant [19 x i8] c"SH: slice_qp_delta\00", align 1
@.str.18 = private unnamed_addr constant [45 x i8] c"slice_qp_delta makes slice_qp_y out of range\00", align 1
@.str.19.52 = private unnamed_addr constant [23 x i8] c"SH: sp_for_switch_flag\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"SH: slice_qs_delta\00", align 1
@.str.21 = private unnamed_addr constant [45 x i8] c"slice_qs_delta makes slice_qs_y out of range\00", align 1
@.str.22 = private unnamed_addr constant [34 x i8] c"SH: disable_deblocking_filter_idc\00", align 1
@.str.23 = private unnamed_addr constant [31 x i8] c"SH: slice_alpha_c0_offset_div2\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"SH: slice_beta_offset_div2\00", align 1
@.str.25 = private unnamed_addr constant [29 x i8] c"SH: slice_group_change_cycle\00", align 1
@.str.26.53 = private unnamed_addr constant [33 x i8] c"SH: no_output_of_prior_pics_flag\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"SH: long_term_reference_flag\00", align 1
@.str.28 = private unnamed_addr constant [36 x i8] c"SH: adaptive_ref_pic_buffering_flag\00", align 1
@.str.29.54 = private unnamed_addr constant [40 x i8] c"SH: memory_management_control_operation\00", align 1
@.str.30.55 = private unnamed_addr constant [34 x i8] c"SH: difference_of_pic_nums_minus1\00", align 1
@.str.31 = private unnamed_addr constant [22 x i8] c"SH: long_term_pic_num\00", align 1
@.str.32 = private unnamed_addr constant [24 x i8] c"SH: long_term_frame_idx\00", align 1
@.str.33 = private unnamed_addr constant [32 x i8] c"SH: max_long_term_pic_idx_plus1\00", align 1
@.str.34.56 = private unnamed_addr constant [43 x i8] c"frame_num not equal to zero in IDR picture\00", align 1
@.str.58 = private unnamed_addr constant [36 x i8] c"SH: ref_pic_list_reordering_flag_l0\00", align 1
@.str.59 = private unnamed_addr constant [34 x i8] c"SH: reordering_of_pic_nums_idc_l0\00", align 1
@.str.60 = private unnamed_addr constant [31 x i8] c"SH: abs_diff_pic_num_minus1_l0\00", align 1
@.str.61 = private unnamed_addr constant [25 x i8] c"SH: long_term_pic_idx_l0\00", align 1
@.str.62 = private unnamed_addr constant [36 x i8] c"SH: ref_pic_list_reordering_flag_l1\00", align 1
@.str.63 = private unnamed_addr constant [34 x i8] c"SH: reordering_of_pic_nums_idc_l1\00", align 1
@.str.64 = private unnamed_addr constant [31 x i8] c"SH: abs_diff_pic_num_minus1_l1\00", align 1
@.str.65 = private unnamed_addr constant [25 x i8] c"SH: long_term_pic_idx_l1\00", align 1
@.str.66 = private unnamed_addr constant [27 x i8] c"SH: luma_log2_weight_denom\00", align 1
@.str.67 = private unnamed_addr constant [29 x i8] c"SH: chroma_log2_weight_denom\00", align 1
@.str.68 = private unnamed_addr constant [24 x i8] c"SH: luma_weight_flag_l0\00", align 1
@.str.69 = private unnamed_addr constant [19 x i8] c"SH: luma_weight_l0\00", align 1
@.str.70 = private unnamed_addr constant [19 x i8] c"SH: luma_offset_l0\00", align 1
@.str.71 = private unnamed_addr constant [26 x i8] c"SH: chroma_weight_flag_l0\00", align 1
@.str.72 = private unnamed_addr constant [21 x i8] c"SH: chroma_weight_l0\00", align 1
@.str.73 = private unnamed_addr constant [21 x i8] c"SH: chroma_offset_l0\00", align 1
@.str.74 = private unnamed_addr constant [24 x i8] c"SH: luma_weight_flag_l1\00", align 1
@.str.75 = private unnamed_addr constant [19 x i8] c"SH: luma_weight_l1\00", align 1
@.str.76 = private unnamed_addr constant [19 x i8] c"SH: luma_offset_l1\00", align 1
@.str.77 = private unnamed_addr constant [26 x i8] c"SH: chroma_weight_flag_l1\00", align 1
@.str.78 = private unnamed_addr constant [21 x i8] c"SH: chroma_weight_l1\00", align 1
@.str.79 = private unnamed_addr constant [21 x i8] c"SH: chroma_offset_l1\00", align 1
@.str.80 = private unnamed_addr constant [110 x i8] c"Source picture has higher bit depth than imgpel data type. Please recompile with larger data type for imgpel.\00", align 1
@.str.1.81 = private unnamed_addr constant [80 x i8] c"reading only from formats of 8, 16 or 32 bit allowed on big endian architecture\00", align 1
@find_snr.SubWidthC = internal unnamed_addr constant [4 x i32] [i32 1, i32 2, i32 2, i32 1], align 16
@find_snr.SubHeightC = internal unnamed_addr constant [4 x i32] [i32 1, i32 2, i32 1, i32 1], align 16
@.str.2.82 = private unnamed_addr constant [14 x i8] c"find_snr: buf\00", align 1
@.str.3.83 = private unnamed_addr constant [35 x i8] c"Error in seeking frame number: %d\0A\00", align 1
@.str.4.60 = private unnamed_addr constant [48 x i8] c"%04d(P)  %8d %5d %5d %7.4f %7.4f %7.4f  %s %5d\0A\00", align 1
@get_block.cur_imgY = internal unnamed_addr global ptr null, align 8
@get_block.cur_lineY = internal unnamed_addr global ptr null, align 8
@.str.7.74 = private unnamed_addr constant [98 x i8] c"RefPicList0[ num_ref_idx_l0_active_minus1 ] is equal to 'no reference picture', invalid bitstream\00", align 1
@.str.9.75 = private unnamed_addr constant [98 x i8] c"RefPicList1[ num_ref_idx_l1_active_minus1 ] is equal to 'no reference picture', invalid bitstream\00", align 1
@.str.10.64 = private unnamed_addr constant [54 x i8] c"Error while getting the NALU in file format %s, exit\0A\00", align 1
@.str.11.62 = private unnamed_addr constant [8 x i8] c"Annex B\00", align 1
@.str.12.63 = private unnamed_addr constant [4 x i8] c"RTP\00", align 1
@.str.16.65 = private unnamed_addr constant [20 x i8] c"NALU: DP_A slice_id\00", align 1
@.str.17.66 = private unnamed_addr constant [56 x i8] c"received data partition with CABAC, this is not allowed\00", align 1
@.str.18.67 = private unnamed_addr constant [20 x i8] c"NALU: DP_B slice_id\00", align 1
@.str.20.68 = private unnamed_addr constant [28 x i8] c"NALU: DP_B redudant_pic_cnt\00", align 1
@.str.21.69 = private unnamed_addr constant [20 x i8] c"NALU: DP_C slice_id\00", align 1
@.str.23.70 = private unnamed_addr constant [30 x i8] c"NALU:SLICE_C redudand_pic_cnt\00", align 1
@.str.26.71 = private unnamed_addr constant [45 x i8] c"read_new_slice: Found NALU_TYPE_SEI, len %d\0A\00", align 1
@.str.27.72 = private unnamed_addr constant [46 x i8] c"read_new_slice: Found NALU_TYPE_FILL, len %d\0A\00", align 1
@.str.29.73 = private unnamed_addr constant [62 x i8] c"Found NALU type %d, len %d undefined, ignore NALU, moving on\0A\00", align 1
@.str.30.76 = private unnamed_addr constant [48 x i8] c"An unintentional loss of pictures occurs! Exit\0A\00", align 1
@erc_mvperMB = internal global i32 0, align 4
@.str.31.77 = private unnamed_addr constant [31 x i8] c"img->structure not initialized\00", align 1
@__const.exit_picture.yuv_types = private unnamed_addr constant [4 x [6 x i8]] [[6 x i8] c"4:0:0\00", [6 x i8] c"4:2:0\00", [6 x i8] c"4:2:2\00", [6 x i8] c"4:4:4\00"], align 16
@erc_img = internal global ptr null, align 8
@erc_object_list = internal global ptr null, align 8
@.str.33.59 = private unnamed_addr constant [48 x i8] c"%04d(I)  %8d %5d %5d %7.4f %7.4f %7.4f  %s %5d\0A\00", align 1
@.str.34.61 = private unnamed_addr constant [48 x i8] c"%04d(SP) %8d %5d %5d %7.4f %7.4f %7.4f  %s %5d\0A\00", align 1
@.str.35 = private unnamed_addr constant [48 x i8] c"%04d(SI) %8d %5d %5d %7.4f %7.4f %7.4f  %s %5d\0A\00", align 1
@.str.36 = private unnamed_addr constant [48 x i8] c"%04d(RB) %8d %5d %5d %7.4f %7.4f %7.4f  %s %5d\0A\00", align 1
@.str.37 = private unnamed_addr constant [48 x i8] c"%04d(B)  %8d %5d %5d %7.4f %7.4f %7.4f  %s %5d\0A\00", align 1
@.str.38 = private unnamed_addr constant [32 x i8] c"Completed Decoding frame %05d.\0D\00", align 1
@old_slice = internal global %struct.old_slice_par zeroinitializer, align 4
@str.86 = private unnamed_addr constant [62 x i8] c"list[ref_frame] is equal to 'no reference picture' before RAP\00", align 1
@str.39 = private unnamed_addr constant [79 x i8] c"RefPicList1[ num_ref_idx_l1_active_minus1 ] is equal to 'no reference picture'\00", align 1
@str.40 = private unnamed_addr constant [79 x i8] c"RefPicList0[ num_ref_idx_l0_active_minus1 ] is equal to 'no reference picture'\00", align 1
@str.41 = private unnamed_addr constant [53 x i8] c"Skipping these filling bits, proceeding w/ next NALU\00", align 1
@str.42 = private unnamed_addr constant [57 x i8] c"found data partition C without matching DP A, discarding\00", align 1
@str.43 = private unnamed_addr constant [57 x i8] c"found data partition B without matching DP A, discarding\00", align 1
@str.44 = private unnamed_addr constant [49 x i8] c"got a data partition C which does not match DP_A\00", align 1
@str.45 = private unnamed_addr constant [49 x i8] c"got a data partition B which does not match DP_A\00", align 1
@str.46 = private unnamed_addr constant [54 x i8] c"Warning: Decoding does not start with an IDR picture.\00", align 1
@str.47 = private unnamed_addr constant [58 x i8] c"Found NALU w/ forbidden_bit set, bit error?  Let's try...\00", align 1
@global_init_done = internal global i32 0, align 4
@.str.95 = private unnamed_addr constant [783 x i8] c"\0A   ldecod [-h] {[defdec.cfg] | {[-p pocScale][-i bitstream.264]...[-o output.yuv] [-r reference.yuv] [-uv]}}\0A\0A## Parameters\0A\0A## Options\0A   -h  :  prints function usage\0A       :  parse <defdec.cfg> for decoder operation.\0A   -i  :  Input file name. \0A   -o  :  Output file name. If not specified default output is set as test_dec.yuv\0A\0A   -r  :  Reference file name. If not specified default output is set as test_rec.yuv\0A\0A   -p  :  Poc Scale. \0A   -uv :  write chroma components for monochrome streams(4:2:0)\0A\0A## Supported video file formats\0A   Input : .264 -> H.264 bitstream files. \0A   Output: .yuv -> RAW file. Format depends on bitstream information. \0A\0A## Examples of usage:\0A   ldecod\0A   ldecod  -h\0A   ldecod  default.cfg\0A   ldecod  -i bitstream.264 -o output.yuv -r reference.yuv\0A\00", align 1
@.str.1.91 = private unnamed_addr constant [9 x i8] c"test.264\00", align 1
@.str.2.92 = private unnamed_addr constant [13 x i8] c"test_dec.yuv\00", align 1
@.str.3.93 = private unnamed_addr constant [13 x i8] c"test_rec.yuv\00", align 1
@.str.4.94 = private unnamed_addr constant [3 x i8] c"-h\00", align 1
@.str.5.96 = private unnamed_addr constant [3 x i8] c"-s\00", align 1
@.str.6.97 = private unnamed_addr constant [3 x i8] c"-i\00", align 1
@.str.7.98 = private unnamed_addr constant [3 x i8] c"-o\00", align 1
@.str.8.99 = private unnamed_addr constant [3 x i8] c"-r\00", align 1
@.str.9.100 = private unnamed_addr constant [3 x i8] c"-p\00", align 1
@.str.10.101 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.11.102 = private unnamed_addr constant [4 x i8] c"-uv\00", align 1
@.str.12.103 = private unnamed_addr constant [47 x i8] c"Invalid syntax. Use ldecod -h for proper usage\00", align 1
@.str.13.104 = private unnamed_addr constant [20 x i8] c"Error open file %s \00", align 1
@stdout = external local_unnamed_addr global ptr, align 8
@.str.14.105 = private unnamed_addr constant [70 x i8] c"----------------------------- JM %s %s -----------------------------\0A\00", align 1
@.str.15.106 = private unnamed_addr constant [5 x i8] c"12.1\00", align 1
@.str.16.107 = private unnamed_addr constant [8 x i8] c"(FRExt)\00", align 1
@.str.17.108 = private unnamed_addr constant [47 x i8] c" Decoder config file                    : %s \0A\00", align 1
@.str.18.109 = private unnamed_addr constant [76 x i8] c"--------------------------------------------------------------------------\0A\00", align 1
@.str.19.110 = private unnamed_addr constant [47 x i8] c" Input H.264 bitstream                  : %s \0A\00", align 1
@.str.20.111 = private unnamed_addr constant [47 x i8] c" Output decoded YUV                     : %s \0A\00", align 1
@.str.21.112 = private unnamed_addr constant [47 x i8] c" Output status file                     : %s \0A\00", align 1
@.str.22.113 = private unnamed_addr constant [8 x i8] c"log.dec\00", align 1
@.str.23.114 = private unnamed_addr constant [62 x i8] c" Input reference file                   : %s does not exist \0A\00", align 1
@.str.24.115 = private unnamed_addr constant [72 x i8] c"                                          SNR values are not available\0A\00", align 1
@.str.25.116 = private unnamed_addr constant [47 x i8] c" Input reference file                   : %s \0A\00", align 1
@.str.26.117 = private unnamed_addr constant [52 x i8] c"POC must = frame# or field# for SNRs to be correct\0A\00", align 1
@.str.27.118 = private unnamed_addr constant [72 x i8] c"  Frame       POC   Pic#   QP   SnrY    SnrU    SnrV   Y:U:V  Time(ms)\0A\00", align 1
@.str.28.128 = private unnamed_addr constant [12 x i8] c"main: input\00", align 1
@.str.29.131 = private unnamed_addr constant [10 x i8] c"main: snr\00", align 1
@.str.30.132 = private unnamed_addr constant [10 x i8] c"main: img\00", align 1
@.str.31.133 = private unnamed_addr constant [34 x i8] c"Unsupported file format %d, exit\0A\00", align 1
@erc_errorVar = internal global ptr null, align 8
@.str.32.119 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.33.120 = private unnamed_addr constant [34 x i8] c"Error: Control file %s not found\0A\00", align 1
@.str.34.121 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.35.122 = private unnamed_addr constant [7 x i8] c"%*[^\0A]\00", align 1
@.str.36.123 = private unnamed_addr constant [29 x i8] c"NAL mode %i is not supported\00", align 1
@.str.37.124 = private unnamed_addr constant [4 x i8] c"%d,\00", align 1
@.str.38.125 = private unnamed_addr constant [51 x i8] c"Poc Scale is %d. It has to be within range 1 to 10\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"%ld,\00", align 1
@__const.report.yuv_formats = private unnamed_addr constant [4 x [4 x i8]] [[4 x i8] c"400\00", [4 x i8] c"420\00", [4 x i8] c"422\00", [4 x i8] c"444\00"], align 16
@.str.40 = private unnamed_addr constant [76 x i8] c"-------------------- Average SNR all frames ------------------------------\0A\00", align 1
@.str.41 = private unnamed_addr constant [30 x i8] c" SNR Y(dB)           : %5.2f\0A\00", align 1
@.str.42 = private unnamed_addr constant [30 x i8] c" SNR U(dB)           : %5.2f\0A\00", align 1
@.str.43 = private unnamed_addr constant [30 x i8] c" SNR V(dB)           : %5.2f\0A\00", align 1
@.str.44 = private unnamed_addr constant [29 x i8] c" Exit JM %s decoder, ver %s \00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"12 (FRExt)\00", align 1
@.str.47 = private unnamed_addr constant [77 x i8] c"\0A----------------------- Decoding Completed -------------------------------\0A\00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.49 = private unnamed_addr constant [33 x i8] c"Error open file %s for appending\00", align 1
@.str.50 = private unnamed_addr constant [118 x i8] c" -------------------------------------------------------------------------------------------------------------------\0A\00", align 1
@.str.51 = private unnamed_addr constant [94 x i8] c"|  Decoder statistics. This file is made first time, later runs are appended               |\0A\00", align 1
@.str.52 = private unnamed_addr constant [119 x i8] c" ------------------------------------------------------------------------------------------------------------------- \0A\00", align 1
@.str.53 = private unnamed_addr constant [119 x i8] c"|   ver  | Date  | Time  |    Sequence        |#Img| Format  | YUV |Coding|SNRY 1|SNRU 1|SNRV 1|SNRY N|SNRU N|SNRV N|\0A\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"|%s/%-4s\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"%d-%b-%Y\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"| %1.5s |\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"%H:%M:%S\00", align 1
@.str.58.134 = private unnamed_addr constant [9 x i8] c"%20.20s|\00", align 1
@.str.59.135 = private unnamed_addr constant [6 x i8] c"%3d |\00", align 1
@.str.60.136 = private unnamed_addr constant [10 x i8] c"%4dx%-4d|\00", align 1
@.str.61.137 = private unnamed_addr constant [6 x i8] c" %s |\00", align 1
@.str.62.138 = private unnamed_addr constant [8 x i8] c" CAVLC|\00", align 1
@.str.63.139 = private unnamed_addr constant [8 x i8] c" CABAC|\00", align 1
@.str.64.140 = private unnamed_addr constant [7 x i8] c"%6.3f|\00", align 1
@.str.65.141 = private unnamed_addr constant [8 x i8] c"%6.3f|\0A\00", align 1
@.str.66.142 = private unnamed_addr constant [12 x i8] c"dataDec.txt\00", align 1
@.str.67.143 = private unnamed_addr constant [79 x i8] c"%3d %2d %2d %2.2f %2.2f %2.2f %5d %2.2f %2.2f %2.2f %5d %2.2f %2.2f %2.2f %5d\0A\00", align 1
@.str.68.145 = private unnamed_addr constant [60 x i8] c"AllocPartition: Memory allocation for Data Partition failed\00", align 1
@.str.69.146 = private unnamed_addr constant [55 x i8] c"AllocPartition: Memory allocation for Bitstream failed\00", align 1
@.str.70.147 = private unnamed_addr constant [58 x i8] c"AllocPartition: Memory allocation for streamBuffer failed\00", align 1
@.str.71.144 = private unnamed_addr constant [61 x i8] c"Memory allocation for Slice datastruct in NAL-mode %d failed\00", align 1
@.str.72.148 = private unnamed_addr constant [34 x i8] c"init_global_buffers: img->mb_data\00", align 1
@.str.73.149 = private unnamed_addr constant [38 x i8] c"init_global_buffers: img->intra_block\00", align 1
@.str.74.150 = private unnamed_addr constant [20 x i8] c"init_img: img->quad\00", align 1
@__const.DeblockMb.filterNon8x8LumaEdgesFlag = private unnamed_addr constant [4 x i32] [i32 1, i32 1, i32 1, i32 1], align 16
@chroma_edge = internal unnamed_addr constant [2 x [4 x [4 x i8]]] [[4 x [4 x i8]] [[4 x i8] c"\FF\00\00\00", [4 x i8] c"\FF\FF\FF\01", [4 x i8] c"\FF\01\01\02", [4 x i8] c"\FF\FF\FF\03"], [4 x [4 x i8]] [[4 x i8] c"\FF\00\00\00", [4 x i8] c"\FF\FF\01\01", [4 x i8] c"\FF\01\02\02", [4 x i8] c"\FF\FF\03\03"]], align 16
@mixedModeEdgeFlag = internal global i8 0, align 1
@EdgeLoop.pelnum_cr = internal unnamed_addr constant [2 x [4 x i32]] [[4 x i32] [i32 0, i32 8, i32 16, i32 16], [4 x i32] [i32 0, i32 8, i32 8, i32 16]], align 16
@fieldModeFilteringFlag = internal global i8 0, align 1
@ALPHA_TABLE = internal unnamed_addr constant [52 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\04\05\06\07\08\09\0A\0C\0D\0F\11\14\16\19\1C $(-28?GPZeq\7F\90\A2\B6\CB\E2\FF\FF", align 16
@BETA_TABLE = internal unnamed_addr constant [52 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\02\02\03\03\03\03\04\04\04\06\06\07\07\08\08\09\09\0A\0A\0B\0B\0C\0C\0D\0D\0E\0E\0F\0F\10\10\11\11\12\12", align 16
@CLIP_TAB = internal unnamed_addr constant [52 x [5 x i8]] [[5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] c"\00\00\00\01\01", [5 x i8] c"\00\00\00\01\01", [5 x i8] c"\00\00\00\01\01", [5 x i8] c"\00\00\00\01\01", [5 x i8] c"\00\00\01\01\01", [5 x i8] c"\00\00\01\01\01", [5 x i8] c"\00\01\01\01\01", [5 x i8] c"\00\01\01\01\01", [5 x i8] c"\00\01\01\01\01", [5 x i8] c"\00\01\01\01\01", [5 x i8] c"\00\01\01\02\02", [5 x i8] c"\00\01\01\02\02", [5 x i8] c"\00\01\01\02\02", [5 x i8] c"\00\01\01\02\02", [5 x i8] c"\00\01\02\03\03", [5 x i8] c"\00\01\02\03\03", [5 x i8] c"\00\02\02\03\03", [5 x i8] c"\00\02\02\04\04", [5 x i8] c"\00\02\03\04\04", [5 x i8] c"\00\02\03\04\04", [5 x i8] c"\00\03\03\05\05", [5 x i8] c"\00\03\04\06\06", [5 x i8] c"\00\03\04\06\06", [5 x i8] c"\00\04\05\07\07", [5 x i8] c"\00\04\05\08\08", [5 x i8] c"\00\04\06\09\09", [5 x i8] c"\00\05\07\0A\0A", [5 x i8] c"\00\06\08\0B\0B", [5 x i8] c"\00\06\08\0D\0D", [5 x i8] c"\00\07\0A\0E\0E", [5 x i8] c"\00\08\0B\10\10", [5 x i8] c"\00\09\0C\12\12", [5 x i8] c"\00\0A\0D\14\14", [5 x i8] c"\00\0B\0F\17\17", [5 x i8] c"\00\0D\11\19\19"], align 16
@SNGL_SCAN = internal constant [16 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\01\00", [2 x i8] c"\00\01", [2 x i8] c"\00\02", [2 x i8] c"\01\01", [2 x i8] c"\02\00", [2 x i8] c"\03\00", [2 x i8] c"\02\01", [2 x i8] c"\01\02", [2 x i8] c"\00\03", [2 x i8] c"\01\03", [2 x i8] c"\02\02", [2 x i8] c"\03\01", [2 x i8] c"\03\02", [2 x i8] c"\02\03", [2 x i8] c"\03\03"], align 16
@FIELD_SCAN = internal constant [16 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\00\01", [2 x i8] c"\01\00", [2 x i8] c"\00\02", [2 x i8] c"\00\03", [2 x i8] c"\01\01", [2 x i8] c"\01\02", [2 x i8] c"\01\03", [2 x i8] c"\02\00", [2 x i8] c"\02\01", [2 x i8] c"\02\02", [2 x i8] c"\02\03", [2 x i8] c"\03\00", [2 x i8] c"\03\01", [2 x i8] c"\03\02", [2 x i8] c"\03\03"], align 16
@BLOCK_STEP = internal constant [8 x [2 x i32]] [[2 x i32] zeroinitializer, [2 x i32] [i32 4, i32 4], [2 x i32] [i32 4, i32 2], [2 x i32] [i32 2, i32 4], [2 x i32] [i32 2, i32 2], [2 x i32] [i32 2, i32 1], [2 x i32] [i32 1, i32 2], [2 x i32] [i32 1, i32 1]], align 16
@dequant_coef = internal constant [6 x [4 x [4 x i32]]] [[4 x [4 x i32]] [[4 x i32] [i32 10, i32 13, i32 10, i32 13], [4 x i32] [i32 13, i32 16, i32 13, i32 16], [4 x i32] [i32 10, i32 13, i32 10, i32 13], [4 x i32] [i32 13, i32 16, i32 13, i32 16]], [4 x [4 x i32]] [[4 x i32] [i32 11, i32 14, i32 11, i32 14], [4 x i32] [i32 14, i32 18, i32 14, i32 18], [4 x i32] [i32 11, i32 14, i32 11, i32 14], [4 x i32] [i32 14, i32 18, i32 14, i32 18]], [4 x [4 x i32]] [[4 x i32] [i32 13, i32 16, i32 13, i32 16], [4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 13, i32 16, i32 13, i32 16], [4 x i32] [i32 16, i32 20, i32 16, i32 20]], [4 x [4 x i32]] [[4 x i32] [i32 14, i32 18, i32 14, i32 18], [4 x i32] [i32 18, i32 23, i32 18, i32 23], [4 x i32] [i32 14, i32 18, i32 14, i32 18], [4 x i32] [i32 18, i32 23, i32 18, i32 23]], [4 x [4 x i32]] [[4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 20, i32 25, i32 20, i32 25], [4 x i32] [i32 16, i32 20, i32 16, i32 20], [4 x i32] [i32 20, i32 25, i32 20, i32 25]], [4 x [4 x i32]] [[4 x i32] [i32 18, i32 23, i32 18, i32 23], [4 x i32] [i32 23, i32 29, i32 23, i32 29], [4 x i32] [i32 18, i32 23, i32 18, i32 23], [4 x i32] [i32 23, i32 29, i32 23, i32 29]]], align 16
@QP_SCALE_CR = internal constant [52 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1D\1E\1F  !\22\22##$$%%%&&&''''", align 16
@SNGL_SCAN8x8 = internal constant [64 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\01\00", [2 x i8] c"\00\01", [2 x i8] c"\00\02", [2 x i8] c"\01\01", [2 x i8] c"\02\00", [2 x i8] c"\03\00", [2 x i8] c"\02\01", [2 x i8] c"\01\02", [2 x i8] c"\00\03", [2 x i8] c"\00\04", [2 x i8] c"\01\03", [2 x i8] c"\02\02", [2 x i8] c"\03\01", [2 x i8] c"\04\00", [2 x i8] c"\05\00", [2 x i8] c"\04\01", [2 x i8] c"\03\02", [2 x i8] c"\02\03", [2 x i8] c"\01\04", [2 x i8] c"\00\05", [2 x i8] c"\00\06", [2 x i8] c"\01\05", [2 x i8] c"\02\04", [2 x i8] c"\03\03", [2 x i8] c"\04\02", [2 x i8] c"\05\01", [2 x i8] c"\06\00", [2 x i8] c"\07\00", [2 x i8] c"\06\01", [2 x i8] c"\05\02", [2 x i8] c"\04\03", [2 x i8] c"\03\04", [2 x i8] c"\02\05", [2 x i8] c"\01\06", [2 x i8] c"\00\07", [2 x i8] c"\01\07", [2 x i8] c"\02\06", [2 x i8] c"\03\05", [2 x i8] c"\04\04", [2 x i8] c"\05\03", [2 x i8] c"\06\02", [2 x i8] c"\07\01", [2 x i8] c"\07\02", [2 x i8] c"\06\03", [2 x i8] c"\05\04", [2 x i8] c"\04\05", [2 x i8] c"\03\06", [2 x i8] c"\02\07", [2 x i8] c"\03\07", [2 x i8] c"\04\06", [2 x i8] c"\05\05", [2 x i8] c"\06\04", [2 x i8] c"\07\03", [2 x i8] c"\07\04", [2 x i8] c"\06\05", [2 x i8] c"\05\06", [2 x i8] c"\04\07", [2 x i8] c"\05\07", [2 x i8] c"\06\06", [2 x i8] c"\07\05", [2 x i8] c"\07\06", [2 x i8] c"\06\07", [2 x i8] c"\07\07"], align 16
@FIELD_SCAN8x8 = internal constant [64 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\00\01", [2 x i8] c"\00\02", [2 x i8] c"\01\00", [2 x i8] c"\01\01", [2 x i8] c"\00\03", [2 x i8] c"\00\04", [2 x i8] c"\01\02", [2 x i8] c"\02\00", [2 x i8] c"\01\03", [2 x i8] c"\00\05", [2 x i8] c"\00\06", [2 x i8] c"\00\07", [2 x i8] c"\01\04", [2 x i8] c"\02\01", [2 x i8] c"\03\00", [2 x i8] c"\02\02", [2 x i8] c"\01\05", [2 x i8] c"\01\06", [2 x i8] c"\01\07", [2 x i8] c"\02\03", [2 x i8] c"\03\01", [2 x i8] c"\04\00", [2 x i8] c"\03\02", [2 x i8] c"\02\04", [2 x i8] c"\02\05", [2 x i8] c"\02\06", [2 x i8] c"\02\07", [2 x i8] c"\03\03", [2 x i8] c"\04\01", [2 x i8] c"\05\00", [2 x i8] c"\04\02", [2 x i8] c"\03\04", [2 x i8] c"\03\05", [2 x i8] c"\03\06", [2 x i8] c"\03\07", [2 x i8] c"\04\03", [2 x i8] c"\05\01", [2 x i8] c"\06\00", [2 x i8] c"\05\02", [2 x i8] c"\04\04", [2 x i8] c"\04\05", [2 x i8] c"\04\06", [2 x i8] c"\04\07", [2 x i8] c"\05\03", [2 x i8] c"\06\01", [2 x i8] c"\06\02", [2 x i8] c"\05\04", [2 x i8] c"\05\05", [2 x i8] c"\05\06", [2 x i8] c"\05\07", [2 x i8] c"\06\03", [2 x i8] c"\07\00", [2 x i8] c"\07\01", [2 x i8] c"\06\04", [2 x i8] c"\06\05", [2 x i8] c"\06\06", [2 x i8] c"\06\07", [2 x i8] c"\07\02", [2 x i8] c"\07\03", [2 x i8] c"\07\04", [2 x i8] c"\07\05", [2 x i8] c"\07\06", [2 x i8] c"\07\07"], align 16
@SCAN_YUV422 = internal constant [8 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\00\01", [2 x i8] c"\01\00", [2 x i8] c"\00\02", [2 x i8] c"\00\03", [2 x i8] c"\01\01", [2 x i8] c"\01\02", [2 x i8] c"\01\03"], align 16
@subblk_offset_x = internal constant [3 x [8 x [4 x i8]]] [[8 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C", [4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C", [4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C", [4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C"]], align 16
@subblk_offset_y = internal constant [3 x [8 x [4 x i8]]] [[8 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\00\00\04\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\00\00\04\04", [4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\08\08\0C\0C"]], align 16
@block8x8_idx = internal global [3 x [4 x [4 x i32]]] [[4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer], [4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 0, i32 1], [4 x i32] [i32 2, i32 3, i32 2, i32 3], [4 x i32] zeroinitializer, [4 x i32] zeroinitializer], [4 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] [i32 1, i32 1, i32 1, i32 1], [4 x i32] [i32 2, i32 2, i32 2, i32 2], [4 x i32] [i32 3, i32 3, i32 3, i32 3]]], align 16
@.str.155 = private unnamed_addr constant [102 x i8] c"maximum number of supported slices exceeded, please recompile with increased value for MAX_NUM_SLICES\00", align 1
@interpret_mb_mode_B.offset2pdir16x16 = internal unnamed_addr constant <{ i32, i32, i32, i32, [8 x i32] }> <{ i32 0, i32 0, i32 1, i32 2, [8 x i32] zeroinitializer }>, align 16
@interpret_mb_mode_B.offset2pdir16x8 = internal unnamed_addr constant [22 x [2 x i32]] [[2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] [i32 1, i32 1], [2 x i32] zeroinitializer, [2 x i32] [i32 0, i32 1], [2 x i32] zeroinitializer, [2 x i32] [i32 1, i32 0], [2 x i32] zeroinitializer, [2 x i32] [i32 0, i32 2], [2 x i32] zeroinitializer, [2 x i32] [i32 1, i32 2], [2 x i32] zeroinitializer, [2 x i32] [i32 2, i32 0], [2 x i32] zeroinitializer, [2 x i32] [i32 2, i32 1], [2 x i32] zeroinitializer, [2 x i32] [i32 2, i32 2], [2 x i32] zeroinitializer], align 16
@interpret_mb_mode_B.offset2pdir8x16 = internal unnamed_addr constant [22 x [2 x i32]] [[2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] zeroinitializer, [2 x i32] [i32 1, i32 1], [2 x i32] zeroinitializer, [2 x i32] [i32 0, i32 1], [2 x i32] zeroinitializer, [2 x i32] [i32 1, i32 0], [2 x i32] zeroinitializer, [2 x i32] [i32 0, i32 2], [2 x i32] zeroinitializer, [2 x i32] [i32 1, i32 2], [2 x i32] zeroinitializer, [2 x i32] [i32 2, i32 0], [2 x i32] zeroinitializer, [2 x i32] [i32 2, i32 1], [2 x i32] zeroinitializer, [2 x i32] [i32 2, i32 2]], align 16
@__const.interpret_mb_mode_SI.ICBPTAB = private unnamed_addr constant [6 x i32] [i32 0, i32 16, i32 32, i32 15, i32 31, i32 47], align 16
@SetB8Mode.p_v2b8 = internal unnamed_addr constant [5 x i32] [i32 4, i32 5, i32 6, i32 7, i32 11], align 16
@SetB8Mode.p_v2pd = internal unnamed_addr constant [5 x i32] [i32 0, i32 0, i32 0, i32 0, i32 -1], align 16
@SetB8Mode.b_v2b8 = internal unnamed_addr constant [14 x i32] [i32 0, i32 4, i32 4, i32 4, i32 5, i32 6, i32 5, i32 6, i32 5, i32 6, i32 7, i32 7, i32 7, i32 11], align 16
@SetB8Mode.b_v2pd = internal unnamed_addr constant [14 x i32] [i32 2, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 0, i32 1, i32 2, i32 -1], align 16
@.str.2.169 = private unnamed_addr constant [33 x i8] c"illegal chroma intra pred mode!\0A\00", align 1
@.str.3.170 = private unnamed_addr constant [66 x i8] c"temporal direct error\0Acolocated block has ref that is unavailable\00", align 1
@predict_nnz_chroma.j_off_tab = internal unnamed_addr constant [12 x i32] [i32 0, i32 0, i32 0, i32 0, i32 4, i32 4, i32 4, i32 4, i32 8, i32 8, i32 8, i32 8], align 16
@readCoeff4x4_CAVLC.incVlc = internal unnamed_addr constant [7 x i32] [i32 0, i32 3, i32 6, i32 12, i32 24, i32 48, i32 32768], align 16
@.str.4.168 = private unnamed_addr constant [39 x i8] c"readCoeff4x4_CAVLC: invalid block type\00", align 1
@dequant_coef8 = internal unnamed_addr constant [6 x [8 x [8 x i32]]] [[8 x [8 x i32]] [[8 x i32] [i32 20, i32 19, i32 25, i32 19, i32 20, i32 19, i32 25, i32 19], [8 x i32] [i32 19, i32 18, i32 24, i32 18, i32 19, i32 18, i32 24, i32 18], [8 x i32] [i32 25, i32 24, i32 32, i32 24, i32 25, i32 24, i32 32, i32 24], [8 x i32] [i32 19, i32 18, i32 24, i32 18, i32 19, i32 18, i32 24, i32 18], [8 x i32] [i32 20, i32 19, i32 25, i32 19, i32 20, i32 19, i32 25, i32 19], [8 x i32] [i32 19, i32 18, i32 24, i32 18, i32 19, i32 18, i32 24, i32 18], [8 x i32] [i32 25, i32 24, i32 32, i32 24, i32 25, i32 24, i32 32, i32 24], [8 x i32] [i32 19, i32 18, i32 24, i32 18, i32 19, i32 18, i32 24, i32 18]], [8 x [8 x i32]] [[8 x i32] [i32 22, i32 21, i32 28, i32 21, i32 22, i32 21, i32 28, i32 21], [8 x i32] [i32 21, i32 19, i32 26, i32 19, i32 21, i32 19, i32 26, i32 19], [8 x i32] [i32 28, i32 26, i32 35, i32 26, i32 28, i32 26, i32 35, i32 26], [8 x i32] [i32 21, i32 19, i32 26, i32 19, i32 21, i32 19, i32 26, i32 19], [8 x i32] [i32 22, i32 21, i32 28, i32 21, i32 22, i32 21, i32 28, i32 21], [8 x i32] [i32 21, i32 19, i32 26, i32 19, i32 21, i32 19, i32 26, i32 19], [8 x i32] [i32 28, i32 26, i32 35, i32 26, i32 28, i32 26, i32 35, i32 26], [8 x i32] [i32 21, i32 19, i32 26, i32 19, i32 21, i32 19, i32 26, i32 19]], [8 x [8 x i32]] [[8 x i32] [i32 26, i32 24, i32 33, i32 24, i32 26, i32 24, i32 33, i32 24], [8 x i32] [i32 24, i32 23, i32 31, i32 23, i32 24, i32 23, i32 31, i32 23], [8 x i32] [i32 33, i32 31, i32 42, i32 31, i32 33, i32 31, i32 42, i32 31], [8 x i32] [i32 24, i32 23, i32 31, i32 23, i32 24, i32 23, i32 31, i32 23], [8 x i32] [i32 26, i32 24, i32 33, i32 24, i32 26, i32 24, i32 33, i32 24], [8 x i32] [i32 24, i32 23, i32 31, i32 23, i32 24, i32 23, i32 31, i32 23], [8 x i32] [i32 33, i32 31, i32 42, i32 31, i32 33, i32 31, i32 42, i32 31], [8 x i32] [i32 24, i32 23, i32 31, i32 23, i32 24, i32 23, i32 31, i32 23]], [8 x [8 x i32]] [[8 x i32] [i32 28, i32 26, i32 35, i32 26, i32 28, i32 26, i32 35, i32 26], [8 x i32] [i32 26, i32 25, i32 33, i32 25, i32 26, i32 25, i32 33, i32 25], [8 x i32] [i32 35, i32 33, i32 45, i32 33, i32 35, i32 33, i32 45, i32 33], [8 x i32] [i32 26, i32 25, i32 33, i32 25, i32 26, i32 25, i32 33, i32 25], [8 x i32] [i32 28, i32 26, i32 35, i32 26, i32 28, i32 26, i32 35, i32 26], [8 x i32] [i32 26, i32 25, i32 33, i32 25, i32 26, i32 25, i32 33, i32 25], [8 x i32] [i32 35, i32 33, i32 45, i32 33, i32 35, i32 33, i32 45, i32 33], [8 x i32] [i32 26, i32 25, i32 33, i32 25, i32 26, i32 25, i32 33, i32 25]], [8 x [8 x i32]] [[8 x i32] [i32 32, i32 30, i32 40, i32 30, i32 32, i32 30, i32 40, i32 30], [8 x i32] [i32 30, i32 28, i32 38, i32 28, i32 30, i32 28, i32 38, i32 28], [8 x i32] [i32 40, i32 38, i32 51, i32 38, i32 40, i32 38, i32 51, i32 38], [8 x i32] [i32 30, i32 28, i32 38, i32 28, i32 30, i32 28, i32 38, i32 28], [8 x i32] [i32 32, i32 30, i32 40, i32 30, i32 32, i32 30, i32 40, i32 30], [8 x i32] [i32 30, i32 28, i32 38, i32 28, i32 30, i32 28, i32 38, i32 28], [8 x i32] [i32 40, i32 38, i32 51, i32 38, i32 40, i32 38, i32 51, i32 38], [8 x i32] [i32 30, i32 28, i32 38, i32 28, i32 30, i32 28, i32 38, i32 28]], [8 x [8 x i32]] [[8 x i32] [i32 36, i32 34, i32 46, i32 34, i32 36, i32 34, i32 46, i32 34], [8 x i32] [i32 34, i32 32, i32 43, i32 32, i32 34, i32 32, i32 43, i32 32], [8 x i32] [i32 46, i32 43, i32 58, i32 43, i32 46, i32 43, i32 58, i32 43], [8 x i32] [i32 34, i32 32, i32 43, i32 32, i32 34, i32 32, i32 43, i32 32], [8 x i32] [i32 36, i32 34, i32 46, i32 34, i32 36, i32 34, i32 46, i32 34], [8 x i32] [i32 34, i32 32, i32 43, i32 32, i32 34, i32 32, i32 43, i32 32], [8 x i32] [i32 46, i32 43, i32 58, i32 43, i32 46, i32 43, i32 58, i32 43], [8 x i32] [i32 34, i32 32, i32 43, i32 32, i32 34, i32 32, i32 43, i32 32]]], align 16
@.str.5.163 = private unnamed_addr constant [28 x i8] c"mb_qp_delta is out of range\00", align 1
@cofuv_blk_x = internal unnamed_addr constant [3 x [8 x [4 x i8]]] [[8 x [4 x i8]] [[4 x i8] c"\00\01\00\01", [4 x i8] c"\02\03\02\03", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\01\00\01", [4 x i8] c"\00\01\00\01", [4 x i8] c"\02\03\02\03", [4 x i8] c"\02\03\02\03", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\01\00\01", [4 x i8] c"\02\03\02\03", [4 x i8] c"\00\01\00\01", [4 x i8] c"\02\03\02\03", [4 x i8] c"\00\01\00\01", [4 x i8] c"\02\03\02\03", [4 x i8] c"\00\01\00\01", [4 x i8] c"\02\03\02\03"]], align 16
@cofuv_blk_y = internal unnamed_addr constant [3 x [8 x [4 x i8]]] [[8 x [4 x i8]] [[4 x i8] c"\04\04\05\05", [4 x i8] c"\04\04\05\05", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\04\04\05\05", [4 x i8] c"\06\06\07\07", [4 x i8] c"\04\04\05\05", [4 x i8] c"\06\06\07\07", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\04\04\05\05", [4 x i8] c"\04\04\05\05", [4 x i8] c"\06\06\07\07", [4 x i8] c"\06\06\07\07", [4 x i8] c"\08\08\09\09", [4 x i8] c"\08\08\09\09", [4 x i8] c"\0A\0A\0B\0B", [4 x i8] c"\0A\0A\0B\0B"]], align 16
@cbp_blk_chroma = internal unnamed_addr constant [8 x [4 x i8]] [[4 x i8] c"\10\11\12\13", [4 x i8] c"\14\15\16\17", [4 x i8] c"\18\19\1A\1B", [4 x i8] c"\1C\1D\1E\1F", [4 x i8] c" !\22#", [4 x i8] c"$%&'", [4 x i8] c"()*+", [4 x i8] c",-./"], align 16
@last_dquant = internal global i32 0, align 4
@decode_one_macroblock.decode_block_scan = internal unnamed_addr constant [16 x i8] c"\00\01\04\05\02\03\06\07\08\09\0C\0D\0A\0B\0E\0F", align 16
@str.162 = private unnamed_addr constant [32 x i8] c"Partition Mode is not supported\00", align 1
@switch.table.read_one_macroblock = private unnamed_addr constant [6 x i32] [i32 9, i32 10, i32 9, i32 12, i32 13, i32 14], align 4
@switch.table.readCBPandCoeffsFromNAL = private unnamed_addr constant [5 x ptr] [ptr @linfo_cbp_intra, ptr @linfo_cbp_inter, ptr @linfo_cbp_inter, ptr @linfo_cbp_intra, ptr @linfo_cbp_intra], align 8
@switch.table.readCBPandCoeffsFromNAL.11 = private unnamed_addr constant [6 x i32] [i32 8, i32 8, i32 13, i32 8, i32 8, i32 8], align 4
@switch.table.readCBPandCoeffsFromNAL.13 = private unnamed_addr constant [6 x i32] [i32 10, i32 10, i32 15, i32 10, i32 10, i32 10], align 4
@switch.table.readCBPandCoeffsFromNAL.14 = private unnamed_addr constant [6 x i32] [i32 1, i32 1, i32 0, i32 1, i32 1, i32 1], align 4
@switch.table.readLumaCoeff8x8_CABAC = private unnamed_addr constant [6 x ptr] [ptr @InvLevelScale8x8Luma_Intra, ptr @InvLevelScale8x8Luma_Intra, ptr @InvLevelScale8x8Luma_Inter, ptr @InvLevelScale8x8Luma_Intra, ptr @InvLevelScale8x8Luma_Intra, ptr @InvLevelScale8x8Luma_Intra], align 8
@.str.195 = private unnamed_addr constant [16 x i8] c"undefined level\00", align 1
@.str.1.196 = private unnamed_addr constant [47 x i8] c"max_dec_frame_buffering larger than MaxDpbSize\00", align 1
@dpb = internal global %struct.decoded_picture_buffer zeroinitializer, align 8
@.str.2.238 = private unnamed_addr constant [58 x i8] c"Max. number of reference frames exceeded. Invalid stream.\00", align 1
@.str.3.201 = private unnamed_addr constant [108 x i8] c"DPB size at specified level is smaller than the specified number of reference frames. This is not allowed.\0A\00", align 1
@.str.4.202 = private unnamed_addr constant [18 x i8] c"init_dpb: dpb->fs\00", align 1
@.str.5.203 = private unnamed_addr constant [22 x i8] c"init_dpb: dpb->fs_ref\00", align 1
@.str.6.204 = private unnamed_addr constant [24 x i8] c"init_dpb: dpb->fs_ltref\00", align 1
@listX = internal global [6 x ptr] zeroinitializer, align 16
@.str.7.207 = private unnamed_addr constant [19 x i8] c"init_dpb: listX[i]\00", align 1
@no_reference_picture = internal global ptr null, align 8
@listXsize = internal global [6 x i32] zeroinitializer, align 16
@.str.8.216 = private unnamed_addr constant [21 x i8] c"alloc_frame_store: f\00", align 1
@.str.9.214 = private unnamed_addr constant [26 x i8] c"alloc_storable_picture: s\00", align 1
@.str.10.215 = private unnamed_addr constant [36 x i8] c"alloc_storable_picture: s->mb_field\00", align 1
@.str.11.221 = private unnamed_addr constant [21 x i8] c"init_lists: fs_list0\00", align 1
@.str.12.222 = private unnamed_addr constant [22 x i8] c"init_lists: fs_listlt\00", align 1
@.str.13.225 = private unnamed_addr constant [21 x i8] c"init_lists: fs_list1\00", align 1
@.str.14.230 = private unnamed_addr constant [42 x i8] c"Invalid remapping_of_pic_nums_idc command\00", align 1
@.str.15.240 = private unnamed_addr constant [59 x i8] c"duplicate frame_num in short-term reference picture buffer\00", align 1
@.str.16.248 = private unnamed_addr constant [68 x i8] c"alloc_ref_pic_list_reordering_buffer: reordering_of_pic_nums_idc_l0\00", align 1
@.str.17.249 = private unnamed_addr constant [65 x i8] c"alloc_ref_pic_list_reordering_buffer: abs_diff_pic_num_minus1_l0\00", align 1
@.str.18.250 = private unnamed_addr constant [59 x i8] c"alloc_ref_pic_list_reordering_buffer: long_term_pic_idx_l0\00", align 1
@.str.19.251 = private unnamed_addr constant [68 x i8] c"alloc_ref_pic_list_reordering_buffer: reordering_of_pic_nums_idc_l1\00", align 1
@.str.20.252 = private unnamed_addr constant [65 x i8] c"alloc_ref_pic_list_reordering_buffer: abs_diff_pic_num_minus1_l1\00", align 1
@.str.21.253 = private unnamed_addr constant [59 x i8] c"alloc_ref_pic_list_reordering_buffer: long_term_pic_idx_l1\00", align 1
@.str.22.258 = private unnamed_addr constant [19 x i8] c"alloc_colocated: s\00", align 1
@.str.23.235 = private unnamed_addr constant [69 x i8] c"memory_management_control_operation = 0 not last operation in buffer\00", align 1
@.str.24.239 = private unnamed_addr constant [54 x i8] c"invalid memory_management_control_operation in buffer\00", align 1
@.str.25.236 = private unnamed_addr constant [38 x i8] c"field for long term marking not found\00", align 1
@.str.29.245 = private unnamed_addr constant [42 x i8] c"Cannot determine smallest POC, DPB empty.\00", align 1
@.str.30.244 = private unnamed_addr constant [25 x i8] c"invalid frame store type\00", align 1
@.str.31.241 = private unnamed_addr constant [32 x i8] c"Cannot output frame, DPB empty.\00", align 1
@.str.32.242 = private unnamed_addr constant [31 x i8] c"no frames for output available\00", align 1
@.str.33.243 = private unnamed_addr constant [38 x i8] c"output POC must be in ascending order\00", align 1
@str.237 = private unnamed_addr constant [57 x i8] c"Warning: reference field for long term marking not found\00", align 1
@str.35 = private unnamed_addr constant [66 x i8] c"Warning: assigning long_term_frame_idx different from other field\00", align 1
@str.36 = private unnamed_addr constant [57 x i8] c"Warning: reference frame for long term marking not found\00", align 1
@.str.268 = private unnamed_addr constant [22 x i8] c"get_mem2Dpel: array2D\00", align 1
@.str.1.273 = private unnamed_addr constant [22 x i8] c"get_mem3Dpel: array3D\00", align 1
@.str.2.276 = private unnamed_addr constant [44 x i8] c"free_mem2Dpel: trying to free unused memory\00", align 1
@.str.3.279 = private unnamed_addr constant [44 x i8] c"free_mem3Dpel: trying to free unused memory\00", align 1
@.str.4.282 = private unnamed_addr constant [19 x i8] c"get_mem2D: array2D\00", align 1
@.str.5.285 = private unnamed_addr constant [22 x i8] c"get_mem2Dint: array2D\00", align 1
@.str.6.286 = private unnamed_addr constant [24 x i8] c"get_mem2Dint64: array2D\00", align 1
@.str.7.289 = private unnamed_addr constant [19 x i8] c"get_mem3D: array3D\00", align 1
@.str.8.292 = private unnamed_addr constant [22 x i8] c"get_mem3Dint: array3D\00", align 1
@.str.9.295 = private unnamed_addr constant [24 x i8] c"get_mem3Dint64: array3D\00", align 1
@.str.10.298 = private unnamed_addr constant [22 x i8] c"get_mem4Dint: array4D\00", align 1
@.str.11.301 = private unnamed_addr constant [41 x i8] c"free_mem2D: trying to free unused memory\00", align 1
@.str.12.304 = private unnamed_addr constant [44 x i8] c"free_mem2Dint: trying to free unused memory\00", align 1
@.str.13.305 = private unnamed_addr constant [46 x i8] c"free_mem2Dint64: trying to free unused memory\00", align 1
@.str.14.308 = private unnamed_addr constant [41 x i8] c"free_mem3D: trying to free unused memory\00", align 1
@.str.15.313 = private unnamed_addr constant [46 x i8] c"free_mem3Dint64: trying to free unused memory\00", align 1
@.str.16.316 = private unnamed_addr constant [41 x i8] c"free_mem4D: trying to free unused memory\00", align 1
@.str.17.267 = private unnamed_addr constant [30 x i8] c"Could not allocate memory: %s\00", align 1
@.str.18.319 = private unnamed_addr constant [24 x i8] c"get_mem2Dshort: array2D\00", align 1
@.str.19.320 = private unnamed_addr constant [24 x i8] c"get_mem3Dshort: array3D\00", align 1
@.str.20.323 = private unnamed_addr constant [24 x i8] c"get_mem4Dshort: array4D\00", align 1
@.str.21.326 = private unnamed_addr constant [46 x i8] c"free_mem2Dshort: trying to free unused memory\00", align 1
@.str.22.327 = private unnamed_addr constant [46 x i8] c"free_mem3Dshort: trying to free unused memory\00", align 1
@.str.23.330 = private unnamed_addr constant [46 x i8] c"free_mem4Dshort: trying to free unused memory\00", align 1
@str.333 = private unnamed_addr constant [40 x i8] c" Panic: All zero data sequence in RBSP \00", align 1
@.str.340 = private unnamed_addr constant [13 x i8] c"AllocNALU: n\00", align 1
@.str.1.341 = private unnamed_addr constant [18 x i8] c"AllocNALU: n->buf\00", align 1
@recovery_flag = internal global i32 0, align 4
@__const.write_out_picture.SubWidthC = private unnamed_addr constant [4 x i32] [i32 1, i32 2, i32 2, i32 1], align 16
@__const.write_out_picture.SubHeightC = private unnamed_addr constant [4 x i32] [i32 1, i32 2, i32 1, i32 1], align 16
@.str.1.346 = private unnamed_addr constant [23 x i8] c"write_out_picture: buf\00", align 1
@out_buffer = internal global ptr null, align 8
@non_conforming_stream = internal global i32 0, align 4
@snr = internal global ptr null, align 8
@ZZ_SCAN = internal constant [16 x i8] c"\00\01\04\08\05\02\03\06\09\0C\0D\0A\07\0B\0E\0F", align 16
@ZZ_SCAN8 = internal constant [64 x i8] c"\00\01\08\10\09\02\03\0A\11\18 \19\12\0B\04\05\0C\13\1A!(0)\22\1B\14\0D\06\07\0E\15\1C#*1892+$\1D\16\0F\17\1E%,3:;4-&\1F'.5<=6/7>?", align 16
@.str.355 = private unnamed_addr constant [17 x i8] c"   : delta_sl   \00", align 1
@.str.1.356 = private unnamed_addr constant [17 x i8] c"SPS: profile_idc\00", align 1
@.str.2.357 = private unnamed_addr constant [27 x i8] c"SPS: constrained_set0_flag\00", align 1
@.str.3.358 = private unnamed_addr constant [27 x i8] c"SPS: constrained_set1_flag\00", align 1
@.str.4.359 = private unnamed_addr constant [27 x i8] c"SPS: constrained_set2_flag\00", align 1
@.str.5.360 = private unnamed_addr constant [27 x i8] c"SPS: constrained_set3_flag\00", align 1
@.str.6.361 = private unnamed_addr constant [25 x i8] c"SPS: reserved_zero_4bits\00", align 1
@.str.7.362 = private unnamed_addr constant [15 x i8] c"SPS: level_idc\00", align 1
@.str.8.363 = private unnamed_addr constant [26 x i8] c"SPS: seq_parameter_set_id\00", align 1
@img = internal global ptr null, align 8
@.str.9.364 = private unnamed_addr constant [23 x i8] c"SPS: chroma_format_idc\00", align 1
@.str.10.365 = private unnamed_addr constant [28 x i8] c"SPS: residue_transform_flag\00", align 1
@.str.11.366 = private unnamed_addr constant [79 x i8] c"[Deprecated High444 Profile] residue_transform_flag = 1 is no longer supported\00", align 1
@.str.12.367 = private unnamed_addr constant [27 x i8] c"SPS: bit_depth_luma_minus8\00", align 1
@.str.13.368 = private unnamed_addr constant [29 x i8] c"SPS: bit_depth_chroma_minus8\00", align 1
@.str.14.369 = private unnamed_addr constant [34 x i8] c"SPS: lossless_qpprime_y_zero_flag\00", align 1
@.str.15.370 = private unnamed_addr constant [37 x i8] c"SPS: seq_scaling_matrix_present_flag\00", align 1
@.str.16.371 = private unnamed_addr constant [35 x i8] c"SPS: seq_scaling_list_present_flag\00", align 1
@.str.17.372 = private unnamed_addr constant [31 x i8] c"SPS: log2_max_frame_num_minus4\00", align 1
@.str.18.373 = private unnamed_addr constant [24 x i8] c"SPS: pic_order_cnt_type\00", align 1
@.str.19.374 = private unnamed_addr constant [39 x i8] c"SPS: log2_max_pic_order_cnt_lsb_minus4\00", align 1
@.str.20.375 = private unnamed_addr constant [38 x i8] c"SPS: delta_pic_order_always_zero_flag\00", align 1
@.str.21.376 = private unnamed_addr constant [28 x i8] c"SPS: offset_for_non_ref_pic\00", align 1
@.str.22.377 = private unnamed_addr constant [36 x i8] c"SPS: offset_for_top_to_bottom_field\00", align 1
@.str.23.378 = private unnamed_addr constant [43 x i8] c"SPS: num_ref_frames_in_pic_order_cnt_cycle\00", align 1
@.str.24.379 = private unnamed_addr constant [29 x i8] c"SPS: offset_for_ref_frame[i]\00", align 1
@.str.25.380 = private unnamed_addr constant [20 x i8] c"SPS: num_ref_frames\00", align 1
@.str.26.381 = private unnamed_addr constant [42 x i8] c"SPS: gaps_in_frame_num_value_allowed_flag\00", align 1
@.str.27.382 = private unnamed_addr constant [29 x i8] c"SPS: pic_width_in_mbs_minus1\00", align 1
@.str.28.383 = private unnamed_addr constant [36 x i8] c"SPS: pic_height_in_map_units_minus1\00", align 1
@.str.29.384 = private unnamed_addr constant [25 x i8] c"SPS: frame_mbs_only_flag\00", align 1
@.str.30.385 = private unnamed_addr constant [34 x i8] c"SPS: mb_adaptive_frame_field_flag\00", align 1
@.str.31.386 = private unnamed_addr constant [31 x i8] c"SPS: direct_8x8_inference_flag\00", align 1
@.str.32.387 = private unnamed_addr constant [25 x i8] c"SPS: frame_cropping_flag\00", align 1
@.str.33.388 = private unnamed_addr constant [37 x i8] c"SPS: frame_cropping_rect_left_offset\00", align 1
@.str.34.389 = private unnamed_addr constant [38 x i8] c"SPS: frame_cropping_rect_right_offset\00", align 1
@.str.35.390 = private unnamed_addr constant [36 x i8] c"SPS: frame_cropping_rect_top_offset\00", align 1
@.str.36.391 = private unnamed_addr constant [39 x i8] c"SPS: frame_cropping_rect_bottom_offset\00", align 1
@.str.37.392 = private unnamed_addr constant [33 x i8] c"SPS: vui_parameters_present_flag\00", align 1
@.str.38.393 = private unnamed_addr constant [36 x i8] c"VUI: aspect_ratio_info_present_flag\00", align 1
@.str.39.394 = private unnamed_addr constant [22 x i8] c"VUI: aspect_ratio_idc\00", align 1
@.str.40.395 = private unnamed_addr constant [15 x i8] c"VUI: sar_width\00", align 1
@.str.41.396 = private unnamed_addr constant [16 x i8] c"VUI: sar_height\00", align 1
@.str.42.397 = private unnamed_addr constant [32 x i8] c"VUI: overscan_info_present_flag\00", align 1
@.str.43.398 = private unnamed_addr constant [31 x i8] c"VUI: overscan_appropriate_flag\00", align 1
@.str.44.399 = private unnamed_addr constant [36 x i8] c"VUI: video_signal_type_present_flag\00", align 1
@.str.45.400 = private unnamed_addr constant [18 x i8] c"VUI: video_format\00", align 1
@.str.46 = private unnamed_addr constant [27 x i8] c"VUI: video_full_range_flag\00", align 1
@.str.47.401 = private unnamed_addr constant [36 x i8] c"VUI: color_description_present_flag\00", align 1
@.str.48.402 = private unnamed_addr constant [22 x i8] c"VUI: colour_primaries\00", align 1
@.str.49.403 = private unnamed_addr constant [30 x i8] c"VUI: transfer_characteristics\00", align 1
@.str.50.404 = private unnamed_addr constant [25 x i8] c"VUI: matrix_coefficients\00", align 1
@.str.51.405 = private unnamed_addr constant [34 x i8] c"VUI: chroma_loc_info_present_flag\00", align 1
@.str.52.406 = private unnamed_addr constant [38 x i8] c"VUI: chroma_sample_loc_type_top_field\00", align 1
@.str.53.407 = private unnamed_addr constant [41 x i8] c"VUI: chroma_sample_loc_type_bottom_field\00", align 1
@.str.54.408 = private unnamed_addr constant [30 x i8] c"VUI: timing_info_present_flag\00", align 1
@.str.55.409 = private unnamed_addr constant [23 x i8] c"VUI: num_units_in_tick\00", align 1
@.str.56.410 = private unnamed_addr constant [16 x i8] c"VUI: time_scale\00", align 1
@.str.57.411 = private unnamed_addr constant [27 x i8] c"VUI: fixed_frame_rate_flag\00", align 1
@.str.58.412 = private unnamed_addr constant [37 x i8] c"VUI: nal_hrd_parameters_present_flag\00", align 1
@.str.59.413 = private unnamed_addr constant [37 x i8] c"VUI: vcl_hrd_parameters_present_flag\00", align 1
@.str.60.414 = private unnamed_addr constant [24 x i8] c"VUI: low_delay_hrd_flag\00", align 1
@.str.61.415 = private unnamed_addr constant [32 x i8] c"VUI: pic_struct_present_flag   \00", align 1
@.str.62.416 = private unnamed_addr constant [32 x i8] c"VUI: bitstream_restriction_flag\00", align 1
@.str.63.417 = private unnamed_addr constant [45 x i8] c"VUI: motion_vectors_over_pic_boundaries_flag\00", align 1
@.str.64.418 = private unnamed_addr constant [29 x i8] c"VUI: max_bytes_per_pic_denom\00", align 1
@.str.65.419 = private unnamed_addr constant [27 x i8] c"VUI: max_bits_per_mb_denom\00", align 1
@.str.66.420 = private unnamed_addr constant [35 x i8] c"VUI: log2_max_mv_length_horizontal\00", align 1
@.str.67.421 = private unnamed_addr constant [33 x i8] c"VUI: log2_max_mv_length_vertical\00", align 1
@.str.68.422 = private unnamed_addr constant [24 x i8] c"VUI: num_reorder_frames\00", align 1
@.str.69.423 = private unnamed_addr constant [29 x i8] c"VUI: max_dec_frame_buffering\00", align 1
@.str.70.424 = private unnamed_addr constant [20 x i8] c"VUI: cpb_cnt_minus1\00", align 1
@.str.71.425 = private unnamed_addr constant [20 x i8] c"VUI: bit_rate_scale\00", align 1
@.str.72.426 = private unnamed_addr constant [20 x i8] c"VUI: cpb_size_scale\00", align 1
@.str.73.427 = private unnamed_addr constant [27 x i8] c"VUI: bit_rate_value_minus1\00", align 1
@.str.74.428 = private unnamed_addr constant [27 x i8] c"VUI: cpb_size_value_minus1\00", align 1
@.str.75.429 = private unnamed_addr constant [14 x i8] c"VUI: cbr_flag\00", align 1
@.str.76.430 = private unnamed_addr constant [45 x i8] c"VUI: initial_cpb_removal_delay_length_minus1\00", align 1
@.str.77.431 = private unnamed_addr constant [37 x i8] c"VUI: cpb_removal_delay_length_minus1\00", align 1
@.str.78.432 = private unnamed_addr constant [36 x i8] c"VUI: dpb_output_delay_length_minus1\00", align 1
@.str.79.433 = private unnamed_addr constant [24 x i8] c"VUI: time_offset_length\00", align 1
@.str.80.434 = private unnamed_addr constant [26 x i8] c"PPS: pic_parameter_set_id\00", align 1
@.str.81 = private unnamed_addr constant [26 x i8] c"PPS: seq_parameter_set_id\00", align 1
@.str.82 = private unnamed_addr constant [30 x i8] c"PPS: entropy_coding_mode_flag\00", align 1
@.str.83 = private unnamed_addr constant [28 x i8] c"PPS: pic_order_present_flag\00", align 1
@.str.84 = private unnamed_addr constant [29 x i8] c"PPS: num_slice_groups_minus1\00", align 1
@.str.85 = private unnamed_addr constant [26 x i8] c"PPS: slice_group_map_type\00", align 1
@.str.86 = private unnamed_addr constant [27 x i8] c"PPS: run_length_minus1 [i]\00", align 1
@.str.87 = private unnamed_addr constant [18 x i8] c"PPS: top_left [i]\00", align 1
@.str.88 = private unnamed_addr constant [22 x i8] c"PPS: bottom_right [i]\00", align 1
@.str.89 = private unnamed_addr constant [39 x i8] c"PPS: slice_group_change_direction_flag\00", align 1
@.str.90 = private unnamed_addr constant [36 x i8] c"PPS: slice_group_change_rate_minus1\00", align 1
@.str.91 = private unnamed_addr constant [38 x i8] c"PPS: num_slice_group_map_units_minus1\00", align 1
@.str.92 = private unnamed_addr constant [18 x i8] c"slice_group_id[i]\00", align 1
@.str.93 = private unnamed_addr constant [34 x i8] c"PPS: num_ref_idx_l0_active_minus1\00", align 1
@.str.94 = private unnamed_addr constant [34 x i8] c"PPS: num_ref_idx_l1_active_minus1\00", align 1
@.str.95.435 = private unnamed_addr constant [24 x i8] c"PPS: weighted_pred_flag\00", align 1
@.str.96 = private unnamed_addr constant [25 x i8] c"PPS: weighted_bipred_idc\00", align 1
@.str.97 = private unnamed_addr constant [25 x i8] c"PPS: pic_init_qp_minus26\00", align 1
@.str.98 = private unnamed_addr constant [25 x i8] c"PPS: pic_init_qs_minus26\00", align 1
@.str.99 = private unnamed_addr constant [28 x i8] c"PPS: chroma_qp_index_offset\00", align 1
@.str.100 = private unnamed_addr constant [44 x i8] c"PPS: deblocking_filter_control_present_flag\00", align 1
@.str.101 = private unnamed_addr constant [33 x i8] c"PPS: constrained_intra_pred_flag\00", align 1
@.str.102 = private unnamed_addr constant [36 x i8] c"PPS: redundant_pic_cnt_present_flag\00", align 1
@.str.103 = private unnamed_addr constant [29 x i8] c"PPS: transform_8x8_mode_flag\00", align 1
@.str.104 = private unnamed_addr constant [37 x i8] c"PPS: pic_scaling_matrix_present_flag\00", align 1
@.str.105 = private unnamed_addr constant [35 x i8] c"PPS: pic_scaling_list_present_flag\00", align 1
@.str.106 = private unnamed_addr constant [35 x i8] c"PPS: second_chroma_qp_index_offset\00", align 1
@PicParSet = internal global [256 x %struct.pic_parameter_set_rbsp_t] zeroinitializer, align 16
@Co_located = internal global ptr null, align 8
@.str.109 = private unnamed_addr constant [101 x i8] c"Trying to use an invalid (uninitialized) Picture Parameter Set with ID %d, expect the unexpected...\0A\00", align 1
@.str.110 = private unnamed_addr constant [112 x i8] c"PicParset %d references an invalid (uninitialized) Sequence Parameter Set with ID %d, expect the unexpected...\0A\00", align 1
@.str.111 = private unnamed_addr constant [38 x i8] c"invalid sps->pic_order_cnt_type = %d\0A\00", align 1
@.str.112 = private unnamed_addr constant [24 x i8] c"pic_order_cnt_type != 1\00", align 1
@.str.113 = private unnamed_addr constant [48 x i8] c"num_ref_frames_in_pic_order_cnt_cycle too large\00", align 1
@last_out_fs = internal global ptr null, align 8
@pocs_in_dpb = internal global [100 x i32] zeroinitializer, align 16
@.str.446 = private unnamed_addr constant [14 x i8] c"AllocPPS: PPS\00", align 1
@.str.1.447 = private unnamed_addr constant [25 x i8] c"AllocPPS: slice_group_id\00", align 1
@.str.2.450 = private unnamed_addr constant [14 x i8] c"AllocSPS: SPS\00", align 1
@.str.461 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@bits = internal global ptr null, align 8
@.str.1.462 = private unnamed_addr constant [26 x i8] c"Cannot open RTP file '%s'\00", align 1
@input = internal global ptr null, align 8
@.str.2.465 = private unnamed_addr constant [13 x i8] c"GetRTPNALU-1\00", align 1
@.str.3.466 = private unnamed_addr constant [13 x i8] c"GetRTPNALU-2\00", align 1
@.str.4.467 = private unnamed_addr constant [13 x i8] c"GetRTPNALU-3\00", align 1
@.str.6.470 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.7.471 = private unnamed_addr constant [17 x i8] c"Version (V): %d\0A\00", align 1
@.str.8.472 = private unnamed_addr constant [17 x i8] c"Padding (P): %d\0A\00", align 1
@.str.9.473 = private unnamed_addr constant [19 x i8] c"Extension (X): %d\0A\00", align 1
@.str.10.474 = private unnamed_addr constant [21 x i8] c"CSRC count (CC): %d\0A\00", align 1
@.str.11.475 = private unnamed_addr constant [20 x i8] c"Marker bit (M): %d\0A\00", align 1
@.str.12.476 = private unnamed_addr constant [23 x i8] c"Payload Type (PT): %d\0A\00", align 1
@.str.13.477 = private unnamed_addr constant [21 x i8] c"Sequence Number: %d\0A\00", align 1
@.str.14.478 = private unnamed_addr constant [15 x i8] c"Timestamp: %d\0A\00", align 1
@.str.15.479 = private unnamed_addr constant [10 x i8] c"SSRC: %d\0A\00", align 1
@.str.17.468 = private unnamed_addr constant [57 x i8] c"RTPReadPacket: File corruption, could not read %d bytes\0A\00", align 1
@str.469 = private unnamed_addr constant [43 x i8] c"Errors reported by DecomposePacket(), exit\00", align 1
@str.19 = private unnamed_addr constant [63 x i8] c"RTPReadPacket: File corruption, could not read Timestamp, exit\00", align 1
@str.20 = private unnamed_addr constant [67 x i8] c"DecomposeRTPpacket, RTP header consistency problem, header follows\00", align 1
@.str.536 = private unnamed_addr constant [22 x i8] c"SEI: target_frame_num\00", align 1
@.str.1.537 = private unnamed_addr constant [27 x i8] c"SEI: num_spare_pics_minus1\00", align 1
@.str.2.538 = private unnamed_addr constant [27 x i8] c"SEI: delta_spare_frame_num\00", align 1
@.str.3.539 = private unnamed_addr constant [24 x i8] c"SEI: ref_area_indicator\00", align 1
@.str.4.540 = private unnamed_addr constant [22 x i8] c"SEI: ref_mb_indicator\00", align 1
@.str.5.541 = private unnamed_addr constant [21 x i8] c"SEI: zero_run_length\00", align 1
@.str.6.542 = private unnamed_addr constant [30 x i8] c"Wrong ref_area_indicator %d!\0A\00", align 1
@.str.7.517 = private unnamed_addr constant [23 x i8] c"SEI: sub_seq_layer_num\00", align 1
@.str.8.518 = private unnamed_addr constant [16 x i8] c"SEI: sub_seq_id\00", align 1
@.str.9.529 = private unnamed_addr constant [24 x i8] c"SEI: first_ref_pic_flag\00", align 1
@.str.10.530 = private unnamed_addr constant [30 x i8] c"SEI: leading_non_ref_pic_flag\00", align 1
@.str.11.531 = private unnamed_addr constant [19 x i8] c"SEI: last_pic_flag\00", align 1
@.str.12.532 = private unnamed_addr constant [28 x i8] c"SEI: sub_seq_frame_num_flag\00", align 1
@.str.13.533 = private unnamed_addr constant [23 x i8] c"SEI: sub_seq_frame_num\00", align 1
@.str.14.528 = private unnamed_addr constant [27 x i8] c"SEI: num_sub_layers_minus1\00", align 1
@.str.15.521 = private unnamed_addr constant [30 x i8] c"SEI: accurate_statistics_flag\00", align 1
@.str.16.522 = private unnamed_addr constant [22 x i8] c"SEI: average_bit_rate\00", align 1
@.str.17.523 = private unnamed_addr constant [24 x i8] c"SEI: average_frame_rate\00", align 1
@.str.18.519 = private unnamed_addr constant [19 x i8] c"SEI: duration_flag\00", align 1
@.str.19.520 = private unnamed_addr constant [23 x i8] c"SEI: average_rate_flag\00", align 1
@.str.20.524 = private unnamed_addr constant [28 x i8] c"SEI: num_referenced_subseqs\00", align 1
@.str.21.525 = private unnamed_addr constant [27 x i8] c"SEI: ref_sub_seq_layer_num\00", align 1
@.str.22.526 = private unnamed_addr constant [20 x i8] c"SEI: ref_sub_seq_id\00", align 1
@.str.23.527 = private unnamed_addr constant [27 x i8] c"SEI: ref_sub_seq_direction\00", align 1
@.str.24.534 = private unnamed_addr constant [14 x i8] c"SEI: scene_id\00", align 1
@.str.25.535 = private unnamed_addr constant [27 x i8] c"SEI: scene_transition_type\00", align 1
@.str.26.514 = private unnamed_addr constant [22 x i8] c"SEI: pan_scan_rect_id\00", align 1
@.str.27.548 = private unnamed_addr constant [31 x i8] c"SEI: pan_scan_rect_cancel_flag\00", align 1
@.str.28.549 = private unnamed_addr constant [25 x i8] c"SEI: pan_scan_cnt_minus1\00", align 1
@.str.29.550 = private unnamed_addr constant [31 x i8] c"SEI: pan_scan_rect_left_offset\00", align 1
@.str.30.551 = private unnamed_addr constant [32 x i8] c"SEI: pan_scan_rect_right_offset\00", align 1
@.str.31.552 = private unnamed_addr constant [30 x i8] c"SEI: pan_scan_rect_top_offset\00", align 1
@.str.32.553 = private unnamed_addr constant [33 x i8] c"SEI: pan_scan_rect_bottom_offset\00", align 1
@.str.33.554 = private unnamed_addr constant [37 x i8] c"SEI: pan_scan_rect_repetition_period\00", align 1
@.str.34.545 = private unnamed_addr constant [24 x i8] c"SEI: recovery_frame_cnt\00", align 1
@.str.35.512 = private unnamed_addr constant [22 x i8] c"SEI: exact_match_flag\00", align 1
@.str.36.546 = private unnamed_addr constant [22 x i8] c"SEI: broken_link_flag\00", align 1
@.str.37.547 = private unnamed_addr constant [30 x i8] c"SEI: changing_slice_group_idc\00", align 1
@.str.38.543 = private unnamed_addr constant [23 x i8] c"SEI: original_idr_flag\00", align 1
@.str.39.544 = private unnamed_addr constant [24 x i8] c"SEI: original_frame_num\00", align 1
@.str.40.516 = private unnamed_addr constant [17 x i8] c"SEI: snapshot_id\00", align 1
@.str.41.515 = private unnamed_addr constant [31 x i8] c"SEI: progressive_refinement_id\00", align 1
@.str.43.510 = private unnamed_addr constant [29 x i8] c"SEI: num_slice_groups_minus1\00", align 1
@.str.44.511 = private unnamed_addr constant [20 x i8] c"SEI: slice_group_id\00", align 1
@.str.45.513 = private unnamed_addr constant [24 x i8] c"SEI: pan_scan_rect_flag\00", align 1
@.str.46.492 = private unnamed_addr constant [44 x i8] c"SEI: film_grain_characteristics_cancel_flag\00", align 1
@.str.47.493 = private unnamed_addr constant [14 x i8] c"SEI: model_id\00", align 1
@.str.48.494 = private unnamed_addr constant [46 x i8] c"SEI: separate_colour_description_present_flag\00", align 1
@.str.49.495 = private unnamed_addr constant [38 x i8] c"SEI: film_grain_bit_depth_luma_minus8\00", align 1
@.str.50.496 = private unnamed_addr constant [40 x i8] c"SEI: film_grain_bit_depth_chroma_minus8\00", align 1
@.str.51.497 = private unnamed_addr constant [32 x i8] c"SEI: film_grain_full_range_flag\00", align 1
@.str.52.498 = private unnamed_addr constant [33 x i8] c"SEI: film_grain_colour_primaries\00", align 1
@.str.53.499 = private unnamed_addr constant [41 x i8] c"SEI: film_grain_transfer_characteristics\00", align 1
@.str.54.500 = private unnamed_addr constant [36 x i8] c"SEI: film_grain_matrix_coefficients\00", align 1
@.str.55.501 = private unnamed_addr constant [22 x i8] c"SEI: blending_mode_id\00", align 1
@.str.56.502 = private unnamed_addr constant [23 x i8] c"SEI: log2_scale_factor\00", align 1
@.str.57.503 = private unnamed_addr constant [29 x i8] c"SEI: comp_model_present_flag\00", align 1
@.str.58.504 = private unnamed_addr constant [36 x i8] c"SEI: num_intensity_intervals_minus1\00", align 1
@.str.59.505 = private unnamed_addr constant [29 x i8] c"SEI: num_model_values_minus1\00", align 1
@.str.60.506 = private unnamed_addr constant [36 x i8] c"SEI: intensity_interval_lower_bound\00", align 1
@.str.61.507 = private unnamed_addr constant [36 x i8] c"SEI: intensity_interval_upper_bound\00", align 1
@.str.62.508 = private unnamed_addr constant [22 x i8] c"SEI: comp_model_value\00", align 1
@.str.63.509 = private unnamed_addr constant [50 x i8] c"SEI: film_grain_characteristics_repetition_period\00", align 1
@.str.64.488 = private unnamed_addr constant [47 x i8] c"SEI: deblocking_display_preference_cancel_flag\00", align 1
@.str.65.489 = private unnamed_addr constant [48 x i8] c"SEI: display_prior_to_deblocking_preferred_flag\00", align 1
@.str.66.490 = private unnamed_addr constant [41 x i8] c"SEI: dec_frame_buffering_constraint_flag\00", align 1
@.str.67.491 = private unnamed_addr constant [53 x i8] c"SEI: deblocking_display_preference_repetition_period\00", align 1
@.str.68.482 = private unnamed_addr constant [23 x i8] c"SEI: field_views_flags\00", align 1
@.str.69.485 = private unnamed_addr constant [33 x i8] c"SEI: top_field_is_left_view_flag\00", align 1
@.str.70.483 = private unnamed_addr constant [37 x i8] c"SEI: current_frame_is_left_view_flag\00", align 1
@.str.71.484 = private unnamed_addr constant [36 x i8] c"SEI: next_frame_is_second_view_flag\00", align 1
@.str.72.486 = private unnamed_addr constant [35 x i8] c"SEI: left_view_self_contained_flag\00", align 1
@.str.73.487 = private unnamed_addr constant [36 x i8] c"SEI: right_view_self_contained_flag\00", align 1
@.str.74.575 = private unnamed_addr constant [26 x i8] c"SEI: seq_parameter_set_id\00", align 1
@SeqParSet = internal global [32 x %struct.seq_parameter_set_rbsp_t] zeroinitializer, align 16
@.str.75.576 = private unnamed_addr constant [31 x i8] c"SEI: initial_cpb_removal_delay\00", align 1
@.str.76.577 = private unnamed_addr constant [38 x i8] c"SEI: initial_cpb_removal_delay_offset\00", align 1
@stderr = external local_unnamed_addr global ptr, align 8
@.str.77.555 = private unnamed_addr constant [53 x i8] c"Warning: no active SPS, timing SEI cannot be parsed\0A\00", align 1
@.str.78.556 = private unnamed_addr constant [23 x i8] c"SEI: cpb_removal_delay\00", align 1
@.str.79.557 = private unnamed_addr constant [22 x i8] c"SEI: dpb_output_delay\00", align 1
@.str.80.558 = private unnamed_addr constant [16 x i8] c"SEI: pic_struct\00", align 1
@.str.81.559 = private unnamed_addr constant [61 x i8] c"reserved picture_structure used (can't determine NumClockTs)\00", align 1
@.str.82.560 = private unnamed_addr constant [27 x i8] c"SEI: clock_time_stamp_flag\00", align 1
@.str.83.561 = private unnamed_addr constant [13 x i8] c"SEI: ct_type\00", align 1
@.str.84.562 = private unnamed_addr constant [27 x i8] c"SEI: nuit_field_based_flag\00", align 1
@.str.85.563 = private unnamed_addr constant [19 x i8] c"SEI: counting_type\00", align 1
@.str.86.564 = private unnamed_addr constant [25 x i8] c"SEI: full_timestamp_flag\00", align 1
@.str.87.565 = private unnamed_addr constant [24 x i8] c"SEI: discontinuity_flag\00", align 1
@.str.88.566 = private unnamed_addr constant [22 x i8] c"SEI: cnt_dropped_flag\00", align 1
@.str.89.567 = private unnamed_addr constant [13 x i8] c"SEI: nframes\00", align 1
@.str.90.568 = private unnamed_addr constant [19 x i8] c"SEI: seconds_value\00", align 1
@.str.91.569 = private unnamed_addr constant [19 x i8] c"SEI: minutes_value\00", align 1
@.str.92.573 = private unnamed_addr constant [17 x i8] c"SEI: hours_value\00", align 1
@.str.93.570 = private unnamed_addr constant [18 x i8] c"SEI: seconds_flag\00", align 1
@.str.94.571 = private unnamed_addr constant [18 x i8] c"SEI: minutes_flag\00", align 1
@.str.95.572 = private unnamed_addr constant [16 x i8] c"SEI: hours_flag\00", align 1
@.str.96.574 = private unnamed_addr constant [17 x i8] c"SEI: time_offset\00", align 1
@switch.table.interpret_picture_timing_info = private unnamed_addr constant [9 x i32] [i32 1, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 2, i32 3], align 4
@dec_picture = internal global ptr null, align 8
@getNeighbour = internal global ptr null, align 8
@.str.580 = private unnamed_addr constant [66 x i8] c"warning: Intra_8x8_Vertical prediction mode not allowed at mb %d\0A\00", align 1
@.str.1.581 = private unnamed_addr constant [68 x i8] c"warning: Intra_8x8_Horizontal prediction mode not allowed at mb %d\0A\00", align 1
@.str.2.582 = private unnamed_addr constant [76 x i8] c"warning: Intra_8x8_Diagonal_Down_Left prediction mode not allowed at mb %d\0A\00", align 1
@.str.3.583 = private unnamed_addr constant [71 x i8] c"warning: Intra_4x4_Vertical_Left prediction mode not allowed at mb %d\0A\00", align 1
@.str.4.584 = private unnamed_addr constant [77 x i8] c"warning: Intra_8x8_Diagonal_Down_Right prediction mode not allowed at mb %d\0A\00", align 1
@.str.5.585 = private unnamed_addr constant [72 x i8] c"warning: Intra_8x8_Vertical_Right prediction mode not allowed at mb %d\0A\00", align 1
@.str.6.586 = private unnamed_addr constant [73 x i8] c"warning: Intra_8x8_Horizontal_Down prediction mode not allowed at mb %d\0A\00", align 1
@.str.7.587 = private unnamed_addr constant [71 x i8] c"warning: Intra_8x8_Horizontal_Up prediction mode not allowed at mb %d\0A\00", align 1
@.str.8.588 = private unnamed_addr constant [46 x i8] c"Error: illegal intra_4x4 prediction mode: %d\0A\00", align 1
@get_mb_block_pos = internal global ptr null, align 8
@NTAB1 = internal constant [4 x [8 x [2 x i8]]] [[8 x [2 x i8]] [[2 x i8] c"\01\00", [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer], [8 x [2 x i8]] [[2 x i8] c"\01\01", [2 x i8] c"\01\02", [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer], [8 x [2 x i8]] [[2 x i8] c"\02\00", [2 x i8] c"\01\03", [2 x i8] c"\01\04", [2 x i8] c"\01\05", [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer, [2 x i8] zeroinitializer], [8 x [2 x i8]] [[2 x i8] c"\03\00", [2 x i8] c"\02\01", [2 x i8] c"\02\02", [2 x i8] c"\01\06", [2 x i8] c"\01\07", [2 x i8] c"\01\08", [2 x i8] c"\01\09", [2 x i8] c"\04\00"]], align 16
@LEVRUN1 = internal constant [16 x i8] c"\04\02\02\01\01\01\01\01\01\01\00\00\00\00\00\00", align 16
@LEVRUN3 = internal constant [4 x i8] c"\02\01\00\00", align 1
@NTAB3 = internal constant [2 x [2 x [2 x i8]]] [[2 x [2 x i8]] [[2 x i8] c"\01\00", [2 x i8] zeroinitializer], [2 x [2 x i8]] [[2 x i8] c"\02\00", [2 x i8] c"\01\01"]], align 1
@UsedBits = internal global i32 0, align 4
@NCBP = internal constant <{ <{ [16 x [2 x i8]], [32 x [2 x i8]] }>, [48 x [2 x i8]] }> <{ <{ [16 x [2 x i8]], [32 x [2 x i8]] }> <{ [16 x [2 x i8]] [[2 x i8] c"\0F\00", [2 x i8] c"\00\01", [2 x i8] c"\07\02", [2 x i8] c"\0B\04", [2 x i8] c"\0D\08", [2 x i8] c"\0E\03", [2 x i8] c"\03\05", [2 x i8] c"\05\0A", [2 x i8] c"\0A\0C", [2 x i8] c"\0C\0F", [2 x i8] c"\01\07", [2 x i8] c"\02\0B", [2 x i8] c"\04\0D", [2 x i8] c"\08\0E", [2 x i8] c"\06\06", [2 x i8] c"\09\09"], [32 x [2 x i8]] zeroinitializer }>, [48 x [2 x i8]] [[2 x i8] c"/\00", [2 x i8] c"\1F\10", [2 x i8] c"\0F\01", [2 x i8] c"\00\02", [2 x i8] c"\17\04", [2 x i8] c"\1B\08", [2 x i8] c"\1D ", [2 x i8] c"\1E\03", [2 x i8] c"\07\05", [2 x i8] c"\0B\0A", [2 x i8] c"\0D\0C", [2 x i8] c"\0E\0F", [2 x i8] c"'/", [2 x i8] c"+\07", [2 x i8] c"-\0B", [2 x i8] c".\0D", [2 x i8] c"\10\0E", [2 x i8] c"\03\06", [2 x i8] c"\05\09", [2 x i8] c"\0A\1F", [2 x i8] c"\0C#", [2 x i8] c"\13%", [2 x i8] c"\15*", [2 x i8] c"\1A,", [2 x i8] c"\1C!", [2 x i8] c"#\22", [2 x i8] c"%$", [2 x i8] c"*(", [2 x i8] c",'", [2 x i8] c"\01+", [2 x i8] c"\02-", [2 x i8] c"\04.", [2 x i8] c"\08\11", [2 x i8] c"\11\12", [2 x i8] c"\12\14", [2 x i8] c"\14\18", [2 x i8] c"\18\13", [2 x i8] c"\06\15", [2 x i8] c"\09\1A", [2 x i8] c"\16\1C", [2 x i8] c"\19\17", [2 x i8] c" \1B", [2 x i8] c"!\1D", [2 x i8] c"\22\1E", [2 x i8] c"$\16", [2 x i8] c"(\19", [2 x i8] c"&&", [2 x i8] c"))"] }>, align 16
@active_sps = internal global ptr null, align 8
@assignSE2partition = internal global [2 x [20 x i32]] [[20 x i32] zeroinitializer, [20 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 0, i32 2, i32 2, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0]], align 16
@readSyntaxElement_NumCoeffTrailingOnes.lentab = internal constant [3 x [4 x [17 x i32]]] [[4 x [17 x i32]] [[17 x i32] [i32 1, i32 6, i32 8, i32 9, i32 10, i32 11, i32 13, i32 13, i32 13, i32 14, i32 14, i32 15, i32 15, i32 16, i32 16, i32 16, i32 16], [17 x i32] [i32 0, i32 2, i32 6, i32 8, i32 9, i32 10, i32 11, i32 13, i32 13, i32 14, i32 14, i32 15, i32 15, i32 15, i32 16, i32 16, i32 16], [17 x i32] [i32 0, i32 0, i32 3, i32 7, i32 8, i32 9, i32 10, i32 11, i32 13, i32 13, i32 14, i32 14, i32 15, i32 15, i32 16, i32 16, i32 16], [17 x i32] [i32 0, i32 0, i32 0, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 13, i32 14, i32 14, i32 15, i32 15, i32 16, i32 16]], [4 x [17 x i32]] [[17 x i32] [i32 2, i32 6, i32 6, i32 7, i32 8, i32 8, i32 9, i32 11, i32 11, i32 12, i32 12, i32 12, i32 13, i32 13, i32 13, i32 14, i32 14], [17 x i32] [i32 0, i32 2, i32 5, i32 6, i32 6, i32 7, i32 8, i32 9, i32 11, i32 11, i32 12, i32 12, i32 13, i32 13, i32 14, i32 14, i32 14], [17 x i32] [i32 0, i32 0, i32 3, i32 6, i32 6, i32 7, i32 8, i32 9, i32 11, i32 11, i32 12, i32 12, i32 13, i32 13, i32 13, i32 14, i32 14], [17 x i32] [i32 0, i32 0, i32 0, i32 4, i32 4, i32 5, i32 6, i32 6, i32 7, i32 9, i32 11, i32 11, i32 12, i32 13, i32 13, i32 13, i32 14]], [4 x [17 x i32]] [[17 x i32] [i32 4, i32 6, i32 6, i32 6, i32 7, i32 7, i32 7, i32 7, i32 8, i32 8, i32 9, i32 9, i32 9, i32 10, i32 10, i32 10, i32 10], [17 x i32] [i32 0, i32 4, i32 5, i32 5, i32 5, i32 5, i32 6, i32 6, i32 7, i32 8, i32 8, i32 9, i32 9, i32 9, i32 10, i32 10, i32 10], [17 x i32] [i32 0, i32 0, i32 4, i32 5, i32 5, i32 5, i32 6, i32 6, i32 7, i32 7, i32 8, i32 8, i32 9, i32 9, i32 10, i32 10, i32 10], [17 x i32] [i32 0, i32 0, i32 0, i32 4, i32 4, i32 4, i32 4, i32 4, i32 5, i32 6, i32 7, i32 8, i32 8, i32 9, i32 10, i32 10, i32 10]]], align 16
@readSyntaxElement_NumCoeffTrailingOnes.codtab = internal constant [3 x [4 x [17 x i32]]] [[4 x [17 x i32]] [[17 x i32] [i32 1, i32 5, i32 7, i32 7, i32 7, i32 7, i32 15, i32 11, i32 8, i32 15, i32 11, i32 15, i32 11, i32 15, i32 11, i32 7, i32 4], [17 x i32] [i32 0, i32 1, i32 4, i32 6, i32 6, i32 6, i32 6, i32 14, i32 10, i32 14, i32 10, i32 14, i32 10, i32 1, i32 14, i32 10, i32 6], [17 x i32] [i32 0, i32 0, i32 1, i32 5, i32 5, i32 5, i32 5, i32 5, i32 13, i32 9, i32 13, i32 9, i32 13, i32 9, i32 13, i32 9, i32 5], [17 x i32] [i32 0, i32 0, i32 0, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 4, i32 12, i32 12, i32 8, i32 12, i32 8, i32 12, i32 8]], [4 x [17 x i32]] [[17 x i32] [i32 3, i32 11, i32 7, i32 7, i32 7, i32 4, i32 7, i32 15, i32 11, i32 15, i32 11, i32 8, i32 15, i32 11, i32 7, i32 9, i32 7], [17 x i32] [i32 0, i32 2, i32 7, i32 10, i32 6, i32 6, i32 6, i32 6, i32 14, i32 10, i32 14, i32 10, i32 14, i32 10, i32 11, i32 8, i32 6], [17 x i32] [i32 0, i32 0, i32 3, i32 9, i32 5, i32 5, i32 5, i32 5, i32 13, i32 9, i32 13, i32 9, i32 13, i32 9, i32 6, i32 10, i32 5], [17 x i32] [i32 0, i32 0, i32 0, i32 5, i32 4, i32 6, i32 8, i32 4, i32 4, i32 4, i32 12, i32 8, i32 12, i32 12, i32 8, i32 1, i32 4]], [4 x [17 x i32]] [[17 x i32] [i32 15, i32 15, i32 11, i32 8, i32 15, i32 11, i32 9, i32 8, i32 15, i32 11, i32 15, i32 11, i32 8, i32 13, i32 9, i32 5, i32 1], [17 x i32] [i32 0, i32 14, i32 15, i32 12, i32 10, i32 8, i32 14, i32 10, i32 14, i32 14, i32 10, i32 14, i32 10, i32 7, i32 12, i32 8, i32 4], [17 x i32] [i32 0, i32 0, i32 13, i32 14, i32 11, i32 9, i32 13, i32 9, i32 13, i32 10, i32 13, i32 9, i32 13, i32 9, i32 11, i32 7, i32 3], [17 x i32] [i32 0, i32 0, i32 0, i32 12, i32 11, i32 10, i32 9, i32 8, i32 13, i32 12, i32 12, i32 12, i32 8, i32 12, i32 10, i32 6, i32 2]]], align 16
@readSyntaxElement_NumCoeffTrailingOnesChromaDC.lentab = internal constant <{ [4 x <{ i32, i32, i32, i32, i32, [12 x i32] }>], [4 x <{ [9 x i32], [8 x i32] }>], [4 x [17 x i32]] }> <{ [4 x <{ i32, i32, i32, i32, i32, [12 x i32] }>] [<{ i32, i32, i32, i32, i32, [12 x i32] }> <{ i32 2, i32 6, i32 6, i32 6, i32 6, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, [12 x i32] }> <{ i32 0, i32 1, i32 6, i32 7, i32 8, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, [12 x i32] }> <{ i32 0, i32 0, i32 3, i32 7, i32 8, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, [12 x i32] }> <{ i32 0, i32 0, i32 0, i32 6, i32 7, [12 x i32] zeroinitializer }>], [4 x <{ [9 x i32], [8 x i32] }>] [<{ [9 x i32], [8 x i32] }> <{ [9 x i32] [i32 1, i32 7, i32 7, i32 9, i32 9, i32 10, i32 11, i32 12, i32 13], [8 x i32] zeroinitializer }>, <{ [9 x i32], [8 x i32] }> <{ [9 x i32] [i32 0, i32 2, i32 7, i32 7, i32 9, i32 10, i32 11, i32 12, i32 12], [8 x i32] zeroinitializer }>, <{ [9 x i32], [8 x i32] }> <{ [9 x i32] [i32 0, i32 0, i32 3, i32 7, i32 7, i32 9, i32 10, i32 11, i32 12], [8 x i32] zeroinitializer }>, <{ [9 x i32], [8 x i32] }> <{ [9 x i32] [i32 0, i32 0, i32 0, i32 5, i32 6, i32 7, i32 7, i32 10, i32 11], [8 x i32] zeroinitializer }>], [4 x [17 x i32]] [[17 x i32] [i32 1, i32 6, i32 8, i32 9, i32 10, i32 11, i32 13, i32 13, i32 13, i32 14, i32 14, i32 15, i32 15, i32 16, i32 16, i32 16, i32 16], [17 x i32] [i32 0, i32 2, i32 6, i32 8, i32 9, i32 10, i32 11, i32 13, i32 13, i32 14, i32 14, i32 15, i32 15, i32 15, i32 16, i32 16, i32 16], [17 x i32] [i32 0, i32 0, i32 3, i32 7, i32 8, i32 9, i32 10, i32 11, i32 13, i32 13, i32 14, i32 14, i32 15, i32 15, i32 16, i32 16, i32 16], [17 x i32] [i32 0, i32 0, i32 0, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 13, i32 14, i32 14, i32 15, i32 15, i32 16, i32 16]] }>, align 16
@readSyntaxElement_NumCoeffTrailingOnesChromaDC.codtab = internal constant <{ <{ <{ i32, i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, i32, [13 x i32] }> }>, [4 x <{ [9 x i32], [8 x i32] }>], [4 x [17 x i32]] }> <{ <{ <{ i32, i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, i32, [13 x i32] }> }> <{ <{ i32, i32, i32, i32, i32, [12 x i32] }> <{ i32 1, i32 7, i32 4, i32 3, i32 2, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, [12 x i32] }> <{ i32 0, i32 1, i32 6, i32 3, i32 3, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, [12 x i32] }> <{ i32 0, i32 0, i32 1, i32 2, i32 2, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, [13 x i32] }> <{ i32 0, i32 0, i32 0, i32 5, [13 x i32] zeroinitializer }> }>, [4 x <{ [9 x i32], [8 x i32] }>] [<{ [9 x i32], [8 x i32] }> <{ [9 x i32] [i32 1, i32 15, i32 14, i32 7, i32 6, i32 7, i32 7, i32 7, i32 7], [8 x i32] zeroinitializer }>, <{ [9 x i32], [8 x i32] }> <{ [9 x i32] [i32 0, i32 1, i32 13, i32 12, i32 5, i32 6, i32 6, i32 6, i32 5], [8 x i32] zeroinitializer }>, <{ [9 x i32], [8 x i32] }> <{ [9 x i32] [i32 0, i32 0, i32 1, i32 11, i32 10, i32 4, i32 5, i32 5, i32 4], [8 x i32] zeroinitializer }>, <{ [9 x i32], [8 x i32] }> <{ [9 x i32] [i32 0, i32 0, i32 0, i32 1, i32 1, i32 9, i32 8, i32 4, i32 4], [8 x i32] zeroinitializer }>], [4 x [17 x i32]] [[17 x i32] [i32 1, i32 5, i32 7, i32 7, i32 7, i32 7, i32 15, i32 11, i32 8, i32 15, i32 11, i32 15, i32 11, i32 15, i32 11, i32 7, i32 4], [17 x i32] [i32 0, i32 1, i32 4, i32 6, i32 6, i32 6, i32 6, i32 14, i32 10, i32 14, i32 10, i32 14, i32 10, i32 1, i32 14, i32 10, i32 6], [17 x i32] [i32 0, i32 0, i32 1, i32 5, i32 5, i32 5, i32 5, i32 5, i32 13, i32 9, i32 13, i32 9, i32 13, i32 9, i32 13, i32 9, i32 5], [17 x i32] [i32 0, i32 0, i32 0, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 4, i32 12, i32 12, i32 8, i32 12, i32 8, i32 12, i32 8]] }>, align 16
@readSyntaxElement_TotalZeros.lentab = internal constant <{ [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], <{ [8 x i32], [8 x i32] }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }>, <{ i32, i32, i32, i32, i32, [11 x i32] }>, <{ i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, [14 x i32] }> }> <{ [16 x i32] [i32 1, i32 3, i32 3, i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 7, i32 7, i32 8, i32 8, i32 9, i32 9, i32 9], [16 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 6, i32 6, i32 0], [16 x i32] [i32 4, i32 3, i32 3, i32 3, i32 4, i32 4, i32 3, i32 3, i32 4, i32 5, i32 5, i32 6, i32 5, i32 6, i32 0, i32 0], [16 x i32] [i32 5, i32 3, i32 4, i32 4, i32 3, i32 3, i32 3, i32 4, i32 3, i32 4, i32 5, i32 5, i32 5, i32 0, i32 0, i32 0], [16 x i32] [i32 4, i32 4, i32 4, i32 3, i32 3, i32 3, i32 3, i32 3, i32 4, i32 5, i32 4, i32 5, i32 0, i32 0, i32 0, i32 0], [16 x i32] [i32 6, i32 5, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 4, i32 3, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0], [16 x i32] [i32 6, i32 5, i32 3, i32 3, i32 3, i32 2, i32 3, i32 4, i32 3, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [16 x i32] [i32 6, i32 4, i32 5, i32 3, i32 2, i32 2, i32 3, i32 3, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], <{ [8 x i32], [8 x i32] }> <{ [8 x i32] [i32 6, i32 6, i32 4, i32 2, i32 2, i32 3, i32 2, i32 5], [8 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }> <{ i32 5, i32 5, i32 3, i32 2, i32 2, i32 2, i32 4, [9 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }> <{ i32 4, i32 4, i32 3, i32 3, i32 1, i32 3, [10 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, [11 x i32] }> <{ i32 4, i32 4, i32 2, i32 1, i32 3, [11 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, [12 x i32] }> <{ i32 3, i32 3, i32 1, i32 2, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 2, i32 2, i32 1, [13 x i32] zeroinitializer }>, <{ i32, i32, [14 x i32] }> <{ i32 1, i32 1, [14 x i32] zeroinitializer }> }>, align 16
@readSyntaxElement_TotalZeros.codtab = internal constant <{ [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], <{ [8 x i32], [8 x i32] }>, <{ [8 x i32], [8 x i32] }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }>, <{ i32, i32, i32, i32, i32, [11 x i32] }>, <{ i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, [14 x i32] }> }> <{ [16 x i32] [i32 1, i32 3, i32 2, i32 3, i32 2, i32 3, i32 2, i32 3, i32 2, i32 3, i32 2, i32 3, i32 2, i32 3, i32 2, i32 1], [16 x i32] [i32 7, i32 6, i32 5, i32 4, i32 3, i32 5, i32 4, i32 3, i32 2, i32 3, i32 2, i32 3, i32 2, i32 1, i32 0, i32 0], [16 x i32] [i32 5, i32 7, i32 6, i32 5, i32 4, i32 3, i32 4, i32 3, i32 2, i32 3, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0], [16 x i32] [i32 3, i32 7, i32 5, i32 4, i32 6, i32 5, i32 4, i32 3, i32 3, i32 2, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0], [16 x i32] [i32 5, i32 4, i32 3, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0], [16 x i32] [i32 1, i32 1, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [16 x i32] [i32 1, i32 1, i32 5, i32 4, i32 3, i32 3, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], <{ [8 x i32], [8 x i32] }> <{ [8 x i32] [i32 1, i32 1, i32 1, i32 3, i32 3, i32 2, i32 2, i32 1], [8 x i32] zeroinitializer }>, <{ [8 x i32], [8 x i32] }> <{ [8 x i32] [i32 1, i32 0, i32 1, i32 3, i32 2, i32 1, i32 1, i32 1], [8 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }> <{ i32 1, i32 0, i32 1, i32 3, i32 2, i32 1, i32 1, [9 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }> <{ i32 0, i32 1, i32 1, i32 2, i32 1, i32 3, [10 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, [11 x i32] }> <{ i32 0, i32 1, i32 1, i32 1, i32 1, [11 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, [12 x i32] }> <{ i32 0, i32 1, i32 1, i32 1, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 0, i32 1, i32 1, [13 x i32] zeroinitializer }>, <{ i32, i32, [14 x i32] }> <{ i32 0, i32 1, [14 x i32] zeroinitializer }> }>, align 16
@readSyntaxElement_TotalZerosChromaDC.lentab = internal constant <{ <{ <{ i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, [14 x i32] }>, [12 x [16 x i32]] }>, <{ <{ [8 x i32], [8 x i32] }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }>, <{ i32, i32, i32, i32, i32, [11 x i32] }>, <{ i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, [14 x i32] }>, [8 x [16 x i32]] }>, <{ [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], <{ [8 x i32], [8 x i32] }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }>, <{ i32, i32, i32, i32, i32, [11 x i32] }>, <{ i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, [14 x i32] }> }> }> <{ <{ <{ i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, [14 x i32] }>, [12 x [16 x i32]] }> <{ <{ i32, i32, i32, i32, [12 x i32] }> <{ i32 1, i32 2, i32 3, i32 3, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 1, i32 2, i32 2, [13 x i32] zeroinitializer }>, <{ i32, i32, [14 x i32] }> <{ i32 1, i32 1, [14 x i32] zeroinitializer }>, [12 x [16 x i32]] zeroinitializer }>, <{ <{ [8 x i32], [8 x i32] }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }>, <{ i32, i32, i32, i32, i32, [11 x i32] }>, <{ i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, [14 x i32] }>, [8 x [16 x i32]] }> <{ <{ [8 x i32], [8 x i32] }> <{ [8 x i32] [i32 1, i32 3, i32 3, i32 4, i32 4, i32 4, i32 5, i32 5], [8 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }> <{ i32 3, i32 2, i32 3, i32 3, i32 3, i32 3, i32 3, [9 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }> <{ i32 3, i32 3, i32 2, i32 2, i32 3, i32 3, [10 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, [11 x i32] }> <{ i32 3, i32 2, i32 2, i32 2, i32 3, [11 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, [12 x i32] }> <{ i32 2, i32 2, i32 2, i32 2, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 2, i32 2, i32 1, [13 x i32] zeroinitializer }>, <{ i32, i32, [14 x i32] }> <{ i32 1, i32 1, [14 x i32] zeroinitializer }>, [8 x [16 x i32]] zeroinitializer }>, <{ [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], <{ [8 x i32], [8 x i32] }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }>, <{ i32, i32, i32, i32, i32, [11 x i32] }>, <{ i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, [14 x i32] }> }> <{ [16 x i32] [i32 1, i32 3, i32 3, i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 7, i32 7, i32 8, i32 8, i32 9, i32 9, i32 9], [16 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 6, i32 6, i32 0], [16 x i32] [i32 4, i32 3, i32 3, i32 3, i32 4, i32 4, i32 3, i32 3, i32 4, i32 5, i32 5, i32 6, i32 5, i32 6, i32 0, i32 0], [16 x i32] [i32 5, i32 3, i32 4, i32 4, i32 3, i32 3, i32 3, i32 4, i32 3, i32 4, i32 5, i32 5, i32 5, i32 0, i32 0, i32 0], [16 x i32] [i32 4, i32 4, i32 4, i32 3, i32 3, i32 3, i32 3, i32 3, i32 4, i32 5, i32 4, i32 5, i32 0, i32 0, i32 0, i32 0], [16 x i32] [i32 6, i32 5, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 4, i32 3, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0], [16 x i32] [i32 6, i32 5, i32 3, i32 3, i32 3, i32 2, i32 3, i32 4, i32 3, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [16 x i32] [i32 6, i32 4, i32 5, i32 3, i32 2, i32 2, i32 3, i32 3, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], <{ [8 x i32], [8 x i32] }> <{ [8 x i32] [i32 6, i32 6, i32 4, i32 2, i32 2, i32 3, i32 2, i32 5], [8 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }> <{ i32 5, i32 5, i32 3, i32 2, i32 2, i32 2, i32 4, [9 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }> <{ i32 4, i32 4, i32 3, i32 3, i32 1, i32 3, [10 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, [11 x i32] }> <{ i32 4, i32 4, i32 2, i32 1, i32 3, [11 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, [12 x i32] }> <{ i32 3, i32 3, i32 1, i32 2, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 2, i32 2, i32 1, [13 x i32] zeroinitializer }>, <{ i32, i32, [14 x i32] }> <{ i32 1, i32 1, [14 x i32] zeroinitializer }> }> }>, align 16
@readSyntaxElement_TotalZerosChromaDC.codtab = internal constant <{ <{ <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, [14 x i32] }>, <{ i32, [15 x i32] }>, [12 x [16 x i32]] }>, <{ <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }>, <{ i32, i32, i32, i32, i32, [11 x i32] }>, <{ i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, [14 x i32] }>, [8 x [16 x i32]] }>, <{ [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], <{ [8 x i32], [8 x i32] }>, <{ [8 x i32], [8 x i32] }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }>, <{ i32, i32, i32, i32, i32, [11 x i32] }>, <{ i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, [14 x i32] }> }> }> <{ <{ <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, [14 x i32] }>, <{ i32, [15 x i32] }>, [12 x [16 x i32]] }> <{ <{ i32, i32, i32, [13 x i32] }> <{ i32 1, i32 1, i32 1, [13 x i32] zeroinitializer }>, <{ i32, i32, [14 x i32] }> <{ i32 1, i32 1, [14 x i32] zeroinitializer }>, <{ i32, [15 x i32] }> <{ i32 1, [15 x i32] zeroinitializer }>, [12 x [16 x i32]] zeroinitializer }>, <{ <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }>, <{ i32, i32, i32, i32, i32, [11 x i32] }>, <{ i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, [14 x i32] }>, [8 x [16 x i32]] }> <{ <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }> <{ i32 1, i32 2, i32 3, i32 2, i32 3, i32 1, i32 1, [9 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }> <{ i32 0, i32 1, i32 1, i32 4, i32 5, i32 6, i32 7, [9 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }> <{ i32 0, i32 1, i32 1, i32 2, i32 6, i32 7, [10 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, [11 x i32] }> <{ i32 6, i32 0, i32 1, i32 2, i32 7, [11 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, [12 x i32] }> <{ i32 0, i32 1, i32 2, i32 3, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 0, i32 1, i32 1, [13 x i32] zeroinitializer }>, <{ i32, i32, [14 x i32] }> <{ i32 0, i32 1, [14 x i32] zeroinitializer }>, [8 x [16 x i32]] zeroinitializer }>, <{ [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], <{ [8 x i32], [8 x i32] }>, <{ [8 x i32], [8 x i32] }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }>, <{ i32, i32, i32, i32, i32, [11 x i32] }>, <{ i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, [14 x i32] }> }> <{ [16 x i32] [i32 1, i32 3, i32 2, i32 3, i32 2, i32 3, i32 2, i32 3, i32 2, i32 3, i32 2, i32 3, i32 2, i32 3, i32 2, i32 1], [16 x i32] [i32 7, i32 6, i32 5, i32 4, i32 3, i32 5, i32 4, i32 3, i32 2, i32 3, i32 2, i32 3, i32 2, i32 1, i32 0, i32 0], [16 x i32] [i32 5, i32 7, i32 6, i32 5, i32 4, i32 3, i32 4, i32 3, i32 2, i32 3, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0], [16 x i32] [i32 3, i32 7, i32 5, i32 4, i32 6, i32 5, i32 4, i32 3, i32 3, i32 2, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0], [16 x i32] [i32 5, i32 4, i32 3, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0], [16 x i32] [i32 1, i32 1, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [16 x i32] [i32 1, i32 1, i32 5, i32 4, i32 3, i32 3, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], <{ [8 x i32], [8 x i32] }> <{ [8 x i32] [i32 1, i32 1, i32 1, i32 3, i32 3, i32 2, i32 2, i32 1], [8 x i32] zeroinitializer }>, <{ [8 x i32], [8 x i32] }> <{ [8 x i32] [i32 1, i32 0, i32 1, i32 3, i32 2, i32 1, i32 1, i32 1], [8 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }> <{ i32 1, i32 0, i32 1, i32 3, i32 2, i32 1, i32 1, [9 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }> <{ i32 0, i32 1, i32 1, i32 2, i32 1, i32 3, [10 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, [11 x i32] }> <{ i32 0, i32 1, i32 1, i32 1, i32 1, [11 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, [12 x i32] }> <{ i32 0, i32 1, i32 1, i32 1, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 0, i32 1, i32 1, [13 x i32] zeroinitializer }>, <{ i32, i32, [14 x i32] }> <{ i32 0, i32 1, [14 x i32] zeroinitializer }> }> }>, align 16
@readSyntaxElement_Run.lentab = internal constant <{ <{ i32, i32, [14 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, i32, i32, [11 x i32] }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }>, [16 x i32], [8 x [16 x i32]] }> <{ <{ i32, i32, [14 x i32] }> <{ i32 1, i32 1, [14 x i32] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 1, i32 2, i32 2, [13 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, [12 x i32] }> <{ i32 2, i32 2, i32 2, i32 2, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, [11 x i32] }> <{ i32 2, i32 2, i32 2, i32 3, i32 3, [11 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, [10 x i32] }> <{ i32 2, i32 2, i32 3, i32 3, i32 3, i32 3, [10 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }> <{ i32 2, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, [9 x i32] zeroinitializer }>, [16 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 0], [8 x [16 x i32]] zeroinitializer }>, align 16
@readSyntaxElement_Run.codtab = internal constant <{ <{ i32, [15 x i32] }>, <{ i32, i32, [14 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, i32, i32, [12 x i32] }>, <{ i32, i32, i32, i32, i32, [11 x i32] }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }>, [16 x i32], [8 x [16 x i32]] }> <{ <{ i32, [15 x i32] }> <{ i32 1, [15 x i32] zeroinitializer }>, <{ i32, i32, [14 x i32] }> <{ i32 1, i32 1, [14 x i32] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 3, i32 2, i32 1, [13 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, [12 x i32] }> <{ i32 3, i32 2, i32 1, i32 1, [12 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, [11 x i32] }> <{ i32 3, i32 2, i32 3, i32 2, i32 1, [11 x i32] zeroinitializer }>, <{ i32, i32, i32, i32, i32, i32, i32, [9 x i32] }> <{ i32 3, i32 0, i32 1, i32 3, i32 2, i32 5, i32 4, [9 x i32] zeroinitializer }>, [16 x i32] [i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 0], [8 x [16 x i32]] zeroinitializer }>, align 16
@active_pps = internal global ptr null, align 8
@imgY_ref = internal global ptr null, align 8
@imgUV_ref = internal global ptr null, align 8
@PicPos = internal global ptr null, align 8
@Bframe_ctr = internal global i32 0, align 4
@frame_no = internal global i32 0, align 4
@g_nFrame = internal global i32 0, align 4
@InvLevelScale4x4Luma_Intra = internal global [6 x [4 x [4 x i32]]] zeroinitializer, align 16
@InvLevelScale4x4Chroma_Intra = internal global [2 x [6 x [4 x [4 x i32]]]] zeroinitializer, align 16
@InvLevelScale4x4Luma_Inter = internal global [6 x [4 x [4 x i32]]] zeroinitializer, align 16
@InvLevelScale4x4Chroma_Inter = internal global [2 x [6 x [4 x [4 x i32]]]] zeroinitializer, align 16
@InvLevelScale8x8Luma_Intra = internal global [6 x [8 x [8 x i32]]] zeroinitializer, align 16
@InvLevelScale8x8Luma_Inter = internal global [6 x [8 x [8 x i32]]] zeroinitializer, align 16
@qmatrix = internal global [8 x ptr] zeroinitializer, align 16
@errortext = internal global [300 x i8] zeroinitializer, align 16
@tot_time = internal global i64 0, align 8
@p_out = internal global i32 0, align 4
@p_ref = internal global i32 0, align 4
@previous_frame_num = internal global i32 0, align 4
@ref_flag = internal global [17 x i32] zeroinitializer, align 16
@Is_primary_correct = internal global i32 0, align 4
@Is_redundant_correct = internal global i32 0, align 4
@redundant_slice_ref_idx = internal global i32 0, align 4
@nal_startcode_follows = internal global ptr null, align 8
@str.625 = private unnamed_addr constant [44 x i8] c"ERROR: failed to find NumCoeff/TrailingOnes\00", align 1
@str.4 = private unnamed_addr constant [53 x i8] c"ERROR: failed to find NumCoeff/TrailingOnes ChromaDC\00", align 1
@str.6 = private unnamed_addr constant [34 x i8] c"ERROR: failed to find Total Zeros\00", align 1
@str.7 = private unnamed_addr constant [26 x i8] c"ERROR: failed to find Run\00", align 1
@PartitionMode = internal global [4 x i8] zeroinitializer, align 4
@ReMapRef = internal global [80 x i8] zeroinitializer, align 16
@TopFieldForSkip_UV = internal global [2048 x i8] zeroinitializer, align 16
@TopFieldForSkip_Y = internal global [1024 x i8] zeroinitializer, align 16
@cofAC8x8_iintra = internal global [8 x i8] zeroinitializer, align 8
@cofAC8x8_intra = internal global [8 x i8] zeroinitializer, align 8
@erc_recfr = internal global [24 x i8] zeroinitializer, align 8
@p_log = internal global [8 x i8] zeroinitializer, align 8

; Function Attrs: nounwind optsize uwtable
define internal i32 @GetAnnexbNALU(ptr nocapture noundef %0) #0 {
  %2 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 8, !tbaa !7
  %4 = zext i32 %3 to i64
  %5 = tail call noalias ptr @calloc(i64 noundef %4, i64 noundef 1) #45
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  tail call void @no_mem_exit(ptr noundef nonnull @.str) #46
  br label %8

8:                                                ; preds = %7, %1
  br label %9

9:                                                ; preds = %14, %8
  %10 = phi i64 [ %18, %14 ], [ 0, %8 ]
  %11 = load ptr, ptr @bits, align 8, !tbaa !13
  %12 = tail call i32 @feof(ptr noundef %11) #46
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %22

14:                                               ; preds = %9
  %15 = load ptr, ptr @bits, align 8, !tbaa !13
  %16 = tail call i32 @fgetc(ptr noundef %15) #47
  %17 = trunc i32 %16 to i8
  %18 = add nuw i64 %10, 1
  %19 = getelementptr inbounds i8, ptr %5, i64 %10
  store i8 %17, ptr %19, align 1, !tbaa !14
  %20 = and i32 %16, 255
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %9, label %22, !llvm.loop !15

22:                                               ; preds = %14, %9
  %23 = phi i64 [ %10, %9 ], [ %18, %14 ]
  %24 = trunc i64 %23 to i32
  %25 = load ptr, ptr @bits, align 8, !tbaa !13
  %26 = tail call i32 @feof(ptr noundef %25) #46
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %22
  %29 = icmp eq i32 %24, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  tail call void @free(ptr noundef %5) #46
  br label %191

31:                                               ; preds = %28
  %32 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.12)
  tail call void @free(ptr noundef %5) #46
  br label %191

33:                                               ; preds = %22
  %34 = shl i64 %23, 32
  %35 = add i64 %34, -4294967296
  %36 = ashr exact i64 %35, 32
  %37 = getelementptr inbounds i8, ptr %5, i64 %36
  %38 = load i8, ptr %37, align 1, !tbaa !14
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %42, label %40

40:                                               ; preds = %33
  %41 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.11)
  tail call void @free(ptr noundef nonnull %5) #46
  br label %191

42:                                               ; preds = %33
  %43 = icmp slt i32 %24, 3
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.11)
  tail call void @free(ptr noundef nonnull %5) #46
  br label %191

46:                                               ; preds = %42
  %47 = icmp eq i32 %24, 3
  %48 = add nsw i32 %24, -4
  %49 = select i1 %47, i32 3, i32 4
  %50 = select i1 %47, i32 0, i32 %48
  store i32 %49, ptr %0, align 8, !tbaa !17
  %51 = load i32, ptr @IsFirstByteStreamNALU, align 4, !tbaa !18
  %52 = icmp eq i32 %51, 0
  %53 = icmp sgt i32 %50, 0
  %54 = select i1 %52, i1 %53, i1 false
  br i1 %54, label %55, label %57

55:                                               ; preds = %46
  %56 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.9)
  tail call void @free(ptr noundef nonnull %5) #46
  br label %191

57:                                               ; preds = %46
  store i32 0, ptr @IsFirstByteStreamNALU, align 4, !tbaa !18
  %58 = shl i64 %23, 32
  %59 = ashr exact i64 %58, 32
  br label %60

60:                                               ; preds = %125, %57
  %61 = phi i64 [ %59, %57 ], [ %121, %125 ]
  %62 = load ptr, ptr @bits, align 8, !tbaa !13
  %63 = tail call i32 @feof(ptr noundef %62) #46
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %104, label %65

65:                                               ; preds = %60
  %.lcssa3 = phi i64 [ %61, %60 ]
  %66 = trunc i64 %.lcssa3 to i32
  %67 = add i64 %.lcssa3, 4294967294
  br label %68

68:                                               ; preds = %68, %65
  %69 = phi i64 [ %76, %68 ], [ 0, %65 ]
  %70 = sub i64 %67, %69
  %71 = shl i64 %70, 32
  %72 = ashr exact i64 %71, 32
  %73 = getelementptr inbounds i8, ptr %5, i64 %72
  %74 = load i8, ptr %73, align 1, !tbaa !14
  %75 = icmp eq i8 %74, 0
  %76 = add nuw i64 %69, 1
  br i1 %75, label %68, label %77, !llvm.loop !19

77:                                               ; preds = %68
  %.lcssa1 = phi i64 [ %69, %68 ]
  %78 = trunc i64 %.lcssa1 to i32
  %79 = add nsw i32 %66, -1
  %80 = load i32, ptr %0, align 8, !tbaa !17
  %81 = add i32 %80, %50
  %82 = add i32 %81, %78
  %83 = sub i32 %79, %82
  %84 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 1
  store i32 %83, ptr %84, align 4, !tbaa !20
  %85 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 6
  %86 = load ptr, ptr %85, align 8, !tbaa !21
  %87 = sext i32 %81 to i64
  %88 = getelementptr inbounds i8, ptr %5, i64 %87
  %89 = zext i32 %83 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %86, ptr align 1 %88, i64 %89, i1 false)
  %90 = load ptr, ptr %85, align 8, !tbaa !21
  %91 = load i8, ptr %90, align 1, !tbaa !14
  %92 = lshr i8 %91, 7
  %93 = zext i8 %92 to i32
  %94 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 5
  store i32 %93, ptr %94, align 4, !tbaa !22
  %95 = load i8, ptr %90, align 1, !tbaa !14
  %96 = lshr i8 %95, 5
  %97 = and i8 %96, 3
  %98 = zext i8 %97 to i32
  %99 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 4
  store i32 %98, ptr %99, align 8, !tbaa !23
  %100 = load i8, ptr %90, align 1, !tbaa !14
  %101 = and i8 %100, 31
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 3
  store i32 %102, ptr %103, align 4, !tbaa !24
  tail call void @free(ptr noundef nonnull %5) #46
  br label %191

104:                                              ; preds = %60
  %105 = load ptr, ptr @bits, align 8, !tbaa !13
  %106 = tail call i32 @fgetc(ptr noundef %105) #47
  %107 = trunc i32 %106 to i8
  %108 = getelementptr inbounds i8, ptr %5, i64 %61
  store i8 %107, ptr %108, align 1, !tbaa !14
  %109 = add nsw i64 %61, -3
  %110 = getelementptr inbounds i8, ptr %5, i64 %109
  br label %111

111:                                              ; preds = %111, %104
  %112 = phi i64 [ 0, %104 ], [ %118, %111 ]
  %113 = phi i32 [ 1, %104 ], [ %117, %111 ]
  %114 = getelementptr inbounds i8, ptr %110, i64 %112
  %115 = load i8, ptr %114, align 1, !tbaa !14
  %116 = icmp eq i8 %115, 0
  %117 = select i1 %116, i32 %113, i32 0
  %118 = add nuw nsw i64 %112, 1
  %119 = icmp eq i64 %118, 3
  br i1 %119, label %120, label %111, !llvm.loop !25

120:                                              ; preds = %111
  %.lcssa2 = phi i32 [ %117, %111 ]
  %121 = add i64 %61, 1
  %122 = icmp ne i8 %107, 1
  %123 = icmp eq i32 %.lcssa2, 0
  %124 = select i1 %122, i1 true, i1 %123
  br i1 %124, label %125, label %138

125:                                              ; preds = %120
  %126 = add nsw i64 %61, -2
  %127 = getelementptr inbounds i8, ptr %5, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !14
  %129 = icmp eq i8 %128, 0
  %130 = getelementptr inbounds i8, ptr %127, i64 1
  %131 = load i8, ptr %130, align 1, !tbaa !14
  %132 = icmp eq i8 %131, 0
  %133 = xor i1 %122, true
  %134 = select i1 %133, i1 %132, i1 false
  %135 = select i1 %134, i1 %129, i1 false
  %136 = xor i1 %135, true
  %137 = and i1 %124, %136
  br i1 %137, label %60, label %149, !llvm.loop !26

138:                                              ; preds = %120
  %.lcssa6 = phi i64 [ %121, %120 ]
  %.lcssa4 = phi i64 [ %61, %120 ]
  %139 = add i64 %.lcssa4, 4294967292
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ %148, %140 ], [ 0, %138 ]
  %142 = sub i64 %139, %141
  %143 = shl i64 %142, 32
  %144 = ashr exact i64 %143, 32
  %145 = getelementptr inbounds i8, ptr %5, i64 %144
  %146 = load i8, ptr %145, align 1, !tbaa !14
  %147 = icmp eq i8 %146, 0
  %148 = add nuw i64 %141, 1
  br i1 %147, label %140, label %152, !llvm.loop !27

149:                                              ; preds = %125
  %.lcssa8 = phi i1 [ %135, %125 ]
  %.lcssa7 = phi i64 [ %121, %125 ]
  br i1 %.lcssa8, label %154, label %150

150:                                              ; preds = %149
  %151 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str)
  br label %154

152:                                              ; preds = %140
  %.lcssa = phi i64 [ %141, %140 ]
  %153 = trunc i64 %.lcssa to i32
  br label %154

154:                                              ; preds = %152, %150, %149
  %155 = phi i64 [ %.lcssa7, %150 ], [ %.lcssa7, %149 ], [ %.lcssa6, %152 ]
  %156 = phi i32 [ 0, %150 ], [ 0, %149 ], [ %153, %152 ]
  %157 = phi i32 [ 0, %150 ], [ -3, %149 ], [ -4, %152 ]
  %158 = trunc i64 %155 to i32
  %159 = load ptr, ptr @bits, align 8, !tbaa !13
  %160 = sext i32 %157 to i64
  %161 = tail call i32 @fseek(ptr noundef %159, i64 noundef %160, i32 noundef 1) #47
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %165, label %163

163:                                              ; preds = %154
  %164 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.5, i32 noundef %157) #46
  tail call void @free(ptr noundef nonnull %5) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 600) #46
  br label %165

165:                                              ; preds = %163, %154
  %166 = add nsw i32 %157, %158
  %167 = load i32, ptr %0, align 8, !tbaa !17
  %168 = add i32 %167, %50
  %169 = add i32 %156, %168
  %170 = sub i32 %166, %169
  %171 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 1
  store i32 %170, ptr %171, align 4, !tbaa !20
  %172 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 6
  %173 = load ptr, ptr %172, align 8, !tbaa !21
  %174 = sext i32 %168 to i64
  %175 = getelementptr inbounds i8, ptr %5, i64 %174
  %176 = zext i32 %170 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %173, ptr align 1 %175, i64 %176, i1 false)
  %177 = load ptr, ptr %172, align 8, !tbaa !21
  %178 = load i8, ptr %177, align 1, !tbaa !14
  %179 = lshr i8 %178, 7
  %180 = zext i8 %179 to i32
  %181 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 5
  store i32 %180, ptr %181, align 4, !tbaa !22
  %182 = load i8, ptr %177, align 1, !tbaa !14
  %183 = lshr i8 %182, 5
  %184 = and i8 %183, 3
  %185 = zext i8 %184 to i32
  %186 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 4
  store i32 %185, ptr %186, align 8, !tbaa !23
  %187 = load i8, ptr %177, align 1, !tbaa !14
  %188 = and i8 %187, 31
  %189 = zext i8 %188 to i32
  %190 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 3
  store i32 %189, ptr %190, align 4, !tbaa !24
  tail call void @free(ptr noundef nonnull %5) #46
  br label %191

191:                                              ; preds = %165, %77, %55, %44, %40, %31, %30
  %192 = phi i32 [ 0, %30 ], [ -1, %31 ], [ -1, %40 ], [ -1, %44 ], [ -1, %55 ], [ %79, %77 ], [ %166, %165 ]
  ret i32 %192
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: nofree nounwind optsize
declare noundef i32 @feof(ptr nocapture noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fgetc(ptr nocapture noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nounwind optsize willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #4

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fseek(ptr nocapture noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind optsize
declare noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i64 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nounwind optsize uwtable
define internal void @OpenBitstreamFile(ptr nocapture noundef readonly %0) #0 {
  %2 = tail call noalias ptr @fopen64(ptr noundef %0, ptr noundef nonnull @.str.6) #47
  store ptr %2, ptr @bits, align 8, !tbaa !13
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = load ptr, ptr @input, align 8, !tbaa !13
  %6 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.7, ptr noundef %5) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 500) #46
  br label %7

7:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noalias noundef ptr @fopen64(ptr nocapture noundef readonly, ptr nocapture noundef readonly) local_unnamed_addr #2

; Function Attrs: nofree nounwind optsize uwtable
define internal void @CloseBitstreamFile() #6 {
  %1 = load ptr, ptr @bits, align 8, !tbaa !13
  %2 = tail call i32 @fclose(ptr noundef %1) #47
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fclose(ptr nocapture noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind optsize uwtable
define internal void @CheckZeroByteNonVCL(ptr nocapture noundef readonly %0, ptr nocapture noundef readnone %1) #6 {
  %3 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 3
  %4 = load i32, ptr %3, align 4, !tbaa !24
  %5 = add i32 %4, -1
  %6 = icmp ult i32 %5, 5
  br i1 %6, label %33, label %7

7:                                                ; preds = %2
  %8 = add i32 %4, -9
  %9 = icmp ult i32 %8, -2
  %10 = add i32 %4, -6
  %11 = icmp ult i32 %10, 4
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = icmp sgt i32 %4, 12
  br i1 %13, label %14, label %23

14:                                               ; preds = %12
  %15 = icmp ult i32 %4, 19
  %16 = load i32, ptr @LastAccessUnitExists, align 4
  %17 = icmp ne i32 %16, 0
  %18 = select i1 %15, i1 %17, i1 false
  br i1 %18, label %22, label %23

19:                                               ; preds = %7
  %20 = load i32, ptr @LastAccessUnitExists, align 4, !tbaa !18
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %19, %14
  store i32 0, ptr @LastAccessUnitExists, align 4, !tbaa !18
  store i32 0, ptr @NALUCount, align 4, !tbaa !18
  br label %23

23:                                               ; preds = %22, %19, %14, %12
  %24 = load i32, ptr @NALUCount, align 4, !tbaa !18
  %25 = add nsw i32 %24, 1
  store i32 %25, ptr @NALUCount, align 4, !tbaa !18
  %26 = icmp ne i32 %24, 0
  %27 = and i1 %9, %26
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = load i32, ptr %0, align 8, !tbaa !17
  %30 = icmp eq i32 %29, 3
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.14)
  br label %33

33:                                               ; preds = %31, %28, %23, %2
  ret void
}

; Function Attrs: nofree nounwind optsize uwtable
define internal void @CheckZeroByteVCL(ptr nocapture noundef readonly %0, ptr nocapture noundef readnone %1) #6 {
  %3 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 3
  %4 = load i32, ptr %3, align 4, !tbaa !24
  %5 = add i32 %4, -1
  %6 = icmp ult i32 %5, 5
  br i1 %6, label %7, label %20

7:                                                ; preds = %2
  %8 = load i32, ptr @LastAccessUnitExists, align 4, !tbaa !18
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  store i32 1, ptr @NALUCount, align 4, !tbaa !18
  store i32 1, ptr @LastAccessUnitExists, align 4, !tbaa !18
  br label %15

11:                                               ; preds = %7
  %12 = load i32, ptr @NALUCount, align 4, !tbaa !18
  %13 = add nsw i32 %12, 1
  store i32 %13, ptr @NALUCount, align 4, !tbaa !18
  %14 = icmp eq i32 %12, 0
  store i32 1, ptr @LastAccessUnitExists, align 4, !tbaa !18
  br i1 %14, label %15, label %20

15:                                               ; preds = %11, %10
  %16 = load i32, ptr %0, align 8, !tbaa !17
  %17 = icmp eq i32 %16, 3
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.14)
  br label %20

20:                                               ; preds = %18, %15, %11, %2
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(argmem: readwrite) uwtable
define internal void @arideco_start_decoding(ptr nocapture noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, i32 noundef %4) #7 {
  %6 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 5
  store ptr %1, ptr %6, align 8, !tbaa !28
  %7 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 6
  store ptr %3, ptr %7, align 8, !tbaa !30
  store i32 %2, ptr %3, align 4, !tbaa !18
  %8 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 3
  br label %10

10:                                               ; preds = %25, %5
  %11 = phi i32 [ 0, %5 ], [ %26, %25 ]
  %12 = phi i32 [ 0, %5 ], [ %32, %25 ]
  %13 = phi i32 [ 0, %5 ], [ %31, %25 ]
  %14 = add nsw i32 %11, -1
  store i32 %14, ptr %8, align 8, !tbaa !31
  %15 = icmp slt i32 %11, 1
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = load i32, ptr %9, align 4, !tbaa !32
  br label %25

18:                                               ; preds = %10
  %19 = load i32, ptr %3, align 4, !tbaa !18
  %20 = add nsw i32 %19, 1
  store i32 %20, ptr %3, align 4, !tbaa !18
  %21 = sext i32 %19 to i64
  %22 = getelementptr inbounds i8, ptr %1, i64 %21
  %23 = load i8, ptr %22, align 1, !tbaa !14
  %24 = zext i8 %23 to i32
  store i32 %24, ptr %9, align 4, !tbaa !32
  store i32 7, ptr %8, align 8, !tbaa !31
  br label %25

25:                                               ; preds = %18, %16
  %26 = phi i32 [ %14, %16 ], [ 7, %18 ]
  %27 = phi i32 [ %17, %16 ], [ %24, %18 ]
  %28 = shl i32 %13, 1
  %29 = lshr i32 %27, %26
  %30 = and i32 %29, 1
  %31 = or i32 %30, %28
  %32 = add nuw nsw i32 %12, 1
  %33 = icmp eq i32 %32, 9
  br i1 %33, label %34, label %10, !llvm.loop !33

34:                                               ; preds = %25
  %.lcssa = phi i32 [ %31, %25 ]
  %35 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 1
  store i32 510, ptr %35, align 4, !tbaa !34
  %36 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 2
  store i32 %.lcssa, ptr %36, align 8, !tbaa !35
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @arideco_bits_read(ptr nocapture noundef readonly %0) #8 {
  %2 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 6
  %3 = load ptr, ptr %2, align 8, !tbaa !30
  %4 = load i32, ptr %3, align 4, !tbaa !18
  %5 = shl i32 %4, 3
  %6 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 4
  %7 = load i32, ptr %6, align 8, !tbaa !31
  %8 = sub i32 %5, %7
  %9 = add i32 %8, -16
  ret i32 %9
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal i32 @biari_decode_symbol(ptr nocapture noundef %0, ptr nocapture noundef %1) #9 {
  %3 = getelementptr inbounds %struct.BiContextType, ptr %1, i64 0, i32 1
  %4 = load i8, ptr %3, align 2, !tbaa !36
  %5 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 8, !tbaa !35
  %7 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 4, !tbaa !34
  %9 = load i16, ptr %1, align 2, !tbaa !39
  %10 = zext i16 %9 to i64
  %11 = lshr i32 %8, 6
  %12 = and i32 %11, 3
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds [64 x [4 x i8]], ptr @rLPS_table_64x4, i64 0, i64 %10, i64 %13
  %15 = load i8, ptr %14, align 1, !tbaa !14
  %16 = zext i8 %15 to i32
  %17 = sub i32 %8, %16
  %18 = icmp ult i32 %6, %17
  br i1 %18, label %29, label %19

19:                                               ; preds = %2
  %20 = sub i32 %6, %17
  %21 = icmp eq i8 %4, 0
  %22 = zext i1 %21 to i32
  %23 = icmp eq i16 %9, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = xor i8 %4, 1
  store i8 %25, ptr %3, align 2, !tbaa !36
  br label %26

26:                                               ; preds = %24, %19
  %27 = getelementptr inbounds [64 x i16], ptr @AC_next_state_LPS_64, i64 0, i64 %10
  %28 = load i16, ptr %27, align 2, !tbaa !40
  store i16 %28, ptr %1, align 2, !tbaa !39
  br label %34

29:                                               ; preds = %2
  %30 = zext i8 %4 to i32
  %31 = getelementptr inbounds [64 x i16], ptr @AC_next_state_MPS_64, i64 0, i64 %10
  %32 = load i16, ptr %31, align 2, !tbaa !40
  store i16 %32, ptr %1, align 2, !tbaa !39
  %33 = icmp ult i32 %17, 256
  br i1 %33, label %34, label %69

34:                                               ; preds = %29, %26
  %35 = phi i32 [ %22, %26 ], [ %30, %29 ]
  %36 = phi i32 [ %16, %26 ], [ %17, %29 ]
  %37 = phi i32 [ %20, %26 ], [ %6, %29 ]
  %38 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 4
  %39 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 5
  %40 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 6
  %41 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 3
  %42 = load i32, ptr %38, align 8, !tbaa !31
  br label %43

43:                                               ; preds = %61, %34
  %44 = phi i32 [ %42, %34 ], [ %62, %61 ]
  %45 = phi i32 [ %36, %34 ], [ %47, %61 ]
  %46 = phi i32 [ %37, %34 ], [ %67, %61 ]
  %47 = shl nuw nsw i32 %45, 1
  %48 = add nsw i32 %44, -1
  store i32 %48, ptr %38, align 8, !tbaa !31
  %49 = icmp slt i32 %44, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %43
  %51 = load i32, ptr %41, align 4, !tbaa !32
  br label %61

52:                                               ; preds = %43
  %53 = load ptr, ptr %39, align 8, !tbaa !28
  %54 = load ptr, ptr %40, align 8, !tbaa !30
  %55 = load i32, ptr %54, align 4, !tbaa !18
  %56 = add nsw i32 %55, 1
  store i32 %56, ptr %54, align 4, !tbaa !18
  %57 = sext i32 %55 to i64
  %58 = getelementptr inbounds i8, ptr %53, i64 %57
  %59 = load i8, ptr %58, align 1, !tbaa !14
  %60 = zext i8 %59 to i32
  store i32 %60, ptr %41, align 4, !tbaa !32
  store i32 7, ptr %38, align 8, !tbaa !31
  br label %61

61:                                               ; preds = %52, %50
  %62 = phi i32 [ %48, %50 ], [ 7, %52 ]
  %63 = phi i32 [ %51, %50 ], [ %60, %52 ]
  %64 = shl i32 %46, 1
  %65 = lshr i32 %63, %62
  %66 = and i32 %65, 1
  %67 = or i32 %66, %64
  %68 = icmp ult i32 %45, 128
  br i1 %68, label %43, label %69, !llvm.loop !41

69:                                               ; preds = %61, %29
  %70 = phi i32 [ %30, %29 ], [ %35, %61 ]
  %71 = phi i32 [ %6, %29 ], [ %67, %61 ]
  %72 = phi i32 [ %17, %29 ], [ %47, %61 ]
  store i32 %72, ptr %7, align 4, !tbaa !34
  store i32 %71, ptr %5, align 8, !tbaa !35
  ret i32 %70
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal i32 @biari_decode_symbol_eq_prob(ptr nocapture noundef %0) #10 {
  %2 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 8, !tbaa !35
  %4 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 4
  %5 = load i32, ptr %4, align 8, !tbaa !31
  %6 = add nsw i32 %5, -1
  store i32 %6, ptr %4, align 8, !tbaa !31
  %7 = icmp slt i32 %5, 1
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 3
  %10 = load i32, ptr %9, align 4, !tbaa !32
  br label %23

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 5
  %13 = load ptr, ptr %12, align 8, !tbaa !28
  %14 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 6
  %15 = load ptr, ptr %14, align 8, !tbaa !30
  %16 = load i32, ptr %15, align 4, !tbaa !18
  %17 = add nsw i32 %16, 1
  store i32 %17, ptr %15, align 4, !tbaa !18
  %18 = sext i32 %16 to i64
  %19 = getelementptr inbounds i8, ptr %13, i64 %18
  %20 = load i8, ptr %19, align 1, !tbaa !14
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 3
  store i32 %21, ptr %22, align 4, !tbaa !32
  store i32 7, ptr %4, align 8, !tbaa !31
  br label %23

23:                                               ; preds = %11, %8
  %24 = phi i32 [ %6, %8 ], [ 7, %11 ]
  %25 = phi i32 [ %10, %8 ], [ %21, %11 ]
  %26 = shl i32 %3, 1
  %27 = lshr i32 %25, %24
  %28 = and i32 %27, 1
  %29 = or i32 %28, %26
  %30 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 1
  %31 = load i32, ptr %30, align 4, !tbaa !34
  %32 = icmp uge i32 %29, %31
  %33 = zext i1 %32 to i32
  %34 = select i1 %32, i32 %31, i32 0
  %35 = sub i32 %29, %34
  store i32 %35, ptr %2, align 8, !tbaa !35
  ret i32 %33
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal i32 @biari_decode_final(ptr nocapture noundef %0) #9 {
  %2 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 8, !tbaa !35
  %4 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !34
  %6 = add i32 %5, -2
  %7 = icmp ult i32 %3, %6
  br i1 %7, label %8, label %45

8:                                                ; preds = %1
  %9 = icmp ult i32 %6, 256
  br i1 %9, label %10, label %42

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 4
  %12 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 5
  %13 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 6
  %14 = getelementptr inbounds %struct.DecodingEnvironment, ptr %0, i64 0, i32 3
  %15 = load i32, ptr %11, align 8, !tbaa !31
  br label %16

16:                                               ; preds = %34, %10
  %17 = phi i32 [ %15, %10 ], [ %35, %34 ]
  %18 = phi i32 [ %6, %10 ], [ %20, %34 ]
  %19 = phi i32 [ %3, %10 ], [ %40, %34 ]
  %20 = shl nuw nsw i32 %18, 1
  %21 = add nsw i32 %17, -1
  store i32 %21, ptr %11, align 8, !tbaa !31
  %22 = icmp slt i32 %17, 1
  br i1 %22, label %25, label %23

23:                                               ; preds = %16
  %24 = load i32, ptr %14, align 4, !tbaa !32
  br label %34

25:                                               ; preds = %16
  %26 = load ptr, ptr %12, align 8, !tbaa !28
  %27 = load ptr, ptr %13, align 8, !tbaa !30
  %28 = load i32, ptr %27, align 4, !tbaa !18
  %29 = add nsw i32 %28, 1
  store i32 %29, ptr %27, align 4, !tbaa !18
  %30 = sext i32 %28 to i64
  %31 = getelementptr inbounds i8, ptr %26, i64 %30
  %32 = load i8, ptr %31, align 1, !tbaa !14
  %33 = zext i8 %32 to i32
  store i32 %33, ptr %14, align 4, !tbaa !32
  store i32 7, ptr %11, align 8, !tbaa !31
  br label %34

34:                                               ; preds = %25, %23
  %35 = phi i32 [ %21, %23 ], [ 7, %25 ]
  %36 = phi i32 [ %24, %23 ], [ %33, %25 ]
  %37 = shl i32 %19, 1
  %38 = lshr i32 %36, %35
  %39 = and i32 %38, 1
  %40 = or i32 %39, %37
  %41 = icmp ult i32 %18, 128
  br i1 %41, label %16, label %42, !llvm.loop !42

42:                                               ; preds = %34, %8
  %43 = phi i32 [ %3, %8 ], [ %40, %34 ]
  %44 = phi i32 [ %6, %8 ], [ %20, %34 ]
  store i32 %43, ptr %2, align 8, !tbaa !35
  store i32 %44, ptr %4, align 4, !tbaa !34
  br label %45

45:                                               ; preds = %42, %1
  %46 = phi i32 [ 0, %42 ], [ 1, %1 ]
  ret i32 %46
}

; Function Attrs: mustprogress nofree nosync nounwind optsize willreturn memory(argmem: readwrite) uwtable
define internal void @biari_init_context(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef readonly %2) #11 {
  %4 = load i32, ptr %2, align 4, !tbaa !18
  %5 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 6
  %6 = load i32, ptr %5, align 4, !tbaa !43
  %7 = tail call i32 @llvm.smax.i32(i32 %6, i32 0)
  %8 = mul nsw i32 %7, %4
  %9 = ashr i32 %8, 4
  %10 = getelementptr inbounds i32, ptr %2, i64 1
  %11 = load i32, ptr %10, align 4, !tbaa !18
  %12 = add nsw i32 %9, %11
  %13 = tail call i32 @llvm.smax.i32(i32 %12, i32 1)
  %14 = tail call i32 @llvm.smin.i32(i32 %13, i32 126)
  %15 = icmp ugt i32 %14, 63
  %16 = trunc i32 %14 to i16
  %17 = add nsw i16 %16, -64
  %18 = sub nuw nsw i16 63, %16
  %19 = select i1 %15, i16 %17, i16 %18
  %20 = zext i1 %15 to i8
  store i16 %19, ptr %1, align 2
  %21 = getelementptr inbounds %struct.BiContextType, ptr %1, i64 0, i32 1
  store i8 %20, ptr %21, align 2
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #12

; Function Attrs: nounwind optsize uwtable
define internal i32 @intrapred(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca [4 x %struct.pix_pos], align 16
  %7 = alloca %struct.pix_pos, align 4
  %8 = alloca %struct.pix_pos, align 4
  %9 = alloca %struct.pix_pos, align 4
  %10 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %11 = getelementptr inbounds %struct.storable_picture, ptr %10, i64 0, i32 32
  %12 = load ptr, ptr %11, align 8, !tbaa !47
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %6) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #48
  %13 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %14 = load i32, ptr %13, align 4, !tbaa !49
  %15 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 30
  %16 = load ptr, ptr %15, align 8, !tbaa !50
  %17 = sext i32 %4 to i64
  %18 = getelementptr inbounds ptr, ptr %16, i64 %17
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  %20 = sext i32 %3 to i64
  %21 = getelementptr inbounds i8, ptr %19, i64 %20
  %22 = load i8, ptr %21, align 1, !tbaa !14
  %23 = add nsw i32 %2, 1
  %24 = add nsw i32 %2, 3
  %25 = add nsw i32 %1, 2
  %26 = add nsw i32 %1, -1
  %27 = sext i32 %2 to i64
  br label %28

28:                                               ; preds = %28, %5
  %29 = phi i64 [ 0, %5 ], [ %34, %28 ]
  %30 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  %31 = getelementptr inbounds [4 x %struct.pix_pos], ptr %6, i64 0, i64 %29
  %32 = trunc i64 %29 to i32
  %33 = add i32 %32, %2
  call void %30(i32 noundef %14, i32 noundef %26, i32 noundef %33, i32 noundef 0, ptr noundef nonnull %31) #46
  %34 = add nuw nsw i64 %29, 1
  %35 = icmp eq i64 %34, 4
  br i1 %35, label %36, label %28, !llvm.loop !51

36:                                               ; preds = %28
  %37 = add nsw i32 %2, 2
  %38 = add nsw i32 %1, 1
  %39 = add nsw i32 %1, 3
  %40 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  %41 = add nsw i32 %2, -1
  call void %40(i32 noundef %14, i32 noundef %1, i32 noundef %41, i32 noundef 0, ptr noundef nonnull %7) #46
  %42 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  %43 = add nsw i32 %1, 4
  call void %42(i32 noundef %14, i32 noundef %43, i32 noundef %41, i32 noundef 0, ptr noundef nonnull %8) #46
  %44 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  call void %44(i32 noundef %14, i32 noundef %26, i32 noundef %41, i32 noundef 0, ptr noundef nonnull %9) #46
  %45 = load i32, ptr %8, align 4, !tbaa !52
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %36
  %48 = icmp ne i32 %1, 4
  %49 = and i32 %2, -9
  %50 = icmp ne i32 %49, 4
  %51 = or i1 %48, %50
  br label %52

52:                                               ; preds = %47, %36
  %53 = phi i1 [ false, %36 ], [ %51, %47 ]
  %54 = zext i1 %53 to i32
  store i32 %54, ptr %8, align 4, !tbaa !52
  %55 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %56 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %55, i64 0, i32 30
  %57 = load i32, ptr %56, align 4, !tbaa !54
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %109, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  br label %61

61:                                               ; preds = %74, %59
  %62 = phi i64 [ 0, %59 ], [ %77, %74 ]
  %63 = phi i32 [ 1, %59 ], [ %76, %74 ]
  %64 = getelementptr inbounds [4 x %struct.pix_pos], ptr %6, i64 0, i64 %62
  %65 = load i32, ptr %64, align 8, !tbaa !52
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %74, label %67

67:                                               ; preds = %61
  %68 = load ptr, ptr %60, align 8, !tbaa !56
  %69 = getelementptr inbounds [4 x %struct.pix_pos], ptr %6, i64 0, i64 %62, i32 1
  %70 = load i32, ptr %69, align 4, !tbaa !57
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i32, ptr %68, i64 %71
  %73 = load i32, ptr %72, align 4, !tbaa !18
  br label %74

74:                                               ; preds = %67, %61
  %75 = phi i32 [ %73, %67 ], [ 0, %61 ]
  %76 = and i32 %75, %63
  %77 = add nuw nsw i64 %62, 1
  %78 = icmp eq i64 %77, 4
  br i1 %78, label %79, label %61, !llvm.loop !58

79:                                               ; preds = %74
  %.lcssa = phi i32 [ %76, %74 ]
  %80 = load i32, ptr %7, align 4, !tbaa !52
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %79
  %83 = load ptr, ptr %60, align 8, !tbaa !56
  %84 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 1
  %85 = load i32, ptr %84, align 4, !tbaa !57
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i32, ptr %83, i64 %86
  %88 = load i32, ptr %87, align 4, !tbaa !18
  br label %89

89:                                               ; preds = %82, %79
  %90 = phi i32 [ %88, %82 ], [ 0, %79 ]
  br i1 %53, label %91, label %98

91:                                               ; preds = %89
  %92 = load ptr, ptr %60, align 8, !tbaa !56
  %93 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 1
  %94 = load i32, ptr %93, align 4, !tbaa !57
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i32, ptr %92, i64 %95
  %97 = load i32, ptr %96, align 4, !tbaa !18
  br label %98

98:                                               ; preds = %91, %89
  %99 = phi i32 [ %97, %91 ], [ 0, %89 ]
  %100 = load i32, ptr %9, align 4, !tbaa !52
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %113, label %102

102:                                              ; preds = %98
  %103 = load ptr, ptr %60, align 8, !tbaa !56
  %104 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 1
  %105 = load i32, ptr %104, align 4, !tbaa !57
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i32, ptr %103, i64 %106
  %108 = load i32, ptr %107, align 4, !tbaa !18
  br label %113

109:                                              ; preds = %52
  %110 = load i32, ptr %6, align 16, !tbaa !52
  %111 = load i32, ptr %7, align 4, !tbaa !52
  %112 = load i32, ptr %9, align 4, !tbaa !52
  br label %113

113:                                              ; preds = %109, %102, %98
  %114 = phi i32 [ %111, %109 ], [ %90, %98 ], [ %90, %102 ]
  %115 = phi i32 [ %110, %109 ], [ %.lcssa, %98 ], [ %.lcssa, %102 ]
  %116 = phi i32 [ %112, %109 ], [ 0, %98 ], [ %108, %102 ]
  %117 = phi i32 [ %54, %109 ], [ %99, %98 ], [ %99, %102 ]
  %118 = icmp ne i32 %114, 0
  br i1 %118, label %119, label %142

119:                                              ; preds = %113
  %120 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %121 = load i32, ptr %120, align 4, !tbaa !59
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds ptr, ptr %12, i64 %122
  %124 = load ptr, ptr %123, align 8, !tbaa !13
  %125 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %126 = load i32, ptr %125, align 4, !tbaa !60
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i16, ptr %124, i64 %127
  %129 = load i16, ptr %128, align 2, !tbaa !40
  %130 = add nsw i32 %126, 1
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i16, ptr %124, i64 %131
  %133 = load i16, ptr %132, align 2, !tbaa !40
  %134 = add nsw i32 %126, 2
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i16, ptr %124, i64 %135
  %137 = load i16, ptr %136, align 2, !tbaa !40
  %138 = add nsw i32 %126, 3
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i16, ptr %124, i64 %139
  %141 = load i16, ptr %140, align 2, !tbaa !40
  br label %146

142:                                              ; preds = %113
  %143 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 105
  %144 = load i32, ptr %143, align 4, !tbaa !61
  %145 = trunc i32 %144 to i16
  br label %146

146:                                              ; preds = %142, %119
  %147 = phi i16 [ %141, %119 ], [ %145, %142 ]
  %148 = phi i16 [ %137, %119 ], [ %145, %142 ]
  %149 = phi i16 [ %133, %119 ], [ %145, %142 ]
  %150 = phi i16 [ %129, %119 ], [ %145, %142 ]
  %151 = icmp eq i32 %117, 0
  br i1 %151, label %175, label %152

152:                                              ; preds = %146
  %153 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 5
  %154 = load i32, ptr %153, align 4, !tbaa !59
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds ptr, ptr %12, i64 %155
  %157 = load ptr, ptr %156, align 8, !tbaa !13
  %158 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 4
  %159 = load i32, ptr %158, align 4, !tbaa !60
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i16, ptr %157, i64 %160
  %162 = load i16, ptr %161, align 2, !tbaa !40
  %163 = add nsw i32 %159, 1
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i16, ptr %157, i64 %164
  %166 = load i16, ptr %165, align 2, !tbaa !40
  %167 = add nsw i32 %159, 2
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i16, ptr %157, i64 %168
  %170 = load i16, ptr %169, align 2, !tbaa !40
  %171 = add nsw i32 %159, 3
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i16, ptr %157, i64 %172
  %174 = load i16, ptr %173, align 2, !tbaa !40
  br label %175

175:                                              ; preds = %152, %146
  %176 = phi i16 [ %162, %152 ], [ %147, %146 ]
  %177 = phi i16 [ %166, %152 ], [ %147, %146 ]
  %178 = phi i16 [ %170, %152 ], [ %147, %146 ]
  %179 = phi i16 [ %174, %152 ], [ %147, %146 ]
  %180 = icmp ne i32 %115, 0
  br i1 %180, label %181, label %222

181:                                              ; preds = %175
  %182 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 5
  %183 = load i32, ptr %182, align 4, !tbaa !59
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds ptr, ptr %12, i64 %184
  %186 = load ptr, ptr %185, align 8, !tbaa !13
  %187 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 4
  %188 = load i32, ptr %187, align 16, !tbaa !60
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds i16, ptr %186, i64 %189
  %191 = load i16, ptr %190, align 2, !tbaa !40
  %192 = getelementptr inbounds [4 x %struct.pix_pos], ptr %6, i64 0, i64 1, i32 5
  %193 = load i32, ptr %192, align 4, !tbaa !59
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds ptr, ptr %12, i64 %194
  %196 = load ptr, ptr %195, align 8, !tbaa !13
  %197 = getelementptr inbounds [4 x %struct.pix_pos], ptr %6, i64 0, i64 1, i32 4
  %198 = load i32, ptr %197, align 8, !tbaa !60
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i16, ptr %196, i64 %199
  %201 = load i16, ptr %200, align 2, !tbaa !40
  %202 = getelementptr inbounds [4 x %struct.pix_pos], ptr %6, i64 0, i64 2, i32 5
  %203 = load i32, ptr %202, align 4, !tbaa !59
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds ptr, ptr %12, i64 %204
  %206 = load ptr, ptr %205, align 8, !tbaa !13
  %207 = getelementptr inbounds [4 x %struct.pix_pos], ptr %6, i64 0, i64 2, i32 4
  %208 = load i32, ptr %207, align 16, !tbaa !60
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds i16, ptr %206, i64 %209
  %211 = load i16, ptr %210, align 2, !tbaa !40
  %212 = getelementptr inbounds [4 x %struct.pix_pos], ptr %6, i64 0, i64 3, i32 5
  %213 = load i32, ptr %212, align 4, !tbaa !59
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds ptr, ptr %12, i64 %214
  %216 = load ptr, ptr %215, align 8, !tbaa !13
  %217 = getelementptr inbounds [4 x %struct.pix_pos], ptr %6, i64 0, i64 3, i32 4
  %218 = load i32, ptr %217, align 8, !tbaa !60
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i16, ptr %216, i64 %219
  %221 = load i16, ptr %220, align 2, !tbaa !40
  br label %226

222:                                              ; preds = %175
  %223 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 105
  %224 = load i32, ptr %223, align 4, !tbaa !61
  %225 = trunc i32 %224 to i16
  br label %226

226:                                              ; preds = %222, %181
  %227 = phi i16 [ %191, %181 ], [ %225, %222 ]
  %228 = phi i16 [ %201, %181 ], [ %225, %222 ]
  %229 = phi i16 [ %211, %181 ], [ %225, %222 ]
  %230 = phi i16 [ %221, %181 ], [ %225, %222 ]
  %231 = icmp ne i32 %116, 0
  br i1 %231, label %232, label %243

232:                                              ; preds = %226
  %233 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 5
  %234 = load i32, ptr %233, align 4, !tbaa !59
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds ptr, ptr %12, i64 %235
  %237 = load ptr, ptr %236, align 8, !tbaa !13
  %238 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 4
  %239 = load i32, ptr %238, align 4, !tbaa !60
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i16, ptr %237, i64 %240
  %242 = load i16, ptr %241, align 2, !tbaa !40
  br label %247

243:                                              ; preds = %226
  %244 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 105
  %245 = load i32, ptr %244, align 4, !tbaa !61
  %246 = trunc i32 %245 to i16
  br label %247

247:                                              ; preds = %243, %232
  %248 = phi i16 [ %242, %232 ], [ %246, %243 ]
  switch i8 %22, label %835 [
    i8 2, label %249
    i8 0, label %309
    i8 1, label %338
    i8 4, label %366
    i8 3, label %444
    i8 5, label %519
    i8 7, label %606
    i8 8, label %688
    i8 6, label %748
  ]

249:                                              ; preds = %247
  %250 = and i1 %118, %180
  br i1 %250, label %251, label %269

251:                                              ; preds = %249
  %252 = zext i16 %150 to i32
  %253 = zext i16 %149 to i32
  %254 = zext i16 %148 to i32
  %255 = zext i16 %147 to i32
  %256 = zext i16 %227 to i32
  %257 = zext i16 %228 to i32
  %258 = zext i16 %229 to i32
  %259 = zext i16 %230 to i32
  %260 = add nuw nsw i32 %255, 4
  %261 = add nuw nsw i32 %260, %254
  %262 = add nuw nsw i32 %261, %253
  %263 = add nuw nsw i32 %262, %252
  %264 = add nuw nsw i32 %263, %256
  %265 = add nuw nsw i32 %264, %257
  %266 = add nuw nsw i32 %265, %258
  %267 = add nuw nsw i32 %266, %259
  %268 = lshr i32 %267, 3
  br label %297

269:                                              ; preds = %249
  %270 = icmp eq i32 %114, 0
  %271 = and i1 %270, %180
  br i1 %271, label %272, label %282

272:                                              ; preds = %269
  %273 = zext i16 %227 to i32
  %274 = zext i16 %228 to i32
  %275 = zext i16 %229 to i32
  %276 = zext i16 %230 to i32
  %277 = add nuw nsw i32 %273, 2
  %278 = add nuw nsw i32 %277, %274
  %279 = add nuw nsw i32 %278, %275
  %280 = add nuw nsw i32 %279, %276
  %281 = lshr i32 %280, 2
  br label %297

282:                                              ; preds = %269
  %283 = or i1 %270, %180
  br i1 %283, label %294, label %284

284:                                              ; preds = %282
  %285 = zext i16 %150 to i32
  %286 = zext i16 %149 to i32
  %287 = zext i16 %148 to i32
  %288 = zext i16 %147 to i32
  %289 = add nuw nsw i32 %288, 2
  %290 = add nuw nsw i32 %289, %287
  %291 = add nuw nsw i32 %290, %286
  %292 = add nuw nsw i32 %291, %285
  %293 = lshr i32 %292, 2
  br label %297

294:                                              ; preds = %282
  %295 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 105
  %296 = load i32, ptr %295, align 4, !tbaa !61
  br label %297

297:                                              ; preds = %294, %284, %272, %251
  %298 = phi i32 [ %268, %251 ], [ %281, %272 ], [ %296, %294 ], [ %293, %284 ]
  %299 = trunc i32 %298 to i16
  %300 = sext i32 %1 to i64
  %301 = insertelement <4 x i16> poison, i16 %299, i64 0
  %302 = shufflevector <4 x i16> %301, <4 x i16> poison, <4 x i32> zeroinitializer
  br label %303

303:                                              ; preds = %303, %297
  %304 = phi i64 [ 0, %297 ], [ %307, %303 ]
  %305 = add nsw i64 %304, %27
  %306 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %305, i64 %300
  store <4 x i16> %302, ptr %306, align 2, !tbaa !40
  %307 = add nuw nsw i64 %304, 1
  %308 = icmp eq i64 %307, 4
  br i1 %308, label %838, label %303, !llvm.loop !62

309:                                              ; preds = %247
  br i1 %118, label %313, label %310

310:                                              ; preds = %309
  %311 = load i32, ptr %13, align 4, !tbaa !49
  %312 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.1, i32 noundef %311) #47
  br label %313

313:                                              ; preds = %310, %309
  %314 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %315 = load i32, ptr %314, align 4, !tbaa !59
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds ptr, ptr %12, i64 %316
  %318 = load ptr, ptr %317, align 8, !tbaa !13
  %319 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %320 = load i32, ptr %319, align 4, !tbaa !60
  %321 = sext i32 %320 to i64
  %322 = sext i32 %1 to i64
  br label %323

323:                                              ; preds = %335, %313
  %324 = phi i64 [ 0, %313 ], [ %336, %335 ]
  %325 = add nsw i64 %324, %27
  br label %326

326:                                              ; preds = %326, %323
  %327 = phi i64 [ 0, %323 ], [ %333, %326 ]
  %328 = add nsw i64 %327, %321
  %329 = getelementptr inbounds i16, ptr %318, i64 %328
  %330 = load i16, ptr %329, align 2, !tbaa !40
  %331 = add nsw i64 %327, %322
  %332 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %325, i64 %331
  store i16 %330, ptr %332, align 2, !tbaa !40
  %333 = add nuw nsw i64 %327, 1
  %334 = icmp eq i64 %333, 4
  br i1 %334, label %335, label %326, !llvm.loop !63

335:                                              ; preds = %326
  %336 = add nuw nsw i64 %324, 1
  %337 = icmp eq i64 %336, 4
  br i1 %337, label %838, label %323, !llvm.loop !64

338:                                              ; preds = %247
  br i1 %180, label %342, label %339

339:                                              ; preds = %338
  %340 = load i32, ptr %13, align 4, !tbaa !49
  %341 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.1.2, i32 noundef %340) #47
  br label %342

342:                                              ; preds = %339, %338
  %343 = sext i32 %1 to i64
  br label %344

344:                                              ; preds = %363, %342
  %345 = phi i64 [ 0, %342 ], [ %364, %363 ]
  %346 = getelementptr inbounds [4 x %struct.pix_pos], ptr %6, i64 0, i64 %345, i32 5
  %347 = load i32, ptr %346, align 4, !tbaa !59
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds ptr, ptr %12, i64 %348
  %350 = load ptr, ptr %349, align 8, !tbaa !13
  %351 = getelementptr inbounds [4 x %struct.pix_pos], ptr %6, i64 0, i64 %345, i32 4
  %352 = load i32, ptr %351, align 8, !tbaa !60
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds i16, ptr %350, i64 %353
  %355 = add nsw i64 %345, %27
  br label %356

356:                                              ; preds = %356, %344
  %357 = phi i64 [ 0, %344 ], [ %361, %356 ]
  %358 = load i16, ptr %354, align 2, !tbaa !40
  %359 = add nsw i64 %357, %343
  %360 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %355, i64 %359
  store i16 %358, ptr %360, align 2, !tbaa !40
  %361 = add nuw nsw i64 %357, 1
  %362 = icmp eq i64 %361, 4
  br i1 %362, label %363, label %356, !llvm.loop !65

363:                                              ; preds = %356
  %364 = add nuw nsw i64 %345, 1
  %365 = icmp eq i64 %364, 4
  br i1 %365, label %838, label %344, !llvm.loop !66

366:                                              ; preds = %247
  %367 = and i1 %118, %180
  %368 = and i1 %367, %231
  br i1 %368, label %372, label %369

369:                                              ; preds = %366
  %370 = load i32, ptr %13, align 4, !tbaa !49
  %371 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.2, i32 noundef %370) #47
  br label %372

372:                                              ; preds = %369, %366
  %373 = zext i16 %230 to i32
  %374 = zext i16 %229 to i32
  %375 = shl nuw nsw i32 %374, 1
  %376 = zext i16 %228 to i32
  %377 = add nuw nsw i32 %376, 2
  %378 = add nuw nsw i32 %377, %373
  %379 = add nuw nsw i32 %378, %375
  %380 = lshr i32 %379, 2
  %381 = trunc i32 %380 to i16
  %382 = sext i32 %24 to i64
  %383 = sext i32 %1 to i64
  %384 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %382, i64 %383
  store i16 %381, ptr %384, align 2, !tbaa !40
  %385 = shl nuw nsw i32 %376, 1
  %386 = zext i16 %227 to i32
  %387 = add nuw nsw i32 %386, 2
  %388 = add nuw nsw i32 %387, %374
  %389 = add nuw nsw i32 %388, %385
  %390 = lshr i32 %389, 2
  %391 = trunc i32 %390 to i16
  %392 = sext i32 %38 to i64
  %393 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %382, i64 %392
  store i16 %391, ptr %393, align 2, !tbaa !40
  %394 = sext i32 %37 to i64
  %395 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %394, i64 %383
  store i16 %391, ptr %395, align 2, !tbaa !40
  %396 = shl nuw nsw i32 %386, 1
  %397 = zext i16 %248 to i32
  %398 = add nuw nsw i32 %377, %396
  %399 = add nuw nsw i32 %398, %397
  %400 = lshr i32 %399, 2
  %401 = trunc i32 %400 to i16
  %402 = sext i32 %25 to i64
  %403 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %382, i64 %402
  store i16 %401, ptr %403, align 2, !tbaa !40
  %404 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %394, i64 %392
  store i16 %401, ptr %404, align 2, !tbaa !40
  %405 = sext i32 %23 to i64
  %406 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %405, i64 %383
  store i16 %401, ptr %406, align 2, !tbaa !40
  %407 = shl nuw nsw i32 %397, 1
  %408 = zext i16 %150 to i32
  %409 = add nuw nsw i32 %408, 2
  %410 = add nuw nsw i32 %409, %386
  %411 = add nuw nsw i32 %410, %407
  %412 = lshr i32 %411, 2
  %413 = trunc i32 %412 to i16
  %414 = sext i32 %39 to i64
  %415 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %382, i64 %414
  store i16 %413, ptr %415, align 2, !tbaa !40
  %416 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %394, i64 %402
  store i16 %413, ptr %416, align 2, !tbaa !40
  %417 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %405, i64 %392
  store i16 %413, ptr %417, align 2, !tbaa !40
  %418 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %383
  store i16 %413, ptr %418, align 2, !tbaa !40
  %419 = shl nuw nsw i32 %408, 1
  %420 = zext i16 %149 to i32
  %421 = add nuw nsw i32 %420, 2
  %422 = add nuw nsw i32 %421, %419
  %423 = add nuw nsw i32 %422, %397
  %424 = lshr i32 %423, 2
  %425 = trunc i32 %424 to i16
  %426 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %394, i64 %414
  store i16 %425, ptr %426, align 2, !tbaa !40
  %427 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %405, i64 %402
  store i16 %425, ptr %427, align 2, !tbaa !40
  %428 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %392
  store i16 %425, ptr %428, align 2, !tbaa !40
  %429 = shl nuw nsw i32 %420, 1
  %430 = zext i16 %148 to i32
  %431 = add nuw nsw i32 %409, %430
  %432 = add nuw nsw i32 %431, %429
  %433 = lshr i32 %432, 2
  %434 = trunc i32 %433 to i16
  %435 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %405, i64 %414
  store i16 %434, ptr %435, align 2, !tbaa !40
  %436 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %402
  store i16 %434, ptr %436, align 2, !tbaa !40
  %437 = shl nuw nsw i32 %430, 1
  %438 = zext i16 %147 to i32
  %439 = add nuw nsw i32 %421, %438
  %440 = add nuw nsw i32 %439, %437
  %441 = lshr i32 %440, 2
  %442 = trunc i32 %441 to i16
  %443 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %414
  store i16 %442, ptr %443, align 2, !tbaa !40
  br label %838

444:                                              ; preds = %247
  br i1 %118, label %448, label %445

445:                                              ; preds = %444
  %446 = load i32, ptr %13, align 4, !tbaa !49
  %447 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.3, i32 noundef %446) #47
  br label %448

448:                                              ; preds = %445, %444
  %449 = zext i16 %150 to i32
  %450 = zext i16 %148 to i32
  %451 = zext i16 %149 to i32
  %452 = shl nuw nsw i32 %451, 1
  %453 = add nuw nsw i32 %450, 2
  %454 = add nuw nsw i32 %453, %449
  %455 = add nuw nsw i32 %454, %452
  %456 = lshr i32 %455, 2
  %457 = trunc i32 %456 to i16
  %458 = sext i32 %1 to i64
  %459 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %458
  store i16 %457, ptr %459, align 2, !tbaa !40
  %460 = zext i16 %147 to i32
  %461 = shl nuw nsw i32 %450, 1
  %462 = add nuw nsw i32 %460, 2
  %463 = add nuw nsw i32 %462, %451
  %464 = add nuw nsw i32 %463, %461
  %465 = lshr i32 %464, 2
  %466 = trunc i32 %465 to i16
  %467 = sext i32 %23 to i64
  %468 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %467, i64 %458
  store i16 %466, ptr %468, align 2, !tbaa !40
  %469 = sext i32 %38 to i64
  %470 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %469
  store i16 %466, ptr %470, align 2, !tbaa !40
  %471 = zext i16 %176 to i32
  %472 = shl nuw nsw i32 %460, 1
  %473 = add nuw nsw i32 %453, %472
  %474 = add nuw nsw i32 %473, %471
  %475 = lshr i32 %474, 2
  %476 = trunc i32 %475 to i16
  %477 = sext i32 %37 to i64
  %478 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %477, i64 %458
  store i16 %476, ptr %478, align 2, !tbaa !40
  %479 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %467, i64 %469
  store i16 %476, ptr %479, align 2, !tbaa !40
  %480 = sext i32 %25 to i64
  %481 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %480
  store i16 %476, ptr %481, align 2, !tbaa !40
  %482 = zext i16 %177 to i32
  %483 = shl nuw nsw i32 %471, 1
  %484 = add nuw nsw i32 %462, %482
  %485 = add nuw nsw i32 %484, %483
  %486 = lshr i32 %485, 2
  %487 = trunc i32 %486 to i16
  %488 = sext i32 %24 to i64
  %489 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %488, i64 %458
  store i16 %487, ptr %489, align 2, !tbaa !40
  %490 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %477, i64 %469
  store i16 %487, ptr %490, align 2, !tbaa !40
  %491 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %467, i64 %480
  store i16 %487, ptr %491, align 2, !tbaa !40
  %492 = sext i32 %39 to i64
  %493 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %492
  store i16 %487, ptr %493, align 2, !tbaa !40
  %494 = zext i16 %178 to i32
  %495 = shl nuw nsw i32 %482, 1
  %496 = add nuw nsw i32 %471, 2
  %497 = add nuw nsw i32 %496, %494
  %498 = add nuw nsw i32 %497, %495
  %499 = lshr i32 %498, 2
  %500 = trunc i32 %499 to i16
  %501 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %488, i64 %469
  store i16 %500, ptr %501, align 2, !tbaa !40
  %502 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %477, i64 %480
  store i16 %500, ptr %502, align 2, !tbaa !40
  %503 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %467, i64 %492
  store i16 %500, ptr %503, align 2, !tbaa !40
  %504 = zext i16 %179 to i32
  %505 = shl nuw nsw i32 %494, 1
  %506 = add nuw nsw i32 %482, 2
  %507 = add nuw nsw i32 %506, %504
  %508 = add nuw nsw i32 %507, %505
  %509 = lshr i32 %508, 2
  %510 = trunc i32 %509 to i16
  %511 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %488, i64 %480
  store i16 %510, ptr %511, align 2, !tbaa !40
  %512 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %477, i64 %492
  store i16 %510, ptr %512, align 2, !tbaa !40
  %513 = mul nuw nsw i32 %504, 3
  %514 = add nuw nsw i32 %494, 2
  %515 = add nuw nsw i32 %514, %513
  %516 = lshr i32 %515, 2
  %517 = trunc i32 %516 to i16
  %518 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %488, i64 %492
  store i16 %517, ptr %518, align 2, !tbaa !40
  br label %838

519:                                              ; preds = %247
  %520 = and i1 %118, %180
  %521 = and i1 %520, %231
  br i1 %521, label %525, label %522

522:                                              ; preds = %519
  %523 = load i32, ptr %13, align 4, !tbaa !49
  %524 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.4, i32 noundef %523) #47
  br label %525

525:                                              ; preds = %522, %519
  %526 = zext i16 %248 to i32
  %527 = zext i16 %150 to i32
  %528 = add nuw nsw i32 %527, 1
  %529 = add nuw nsw i32 %528, %526
  %530 = lshr i32 %529, 1
  %531 = trunc i32 %530 to i16
  %532 = sext i32 %37 to i64
  %533 = sext i32 %38 to i64
  %534 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %532, i64 %533
  store i16 %531, ptr %534, align 2, !tbaa !40
  %535 = sext i32 %1 to i64
  %536 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %535
  store i16 %531, ptr %536, align 2, !tbaa !40
  %537 = zext i16 %149 to i32
  %538 = add nuw nsw i32 %537, 1
  %539 = add nuw nsw i32 %538, %527
  %540 = lshr i32 %539, 1
  %541 = trunc i32 %540 to i16
  %542 = sext i32 %25 to i64
  %543 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %532, i64 %542
  store i16 %541, ptr %543, align 2, !tbaa !40
  %544 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %533
  store i16 %541, ptr %544, align 2, !tbaa !40
  %545 = zext i16 %148 to i32
  %546 = add nuw nsw i32 %545, 1
  %547 = add nuw nsw i32 %546, %537
  %548 = lshr i32 %547, 1
  %549 = trunc i32 %548 to i16
  %550 = sext i32 %39 to i64
  %551 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %532, i64 %550
  store i16 %549, ptr %551, align 2, !tbaa !40
  %552 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %542
  store i16 %549, ptr %552, align 2, !tbaa !40
  %553 = zext i16 %147 to i32
  %554 = add nuw nsw i32 %546, %553
  %555 = lshr i32 %554, 1
  %556 = trunc i32 %555 to i16
  %557 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %550
  store i16 %556, ptr %557, align 2, !tbaa !40
  %558 = zext i16 %227 to i32
  %559 = shl nuw nsw i32 %526, 1
  %560 = add nuw nsw i32 %527, 2
  %561 = add nuw nsw i32 %560, %558
  %562 = add nuw nsw i32 %561, %559
  %563 = lshr i32 %562, 2
  %564 = trunc i32 %563 to i16
  %565 = sext i32 %24 to i64
  %566 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %565, i64 %533
  store i16 %564, ptr %566, align 2, !tbaa !40
  %567 = sext i32 %23 to i64
  %568 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %567, i64 %535
  store i16 %564, ptr %568, align 2, !tbaa !40
  %569 = shl nuw nsw i32 %527, 1
  %570 = add nuw nsw i32 %537, 2
  %571 = add nuw nsw i32 %570, %569
  %572 = add nuw nsw i32 %571, %526
  %573 = lshr i32 %572, 2
  %574 = trunc i32 %573 to i16
  %575 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %565, i64 %542
  store i16 %574, ptr %575, align 2, !tbaa !40
  %576 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %567, i64 %533
  store i16 %574, ptr %576, align 2, !tbaa !40
  %577 = shl nuw nsw i32 %537, 1
  %578 = add nuw nsw i32 %560, %545
  %579 = add nuw nsw i32 %578, %577
  %580 = lshr i32 %579, 2
  %581 = trunc i32 %580 to i16
  %582 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %565, i64 %550
  store i16 %581, ptr %582, align 2, !tbaa !40
  %583 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %567, i64 %542
  store i16 %581, ptr %583, align 2, !tbaa !40
  %584 = shl nuw nsw i32 %545, 1
  %585 = add nuw nsw i32 %570, %553
  %586 = add nuw nsw i32 %585, %584
  %587 = lshr i32 %586, 2
  %588 = trunc i32 %587 to i16
  %589 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %567, i64 %550
  store i16 %588, ptr %589, align 2, !tbaa !40
  %590 = shl nuw nsw i32 %558, 1
  %591 = zext i16 %228 to i32
  %592 = add nuw nsw i32 %526, 2
  %593 = add nuw nsw i32 %592, %590
  %594 = add nuw nsw i32 %593, %591
  %595 = lshr i32 %594, 2
  %596 = trunc i32 %595 to i16
  %597 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %532, i64 %535
  store i16 %596, ptr %597, align 2, !tbaa !40
  %598 = shl nuw nsw i32 %591, 1
  %599 = zext i16 %229 to i32
  %600 = add nuw nsw i32 %558, 2
  %601 = add nuw nsw i32 %600, %598
  %602 = add nuw nsw i32 %601, %599
  %603 = lshr i32 %602, 2
  %604 = trunc i32 %603 to i16
  %605 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %565, i64 %535
  store i16 %604, ptr %605, align 2, !tbaa !40
  br label %838

606:                                              ; preds = %247
  br i1 %118, label %610, label %607

607:                                              ; preds = %606
  %608 = load i32, ptr %13, align 4, !tbaa !49
  %609 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5.3, i32 noundef %608) #47
  br label %610

610:                                              ; preds = %607, %606
  %611 = zext i16 %150 to i32
  %612 = zext i16 %149 to i32
  %613 = add nuw nsw i32 %612, 1
  %614 = add nuw nsw i32 %613, %611
  %615 = lshr i32 %614, 1
  %616 = trunc i32 %615 to i16
  %617 = sext i32 %1 to i64
  %618 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %617
  store i16 %616, ptr %618, align 2, !tbaa !40
  %619 = zext i16 %148 to i32
  %620 = add nuw nsw i32 %619, 1
  %621 = add nuw nsw i32 %620, %612
  %622 = lshr i32 %621, 1
  %623 = trunc i32 %622 to i16
  %624 = sext i32 %37 to i64
  %625 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %624, i64 %617
  store i16 %623, ptr %625, align 2, !tbaa !40
  %626 = sext i32 %38 to i64
  %627 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %626
  store i16 %623, ptr %627, align 2, !tbaa !40
  %628 = zext i16 %147 to i32
  %629 = add nuw nsw i32 %628, 1
  %630 = add nuw nsw i32 %629, %619
  %631 = lshr i32 %630, 1
  %632 = trunc i32 %631 to i16
  %633 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %624, i64 %626
  store i16 %632, ptr %633, align 2, !tbaa !40
  %634 = sext i32 %25 to i64
  %635 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %634
  store i16 %632, ptr %635, align 2, !tbaa !40
  %636 = zext i16 %176 to i32
  %637 = add nuw nsw i32 %629, %636
  %638 = lshr i32 %637, 1
  %639 = trunc i32 %638 to i16
  %640 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %624, i64 %634
  store i16 %639, ptr %640, align 2, !tbaa !40
  %641 = sext i32 %39 to i64
  %642 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %641
  store i16 %639, ptr %642, align 2, !tbaa !40
  %643 = zext i16 %177 to i32
  %644 = add nuw nsw i32 %636, 1
  %645 = add nuw nsw i32 %644, %643
  %646 = lshr i32 %645, 1
  %647 = trunc i32 %646 to i16
  %648 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %624, i64 %641
  store i16 %647, ptr %648, align 2, !tbaa !40
  %649 = shl nuw nsw i32 %612, 1
  %650 = add nuw nsw i32 %619, 2
  %651 = add nuw nsw i32 %650, %611
  %652 = add nuw nsw i32 %651, %649
  %653 = lshr i32 %652, 2
  %654 = trunc i32 %653 to i16
  %655 = sext i32 %23 to i64
  %656 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %655, i64 %617
  store i16 %654, ptr %656, align 2, !tbaa !40
  %657 = shl nuw nsw i32 %619, 1
  %658 = add nuw nsw i32 %628, 2
  %659 = add nuw nsw i32 %658, %612
  %660 = add nuw nsw i32 %659, %657
  %661 = lshr i32 %660, 2
  %662 = trunc i32 %661 to i16
  %663 = sext i32 %24 to i64
  %664 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %663, i64 %617
  store i16 %662, ptr %664, align 2, !tbaa !40
  %665 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %655, i64 %626
  store i16 %662, ptr %665, align 2, !tbaa !40
  %666 = shl nuw nsw i32 %628, 1
  %667 = add nuw nsw i32 %650, %666
  %668 = add nuw nsw i32 %667, %636
  %669 = lshr i32 %668, 2
  %670 = trunc i32 %669 to i16
  %671 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %663, i64 %626
  store i16 %670, ptr %671, align 2, !tbaa !40
  %672 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %655, i64 %634
  store i16 %670, ptr %672, align 2, !tbaa !40
  %673 = shl nuw nsw i32 %636, 1
  %674 = add nuw nsw i32 %658, %673
  %675 = add nuw nsw i32 %674, %643
  %676 = lshr i32 %675, 2
  %677 = trunc i32 %676 to i16
  %678 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %663, i64 %634
  store i16 %677, ptr %678, align 2, !tbaa !40
  %679 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %655, i64 %641
  store i16 %677, ptr %679, align 2, !tbaa !40
  %680 = shl nuw nsw i32 %643, 1
  %681 = zext i16 %178 to i32
  %682 = add nuw nsw i32 %636, 2
  %683 = add nuw nsw i32 %682, %680
  %684 = add nuw nsw i32 %683, %681
  %685 = lshr i32 %684, 2
  %686 = trunc i32 %685 to i16
  %687 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %663, i64 %641
  store i16 %686, ptr %687, align 2, !tbaa !40
  br label %838

688:                                              ; preds = %247
  br i1 %180, label %692, label %689

689:                                              ; preds = %688
  %690 = load i32, ptr %13, align 4, !tbaa !49
  %691 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.6.4, i32 noundef %690) #47
  br label %692

692:                                              ; preds = %689, %688
  %693 = zext i16 %227 to i32
  %694 = zext i16 %228 to i32
  %695 = add nuw nsw i32 %694, 1
  %696 = add nuw nsw i32 %695, %693
  %697 = lshr i32 %696, 1
  %698 = trunc i32 %697 to i16
  %699 = sext i32 %1 to i64
  %700 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %699
  store i16 %698, ptr %700, align 2, !tbaa !40
  %701 = shl nuw nsw i32 %694, 1
  %702 = zext i16 %229 to i32
  %703 = add nuw nsw i32 %702, 2
  %704 = add nuw nsw i32 %703, %693
  %705 = add nuw nsw i32 %704, %701
  %706 = lshr i32 %705, 2
  %707 = trunc i32 %706 to i16
  %708 = sext i32 %38 to i64
  %709 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %708
  store i16 %707, ptr %709, align 2, !tbaa !40
  %710 = add nuw nsw i32 %695, %702
  %711 = lshr i32 %710, 1
  %712 = trunc i32 %711 to i16
  %713 = sext i32 %23 to i64
  %714 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %713, i64 %699
  store i16 %712, ptr %714, align 2, !tbaa !40
  %715 = sext i32 %25 to i64
  %716 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %715
  store i16 %712, ptr %716, align 2, !tbaa !40
  %717 = shl nuw nsw i32 %702, 1
  %718 = zext i16 %230 to i32
  %719 = add nuw nsw i32 %718, 2
  %720 = add nuw nsw i32 %719, %694
  %721 = add nuw nsw i32 %720, %717
  %722 = lshr i32 %721, 2
  %723 = trunc i32 %722 to i16
  %724 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %713, i64 %708
  store i16 %723, ptr %724, align 2, !tbaa !40
  %725 = sext i32 %39 to i64
  %726 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %725
  store i16 %723, ptr %726, align 2, !tbaa !40
  %727 = add nuw nsw i32 %702, 1
  %728 = add nuw nsw i32 %727, %718
  %729 = lshr i32 %728, 1
  %730 = trunc i32 %729 to i16
  %731 = sext i32 %37 to i64
  %732 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %731, i64 %699
  store i16 %730, ptr %732, align 2, !tbaa !40
  %733 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %713, i64 %715
  store i16 %730, ptr %733, align 2, !tbaa !40
  %734 = shl nuw nsw i32 %718, 1
  %735 = add nuw nsw i32 %703, %718
  %736 = add nuw nsw i32 %735, %734
  %737 = lshr i32 %736, 2
  %738 = trunc i32 %737 to i16
  %739 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %731, i64 %708
  store i16 %738, ptr %739, align 2, !tbaa !40
  %740 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %713, i64 %725
  store i16 %738, ptr %740, align 2, !tbaa !40
  %741 = sext i32 %24 to i64
  %742 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %741, i64 %725
  store i16 %230, ptr %742, align 2, !tbaa !40
  %743 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %741, i64 %715
  store i16 %230, ptr %743, align 2, !tbaa !40
  %744 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %731, i64 %715
  store i16 %230, ptr %744, align 2, !tbaa !40
  %745 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %741, i64 %699
  store i16 %230, ptr %745, align 2, !tbaa !40
  %746 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %741, i64 %708
  store i16 %230, ptr %746, align 2, !tbaa !40
  %747 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %731, i64 %725
  store i16 %230, ptr %747, align 2, !tbaa !40
  br label %838

748:                                              ; preds = %247
  %749 = and i1 %118, %180
  %750 = and i1 %749, %231
  br i1 %750, label %754, label %751

751:                                              ; preds = %748
  %752 = load i32, ptr %13, align 4, !tbaa !49
  %753 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7.5, i32 noundef %752) #47
  br label %754

754:                                              ; preds = %751, %748
  %755 = zext i16 %248 to i32
  %756 = zext i16 %227 to i32
  %757 = add nuw nsw i32 %756, 1
  %758 = add nuw nsw i32 %757, %755
  %759 = lshr i32 %758, 1
  %760 = trunc i32 %759 to i16
  %761 = sext i32 %23 to i64
  %762 = sext i32 %25 to i64
  %763 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %761, i64 %762
  store i16 %760, ptr %763, align 2, !tbaa !40
  %764 = sext i32 %1 to i64
  %765 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %764
  store i16 %760, ptr %765, align 2, !tbaa !40
  %766 = shl nuw nsw i32 %755, 1
  %767 = zext i16 %150 to i32
  %768 = add nuw nsw i32 %767, 2
  %769 = add nuw nsw i32 %768, %756
  %770 = add nuw nsw i32 %769, %766
  %771 = lshr i32 %770, 2
  %772 = trunc i32 %771 to i16
  %773 = sext i32 %39 to i64
  %774 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %761, i64 %773
  store i16 %772, ptr %774, align 2, !tbaa !40
  %775 = sext i32 %38 to i64
  %776 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %775
  store i16 %772, ptr %776, align 2, !tbaa !40
  %777 = shl nuw nsw i32 %767, 1
  %778 = zext i16 %149 to i32
  %779 = add nuw nsw i32 %755, 2
  %780 = add nuw nsw i32 %779, %778
  %781 = add nuw nsw i32 %780, %777
  %782 = lshr i32 %781, 2
  %783 = trunc i32 %782 to i16
  %784 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %762
  store i16 %783, ptr %784, align 2, !tbaa !40
  %785 = shl nuw nsw i32 %778, 1
  %786 = zext i16 %148 to i32
  %787 = add nuw nsw i32 %768, %786
  %788 = add nuw nsw i32 %787, %785
  %789 = lshr i32 %788, 2
  %790 = trunc i32 %789 to i16
  %791 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %773
  store i16 %790, ptr %791, align 2, !tbaa !40
  %792 = zext i16 %228 to i32
  %793 = add nuw nsw i32 %757, %792
  %794 = lshr i32 %793, 1
  %795 = trunc i32 %794 to i16
  %796 = sext i32 %37 to i64
  %797 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %796, i64 %762
  store i16 %795, ptr %797, align 2, !tbaa !40
  %798 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %761, i64 %764
  store i16 %795, ptr %798, align 2, !tbaa !40
  %799 = shl nuw nsw i32 %756, 1
  %800 = add nuw nsw i32 %792, 2
  %801 = add nuw nsw i32 %800, %799
  %802 = add nuw nsw i32 %801, %755
  %803 = lshr i32 %802, 2
  %804 = trunc i32 %803 to i16
  %805 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %796, i64 %773
  store i16 %804, ptr %805, align 2, !tbaa !40
  %806 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %761, i64 %775
  store i16 %804, ptr %806, align 2, !tbaa !40
  %807 = zext i16 %229 to i32
  %808 = add nuw nsw i32 %792, 1
  %809 = add nuw nsw i32 %808, %807
  %810 = lshr i32 %809, 1
  %811 = trunc i32 %810 to i16
  %812 = sext i32 %24 to i64
  %813 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %812, i64 %762
  store i16 %811, ptr %813, align 2, !tbaa !40
  %814 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %796, i64 %764
  store i16 %811, ptr %814, align 2, !tbaa !40
  %815 = shl nuw nsw i32 %792, 1
  %816 = add nuw nsw i32 %756, 2
  %817 = add nuw nsw i32 %816, %815
  %818 = add nuw nsw i32 %817, %807
  %819 = lshr i32 %818, 2
  %820 = trunc i32 %819 to i16
  %821 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %812, i64 %773
  store i16 %820, ptr %821, align 2, !tbaa !40
  %822 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %796, i64 %775
  store i16 %820, ptr %822, align 2, !tbaa !40
  %823 = zext i16 %230 to i32
  %824 = add nuw nsw i32 %807, 1
  %825 = add nuw nsw i32 %824, %823
  %826 = lshr i32 %825, 1
  %827 = trunc i32 %826 to i16
  %828 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %812, i64 %764
  store i16 %827, ptr %828, align 2, !tbaa !40
  %829 = shl nuw nsw i32 %807, 1
  %830 = add nuw nsw i32 %800, %829
  %831 = add nuw nsw i32 %830, %823
  %832 = lshr i32 %831, 2
  %833 = trunc i32 %832 to i16
  %834 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %812, i64 %775
  store i16 %833, ptr %834, align 2, !tbaa !40
  br label %838

835:                                              ; preds = %247
  %836 = zext i8 %22 to i32
  %837 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.8, i32 noundef %836) #47
  br label %838

838:                                              ; preds = %835, %754, %692, %610, %525, %448, %372, %363, %335, %303
  %839 = phi i32 [ 1, %835 ], [ 0, %754 ], [ 0, %692 ], [ 0, %610 ], [ 0, %525 ], [ 0, %448 ], [ 0, %372 ], [ 0, %303 ], [ 0, %335 ], [ 0, %363 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #48
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %6) #48
  ret i32 %839
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #13

; Function Attrs: nofree nounwind optsize
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #13

; Function Attrs: nounwind optsize uwtable
define internal i32 @intrapred_luma_16x16(ptr nocapture noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.pix_pos, align 4
  %4 = alloca [17 x %struct.pix_pos], align 16
  %5 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %6 = getelementptr inbounds %struct.storable_picture, ptr %5, i64 0, i32 32
  %7 = load ptr, ptr %6, align 8, !tbaa !47
  %8 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !49
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #48
  call void @llvm.lifetime.start.p0(i64 408, ptr nonnull %4) #48
  br label %10

10:                                               ; preds = %10, %2
  %11 = phi i64 [ 0, %2 ], [ %16, %10 ]
  %12 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  %13 = getelementptr inbounds [17 x %struct.pix_pos], ptr %4, i64 0, i64 %11
  %14 = trunc i64 %11 to i32
  %15 = add i32 %14, -1
  call void %12(i32 noundef %9, i32 noundef -1, i32 noundef %15, i32 noundef 0, ptr noundef nonnull %13) #46
  %16 = add nuw nsw i64 %11, 1
  %17 = icmp eq i64 %16, 17
  br i1 %17, label %18, label %10, !llvm.loop !67

18:                                               ; preds = %10
  %19 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  call void %19(i32 noundef %9, i32 noundef 0, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %3) #46
  %20 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %20, i64 0, i32 30
  %22 = load i32, ptr %21, align 4, !tbaa !54
  %23 = icmp eq i32 %22, 0
  %24 = load i32, ptr %3, align 4, !tbaa !52
  br i1 %23, label %25, label %29

25:                                               ; preds = %18
  %26 = getelementptr inbounds [17 x %struct.pix_pos], ptr %4, i64 0, i64 1
  %27 = load i32, ptr %26, align 8, !tbaa !52
  %28 = load i32, ptr %4, align 16, !tbaa !52
  br label %70

29:                                               ; preds = %18
  %30 = icmp eq i32 %24, 0
  br i1 %30, label %39, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  %33 = load ptr, ptr %32, align 8, !tbaa !56
  %34 = getelementptr inbounds %struct.pix_pos, ptr %3, i64 0, i32 1
  %35 = load i32, ptr %34, align 4, !tbaa !57
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i32, ptr %33, i64 %36
  %38 = load i32, ptr %37, align 4, !tbaa !18
  br label %39

39:                                               ; preds = %31, %29
  %40 = phi i32 [ %38, %31 ], [ 0, %29 ]
  %41 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  br label %42

42:                                               ; preds = %55, %39
  %43 = phi i64 [ 1, %39 ], [ %58, %55 ]
  %44 = phi i32 [ 1, %39 ], [ %57, %55 ]
  %45 = getelementptr inbounds [17 x %struct.pix_pos], ptr %4, i64 0, i64 %43
  %46 = load i32, ptr %45, align 8, !tbaa !52
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %42
  %49 = load ptr, ptr %41, align 8, !tbaa !56
  %50 = getelementptr inbounds [17 x %struct.pix_pos], ptr %4, i64 0, i64 %43, i32 1
  %51 = load i32, ptr %50, align 4, !tbaa !57
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, ptr %49, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !18
  br label %55

55:                                               ; preds = %48, %42
  %56 = phi i32 [ %54, %48 ], [ 0, %42 ]
  %57 = and i32 %56, %44
  %58 = add nuw nsw i64 %43, 1
  %59 = icmp eq i64 %58, 17
  br i1 %59, label %60, label %42, !llvm.loop !68

60:                                               ; preds = %55
  %.lcssa4 = phi i32 [ %57, %55 ]
  %61 = load i32, ptr %4, align 16, !tbaa !52
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %70, label %63

63:                                               ; preds = %60
  %64 = load ptr, ptr %41, align 8, !tbaa !56
  %65 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %66 = load i32, ptr %65, align 4, !tbaa !57
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, ptr %64, i64 %67
  %69 = load i32, ptr %68, align 4, !tbaa !18
  br label %70

70:                                               ; preds = %63, %60, %25
  %71 = phi i32 [ %24, %25 ], [ %40, %60 ], [ %40, %63 ]
  %72 = phi i32 [ %27, %25 ], [ %.lcssa4, %60 ], [ %.lcssa4, %63 ]
  %73 = phi i32 [ %28, %25 ], [ 0, %60 ], [ %69, %63 ]
  switch i32 %1, label %337 [
    i32 0, label %84
    i32 1, label %109
    i32 2, label %74
    i32 3, label %196
  ]

74:                                               ; preds = %70
  %75 = icmp eq i32 %71, 0
  %76 = icmp eq i32 %72, 0
  %77 = getelementptr inbounds %struct.pix_pos, ptr %3, i64 0, i32 5
  %78 = load i32, ptr %77, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds ptr, ptr %7, i64 %79
  %81 = getelementptr inbounds %struct.pix_pos, ptr %3, i64 0, i32 4
  %82 = load i32, ptr %81, align 4
  %83 = sext i32 %82 to i64
  br label %133

84:                                               ; preds = %70
  %85 = icmp eq i32 %71, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %84
  call void @error(ptr noundef nonnull @.str.9, i32 noundef 500) #46
  br label %87

87:                                               ; preds = %86, %84
  %88 = getelementptr inbounds %struct.pix_pos, ptr %3, i64 0, i32 5
  %89 = load i32, ptr %88, align 4, !tbaa !59
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds ptr, ptr %7, i64 %90
  %92 = load ptr, ptr %91, align 8, !tbaa !13
  %93 = getelementptr inbounds %struct.pix_pos, ptr %3, i64 0, i32 4
  %94 = load i32, ptr %93, align 4, !tbaa !60
  %95 = sext i32 %94 to i64
  br label %96

96:                                               ; preds = %106, %87
  %97 = phi i64 [ 0, %87 ], [ %107, %106 ]
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i64 [ 0, %96 ], [ %104, %98 ]
  %100 = add nsw i64 %99, %95
  %101 = getelementptr inbounds i16, ptr %92, i64 %100
  %102 = load i16, ptr %101, align 2, !tbaa !40
  %103 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %97, i64 %99
  store i16 %102, ptr %103, align 2, !tbaa !40
  %104 = add nuw nsw i64 %99, 1
  %105 = icmp eq i64 %104, 16
  br i1 %105, label %106, label %98, !llvm.loop !69

106:                                              ; preds = %98
  %107 = add nuw nsw i64 %97, 1
  %108 = icmp eq i64 %107, 16
  br i1 %108, label %339, label %96, !llvm.loop !70

109:                                              ; preds = %70
  %110 = icmp eq i32 %72, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %109
  call void @error(ptr noundef nonnull @.str.10, i32 noundef 500) #46
  br label %112

112:                                              ; preds = %111, %109
  br label %113

113:                                              ; preds = %131, %112
  %114 = phi i64 [ %115, %131 ], [ 0, %112 ]
  %115 = add nuw nsw i64 %114, 1
  %116 = getelementptr inbounds [17 x %struct.pix_pos], ptr %4, i64 0, i64 %115, i32 5
  %117 = load i32, ptr %116, align 4, !tbaa !59
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds ptr, ptr %7, i64 %118
  %120 = load ptr, ptr %119, align 8, !tbaa !13
  %121 = getelementptr inbounds [17 x %struct.pix_pos], ptr %4, i64 0, i64 %115, i32 4
  %122 = load i32, ptr %121, align 8, !tbaa !60
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i16, ptr %120, i64 %123
  br label %125

125:                                              ; preds = %125, %113
  %126 = phi i64 [ 0, %113 ], [ %129, %125 ]
  %127 = load i16, ptr %124, align 2, !tbaa !40
  %128 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %114, i64 %126
  store i16 %127, ptr %128, align 2, !tbaa !40
  %129 = add nuw nsw i64 %126, 1
  %130 = icmp eq i64 %129, 16
  br i1 %130, label %131, label %125, !llvm.loop !71

131:                                              ; preds = %125
  %132 = icmp eq i64 %115, 16
  br i1 %132, label %339, label %113, !llvm.loop !72

133:                                              ; preds = %160, %74
  %134 = phi i64 [ 0, %74 ], [ %146, %160 ]
  %135 = phi i32 [ 0, %74 ], [ %145, %160 ]
  %136 = phi i32 [ 0, %74 ], [ %161, %160 ]
  br i1 %75, label %144, label %137

137:                                              ; preds = %133
  %138 = load ptr, ptr %80, align 8, !tbaa !13
  %139 = add nsw i64 %134, %83
  %140 = getelementptr inbounds i16, ptr %138, i64 %139
  %141 = load i16, ptr %140, align 2, !tbaa !40
  %142 = zext i16 %141 to i32
  %143 = add nsw i32 %135, %142
  br label %144

144:                                              ; preds = %137, %133
  %145 = phi i32 [ %143, %137 ], [ %135, %133 ]
  %146 = add nuw nsw i64 %134, 1
  br i1 %76, label %160, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds [17 x %struct.pix_pos], ptr %4, i64 0, i64 %146, i32 5
  %149 = load i32, ptr %148, align 4, !tbaa !59
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds ptr, ptr %7, i64 %150
  %152 = load ptr, ptr %151, align 8, !tbaa !13
  %153 = getelementptr inbounds [17 x %struct.pix_pos], ptr %4, i64 0, i64 %146, i32 4
  %154 = load i32, ptr %153, align 8, !tbaa !60
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i16, ptr %152, i64 %155
  %157 = load i16, ptr %156, align 2, !tbaa !40
  %158 = zext i16 %157 to i32
  %159 = add nsw i32 %136, %158
  br label %160

160:                                              ; preds = %147, %144
  %161 = phi i32 [ %159, %147 ], [ %136, %144 ]
  %162 = icmp eq i64 %146, 16
  br i1 %162, label %163, label %133, !llvm.loop !73

163:                                              ; preds = %160
  %.lcssa1 = phi i32 [ %161, %160 ]
  %.lcssa = phi i32 [ %145, %160 ]
  %164 = icmp ne i32 %71, 0
  %165 = icmp ne i32 %72, 0
  %166 = select i1 %164, i1 %165, i1 false
  %167 = add i32 %.lcssa1, 16
  %168 = add i32 %167, %.lcssa
  %169 = ashr i32 %168, 5
  %170 = select i1 %166, i32 %169, i32 0
  %171 = select i1 %75, i1 %165, i1 false
  %172 = add nsw i32 %.lcssa1, 8
  %173 = ashr i32 %172, 4
  %174 = select i1 %171, i32 %173, i32 %170
  %175 = select i1 %75, i1 true, i1 %165
  %176 = add nsw i32 %.lcssa, 8
  %177 = ashr i32 %176, 4
  %178 = select i1 %175, i32 %174, i32 %177
  %179 = select i1 %164, i1 true, i1 %165
  br i1 %179, label %183, label %180

180:                                              ; preds = %163
  %181 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 105
  %182 = load i32, ptr %181, align 4, !tbaa !61
  br label %183

183:                                              ; preds = %180, %163
  %184 = phi i32 [ %178, %163 ], [ %182, %180 ]
  %185 = trunc i32 %184 to i16
  br label %186

186:                                              ; preds = %193, %183
  %187 = phi i64 [ 0, %183 ], [ %194, %193 ]
  br label %188

188:                                              ; preds = %188, %186
  %189 = phi i64 [ 0, %186 ], [ %191, %188 ]
  %190 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %189, i64 %187
  store i16 %185, ptr %190, align 2, !tbaa !40
  %191 = add nuw nsw i64 %189, 1
  %192 = icmp eq i64 %191, 16
  br i1 %192, label %193, label %188, !llvm.loop !74

193:                                              ; preds = %188
  %194 = add nuw nsw i64 %187, 1
  %195 = icmp eq i64 %194, 16
  br i1 %195, label %339, label %186, !llvm.loop !75

196:                                              ; preds = %70
  %197 = icmp ne i32 %71, 0
  %198 = icmp ne i32 %73, 0
  %199 = select i1 %197, i1 %198, i1 false
  %200 = icmp ne i32 %72, 0
  %201 = select i1 %199, i1 %200, i1 false
  br i1 %201, label %203, label %202

202:                                              ; preds = %196
  call void @error(ptr noundef nonnull @.str.11, i32 noundef 500) #46
  br label %203

203:                                              ; preds = %202, %196
  %204 = getelementptr inbounds %struct.pix_pos, ptr %3, i64 0, i32 5
  %205 = load i32, ptr %204, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds ptr, ptr %7, i64 %206
  %208 = getelementptr inbounds %struct.pix_pos, ptr %3, i64 0, i32 4
  %209 = load i32, ptr %208, align 4
  %210 = add nsw i32 %209, 7
  %211 = add nsw i32 %209, 15
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 5
  %214 = load i32, ptr %213, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds ptr, ptr %7, i64 %215
  %217 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 4
  %218 = load i32, ptr %217, align 16
  %219 = sext i32 %218 to i64
  %220 = sext i32 %210 to i64
  %221 = load ptr, ptr %207, align 8, !tbaa !13
  %222 = getelementptr inbounds i16, ptr %221, i64 %212
  br label %223

223:                                              ; preds = %249, %203
  %224 = phi i64 [ 1, %203 ], [ %280, %249 ]
  %225 = phi i32 [ 0, %203 ], [ %279, %249 ]
  %226 = phi i32 [ 0, %203 ], [ %252, %249 ]
  %227 = icmp eq i64 %224, 8
  br i1 %227, label %240, label %228

228:                                              ; preds = %223
  %229 = add nsw i64 %224, %220
  %230 = getelementptr inbounds i16, ptr %221, i64 %229
  %231 = load i16, ptr %230, align 2, !tbaa !40
  %232 = zext i16 %231 to i32
  %233 = sub nsw i64 %220, %224
  %234 = getelementptr inbounds i16, ptr %221, i64 %233
  %235 = load i16, ptr %234, align 2, !tbaa !40
  %236 = zext i16 %235 to i32
  %237 = sub nsw i32 %232, %236
  %238 = trunc i64 %224 to i32
  %239 = mul nsw i32 %237, %238
  br label %249

240:                                              ; preds = %223
  %241 = load i16, ptr %222, align 2, !tbaa !40
  %242 = zext i16 %241 to i32
  %243 = load ptr, ptr %216, align 8, !tbaa !13
  %244 = getelementptr inbounds i16, ptr %243, i64 %219
  %245 = load i16, ptr %244, align 2, !tbaa !40
  %246 = zext i16 %245 to i32
  %247 = sub nsw i32 %242, %246
  %248 = shl nsw i32 %247, 3
  br label %249

249:                                              ; preds = %240, %228
  %250 = phi i32 [ 8, %240 ], [ %238, %228 ]
  %251 = phi i32 [ %248, %240 ], [ %239, %228 ]
  %252 = add nsw i32 %251, %226
  %253 = add nuw nsw i64 %224, 8
  %254 = getelementptr inbounds [17 x %struct.pix_pos], ptr %4, i64 0, i64 %253, i32 5
  %255 = load i32, ptr %254, align 4, !tbaa !59
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds ptr, ptr %7, i64 %256
  %258 = load ptr, ptr %257, align 8, !tbaa !13
  %259 = getelementptr inbounds [17 x %struct.pix_pos], ptr %4, i64 0, i64 %253, i32 4
  %260 = load i32, ptr %259, align 8, !tbaa !60
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i16, ptr %258, i64 %261
  %263 = load i16, ptr %262, align 2, !tbaa !40
  %264 = zext i16 %263 to i32
  %265 = sub nuw nsw i64 8, %224
  %266 = getelementptr inbounds [17 x %struct.pix_pos], ptr %4, i64 0, i64 %265, i32 5
  %267 = load i32, ptr %266, align 4, !tbaa !59
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds ptr, ptr %7, i64 %268
  %270 = load ptr, ptr %269, align 8, !tbaa !13
  %271 = getelementptr inbounds [17 x %struct.pix_pos], ptr %4, i64 0, i64 %265, i32 4
  %272 = load i32, ptr %271, align 8, !tbaa !60
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds i16, ptr %270, i64 %273
  %275 = load i16, ptr %274, align 2, !tbaa !40
  %276 = zext i16 %275 to i32
  %277 = sub nsw i32 %264, %276
  %278 = mul nsw i32 %277, %250
  %279 = add nsw i32 %278, %225
  %280 = add nuw nsw i64 %224, 1
  %281 = icmp eq i64 %280, 9
  br i1 %281, label %282, label %223, !llvm.loop !76

282:                                              ; preds = %249
  %.lcssa3 = phi i32 [ %252, %249 ]
  %.lcssa2 = phi i32 [ %279, %249 ]
  %283 = mul nsw i32 %.lcssa3, 5
  %284 = add nsw i32 %283, 32
  %285 = ashr i32 %284, 6
  %286 = mul nsw i32 %.lcssa2, 5
  %287 = add nsw i32 %286, 32
  %288 = ashr i32 %287, 6
  %289 = getelementptr inbounds i16, ptr %221, i64 %212
  %290 = load i16, ptr %289, align 2, !tbaa !40
  %291 = zext i16 %290 to i32
  %292 = getelementptr inbounds [17 x %struct.pix_pos], ptr %4, i64 0, i64 16, i32 5
  %293 = load i32, ptr %292, align 4, !tbaa !59
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds ptr, ptr %7, i64 %294
  %296 = load ptr, ptr %295, align 8, !tbaa !13
  %297 = getelementptr inbounds [17 x %struct.pix_pos], ptr %4, i64 0, i64 16, i32 4
  %298 = load i32, ptr %297, align 16, !tbaa !60
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds i16, ptr %296, i64 %299
  %301 = load i16, ptr %300, align 2, !tbaa !40
  %302 = zext i16 %301 to i32
  %303 = add nuw nsw i32 %302, %291
  %304 = shl nuw nsw i32 %303, 4
  %305 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 107
  %306 = load i32, ptr %305, align 4, !tbaa !77
  %307 = add nuw nsw i32 %304, 16
  %308 = insertelement <8 x i32> poison, i32 %285, i64 0
  %309 = shufflevector <8 x i32> %308, <8 x i32> poison, <8 x i32> zeroinitializer
  %310 = insertelement <8 x i32> poison, i32 %306, i64 0
  %311 = shufflevector <8 x i32> %310, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %312

312:                                              ; preds = %334, %282
  %313 = phi i64 [ 0, %282 ], [ %335, %334 ]
  %314 = trunc i64 %313 to i32
  %315 = add i32 %314, -7
  %316 = mul i32 %315, %288
  %317 = add i32 %307, %316
  %318 = insertelement <8 x i32> poison, i32 %317, i64 0
  %319 = shufflevector <8 x i32> %318, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %320

320:                                              ; preds = %320, %312
  %321 = phi i64 [ 0, %312 ], [ %331, %320 ]
  %322 = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %312 ], [ %332, %320 ]
  %323 = add <8 x i32> %322, <i32 -7, i32 -7, i32 -7, i32 -7, i32 -7, i32 -7, i32 -7, i32 -7>
  %324 = mul <8 x i32> %323, %309
  %325 = add <8 x i32> %319, %324
  %326 = ashr <8 x i32> %325, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>
  %327 = call <8 x i32> @llvm.smax.v8i32(<8 x i32> %326, <8 x i32> zeroinitializer)
  %328 = call <8 x i32> @llvm.smin.v8i32(<8 x i32> %327, <8 x i32> %311)
  %329 = trunc <8 x i32> %328 to <8 x i16>
  %330 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %313, i64 %321
  store <8 x i16> %329, ptr %330, align 2, !tbaa !40
  %331 = add nuw i64 %321, 8
  %332 = add <8 x i32> %322, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %333 = icmp eq i64 %331, 16
  br i1 %333, label %334, label %320, !llvm.loop !78

334:                                              ; preds = %320
  %335 = add nuw nsw i64 %313, 1
  %336 = icmp eq i64 %335, 16
  br i1 %336, label %339, label %312, !llvm.loop !81

337:                                              ; preds = %70
  %338 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.12, i32 noundef %1) #47
  br label %339

339:                                              ; preds = %337, %334, %193, %131, %106
  %340 = phi i32 [ 1, %337 ], [ 0, %106 ], [ 0, %131 ], [ 0, %193 ], [ 0, %334 ]
  call void @llvm.lifetime.end.p0(i64 408, ptr nonnull %4) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #48
  ret i32 %340
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i32> @llvm.smax.v8i32(<8 x i32>, <8 x i32>) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i32> @llvm.smin.v8i32(<8 x i32>, <8 x i32>) #12

; Function Attrs: nounwind optsize uwtable
define internal void @intrapred_chroma(ptr nocapture noundef %0, i32 noundef %1) #0 {
  %3 = alloca [4 x [4 x i32]], align 16
  %4 = alloca %struct.pix_pos, align 4
  %5 = alloca [17 x %struct.pix_pos], align 16
  %6 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 33
  %8 = load ptr, ptr %7, align 8, !tbaa !82
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %3) #48
  %9 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 50
  %10 = load i32, ptr %9, align 4, !tbaa !83
  %11 = add nsw i32 %10, -1
  %12 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %13 = load i32, ptr %12, align 4, !tbaa !49
  %14 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %15 = load ptr, ptr %14, align 8, !tbaa !84
  %16 = zext i32 %13 to i64
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #48
  call void @llvm.lifetime.start.p0(i64 408, ptr nonnull %5) #48
  %17 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 115
  %18 = load i32, ptr %17, align 4, !tbaa !85
  %19 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 116
  %20 = load i32, ptr %19, align 8, !tbaa !86
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %2
  %23 = add nuw i32 %20, 1
  %24 = zext i32 %23 to i64
  br label %25

25:                                               ; preds = %25, %22
  %26 = phi i64 [ 0, %22 ], [ %31, %25 ]
  %27 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  %28 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %26
  %29 = trunc i64 %26 to i32
  %30 = add i32 %29, -1
  call void %27(i32 noundef %13, i32 noundef -1, i32 noundef %30, i32 noundef 1, ptr noundef nonnull %28) #46
  %31 = add nuw nsw i64 %26, 1
  %32 = icmp eq i64 %31, %24
  br i1 %32, label %33, label %25, !llvm.loop !87

33:                                               ; preds = %25, %2
  %34 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  call void %34(i32 noundef %13, i32 noundef 0, i32 noundef -1, i32 noundef 1, ptr noundef nonnull %4) #46
  %35 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %36 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %35, i64 0, i32 30
  %37 = load i32, ptr %36, align 4, !tbaa !54
  %38 = icmp eq i32 %37, 0
  %39 = load i32, ptr %4, align 4, !tbaa !52
  br i1 %38, label %40, label %44

40:                                               ; preds = %33
  %41 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 1
  %42 = load i32, ptr %41, align 8, !tbaa !52
  %43 = load i32, ptr %5, align 16, !tbaa !52
  br label %116

44:                                               ; preds = %33
  %45 = icmp eq i32 %39, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  %48 = load ptr, ptr %47, align 8, !tbaa !56
  %49 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %50 = load i32, ptr %49, align 4, !tbaa !57
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, ptr %48, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !18
  br label %54

54:                                               ; preds = %46, %44
  %55 = phi i32 [ %53, %46 ], [ 0, %44 ]
  %56 = sdiv i32 %20, 2
  %57 = icmp sgt i32 %20, 1
  br i1 %57, label %58, label %61

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  %60 = zext i32 %56 to i64
  br label %68

61:                                               ; preds = %82, %54
  %62 = phi i32 [ 1, %54 ], [ %84, %82 ]
  %63 = icmp slt i32 %56, %20
  br i1 %63, label %64, label %104

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  %66 = sext i32 %56 to i64
  %67 = sext i32 %20 to i64
  br label %86

68:                                               ; preds = %82, %58
  %69 = phi i64 [ 0, %58 ], [ %71, %82 ]
  %70 = phi i32 [ 1, %58 ], [ %84, %82 ]
  %71 = add nuw nsw i64 %69, 1
  %72 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %71
  %73 = load i32, ptr %72, align 8, !tbaa !52
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %68
  %76 = load ptr, ptr %59, align 8, !tbaa !56
  %77 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %71, i32 1
  %78 = load i32, ptr %77, align 4, !tbaa !57
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i32, ptr %76, i64 %79
  %81 = load i32, ptr %80, align 4, !tbaa !18
  br label %82

82:                                               ; preds = %75, %68
  %83 = phi i32 [ %81, %75 ], [ 0, %68 ]
  %84 = and i32 %83, %70
  %85 = icmp eq i64 %71, %60
  br i1 %85, label %61, label %68, !llvm.loop !88

86:                                               ; preds = %100, %64
  %87 = phi i64 [ %66, %64 ], [ %89, %100 ]
  %88 = phi i32 [ 1, %64 ], [ %102, %100 ]
  %89 = add nsw i64 %87, 1
  %90 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %89
  %91 = load i32, ptr %90, align 8, !tbaa !52
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %100, label %93

93:                                               ; preds = %86
  %94 = load ptr, ptr %65, align 8, !tbaa !56
  %95 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %89, i32 1
  %96 = load i32, ptr %95, align 4, !tbaa !57
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i32, ptr %94, i64 %97
  %99 = load i32, ptr %98, align 4, !tbaa !18
  br label %100

100:                                              ; preds = %93, %86
  %101 = phi i32 [ %99, %93 ], [ 0, %86 ]
  %102 = and i32 %101, %88
  %103 = icmp eq i64 %89, %67
  br i1 %103, label %104, label %86, !llvm.loop !89

104:                                              ; preds = %100, %61
  %105 = phi i32 [ 1, %61 ], [ %102, %100 ]
  %106 = load i32, ptr %5, align 16, !tbaa !52
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  %110 = load ptr, ptr %109, align 8, !tbaa !56
  %111 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 1
  %112 = load i32, ptr %111, align 4, !tbaa !57
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, ptr %110, i64 %113
  %115 = load i32, ptr %114, align 4, !tbaa !18
  br label %116

116:                                              ; preds = %108, %104, %40
  %117 = phi i32 [ %39, %40 ], [ %55, %104 ], [ %55, %108 ]
  %118 = phi i32 [ %42, %40 ], [ %105, %104 ], [ %105, %108 ]
  %119 = phi i32 [ %42, %40 ], [ %62, %104 ], [ %62, %108 ]
  %120 = phi i32 [ %43, %40 ], [ 0, %104 ], [ %115, %108 ]
  %121 = getelementptr inbounds %struct.macroblock, ptr %15, i64 %16, i32 19
  %122 = load i32, ptr %121, align 8, !tbaa !90
  switch i32 %122, label %745 [
    i32 0, label %123
    i32 3, label %356
    i32 1, label %642
    i32 2, label %694
  ]

123:                                              ; preds = %116
  %124 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 113
  %125 = load i32, ptr %124, align 4, !tbaa !93
  %126 = sdiv i32 %125, 2
  %127 = icmp sgt i32 %125, 1
  br i1 %127, label %128, label %746

128:                                              ; preds = %123
  %129 = sext i32 %11 to i64
  %130 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 106
  %131 = load i32, ptr %130, align 8, !tbaa !94
  %132 = icmp eq i32 %117, 0
  %133 = sext i32 %1 to i64
  %134 = getelementptr inbounds ptr, ptr %8, i64 %133
  %135 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 5
  %136 = load i32, ptr %135, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 4
  %139 = load i32, ptr %138, align 4
  %140 = icmp eq i32 %118, 0
  %141 = icmp eq i32 %119, 0
  %142 = sext i32 %139 to i64
  %143 = zext i32 %126 to i64
  br label %144

144:                                              ; preds = %349, %128
  %145 = phi i64 [ 0, %128 ], [ %350, %349 ]
  br label %146

146:                                              ; preds = %346, %144
  %147 = phi i64 [ 0, %144 ], [ %347, %346 ]
  %148 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %129, i64 %145, i64 %147
  %149 = load i8, ptr %148, align 1, !tbaa !14
  %150 = zext i8 %149 to i32
  %151 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %129, i64 %145, i64 %147
  %152 = load i8, ptr %151, align 1, !tbaa !14
  %153 = getelementptr inbounds [4 x [4 x i32]], ptr %3, i64 0, i64 %145, i64 %147
  store i32 %131, ptr %153, align 4, !tbaa !18
  %154 = getelementptr inbounds [3 x [4 x [4 x i32]]], ptr @__const.intrapred_chroma.block_pos, i64 0, i64 %129, i64 %145, i64 %147
  %155 = load i32, ptr %154, align 4, !tbaa !18
  switch i32 %155, label %346 [
    i32 0, label %156
    i32 1, label %205
    i32 2, label %250
    i32 3, label %295
  ]

156:                                              ; preds = %146
  br i1 %132, label %167, label %157

157:                                              ; preds = %156
  %158 = load ptr, ptr %134, align 8, !tbaa !13
  %159 = getelementptr inbounds ptr, ptr %158, i64 %137
  %160 = load ptr, ptr %159, align 8, !tbaa !13
  %161 = zext i8 %152 to i64
  %162 = add nsw i64 %161, %142
  %163 = getelementptr inbounds i16, ptr %160, i64 %162
  %164 = load <4 x i16>, ptr %163, align 2, !tbaa !40
  %165 = zext <4 x i16> %164 to <4 x i32>
  %166 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %165)
  br i1 %141, label %199, label %170

167:                                              ; preds = %156
  br i1 %141, label %346, label %168

168:                                              ; preds = %167
  %169 = load ptr, ptr %134, align 8, !tbaa !13
  br label %170

170:                                              ; preds = %168, %157
  %171 = phi ptr [ %169, %168 ], [ %158, %157 ]
  %172 = phi i32 [ 0, %168 ], [ %166, %157 ]
  %173 = add nuw nsw i32 %150, 5
  %174 = zext i8 %149 to i64
  %175 = add nuw nsw i64 %174, 1
  %176 = zext i32 %173 to i64
  br label %177

177:                                              ; preds = %177, %170
  %178 = phi i64 [ %175, %170 ], [ %192, %177 ]
  %179 = phi i32 [ 0, %170 ], [ %191, %177 ]
  %180 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %178, i32 5
  %181 = load i32, ptr %180, align 4, !tbaa !59
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds ptr, ptr %171, i64 %182
  %184 = load ptr, ptr %183, align 8, !tbaa !13
  %185 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %178, i32 4
  %186 = load i32, ptr %185, align 8, !tbaa !60
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds i16, ptr %184, i64 %187
  %189 = load i16, ptr %188, align 2, !tbaa !40
  %190 = zext i16 %189 to i32
  %191 = add nuw nsw i32 %179, %190
  %192 = add nuw nsw i64 %178, 1
  %193 = icmp eq i64 %192, %176
  br i1 %193, label %194, label %177, !llvm.loop !95

194:                                              ; preds = %177
  %.lcssa1 = phi i32 [ %191, %177 ]
  br i1 %132, label %202, label %195

195:                                              ; preds = %194
  %196 = add i32 %172, 4
  %197 = add i32 %196, %.lcssa1
  %198 = ashr i32 %197, 3
  br label %344

199:                                              ; preds = %157
  %200 = add nuw nsw i32 %166, 2
  %201 = lshr i32 %200, 2
  br label %344

202:                                              ; preds = %194
  %203 = add nuw nsw i32 %.lcssa1, 2
  %204 = lshr i32 %203, 2
  br label %344

205:                                              ; preds = %146
  br i1 %132, label %216, label %206

206:                                              ; preds = %205
  %207 = load ptr, ptr %134, align 8, !tbaa !13
  %208 = getelementptr inbounds ptr, ptr %207, i64 %137
  %209 = load ptr, ptr %208, align 8, !tbaa !13
  %210 = zext i8 %152 to i64
  %211 = add nsw i64 %210, %142
  %212 = getelementptr inbounds i16, ptr %209, i64 %211
  %213 = load <4 x i16>, ptr %212, align 2, !tbaa !40
  %214 = zext <4 x i16> %213 to <4 x i32>
  %215 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %214)
  br label %240

216:                                              ; preds = %205
  br i1 %141, label %346, label %217

217:                                              ; preds = %216
  %218 = add nuw nsw i32 %150, 5
  %219 = load ptr, ptr %134, align 8, !tbaa !13
  %220 = zext i8 %149 to i64
  %221 = add nuw nsw i64 %220, 1
  %222 = zext i32 %218 to i64
  br label %223

223:                                              ; preds = %223, %217
  %224 = phi i64 [ %221, %217 ], [ %238, %223 ]
  %225 = phi i32 [ 0, %217 ], [ %237, %223 ]
  %226 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %224, i32 5
  %227 = load i32, ptr %226, align 4, !tbaa !59
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds ptr, ptr %219, i64 %228
  %230 = load ptr, ptr %229, align 8, !tbaa !13
  %231 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %224, i32 4
  %232 = load i32, ptr %231, align 8, !tbaa !60
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds i16, ptr %230, i64 %233
  %235 = load i16, ptr %234, align 2, !tbaa !40
  %236 = zext i16 %235 to i32
  %237 = add nuw nsw i32 %225, %236
  %238 = add nuw nsw i64 %224, 1
  %239 = icmp eq i64 %238, %222
  br i1 %239, label %240, label %223, !llvm.loop !96

240:                                              ; preds = %223, %206
  %241 = phi i32 [ %215, %206 ], [ 0, %223 ]
  %242 = phi i32 [ 0, %206 ], [ %237, %223 ]
  br i1 %132, label %246, label %243

243:                                              ; preds = %240
  %244 = add nsw i32 %241, 2
  %245 = ashr i32 %244, 2
  br label %344

246:                                              ; preds = %240
  br i1 %141, label %346, label %247

247:                                              ; preds = %246
  %248 = add nsw i32 %242, 2
  %249 = ashr i32 %248, 2
  br label %344

250:                                              ; preds = %146
  br i1 %140, label %274, label %251

251:                                              ; preds = %250
  %252 = add nuw nsw i32 %150, 5
  %253 = load ptr, ptr %134, align 8, !tbaa !13
  %254 = zext i8 %149 to i64
  %255 = add nuw nsw i64 %254, 1
  %256 = zext i32 %252 to i64
  br label %257

257:                                              ; preds = %257, %251
  %258 = phi i64 [ %255, %251 ], [ %272, %257 ]
  %259 = phi i32 [ 0, %251 ], [ %271, %257 ]
  %260 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %258, i32 5
  %261 = load i32, ptr %260, align 4, !tbaa !59
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds ptr, ptr %253, i64 %262
  %264 = load ptr, ptr %263, align 8, !tbaa !13
  %265 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %258, i32 4
  %266 = load i32, ptr %265, align 8, !tbaa !60
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i16, ptr %264, i64 %267
  %269 = load i16, ptr %268, align 2, !tbaa !40
  %270 = zext i16 %269 to i32
  %271 = add nuw nsw i32 %259, %270
  %272 = add nuw nsw i64 %258, 1
  %273 = icmp eq i64 %272, %256
  br i1 %273, label %285, label %257, !llvm.loop !97

274:                                              ; preds = %250
  br i1 %132, label %346, label %275

275:                                              ; preds = %274
  %276 = load ptr, ptr %134, align 8, !tbaa !13
  %277 = getelementptr inbounds ptr, ptr %276, i64 %137
  %278 = load ptr, ptr %277, align 8, !tbaa !13
  %279 = zext i8 %152 to i64
  %280 = add nsw i64 %279, %142
  %281 = getelementptr inbounds i16, ptr %278, i64 %280
  %282 = load <4 x i16>, ptr %281, align 2, !tbaa !40
  %283 = zext <4 x i16> %282 to <4 x i32>
  %284 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %283)
  br label %285

285:                                              ; preds = %275, %257
  %286 = phi i32 [ %284, %275 ], [ 0, %257 ]
  %287 = phi i32 [ 0, %275 ], [ %271, %257 ]
  br i1 %140, label %291, label %288

288:                                              ; preds = %285
  %289 = add nsw i32 %287, 2
  %290 = ashr i32 %289, 2
  br label %344

291:                                              ; preds = %285
  br i1 %132, label %346, label %292

292:                                              ; preds = %291
  %293 = add nsw i32 %286, 2
  %294 = ashr i32 %293, 2
  br label %344

295:                                              ; preds = %146
  br i1 %132, label %306, label %296

296:                                              ; preds = %295
  %297 = load ptr, ptr %134, align 8, !tbaa !13
  %298 = getelementptr inbounds ptr, ptr %297, i64 %137
  %299 = load ptr, ptr %298, align 8, !tbaa !13
  %300 = zext i8 %152 to i64
  %301 = add nsw i64 %300, %142
  %302 = getelementptr inbounds i16, ptr %299, i64 %301
  %303 = load <4 x i16>, ptr %302, align 2, !tbaa !40
  %304 = zext <4 x i16> %303 to <4 x i32>
  %305 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %304)
  br i1 %140, label %338, label %309

306:                                              ; preds = %295
  br i1 %140, label %346, label %307

307:                                              ; preds = %306
  %308 = load ptr, ptr %134, align 8, !tbaa !13
  br label %309

309:                                              ; preds = %307, %296
  %310 = phi ptr [ %308, %307 ], [ %297, %296 ]
  %311 = phi i32 [ 0, %307 ], [ %305, %296 ]
  %312 = add nuw nsw i32 %150, 5
  %313 = zext i8 %149 to i64
  %314 = add nuw nsw i64 %313, 1
  %315 = zext i32 %312 to i64
  br label %316

316:                                              ; preds = %316, %309
  %317 = phi i64 [ %314, %309 ], [ %331, %316 ]
  %318 = phi i32 [ 0, %309 ], [ %330, %316 ]
  %319 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %317, i32 5
  %320 = load i32, ptr %319, align 4, !tbaa !59
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds ptr, ptr %310, i64 %321
  %323 = load ptr, ptr %322, align 8, !tbaa !13
  %324 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %317, i32 4
  %325 = load i32, ptr %324, align 8, !tbaa !60
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i16, ptr %323, i64 %326
  %328 = load i16, ptr %327, align 2, !tbaa !40
  %329 = zext i16 %328 to i32
  %330 = add nuw nsw i32 %318, %329
  %331 = add nuw nsw i64 %317, 1
  %332 = icmp eq i64 %331, %315
  br i1 %332, label %333, label %316, !llvm.loop !98

333:                                              ; preds = %316
  %.lcssa = phi i32 [ %330, %316 ]
  br i1 %132, label %341, label %334

334:                                              ; preds = %333
  %335 = add i32 %311, 4
  %336 = add i32 %335, %.lcssa
  %337 = ashr i32 %336, 3
  br label %344

338:                                              ; preds = %296
  %339 = add nuw nsw i32 %305, 2
  %340 = lshr i32 %339, 2
  br label %344

341:                                              ; preds = %333
  %342 = add nuw nsw i32 %.lcssa, 2
  %343 = lshr i32 %342, 2
  br label %344

344:                                              ; preds = %341, %338, %334, %292, %288, %247, %243, %202, %199, %195
  %345 = phi i32 [ %201, %199 ], [ %204, %202 ], [ %198, %195 ], [ %249, %247 ], [ %245, %243 ], [ %294, %292 ], [ %290, %288 ], [ %340, %338 ], [ %343, %341 ], [ %337, %334 ]
  store i32 %345, ptr %153, align 4, !tbaa !18
  br label %346

346:                                              ; preds = %344, %306, %291, %274, %246, %216, %167, %146
  %347 = add nuw nsw i64 %147, 1
  %348 = icmp eq i64 %347, 4
  br i1 %348, label %349, label %146, !llvm.loop !99

349:                                              ; preds = %346
  %350 = add nuw nsw i64 %145, 1
  %351 = icmp eq i64 %350, %143
  br i1 %351, label %352, label %144, !llvm.loop !100

352:                                              ; preds = %349
  br i1 %127, label %353, label %746

353:                                              ; preds = %352
  %354 = sext i32 %11 to i64
  %355 = zext i32 %126 to i64
  br label %614

356:                                              ; preds = %116
  %357 = icmp ne i32 %120, 0
  %358 = icmp ne i32 %119, 0
  %359 = select i1 %357, i1 %358, i1 false
  %360 = icmp ne i32 %118, 0
  %361 = select i1 %359, i1 %360, i1 false
  %362 = icmp ne i32 %117, 0
  %363 = select i1 %361, i1 %362, i1 false
  br i1 %363, label %365, label %364

364:                                              ; preds = %356
  call void @error(ptr noundef nonnull @.str.13, i32 noundef -1) #46
  br label %365

365:                                              ; preds = %364, %356
  %366 = sdiv i32 %18, 2
  %367 = sext i32 %1 to i64
  %368 = getelementptr inbounds ptr, ptr %8, i64 %367
  %369 = load ptr, ptr %368, align 8, !tbaa !13
  %370 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 5
  %371 = load i32, ptr %370, align 4, !tbaa !59
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds ptr, ptr %369, i64 %372
  %374 = load ptr, ptr %373, align 8, !tbaa !13
  %375 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 4
  %376 = load i32, ptr %375, align 4, !tbaa !60
  %377 = add i32 %18, -1
  %378 = add i32 %377, %376
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds i16, ptr %374, i64 %379
  %381 = load i16, ptr %380, align 2, !tbaa !40
  %382 = zext i16 %381 to i32
  %383 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 5
  %384 = load i32, ptr %383, align 4, !tbaa !59
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds ptr, ptr %369, i64 %385
  %387 = load ptr, ptr %386, align 8, !tbaa !13
  %388 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 4
  %389 = load i32, ptr %388, align 16, !tbaa !60
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds i16, ptr %387, i64 %390
  %392 = load i16, ptr %391, align 2, !tbaa !40
  %393 = zext i16 %392 to i32
  %394 = sub nsw i32 %382, %393
  %395 = mul nsw i32 %394, %366
  %396 = icmp sgt i32 %18, 3
  br i1 %396, label %397, label %423

397:                                              ; preds = %365
  %398 = add nsw i32 %376, %366
  %399 = add nsw i32 %398, -2
  %400 = sext i32 %398 to i64
  %401 = call i32 @llvm.smax.i32(i32 %366, i32 2)
  %402 = add nsw i32 %401, -1
  %403 = zext i32 %402 to i64
  br label %404

404:                                              ; preds = %404, %397
  %405 = phi i64 [ 0, %397 ], [ %407, %404 ]
  %406 = phi i32 [ %395, %397 ], [ %421, %404 ]
  %407 = add nuw nsw i64 %405, 1
  %408 = add nsw i64 %405, %400
  %409 = getelementptr inbounds i16, ptr %374, i64 %408
  %410 = load i16, ptr %409, align 2, !tbaa !40
  %411 = zext i16 %410 to i32
  %412 = trunc i64 %405 to i32
  %413 = sub i32 %399, %412
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds i16, ptr %374, i64 %414
  %416 = load i16, ptr %415, align 2, !tbaa !40
  %417 = zext i16 %416 to i32
  %418 = sub nsw i32 %411, %417
  %419 = trunc i64 %407 to i32
  %420 = mul nsw i32 %418, %419
  %421 = add nsw i32 %420, %406
  %422 = icmp eq i64 %407, %403
  br i1 %422, label %423, label %404, !llvm.loop !101

423:                                              ; preds = %404, %365
  %424 = phi i32 [ %395, %365 ], [ %421, %404 ]
  %425 = sdiv i32 %20, 2
  %426 = sext i32 %20 to i64
  %427 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %426, i32 5
  %428 = load i32, ptr %427, align 4, !tbaa !59
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds ptr, ptr %369, i64 %429
  %431 = load ptr, ptr %430, align 8, !tbaa !13
  %432 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %426, i32 4
  %433 = load i32, ptr %432, align 8, !tbaa !60
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds i16, ptr %431, i64 %434
  %436 = load i16, ptr %435, align 2, !tbaa !40
  %437 = zext i16 %436 to i32
  %438 = sub nsw i32 %437, %393
  %439 = mul nsw i32 %438, %425
  %440 = icmp sgt i32 %20, 3
  br i1 %440, label %441, label %481

441:                                              ; preds = %423
  %442 = add nsw i32 %425, -1
  %443 = add nsw i32 %425, 1
  %444 = sext i32 %443 to i64
  %445 = sext i32 %442 to i64
  %446 = call i32 @llvm.smax.i32(i32 %442, i32 1)
  %447 = zext i32 %446 to i64
  br label %448

448:                                              ; preds = %448, %441
  %449 = phi i64 [ 0, %441 ], [ %451, %448 ]
  %450 = phi i32 [ %439, %441 ], [ %479, %448 ]
  %451 = add nuw nsw i64 %449, 1
  %452 = add nsw i64 %449, %444
  %453 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %452, i32 5
  %454 = load i32, ptr %453, align 4, !tbaa !59
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds ptr, ptr %369, i64 %455
  %457 = load ptr, ptr %456, align 8, !tbaa !13
  %458 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %452, i32 4
  %459 = load i32, ptr %458, align 8, !tbaa !60
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds i16, ptr %457, i64 %460
  %462 = load i16, ptr %461, align 2, !tbaa !40
  %463 = zext i16 %462 to i32
  %464 = sub nsw i64 %445, %449
  %465 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %464, i32 5
  %466 = load i32, ptr %465, align 4, !tbaa !59
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds ptr, ptr %369, i64 %467
  %469 = load ptr, ptr %468, align 8, !tbaa !13
  %470 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %464, i32 4
  %471 = load i32, ptr %470, align 8, !tbaa !60
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds i16, ptr %469, i64 %472
  %474 = load i16, ptr %473, align 2, !tbaa !40
  %475 = zext i16 %474 to i32
  %476 = sub nsw i32 %463, %475
  %477 = trunc i64 %451 to i32
  %478 = mul nsw i32 %476, %477
  %479 = add nsw i32 %478, %450
  %480 = icmp eq i64 %451, %447
  br i1 %480, label %481, label %448, !llvm.loop !102

481:                                              ; preds = %448, %423
  %482 = phi i32 [ %439, %423 ], [ %479, %448 ]
  %483 = icmp eq i32 %18, 8
  %484 = select i1 %483, i32 17, i32 5
  %485 = mul nsw i32 %424, %484
  %486 = shl nsw i32 %18, 1
  %487 = add nsw i32 %485, %486
  %488 = select i1 %483, i32 5, i32 6
  %489 = ashr i32 %487, %488
  %490 = icmp eq i32 %20, 8
  %491 = select i1 %490, i32 17, i32 5
  %492 = mul nsw i32 %482, %491
  %493 = shl nsw i32 %20, 1
  %494 = add nsw i32 %492, %493
  %495 = select i1 %490, i32 5, i32 6
  %496 = ashr i32 %494, %495
  %497 = icmp sgt i32 %20, 0
  br i1 %497, label %498, label %746

498:                                              ; preds = %481
  %499 = add nuw nsw i32 %437, %382
  %500 = shl nuw nsw i32 %499, 4
  %501 = icmp sgt i32 %18, 0
  %502 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 108
  %503 = add nuw nsw i32 %500, 16
  %504 = zext i32 %20 to i64
  %505 = zext i32 %18 to i64
  %506 = add nuw nsw i64 %505, 7
  %507 = and i64 %506, 8589934584
  %508 = add nsw i64 %505, -1
  %509 = insertelement <8 x i64> poison, i64 %508, i64 0
  %510 = shufflevector <8 x i64> %509, <8 x i64> poison, <8 x i32> zeroinitializer
  %511 = insertelement <8 x i32> poison, i32 %366, i64 0
  %512 = shufflevector <8 x i32> %511, <8 x i32> poison, <8 x i32> zeroinitializer
  %513 = insertelement <8 x i32> poison, i32 %489, i64 0
  %514 = shufflevector <8 x i32> %513, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %515

515:                                              ; preds = %611, %498
  %516 = phi i64 [ 0, %498 ], [ %612, %611 ]
  br i1 %501, label %517, label %611

517:                                              ; preds = %515
  %518 = trunc i64 %516 to i32
  %519 = sub i32 %518, %425
  %520 = add i32 %519, 1
  %521 = mul nsw i32 %520, %496
  %522 = add i32 %503, %521
  %523 = load i32, ptr %502, align 8, !tbaa !103
  %524 = insertelement <8 x i32> poison, i32 %523, i64 0
  %525 = shufflevector <8 x i32> %524, <8 x i32> poison, <8 x i32> zeroinitializer
  %526 = insertelement <8 x i32> poison, i32 %522, i64 0
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %528

528:                                              ; preds = %607, %517
  %529 = phi i64 [ 0, %517 ], [ %608, %607 ]
  %530 = phi <8 x i64> [ <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7>, %517 ], [ %609, %607 ]
  %531 = trunc i64 %529 to i32
  %532 = or i32 %531, 1
  %533 = insertelement <2 x i32> poison, i32 %531, i64 0
  %534 = shufflevector <2 x i32> %533, <2 x i32> poison, <2 x i32> zeroinitializer
  %535 = or <2 x i32> %534, <i32 2, i32 3>
  %536 = insertelement <4 x i32> poison, i32 %531, i64 0
  %537 = shufflevector <4 x i32> %536, <4 x i32> poison, <4 x i32> zeroinitializer
  %538 = or <4 x i32> %537, <i32 4, i32 5, i32 6, i32 7>
  %539 = icmp ule <8 x i64> %530, %510
  %540 = insertelement <8 x i32> poison, i32 %531, i64 0
  %541 = insertelement <8 x i32> %540, i32 %532, i64 1
  %542 = shufflevector <2 x i32> %535, <2 x i32> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %543 = shufflevector <8 x i32> %541, <8 x i32> %542, <8 x i32> <i32 0, i32 1, i32 8, i32 9, i32 poison, i32 poison, i32 poison, i32 poison>
  %544 = shufflevector <4 x i32> %538, <4 x i32> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %545 = shufflevector <8 x i32> %543, <8 x i32> %544, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 10, i32 11>
  %546 = sub <8 x i32> %545, %512
  %547 = add <8 x i32> %546, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %548 = mul nsw <8 x i32> %547, %514
  %549 = add <8 x i32> %527, %548
  %550 = ashr <8 x i32> %549, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>
  %551 = call <8 x i32> @llvm.smax.v8i32(<8 x i32> %550, <8 x i32> zeroinitializer)
  %552 = call <8 x i32> @llvm.smin.v8i32(<8 x i32> %551, <8 x i32> %525)
  %553 = extractelement <8 x i1> %539, i64 0
  br i1 %553, label %554, label %558

554:                                              ; preds = %528
  %555 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %516, i64 %529
  %556 = bitcast <8 x i32> %552 to <16 x i16>
  %557 = extractelement <16 x i16> %556, i64 0
  store i16 %557, ptr %555, align 2, !tbaa !40
  br label %558

558:                                              ; preds = %554, %528
  %559 = extractelement <8 x i1> %539, i64 1
  br i1 %559, label %560, label %565

560:                                              ; preds = %558
  %561 = or i64 %529, 1
  %562 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %516, i64 %561
  %563 = bitcast <8 x i32> %552 to <16 x i16>
  %564 = extractelement <16 x i16> %563, i64 2
  store i16 %564, ptr %562, align 2, !tbaa !40
  br label %565

565:                                              ; preds = %560, %558
  %566 = extractelement <8 x i1> %539, i64 2
  br i1 %566, label %567, label %572

567:                                              ; preds = %565
  %568 = or i64 %529, 2
  %569 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %516, i64 %568
  %570 = bitcast <8 x i32> %552 to <16 x i16>
  %571 = extractelement <16 x i16> %570, i64 4
  store i16 %571, ptr %569, align 2, !tbaa !40
  br label %572

572:                                              ; preds = %567, %565
  %573 = extractelement <8 x i1> %539, i64 3
  br i1 %573, label %574, label %579

574:                                              ; preds = %572
  %575 = or i64 %529, 3
  %576 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %516, i64 %575
  %577 = bitcast <8 x i32> %552 to <16 x i16>
  %578 = extractelement <16 x i16> %577, i64 6
  store i16 %578, ptr %576, align 2, !tbaa !40
  br label %579

579:                                              ; preds = %574, %572
  %580 = extractelement <8 x i1> %539, i64 4
  br i1 %580, label %581, label %586

581:                                              ; preds = %579
  %582 = or i64 %529, 4
  %583 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %516, i64 %582
  %584 = bitcast <8 x i32> %552 to <16 x i16>
  %585 = extractelement <16 x i16> %584, i64 8
  store i16 %585, ptr %583, align 2, !tbaa !40
  br label %586

586:                                              ; preds = %581, %579
  %587 = extractelement <8 x i1> %539, i64 5
  br i1 %587, label %588, label %593

588:                                              ; preds = %586
  %589 = or i64 %529, 5
  %590 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %516, i64 %589
  %591 = bitcast <8 x i32> %552 to <16 x i16>
  %592 = extractelement <16 x i16> %591, i64 10
  store i16 %592, ptr %590, align 2, !tbaa !40
  br label %593

593:                                              ; preds = %588, %586
  %594 = extractelement <8 x i1> %539, i64 6
  br i1 %594, label %595, label %600

595:                                              ; preds = %593
  %596 = or i64 %529, 6
  %597 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %516, i64 %596
  %598 = bitcast <8 x i32> %552 to <16 x i16>
  %599 = extractelement <16 x i16> %598, i64 12
  store i16 %599, ptr %597, align 2, !tbaa !40
  br label %600

600:                                              ; preds = %595, %593
  %601 = extractelement <8 x i1> %539, i64 7
  br i1 %601, label %602, label %607

602:                                              ; preds = %600
  %603 = or i64 %529, 7
  %604 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %516, i64 %603
  %605 = bitcast <8 x i32> %552 to <16 x i16>
  %606 = extractelement <16 x i16> %605, i64 14
  store i16 %606, ptr %604, align 2, !tbaa !40
  br label %607

607:                                              ; preds = %602, %600
  %608 = add i64 %529, 8
  %609 = add <8 x i64> %530, <i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8>
  %610 = icmp eq i64 %608, %507
  br i1 %610, label %611, label %528, !llvm.loop !104

611:                                              ; preds = %607, %515
  %612 = add nuw nsw i64 %516, 1
  %613 = icmp eq i64 %612, %504
  br i1 %613, label %746, label %515, !llvm.loop !105

614:                                              ; preds = %639, %353
  %615 = phi i64 [ 0, %353 ], [ %640, %639 ]
  br label %616

616:                                              ; preds = %636, %614
  %617 = phi i64 [ 0, %614 ], [ %637, %636 ]
  %618 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %354, i64 %615, i64 %617
  %619 = load i8, ptr %618, align 1, !tbaa !14
  %620 = zext i8 %619 to i64
  %621 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %354, i64 %615, i64 %617
  %622 = load i8, ptr %621, align 1, !tbaa !14
  %623 = getelementptr inbounds [4 x [4 x i32]], ptr %3, i64 0, i64 %615, i64 %617
  %624 = load i32, ptr %623, align 4, !tbaa !18
  %625 = trunc i32 %624 to i16
  %626 = zext i8 %622 to i64
  %627 = zext i8 %619 to i64
  %628 = add nuw nsw i64 %620, 3
  %629 = insertelement <4 x i16> poison, i16 %625, i64 0
  %630 = shufflevector <4 x i16> %629, <4 x i16> poison, <4 x i32> zeroinitializer
  br label %631

631:                                              ; preds = %631, %616
  %632 = phi i64 [ %627, %616 ], [ %634, %631 ]
  %633 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %632, i64 %626
  store <4 x i16> %630, ptr %633, align 2, !tbaa !40
  %634 = add nuw nsw i64 %632, 1
  %635 = icmp eq i64 %632, %628
  br i1 %635, label %636, label %631, !llvm.loop !106

636:                                              ; preds = %631
  %637 = add nuw nsw i64 %617, 1
  %638 = icmp eq i64 %637, 4
  br i1 %638, label %639, label %616, !llvm.loop !107

639:                                              ; preds = %636
  %640 = add nuw nsw i64 %615, 1
  %641 = icmp eq i64 %640, %355
  br i1 %641, label %746, label %614, !llvm.loop !108

642:                                              ; preds = %116
  %643 = icmp ne i32 %119, 0
  %644 = icmp ne i32 %118, 0
  %645 = select i1 %643, i1 %644, i1 false
  br i1 %645, label %647, label %646

646:                                              ; preds = %642
  call void @error(ptr noundef nonnull @.str.14, i32 noundef -1) #46
  br label %647

647:                                              ; preds = %646, %642
  %648 = sdiv i32 %20, 2
  %649 = sext i32 %1 to i64
  %650 = getelementptr inbounds ptr, ptr %8, i64 %649
  %651 = sdiv i32 %18, 2
  %652 = icmp sgt i32 %20, 1
  %653 = icmp sgt i32 %18, 1
  br label %654

654:                                              ; preds = %693, %647
  %655 = phi i1 [ true, %647 ], [ false, %693 ]
  %656 = phi i32 [ 0, %647 ], [ 1, %693 ]
  %657 = mul nuw nsw i32 %656, %20
  %658 = sdiv i32 %657, 2
  %659 = add nsw i32 %658, %648
  %660 = sext i32 %658 to i64
  %661 = sext i32 %659 to i64
  br label %662

662:                                              ; preds = %692, %654
  %663 = phi i1 [ true, %654 ], [ false, %692 ]
  %664 = phi i32 [ 0, %654 ], [ 1, %692 ]
  br i1 %652, label %665, label %692

665:                                              ; preds = %662
  %666 = mul nuw nsw i32 %664, %18
  %667 = sdiv i32 %666, 2
  %668 = load ptr, ptr %650, align 8, !tbaa !13
  %669 = add nsw i32 %667, %651
  %670 = sext i32 %667 to i64
  %671 = sext i32 %669 to i64
  br label %674

672:                                              ; preds = %687, %674
  %673 = icmp slt i64 %676, %661
  br i1 %673, label %674, label %692, !llvm.loop !109

674:                                              ; preds = %672, %665
  %675 = phi i64 [ %660, %665 ], [ %676, %672 ]
  %676 = add nsw i64 %675, 1
  %677 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %676, i32 5
  %678 = load i32, ptr %677, align 4, !tbaa !59
  %679 = sext i32 %678 to i64
  %680 = getelementptr inbounds ptr, ptr %668, i64 %679
  %681 = load ptr, ptr %680, align 8, !tbaa !13
  %682 = getelementptr inbounds [17 x %struct.pix_pos], ptr %5, i64 0, i64 %676, i32 4
  %683 = load i32, ptr %682, align 8, !tbaa !60
  %684 = sext i32 %683 to i64
  %685 = getelementptr inbounds i16, ptr %681, i64 %684
  %686 = load i16, ptr %685, align 2, !tbaa !40
  br i1 %653, label %687, label %672

687:                                              ; preds = %687, %674
  %688 = phi i64 [ %690, %687 ], [ %670, %674 ]
  %689 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %675, i64 %688
  store i16 %686, ptr %689, align 2, !tbaa !40
  %690 = add nsw i64 %688, 1
  %691 = icmp slt i64 %690, %671
  br i1 %691, label %687, label %672, !llvm.loop !110

692:                                              ; preds = %672, %662
  br i1 %663, label %662, label %693, !llvm.loop !111

693:                                              ; preds = %692
  br i1 %655, label %654, label %746, !llvm.loop !112

694:                                              ; preds = %116
  %695 = icmp eq i32 %117, 0
  br i1 %695, label %696, label %697

696:                                              ; preds = %694
  call void @error(ptr noundef nonnull @.str.15, i32 noundef -1) #46
  br label %697

697:                                              ; preds = %696, %694
  %698 = sdiv i32 %18, 2
  %699 = sext i32 %1 to i64
  %700 = getelementptr inbounds ptr, ptr %8, i64 %699
  %701 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 5
  %702 = load i32, ptr %701, align 4
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 4
  %705 = load i32, ptr %704, align 4
  %706 = sdiv i32 %20, 2
  %707 = sext i32 %705 to i64
  %708 = icmp sgt i32 %20, 1
  %709 = icmp sgt i32 %18, 1
  br label %710

710:                                              ; preds = %744, %697
  %711 = phi i1 [ true, %697 ], [ false, %744 ]
  %712 = phi i32 [ 0, %697 ], [ 1, %744 ]
  %713 = mul nuw nsw i32 %712, %20
  %714 = sdiv i32 %713, 2
  %715 = add nsw i32 %714, %706
  %716 = sext i32 %714 to i64
  %717 = sext i32 %715 to i64
  br label %718

718:                                              ; preds = %743, %710
  %719 = phi i1 [ true, %710 ], [ false, %743 ]
  %720 = phi i32 [ 0, %710 ], [ 1, %743 ]
  br i1 %709, label %721, label %743

721:                                              ; preds = %718
  %722 = mul nuw nsw i32 %720, %18
  %723 = lshr i32 %722, 1
  %724 = add nsw i32 %723, %698
  %725 = load ptr, ptr %700, align 8, !tbaa !13
  %726 = getelementptr inbounds ptr, ptr %725, i64 %703
  %727 = load ptr, ptr %726, align 8, !tbaa !13
  %728 = zext i32 %723 to i64
  %729 = sext i32 %724 to i64
  br label %730

730:                                              ; preds = %740, %721
  %731 = phi i64 [ %728, %721 ], [ %741, %740 ]
  %732 = add nsw i64 %731, %707
  %733 = getelementptr inbounds i16, ptr %727, i64 %732
  %734 = load i16, ptr %733, align 2, !tbaa !40
  br i1 %708, label %735, label %740

735:                                              ; preds = %735, %730
  %736 = phi i64 [ %738, %735 ], [ %716, %730 ]
  %737 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %736, i64 %731
  store i16 %734, ptr %737, align 2, !tbaa !40
  %738 = add nsw i64 %736, 1
  %739 = icmp slt i64 %738, %717
  br i1 %739, label %735, label %740, !llvm.loop !113

740:                                              ; preds = %735, %730
  %741 = add nuw nsw i64 %731, 1
  %742 = icmp slt i64 %741, %729
  br i1 %742, label %730, label %743, !llvm.loop !114

743:                                              ; preds = %740, %718
  br i1 %719, label %718, label %744, !llvm.loop !115

744:                                              ; preds = %743
  br i1 %711, label %710, label %746, !llvm.loop !116

745:                                              ; preds = %116
  call void @error(ptr noundef nonnull @.str.16, i32 noundef 600) #46
  br label %746

746:                                              ; preds = %745, %744, %693, %639, %611, %481, %352, %123
  call void @llvm.lifetime.end.p0(i64 408, ptr nonnull %5) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #48
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %3) #48
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #12

; Function Attrs: nofree nosync nounwind optsize memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @itrans(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #14 {
  %7 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 6
  %8 = load i32, ptr %7, align 4, !tbaa !43
  %9 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 103
  %10 = load i32, ptr %9, align 4, !tbaa !117
  %11 = sub i32 0, %10
  %12 = icmp eq i32 %8, %11
  br i1 %12, label %13, label %27

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 112
  %15 = load i32, ptr %14, align 8, !tbaa !118
  %16 = icmp eq i32 %15, 1
  %17 = icmp eq i32 %5, 0
  %18 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 108
  %19 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 107
  %20 = select i1 %17, ptr %19, ptr %18
  %21 = load i32, ptr %20, align 4, !tbaa !18
  br i1 %16, label %22, label %33

22:                                               ; preds = %13
  %23 = sext i32 %3 to i64
  %24 = sext i32 %4 to i64
  %25 = sext i32 %1 to i64
  %26 = sext i32 %2 to i64
  br label %126

27:                                               ; preds = %6
  %28 = icmp eq i32 %5, 0
  %29 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 108
  %30 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 107
  %31 = select i1 %28, ptr %30, ptr %29
  %32 = load i32, ptr %31, align 4, !tbaa !18
  br label %33

33:                                               ; preds = %27, %13
  %34 = phi i32 [ %21, %13 ], [ %32, %27 ]
  %35 = sext i32 %3 to i64
  %36 = sext i32 %4 to i64
  br label %100

37:                                               ; preds = %100
  %38 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27
  %39 = sext i32 %2 to i64
  %40 = add nsw i32 %2, 1
  %41 = sext i32 %40 to i64
  %42 = add nsw i32 %2, 2
  %43 = sext i32 %42 to i64
  %44 = add nsw i32 %2, 3
  %45 = sext i32 %44 to i64
  %46 = sext i32 %1 to i64
  %47 = insertelement <4 x i32> poison, i32 %34, i64 0
  %48 = shufflevector <4 x i32> %47, <4 x i32> poison, <4 x i32> zeroinitializer
  %49 = load <4 x i32>, ptr %38, align 4, !tbaa !18
  %50 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 1, i64 0
  %51 = load <4 x i32>, ptr %50, align 4, !tbaa !18
  %52 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 2, i64 0
  %53 = load <4 x i32>, ptr %52, align 4, !tbaa !18
  %54 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 3, i64 0
  %55 = load <4 x i32>, ptr %54, align 4, !tbaa !18
  %56 = add nsw <4 x i32> %53, %49
  %57 = sub nsw <4 x i32> %49, %53
  %58 = ashr <4 x i32> %51, <i32 1, i32 1, i32 1, i32 1>
  %59 = sub nsw <4 x i32> %58, %55
  %60 = ashr <4 x i32> %55, <i32 1, i32 1, i32 1, i32 1>
  %61 = add nsw <4 x i32> %60, %51
  %62 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %39, i64 %46
  %63 = load <4 x i16>, ptr %62, align 2, !tbaa !40
  %64 = zext <4 x i16> %63 to <4 x i32>
  %65 = shl nuw nsw <4 x i32> %64, <i32 6, i32 6, i32 6, i32 6>
  %66 = add <4 x i32> %56, <i32 32, i32 32, i32 32, i32 32>
  %67 = add <4 x i32> %66, %61
  %68 = add <4 x i32> %67, %65
  %69 = ashr <4 x i32> %68, <i32 6, i32 6, i32 6, i32 6>
  %70 = tail call <4 x i32> @llvm.smax.v4i32(<4 x i32> %69, <4 x i32> zeroinitializer)
  %71 = tail call <4 x i32> @llvm.smin.v4i32(<4 x i32> %70, <4 x i32> %48)
  store <4 x i32> %71, ptr %38, align 4, !tbaa !18
  %72 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %41, i64 %46
  %73 = load <4 x i16>, ptr %72, align 2, !tbaa !40
  %74 = zext <4 x i16> %73 to <4 x i32>
  %75 = shl nuw nsw <4 x i32> %74, <i32 6, i32 6, i32 6, i32 6>
  %76 = add <4 x i32> %57, <i32 32, i32 32, i32 32, i32 32>
  %77 = add <4 x i32> %76, %59
  %78 = add <4 x i32> %77, %75
  %79 = ashr <4 x i32> %78, <i32 6, i32 6, i32 6, i32 6>
  %80 = tail call <4 x i32> @llvm.smax.v4i32(<4 x i32> %79, <4 x i32> zeroinitializer)
  %81 = tail call <4 x i32> @llvm.smin.v4i32(<4 x i32> %80, <4 x i32> %48)
  store <4 x i32> %81, ptr %50, align 4, !tbaa !18
  %82 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %43, i64 %46
  %83 = load <4 x i16>, ptr %82, align 2, !tbaa !40
  %84 = zext <4 x i16> %83 to <4 x i32>
  %85 = shl nuw nsw <4 x i32> %84, <i32 6, i32 6, i32 6, i32 6>
  %86 = sub <4 x i32> %76, %59
  %87 = add <4 x i32> %86, %85
  %88 = ashr <4 x i32> %87, <i32 6, i32 6, i32 6, i32 6>
  %89 = tail call <4 x i32> @llvm.smax.v4i32(<4 x i32> %88, <4 x i32> zeroinitializer)
  %90 = tail call <4 x i32> @llvm.smin.v4i32(<4 x i32> %89, <4 x i32> %48)
  store <4 x i32> %90, ptr %52, align 4, !tbaa !18
  %91 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %45, i64 %46
  %92 = load <4 x i16>, ptr %91, align 2, !tbaa !40
  %93 = zext <4 x i16> %92 to <4 x i32>
  %94 = shl nuw nsw <4 x i32> %93, <i32 6, i32 6, i32 6, i32 6>
  %95 = sub <4 x i32> %66, %61
  %96 = add <4 x i32> %95, %94
  %97 = ashr <4 x i32> %96, <i32 6, i32 6, i32 6, i32 6>
  %98 = tail call <4 x i32> @llvm.smax.v4i32(<4 x i32> %97, <4 x i32> zeroinitializer)
  %99 = tail call <4 x i32> @llvm.smin.v4i32(<4 x i32> %98, <4 x i32> %48)
  store <4 x i32> %99, ptr %54, align 4, !tbaa !18
  br label %146

100:                                              ; preds = %100, %33
  %101 = phi i64 [ 0, %33 ], [ %124, %100 ]
  %102 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %35, i64 %36, i64 %101
  %103 = load i32, ptr %102, align 8
  %104 = getelementptr inbounds i8, ptr %102, i64 4
  %105 = load i32, ptr %104, align 4
  %106 = getelementptr inbounds i8, ptr %102, i64 8
  %107 = load i32, ptr %106, align 8
  %108 = getelementptr inbounds i8, ptr %102, i64 12
  %109 = load i32, ptr %108, align 4
  %110 = add nsw i32 %107, %103
  %111 = sub nsw i32 %103, %107
  %112 = ashr i32 %105, 1
  %113 = sub nsw i32 %112, %109
  %114 = ashr i32 %109, 1
  %115 = add nsw i32 %114, %105
  %116 = add nsw i32 %115, %110
  %117 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %101
  store i32 %116, ptr %117, align 8, !tbaa !18
  %118 = sub nsw i32 %110, %115
  %119 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %101, i64 3
  store i32 %118, ptr %119, align 4, !tbaa !18
  %120 = add nsw i32 %113, %111
  %121 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %101, i64 1
  store i32 %120, ptr %121, align 4, !tbaa !18
  %122 = sub nsw i32 %111, %113
  %123 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %101, i64 2
  store i32 %122, ptr %123, align 8, !tbaa !18
  %124 = add nuw nsw i64 %101, 1
  %125 = icmp eq i64 %124, 4
  br i1 %125, label %37, label %100, !llvm.loop !119

126:                                              ; preds = %143, %22
  %127 = phi i64 [ 0, %22 ], [ %144, %143 ]
  %128 = add nsw i64 %127, %26
  br label %129

129:                                              ; preds = %129, %126
  %130 = phi i64 [ 0, %126 ], [ %141, %129 ]
  %131 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %23, i64 %24, i64 %127, i64 %130
  %132 = load i32, ptr %131, align 4, !tbaa !18
  %133 = add nsw i64 %130, %25
  %134 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %128, i64 %133
  %135 = load i16, ptr %134, align 2, !tbaa !40
  %136 = zext i16 %135 to i32
  %137 = add i32 %132, %136
  %138 = tail call i32 @llvm.smax.i32(i32 %137, i32 0)
  %139 = tail call i32 @llvm.smin.i32(i32 %138, i32 %21)
  %140 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %127, i64 %130
  store i32 %139, ptr %140, align 4, !tbaa !18
  %141 = add nuw nsw i64 %130, 1
  %142 = icmp eq i64 %141, 4
  br i1 %142, label %143, label %129, !llvm.loop !120

143:                                              ; preds = %129
  %144 = add nuw nsw i64 %127, 1
  %145 = icmp eq i64 %144, 4
  br i1 %145, label %146, label %126, !llvm.loop !121

146:                                              ; preds = %143, %37
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i32> @llvm.smax.v4i32(<4 x i32>, <4 x i32>) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i32> @llvm.smin.v4i32(<4 x i32>, <4 x i32>) #12

; Function Attrs: nounwind optsize uwtable
define internal void @AssignQuantParam(ptr noundef %0, ptr noundef %1) #0 {
  %3 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 5
  %4 = load i32, ptr %3, align 4, !tbaa !122
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 9
  %7 = load i32, ptr %6, align 4, !tbaa !123
  %8 = icmp eq i32 %7, 0
  br i1 %5, label %9, label %17

9:                                                ; preds = %2
  br i1 %8, label %10, label %18

10:                                               ; preds = %10, %9
  %11 = phi i64 [ %15, %10 ], [ 0, %9 ]
  %12 = icmp ult i64 %11, 6
  %13 = select i1 %12, ptr @quant_org, ptr @quant8_org
  %14 = getelementptr inbounds [8 x ptr], ptr @qmatrix, i64 0, i64 %11
  store ptr %13, ptr %14, align 8, !tbaa !13
  %15 = add nuw nsw i64 %11, 1
  %16 = icmp eq i64 %15, 8
  br i1 %16, label %114, label %10, !llvm.loop !127

17:                                               ; preds = %2
  br i1 %8, label %63, label %18

18:                                               ; preds = %17, %9
  br label %19

19:                                               ; preds = %57, %18
  %20 = phi i64 [ %60, %57 ], [ 0, %18 ]
  %21 = icmp ult i64 %20, 6
  %22 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 10, i64 %20
  %23 = load i32, ptr %22, align 4, !tbaa !18
  %24 = icmp eq i32 %23, 0
  br i1 %21, label %25, label %45

25:                                               ; preds = %19
  br i1 %24, label %26, label %36

26:                                               ; preds = %25
  %27 = trunc i64 %20 to i32
  switch i32 %27, label %31 [
    i32 3, label %28
    i32 0, label %28
  ]

28:                                               ; preds = %26, %26
  %29 = icmp eq i64 %20, 0
  %30 = select i1 %29, ptr @quant_intra_default, ptr @quant_inter_default
  br label %57

31:                                               ; preds = %26
  %32 = add nuw nsw i64 %20, 4294967295
  %33 = and i64 %32, 4294967295
  %34 = getelementptr inbounds [8 x ptr], ptr @qmatrix, i64 0, i64 %33
  %35 = load ptr, ptr %34, align 8, !tbaa !13
  br label %57

36:                                               ; preds = %25
  %37 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 13, i64 %20
  %38 = load i32, ptr %37, align 4, !tbaa !14
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = icmp ult i64 %20, 3
  %42 = select i1 %41, ptr @quant_intra_default, ptr @quant_inter_default
  br label %57

43:                                               ; preds = %36
  %44 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 11, i64 %20
  br label %57

45:                                               ; preds = %19
  br i1 %24, label %52, label %46

46:                                               ; preds = %45
  %47 = add nuw i64 %20, 4294967290
  %48 = and i64 %47, 4294967295
  %49 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 14, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !14
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %46, %45
  %53 = icmp eq i64 %20, 6
  %54 = select i1 %53, ptr @quant8_intra_default, ptr @quant8_inter_default
  br label %57

55:                                               ; preds = %46
  %56 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 12, i64 %48
  br label %57

57:                                               ; preds = %55, %52, %43, %40, %31, %28
  %58 = phi ptr [ %42, %40 ], [ %44, %43 ], [ %30, %28 ], [ %35, %31 ], [ %56, %55 ], [ %54, %52 ]
  %59 = getelementptr inbounds [8 x ptr], ptr @qmatrix, i64 0, i64 %20
  store ptr %58, ptr %59, align 8, !tbaa !13
  %60 = add nuw nsw i64 %20, 1
  %61 = icmp eq i64 %60, 8
  br i1 %61, label %62, label %19, !llvm.loop !128

62:                                               ; preds = %57
  br i1 %5, label %114, label %63

63:                                               ; preds = %62, %17
  %64 = phi i1 [ false, %62 ], [ true, %17 ]
  br label %65

65:                                               ; preds = %111, %63
  %66 = phi i64 [ 0, %63 ], [ %112, %111 ]
  %67 = icmp ult i64 %66, 6
  %68 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 6, i64 %66
  %69 = load i32, ptr %68, align 4, !tbaa !18
  %70 = icmp eq i32 %69, 0
  br i1 %67, label %71, label %92

71:                                               ; preds = %65
  br i1 %70, label %72, label %83

72:                                               ; preds = %71
  %73 = icmp eq i64 %66, 0
  %74 = trunc i64 %66 to i32
  switch i32 %74, label %78 [
    i32 3, label %75
    i32 0, label %75
  ]

75:                                               ; preds = %72, %72
  br i1 %64, label %76, label %111

76:                                               ; preds = %75
  %77 = select i1 %73, ptr @quant_intra_default, ptr @quant_inter_default
  br label %108

78:                                               ; preds = %72
  %79 = add nuw nsw i64 %66, 4294967295
  %80 = and i64 %79, 4294967295
  %81 = getelementptr inbounds [8 x ptr], ptr @qmatrix, i64 0, i64 %80
  %82 = load ptr, ptr %81, align 8, !tbaa !13
  br label %108

83:                                               ; preds = %71
  %84 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 9, i64 %66
  %85 = load i32, ptr %84, align 4, !tbaa !14
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %83
  %88 = icmp ult i64 %66, 3
  %89 = select i1 %88, ptr @quant_intra_default, ptr @quant_inter_default
  br label %108

90:                                               ; preds = %83
  %91 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 7, i64 %66
  br label %108

92:                                               ; preds = %65
  br i1 %70, label %93, label %97

93:                                               ; preds = %92
  br i1 %64, label %94, label %111

94:                                               ; preds = %93
  %95 = icmp eq i64 %66, 6
  %96 = select i1 %95, ptr @quant8_intra_default, ptr @quant8_inter_default
  br label %108

97:                                               ; preds = %92
  %98 = add nuw i64 %66, 4294967290
  %99 = and i64 %98, 4294967295
  %100 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 10, i64 %99
  %101 = load i32, ptr %100, align 4, !tbaa !14
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %97
  %104 = icmp eq i64 %66, 6
  %105 = select i1 %104, ptr @quant8_intra_default, ptr @quant8_inter_default
  br label %108

106:                                              ; preds = %97
  %107 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 8, i64 %99
  br label %108

108:                                              ; preds = %106, %103, %94, %90, %87, %78, %76
  %109 = phi ptr [ %89, %87 ], [ %91, %90 ], [ %82, %78 ], [ %77, %76 ], [ %105, %103 ], [ %107, %106 ], [ %96, %94 ]
  %110 = getelementptr inbounds [8 x ptr], ptr @qmatrix, i64 0, i64 %66
  store ptr %109, ptr %110, align 8, !tbaa !13
  br label %111

111:                                              ; preds = %108, %93, %75
  %112 = add nuw nsw i64 %66, 1
  %113 = icmp eq i64 %112, 8
  br i1 %113, label %114, label %65, !llvm.loop !129

114:                                              ; preds = %111, %62, %10
  tail call void @CalculateQuantParam() #47
  %115 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 4
  %116 = load i32, ptr %115, align 8, !tbaa !130
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %119, label %118

118:                                              ; preds = %114
  tail call void @CalculateQuant8Param() #46
  br label %119

119:                                              ; preds = %118, %114
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define internal void @CalculateQuantParam() #15 {
  %1 = load ptr, ptr @qmatrix, align 16, !tbaa !13
  %2 = load ptr, ptr getelementptr inbounds ([8 x ptr], ptr @qmatrix, i64 0, i64 1), align 8, !tbaa !13
  %3 = load ptr, ptr getelementptr inbounds ([8 x ptr], ptr @qmatrix, i64 0, i64 2), align 16, !tbaa !13
  %4 = load ptr, ptr getelementptr inbounds ([8 x ptr], ptr @qmatrix, i64 0, i64 3), align 8, !tbaa !13
  %5 = load ptr, ptr getelementptr inbounds ([8 x ptr], ptr @qmatrix, i64 0, i64 4), align 16, !tbaa !13
  %6 = load ptr, ptr getelementptr inbounds ([8 x ptr], ptr @qmatrix, i64 0, i64 5), align 8, !tbaa !13
  br label %7

7:                                                ; preds = %46, %0
  %8 = phi i64 [ 0, %0 ], [ %47, %46 ]
  br label %9

9:                                                ; preds = %43, %7
  %10 = phi i64 [ 0, %7 ], [ %44, %43 ]
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi i64 [ 0, %9 ], [ %41, %11 ]
  %13 = shl nuw nsw i64 %12, 2
  %14 = add nuw nsw i64 %13, %10
  %15 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @dequant_coef, i64 0, i64 %8, i64 %10, i64 %12
  %16 = load i32, ptr %15, align 4, !tbaa !18
  %17 = getelementptr inbounds i32, ptr %1, i64 %14
  %18 = load i32, ptr %17, align 4, !tbaa !18
  %19 = mul nsw i32 %18, %16
  %20 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @InvLevelScale4x4Luma_Intra, i64 0, i64 %8, i64 %12, i64 %10
  store i32 %19, ptr %20, align 4, !tbaa !18
  %21 = getelementptr inbounds i32, ptr %2, i64 %14
  %22 = load i32, ptr %21, align 4, !tbaa !18
  %23 = mul nsw i32 %22, %16
  %24 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @InvLevelScale4x4Chroma_Intra, i64 0, i64 %8, i64 %12, i64 %10
  store i32 %23, ptr %24, align 4, !tbaa !18
  %25 = getelementptr inbounds i32, ptr %3, i64 %14
  %26 = load i32, ptr %25, align 4, !tbaa !18
  %27 = mul nsw i32 %26, %16
  %28 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]], ptr @InvLevelScale4x4Chroma_Intra, i64 0, i64 1, i64 %8, i64 %12, i64 %10
  store i32 %27, ptr %28, align 4, !tbaa !18
  %29 = getelementptr inbounds i32, ptr %4, i64 %14
  %30 = load i32, ptr %29, align 4, !tbaa !18
  %31 = mul nsw i32 %30, %16
  %32 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @InvLevelScale4x4Luma_Inter, i64 0, i64 %8, i64 %12, i64 %10
  store i32 %31, ptr %32, align 4, !tbaa !18
  %33 = getelementptr inbounds i32, ptr %5, i64 %14
  %34 = load i32, ptr %33, align 4, !tbaa !18
  %35 = mul nsw i32 %34, %16
  %36 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @InvLevelScale4x4Chroma_Inter, i64 0, i64 %8, i64 %12, i64 %10
  store i32 %35, ptr %36, align 4, !tbaa !18
  %37 = getelementptr inbounds i32, ptr %6, i64 %14
  %38 = load i32, ptr %37, align 4, !tbaa !18
  %39 = mul nsw i32 %38, %16
  %40 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]], ptr @InvLevelScale4x4Chroma_Inter, i64 0, i64 1, i64 %8, i64 %12, i64 %10
  store i32 %39, ptr %40, align 4, !tbaa !18
  %41 = add nuw nsw i64 %12, 1
  %42 = icmp eq i64 %41, 4
  br i1 %42, label %43, label %11, !llvm.loop !131

43:                                               ; preds = %11
  %44 = add nuw nsw i64 %10, 1
  %45 = icmp eq i64 %44, 4
  br i1 %45, label %46, label %9, !llvm.loop !132

46:                                               ; preds = %43
  %47 = add nuw nsw i64 %8, 1
  %48 = icmp eq i64 %47, 6
  br i1 %48, label %49, label %7, !llvm.loop !133

49:                                               ; preds = %46
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @itrans_2(ptr nocapture noundef %0) #16 {
  %2 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 6
  %3 = load i32, ptr %2, align 4, !tbaa !43
  %4 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 103
  %5 = load i32, ptr %4, align 4, !tbaa !117
  %6 = add nsw i32 %5, %3
  %7 = sdiv i32 %6, 6
  %8 = srem i32 %6, 6
  %9 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28
  br label %13

10:                                               ; preds = %13
  %11 = sext i32 %8 to i64
  %12 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @InvLevelScale4x4Luma_Intra, i64 0, i64 %11
  br label %33

13:                                               ; preds = %13, %1
  %14 = phi i64 [ 0, %1 ], [ %31, %13 ]
  %15 = getelementptr inbounds [12 x [4 x [4 x i32]]], ptr %9, i64 0, i64 %14
  %16 = load i32, ptr %15, align 8, !tbaa !18
  %17 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 1, i64 %14
  %18 = load i32, ptr %17, align 8, !tbaa !18
  %19 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 2, i64 %14
  %20 = load i32, ptr %19, align 8, !tbaa !18
  %21 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 3, i64 %14
  %22 = load i32, ptr %21, align 8, !tbaa !18
  %23 = add nsw i32 %20, %16
  %24 = sub nsw i32 %16, %20
  %25 = sub nsw i32 %18, %22
  %26 = add nsw i32 %22, %18
  %27 = add nsw i32 %26, %23
  store i32 %27, ptr %15, align 8, !tbaa !18
  %28 = add nsw i32 %25, %24
  store i32 %28, ptr %17, align 8, !tbaa !18
  %29 = sub nsw i32 %24, %25
  store i32 %29, ptr %19, align 8, !tbaa !18
  %30 = sub nsw i32 %23, %26
  store i32 %30, ptr %21, align 8, !tbaa !18
  %31 = add nuw nsw i64 %14, 1
  %32 = icmp eq i64 %31, 4
  br i1 %32, label %10, label %13, !llvm.loop !134

33:                                               ; preds = %33, %10
  %34 = phi i64 [ 0, %10 ], [ %71, %33 ]
  %35 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %34
  %36 = load i32, ptr %35, align 8, !tbaa !18
  %37 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %34, i64 1
  %38 = load i32, ptr %37, align 8, !tbaa !18
  %39 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %34, i64 2
  %40 = load i32, ptr %39, align 8, !tbaa !18
  %41 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %34, i64 3
  %42 = load i32, ptr %41, align 8, !tbaa !18
  %43 = add nsw i32 %40, %36
  %44 = sub nsw i32 %36, %40
  %45 = sub nsw i32 %38, %42
  %46 = add nsw i32 %42, %38
  %47 = add nsw i32 %46, %43
  %48 = load i32, ptr %12, align 16, !tbaa !18
  %49 = mul nsw i32 %47, %48
  %50 = shl i32 %49, %7
  %51 = add nsw i32 %50, 32
  %52 = ashr i32 %51, 6
  store i32 %52, ptr %35, align 8, !tbaa !18
  %53 = add nsw i32 %45, %44
  %54 = load i32, ptr %12, align 16, !tbaa !18
  %55 = mul nsw i32 %54, %53
  %56 = shl i32 %55, %7
  %57 = add nsw i32 %56, 32
  %58 = ashr i32 %57, 6
  store i32 %58, ptr %37, align 8, !tbaa !18
  %59 = sub nsw i32 %44, %45
  %60 = load i32, ptr %12, align 16, !tbaa !18
  %61 = mul nsw i32 %60, %59
  %62 = shl i32 %61, %7
  %63 = add nsw i32 %62, 32
  %64 = ashr i32 %63, 6
  store i32 %64, ptr %39, align 8, !tbaa !18
  %65 = sub nsw i32 %43, %46
  %66 = load i32, ptr %12, align 16, !tbaa !18
  %67 = mul nsw i32 %66, %65
  %68 = shl i32 %67, %7
  %69 = add nsw i32 %68, 32
  %70 = ashr i32 %69, 6
  store i32 %70, ptr %41, align 8, !tbaa !18
  %71 = add nuw nsw i64 %34, 1
  %72 = icmp eq i64 %71, 4
  br i1 %72, label %73, label %33, !llvm.loop !135

73:                                               ; preds = %33
  ret void
}

; Function Attrs: nofree nosync nounwind optsize memory(argmem: readwrite) uwtable
define internal void @itrans_sp(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #17 {
  %6 = alloca [4 x i32], align 16
  %7 = alloca [4 x i32], align 16
  %8 = alloca [4 x [4 x i32]], align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #48
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #48
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %8) #48
  %9 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 6
  %10 = load i32, ptr %9, align 4, !tbaa !43
  %11 = sdiv i32 %10, 6
  %12 = srem i32 %10, 6
  %13 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 7
  %14 = load i32, ptr %13, align 8, !tbaa !136
  %15 = sdiv i32 %14, 6
  %16 = srem i32 %14, 6
  %17 = add nsw i32 %15, 15
  %18 = shl nuw i32 1, %17
  %19 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %20 = load i32, ptr %19, align 4, !tbaa !137
  %21 = icmp eq i32 %20, 4
  %22 = select i1 %21, i32 %15, i32 %11
  %23 = sext i32 %1 to i64
  %24 = sext i32 %2 to i64
  br label %25

25:                                               ; preds = %42, %5
  %26 = phi i64 [ 0, %5 ], [ %43, %42 ]
  %27 = add nsw i64 %26, %24
  br label %33

28:                                               ; preds = %42
  %29 = sdiv i32 %18, 2
  %30 = getelementptr inbounds [4 x i32], ptr %6, i64 0, i64 1
  %31 = getelementptr inbounds [4 x i32], ptr %6, i64 0, i64 3
  %32 = getelementptr inbounds [4 x i32], ptr %6, i64 0, i64 2
  br label %45

33:                                               ; preds = %33, %25
  %34 = phi i64 [ 0, %25 ], [ %40, %33 ]
  %35 = add nsw i64 %34, %23
  %36 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %27, i64 %35
  %37 = load i16, ptr %36, align 2, !tbaa !40
  %38 = zext i16 %37 to i32
  %39 = getelementptr inbounds [4 x [4 x i32]], ptr %8, i64 0, i64 %34, i64 %26
  store i32 %38, ptr %39, align 4, !tbaa !18
  %40 = add nuw nsw i64 %34, 1
  %41 = icmp eq i64 %40, 4
  br i1 %41, label %42, label %33, !llvm.loop !138

42:                                               ; preds = %33
  %43 = add nuw nsw i64 %26, 1
  %44 = icmp eq i64 %43, 4
  br i1 %44, label %28, label %25, !llvm.loop !139

45:                                               ; preds = %59, %28
  %46 = phi i64 [ 0, %28 ], [ %74, %59 ]
  br label %47

47:                                               ; preds = %47, %45
  %48 = phi i1 [ true, %45 ], [ false, %47 ]
  %49 = phi i64 [ 0, %45 ], [ 1, %47 ]
  %50 = xor i64 %49, 3
  %51 = getelementptr inbounds [4 x [4 x i32]], ptr %8, i64 0, i64 %49, i64 %46
  %52 = load i32, ptr %51, align 4, !tbaa !18
  %53 = getelementptr inbounds [4 x [4 x i32]], ptr %8, i64 0, i64 %50, i64 %46
  %54 = load i32, ptr %53, align 4, !tbaa !18
  %55 = add nsw i32 %54, %52
  %56 = getelementptr inbounds [4 x i32], ptr %6, i64 0, i64 %49
  store i32 %55, ptr %56, align 4, !tbaa !18
  %57 = sub nsw i32 %52, %54
  %58 = getelementptr inbounds [4 x i32], ptr %6, i64 0, i64 %50
  store i32 %57, ptr %58, align 4, !tbaa !18
  br i1 %48, label %47, label %59, !llvm.loop !140

59:                                               ; preds = %47
  %60 = load i32, ptr %6, align 16, !tbaa !18
  %61 = load i32, ptr %30, align 4, !tbaa !18
  %62 = add nsw i32 %61, %60
  %63 = getelementptr inbounds [4 x i32], ptr %8, i64 0, i64 %46
  store i32 %62, ptr %63, align 4, !tbaa !18
  %64 = sub nsw i32 %60, %61
  %65 = getelementptr inbounds [4 x [4 x i32]], ptr %8, i64 0, i64 2, i64 %46
  store i32 %64, ptr %65, align 4, !tbaa !18
  %66 = load i32, ptr %31, align 4, !tbaa !18
  %67 = shl nsw i32 %66, 1
  %68 = load i32, ptr %32, align 8, !tbaa !18
  %69 = add nsw i32 %67, %68
  %70 = getelementptr inbounds [4 x [4 x i32]], ptr %8, i64 0, i64 1, i64 %46
  store i32 %69, ptr %70, align 4, !tbaa !18
  %71 = shl nsw i32 %68, 1
  %72 = sub nsw i32 %66, %71
  %73 = getelementptr inbounds [4 x [4 x i32]], ptr %8, i64 0, i64 3, i64 %46
  store i32 %72, ptr %73, align 4, !tbaa !18
  %74 = add nuw nsw i64 %46, 1
  %75 = icmp eq i64 %74, 4
  br i1 %75, label %76, label %45, !llvm.loop !141

76:                                               ; preds = %97, %59
  %77 = phi i64 [ %112, %97 ], [ 0, %59 ]
  br label %85

78:                                               ; preds = %97
  %79 = select i1 %21, i32 %16, i32 %12
  %80 = sext i32 %3 to i64
  %81 = sext i32 %4 to i64
  %82 = sext i32 %79 to i64
  %83 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 8
  %84 = sext i32 %16 to i64
  br label %114

85:                                               ; preds = %85, %76
  %86 = phi i1 [ true, %76 ], [ false, %85 ]
  %87 = phi i64 [ 0, %76 ], [ 1, %85 ]
  %88 = xor i64 %87, 3
  %89 = getelementptr inbounds [4 x [4 x i32]], ptr %8, i64 0, i64 %77, i64 %87
  %90 = load i32, ptr %89, align 4, !tbaa !18
  %91 = getelementptr inbounds [4 x [4 x i32]], ptr %8, i64 0, i64 %77, i64 %88
  %92 = load i32, ptr %91, align 4, !tbaa !18
  %93 = add nsw i32 %92, %90
  %94 = getelementptr inbounds [4 x i32], ptr %6, i64 0, i64 %87
  store i32 %93, ptr %94, align 4, !tbaa !18
  %95 = sub nsw i32 %90, %92
  %96 = getelementptr inbounds [4 x i32], ptr %6, i64 0, i64 %88
  store i32 %95, ptr %96, align 4, !tbaa !18
  br i1 %86, label %85, label %97, !llvm.loop !142

97:                                               ; preds = %85
  %98 = load i32, ptr %6, align 16, !tbaa !18
  %99 = load i32, ptr %30, align 4, !tbaa !18
  %100 = add nsw i32 %99, %98
  %101 = getelementptr inbounds [4 x [4 x i32]], ptr %8, i64 0, i64 %77
  store i32 %100, ptr %101, align 16, !tbaa !18
  %102 = sub nsw i32 %98, %99
  %103 = getelementptr inbounds [4 x [4 x i32]], ptr %8, i64 0, i64 %77, i64 2
  store i32 %102, ptr %103, align 8, !tbaa !18
  %104 = load i32, ptr %31, align 4, !tbaa !18
  %105 = shl nsw i32 %104, 1
  %106 = load i32, ptr %32, align 8, !tbaa !18
  %107 = add nsw i32 %105, %106
  %108 = getelementptr inbounds [4 x [4 x i32]], ptr %8, i64 0, i64 %77, i64 1
  store i32 %107, ptr %108, align 4, !tbaa !18
  %109 = shl nsw i32 %106, 1
  %110 = sub nsw i32 %104, %109
  %111 = getelementptr inbounds [4 x [4 x i32]], ptr %8, i64 0, i64 %77, i64 3
  store i32 %110, ptr %111, align 4, !tbaa !18
  %112 = add nuw nsw i64 %77, 1
  %113 = icmp eq i64 %112, 4
  br i1 %113, label %78, label %76, !llvm.loop !143

114:                                              ; preds = %188, %78
  %115 = phi i64 [ 0, %78 ], [ %189, %188 ]
  br label %124

116:                                              ; preds = %188
  %117 = getelementptr inbounds [4 x i32], ptr %7, i64 0, i64 1
  %118 = getelementptr inbounds [4 x i32], ptr %7, i64 0, i64 2
  %119 = getelementptr inbounds [4 x i32], ptr %7, i64 0, i64 3
  %120 = mul nsw i64 %80, 768
  %121 = shl nsw i64 %81, 6
  %122 = add nsw i64 %120, %121
  %123 = add nsw i64 %122, 2408
  br label %191

124:                                              ; preds = %184, %114
  %125 = phi i64 [ 0, %114 ], [ %186, %184 ]
  %126 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %80, i64 %81, i64 %115, i64 %125
  %127 = load i32, ptr %126, align 4, !tbaa !18
  %128 = ashr i32 %127, %22
  %129 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @dequant_coef, i64 0, i64 %82, i64 %125, i64 %115
  %130 = load i32, ptr %129, align 4, !tbaa !18
  %131 = sdiv i32 %128, %130
  store i32 %131, ptr %126, align 4, !tbaa !18
  %132 = load i32, ptr %83, align 4, !tbaa !144
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %124
  %135 = load i32, ptr %19, align 4, !tbaa !137
  %136 = icmp eq i32 %135, 4
  br i1 %136, label %137, label %160

137:                                              ; preds = %134, %124
  %138 = getelementptr inbounds [4 x [4 x i32]], ptr %8, i64 0, i64 %125, i64 %115
  %139 = load i32, ptr %138, align 4, !tbaa !18
  %140 = tail call i32 @llvm.abs.i32(i32 %139, i1 true)
  %141 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @quant_coef, i64 0, i64 %84, i64 %125, i64 %115
  %142 = load i32, ptr %141, align 4, !tbaa !18
  %143 = mul nsw i32 %140, %142
  %144 = add nsw i32 %143, %29
  %145 = ashr i32 %144, %17
  %146 = icmp slt i32 %139, 0
  %147 = tail call i32 @llvm.abs.i32(i32 %145, i1 true)
  %148 = sub nsw i32 0, %147
  %149 = select i1 %146, i32 %148, i32 %147
  %150 = add nsw i32 %149, %131
  %151 = tail call i32 @llvm.abs.i32(i32 %150, i1 true)
  %152 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @dequant_coef, i64 0, i64 %84, i64 %125, i64 %115
  %153 = load i32, ptr %152, align 4, !tbaa !18
  %154 = mul nsw i32 %151, %153
  %155 = shl i32 %154, %15
  %156 = icmp slt i32 %150, 0
  %157 = tail call i32 @llvm.abs.i32(i32 %155, i1 true)
  %158 = sub nsw i32 0, %157
  %159 = select i1 %156, i32 %158, i32 %157
  br label %184

160:                                              ; preds = %134
  %161 = mul nsw i32 %131, %130
  %162 = getelementptr inbounds [4 x [4 x i32]], ptr @A, i64 0, i64 %125, i64 %115
  %163 = load i32, ptr %162, align 4, !tbaa !18
  %164 = mul nsw i32 %161, %163
  %165 = shl i32 %164, %22
  %166 = ashr i32 %165, 6
  %167 = getelementptr inbounds [4 x [4 x i32]], ptr %8, i64 0, i64 %125, i64 %115
  %168 = load i32, ptr %167, align 4, !tbaa !18
  %169 = add nsw i32 %166, %168
  %170 = tail call i32 @llvm.abs.i32(i32 %169, i1 true)
  %171 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @quant_coef, i64 0, i64 %84, i64 %125, i64 %115
  %172 = load i32, ptr %171, align 4, !tbaa !18
  %173 = mul nsw i32 %170, %172
  %174 = add nsw i32 %173, %29
  %175 = ashr i32 %174, %17
  %176 = icmp slt i32 %169, 0
  %177 = tail call i32 @llvm.abs.i32(i32 %175, i1 true)
  %178 = sub nsw i32 0, %177
  %179 = select i1 %176, i32 %178, i32 %177
  %180 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @dequant_coef, i64 0, i64 %84, i64 %125, i64 %115
  %181 = load i32, ptr %180, align 4, !tbaa !18
  %182 = mul nsw i32 %179, %181
  %183 = shl i32 %182, %15
  br label %184

184:                                              ; preds = %160, %137
  %185 = phi i32 [ %183, %160 ], [ %159, %137 ]
  store i32 %185, ptr %126, align 4, !tbaa !18
  %186 = add nuw nsw i64 %125, 1
  %187 = icmp eq i64 %186, 4
  br i1 %187, label %188, label %124, !llvm.loop !145

188:                                              ; preds = %184
  %189 = add nuw nsw i64 %115, 1
  %190 = icmp eq i64 %189, 4
  br i1 %190, label %116, label %114, !llvm.loop !146

191:                                              ; preds = %220, %116
  %192 = phi i64 [ 0, %116 ], [ %221, %220 ]
  %193 = shl nuw nsw i64 %192, 4
  %194 = add nsw i64 %123, %193
  %195 = getelementptr i8, ptr %0, i64 %194
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %6, ptr noundef nonnull align 4 dereferenceable(16) %195, i64 16, i1 false), !tbaa !18
  %196 = load i32, ptr %6, align 16, !tbaa !18
  %197 = load i32, ptr %32, align 8, !tbaa !18
  %198 = add nsw i32 %197, %196
  store i32 %198, ptr %7, align 16, !tbaa !18
  %199 = sub nsw i32 %196, %197
  store i32 %199, ptr %117, align 4, !tbaa !18
  %200 = load i32, ptr %30, align 4, !tbaa !18
  %201 = ashr i32 %200, 1
  %202 = load i32, ptr %31, align 4, !tbaa !18
  %203 = sub nsw i32 %201, %202
  store i32 %203, ptr %118, align 8, !tbaa !18
  %204 = ashr i32 %202, 1
  %205 = add nsw i32 %204, %200
  store i32 %205, ptr %119, align 4, !tbaa !18
  br label %208

206:                                              ; preds = %220
  %207 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 107
  br label %223

208:                                              ; preds = %208, %191
  %209 = phi i1 [ true, %191 ], [ false, %208 ]
  %210 = phi i64 [ 0, %191 ], [ 1, %208 ]
  %211 = xor i64 %210, 3
  %212 = getelementptr inbounds [4 x i32], ptr %7, i64 0, i64 %210
  %213 = load i32, ptr %212, align 4, !tbaa !18
  %214 = getelementptr inbounds [4 x i32], ptr %7, i64 0, i64 %211
  %215 = load i32, ptr %214, align 4, !tbaa !18
  %216 = add nsw i32 %215, %213
  %217 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %192, i64 %210
  store i32 %216, ptr %217, align 4, !tbaa !18
  %218 = sub nsw i32 %213, %215
  %219 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %192, i64 %211
  store i32 %218, ptr %219, align 4, !tbaa !18
  br i1 %209, label %208, label %220, !llvm.loop !147

220:                                              ; preds = %208
  %221 = add nuw nsw i64 %192, 1
  %222 = icmp eq i64 %221, 4
  br i1 %222, label %206, label %191, !llvm.loop !148

223:                                              ; preds = %268, %206
  %224 = phi i64 [ 0, %206 ], [ %269, %268 ]
  %225 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 0, i64 %224
  %226 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 1, i64 %224
  %227 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 2, i64 %224
  %228 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 3, i64 %224
  %229 = load i32, ptr %225, align 4, !tbaa !18
  %230 = load i32, ptr %226, align 4, !tbaa !18
  %231 = load i32, ptr %227, align 4, !tbaa !18
  %232 = load i32, ptr %228, align 4, !tbaa !18
  %233 = insertelement <4 x i32> poison, i32 %229, i64 0
  %234 = insertelement <4 x i32> %233, i32 %230, i64 1
  %235 = insertelement <4 x i32> %234, i32 %231, i64 2
  %236 = insertelement <4 x i32> %235, i32 %232, i64 3
  store <4 x i32> %236, ptr %6, align 16, !tbaa !18
  %237 = load i32, ptr %6, align 16, !tbaa !18
  %238 = load i32, ptr %32, align 8, !tbaa !18
  %239 = add nsw i32 %238, %237
  store i32 %239, ptr %7, align 16, !tbaa !18
  %240 = sub nsw i32 %237, %238
  store i32 %240, ptr %117, align 4, !tbaa !18
  %241 = load i32, ptr %30, align 4, !tbaa !18
  %242 = ashr i32 %241, 1
  %243 = load i32, ptr %31, align 4, !tbaa !18
  %244 = sub nsw i32 %242, %243
  store i32 %244, ptr %118, align 8, !tbaa !18
  %245 = ashr i32 %243, 1
  %246 = add nsw i32 %245, %241
  store i32 %246, ptr %119, align 4, !tbaa !18
  br label %247

247:                                              ; preds = %247, %223
  %248 = phi i1 [ true, %223 ], [ false, %247 ]
  %249 = phi i64 [ 0, %223 ], [ 1, %247 ]
  %250 = xor i64 %249, 3
  %251 = load i32, ptr %207, align 4, !tbaa !77
  %252 = getelementptr inbounds [4 x i32], ptr %7, i64 0, i64 %249
  %253 = load i32, ptr %252, align 4, !tbaa !18
  %254 = getelementptr inbounds [4 x i32], ptr %7, i64 0, i64 %250
  %255 = load i32, ptr %254, align 4, !tbaa !18
  %256 = add i32 %253, 32
  %257 = add i32 %256, %255
  %258 = ashr i32 %257, 6
  %259 = tail call i32 @llvm.smax.i32(i32 %258, i32 0)
  %260 = tail call i32 @llvm.smin.i32(i32 %259, i32 %251)
  %261 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %249, i64 %224
  store i32 %260, ptr %261, align 4, !tbaa !18
  %262 = load i32, ptr %207, align 4, !tbaa !77
  %263 = sub i32 %256, %255
  %264 = ashr i32 %263, 6
  %265 = tail call i32 @llvm.smax.i32(i32 %264, i32 0)
  %266 = tail call i32 @llvm.smin.i32(i32 %265, i32 %262)
  %267 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %250, i64 %224
  store i32 %266, ptr %267, align 4, !tbaa !18
  br i1 %248, label %247, label %268, !llvm.loop !149

268:                                              ; preds = %247
  %269 = add nuw nsw i64 %224, 1
  %270 = icmp eq i64 %269, 4
  br i1 %270, label %271, label %223, !llvm.loop !150

271:                                              ; preds = %268
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %8) #48
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #48
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #48
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #12

; Function Attrs: nofree nosync nounwind optsize memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @itrans_sp_chroma(ptr nocapture noundef %0, i32 noundef %1) #14 {
  %3 = alloca [4 x i32], align 16
  %4 = alloca [8 x [8 x i32]], align 16
  %5 = alloca [4 x i32], align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #48
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %4) #48
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #48
  %6 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 6
  %7 = load i32, ptr %6, align 4, !tbaa !43
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = zext i32 %7 to i64
  %11 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %10
  %12 = load i8, ptr %11, align 1, !tbaa !14
  %13 = zext i8 %12 to i32
  br label %14

14:                                               ; preds = %9, %2
  %15 = phi i32 [ %13, %9 ], [ %7, %2 ]
  %16 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 7
  %17 = load i32, ptr %16, align 8, !tbaa !136
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %19, label %33

19:                                               ; preds = %14
  %20 = sub i32 0, %17
  %21 = udiv i32 %20, 6
  %22 = sub nsw i32 0, %21
  %23 = sub i32 0, %17
  %24 = urem i32 %23, 6
  %25 = sub nsw i32 0, %24
  %26 = sub nsw i32 15, %21
  %27 = shl nuw nsw i32 1, %26
  %28 = lshr i32 %27, 1
  %29 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %30 = load i32, ptr %29, align 4, !tbaa !137
  %31 = icmp eq i32 %30, 4
  %32 = select i1 %31, i32 %17, i32 %15
  br label %49

33:                                               ; preds = %14
  %34 = zext i32 %17 to i64
  %35 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !14
  %37 = udiv i8 %36, 6
  %38 = zext i8 %37 to i32
  %39 = urem i8 %36, 6
  %40 = zext i8 %39 to i32
  %41 = add nuw nsw i32 %38, 15
  %42 = shl i32 32768, %38
  %43 = ashr exact i32 %42, 1
  %44 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %45 = load i32, ptr %44, align 4, !tbaa !137
  %46 = icmp eq i32 %45, 4
  %47 = zext i8 %36 to i32
  %48 = select i1 %46, i32 %47, i32 %15
  br label %49

49:                                               ; preds = %33, %19
  %50 = phi i1 [ %31, %19 ], [ %46, %33 ]
  %51 = phi ptr [ %29, %19 ], [ %44, %33 ]
  %52 = phi i32 [ %28, %19 ], [ %43, %33 ]
  %53 = phi i32 [ %26, %19 ], [ %41, %33 ]
  %54 = phi i32 [ %25, %19 ], [ %40, %33 ]
  %55 = phi i32 [ %22, %19 ], [ %38, %33 ]
  %56 = phi i32 [ %32, %19 ], [ %48, %33 ]
  %57 = srem i32 %56, 6
  %58 = sdiv i32 %56, 6
  br label %59

59:                                               ; preds = %73, %49
  %60 = phi i64 [ 0, %49 ], [ %74, %73 ]
  br label %65

61:                                               ; preds = %73
  %62 = getelementptr inbounds [4 x i32], ptr %3, i64 0, i64 1
  %63 = getelementptr inbounds [4 x i32], ptr %3, i64 0, i64 3
  %64 = getelementptr inbounds [4 x i32], ptr %3, i64 0, i64 2
  br label %76

65:                                               ; preds = %65, %59
  %66 = phi i64 [ 0, %59 ], [ %71, %65 ]
  %67 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %60, i64 %66
  %68 = load i16, ptr %67, align 2, !tbaa !40
  %69 = zext i16 %68 to i32
  %70 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %66, i64 %60
  store i32 %69, ptr %70, align 4, !tbaa !18
  store i16 0, ptr %67, align 2, !tbaa !40
  %71 = add nuw nsw i64 %66, 1
  %72 = icmp eq i64 %71, 8
  br i1 %72, label %73, label %65, !llvm.loop !151

73:                                               ; preds = %65
  %74 = add nuw nsw i64 %60, 1
  %75 = icmp eq i64 %74, 8
  br i1 %75, label %61, label %59, !llvm.loop !152

76:                                               ; preds = %157, %61
  %77 = phi i1 [ true, %61 ], [ false, %157 ]
  %78 = phi i64 [ 0, %61 ], [ 4, %157 ]
  %79 = or i64 %78, 2
  %80 = or i64 %78, 1
  %81 = or i64 %78, 3
  br label %82

82:                                               ; preds = %156, %76
  %83 = phi i1 [ true, %76 ], [ false, %156 ]
  %84 = phi i64 [ 0, %76 ], [ 4, %156 ]
  %85 = or i64 %84, 2
  %86 = or i64 %84, 1
  %87 = or i64 %84, 3
  br label %88

88:                                               ; preds = %105, %82
  %89 = phi i64 [ 0, %82 ], [ %120, %105 ]
  %90 = add nuw nsw i64 %89, %78
  br label %91

91:                                               ; preds = %91, %88
  %92 = phi i1 [ true, %88 ], [ false, %91 ]
  %93 = phi i64 [ 0, %88 ], [ 1, %91 ]
  %94 = xor i64 %93, 3
  %95 = or i64 %93, %84
  %96 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %95, i64 %90
  %97 = load i32, ptr %96, align 4, !tbaa !18
  %98 = or i64 %94, %84
  %99 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %98, i64 %90
  %100 = load i32, ptr %99, align 4, !tbaa !18
  %101 = add nsw i32 %100, %97
  %102 = getelementptr inbounds [4 x i32], ptr %3, i64 0, i64 %93
  store i32 %101, ptr %102, align 4, !tbaa !18
  %103 = sub nsw i32 %97, %100
  %104 = getelementptr inbounds [4 x i32], ptr %3, i64 0, i64 %94
  store i32 %103, ptr %104, align 4, !tbaa !18
  br i1 %92, label %91, label %105, !llvm.loop !153

105:                                              ; preds = %91
  %106 = load i32, ptr %3, align 16, !tbaa !18
  %107 = load i32, ptr %62, align 4, !tbaa !18
  %108 = add nsw i32 %107, %106
  %109 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %84, i64 %90
  store i32 %108, ptr %109, align 4, !tbaa !18
  %110 = sub nsw i32 %106, %107
  %111 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %85, i64 %90
  store i32 %110, ptr %111, align 4, !tbaa !18
  %112 = load i32, ptr %63, align 4, !tbaa !18
  %113 = shl nsw i32 %112, 1
  %114 = load i32, ptr %64, align 8, !tbaa !18
  %115 = add nsw i32 %113, %114
  %116 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %86, i64 %90
  store i32 %115, ptr %116, align 4, !tbaa !18
  %117 = shl nsw i32 %114, 1
  %118 = sub nsw i32 %112, %117
  %119 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %87, i64 %90
  store i32 %118, ptr %119, align 4, !tbaa !18
  %120 = add nuw nsw i64 %89, 1
  %121 = icmp eq i64 %120, 4
  br i1 %121, label %122, label %88, !llvm.loop !154

122:                                              ; preds = %139, %105
  %123 = phi i64 [ %154, %139 ], [ 0, %105 ]
  %124 = add nuw nsw i64 %123, %84
  br label %125

125:                                              ; preds = %125, %122
  %126 = phi i1 [ true, %122 ], [ false, %125 ]
  %127 = phi i64 [ 0, %122 ], [ 1, %125 ]
  %128 = xor i64 %127, 3
  %129 = or i64 %127, %78
  %130 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %124, i64 %129
  %131 = load i32, ptr %130, align 4, !tbaa !18
  %132 = or i64 %128, %78
  %133 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %124, i64 %132
  %134 = load i32, ptr %133, align 4, !tbaa !18
  %135 = add nsw i32 %134, %131
  %136 = getelementptr inbounds [4 x i32], ptr %3, i64 0, i64 %127
  store i32 %135, ptr %136, align 4, !tbaa !18
  %137 = sub nsw i32 %131, %134
  %138 = getelementptr inbounds [4 x i32], ptr %3, i64 0, i64 %128
  store i32 %137, ptr %138, align 4, !tbaa !18
  br i1 %126, label %125, label %139, !llvm.loop !155

139:                                              ; preds = %125
  %140 = load i32, ptr %3, align 16, !tbaa !18
  %141 = load i32, ptr %62, align 4, !tbaa !18
  %142 = add nsw i32 %141, %140
  %143 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %124, i64 %78
  store i32 %142, ptr %143, align 16, !tbaa !18
  %144 = sub nsw i32 %140, %141
  %145 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %124, i64 %79
  store i32 %144, ptr %145, align 8, !tbaa !18
  %146 = load i32, ptr %63, align 4, !tbaa !18
  %147 = shl nsw i32 %146, 1
  %148 = load i32, ptr %64, align 8, !tbaa !18
  %149 = add nsw i32 %147, %148
  %150 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %124, i64 %80
  store i32 %149, ptr %150, align 4, !tbaa !18
  %151 = shl nsw i32 %148, 1
  %152 = sub nsw i32 %146, %151
  %153 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %124, i64 %81
  store i32 %152, ptr %153, align 4, !tbaa !18
  %154 = add nuw nsw i64 %123, 1
  %155 = icmp eq i64 %154, 4
  br i1 %155, label %156, label %122, !llvm.loop !156

156:                                              ; preds = %139
  br i1 %83, label %82, label %157, !llvm.loop !157

157:                                              ; preds = %156
  br i1 %77, label %76, label %158, !llvm.loop !158

158:                                              ; preds = %157
  %159 = load i32, ptr %4, align 16, !tbaa !18
  %160 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 4
  %161 = load i32, ptr %160, align 16, !tbaa !18
  %162 = add nsw i32 %161, %159
  %163 = getelementptr inbounds [8 x i32], ptr %4, i64 0, i64 4
  %164 = load i32, ptr %163, align 16, !tbaa !18
  %165 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 4, i64 4
  %166 = load i32, ptr %165, align 16, !tbaa !18
  %167 = add i32 %166, %164
  %168 = add i32 %167, %162
  store i32 %168, ptr %5, align 16, !tbaa !18
  %169 = add i32 %159, %164
  %170 = add i32 %161, %166
  %171 = sub i32 %169, %170
  %172 = getelementptr inbounds [4 x i32], ptr %5, i64 0, i64 1
  store i32 %171, ptr %172, align 4, !tbaa !18
  %173 = sub i32 %162, %167
  %174 = getelementptr inbounds [4 x i32], ptr %5, i64 0, i64 2
  store i32 %173, ptr %174, align 8, !tbaa !18
  %175 = add i32 %161, %164
  %176 = sub i32 %159, %175
  %177 = add nsw i32 %176, %166
  %178 = getelementptr inbounds [4 x i32], ptr %5, i64 0, i64 3
  store i32 %177, ptr %178, align 4, !tbaa !18
  %179 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 8
  %180 = load i32, ptr %179, align 4, !tbaa !144
  %181 = icmp ne i32 %180, 0
  %182 = or i1 %50, %181
  %183 = sext i32 %57 to i64
  %184 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @dequant_coef, i64 0, i64 %183
  %185 = sext i32 %54 to i64
  %186 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @quant_coef, i64 0, i64 %185
  %187 = shl nsw i32 %52, 1
  %188 = add nsw i32 %55, 16
  %189 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @dequant_coef, i64 0, i64 %185
  %190 = sext i32 %1 to i64
  %191 = load i32, ptr %189, align 16, !tbaa !18
  br label %192

192:                                              ; preds = %245, %158
  %193 = phi i1 [ true, %158 ], [ false, %245 ]
  %194 = phi i64 [ 0, %158 ], [ 1, %245 ]
  %195 = add nsw i64 %194, %190
  br label %196

196:                                              ; preds = %240, %192
  %197 = phi i1 [ true, %192 ], [ false, %240 ]
  %198 = phi i64 [ 0, %192 ], [ 1, %240 ]
  br i1 %182, label %199, label %217

199:                                              ; preds = %196
  %200 = shl nuw nsw i64 %198, 1
  %201 = or i64 %200, %194
  %202 = getelementptr inbounds [4 x i32], ptr %5, i64 0, i64 %201
  %203 = load i32, ptr %202, align 4, !tbaa !18
  %204 = tail call i32 @llvm.abs.i32(i32 %203, i1 true)
  %205 = load i32, ptr %186, align 16, !tbaa !18
  %206 = mul nsw i32 %204, %205
  %207 = add nsw i32 %206, %187
  %208 = ashr i32 %207, %188
  %209 = or i64 %198, 4
  %210 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %195, i64 %209
  %211 = load i32, ptr %210, align 8, !tbaa !18
  %212 = icmp slt i32 %203, 0
  %213 = tail call i32 @llvm.abs.i32(i32 %208, i1 true)
  %214 = sub nsw i32 0, %213
  %215 = select i1 %212, i32 %214, i32 %213
  %216 = add nsw i32 %215, %211
  br label %240

217:                                              ; preds = %196
  %218 = or i64 %198, 4
  %219 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %195, i64 %218
  %220 = load i32, ptr %219, align 8, !tbaa !18
  %221 = load i32, ptr %184, align 16, !tbaa !18
  %222 = shl i32 %220, 4
  %223 = mul i32 %222, %221
  %224 = shl i32 %223, %58
  %225 = ashr i32 %224, 5
  %226 = shl nuw nsw i64 %198, 1
  %227 = or i64 %226, %194
  %228 = getelementptr inbounds [4 x i32], ptr %5, i64 0, i64 %227
  %229 = load i32, ptr %228, align 4, !tbaa !18
  %230 = add nsw i32 %225, %229
  %231 = tail call i32 @llvm.abs.i32(i32 %230, i1 true)
  %232 = load i32, ptr %186, align 16, !tbaa !18
  %233 = mul nsw i32 %231, %232
  %234 = add nsw i32 %233, %187
  %235 = ashr i32 %234, %188
  %236 = icmp slt i32 %230, 0
  %237 = tail call i32 @llvm.abs.i32(i32 %235, i1 true)
  %238 = sub nsw i32 0, %237
  %239 = select i1 %236, i32 %238, i32 %237
  br label %240

240:                                              ; preds = %217, %199
  %241 = phi i32 [ %216, %199 ], [ %239, %217 ]
  %242 = phi ptr [ %202, %199 ], [ %228, %217 ]
  %243 = mul nsw i32 %241, %191
  %244 = shl i32 %243, %55
  store i32 %244, ptr %242, align 4, !tbaa !18
  br i1 %197, label %196, label %245, !llvm.loop !159

245:                                              ; preds = %240
  br i1 %193, label %192, label %246, !llvm.loop !160

246:                                              ; preds = %320, %245
  %247 = phi i1 [ false, %320 ], [ true, %245 ]
  %248 = phi i64 [ 1, %320 ], [ 0, %245 ]
  %249 = or i64 %248, 4
  %250 = shl nuw nsw i64 %248, 2
  br label %251

251:                                              ; preds = %319, %246
  %252 = phi i1 [ true, %246 ], [ false, %319 ]
  %253 = phi i64 [ 0, %246 ], [ 1, %319 ]
  %254 = add nsw i64 %253, %190
  %255 = shl nuw nsw i64 %253, 2
  br label %256

256:                                              ; preds = %316, %251
  %257 = phi i64 [ 0, %251 ], [ %317, %316 ]
  %258 = add nuw nsw i64 %257, %255
  br label %259

259:                                              ; preds = %308, %256
  %260 = phi i64 [ 0, %256 ], [ %314, %308 ]
  %261 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %254, i64 %249, i64 %260, i64 %257
  %262 = load i32, ptr %261, align 4, !tbaa !18
  %263 = ashr i32 %262, %58
  %264 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @dequant_coef, i64 0, i64 %183, i64 %257, i64 %260
  %265 = load i32, ptr %264, align 4, !tbaa !18
  %266 = sdiv i32 %263, %265
  store i32 %266, ptr %261, align 4, !tbaa !18
  %267 = load i32, ptr %179, align 4, !tbaa !144
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %272

269:                                              ; preds = %259
  %270 = load i32, ptr %51, align 4, !tbaa !137
  %271 = icmp eq i32 %270, 4
  br i1 %271, label %272, label %287

272:                                              ; preds = %269, %259
  %273 = add nuw nsw i64 %260, %250
  %274 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %258, i64 %273
  %275 = load i32, ptr %274, align 4, !tbaa !18
  %276 = tail call i32 @llvm.abs.i32(i32 %275, i1 true)
  %277 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @quant_coef, i64 0, i64 %185, i64 %257, i64 %260
  %278 = load i32, ptr %277, align 4, !tbaa !18
  %279 = mul nsw i32 %276, %278
  %280 = add nsw i32 %279, %52
  %281 = ashr i32 %280, %53
  %282 = icmp slt i32 %275, 0
  %283 = tail call i32 @llvm.abs.i32(i32 %281, i1 true)
  %284 = sub nsw i32 0, %283
  %285 = select i1 %282, i32 %284, i32 %283
  %286 = add nsw i32 %285, %266
  br label %308

287:                                              ; preds = %269
  %288 = mul nsw i32 %266, %265
  %289 = getelementptr inbounds [4 x [4 x i32]], ptr @A, i64 0, i64 %257, i64 %260
  %290 = load i32, ptr %289, align 4, !tbaa !18
  %291 = mul nsw i32 %288, %290
  %292 = shl i32 %291, %58
  %293 = ashr i32 %292, 6
  %294 = add nuw nsw i64 %260, %250
  %295 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %258, i64 %294
  %296 = load i32, ptr %295, align 4, !tbaa !18
  %297 = add nsw i32 %293, %296
  %298 = tail call i32 @llvm.abs.i32(i32 %297, i1 true)
  %299 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @quant_coef, i64 0, i64 %185, i64 %257, i64 %260
  %300 = load i32, ptr %299, align 4, !tbaa !18
  %301 = mul nsw i32 %298, %300
  %302 = add nsw i32 %301, %52
  %303 = ashr i32 %302, %53
  %304 = icmp slt i32 %297, 0
  %305 = tail call i32 @llvm.abs.i32(i32 %303, i1 true)
  %306 = sub nsw i32 0, %305
  %307 = select i1 %304, i32 %306, i32 %305
  br label %308

308:                                              ; preds = %287, %272
  %309 = phi i32 [ %286, %272 ], [ %307, %287 ]
  %310 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @dequant_coef, i64 0, i64 %185, i64 %257, i64 %260
  %311 = load i32, ptr %310, align 4, !tbaa !18
  %312 = mul nsw i32 %309, %311
  %313 = shl i32 %312, %55
  store i32 %313, ptr %261, align 4, !tbaa !18
  %314 = add nuw nsw i64 %260, 1
  %315 = icmp eq i64 %314, 4
  br i1 %315, label %316, label %259, !llvm.loop !161

316:                                              ; preds = %308
  %317 = add nuw nsw i64 %257, 1
  %318 = icmp eq i64 %317, 4
  br i1 %318, label %319, label %256, !llvm.loop !162

319:                                              ; preds = %316
  br i1 %252, label %251, label %320, !llvm.loop !163

320:                                              ; preds = %319
  br i1 %247, label %246, label %321, !llvm.loop !164

321:                                              ; preds = %320
  %322 = load i32, ptr %5, align 16, !tbaa !18
  %323 = load i32, ptr %172, align 4, !tbaa !18
  %324 = add nsw i32 %323, %322
  %325 = load i32, ptr %174, align 8, !tbaa !18
  %326 = load i32, ptr %178, align 4, !tbaa !18
  %327 = add i32 %326, %325
  %328 = add i32 %327, %324
  %329 = ashr i32 %328, 1
  %330 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %190, i64 4
  store i32 %329, ptr %330, align 8, !tbaa !18
  %331 = add i32 %322, %325
  %332 = add i32 %323, %326
  %333 = sub i32 %331, %332
  %334 = ashr i32 %333, 1
  %335 = add nsw i32 %1, 1
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %336, i64 4
  store i32 %334, ptr %337, align 8, !tbaa !18
  %338 = sub i32 %324, %327
  %339 = ashr i32 %338, 1
  %340 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %190, i64 5
  store i32 %339, ptr %340, align 8, !tbaa !18
  %341 = add i32 %323, %325
  %342 = sub i32 %322, %341
  %343 = add nsw i32 %342, %326
  %344 = ashr i32 %343, 1
  %345 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %336, i64 5
  store i32 %344, ptr %345, align 8, !tbaa !18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #48
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %4) #48
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @CheckAvailabilityOfNeighborsCABAC() #0 {
  %1 = alloca %struct.pix_pos, align 4
  %2 = alloca %struct.pix_pos, align 4
  %3 = load ptr, ptr @img, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.img_par, ptr %3, i64 0, i32 39
  %5 = load ptr, ptr %4, align 8, !tbaa !84
  %6 = getelementptr inbounds %struct.img_par, ptr %3, i64 0, i32 1
  %7 = load i32, ptr %6, align 4, !tbaa !49
  %8 = zext i32 %7 to i64
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %1) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #48
  %9 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  call void %9(i32 noundef %7, i32 noundef -1, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %2) #46
  %10 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  %11 = load ptr, ptr @img, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.img_par, ptr %11, i64 0, i32 1
  %13 = load i32, ptr %12, align 4, !tbaa !49
  call void %10(i32 noundef %13, i32 noundef 0, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %1) #46
  %14 = load i32, ptr %1, align 4, !tbaa !52
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %0
  %17 = load ptr, ptr @img, align 8, !tbaa !13
  %18 = getelementptr inbounds %struct.img_par, ptr %17, i64 0, i32 39
  %19 = load ptr, ptr %18, align 8, !tbaa !84
  %20 = getelementptr inbounds %struct.pix_pos, ptr %1, i64 0, i32 1
  %21 = load i32, ptr %20, align 4, !tbaa !57
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.macroblock, ptr %19, i64 %22
  br label %24

24:                                               ; preds = %16, %0
  %25 = phi ptr [ %23, %16 ], [ null, %0 ]
  %26 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %8, i32 4
  store ptr %25, ptr %26, align 8
  %27 = load i32, ptr %2, align 4, !tbaa !52
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %24
  %30 = load ptr, ptr @img, align 8, !tbaa !13
  %31 = getelementptr inbounds %struct.img_par, ptr %30, i64 0, i32 39
  %32 = load ptr, ptr %31, align 8, !tbaa !84
  %33 = getelementptr inbounds %struct.pix_pos, ptr %2, i64 0, i32 1
  %34 = load i32, ptr %33, align 4, !tbaa !57
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.macroblock, ptr %32, i64 %35
  br label %37

37:                                               ; preds = %29, %24
  %38 = phi ptr [ %36, %29 ], [ null, %24 ]
  %39 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %8, i32 5
  store ptr %38, ptr %39, align 8
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %1) #48
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define internal void @cabac_new_slice() #18 {
  store i32 0, ptr @last_dquant, align 4, !tbaa !18
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal noalias ptr @create_contexts_MotionInfo() #0 {
  %1 = tail call noalias dereferenceable_or_null(420) ptr @calloc(i64 noundef 1, i64 noundef 420) #45
  %2 = icmp eq ptr %1, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  tail call void @no_mem_exit(ptr noundef nonnull @.str.17) #46
  br label %4

4:                                                ; preds = %3, %0
  ret ptr %1
}

; Function Attrs: nounwind optsize uwtable
define internal noalias ptr @create_contexts_TextureInfo() #0 {
  %1 = tail call noalias dereferenceable_or_null(3032) ptr @calloc(i64 noundef 1, i64 noundef 3032) #45
  %2 = icmp eq ptr %1, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  tail call void @no_mem_exit(ptr noundef nonnull @.str.1.18) #46
  br label %4

4:                                                ; preds = %3, %0
  ret ptr %1
}

; Function Attrs: mustprogress nounwind optsize willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define internal void @delete_contexts_MotionInfo(ptr noundef %0) #19 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @free(ptr noundef nonnull %0) #46
  br label %4

4:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: mustprogress nounwind optsize willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define internal void @delete_contexts_TextureInfo(ptr noundef %0) #19 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @free(ptr noundef nonnull %0) #46
  br label %4

4:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @readFieldModeInfo_CABAC(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %5 = load ptr, ptr %4, align 8, !tbaa !165
  %6 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 10
  %7 = load ptr, ptr %6, align 8, !tbaa !166
  %8 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 39
  %9 = load ptr, ptr %8, align 8, !tbaa !84
  %10 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 1
  %11 = load i32, ptr %10, align 4, !tbaa !49
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %struct.macroblock, ptr %9, i64 %12, i32 26
  %14 = load i32, ptr %13, align 4, !tbaa !168
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.macroblock, ptr %9, i64 %12, i32 22
  %18 = load i32, ptr %17, align 4, !tbaa !169
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.macroblock, ptr %9, i64 %19, i32 20
  %21 = load i32, ptr %20, align 4, !tbaa !170
  br label %22

22:                                               ; preds = %16, %3
  %23 = phi i32 [ %21, %16 ], [ 0, %3 ]
  %24 = getelementptr inbounds %struct.macroblock, ptr %9, i64 %12, i32 27
  %25 = load i32, ptr %24, align 8, !tbaa !171
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.macroblock, ptr %9, i64 %12, i32 23
  %29 = load i32, ptr %28, align 8, !tbaa !172
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.macroblock, ptr %9, i64 %30, i32 20
  %32 = load i32, ptr %31, align 4, !tbaa !170
  br label %33

33:                                               ; preds = %27, %22
  %34 = phi i32 [ %32, %27 ], [ 0, %22 ]
  %35 = add nsw i32 %34, %23
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %struct.MotionInfoContexts, ptr %7, i64 0, i32 5, i64 %36
  %38 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %37) #46
  %39 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 %38, ptr %39, align 4, !tbaa !173
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @check_next_mb_and_get_field_mode_CABAC(ptr nocapture noundef %0, ptr nocapture noundef %1, ptr noundef %2) #0 {
  %4 = alloca [4 x ptr], align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #48
  %5 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 10
  %6 = load i32, ptr %5, align 4, !tbaa !137
  %7 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 1
  %8 = load i32, ptr %7, align 4, !tbaa !49
  %9 = add i32 %8, 1
  store i32 %9, ptr %7, align 4, !tbaa !49
  %10 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 39
  %11 = load ptr, ptr %10, align 8, !tbaa !84
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 3
  %14 = load i32, ptr %13, align 4, !tbaa !175
  %15 = getelementptr inbounds %struct.macroblock, ptr %11, i64 %12, i32 2
  store i32 %14, ptr %15, align 4, !tbaa !176
  %16 = zext i32 %8 to i64
  %17 = getelementptr inbounds %struct.macroblock, ptr %11, i64 %16, i32 20
  %18 = load i32, ptr %17, align 4, !tbaa !170
  %19 = getelementptr inbounds %struct.macroblock, ptr %11, i64 %12, i32 20
  store i32 %18, ptr %19, align 4, !tbaa !170
  tail call void @CheckAvailabilityOfNeighbors() #46
  tail call void @CheckAvailabilityOfNeighborsCABAC() #47
  %20 = tail call noalias dereferenceable_or_null(40) ptr @calloc(i64 noundef 1, i64 noundef 40) #45
  br label %21

21:                                               ; preds = %21, %3
  %22 = phi i64 [ 0, %3 ], [ %25, %21 ]
  %23 = tail call noalias dereferenceable_or_null(44) ptr @calloc(i64 noundef 11, i64 noundef 4) #45
  %24 = getelementptr inbounds [4 x ptr], ptr %4, i64 0, i64 %22
  store ptr %23, ptr %24, align 8, !tbaa !13
  %25 = add nuw nsw i64 %22, 1
  %26 = icmp eq i64 %25, 4
  br i1 %26, label %27, label %21, !llvm.loop !177

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.datapartition, ptr %2, i64 0, i32 1
  %29 = tail call noalias dereferenceable_or_null(16) ptr @calloc(i64 noundef 4, i64 noundef 4) #45
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %20, ptr noundef nonnull align 8 dereferenceable(40) %28, i64 40, i1 false)
  %30 = getelementptr inbounds %struct.datapartition, ptr %2, i64 0, i32 1, i32 6
  %31 = load ptr, ptr %30, align 8, !tbaa !30
  %32 = load i32, ptr %31, align 4, !tbaa !18
  %33 = getelementptr inbounds %struct.DecodingEnvironment, ptr %20, i64 0, i32 6
  %34 = load ptr, ptr %33, align 8, !tbaa !30
  store i32 %32, ptr %34, align 4, !tbaa !18
  %35 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  br label %36

36:                                               ; preds = %36, %27
  %37 = phi i64 [ 0, %27 ], [ %44, %36 ]
  %38 = getelementptr inbounds [4 x ptr], ptr %4, i64 0, i64 %37
  %39 = load ptr, ptr %38, align 8, !tbaa !13
  %40 = load ptr, ptr %35, align 8, !tbaa !165
  %41 = getelementptr inbounds %struct.Slice, ptr %40, i64 0, i32 10
  %42 = load ptr, ptr %41, align 8, !tbaa !166
  %43 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %42, i64 0, i64 %37
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(44) %39, ptr noundef nonnull align 2 dereferenceable(44) %43, i64 44, i1 false)
  %44 = add nuw nsw i64 %37, 1
  %45 = icmp eq i64 %44, 4
  br i1 %45, label %46, label %36, !llvm.loop !178

46:                                               ; preds = %36
  %47 = icmp eq i32 %6, 1
  %48 = load ptr, ptr %35, align 8, !tbaa !165
  %49 = getelementptr inbounds %struct.Slice, ptr %48, i64 0, i32 10
  %50 = load ptr, ptr %49, align 8, !tbaa !166
  %51 = getelementptr inbounds %struct.MotionInfoContexts, ptr %50, i64 0, i32 5
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %29, ptr noundef nonnull align 2 dereferenceable(16) %51, i64 16, i1 false)
  store i32 0, ptr @last_dquant, align 4, !tbaa !18
  tail call void @readMB_skip_flagInfo_CABAC(ptr noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %28) #47
  %52 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  %53 = load i32, ptr %52, align 4, !tbaa !173
  %54 = icmp eq i32 %53, 0
  br i1 %47, label %55, label %56

55:                                               ; preds = %46
  br i1 %54, label %57, label %61

56:                                               ; preds = %46
  br i1 %54, label %69, label %61

57:                                               ; preds = %55
  %58 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 2
  %59 = load i32, ptr %58, align 8, !tbaa !179
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %57, %56, %55
  tail call void @readFieldModeInfo_CABAC(ptr noundef nonnull %0, ptr noundef nonnull %1, ptr noundef nonnull %28) #47
  %62 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  %63 = load i32, ptr %62, align 4, !tbaa !173
  %64 = load ptr, ptr %10, align 8, !tbaa !84
  %65 = load i32, ptr %7, align 4, !tbaa !49
  %66 = add i32 %65, -1
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %struct.macroblock, ptr %64, i64 %67, i32 20
  store i32 %63, ptr %68, align 4, !tbaa !170
  br label %69

69:                                               ; preds = %61, %57, %56
  %70 = phi i32 [ 0, %61 ], [ 1, %57 ], [ 1, %56 ]
  %71 = load i32, ptr %7, align 4, !tbaa !49
  %72 = add i32 %71, -1
  store i32 %72, ptr %7, align 4, !tbaa !49
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %28, ptr noundef nonnull align 8 dereferenceable(40) %20, i64 40, i1 false)
  %73 = load ptr, ptr %30, align 8, !tbaa !30
  store i32 %32, ptr %73, align 4, !tbaa !18
  br label %74

74:                                               ; preds = %74, %69
  %75 = phi i64 [ 0, %69 ], [ %82, %74 ]
  %76 = load ptr, ptr %35, align 8, !tbaa !165
  %77 = getelementptr inbounds %struct.Slice, ptr %76, i64 0, i32 10
  %78 = load ptr, ptr %77, align 8, !tbaa !166
  %79 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %78, i64 0, i64 %75
  %80 = getelementptr inbounds [4 x ptr], ptr %4, i64 0, i64 %75
  %81 = load ptr, ptr %80, align 8, !tbaa !13
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(44) %79, ptr noundef nonnull align 2 dereferenceable(44) %81, i64 44, i1 false)
  %82 = add nuw nsw i64 %75, 1
  %83 = icmp eq i64 %82, 4
  br i1 %83, label %84, label %74, !llvm.loop !180

84:                                               ; preds = %74
  %85 = load ptr, ptr %35, align 8, !tbaa !165
  %86 = getelementptr inbounds %struct.Slice, ptr %85, i64 0, i32 10
  %87 = load ptr, ptr %86, align 8, !tbaa !166
  %88 = getelementptr inbounds %struct.MotionInfoContexts, ptr %87, i64 0, i32 5
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %88, ptr noundef nonnull align 2 dereferenceable(16) %29, i64 16, i1 false)
  tail call void @CheckAvailabilityOfNeighborsCABAC() #47
  tail call void @free(ptr noundef %20) #46
  br label %89

89:                                               ; preds = %89, %84
  %90 = phi i64 [ 0, %84 ], [ %93, %89 ]
  %91 = getelementptr inbounds [4 x ptr], ptr %4, i64 0, i64 %90
  %92 = load ptr, ptr %91, align 8, !tbaa !13
  tail call void @free(ptr noundef %92) #46
  %93 = add nuw nsw i64 %90, 1
  %94 = icmp eq i64 %93, 4
  br i1 %94, label %95, label %89, !llvm.loop !181

95:                                               ; preds = %89
  tail call void @free(ptr noundef %29) #46
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #48
  ret i32 %70
}

; Function Attrs: nounwind optsize uwtable
define internal void @readMB_skip_flagInfo_CABAC(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 10
  %5 = load i32, ptr %4, align 4, !tbaa !137
  %6 = icmp eq i32 %5, 1
  %7 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %8 = load ptr, ptr %7, align 8, !tbaa !165
  %9 = getelementptr inbounds %struct.Slice, ptr %8, i64 0, i32 10
  %10 = load ptr, ptr %9, align 8, !tbaa !166
  %11 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 39
  %12 = load ptr, ptr %11, align 8, !tbaa !84
  %13 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 1
  %14 = load i32, ptr %13, align 4, !tbaa !49
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 4
  %17 = load ptr, ptr %16, align 8, !tbaa !182
  %18 = icmp eq ptr %17, null
  br i1 %6, label %19, label %45

19:                                               ; preds = %3
  br i1 %18, label %25, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %struct.macroblock, ptr %17, i64 0, i32 21
  %22 = load i32, ptr %21, align 8, !tbaa !183
  %23 = icmp eq i32 %22, 0
  %24 = zext i1 %23 to i64
  br label %25

25:                                               ; preds = %20, %19
  %26 = phi i64 [ %24, %20 ], [ 0, %19 ]
  %27 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 5
  %28 = load ptr, ptr %27, align 8, !tbaa !184
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.macroblock, ptr %28, i64 0, i32 21
  %32 = load i32, ptr %31, align 8, !tbaa !183
  %33 = icmp eq i32 %32, 0
  %34 = select i1 %33, i64 8, i64 7
  br label %35

35:                                               ; preds = %30, %25
  %36 = phi i64 [ %34, %30 ], [ 7, %25 ]
  %37 = add nuw nsw i64 %36, %26
  %38 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 2, i64 %37
  %39 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %38) #46
  %40 = icmp eq i32 %39, 1
  %41 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 2
  %42 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  br i1 %40, label %43, label %44

43:                                               ; preds = %35
  store i32 0, ptr %41, align 8, !tbaa !179
  br label %69

44:                                               ; preds = %35
  store i32 1, ptr %41, align 8, !tbaa !179
  store i32 1, ptr %42, align 4, !tbaa !173
  br label %71

45:                                               ; preds = %3
  br i1 %18, label %51, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %struct.macroblock, ptr %17, i64 0, i32 21
  %48 = load i32, ptr %47, align 8, !tbaa !183
  %49 = icmp eq i32 %48, 0
  %50 = zext i1 %49 to i64
  br label %51

51:                                               ; preds = %46, %45
  %52 = phi i64 [ %50, %46 ], [ 0, %45 ]
  %53 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 5
  %54 = load ptr, ptr %53, align 8, !tbaa !184
  %55 = icmp eq ptr %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.macroblock, ptr %54, i64 0, i32 21
  %58 = load i32, ptr %57, align 8, !tbaa !183
  %59 = icmp eq i32 %58, 0
  %60 = zext i1 %59 to i64
  br label %61

61:                                               ; preds = %56, %51
  %62 = phi i64 [ %60, %56 ], [ 0, %51 ]
  %63 = add nuw nsw i64 %62, %52
  %64 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 1, i64 %63
  %65 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %64) #46
  %66 = icmp eq i32 %65, 1
  %67 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  br i1 %66, label %69, label %68

68:                                               ; preds = %61
  store i32 1, ptr %67, align 4, !tbaa !173
  br label %71

69:                                               ; preds = %61, %43
  %70 = phi ptr [ %42, %43 ], [ %67, %61 ]
  store i32 0, ptr %70, align 4, !tbaa !173
  store i32 0, ptr @last_dquant, align 4, !tbaa !18
  br label %71

71:                                               ; preds = %69, %68, %44
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @readMVD_CABAC(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = alloca %struct.pix_pos, align 4
  %5 = alloca %struct.pix_pos, align 4
  %6 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 40
  %7 = load i32, ptr %6, align 8, !tbaa !185
  %8 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 41
  %9 = load i32, ptr %8, align 4, !tbaa !186
  %10 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 2
  %11 = load i32, ptr %10, align 8, !tbaa !179
  %12 = and i32 %11, 1
  %13 = ashr i32 %11, 1
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #48
  %14 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %15 = load ptr, ptr %14, align 8, !tbaa !165
  %16 = getelementptr inbounds %struct.Slice, ptr %15, i64 0, i32 10
  %17 = load ptr, ptr %16, align 8, !tbaa !166
  %18 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 39
  %19 = load ptr, ptr %18, align 8, !tbaa !84
  %20 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 1
  %21 = load i32, ptr %20, align 4, !tbaa !49
  %22 = zext i32 %21 to i64
  %23 = shl i32 %7, 2
  %24 = add nsw i32 %23, -1
  %25 = shl i32 %9, 2
  call void @getLuma4x4Neighbour(i32 noundef %21, i32 noundef %24, i32 noundef %25, ptr noundef nonnull %4) #46
  %26 = load i32, ptr %20, align 4, !tbaa !49
  %27 = add nsw i32 %25, -1
  call void @getLuma4x4Neighbour(i32 noundef %26, i32 noundef %23, i32 noundef %27, ptr noundef nonnull %5) #46
  %28 = load i32, ptr %5, align 4, !tbaa !52
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %66, label %30

30:                                               ; preds = %3
  %31 = load ptr, ptr %18, align 8, !tbaa !84
  %32 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 1
  %33 = load i32, ptr %32, align 4, !tbaa !57
  %34 = sext i32 %33 to i64
  %35 = zext i32 %12 to i64
  %36 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 3
  %37 = load i32, ptr %36, align 4, !tbaa !187
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 2
  %40 = load i32, ptr %39, align 4, !tbaa !188
  %41 = sext i32 %40 to i64
  %42 = sext i32 %13 to i64
  %43 = getelementptr inbounds %struct.macroblock, ptr %31, i64 %34, i32 7, i64 %35, i64 %38, i64 %41, i64 %42
  %44 = load i32, ptr %43, align 4, !tbaa !18
  %45 = call i32 @llvm.abs.i32(i32 %44, i1 true)
  %46 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 44
  %47 = load i32, ptr %46, align 8, !tbaa !189
  %48 = icmp ne i32 %47, 0
  %49 = icmp eq i32 %13, 1
  %50 = select i1 %48, i1 %49, i1 false
  br i1 %50, label %51, label %66

51:                                               ; preds = %30
  %52 = getelementptr inbounds %struct.macroblock, ptr %19, i64 %22, i32 20
  %53 = load i32, ptr %52, align 4, !tbaa !170
  switch i32 %53, label %66 [
    i32 0, label %54
    i32 1, label %60
  ]

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.macroblock, ptr %31, i64 %34, i32 20
  %56 = load i32, ptr %55, align 4, !tbaa !170
  %57 = icmp eq i32 %56, 1
  %58 = zext i1 %57 to i32
  %59 = shl nuw nsw i32 %45, %58
  br label %66

60:                                               ; preds = %51
  %61 = getelementptr inbounds %struct.macroblock, ptr %31, i64 %34, i32 20
  %62 = load i32, ptr %61, align 4, !tbaa !170
  %63 = icmp eq i32 %62, 0
  %64 = zext i1 %63 to i32
  %65 = lshr i32 %45, %64
  br label %66

66:                                               ; preds = %60, %54, %51, %30, %3
  %67 = phi i32 [ %45, %30 ], [ 0, %3 ], [ %59, %54 ], [ %45, %51 ], [ %65, %60 ]
  %68 = load i32, ptr %4, align 4, !tbaa !52
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %106, label %70

70:                                               ; preds = %66
  %71 = load ptr, ptr %18, align 8, !tbaa !84
  %72 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %73 = load i32, ptr %72, align 4, !tbaa !57
  %74 = sext i32 %73 to i64
  %75 = zext i32 %12 to i64
  %76 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 3
  %77 = load i32, ptr %76, align 4, !tbaa !187
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 2
  %80 = load i32, ptr %79, align 4, !tbaa !188
  %81 = sext i32 %80 to i64
  %82 = sext i32 %13 to i64
  %83 = getelementptr inbounds %struct.macroblock, ptr %71, i64 %74, i32 7, i64 %75, i64 %78, i64 %81, i64 %82
  %84 = load i32, ptr %83, align 4, !tbaa !18
  %85 = call i32 @llvm.abs.i32(i32 %84, i1 true)
  %86 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 44
  %87 = load i32, ptr %86, align 8, !tbaa !189
  %88 = icmp ne i32 %87, 0
  %89 = icmp eq i32 %13, 1
  %90 = select i1 %88, i1 %89, i1 false
  br i1 %90, label %91, label %106

91:                                               ; preds = %70
  %92 = getelementptr inbounds %struct.macroblock, ptr %19, i64 %22, i32 20
  %93 = load i32, ptr %92, align 4, !tbaa !170
  switch i32 %93, label %106 [
    i32 0, label %94
    i32 1, label %100
  ]

94:                                               ; preds = %91
  %95 = getelementptr inbounds %struct.macroblock, ptr %71, i64 %74, i32 20
  %96 = load i32, ptr %95, align 4, !tbaa !170
  %97 = icmp eq i32 %96, 1
  %98 = zext i1 %97 to i32
  %99 = shl nuw nsw i32 %85, %98
  br label %106

100:                                              ; preds = %91
  %101 = getelementptr inbounds %struct.macroblock, ptr %71, i64 %74, i32 20
  %102 = load i32, ptr %101, align 4, !tbaa !170
  %103 = icmp eq i32 %102, 0
  %104 = zext i1 %103 to i32
  %105 = lshr i32 %85, %104
  br label %106

106:                                              ; preds = %100, %94, %91, %70, %66
  %107 = phi i32 [ %85, %70 ], [ 0, %66 ], [ %99, %94 ], [ %85, %91 ], [ %105, %100 ]
  %108 = add nsw i32 %107, %67
  %109 = icmp slt i32 %108, 3
  br i1 %109, label %110, label %112

110:                                              ; preds = %106
  %111 = mul nsw i32 %13, 5
  br label %119

112:                                              ; preds = %106
  %113 = icmp ugt i32 %108, 32
  %114 = mul nsw i32 %13, 5
  br i1 %113, label %115, label %117

115:                                              ; preds = %112
  %116 = add nsw i32 %114, 3
  br label %119

117:                                              ; preds = %112
  %118 = add nsw i32 %114, 2
  br label %119

119:                                              ; preds = %117, %115, %110
  %120 = phi i32 [ %111, %110 ], [ %116, %115 ], [ %118, %117 ]
  %121 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 6
  store i32 %120, ptr %121, align 8, !tbaa !190
  %122 = getelementptr inbounds %struct.MotionInfoContexts, ptr %17, i64 0, i32 2
  %123 = sext i32 %120 to i64
  %124 = getelementptr inbounds [10 x %struct.BiContextType], ptr %122, i64 0, i64 %123
  %125 = call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %124) #46
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %119
  %128 = mul nsw i32 %13, 5
  %129 = getelementptr inbounds %struct.MotionInfoContexts, ptr %17, i64 0, i32 2, i64 1
  %130 = sext i32 %128 to i64
  %131 = getelementptr inbounds %struct.BiContextType, ptr %129, i64 %130
  %132 = call i32 @unary_exp_golomb_mv_decode(ptr noundef %2, ptr noundef nonnull %131, i32 noundef 3) #47
  %133 = add nsw i32 %132, 1
  %134 = call i32 @biari_decode_symbol_eq_prob(ptr noundef %2) #46
  %135 = icmp eq i32 %134, 0
  %136 = xor i32 %132, -1
  %137 = select i1 %135, i32 %133, i32 %136
  br label %138

138:                                              ; preds = %127, %119
  %139 = phi i32 [ 0, %119 ], [ %137, %127 ]
  %140 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 %139, ptr %140, align 4, !tbaa !173
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @unary_exp_golomb_mv_decode(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = tail call i32 @biari_decode_symbol(ptr noundef %0, ptr noundef %1) #46
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.BiContextType, ptr %1, i64 1
  br label %8

8:                                                ; preds = %8, %6
  %9 = phi i32 [ 1, %6 ], [ %13, %8 ]
  %10 = phi i32 [ 0, %6 ], [ %20, %8 ]
  %11 = phi ptr [ %7, %6 ], [ %19, %8 ]
  %12 = tail call i32 @biari_decode_symbol(ptr noundef %0, ptr noundef %11) #46
  %13 = add nuw nsw i32 %9, 1
  %14 = icmp eq i32 %13, 2
  %15 = zext i1 %14 to i64
  %16 = getelementptr inbounds %struct.BiContextType, ptr %11, i64 %15
  %17 = icmp eq i32 %13, %2
  %18 = zext i1 %17 to i64
  %19 = getelementptr inbounds %struct.BiContextType, ptr %16, i64 %18
  %20 = add nuw nsw i32 %10, 1
  %21 = icmp ne i32 %12, 0
  %22 = icmp ne i32 %13, 8
  %23 = select i1 %21, i1 %22, i1 false
  br i1 %23, label %8, label %24, !llvm.loop !191

24:                                               ; preds = %8
  %.lcssa2 = phi i32 [ %10, %8 ]
  %.lcssa1 = phi i32 [ %20, %8 ]
  %.lcssa = phi i1 [ %21, %8 ]
  br i1 %.lcssa, label %25, label %29

25:                                               ; preds = %24
  %26 = tail call i32 @exp_golomb_decode_eq_prob(ptr noundef %0, i32 noundef 3) #47
  %27 = add nuw i32 %.lcssa2, 2
  %28 = add i32 %27, %26
  br label %29

29:                                               ; preds = %25, %24, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %25 ], [ %.lcssa1, %24 ]
  ret i32 %30
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @exp_golomb_decode_eq_prob(ptr noundef %0, i32 noundef %1) #0 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i32 [ %1, %2 ], [ %10, %3 ]
  %5 = phi i32 [ 0, %2 ], [ %12, %3 ]
  %6 = tail call i32 @biari_decode_symbol_eq_prob(ptr noundef %0) #46
  %7 = icmp eq i32 %6, 1
  %8 = shl nuw i32 1, %4
  %9 = zext i1 %7 to i32
  %10 = add nsw i32 %4, %9
  %11 = select i1 %7, i32 %8, i32 0
  %12 = add nsw i32 %11, %5
  %13 = icmp eq i32 %6, 0
  br i1 %13, label %14, label %3, !llvm.loop !192

14:                                               ; preds = %3
  %.lcssa1 = phi i32 [ %10, %3 ]
  %.lcssa = phi i32 [ %12, %3 ]
  %15 = icmp eq i32 %.lcssa1, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %16, %14
  %17 = phi i32 [ %24, %16 ], [ 0, %14 ]
  %18 = phi i32 [ %19, %16 ], [ %.lcssa1, %14 ]
  %19 = add nsw i32 %18, -1
  %20 = tail call i32 @biari_decode_symbol_eq_prob(ptr noundef %0) #46
  %21 = icmp eq i32 %20, 1
  %22 = shl nuw i32 1, %19
  %23 = select i1 %21, i32 %22, i32 0
  %24 = or i32 %23, %17
  %25 = icmp eq i32 %19, 0
  br i1 %25, label %26, label %16, !llvm.loop !193

26:                                               ; preds = %16, %14
  %27 = phi i32 [ 0, %14 ], [ %24, %16 ]
  %28 = add nsw i32 %27, %.lcssa
  ret i32 %28
}

; Function Attrs: nounwind optsize uwtable
define internal void @readB8_typeInfo_CABAC(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 10
  %5 = load i32, ptr %4, align 4, !tbaa !137
  %6 = icmp eq i32 %5, 1
  %7 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %8 = load ptr, ptr %7, align 8, !tbaa !165
  %9 = getelementptr inbounds %struct.Slice, ptr %8, i64 0, i32 10
  %10 = load ptr, ptr %9, align 8, !tbaa !166
  br i1 %6, label %24, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.MotionInfoContexts, ptr %10, i64 0, i32 1, i64 0, i64 1
  %13 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %12) #46
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %64

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.MotionInfoContexts, ptr %10, i64 0, i32 1, i64 0, i64 3
  %17 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %16) #46
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %64, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.MotionInfoContexts, ptr %10, i64 0, i32 1, i64 0, i64 4
  %21 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %20) #46
  %22 = icmp eq i32 %21, 0
  %23 = select i1 %22, i32 3, i32 2
  br label %64

24:                                               ; preds = %3
  %25 = getelementptr inbounds %struct.MotionInfoContexts, ptr %10, i64 0, i32 1, i64 1
  %26 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %25) #46
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %64, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.MotionInfoContexts, ptr %10, i64 0, i32 1, i64 1, i64 1
  %30 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %29) #46
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %56, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.MotionInfoContexts, ptr %10, i64 0, i32 1, i64 1, i64 2
  %34 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %33) #46
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %struct.MotionInfoContexts, ptr %10, i64 0, i32 1, i64 1, i64 3
  %37 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %36) #46
  %38 = icmp eq i32 %37, 0
  br i1 %35, label %50, label %39

39:                                               ; preds = %32
  %40 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %36) #46
  %41 = icmp eq i32 %40, 0
  br i1 %38, label %44, label %42

42:                                               ; preds = %39
  %43 = select i1 %41, i32 10, i32 11
  br label %61

44:                                               ; preds = %39
  %45 = select i1 %41, i32 6, i32 8
  %46 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %36) #46
  %47 = icmp ne i32 %46, 0
  %48 = zext i1 %47 to i32
  %49 = or i32 %45, %48
  br label %61

50:                                               ; preds = %32
  %51 = select i1 %38, i32 2, i32 4
  %52 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %36) #46
  %53 = icmp ne i32 %52, 0
  %54 = zext i1 %53 to i32
  %55 = or i32 %51, %54
  br label %61

56:                                               ; preds = %28
  %57 = getelementptr inbounds %struct.MotionInfoContexts, ptr %10, i64 0, i32 1, i64 1, i64 3
  %58 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %57) #46
  %59 = icmp ne i32 %58, 0
  %60 = zext i1 %59 to i32
  br label %61

61:                                               ; preds = %56, %50, %44, %42
  %62 = phi i32 [ %43, %42 ], [ %60, %56 ], [ %49, %44 ], [ %55, %50 ]
  %63 = add nuw nsw i32 %62, 1
  br label %64

64:                                               ; preds = %61, %24, %19, %15, %11
  %65 = phi i32 [ %63, %61 ], [ 0, %11 ], [ %23, %19 ], [ 1, %15 ], [ 0, %24 ]
  %66 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 %65, ptr %66, align 4, !tbaa !173
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @readMB_transform_size_flag_CABAC(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %5 = load ptr, ptr %4, align 8, !tbaa !165
  %6 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 10
  %7 = load ptr, ptr %6, align 8, !tbaa !166
  %8 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 39
  %9 = load ptr, ptr %8, align 8, !tbaa !84
  %10 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 1
  %11 = load i32, ptr %10, align 4, !tbaa !49
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %struct.macroblock, ptr %9, i64 %12, i32 4
  %14 = load ptr, ptr %13, align 8, !tbaa !182
  %15 = icmp eq ptr %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.macroblock, ptr %14, i64 0, i32 30
  %18 = load i32, ptr %17, align 4, !tbaa !194
  br label %19

19:                                               ; preds = %16, %3
  %20 = phi i32 [ %18, %16 ], [ 0, %3 ]
  %21 = getelementptr inbounds %struct.macroblock, ptr %9, i64 %12, i32 5
  %22 = load ptr, ptr %21, align 8, !tbaa !184
  %23 = icmp eq ptr %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.macroblock, ptr %22, i64 0, i32 30
  %26 = load i32, ptr %25, align 4, !tbaa !194
  br label %27

27:                                               ; preds = %24, %19
  %28 = phi i32 [ %26, %24 ], [ 0, %19 ]
  %29 = add nsw i32 %28, %20
  %30 = getelementptr inbounds %struct.MotionInfoContexts, ptr %7, i64 0, i32 6
  %31 = sext i32 %29 to i64
  %32 = getelementptr inbounds %struct.BiContextType, ptr %30, i64 %31
  %33 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %32) #46
  %34 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 %33, ptr %34, align 4, !tbaa !173
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @readMB_typeInfo_CABAC(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 10
  %5 = load i32, ptr %4, align 4, !tbaa !137
  %6 = icmp eq i32 %5, 1
  %7 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %8 = load ptr, ptr %7, align 8, !tbaa !165
  %9 = getelementptr inbounds %struct.Slice, ptr %8, i64 0, i32 10
  %10 = load ptr, ptr %9, align 8, !tbaa !166
  %11 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 39
  %12 = load ptr, ptr %11, align 8, !tbaa !84
  %13 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 1
  %14 = load i32, ptr %13, align 4, !tbaa !49
  %15 = zext i32 %14 to i64
  switch i32 %5, label %149 [
    i32 2, label %16
    i32 4, label %71
  ]

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 4
  %18 = load ptr, ptr %17, align 8, !tbaa !182
  %19 = icmp eq ptr %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.macroblock, ptr %18, i64 0, i32 6
  %22 = load i32, ptr %21, align 8, !tbaa !195
  %23 = and i32 %22, -5
  %24 = icmp ne i32 %23, 9
  %25 = zext i1 %24 to i32
  br label %26

26:                                               ; preds = %20, %16
  %27 = phi i32 [ %25, %20 ], [ 0, %16 ]
  %28 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 5
  %29 = load ptr, ptr %28, align 8, !tbaa !184
  %30 = icmp eq ptr %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.macroblock, ptr %29, i64 0, i32 6
  %33 = load i32, ptr %32, align 8, !tbaa !195
  %34 = and i32 %33, -5
  %35 = icmp ne i32 %34, 9
  %36 = zext i1 %35 to i32
  br label %37

37:                                               ; preds = %31, %26
  %38 = phi i32 [ %36, %31 ], [ 0, %26 ]
  %39 = add nuw nsw i32 %38, %27
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %struct.BiContextType, ptr %10, i64 %40
  %42 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef %41) #46
  %43 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 6
  store i32 %39, ptr %43, align 8, !tbaa !190
  %44 = icmp eq i32 %42, 0
  br i1 %44, label %271, label %45

45:                                               ; preds = %37
  %46 = tail call i32 @biari_decode_final(ptr noundef %2) #46
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %271, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.BiContextType, ptr %10, i64 4
  %50 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %49) #46
  %51 = mul nsw i32 %50, 12
  %52 = or i32 %51, 1
  %53 = getelementptr inbounds %struct.BiContextType, ptr %10, i64 5
  %54 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %53) #46
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %48
  %57 = getelementptr inbounds %struct.BiContextType, ptr %10, i64 6
  %58 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %57) #46
  %59 = icmp eq i32 %58, 0
  %60 = select i1 %59, i32 5, i32 9
  %61 = add i32 %60, %51
  br label %62

62:                                               ; preds = %56, %48
  %63 = phi i32 [ %52, %48 ], [ %61, %56 ]
  %64 = getelementptr inbounds %struct.BiContextType, ptr %10, i64 7
  %65 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %64) #46
  %66 = shl nsw i32 %65, 1
  %67 = add nsw i32 %66, %63
  %68 = getelementptr inbounds %struct.BiContextType, ptr %10, i64 8
  %69 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %68) #46
  %70 = add nsw i32 %67, %69
  br label %271

71:                                               ; preds = %3
  %72 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 4
  %73 = load ptr, ptr %72, align 8, !tbaa !182
  %74 = icmp eq ptr %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.macroblock, ptr %73, i64 0, i32 6
  %77 = load i32, ptr %76, align 8, !tbaa !195
  %78 = icmp ne i32 %77, 12
  %79 = zext i1 %78 to i32
  br label %80

80:                                               ; preds = %75, %71
  %81 = phi i32 [ %79, %75 ], [ 0, %71 ]
  %82 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 5
  %83 = load ptr, ptr %82, align 8, !tbaa !184
  %84 = icmp eq ptr %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.macroblock, ptr %83, i64 0, i32 6
  %87 = load i32, ptr %86, align 8, !tbaa !195
  %88 = icmp ne i32 %87, 12
  %89 = zext i1 %88 to i32
  br label %90

90:                                               ; preds = %85, %80
  %91 = phi i32 [ %89, %85 ], [ 0, %80 ]
  %92 = add nuw nsw i32 %91, %81
  %93 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 1
  %94 = zext i32 %92 to i64
  %95 = getelementptr inbounds %struct.BiContextType, ptr %93, i64 %94
  %96 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %95) #46
  %97 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 6
  store i32 %92, ptr %97, align 8, !tbaa !190
  %98 = icmp eq i32 %96, 0
  br i1 %98, label %271, label %99

99:                                               ; preds = %90
  %100 = load ptr, ptr %72, align 8, !tbaa !182
  %101 = icmp eq ptr %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %struct.macroblock, ptr %100, i64 0, i32 6
  %104 = load i32, ptr %103, align 8, !tbaa !195
  %105 = icmp ne i32 %104, 9
  %106 = zext i1 %105 to i32
  br label %107

107:                                              ; preds = %102, %99
  %108 = phi i32 [ %106, %102 ], [ 0, %99 ]
  %109 = load ptr, ptr %82, align 8, !tbaa !184
  %110 = icmp eq ptr %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.macroblock, ptr %109, i64 0, i32 6
  %113 = load i32, ptr %112, align 8, !tbaa !195
  %114 = icmp ne i32 %113, 9
  %115 = zext i1 %114 to i32
  br label %116

116:                                              ; preds = %111, %107
  %117 = phi i32 [ %115, %111 ], [ 0, %107 ]
  %118 = add nuw nsw i32 %117, %108
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds %struct.BiContextType, ptr %10, i64 %119
  %121 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef %120) #46
  store i32 %118, ptr %97, align 8, !tbaa !190
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %271, label %123

123:                                              ; preds = %116
  %124 = tail call i32 @biari_decode_final(ptr noundef %2) #46
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %271, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %struct.BiContextType, ptr %10, i64 4
  %128 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %127) #46
  %129 = mul nsw i32 %128, 12
  %130 = or i32 %129, 2
  %131 = getelementptr inbounds %struct.BiContextType, ptr %10, i64 5
  %132 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %131) #46
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %140, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %struct.BiContextType, ptr %10, i64 6
  %136 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %135) #46
  %137 = icmp eq i32 %136, 0
  %138 = select i1 %137, i32 6, i32 10
  %139 = add i32 %138, %129
  br label %140

140:                                              ; preds = %134, %126
  %141 = phi i32 [ %130, %126 ], [ %139, %134 ]
  %142 = getelementptr inbounds %struct.BiContextType, ptr %10, i64 7
  %143 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %142) #46
  %144 = shl nsw i32 %143, 1
  %145 = add nsw i32 %144, %141
  %146 = getelementptr inbounds %struct.BiContextType, ptr %10, i64 8
  %147 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %146) #46
  %148 = add nsw i32 %145, %147
  br label %271

149:                                              ; preds = %3
  br i1 %6, label %150, label %209

150:                                              ; preds = %149
  %151 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 4
  %152 = load ptr, ptr %151, align 8, !tbaa !182
  %153 = icmp eq ptr %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.macroblock, ptr %152, i64 0, i32 6
  %156 = load i32, ptr %155, align 8, !tbaa !195
  %157 = icmp ne i32 %156, 0
  %158 = zext i1 %157 to i64
  br label %159

159:                                              ; preds = %154, %150
  %160 = phi i64 [ %158, %154 ], [ 0, %150 ]
  %161 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 5
  %162 = load ptr, ptr %161, align 8, !tbaa !184
  %163 = icmp eq ptr %162, null
  br i1 %163, label %169, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %struct.macroblock, ptr %162, i64 0, i32 6
  %166 = load i32, ptr %165, align 8, !tbaa !195
  %167 = icmp ne i32 %166, 0
  %168 = zext i1 %167 to i64
  br label %169

169:                                              ; preds = %164, %159
  %170 = phi i64 [ %168, %164 ], [ 0, %159 ]
  %171 = add nuw nsw i64 %170, %160
  %172 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 2, i64 %171
  %173 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %172) #46
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %271, label %175

175:                                              ; preds = %169
  %176 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 2, i64 4
  %177 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %176) #46
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %204, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 2, i64 5
  %181 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %180) #46
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 2, i64 6
  %184 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %183) #46
  %185 = icmp eq i32 %184, 0
  %186 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %183) #46
  %187 = icmp eq i32 %186, 0
  %188 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %183) #46
  br i1 %182, label %231, label %189

189:                                              ; preds = %179
  %190 = select i1 %185, i32 12, i32 20
  %191 = add nuw nsw i32 %190, 4
  %192 = select i1 %187, i32 %190, i32 %191
  %193 = icmp eq i32 %188, 0
  %194 = or i32 %192, 2
  %195 = select i1 %193, i32 %192, i32 %194
  switch i32 %195, label %197 [
    i32 24, label %239
    i32 26, label %196
  ]

196:                                              ; preds = %189
  br label %239

197:                                              ; preds = %189
  %198 = icmp eq i32 %195, 22
  %199 = select i1 %198, i32 23, i32 %195
  %200 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %183) #46
  %201 = icmp ne i32 %200, 0
  %202 = zext i1 %201 to i32
  %203 = add nuw nsw i32 %199, %202
  br label %239

204:                                              ; preds = %175
  %205 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 2, i64 6
  %206 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %205) #46
  %207 = icmp eq i32 %206, 0
  %208 = select i1 %207, i32 1, i32 2
  br label %271

209:                                              ; preds = %149
  %210 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 1, i64 4
  %211 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %210) #46
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %217, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 1, i64 7
  %215 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %214) #46
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %271, label %239

217:                                              ; preds = %209
  %218 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 1, i64 5
  %219 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %218) #46
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %226, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 1, i64 7
  %223 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %222) #46
  %224 = icmp eq i32 %223, 0
  %225 = select i1 %224, i32 3, i32 2
  br label %271

226:                                              ; preds = %217
  %227 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 1, i64 6
  %228 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %227) #46
  %229 = icmp eq i32 %228, 0
  %230 = select i1 %229, i32 1, i32 4
  br label %271

231:                                              ; preds = %179
  %232 = select i1 %185, i32 3, i32 7
  %233 = add nuw nsw i32 %232, 2
  %234 = select i1 %187, i32 %232, i32 %233
  %235 = icmp ne i32 %188, 0
  %236 = zext i1 %235 to i32
  %237 = add nuw nsw i32 %234, %236
  %238 = icmp ult i32 %237, 7
  br i1 %238, label %271, label %239

239:                                              ; preds = %231, %213, %197, %196, %189
  %240 = phi i32 [ %237, %231 ], [ 7, %213 ], [ %203, %197 ], [ 11, %189 ], [ 22, %196 ]
  %241 = load i32, ptr %4, align 4, !tbaa !137
  %242 = icmp eq i32 %241, 1
  %243 = icmp ult i32 %240, 24
  %244 = and i1 %243, %242
  br i1 %244, label %271, label %245

245:                                              ; preds = %239
  %246 = tail call i32 @biari_decode_final(ptr noundef %2) #46
  %247 = icmp eq i32 %246, 1
  br i1 %247, label %248, label %250

248:                                              ; preds = %245
  %249 = select i1 %6, i32 48, i32 31
  br label %271

250:                                              ; preds = %245
  %251 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 1, i64 8
  %252 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %251) #46
  %253 = mul nsw i32 %252, 12
  %254 = add nsw i32 %253, %240
  %255 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 1, i64 9
  %256 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %255) #46
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %263, label %258

258:                                              ; preds = %250
  %259 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %255) #46
  %260 = icmp eq i32 %259, 0
  %261 = select i1 %260, i32 4, i32 8
  %262 = add nsw i32 %261, %254
  br label %263

263:                                              ; preds = %258, %250
  %264 = phi i32 [ %254, %250 ], [ %262, %258 ]
  %265 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %10, i64 0, i64 1, i64 10
  %266 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %265) #46
  %267 = shl nsw i32 %266, 1
  %268 = add nsw i32 %267, %264
  %269 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %265) #46
  %270 = add nsw i32 %268, %269
  br label %271

271:                                              ; preds = %263, %248, %239, %231, %226, %221, %213, %204, %169, %140, %123, %116, %90, %62, %45, %37
  %272 = phi i32 [ %70, %62 ], [ %148, %140 ], [ %270, %263 ], [ 0, %37 ], [ 25, %45 ], [ 0, %90 ], [ 1, %116 ], [ 26, %123 ], [ %240, %239 ], [ %237, %231 ], [ %249, %248 ], [ %230, %226 ], [ %225, %221 ], [ 0, %169 ], [ %208, %204 ], [ 6, %213 ]
  %273 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 %272, ptr %273, align 4, !tbaa !173
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @readIntraPredMode_CABAC(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %5 = load ptr, ptr %4, align 8, !tbaa !165
  %6 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 11
  %7 = load ptr, ptr %6, align 8, !tbaa !196
  %8 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef %7) #46
  %9 = icmp eq i32 %8, 1
  %10 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  br i1 %9, label %24, label %11

11:                                               ; preds = %3
  store i32 0, ptr %10, align 4, !tbaa !173
  %12 = getelementptr inbounds %struct.BiContextType, ptr %7, i64 1
  %13 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %12) #46
  %14 = load i32, ptr %10, align 4, !tbaa !173
  %15 = or i32 %14, %13
  store i32 %15, ptr %10, align 4, !tbaa !173
  %16 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %12) #46
  %17 = shl i32 %16, 1
  %18 = load i32, ptr %10, align 4, !tbaa !173
  %19 = or i32 %18, %17
  store i32 %19, ptr %10, align 4, !tbaa !173
  %20 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %12) #46
  %21 = shl i32 %20, 2
  %22 = load i32, ptr %10, align 4, !tbaa !173
  %23 = or i32 %22, %21
  br label %24

24:                                               ; preds = %11, %3
  %25 = phi i32 [ %23, %11 ], [ -1, %3 ]
  store i32 %25, ptr %10, align 4, !tbaa !173
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @readRefFrame_CABAC(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = alloca %struct.pix_pos, align 4
  %5 = alloca %struct.pix_pos, align 4
  %6 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %7 = load ptr, ptr %6, align 8, !tbaa !165
  %8 = getelementptr inbounds %struct.Slice, ptr %7, i64 0, i32 10
  %9 = load ptr, ptr %8, align 8, !tbaa !166
  %10 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 39
  %11 = load ptr, ptr %10, align 8, !tbaa !84
  %12 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 1
  %13 = load i32, ptr %12, align 4, !tbaa !49
  %14 = zext i32 %13 to i64
  %15 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %16 = getelementptr inbounds %struct.storable_picture, ptr %15, i64 0, i32 36
  %17 = load ptr, ptr %16, align 8, !tbaa !197
  %18 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 2
  %19 = load i32, ptr %18, align 8, !tbaa !179
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds ptr, ptr %17, i64 %20
  %22 = load ptr, ptr %21, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #48
  %23 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 40
  %24 = load i32, ptr %23, align 8, !tbaa !185
  %25 = shl i32 %24, 2
  %26 = add nsw i32 %25, -1
  %27 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 41
  %28 = load i32, ptr %27, align 4, !tbaa !186
  %29 = shl i32 %28, 2
  call void @getLuma4x4Neighbour(i32 noundef %13, i32 noundef %26, i32 noundef %29, ptr noundef nonnull %4) #46
  %30 = load i32, ptr %12, align 4, !tbaa !49
  %31 = load i32, ptr %23, align 8, !tbaa !185
  %32 = shl i32 %31, 2
  %33 = load i32, ptr %27, align 4, !tbaa !186
  %34 = shl i32 %33, 2
  %35 = add nsw i32 %34, -1
  call void @getLuma4x4Neighbour(i32 noundef %30, i32 noundef %32, i32 noundef %35, ptr noundef nonnull %5) #46
  %36 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 2
  %37 = load i32, ptr %36, align 4, !tbaa !188
  %38 = sdiv i32 %37, 2
  %39 = srem i32 %38, 2
  %40 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 3
  %41 = load i32, ptr %40, align 4, !tbaa !187
  %42 = sdiv i32 %41, 2
  %43 = srem i32 %42, 2
  %44 = shl nsw i32 %43, 1
  %45 = add nsw i32 %44, %39
  %46 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 2
  %47 = load i32, ptr %46, align 4, !tbaa !188
  %48 = sdiv i32 %47, 2
  %49 = srem i32 %48, 2
  %50 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 3
  %51 = load i32, ptr %50, align 4, !tbaa !187
  %52 = sdiv i32 %51, 2
  %53 = srem i32 %52, 2
  %54 = shl nsw i32 %53, 1
  %55 = add nsw i32 %54, %49
  %56 = load i32, ptr %5, align 4, !tbaa !52
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %105, label %58

58:                                               ; preds = %3
  %59 = load ptr, ptr %10, align 8, !tbaa !84
  %60 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 1
  %61 = load i32, ptr %60, align 4, !tbaa !57
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %62, i32 6
  %64 = load i32, ptr %63, align 8, !tbaa !195
  switch i32 %64, label %69 [
    i32 14, label %105
    i32 0, label %65
  ]

65:                                               ; preds = %58
  %66 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 10
  %67 = load i32, ptr %66, align 4, !tbaa !137
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %105, label %69

69:                                               ; preds = %65, %58
  %70 = sext i32 %55 to i64
  %71 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %62, i32 13, i64 %70
  %72 = load i8, ptr %71, align 1, !tbaa !14
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %62, i32 14, i64 %70
  %76 = load i8, ptr %75, align 1, !tbaa !14
  %77 = icmp eq i8 %76, 2
  br i1 %77, label %105, label %78

78:                                               ; preds = %74, %69
  %79 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 44
  %80 = load i32, ptr %79, align 8, !tbaa !189
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.macroblock, ptr %11, i64 %14, i32 20
  %84 = load i32, ptr %83, align 4, !tbaa !170
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %62, i32 20
  %88 = load i32, ptr %87, align 4, !tbaa !170
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %91, label %90

90:                                               ; preds = %86, %82, %78
  br label %91

91:                                               ; preds = %90, %86
  %92 = phi i8 [ 0, %90 ], [ 1, %86 ]
  %93 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 5
  %94 = load i32, ptr %93, align 4, !tbaa !59
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds ptr, ptr %22, i64 %95
  %97 = load ptr, ptr %96, align 8, !tbaa !13
  %98 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 4
  %99 = load i32, ptr %98, align 4, !tbaa !60
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8, ptr %97, i64 %100
  %102 = load i8, ptr %101, align 1, !tbaa !14
  %103 = icmp sgt i8 %102, %92
  %104 = select i1 %103, i32 2, i32 0
  br label %105

105:                                              ; preds = %91, %74, %65, %58, %3
  %106 = phi i32 [ 0, %3 ], [ 0, %58 ], [ 0, %74 ], [ 0, %65 ], [ %104, %91 ]
  %107 = load i32, ptr %4, align 4, !tbaa !52
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %156, label %109

109:                                              ; preds = %105
  %110 = load ptr, ptr %10, align 8, !tbaa !84
  %111 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %112 = load i32, ptr %111, align 4, !tbaa !57
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds %struct.macroblock, ptr %110, i64 %113, i32 6
  %115 = load i32, ptr %114, align 8, !tbaa !195
  switch i32 %115, label %120 [
    i32 14, label %156
    i32 0, label %116
  ]

116:                                              ; preds = %109
  %117 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 10
  %118 = load i32, ptr %117, align 4, !tbaa !137
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %156, label %120

120:                                              ; preds = %116, %109
  %121 = sext i32 %45 to i64
  %122 = getelementptr inbounds %struct.macroblock, ptr %110, i64 %113, i32 13, i64 %121
  %123 = load i8, ptr %122, align 1, !tbaa !14
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %129

125:                                              ; preds = %120
  %126 = getelementptr inbounds %struct.macroblock, ptr %110, i64 %113, i32 14, i64 %121
  %127 = load i8, ptr %126, align 1, !tbaa !14
  %128 = icmp eq i8 %127, 2
  br i1 %128, label %156, label %129

129:                                              ; preds = %125, %120
  %130 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 44
  %131 = load i32, ptr %130, align 8, !tbaa !189
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %141, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %struct.macroblock, ptr %11, i64 %14, i32 20
  %135 = load i32, ptr %134, align 4, !tbaa !170
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %141

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.macroblock, ptr %110, i64 %113, i32 20
  %139 = load i32, ptr %138, align 4, !tbaa !170
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %142, label %141

141:                                              ; preds = %137, %133, %129
  br label %142

142:                                              ; preds = %141, %137
  %143 = phi i8 [ 0, %141 ], [ 1, %137 ]
  %144 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 5
  %145 = load i32, ptr %144, align 4, !tbaa !59
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds ptr, ptr %22, i64 %146
  %148 = load ptr, ptr %147, align 8, !tbaa !13
  %149 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 4
  %150 = load i32, ptr %149, align 4, !tbaa !60
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i8, ptr %148, i64 %151
  %153 = load i8, ptr %152, align 1, !tbaa !14
  %154 = icmp sgt i8 %153, %143
  %155 = zext i1 %154 to i32
  br label %156

156:                                              ; preds = %142, %125, %116, %109, %105
  %157 = phi i32 [ 0, %105 ], [ 0, %109 ], [ 0, %125 ], [ 0, %116 ], [ %155, %142 ]
  %158 = or i32 %106, %157
  %159 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 6
  store i32 %158, ptr %159, align 8, !tbaa !190
  %160 = getelementptr inbounds %struct.MotionInfoContexts, ptr %9, i64 0, i32 3
  %161 = zext i32 %158 to i64
  %162 = getelementptr inbounds %struct.BiContextType, ptr %160, i64 %161
  %163 = call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %162) #46
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %169, label %165

165:                                              ; preds = %156
  %166 = getelementptr inbounds %struct.MotionInfoContexts, ptr %9, i64 0, i32 3, i64 0, i64 4
  %167 = call i32 @unary_bin_decode(ptr noundef %2, ptr noundef nonnull %166, i32 noundef 1) #47
  %168 = add nsw i32 %167, 1
  br label %169

169:                                              ; preds = %165, %156
  %170 = phi i32 [ %168, %165 ], [ 0, %156 ]
  %171 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 %170, ptr %171, align 4, !tbaa !173
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @unary_bin_decode(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = tail call i32 @biari_decode_symbol(ptr noundef %0, ptr noundef %1) #46
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = sext i32 %2 to i64
  %8 = getelementptr inbounds %struct.BiContextType, ptr %1, i64 %7
  br label %9

9:                                                ; preds = %9, %6
  %10 = phi i32 [ 0, %6 ], [ %12, %9 ]
  %11 = tail call i32 @biari_decode_symbol(ptr noundef %0, ptr noundef %8) #46
  %12 = add i32 %10, 1
  %13 = icmp eq i32 %11, 0
  br i1 %13, label %14, label %9, !llvm.loop !198

14:                                               ; preds = %9, %3
  %15 = phi i32 [ 0, %3 ], [ %12, %9 ]
  ret i32 %15
}

; Function Attrs: nounwind optsize uwtable
define internal void @readDquant_CABAC(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %5 = load ptr, ptr %4, align 8, !tbaa !165
  %6 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 10
  %7 = load ptr, ptr %6, align 8, !tbaa !166
  %8 = load i32, ptr @last_dquant, align 4, !tbaa !18
  %9 = icmp ne i32 %8, 0
  %10 = getelementptr inbounds %struct.MotionInfoContexts, ptr %7, i64 0, i32 4
  %11 = zext i1 %9 to i64
  %12 = getelementptr inbounds %struct.BiContextType, ptr %10, i64 %11
  %13 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %12) #46
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.MotionInfoContexts, ptr %7, i64 0, i32 4, i64 2
  %17 = tail call i32 @unary_bin_decode(ptr noundef %2, ptr noundef nonnull %16, i32 noundef 1) #47
  %18 = add nsw i32 %17, 1
  br label %19

19:                                               ; preds = %15, %3
  %20 = phi i32 [ %18, %15 ], [ 0, %3 ]
  %21 = add nsw i32 %20, 1
  %22 = sdiv i32 %21, 2
  %23 = and i32 %20, 1
  %24 = icmp eq i32 %23, 0
  %25 = sub nsw i32 0, %22
  %26 = select i1 %24, i32 %25, i32 %22
  %27 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 %26, ptr %27, align 4, !tbaa !173
  store i32 %26, ptr @last_dquant, align 4, !tbaa !18
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @readCBP_CABAC(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = alloca %struct.pix_pos, align 4
  %5 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %6 = load ptr, ptr %5, align 8, !tbaa !165
  %7 = getelementptr inbounds %struct.Slice, ptr %6, i64 0, i32 11
  %8 = load ptr, ptr %7, align 8, !tbaa !196
  %9 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 39
  %10 = load ptr, ptr %9, align 8, !tbaa !84
  %11 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !49
  %13 = zext i32 %12 to i64
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #48
  %14 = getelementptr inbounds %struct.macroblock, ptr %10, i64 %13, i32 4
  %15 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %16 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 3
  %17 = getelementptr inbounds %struct.TextureInfoContexts, ptr %8, i64 0, i32 2
  br label %18

18:                                               ; preds = %84, %3
  %19 = phi i32 [ 0, %3 ], [ %.lcssa, %84 ]
  %20 = phi i1 [ true, %3 ], [ false, %84 ]
  %21 = phi i32 [ 0, %3 ], [ 2, %84 ]
  %22 = shl nuw nsw i32 %21, 2
  br label %23

23:                                               ; preds = %73, %18
  %24 = phi i1 [ true, %18 ], [ false, %73 ]
  %25 = phi i32 [ 0, %18 ], [ 1, %73 ]
  %26 = phi i32 [ %19, %18 ], [ %83, %73 ]
  %27 = or i32 %25, %21
  br i1 %20, label %28, label %42

28:                                               ; preds = %23
  %29 = load ptr, ptr %14, align 8, !tbaa !182
  %30 = icmp eq ptr %29, null
  br i1 %30, label %46, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.macroblock, ptr %29, i64 0, i32 6
  %33 = load i32, ptr %32, align 8, !tbaa !195
  %34 = icmp eq i32 %33, 14
  br i1 %34, label %46, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.macroblock, ptr %29, i64 0, i32 8
  %37 = load i32, ptr %36, align 4, !tbaa !199
  %38 = shl nuw nsw i32 4, %25
  %39 = and i32 %37, %38
  %40 = icmp eq i32 %39, 0
  %41 = zext i1 %40 to i32
  br label %46

42:                                               ; preds = %23
  %43 = xor i32 %26, -1
  %44 = lshr i32 %43, %25
  %45 = and i32 %44, 1
  br label %46

46:                                               ; preds = %42, %35, %31, %28
  %47 = phi i32 [ %41, %35 ], [ %45, %42 ], [ 0, %28 ], [ 0, %31 ]
  br i1 %24, label %48, label %69

48:                                               ; preds = %46
  %49 = load i32, ptr %11, align 4, !tbaa !49
  call void @getLuma4x4Neighbour(i32 noundef %49, i32 noundef -1, i32 noundef %22, ptr noundef nonnull %4) #46
  %50 = load i32, ptr %4, align 4, !tbaa !52
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %73, label %52

52:                                               ; preds = %48
  %53 = load ptr, ptr %9, align 8, !tbaa !84
  %54 = load i32, ptr %15, align 4, !tbaa !57
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.macroblock, ptr %53, i64 %55, i32 6
  %57 = load i32, ptr %56, align 8, !tbaa !195
  %58 = icmp eq i32 %57, 14
  br i1 %58, label %73, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %struct.macroblock, ptr %53, i64 %55, i32 8
  %61 = load i32, ptr %60, align 4, !tbaa !199
  %62 = load i32, ptr %16, align 4, !tbaa !187
  %63 = sdiv i32 %62, 2
  %64 = shl nsw i32 %63, 1
  %65 = or i32 %64, 1
  %66 = xor i32 %61, -1
  %67 = lshr i32 %66, %65
  %68 = and i32 %67, 1
  br label %73

69:                                               ; preds = %46
  %70 = xor i32 %26, -1
  %71 = lshr i32 %70, %21
  %72 = and i32 %71, 1
  br label %73

73:                                               ; preds = %69, %59, %52, %48
  %74 = phi i32 [ %68, %59 ], [ %72, %69 ], [ 0, %52 ], [ 0, %48 ]
  %75 = shl nuw nsw i32 %47, 1
  %76 = or i32 %74, %75
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %struct.BiContextType, ptr %17, i64 %77
  %79 = call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %78) #46
  %80 = icmp eq i32 %79, 0
  %81 = shl nuw nsw i32 1, %27
  %82 = select i1 %80, i32 0, i32 %81
  %83 = add nsw i32 %82, %26
  br i1 %24, label %23, label %84, !llvm.loop !200

84:                                               ; preds = %73
  %.lcssa = phi i32 [ %83, %73 ]
  br i1 %20, label %18, label %85, !llvm.loop !201

85:                                               ; preds = %84
  %.lcssa.lcssa = phi i32 [ %.lcssa, %84 ]
  %86 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %87 = getelementptr inbounds %struct.storable_picture, ptr %86, i64 0, i32 50
  %88 = load i32, ptr %87, align 4, !tbaa !83
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %163, label %90

90:                                               ; preds = %85
  %91 = load ptr, ptr %14, align 8, !tbaa !182
  %92 = icmp eq ptr %91, null
  br i1 %92, label %102, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %struct.macroblock, ptr %91, i64 0, i32 6
  %95 = load i32, ptr %94, align 8, !tbaa !195
  %96 = icmp eq i32 %95, 14
  br i1 %96, label %102, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct.macroblock, ptr %91, i64 0, i32 8
  %99 = load i32, ptr %98, align 4, !tbaa !199
  %100 = icmp sgt i32 %99, 15
  %101 = select i1 %100, i64 2, i64 0
  br label %102

102:                                              ; preds = %97, %93, %90
  %103 = phi i64 [ %101, %97 ], [ 0, %90 ], [ 2, %93 ]
  %104 = getelementptr inbounds %struct.macroblock, ptr %10, i64 %13, i32 5
  %105 = load ptr, ptr %104, align 8, !tbaa !184
  %106 = icmp eq ptr %105, null
  br i1 %106, label %116, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %struct.macroblock, ptr %105, i64 0, i32 6
  %109 = load i32, ptr %108, align 8, !tbaa !195
  %110 = icmp eq i32 %109, 14
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.macroblock, ptr %105, i64 0, i32 8
  %113 = load i32, ptr %112, align 4, !tbaa !199
  %114 = icmp sgt i32 %113, 15
  %115 = zext i1 %114 to i64
  br label %116

116:                                              ; preds = %111, %107, %102
  %117 = phi i64 [ %115, %111 ], [ 0, %102 ], [ 1, %107 ]
  %118 = or i64 %117, %103
  %119 = getelementptr inbounds %struct.TextureInfoContexts, ptr %8, i64 0, i32 2, i64 1
  %120 = getelementptr inbounds %struct.BiContextType, ptr %119, i64 %118
  %121 = call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %120) #46
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %163, label %123

123:                                              ; preds = %116
  %124 = load ptr, ptr %14, align 8, !tbaa !182
  %125 = icmp eq ptr %124, null
  br i1 %125, label %138, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %struct.macroblock, ptr %124, i64 0, i32 6
  %128 = load i32, ptr %127, align 8, !tbaa !195
  %129 = icmp eq i32 %128, 14
  br i1 %129, label %138, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct.macroblock, ptr %124, i64 0, i32 8
  %132 = load i32, ptr %131, align 4, !tbaa !199
  %133 = icmp sgt i32 %132, 15
  br i1 %133, label %134, label %138

134:                                              ; preds = %130
  %135 = and i32 %132, -16
  %136 = icmp eq i32 %135, 32
  %137 = select i1 %136, i64 2, i64 0
  br label %138

138:                                              ; preds = %134, %130, %126, %123
  %139 = phi i64 [ %137, %134 ], [ 0, %130 ], [ 0, %123 ], [ 2, %126 ]
  %140 = load ptr, ptr %104, align 8, !tbaa !184
  %141 = icmp eq ptr %140, null
  br i1 %141, label %154, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %struct.macroblock, ptr %140, i64 0, i32 6
  %144 = load i32, ptr %143, align 8, !tbaa !195
  %145 = icmp eq i32 %144, 14
  br i1 %145, label %154, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %struct.macroblock, ptr %140, i64 0, i32 8
  %148 = load i32, ptr %147, align 4, !tbaa !199
  %149 = icmp sgt i32 %148, 15
  br i1 %149, label %150, label %154

150:                                              ; preds = %146
  %151 = and i32 %148, -16
  %152 = icmp eq i32 %151, 32
  %153 = zext i1 %152 to i64
  br label %154

154:                                              ; preds = %150, %146, %142, %138
  %155 = phi i64 [ %153, %150 ], [ 0, %146 ], [ 0, %138 ], [ 1, %142 ]
  %156 = or i64 %155, %139
  %157 = getelementptr inbounds %struct.TextureInfoContexts, ptr %8, i64 0, i32 2, i64 2
  %158 = getelementptr inbounds %struct.BiContextType, ptr %157, i64 %156
  %159 = call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %158) #46
  %160 = icmp eq i32 %159, 1
  %161 = select i1 %160, i32 32, i32 16
  %162 = add nsw i32 %161, %.lcssa.lcssa
  br label %163

163:                                              ; preds = %154, %116, %85
  %164 = phi i32 [ %162, %154 ], [ %.lcssa.lcssa, %116 ], [ %.lcssa.lcssa, %85 ]
  %165 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 %164, ptr %165, align 4, !tbaa !173
  %166 = icmp eq i32 %164, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %163
  store i32 0, ptr @last_dquant, align 4, !tbaa !18
  br label %168

168:                                              ; preds = %167, %163
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @readCIPredMode_CABAC(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %5 = load ptr, ptr %4, align 8, !tbaa !165
  %6 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 11
  %7 = load ptr, ptr %6, align 8, !tbaa !196
  %8 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 39
  %9 = load ptr, ptr %8, align 8, !tbaa !84
  %10 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 1
  %11 = load i32, ptr %10, align 4, !tbaa !49
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %struct.macroblock, ptr %9, i64 %12, i32 4
  %14 = load ptr, ptr %13, align 8, !tbaa !182
  %15 = icmp eq ptr %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.macroblock, ptr %14, i64 0, i32 6
  %18 = load i32, ptr %17, align 8, !tbaa !195
  %19 = icmp eq i32 %18, 14
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.macroblock, ptr %14, i64 0, i32 19
  %22 = load i32, ptr %21, align 8, !tbaa !90
  %23 = icmp ne i32 %22, 0
  %24 = zext i1 %23 to i64
  br label %25

25:                                               ; preds = %20, %16, %3
  %26 = phi i64 [ %24, %20 ], [ 0, %3 ], [ 0, %16 ]
  %27 = getelementptr inbounds %struct.macroblock, ptr %9, i64 %12, i32 5
  %28 = load ptr, ptr %27, align 8, !tbaa !184
  %29 = icmp eq ptr %28, null
  br i1 %29, label %39, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.macroblock, ptr %28, i64 0, i32 6
  %32 = load i32, ptr %31, align 8, !tbaa !195
  %33 = icmp eq i32 %32, 14
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.macroblock, ptr %28, i64 0, i32 19
  %36 = load i32, ptr %35, align 8, !tbaa !90
  %37 = icmp ne i32 %36, 0
  %38 = zext i1 %37 to i64
  br label %39

39:                                               ; preds = %34, %30, %25
  %40 = phi i64 [ %38, %34 ], [ 0, %25 ], [ 0, %30 ]
  %41 = add nuw nsw i64 %40, %26
  %42 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 1
  %43 = getelementptr inbounds %struct.BiContextType, ptr %42, i64 %41
  %44 = tail call i32 @biari_decode_symbol(ptr noundef %2, ptr noundef nonnull %43) #46
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 1, i64 3
  %48 = tail call i32 @unary_bin_max_decode(ptr noundef %2, ptr noundef nonnull %47, i32 noundef 0, i32 noundef 2) #47
  %49 = add i32 %48, 1
  br label %50

50:                                               ; preds = %46, %39
  %51 = phi i32 [ %49, %46 ], [ 0, %39 ]
  %52 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 %51, ptr %52, align 4, !tbaa !173
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @unary_bin_max_decode(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = tail call i32 @biari_decode_symbol(ptr noundef %0, ptr noundef %1) #46
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %4
  %8 = icmp eq i32 %3, 1
  br i1 %8, label %25, label %9

9:                                                ; preds = %7
  %10 = sext i32 %2 to i64
  %11 = getelementptr inbounds %struct.BiContextType, ptr %1, i64 %10
  %12 = add i32 %3, -1
  br label %13

13:                                               ; preds = %13, %9
  %14 = phi i32 [ 0, %9 ], [ %16, %13 ]
  %15 = tail call i32 @biari_decode_symbol(ptr noundef %0, ptr noundef %11) #46
  %16 = add nuw i32 %14, 1
  %17 = icmp ne i32 %15, 0
  %18 = icmp ult i32 %16, %12
  %19 = select i1 %17, i1 %18, i1 false
  br i1 %19, label %13, label %20, !llvm.loop !202

20:                                               ; preds = %13
  %.lcssa2 = phi i32 [ %14, %13 ]
  %.lcssa1 = phi i32 [ %16, %13 ]
  %.lcssa = phi i1 [ %17, %13 ]
  %21 = icmp eq i32 %.lcssa1, %12
  %22 = select i1 %.lcssa, i1 %21, i1 false
  %23 = add i32 %.lcssa2, 2
  %24 = select i1 %22, i32 %23, i32 %.lcssa1
  br label %25

25:                                               ; preds = %20, %7, %4
  %26 = phi i32 [ %24, %20 ], [ 0, %4 ], [ %5, %7 ]
  ret i32 %26
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @read_and_store_CBP_block_bit(ptr nocapture noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca %struct.pix_pos, align 4
  %6 = alloca %struct.pix_pos, align 4
  %7 = add i32 %3, -1
  %8 = icmp ult i32 %7, 5
  %9 = icmp eq i32 %3, 0
  switch i32 %3, label %20 [
    i32 7, label %10
    i32 8, label %15
    i32 6, label %15
    i32 9, label %15
  ]

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 43
  %12 = load i32, ptr %11, align 4, !tbaa !203
  %13 = icmp eq i32 %12, 0
  %14 = icmp ne i32 %12, 0
  br label %20

15:                                               ; preds = %4, %4, %4
  %16 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 43
  %17 = load i32, ptr %16, align 4, !tbaa !203
  %18 = icmp eq i32 %17, 0
  %19 = icmp ne i32 %17, 0
  br label %20

20:                                               ; preds = %15, %10, %4
  %21 = phi i1 [ %18, %15 ], [ false, %10 ], [ false, %4 ]
  %22 = phi i1 [ false, %15 ], [ %14, %10 ], [ false, %4 ]
  %23 = phi i1 [ false, %15 ], [ %13, %10 ], [ false, %4 ]
  %24 = phi i1 [ %19, %15 ], [ false, %10 ], [ false, %4 ]
  %25 = select i1 %8, i1 true, i1 %23
  %26 = select i1 %25, i1 true, i1 %22
  br i1 %26, label %27, label %32

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 41
  %29 = load i32, ptr %28, align 4, !tbaa !186
  %30 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 40
  %31 = load i32, ptr %30, align 8, !tbaa !185
  br label %32

32:                                               ; preds = %27, %20
  %33 = phi i32 [ %29, %27 ], [ 0, %20 ]
  %34 = phi i32 [ %31, %27 ], [ 0, %20 ]
  br i1 %9, label %35, label %40

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 42
  %37 = load i32, ptr %36, align 8, !tbaa !204
  %38 = icmp ne i32 %37, 0
  %39 = zext i1 %38 to i32
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #48
  br label %55

40:                                               ; preds = %32
  %41 = icmp ult i32 %3, 6
  %42 = select i1 %41, i1 true, i1 %21
  br i1 %42, label %50, label %43

43:                                               ; preds = %40
  %44 = select i1 %23, i32 19, i32 35
  %45 = select i1 %24, i32 18, i32 %44
  %46 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 42
  %47 = load i32, ptr %46, align 8, !tbaa !204
  %48 = icmp ne i32 %47, 0
  %49 = zext i1 %48 to i32
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #48
  br label %85

50:                                               ; preds = %40
  %51 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 42
  %52 = load i32, ptr %51, align 8, !tbaa !204
  %53 = icmp ne i32 %52, 0
  %54 = zext i1 %53 to i32
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #48
  br i1 %41, label %55, label %85

55:                                               ; preds = %50, %35
  %56 = phi i32 [ %39, %35 ], [ %54, %50 ]
  %57 = phi i32 [ 0, %35 ], [ 1, %50 ]
  %58 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 1
  %59 = load i32, ptr %58, align 4, !tbaa !49
  %60 = shl i32 %34, 2
  %61 = add nsw i32 %60, -1
  %62 = shl i32 %33, 2
  call void @getLuma4x4Neighbour(i32 noundef %59, i32 noundef %61, i32 noundef %62, ptr noundef nonnull %5) #46
  %63 = load i32, ptr %58, align 4, !tbaa !49
  %64 = add nsw i32 %62, -1
  call void @getLuma4x4Neighbour(i32 noundef %63, i32 noundef %60, i32 noundef %64, ptr noundef nonnull %6) #46
  %65 = load i32, ptr %6, align 4, !tbaa !52
  br i1 %8, label %66, label %115

66:                                               ; preds = %55
  %67 = load i32, ptr %5, align 4, !tbaa !52
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 3
  %70 = load i32, ptr %69, align 4
  %71 = shl nsw i32 %70, 2
  %72 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 2
  %73 = load i32, ptr %72, align 4
  %74 = add nsw i32 %71, %73
  %75 = select i1 %68, i32 0, i32 %74
  %76 = icmp eq i32 %65, 0
  %77 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 3
  %78 = load i32, ptr %77, align 4
  %79 = shl nsw i32 %78, 2
  %80 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 2
  %81 = load i32, ptr %80, align 4
  %82 = add nsw i32 %79, %81
  %83 = select i1 %76, i32 0, i32 %82
  %84 = icmp eq i32 %3, 2
  br i1 %84, label %189, label %115

85:                                               ; preds = %50, %43
  %86 = phi i32 [ %49, %43 ], [ %54, %50 ]
  %87 = phi i32 [ %45, %43 ], [ 17, %50 ]
  %88 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 1
  %89 = load i32, ptr %88, align 4, !tbaa !49
  %90 = shl i32 %34, 2
  %91 = add nsw i32 %90, -1
  %92 = shl i32 %33, 2
  call void @getChroma4x4Neighbour(i32 noundef %89, i32 noundef %91, i32 noundef %92, ptr noundef nonnull %5) #46
  %93 = load i32, ptr %88, align 4, !tbaa !49
  %94 = add nsw i32 %92, -1
  call void @getChroma4x4Neighbour(i32 noundef %93, i32 noundef %90, i32 noundef %94, ptr noundef nonnull %6) #46
  %95 = select i1 %23, i1 true, i1 %22
  %96 = load i32, ptr %6, align 4, !tbaa !52
  br i1 %95, label %97, label %115

97:                                               ; preds = %85
  %98 = load i32, ptr %5, align 4, !tbaa !52
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 3
  %101 = load i32, ptr %100, align 4
  %102 = shl nsw i32 %101, 2
  %103 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 2
  %104 = load i32, ptr %103, align 4
  %105 = add nsw i32 %102, %104
  %106 = select i1 %99, i32 0, i32 %105
  %107 = icmp eq i32 %96, 0
  br i1 %107, label %144, label %108

108:                                              ; preds = %97
  %109 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 3
  %110 = load i32, ptr %109, align 4, !tbaa !187
  %111 = shl nsw i32 %110, 2
  %112 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 2
  %113 = load i32, ptr %112, align 4, !tbaa !188
  %114 = add nsw i32 %111, %113
  br label %122

115:                                              ; preds = %85, %66, %55
  %116 = phi i32 [ %65, %55 ], [ %96, %85 ], [ %65, %66 ]
  %117 = phi i32 [ 0, %55 ], [ 0, %85 ], [ %83, %66 ]
  %118 = phi i32 [ 0, %55 ], [ 0, %85 ], [ %75, %66 ]
  %119 = phi i32 [ %57, %55 ], [ %87, %85 ], [ %57, %66 ]
  %120 = phi i32 [ %56, %55 ], [ %86, %85 ], [ %56, %66 ]
  %121 = icmp eq i32 %116, 0
  br i1 %121, label %144, label %122

122:                                              ; preds = %115, %108
  %123 = phi i32 [ %86, %108 ], [ %120, %115 ]
  %124 = phi i32 [ %87, %108 ], [ %119, %115 ]
  %125 = phi i32 [ %106, %108 ], [ %118, %115 ]
  %126 = phi i32 [ %114, %108 ], [ %117, %115 ]
  %127 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 39
  %128 = load ptr, ptr %127, align 8, !tbaa !84
  %129 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 1
  %130 = load i32, ptr %129, align 4, !tbaa !57
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds %struct.macroblock, ptr %128, i64 %131, i32 6
  %133 = load i32, ptr %132, align 8, !tbaa !195
  %134 = icmp eq i32 %133, 14
  br i1 %134, label %144, label %135

135:                                              ; preds = %122
  %136 = getelementptr inbounds %struct.macroblock, ptr %128, i64 %131, i32 10
  %137 = load i64, ptr %136, align 8, !tbaa !205
  %138 = add nsw i32 %124, %126
  %139 = zext i32 %138 to i64
  %140 = shl nuw i64 1, %139
  %141 = and i64 %137, %140
  %142 = ashr i64 %141, %139
  %143 = trunc i64 %142 to i32
  br label %144

144:                                              ; preds = %135, %122, %115, %97
  %145 = phi i32 [ %123, %135 ], [ %120, %115 ], [ %123, %122 ], [ %86, %97 ]
  %146 = phi i32 [ %124, %135 ], [ %119, %115 ], [ %124, %122 ], [ %87, %97 ]
  %147 = phi i32 [ %125, %135 ], [ %118, %115 ], [ %125, %122 ], [ %106, %97 ]
  %148 = phi i32 [ %143, %135 ], [ %120, %115 ], [ 1, %122 ], [ %86, %97 ]
  %149 = load i32, ptr %5, align 4, !tbaa !52
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %169, label %151

151:                                              ; preds = %144
  %152 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 39
  %153 = load ptr, ptr %152, align 8, !tbaa !84
  %154 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 1
  %155 = load i32, ptr %154, align 4, !tbaa !57
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds %struct.macroblock, ptr %153, i64 %156, i32 6
  %158 = load i32, ptr %157, align 8, !tbaa !195
  %159 = icmp eq i32 %158, 14
  br i1 %159, label %169, label %160

160:                                              ; preds = %151
  %161 = getelementptr inbounds %struct.macroblock, ptr %153, i64 %156, i32 10
  %162 = load i64, ptr %161, align 8, !tbaa !205
  %163 = add nsw i32 %147, %146
  %164 = zext i32 %163 to i64
  %165 = shl nuw i64 1, %164
  %166 = and i64 %162, %165
  %167 = ashr i64 %166, %164
  %168 = trunc i64 %167 to i32
  br label %169

169:                                              ; preds = %160, %151, %144
  %170 = phi i32 [ %168, %160 ], [ %145, %144 ], [ 1, %151 ]
  %171 = shl nsw i32 %148, 1
  %172 = add nsw i32 %170, %171
  %173 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 38
  %174 = load ptr, ptr %173, align 8, !tbaa !165
  %175 = getelementptr inbounds %struct.Slice, ptr %174, i64 0, i32 11
  %176 = load ptr, ptr %175, align 8, !tbaa !196
  %177 = sext i32 %3 to i64
  %178 = getelementptr inbounds [10 x i32], ptr @type2ctx_bcbp, i64 0, i64 %177
  %179 = load i32, ptr %178, align 4, !tbaa !18
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds %struct.TextureInfoContexts, ptr %176, i64 0, i32 3, i64 %180
  %182 = sext i32 %172 to i64
  %183 = getelementptr inbounds %struct.BiContextType, ptr %181, i64 %182
  %184 = call i32 @biari_decode_symbol(ptr noundef %1, ptr noundef nonnull %183) #46
  br i1 %9, label %205, label %185

185:                                              ; preds = %169
  %186 = icmp ult i32 %3, 6
  br i1 %186, label %187, label %194

187:                                              ; preds = %185
  %188 = shl nsw i32 %33, 2
  br label %189

189:                                              ; preds = %187, %66
  %190 = phi i32 [ %188, %187 ], [ %62, %66 ]
  %191 = phi i32 [ %184, %187 ], [ 1, %66 ]
  %192 = or i32 %190, 1
  %193 = add nsw i32 %192, %34
  br label %205

194:                                              ; preds = %185
  %195 = select i1 %21, i1 true, i1 %24
  %196 = select i1 %21, i32 17, i32 18
  br i1 %195, label %205, label %197

197:                                              ; preds = %194
  %198 = shl nsw i32 %33, 2
  br i1 %23, label %199, label %202

199:                                              ; preds = %197
  %200 = add nsw i32 %198, 19
  %201 = add nsw i32 %200, %34
  br label %205

202:                                              ; preds = %197
  %203 = add nsw i32 %198, 35
  %204 = add nsw i32 %203, %34
  br label %205

205:                                              ; preds = %202, %199, %194, %189, %169
  %206 = phi i32 [ %184, %169 ], [ %191, %189 ], [ %184, %194 ], [ %184, %199 ], [ %184, %202 ]
  %207 = phi i32 [ 0, %169 ], [ %193, %189 ], [ %196, %194 ], [ %201, %199 ], [ %204, %202 ]
  %208 = icmp eq i32 %206, 0
  br i1 %208, label %254, label %209

209:                                              ; preds = %205
  switch i32 %3, label %248 [
    i32 2, label %210
    i32 3, label %228
    i32 4, label %238
  ]

210:                                              ; preds = %209
  %211 = zext i32 %207 to i64
  %212 = shl nuw i64 1, %211
  %213 = getelementptr inbounds %struct.macroblock, ptr %0, i64 0, i32 10
  %214 = load i64, ptr %213, align 8, !tbaa !205
  %215 = add nsw i32 %207, 1
  %216 = zext i32 %215 to i64
  %217 = shl nuw i64 1, %216
  %218 = add nsw i32 %207, 4
  %219 = zext i32 %218 to i64
  %220 = shl nuw i64 1, %219
  %221 = add nsw i32 %207, 5
  %222 = zext i32 %221 to i64
  %223 = shl nuw i64 1, %222
  %224 = or i64 %217, %212
  %225 = or i64 %224, %220
  %226 = or i64 %225, %223
  %227 = or i64 %226, %214
  store i64 %227, ptr %213, align 8, !tbaa !205
  br label %254

228:                                              ; preds = %209
  %229 = zext i32 %207 to i64
  %230 = shl nuw i64 1, %229
  %231 = getelementptr inbounds %struct.macroblock, ptr %0, i64 0, i32 10
  %232 = load i64, ptr %231, align 8, !tbaa !205
  %233 = add nsw i32 %207, 1
  %234 = zext i32 %233 to i64
  %235 = shl nuw i64 1, %234
  %236 = or i64 %235, %230
  %237 = or i64 %236, %232
  store i64 %237, ptr %231, align 8, !tbaa !205
  br label %254

238:                                              ; preds = %209
  %239 = zext i32 %207 to i64
  %240 = shl nuw i64 1, %239
  %241 = getelementptr inbounds %struct.macroblock, ptr %0, i64 0, i32 10
  %242 = load i64, ptr %241, align 8, !tbaa !205
  %243 = add nsw i32 %207, 4
  %244 = zext i32 %243 to i64
  %245 = shl nuw i64 1, %244
  %246 = or i64 %245, %240
  %247 = or i64 %246, %242
  store i64 %247, ptr %241, align 8, !tbaa !205
  br label %254

248:                                              ; preds = %209
  %249 = zext i32 %207 to i64
  %250 = shl nuw i64 1, %249
  %251 = getelementptr inbounds %struct.macroblock, ptr %0, i64 0, i32 10
  %252 = load i64, ptr %251, align 8, !tbaa !205
  %253 = or i64 %252, %250
  store i64 %253, ptr %251, align 8, !tbaa !205
  br label %254

254:                                              ; preds = %248, %238, %228, %210, %205
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #48
  ret i32 %206
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @read_significance_map(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3, ptr nocapture noundef writeonly %4) #0 {
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [10 x i32], ptr @maxpos, i64 0, i64 %6
  %8 = load i32, ptr %7, align 4, !tbaa !18
  %9 = add nsw i32 %8, -1
  %10 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 36
  %11 = load i32, ptr %10, align 8, !tbaa !206
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.macroblock, ptr %0, i64 0, i32 20
  %15 = load i32, ptr %14, align 4, !tbaa !170
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %13, %5
  %18 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 38
  %19 = load ptr, ptr %18, align 8, !tbaa !165
  %20 = getelementptr inbounds %struct.Slice, ptr %19, i64 0, i32 11
  %21 = load ptr, ptr %20, align 8, !tbaa !196
  %22 = getelementptr inbounds [10 x i32], ptr @type2ctx_last, i64 0, i64 %6
  %23 = load i32, ptr %22, align 4, !tbaa !18
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.TextureInfoContexts, ptr %21, i64 0, i32 8, i64 %24
  %26 = getelementptr inbounds [10 x i32], ptr @type2ctx_last, i64 0, i64 %6
  %27 = load i32, ptr %26, align 4, !tbaa !18
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.TextureInfoContexts, ptr %21, i64 0, i32 9, i64 %28
  br label %43

30:                                               ; preds = %13
  %31 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 38
  %32 = load ptr, ptr %31, align 8, !tbaa !165
  %33 = getelementptr inbounds %struct.Slice, ptr %32, i64 0, i32 11
  %34 = load ptr, ptr %33, align 8, !tbaa !196
  %35 = getelementptr inbounds [10 x i32], ptr @type2ctx_last, i64 0, i64 %6
  %36 = load i32, ptr %35, align 4, !tbaa !18
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %struct.TextureInfoContexts, ptr %34, i64 0, i32 4, i64 %37
  %39 = getelementptr inbounds [10 x i32], ptr @type2ctx_last, i64 0, i64 %6
  %40 = load i32, ptr %39, align 4, !tbaa !18
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %struct.TextureInfoContexts, ptr %34, i64 0, i32 5, i64 %41
  br label %43

43:                                               ; preds = %30, %17
  %44 = phi ptr [ %25, %17 ], [ %38, %30 ]
  %45 = phi ptr [ @pos2ctx_map_int, %17 ], [ @pos2ctx_map, %30 ]
  %46 = phi ptr [ %29, %17 ], [ %42, %30 ]
  switch i32 %3, label %49 [
    i32 7, label %47
    i32 1, label %47
  ]

47:                                               ; preds = %43, %43
  %48 = getelementptr inbounds i32, ptr %4, i64 -1
  br label %49

49:                                               ; preds = %47, %43
  %50 = phi i32 [ %9, %43 ], [ %8, %47 ]
  %51 = phi i32 [ 0, %43 ], [ 1, %47 ]
  %52 = phi ptr [ %4, %43 ], [ %48, %47 ]
  %53 = icmp slt i32 %51, %50
  br i1 %53, label %54, label %97

54:                                               ; preds = %49
  %55 = getelementptr inbounds ptr, ptr %45, i64 %6
  %56 = load ptr, ptr %55, align 8, !tbaa !13
  %57 = getelementptr inbounds [10 x ptr], ptr @pos2ctx_last, i64 0, i64 %6
  %58 = getelementptr i8, ptr %52, i64 4
  %59 = add i32 %50, 1
  br label %60

60:                                               ; preds = %92, %54
  %61 = phi i32 [ %51, %54 ], [ %95, %92 ]
  %62 = phi i32 [ 0, %54 ], [ %93, %92 ]
  %63 = sext i32 %61 to i64
  %64 = getelementptr inbounds i32, ptr %56, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !18
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %struct.BiContextType, ptr %44, i64 %66
  %68 = tail call i32 @biari_decode_symbol(ptr noundef %1, ptr noundef nonnull %67) #46
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds i32, ptr %52, i64 %63
  br i1 %69, label %91, label %71

71:                                               ; preds = %60
  store i32 1, ptr %70, align 4, !tbaa !18
  %72 = add nsw i32 %62, 1
  %73 = load ptr, ptr %57, align 8, !tbaa !13
  %74 = getelementptr inbounds i32, ptr %73, i64 %63
  %75 = load i32, ptr %74, align 4, !tbaa !18
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %struct.BiContextType, ptr %46, i64 %76
  %78 = tail call i32 @biari_decode_symbol(ptr noundef %1, ptr noundef nonnull %77) #46
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %92, label %80

80:                                               ; preds = %71
  %81 = add nsw i32 %61, 1
  %82 = icmp slt i32 %61, %50
  br i1 %82, label %83, label %92

83:                                               ; preds = %80
  %84 = shl nsw i64 %63, 2
  %85 = getelementptr i8, ptr %58, i64 %84
  %86 = xor i32 %61, -1
  %87 = add i32 %50, %86
  %88 = zext i32 %87 to i64
  %89 = shl nuw nsw i64 %88, 2
  %90 = add nuw nsw i64 %89, 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %85, i8 0, i64 %90, i1 false), !tbaa !18
  br label %92

91:                                               ; preds = %60
  store i32 0, ptr %70, align 4, !tbaa !18
  br label %92

92:                                               ; preds = %91, %83, %80, %71
  %93 = phi i32 [ %72, %71 ], [ %62, %91 ], [ %72, %80 ], [ %72, %83 ]
  %94 = phi i32 [ %61, %71 ], [ %61, %91 ], [ %81, %80 ], [ %59, %83 ]
  %95 = add nsw i32 %94, 1
  %96 = icmp slt i32 %95, %50
  br i1 %96, label %60, label %97, !llvm.loop !207

97:                                               ; preds = %92, %49
  %98 = phi i32 [ 0, %49 ], [ %93, %92 ]
  %99 = phi i32 [ %51, %49 ], [ %95, %92 ]
  %100 = icmp sgt i32 %99, %50
  br i1 %100, label %105, label %101

101:                                              ; preds = %97
  %102 = sext i32 %99 to i64
  %103 = getelementptr inbounds i32, ptr %52, i64 %102
  store i32 1, ptr %103, align 4, !tbaa !18
  %104 = add nsw i32 %98, 1
  br label %105

105:                                              ; preds = %101, %97
  %106 = phi i32 [ %104, %101 ], [ %98, %97 ]
  ret i32 %106
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #20

; Function Attrs: nounwind optsize uwtable
define internal void @read_significant_coefficients(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr nocapture noundef %3) #0 {
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [10 x i32], ptr @maxpos, i64 0, i64 %5
  %7 = load i32, ptr %6, align 4, !tbaa !18
  %8 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %9 = getelementptr inbounds [10 x i32], ptr @type2ctx_abs, i64 0, i64 %5
  %10 = getelementptr inbounds [10 x i32], ptr @max_c2, i64 0, i64 %5
  %11 = getelementptr inbounds [10 x i32], ptr @type2ctx_abs, i64 0, i64 %5
  %12 = zext i32 %7 to i64
  br label %13

13:                                               ; preds = %63, %4
  %14 = phi i64 [ %12, %4 ], [ %17, %63 ]
  %15 = phi i32 [ 0, %4 ], [ %65, %63 ]
  %16 = phi i32 [ 1, %4 ], [ %64, %63 ]
  %17 = add nsw i64 %14, -1
  %18 = and i64 %17, 4294967295
  %19 = getelementptr inbounds i32, ptr %3, i64 %18
  %20 = load i32, ptr %19, align 4, !tbaa !18
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %63, label %22

22:                                               ; preds = %13
  %23 = tail call i32 @llvm.smin.i32(i32 %16, i32 4)
  %24 = load ptr, ptr %8, align 8, !tbaa !165
  %25 = getelementptr inbounds %struct.Slice, ptr %24, i64 0, i32 11
  %26 = load ptr, ptr %25, align 8, !tbaa !196
  %27 = load i32, ptr %9, align 4, !tbaa !18
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.TextureInfoContexts, ptr %26, i64 0, i32 6, i64 %28
  %30 = sext i32 %23 to i64
  %31 = getelementptr inbounds %struct.BiContextType, ptr %29, i64 %30
  %32 = tail call i32 @biari_decode_symbol(ptr noundef %0, ptr noundef nonnull %31) #46
  %33 = load i32, ptr %19, align 4, !tbaa !18
  %34 = add i32 %33, %32
  store i32 %34, ptr %19, align 4, !tbaa !18
  %35 = icmp eq i32 %34, 2
  br i1 %35, label %36, label %51

36:                                               ; preds = %22
  %37 = load i32, ptr %10, align 4, !tbaa !18
  %38 = tail call i32 @llvm.smin.i32(i32 %15, i32 %37)
  %39 = load ptr, ptr %8, align 8, !tbaa !165
  %40 = getelementptr inbounds %struct.Slice, ptr %39, i64 0, i32 11
  %41 = load ptr, ptr %40, align 8, !tbaa !196
  %42 = load i32, ptr %11, align 4, !tbaa !18
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.TextureInfoContexts, ptr %41, i64 0, i32 7, i64 %43
  %45 = sext i32 %38 to i64
  %46 = getelementptr inbounds %struct.BiContextType, ptr %44, i64 %45
  %47 = tail call i32 @unary_exp_golomb_level_decode(ptr noundef %0, ptr noundef nonnull %46) #47
  %48 = load i32, ptr %19, align 4, !tbaa !18
  %49 = add i32 %48, %47
  store i32 %49, ptr %19, align 4, !tbaa !18
  %50 = add nsw i32 %15, 1
  br label %55

51:                                               ; preds = %22
  %52 = icmp eq i32 %16, 0
  %53 = add nsw i32 %16, 1
  %54 = select i1 %52, i32 0, i32 %53
  br label %55

55:                                               ; preds = %51, %36
  %56 = phi i32 [ 0, %36 ], [ %54, %51 ]
  %57 = phi i32 [ %50, %36 ], [ %15, %51 ]
  %58 = tail call i32 @biari_decode_symbol_eq_prob(ptr noundef %0) #46
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %55
  %61 = load i32, ptr %19, align 4, !tbaa !18
  %62 = sub nsw i32 0, %61
  store i32 %62, ptr %19, align 4, !tbaa !18
  br label %63

63:                                               ; preds = %60, %55, %13
  %64 = phi i32 [ %56, %60 ], [ %56, %55 ], [ %16, %13 ]
  %65 = phi i32 [ %57, %60 ], [ %57, %55 ], [ %15, %13 ]
  %66 = trunc i64 %14 to i32
  %67 = icmp sgt i32 %66, 1
  br i1 %67, label %13, label %68, !llvm.loop !208

68:                                               ; preds = %63
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @unary_exp_golomb_level_decode(ptr noundef %0, ptr noundef %1) #0 {
  %3 = tail call i32 @biari_decode_symbol(ptr noundef %0, ptr noundef %1) #46
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %19, label %5

5:                                                ; preds = %5, %2
  %6 = phi i32 [ %10, %5 ], [ 1, %2 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %2 ]
  %8 = tail call i32 @biari_decode_symbol(ptr noundef %0, ptr noundef %1) #46
  %9 = add nuw nsw i32 %7, 1
  %10 = add nuw nsw i32 %6, 1
  %11 = icmp ne i32 %8, 0
  %12 = icmp ne i32 %10, 13
  %13 = select i1 %11, i1 %12, i1 false
  br i1 %13, label %5, label %14, !llvm.loop !209

14:                                               ; preds = %5
  %.lcssa2 = phi i32 [ %7, %5 ]
  %.lcssa1 = phi i32 [ %9, %5 ]
  %.lcssa = phi i1 [ %11, %5 ]
  br i1 %.lcssa, label %15, label %19

15:                                               ; preds = %14
  %16 = tail call i32 @exp_golomb_decode_eq_prob(ptr noundef %0, i32 noundef 0) #47
  %17 = add nuw i32 %.lcssa2, 2
  %18 = add i32 %17, %16
  br label %19

19:                                               ; preds = %15, %14, %2
  %20 = phi i32 [ 0, %2 ], [ %18, %15 ], [ %.lcssa1, %14 ]
  ret i32 %20
}

; Function Attrs: nounwind optsize uwtable
define internal void @readRunLevel_CABAC(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 39
  %5 = load ptr, ptr %4, align 8, !tbaa !84
  %6 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 1
  %7 = load i32, ptr %6, align 4, !tbaa !49
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %8
  %10 = load i32, ptr @readRunLevel_CABAC.coeff_ctr, align 4, !tbaa !18
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %22

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 6
  %14 = load i32, ptr %13, align 8, !tbaa !190
  %15 = tail call i32 @read_and_store_CBP_block_bit(ptr noundef %9, ptr noundef %2, ptr noundef nonnull %1, i32 noundef %14) #47
  store i32 %15, ptr @readRunLevel_CABAC.coeff_ctr, align 4, !tbaa !18
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %40, label %17

17:                                               ; preds = %12
  %18 = load i32, ptr %13, align 8, !tbaa !190
  %19 = tail call i32 @read_significance_map(ptr noundef %9, ptr noundef %2, ptr noundef nonnull %1, i32 noundef %18, ptr noundef nonnull @readRunLevel_CABAC.coeff) #47
  store i32 %19, ptr @readRunLevel_CABAC.coeff_ctr, align 4, !tbaa !18
  %20 = load i32, ptr %13, align 8, !tbaa !190
  tail call void @read_significant_coefficients(ptr noundef %2, ptr noundef nonnull %1, i32 noundef %20, ptr noundef nonnull @readRunLevel_CABAC.coeff) #47
  %21 = load i32, ptr @readRunLevel_CABAC.coeff_ctr, align 4, !tbaa !18
  br label %22

22:                                               ; preds = %17, %3
  %23 = phi i32 [ %21, %17 ], [ %10, %3 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %40, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 2
  %27 = load i32, ptr @readRunLevel_CABAC.pos, align 4, !tbaa !18
  store i32 0, ptr %26, align 8, !tbaa !179
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [64 x i32], ptr @readRunLevel_CABAC.coeff, i64 0, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !18
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %45

32:                                               ; preds = %32, %25
  %33 = phi i64 [ %35, %32 ], [ %28, %25 ]
  %34 = phi i32 [ %36, %32 ], [ 0, %25 ]
  %35 = add i64 %33, 1
  %36 = add nuw nsw i32 %34, 1
  store i32 %36, ptr %26, align 8, !tbaa !179
  %37 = getelementptr inbounds [64 x i32], ptr @readRunLevel_CABAC.coeff, i64 0, i64 %35
  %38 = load i32, ptr %37, align 4, !tbaa !18
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %32, label %43, !llvm.loop !210

40:                                               ; preds = %22, %12
  %41 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 2
  store i32 0, ptr %41, align 8, !tbaa !179
  %42 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 0, ptr %42, align 4, !tbaa !173
  store i32 -1, ptr @readRunLevel_CABAC.coeff_ctr, align 4, !tbaa !18
  store i32 0, ptr @readRunLevel_CABAC.pos, align 4, !tbaa !18
  br label %51

43:                                               ; preds = %32
  %.lcssa1 = phi i64 [ %35, %32 ]
  %.lcssa = phi i32 [ %38, %32 ]
  %44 = trunc i64 %.lcssa1 to i32
  br label %45

45:                                               ; preds = %43, %25
  %46 = phi i32 [ %44, %43 ], [ %27, %25 ]
  %47 = phi i32 [ %.lcssa, %43 ], [ %30, %25 ]
  %48 = add nsw i32 %46, 1
  store i32 %48, ptr @readRunLevel_CABAC.pos, align 4, !tbaa !18
  %49 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 %47, ptr %49, align 4, !tbaa !173
  %50 = add nsw i32 %23, -1
  store i32 %50, ptr @readRunLevel_CABAC.coeff_ctr, align 4, !tbaa !18
  br label %51

51:                                               ; preds = %45, %40
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @readSyntaxElement_CABAC(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.datapartition, ptr %2, i64 0, i32 1
  %5 = tail call i32 @arideco_bits_read(ptr noundef nonnull %4) #46
  %6 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 9
  %7 = load ptr, ptr %6, align 8, !tbaa !211
  tail call void %7(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %4) #46
  %8 = tail call i32 @arideco_bits_read(ptr noundef nonnull %4) #46
  %9 = sub nsw i32 %8, %5
  %10 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 3
  store i32 %9, ptr %10, align 4, !tbaa !212
  ret i32 %9
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @cabac_startcode_follows(ptr nocapture noundef readonly %0, i32 noundef %1) #0 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %6 = load ptr, ptr %5, align 8, !tbaa !165
  %7 = getelementptr inbounds %struct.Slice, ptr %6, i64 0, i32 7
  %8 = load i32, ptr %7, align 4, !tbaa !213
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [0 x [20 x i32]], ptr @assignSE2partition, i64 0, i64 %9, i64 2
  %11 = load i32, ptr %10, align 4, !tbaa !18
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.Slice, ptr %6, i64 0, i32 9
  %14 = load ptr, ptr %13, align 8, !tbaa !214
  %15 = getelementptr inbounds %struct.datapartition, ptr %14, i64 %12, i32 1
  %16 = tail call i32 @biari_decode_final(ptr noundef nonnull %15) #46
  %17 = icmp eq i32 %16, 1
  %18 = zext i1 %17 to i32
  br label %19

19:                                               ; preds = %4, %2
  %20 = phi i32 [ %18, %4 ], [ 0, %2 ]
  ret i32 %20
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @readIPCMBytes_CABAC(ptr nocapture noundef %0, ptr nocapture noundef %1) #21 {
  %3 = load i32, ptr %1, align 8, !tbaa !215
  %4 = getelementptr inbounds %struct.Bitstream, ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !217
  %6 = getelementptr inbounds %struct.Bitstream, ptr %1, i64 0, i32 4
  %7 = load ptr, ptr %6, align 8, !tbaa !218
  %8 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 3
  store i32 8, ptr %8, align 4, !tbaa !212
  %9 = icmp slt i32 %3, %5
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 4
  %12 = load i32, ptr %11, align 8, !tbaa !219
  br label %20

13:                                               ; preds = %2
  %14 = add nsw i32 %3, 1
  %15 = sext i32 %3 to i64
  %16 = getelementptr inbounds i8, ptr %7, i64 %15
  %17 = load i8, ptr %16, align 1, !tbaa !14
  %18 = zext i8 %17 to i32
  %19 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 4
  store i32 %18, ptr %19, align 8, !tbaa !219
  br label %20

20:                                               ; preds = %13, %10
  %21 = phi i32 [ %18, %13 ], [ %12, %10 ]
  %22 = phi i32 [ %14, %13 ], [ %3, %10 ]
  %23 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 %21, ptr %23, align 4, !tbaa !173
  store i32 %22, ptr %1, align 8, !tbaa !215
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @init_contexts(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %3 = load ptr, ptr %2, align 8, !tbaa !165
  %4 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 10
  %5 = load ptr, ptr %4, align 8, !tbaa !166
  %6 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 11
  %7 = load ptr, ptr %6, align 8, !tbaa !196
  %8 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %9 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 99
  br label %10

10:                                               ; preds = %28, %1
  %11 = phi i64 [ 0, %1 ], [ %29, %28 ]
  br label %12

12:                                               ; preds = %25, %10
  %13 = phi i64 [ 0, %10 ], [ %26, %25 ]
  %14 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %14, label %20 [
    i32 2, label %15
    i32 4, label %15
  ]

15:                                               ; preds = %12, %12
  %16 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %5, i64 0, i64 %11, i64 %13
  %17 = load i32, ptr %9, align 4, !tbaa !220
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_I, i64 0, i64 %18, i64 %11, i64 %13
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef %16, ptr noundef nonnull %19) #46
  br label %25

20:                                               ; preds = %12
  %21 = getelementptr inbounds [4 x [11 x %struct.BiContextType]], ptr %5, i64 0, i64 %11, i64 %13
  %22 = load i32, ptr %9, align 4, !tbaa !220
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_P, i64 0, i64 %23, i64 %11, i64 %13
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef %21, ptr noundef nonnull %24) #46
  br label %25

25:                                               ; preds = %20, %15
  %26 = add nuw nsw i64 %13, 1
  %27 = icmp eq i64 %26, 11
  br i1 %27, label %28, label %12, !llvm.loop !221

28:                                               ; preds = %25
  %29 = add nuw nsw i64 %11, 1
  %30 = icmp eq i64 %29, 3
  br i1 %30, label %31, label %10, !llvm.loop !222

31:                                               ; preds = %50, %28
  %32 = phi i1 [ false, %50 ], [ true, %28 ]
  %33 = phi i64 [ 1, %50 ], [ 0, %28 ]
  br label %34

34:                                               ; preds = %47, %31
  %35 = phi i64 [ 0, %31 ], [ %48, %47 ]
  %36 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %36, label %42 [
    i32 2, label %37
    i32 4, label %37
  ]

37:                                               ; preds = %34, %34
  %38 = getelementptr inbounds %struct.MotionInfoContexts, ptr %5, i64 0, i32 1, i64 %33, i64 %35
  %39 = load i32, ptr %9, align 4, !tbaa !220
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %40, i64 %33, i64 %35
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %38, ptr noundef nonnull %41) #46
  br label %47

42:                                               ; preds = %34
  %43 = getelementptr inbounds %struct.MotionInfoContexts, ptr %5, i64 0, i32 1, i64 %33, i64 %35
  %44 = load i32, ptr %9, align 4, !tbaa !220
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %45, i64 %33, i64 %35
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %43, ptr noundef nonnull %46) #46
  br label %47

47:                                               ; preds = %42, %37
  %48 = add nuw nsw i64 %35, 1
  %49 = icmp eq i64 %48, 9
  br i1 %49, label %50, label %34, !llvm.loop !223

50:                                               ; preds = %47
  br i1 %32, label %31, label %51, !llvm.loop !224

51:                                               ; preds = %70, %50
  %52 = phi i1 [ false, %70 ], [ true, %50 ]
  %53 = phi i64 [ 1, %70 ], [ 0, %50 ]
  br label %54

54:                                               ; preds = %67, %51
  %55 = phi i64 [ 0, %51 ], [ %68, %67 ]
  %56 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %56, label %62 [
    i32 2, label %57
    i32 4, label %57
  ]

57:                                               ; preds = %54, %54
  %58 = getelementptr inbounds %struct.MotionInfoContexts, ptr %5, i64 0, i32 2, i64 %53, i64 %55
  %59 = load i32, ptr %9, align 4, !tbaa !220
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %60, i64 %53, i64 %55
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %58, ptr noundef nonnull %61) #46
  br label %67

62:                                               ; preds = %54
  %63 = getelementptr inbounds %struct.MotionInfoContexts, ptr %5, i64 0, i32 2, i64 %53, i64 %55
  %64 = load i32, ptr %9, align 4, !tbaa !220
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %65, i64 %53, i64 %55
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %63, ptr noundef nonnull %66) #46
  br label %67

67:                                               ; preds = %62, %57
  %68 = add nuw nsw i64 %55, 1
  %69 = icmp eq i64 %68, 10
  br i1 %69, label %70, label %54, !llvm.loop !225

70:                                               ; preds = %67
  br i1 %52, label %51, label %71, !llvm.loop !226

71:                                               ; preds = %90, %70
  %72 = phi i1 [ false, %90 ], [ true, %70 ]
  %73 = phi i64 [ 1, %90 ], [ 0, %70 ]
  br label %74

74:                                               ; preds = %87, %71
  %75 = phi i64 [ 0, %71 ], [ %88, %87 ]
  %76 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %76, label %82 [
    i32 2, label %77
    i32 4, label %77
  ]

77:                                               ; preds = %74, %74
  %78 = getelementptr inbounds %struct.MotionInfoContexts, ptr %5, i64 0, i32 3, i64 %73, i64 %75
  %79 = load i32, ptr %9, align 4, !tbaa !220
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 %80, i64 %73, i64 %75
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %78, ptr noundef nonnull %81) #46
  br label %87

82:                                               ; preds = %74
  %83 = getelementptr inbounds %struct.MotionInfoContexts, ptr %5, i64 0, i32 3, i64 %73, i64 %75
  %84 = load i32, ptr %9, align 4, !tbaa !220
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %85, i64 %73, i64 %75
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %83, ptr noundef nonnull %86) #46
  br label %87

87:                                               ; preds = %82, %77
  %88 = add nuw nsw i64 %75, 1
  %89 = icmp eq i64 %88, 6
  br i1 %89, label %90, label %74, !llvm.loop !227

90:                                               ; preds = %87
  br i1 %72, label %71, label %91, !llvm.loop !228

91:                                               ; preds = %102, %90
  %92 = phi i64 [ %106, %102 ], [ 0, %90 ]
  %93 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %93, label %98 [
    i32 2, label %94
    i32 4, label %94
  ]

94:                                               ; preds = %91, %91
  %95 = load i32, ptr %9, align 4, !tbaa !220
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_DELTA_QP_I, i64 0, i64 %96
  br label %102

98:                                               ; preds = %91
  %99 = load i32, ptr %9, align 4, !tbaa !220
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_DELTA_QP_P, i64 0, i64 %100
  br label %102

102:                                              ; preds = %98, %94
  %103 = phi ptr [ %97, %94 ], [ %101, %98 ]
  %104 = getelementptr inbounds %struct.MotionInfoContexts, ptr %5, i64 0, i32 4, i64 %92
  %105 = getelementptr inbounds [4 x [2 x i32]], ptr %103, i64 0, i64 %92
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %104, ptr noundef nonnull %105) #46
  %106 = add nuw nsw i64 %92, 1
  %107 = icmp eq i64 %106, 4
  br i1 %107, label %108, label %91, !llvm.loop !229

108:                                              ; preds = %119, %102
  %109 = phi i64 [ %123, %119 ], [ 0, %102 ]
  %110 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %110, label %115 [
    i32 2, label %111
    i32 4, label %111
  ]

111:                                              ; preds = %108, %108
  %112 = load i32, ptr %9, align 4, !tbaa !220
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_MB_AFF_I, i64 0, i64 %113
  br label %119

115:                                              ; preds = %108
  %116 = load i32, ptr %9, align 4, !tbaa !220
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_MB_AFF_P, i64 0, i64 %117
  br label %119

119:                                              ; preds = %115, %111
  %120 = phi ptr [ %114, %111 ], [ %118, %115 ]
  %121 = getelementptr inbounds %struct.MotionInfoContexts, ptr %5, i64 0, i32 5, i64 %109
  %122 = getelementptr inbounds [4 x [2 x i32]], ptr %120, i64 0, i64 %109
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %121, ptr noundef nonnull %122) #46
  %123 = add nuw nsw i64 %109, 1
  %124 = icmp eq i64 %123, 4
  br i1 %124, label %125, label %108, !llvm.loop !230

125:                                              ; preds = %136, %119
  %126 = phi i64 [ %140, %136 ], [ 0, %119 ]
  %127 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %127, label %132 [
    i32 2, label %128
    i32 4, label %128
  ]

128:                                              ; preds = %125, %125
  %129 = load i32, ptr %9, align 4, !tbaa !220
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [1 x [1 x [3 x [2 x i32]]]], ptr @INIT_TRANSFORM_SIZE_I, i64 0, i64 %130
  br label %136

132:                                              ; preds = %125
  %133 = load i32, ptr %9, align 4, !tbaa !220
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [3 x [1 x [3 x [2 x i32]]]], ptr @INIT_TRANSFORM_SIZE_P, i64 0, i64 %134
  br label %136

136:                                              ; preds = %132, %128
  %137 = phi ptr [ %131, %128 ], [ %135, %132 ]
  %138 = getelementptr inbounds %struct.MotionInfoContexts, ptr %5, i64 0, i32 6, i64 %126
  %139 = getelementptr inbounds [3 x [2 x i32]], ptr %137, i64 0, i64 %126
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %138, ptr noundef nonnull %139) #46
  %140 = add nuw nsw i64 %126, 1
  %141 = icmp eq i64 %140, 3
  br i1 %141, label %142, label %125, !llvm.loop !231

142:                                              ; preds = %154, %136
  %143 = phi i1 [ false, %154 ], [ true, %136 ]
  %144 = phi i64 [ 1, %154 ], [ 0, %136 ]
  %145 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %145, label %150 [
    i32 2, label %146
    i32 4, label %146
  ]

146:                                              ; preds = %142, %142
  %147 = load i32, ptr %9, align 4, !tbaa !220
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds [1 x [1 x [2 x [2 x i32]]]], ptr @INIT_IPR_I, i64 0, i64 %148
  br label %154

150:                                              ; preds = %142
  %151 = load i32, ptr %9, align 4, !tbaa !220
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [3 x [1 x [2 x [2 x i32]]]], ptr @INIT_IPR_P, i64 0, i64 %152
  br label %154

154:                                              ; preds = %150, %146
  %155 = phi ptr [ %149, %146 ], [ %153, %150 ]
  %156 = getelementptr inbounds [2 x %struct.BiContextType], ptr %7, i64 0, i64 %144
  %157 = getelementptr inbounds [2 x [2 x i32]], ptr %155, i64 0, i64 %144
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef %156, ptr noundef nonnull %157) #46
  br i1 %143, label %142, label %158, !llvm.loop !232

158:                                              ; preds = %169, %154
  %159 = phi i64 [ %173, %169 ], [ 0, %154 ]
  %160 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %160, label %165 [
    i32 2, label %161
    i32 4, label %161
  ]

161:                                              ; preds = %158, %158
  %162 = load i32, ptr %9, align 4, !tbaa !220
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_CIPR_I, i64 0, i64 %163
  br label %169

165:                                              ; preds = %158
  %166 = load i32, ptr %9, align 4, !tbaa !220
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_CIPR_P, i64 0, i64 %167
  br label %169

169:                                              ; preds = %165, %161
  %170 = phi ptr [ %164, %161 ], [ %168, %165 ]
  %171 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 1, i64 %159
  %172 = getelementptr inbounds [4 x [2 x i32]], ptr %170, i64 0, i64 %159
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %171, ptr noundef nonnull %172) #46
  %173 = add nuw nsw i64 %159, 1
  %174 = icmp eq i64 %173, 4
  br i1 %174, label %175, label %158, !llvm.loop !233

175:                                              ; preds = %193, %169
  %176 = phi i64 [ %194, %193 ], [ 0, %169 ]
  br label %177

177:                                              ; preds = %190, %175
  %178 = phi i64 [ 0, %175 ], [ %191, %190 ]
  %179 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %179, label %185 [
    i32 2, label %180
    i32 4, label %180
  ]

180:                                              ; preds = %177, %177
  %181 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 2, i64 %176, i64 %178
  %182 = load i32, ptr %9, align 4, !tbaa !220
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 %183, i64 %176, i64 %178
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %181, ptr noundef nonnull %184) #46
  br label %190

185:                                              ; preds = %177
  %186 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 2, i64 %176, i64 %178
  %187 = load i32, ptr %9, align 4, !tbaa !220
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %188, i64 %176, i64 %178
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %186, ptr noundef nonnull %189) #46
  br label %190

190:                                              ; preds = %185, %180
  %191 = add nuw nsw i64 %178, 1
  %192 = icmp eq i64 %191, 4
  br i1 %192, label %193, label %177, !llvm.loop !234

193:                                              ; preds = %190
  %194 = add nuw nsw i64 %176, 1
  %195 = icmp eq i64 %194, 3
  br i1 %195, label %196, label %175, !llvm.loop !235

196:                                              ; preds = %214, %193
  %197 = phi i64 [ %215, %214 ], [ 0, %193 ]
  br label %198

198:                                              ; preds = %211, %196
  %199 = phi i64 [ 0, %196 ], [ %212, %211 ]
  %200 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %200, label %206 [
    i32 2, label %201
    i32 4, label %201
  ]

201:                                              ; preds = %198, %198
  %202 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 3, i64 %197, i64 %199
  %203 = load i32, ptr %9, align 4, !tbaa !220
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_I, i64 0, i64 %204, i64 %197, i64 %199
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %202, ptr noundef nonnull %205) #46
  br label %211

206:                                              ; preds = %198
  %207 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 3, i64 %197, i64 %199
  %208 = load i32, ptr %9, align 4, !tbaa !220
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [3 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_P, i64 0, i64 %209, i64 %197, i64 %199
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %207, ptr noundef nonnull %210) #46
  br label %211

211:                                              ; preds = %206, %201
  %212 = add nuw nsw i64 %199, 1
  %213 = icmp eq i64 %212, 4
  br i1 %213, label %214, label %198, !llvm.loop !236

214:                                              ; preds = %211
  %215 = add nuw nsw i64 %197, 1
  %216 = icmp eq i64 %215, 8
  br i1 %216, label %217, label %196, !llvm.loop !237

217:                                              ; preds = %235, %214
  %218 = phi i64 [ %236, %235 ], [ 0, %214 ]
  br label %219

219:                                              ; preds = %232, %217
  %220 = phi i64 [ 0, %217 ], [ %233, %232 ]
  %221 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %221, label %227 [
    i32 2, label %222
    i32 4, label %222
  ]

222:                                              ; preds = %219, %219
  %223 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 4, i64 %218, i64 %220
  %224 = load i32, ptr %9, align 4, !tbaa !220
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %225, i64 %218, i64 %220
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %223, ptr noundef nonnull %226) #46
  br label %232

227:                                              ; preds = %219
  %228 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 4, i64 %218, i64 %220
  %229 = load i32, ptr %9, align 4, !tbaa !220
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %230, i64 %218, i64 %220
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %228, ptr noundef nonnull %231) #46
  br label %232

232:                                              ; preds = %227, %222
  %233 = add nuw nsw i64 %220, 1
  %234 = icmp eq i64 %233, 15
  br i1 %234, label %235, label %219, !llvm.loop !238

235:                                              ; preds = %232
  %236 = add nuw nsw i64 %218, 1
  %237 = icmp eq i64 %236, 8
  br i1 %237, label %238, label %217, !llvm.loop !239

238:                                              ; preds = %256, %235
  %239 = phi i64 [ %257, %256 ], [ 0, %235 ]
  br label %240

240:                                              ; preds = %253, %238
  %241 = phi i64 [ 0, %238 ], [ %254, %253 ]
  %242 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %242, label %248 [
    i32 2, label %243
    i32 4, label %243
  ]

243:                                              ; preds = %240, %240
  %244 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 5, i64 %239, i64 %241
  %245 = load i32, ptr %9, align 4, !tbaa !220
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %246, i64 %239, i64 %241
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %244, ptr noundef nonnull %247) #46
  br label %253

248:                                              ; preds = %240
  %249 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 5, i64 %239, i64 %241
  %250 = load i32, ptr %9, align 4, !tbaa !220
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %251, i64 %239, i64 %241
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %249, ptr noundef nonnull %252) #46
  br label %253

253:                                              ; preds = %248, %243
  %254 = add nuw nsw i64 %241, 1
  %255 = icmp eq i64 %254, 15
  br i1 %255, label %256, label %240, !llvm.loop !240

256:                                              ; preds = %253
  %257 = add nuw nsw i64 %239, 1
  %258 = icmp eq i64 %257, 8
  br i1 %258, label %259, label %238, !llvm.loop !241

259:                                              ; preds = %277, %256
  %260 = phi i64 [ %278, %277 ], [ 0, %256 ]
  br label %261

261:                                              ; preds = %274, %259
  %262 = phi i64 [ 0, %259 ], [ %275, %274 ]
  %263 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %263, label %269 [
    i32 2, label %264
    i32 4, label %264
  ]

264:                                              ; preds = %261, %261
  %265 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 6, i64 %260, i64 %262
  %266 = load i32, ptr %9, align 4, !tbaa !220
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 %267, i64 %260, i64 %262
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %265, ptr noundef nonnull %268) #46
  br label %274

269:                                              ; preds = %261
  %270 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 6, i64 %260, i64 %262
  %271 = load i32, ptr %9, align 4, !tbaa !220
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_P, i64 0, i64 %272, i64 %260, i64 %262
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %270, ptr noundef nonnull %273) #46
  br label %274

274:                                              ; preds = %269, %264
  %275 = add nuw nsw i64 %262, 1
  %276 = icmp eq i64 %275, 5
  br i1 %276, label %277, label %261, !llvm.loop !242

277:                                              ; preds = %274
  %278 = add nuw nsw i64 %260, 1
  %279 = icmp eq i64 %278, 8
  br i1 %279, label %280, label %259, !llvm.loop !243

280:                                              ; preds = %298, %277
  %281 = phi i64 [ %299, %298 ], [ 0, %277 ]
  br label %282

282:                                              ; preds = %295, %280
  %283 = phi i64 [ 0, %280 ], [ %296, %295 ]
  %284 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %284, label %290 [
    i32 2, label %285
    i32 4, label %285
  ]

285:                                              ; preds = %282, %282
  %286 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 7, i64 %281, i64 %283
  %287 = load i32, ptr %9, align 4, !tbaa !220
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 %288, i64 %281, i64 %283
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %286, ptr noundef nonnull %289) #46
  br label %295

290:                                              ; preds = %282
  %291 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 7, i64 %281, i64 %283
  %292 = load i32, ptr %9, align 4, !tbaa !220
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_P, i64 0, i64 %293, i64 %281, i64 %283
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %291, ptr noundef nonnull %294) #46
  br label %295

295:                                              ; preds = %290, %285
  %296 = add nuw nsw i64 %283, 1
  %297 = icmp eq i64 %296, 5
  br i1 %297, label %298, label %282, !llvm.loop !244

298:                                              ; preds = %295
  %299 = add nuw nsw i64 %281, 1
  %300 = icmp eq i64 %299, 8
  br i1 %300, label %301, label %280, !llvm.loop !245

301:                                              ; preds = %319, %298
  %302 = phi i64 [ %320, %319 ], [ 0, %298 ]
  br label %303

303:                                              ; preds = %316, %301
  %304 = phi i64 [ 0, %301 ], [ %317, %316 ]
  %305 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %305, label %311 [
    i32 2, label %306
    i32 4, label %306
  ]

306:                                              ; preds = %303, %303
  %307 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 8, i64 %302, i64 %304
  %308 = load i32, ptr %9, align 4, !tbaa !220
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %309, i64 %302, i64 %304
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %307, ptr noundef nonnull %310) #46
  br label %316

311:                                              ; preds = %303
  %312 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 8, i64 %302, i64 %304
  %313 = load i32, ptr %9, align 4, !tbaa !220
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %314, i64 %302, i64 %304
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %312, ptr noundef nonnull %315) #46
  br label %316

316:                                              ; preds = %311, %306
  %317 = add nuw nsw i64 %304, 1
  %318 = icmp eq i64 %317, 15
  br i1 %318, label %319, label %303, !llvm.loop !246

319:                                              ; preds = %316
  %320 = add nuw nsw i64 %302, 1
  %321 = icmp eq i64 %320, 8
  br i1 %321, label %322, label %301, !llvm.loop !247

322:                                              ; preds = %340, %319
  %323 = phi i64 [ %341, %340 ], [ 0, %319 ]
  br label %324

324:                                              ; preds = %337, %322
  %325 = phi i64 [ 0, %322 ], [ %338, %337 ]
  %326 = load i32, ptr %8, align 4, !tbaa !137
  switch i32 %326, label %332 [
    i32 2, label %327
    i32 4, label %327
  ]

327:                                              ; preds = %324, %324
  %328 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 9, i64 %323, i64 %325
  %329 = load i32, ptr %9, align 4, !tbaa !220
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %330, i64 %323, i64 %325
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %328, ptr noundef nonnull %331) #46
  br label %337

332:                                              ; preds = %324
  %333 = getelementptr inbounds %struct.TextureInfoContexts, ptr %7, i64 0, i32 9, i64 %323, i64 %325
  %334 = load i32, ptr %9, align 4, !tbaa !220
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %335, i64 %323, i64 %325
  tail call void @biari_init_context(ptr noundef nonnull %0, ptr noundef nonnull %333, ptr noundef nonnull %336) #46
  br label %337

337:                                              ; preds = %332, %327
  %338 = add nuw nsw i64 %325, 1
  %339 = icmp eq i64 %338, 15
  br i1 %339, label %340, label %324, !llvm.loop !248

340:                                              ; preds = %337
  %341 = add nuw nsw i64 %323, 1
  %342 = icmp eq i64 %341, 8
  br i1 %342, label %343, label %322, !llvm.loop !249

343:                                              ; preds = %340
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @ercInit(i32 noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = load ptr, ptr @erc_errorVar, align 8, !tbaa !13
  tail call void @ercClose(ptr noundef %4) #47
  %5 = mul nsw i32 %1, %0
  %6 = ashr i32 %5, 6
  %7 = sext i32 %6 to i64
  %8 = tail call noalias ptr @calloc(i64 noundef %7, i64 noundef 24) #45
  store ptr %8, ptr @erc_object_list, align 8, !tbaa !13
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  tail call void @no_mem_exit(ptr noundef nonnull @.str.19) #46
  br label %11

11:                                               ; preds = %10, %3
  %12 = tail call ptr @ercOpen() #47
  store ptr %12, ptr @erc_errorVar, align 8, !tbaa !13
  %13 = icmp eq ptr %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.ercVariables_s, ptr %12, i64 0, i32 10
  store i32 %2, ptr %15, align 8, !tbaa !250
  br label %16

16:                                               ; preds = %14, %11
  ret void
}

; Function Attrs: mustprogress nounwind optsize willreturn uwtable
define internal void @ercClose(ptr noundef %0) #22 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !252
  %6 = icmp eq ptr %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 5
  %9 = load ptr, ptr %8, align 8, !tbaa !253
  tail call void @free(ptr noundef %9) #46
  %10 = load ptr, ptr %4, align 8, !tbaa !252
  tail call void @free(ptr noundef %10) #46
  %11 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !254
  tail call void @free(ptr noundef %12) #46
  %13 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 4
  %14 = load ptr, ptr %13, align 8, !tbaa !255
  tail call void @free(ptr noundef %14) #46
  %15 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 7
  %16 = load ptr, ptr %15, align 8, !tbaa !256
  tail call void @free(ptr noundef %16) #46
  br label %17

17:                                               ; preds = %7, %3
  tail call void @free(ptr noundef nonnull %0) #46
  br label %18

18:                                               ; preds = %17, %1
  %19 = load ptr, ptr @erc_object_list, align 8, !tbaa !13
  %20 = icmp eq ptr %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  tail call void @free(ptr noundef nonnull %19) #46
  store ptr null, ptr @erc_object_list, align 8, !tbaa !13
  br label %22

22:                                               ; preds = %21, %18
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal noalias ptr @ercOpen() #0 {
  %1 = tail call noalias dereferenceable_or_null(72) ptr @malloc(i64 noundef 72) #49
  %2 = icmp eq ptr %1, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  tail call void @no_mem_exit(ptr noundef nonnull @.str.1.20) #46
  br label %4

4:                                                ; preds = %3, %0
  store i32 0, ptr %1, align 8, !tbaa !257
  %5 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 2
  %6 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 7
  store ptr null, ptr %6, align 8, !tbaa !256
  %7 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %5, i8 0, i64 36, i1 false)
  store i32 1, ptr %7, align 8, !tbaa !250
  ret ptr %1
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #23

; Function Attrs: nounwind optsize uwtable
define internal void @ercReset(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = icmp eq ptr %0, null
  br i1 %5, label %117, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 10
  %8 = load i32, ptr %7, align 8, !tbaa !250
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %117, label %10

10:                                               ; preds = %6
  %11 = load i32, ptr %0, align 8, !tbaa !257
  %12 = icmp eq i32 %11, %1
  br i1 %12, label %26, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !252
  %16 = icmp eq ptr %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %13
  tail call void @free(ptr noundef nonnull %15) #46
  store ptr null, ptr %14, align 8, !tbaa !252
  %18 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 7
  %19 = load ptr, ptr %18, align 8, !tbaa !256
  tail call void @free(ptr noundef %19) #46
  store ptr null, ptr %18, align 8, !tbaa !256
  %20 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !254
  tail call void @free(ptr noundef %21) #46
  store ptr null, ptr %20, align 8, !tbaa !254
  %22 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 4
  %23 = load ptr, ptr %22, align 8, !tbaa !255
  tail call void @free(ptr noundef %23) #46
  store ptr null, ptr %22, align 8, !tbaa !255
  %24 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 5
  %25 = load ptr, ptr %24, align 8, !tbaa !253
  tail call void @free(ptr noundef %25) #46
  store ptr null, ptr %24, align 8, !tbaa !253
  br label %26

26:                                               ; preds = %17, %13, %10
  %27 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !252
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %66

30:                                               ; preds = %26
  %31 = sext i32 %2 to i64
  %32 = mul nsw i64 %31, 12
  %33 = tail call noalias ptr @malloc(i64 noundef %32) #49
  %34 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 5
  store ptr %33, ptr %34, align 8, !tbaa !253
  %35 = icmp eq ptr %33, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  tail call void @no_mem_exit(ptr noundef nonnull @.str.2.21) #46
  %37 = load ptr, ptr %34, align 8, !tbaa !253
  br label %38

38:                                               ; preds = %36, %30
  %39 = phi ptr [ %37, %36 ], [ %33, %30 ]
  tail call void @llvm.memset.p0.i64(ptr align 4 %39, i8 0, i64 %32, i1 false)
  %40 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 1
  store i32 %2, ptr %40, align 4, !tbaa !258
  %41 = shl nsw i32 %1, 2
  %42 = sext i32 %41 to i64
  %43 = shl nsw i64 %42, 2
  %44 = tail call noalias ptr @malloc(i64 noundef %43) #49
  store ptr %44, ptr %27, align 8, !tbaa !252
  %45 = icmp eq ptr %44, null
  br i1 %45, label %46, label %47

46:                                               ; preds = %38
  tail call void @no_mem_exit(ptr noundef nonnull @.str.3.22) #46
  br label %47

47:                                               ; preds = %46, %38
  %48 = tail call noalias ptr @malloc(i64 noundef %43) #49
  %49 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 7
  store ptr %48, ptr %49, align 8, !tbaa !256
  %50 = icmp eq ptr %48, null
  br i1 %50, label %51, label %52

51:                                               ; preds = %47
  tail call void @no_mem_exit(ptr noundef nonnull @.str.4.23) #46
  br label %52

52:                                               ; preds = %51, %47
  %53 = sext i32 %1 to i64
  %54 = shl nsw i64 %53, 2
  %55 = tail call noalias ptr @malloc(i64 noundef %54) #49
  %56 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 3
  store ptr %55, ptr %56, align 8, !tbaa !254
  %57 = icmp eq ptr %55, null
  br i1 %57, label %58, label %59

58:                                               ; preds = %52
  tail call void @no_mem_exit(ptr noundef nonnull @.str.5.24) #46
  br label %59

59:                                               ; preds = %58, %52
  %60 = tail call noalias ptr @malloc(i64 noundef %54) #49
  %61 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 4
  store ptr %60, ptr %61, align 8, !tbaa !255
  %62 = icmp eq ptr %60, null
  br i1 %62, label %63, label %64

63:                                               ; preds = %59
  tail call void @no_mem_exit(ptr noundef nonnull @.str.6.25) #46
  br label %64

64:                                               ; preds = %63, %59
  store i32 %1, ptr %0, align 8, !tbaa !257
  %65 = load ptr, ptr %27, align 8, !tbaa !252
  br label %74

66:                                               ; preds = %26
  %67 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 7
  %68 = load ptr, ptr %67, align 8, !tbaa !256
  store ptr %28, ptr %67, align 8, !tbaa !256
  store ptr %68, ptr %27, align 8, !tbaa !252
  %69 = shl nsw i32 %1, 2
  %70 = sext i32 %69 to i64
  %71 = shl nsw i64 %70, 2
  %72 = sext i32 %1 to i64
  %73 = shl nsw i64 %72, 2
  br label %74

74:                                               ; preds = %66, %64
  %75 = phi i64 [ %73, %66 ], [ %54, %64 ]
  %76 = phi i64 [ %71, %66 ], [ %43, %64 ]
  %77 = phi ptr [ %68, %66 ], [ %65, %64 ]
  tail call void @llvm.memset.p0.i64(ptr align 4 %77, i8 0, i64 %76, i1 false)
  %78 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 3
  %79 = load ptr, ptr %78, align 8, !tbaa !254
  tail call void @llvm.memset.p0.i64(ptr align 4 %79, i8 0, i64 %75, i1 false)
  %80 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 4
  %81 = load ptr, ptr %80, align 8, !tbaa !255
  tail call void @llvm.memset.p0.i64(ptr align 4 %81, i8 0, i64 %75, i1 false)
  %82 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 1
  %83 = load i32, ptr %82, align 4, !tbaa !258
  %84 = icmp eq i32 %83, %2
  br i1 %84, label %85, label %88

85:                                               ; preds = %74
  %86 = sext i32 %2 to i64
  %87 = mul nsw i64 %86, 12
  br label %97

88:                                               ; preds = %74
  %89 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 5
  %90 = load ptr, ptr %89, align 8, !tbaa !253
  tail call void @free(ptr noundef %90) #46
  %91 = sext i32 %2 to i64
  %92 = mul nsw i64 %91, 12
  %93 = tail call noalias ptr @malloc(i64 noundef %92) #49
  store ptr %93, ptr %89, align 8, !tbaa !253
  %94 = icmp eq ptr %93, null
  br i1 %94, label %95, label %96

95:                                               ; preds = %88
  tail call void @no_mem_exit(ptr noundef nonnull @.str.2.21) #46
  br label %96

96:                                               ; preds = %95, %88
  store i32 %2, ptr %82, align 4, !tbaa !258
  br label %97

97:                                               ; preds = %96, %85
  %98 = phi i64 [ %87, %85 ], [ %92, %96 ]
  %99 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 5
  %100 = load ptr, ptr %99, align 8, !tbaa !253
  tail call void @llvm.memset.p0.i64(ptr align 4 %100, i8 0, i64 %98, i1 false)
  %101 = load i32, ptr %82, align 4, !tbaa !258
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %103, label %114

103:                                              ; preds = %97
  %104 = load ptr, ptr %99, align 8, !tbaa !253
  %105 = add nsw i32 %1, -1
  %106 = zext i32 %101 to i64
  br label %107

107:                                              ; preds = %107, %103
  %108 = phi i64 [ 0, %103 ], [ %112, %107 ]
  %109 = getelementptr inbounds %struct.ercSegment_s, ptr %104, i64 %108, i32 2
  store i32 1, ptr %109, align 4, !tbaa !259
  %110 = getelementptr inbounds %struct.ercSegment_s, ptr %104, i64 %108
  store i32 0, ptr %110, align 4, !tbaa !261
  %111 = getelementptr inbounds %struct.ercSegment_s, ptr %104, i64 %108, i32 1
  store i32 %105, ptr %111, align 4, !tbaa !262
  %112 = add nuw nsw i64 %108, 1
  %113 = icmp eq i64 %112, %106
  br i1 %113, label %114, label %107, !llvm.loop !263

114:                                              ; preds = %107, %97
  %115 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 6
  store i32 0, ptr %115, align 8, !tbaa !264
  %116 = getelementptr inbounds %struct.ercVariables_s, ptr %0, i64 0, i32 9
  store i32 0, ptr %116, align 4, !tbaa !265
  br label %117

117:                                              ; preds = %114, %6, %4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @ercStartSegment(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) #24 {
  %5 = icmp eq ptr %3, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 10
  %8 = load i32, ptr %7, align 8, !tbaa !250
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 8
  store i32 0, ptr %11, align 8, !tbaa !266
  %12 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 5
  %13 = load ptr, ptr %12, align 8, !tbaa !253
  %14 = sext i32 %1 to i64
  %15 = getelementptr inbounds %struct.ercSegment_s, ptr %13, i64 %14, i32 2
  store i32 0, ptr %15, align 4, !tbaa !259
  %16 = getelementptr inbounds %struct.ercSegment_s, ptr %13, i64 %14
  store i32 %0, ptr %16, align 4, !tbaa !261
  br label %17

17:                                               ; preds = %10, %6, %4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @ercStopSegment(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) #24 {
  %5 = icmp eq ptr %3, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 10
  %8 = load i32, ptr %7, align 8, !tbaa !250
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 5
  %12 = load ptr, ptr %11, align 8, !tbaa !253
  %13 = sext i32 %1 to i64
  %14 = getelementptr inbounds %struct.ercSegment_s, ptr %12, i64 %13, i32 1
  store i32 %0, ptr %14, align 4, !tbaa !262
  %15 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 6
  %16 = load i32, ptr %15, align 8, !tbaa !264
  %17 = add nsw i32 %16, 1
  store i32 %17, ptr %15, align 8, !tbaa !264
  br label %18

18:                                               ; preds = %10, %6, %4
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @ercMarkCurrSegmentLost(i32 noundef %0, ptr nocapture noundef %1) #9 {
  %3 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 6
  %4 = load i32, ptr %3, align 8, !tbaa !264
  %5 = add nsw i32 %4, -1
  %6 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 10
  %7 = load i32, ptr %6, align 8, !tbaa !250
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %66, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 8
  %11 = load i32, ptr %10, align 8, !tbaa !266
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 9
  %15 = load i32, ptr %14, align 4, !tbaa !265
  %16 = add nsw i32 %15, 1
  store i32 %16, ptr %14, align 4, !tbaa !265
  store i32 1, ptr %10, align 8, !tbaa !266
  br label %17

17:                                               ; preds = %13, %9
  %18 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 5
  %19 = load ptr, ptr %18, align 8, !tbaa !253
  %20 = sext i32 %5 to i64
  %21 = getelementptr inbounds %struct.ercSegment_s, ptr %19, i64 %20
  %22 = load i32, ptr %21, align 4, !tbaa !261
  %23 = getelementptr inbounds %struct.ercSegment_s, ptr %19, i64 %20, i32 1
  %24 = load i32, ptr %23, align 4, !tbaa !262
  %25 = icmp sgt i32 %22, %24
  br i1 %25, label %64, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !252
  %29 = ashr i32 %0, 4
  %30 = ashr i32 %0, 3
  %31 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 3
  %32 = load ptr, ptr %31, align 8, !tbaa !254
  %33 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 4
  %34 = load ptr, ptr %33, align 8, !tbaa !255
  %35 = sext i32 %22 to i64
  br label %36

36:                                               ; preds = %36, %26
  %37 = phi i64 [ %35, %26 ], [ %60, %36 ]
  %38 = trunc i64 %37 to i32
  %39 = sdiv i32 %38, %29
  %40 = shl i32 %39, 1
  %41 = mul nsw i32 %40, %30
  %42 = srem i32 %38, %29
  %43 = shl nsw i32 %42, 1
  %44 = add nsw i32 %41, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, ptr %28, i64 %45
  store i32 1, ptr %46, align 4, !tbaa !18
  %47 = or i32 %44, 1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %28, i64 %48
  store i32 1, ptr %49, align 4, !tbaa !18
  %50 = or i32 %40, 1
  %51 = mul nsw i32 %50, %30
  %52 = add nsw i32 %51, %43
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, ptr %28, i64 %53
  store i32 1, ptr %54, align 4, !tbaa !18
  %55 = add nsw i32 %52, 1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i32, ptr %28, i64 %56
  store i32 1, ptr %57, align 4, !tbaa !18
  %58 = getelementptr inbounds i32, ptr %32, i64 %37
  store i32 1, ptr %58, align 4, !tbaa !18
  %59 = getelementptr inbounds i32, ptr %34, i64 %37
  store i32 1, ptr %59, align 4, !tbaa !18
  %60 = add nsw i64 %37, 1
  %61 = load i32, ptr %23, align 4, !tbaa !262
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %37, %62
  br i1 %63, label %36, label %64, !llvm.loop !267

64:                                               ; preds = %36, %17
  %65 = getelementptr inbounds %struct.ercSegment_s, ptr %19, i64 %20, i32 2
  store i32 1, ptr %65, align 4, !tbaa !259
  br label %66

66:                                               ; preds = %64, %2
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @ercMarkCurrSegmentOK(i32 noundef %0, ptr nocapture noundef readonly %1) #9 {
  %3 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 10
  %4 = load i32, ptr %3, align 8, !tbaa !250
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %58, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 6
  %8 = load i32, ptr %7, align 8, !tbaa !264
  %9 = add nsw i32 %8, -1
  %10 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 5
  %11 = load ptr, ptr %10, align 8, !tbaa !253
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %struct.ercSegment_s, ptr %11, i64 %12
  %14 = load i32, ptr %13, align 4, !tbaa !261
  %15 = getelementptr inbounds %struct.ercSegment_s, ptr %11, i64 %12, i32 1
  %16 = load i32, ptr %15, align 4, !tbaa !262
  %17 = icmp sgt i32 %14, %16
  br i1 %17, label %56, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !252
  %21 = ashr i32 %0, 4
  %22 = ashr i32 %0, 3
  %23 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !254
  %25 = getelementptr inbounds %struct.ercVariables_s, ptr %1, i64 0, i32 4
  %26 = load ptr, ptr %25, align 8, !tbaa !255
  %27 = sext i32 %14 to i64
  br label %28

28:                                               ; preds = %28, %18
  %29 = phi i64 [ %27, %18 ], [ %52, %28 ]
  %30 = trunc i64 %29 to i32
  %31 = sdiv i32 %30, %21
  %32 = shl i32 %31, 1
  %33 = mul nsw i32 %32, %22
  %34 = srem i32 %30, %21
  %35 = shl nsw i32 %34, 1
  %36 = add nsw i32 %33, %35
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, ptr %20, i64 %37
  store i32 3, ptr %38, align 4, !tbaa !18
  %39 = or i32 %36, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, ptr %20, i64 %40
  store i32 3, ptr %41, align 4, !tbaa !18
  %42 = or i32 %32, 1
  %43 = mul nsw i32 %42, %22
  %44 = add nsw i32 %43, %35
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, ptr %20, i64 %45
  store i32 3, ptr %46, align 4, !tbaa !18
  %47 = add nsw i32 %44, 1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, ptr %20, i64 %48
  store i32 3, ptr %49, align 4, !tbaa !18
  %50 = getelementptr inbounds i32, ptr %24, i64 %29
  store i32 3, ptr %50, align 4, !tbaa !18
  %51 = getelementptr inbounds i32, ptr %26, i64 %29
  store i32 3, ptr %51, align 4, !tbaa !18
  %52 = add nsw i64 %29, 1
  %53 = load i32, ptr %15, align 4, !tbaa !262
  %54 = sext i32 %53 to i64
  %55 = icmp slt i64 %29, %54
  br i1 %55, label %28, label %56, !llvm.loop !268

56:                                               ; preds = %28, %6
  %57 = getelementptr inbounds %struct.ercSegment_s, ptr %11, i64 %12, i32 2
  store i32 0, ptr %57, align 4, !tbaa !259
  br label %58

58:                                               ; preds = %56, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @ercMarkCurrMBConcealed(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef readonly %3) #24 {
  %5 = icmp eq ptr %3, null
  br i1 %5, label %54, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 10
  %8 = load i32, ptr %7, align 8, !tbaa !250
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %6
  %11 = icmp sgt i32 %1, -1
  %12 = select i1 %11, i32 %1, i32 0
  switch i32 %12, label %54 [
    i32 0, label %15
    i32 1, label %39
    i32 2, label %13
  ]

13:                                               ; preds = %10
  %14 = sext i32 %0 to i64
  br label %49

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !252
  %18 = ashr i32 %2, 4
  %19 = sdiv i32 %0, %18
  %20 = shl i32 %19, 1
  %21 = ashr i32 %2, 3
  %22 = mul nsw i32 %20, %21
  %23 = srem i32 %0, %18
  %24 = shl nsw i32 %23, 1
  %25 = add nsw i32 %22, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, ptr %17, i64 %26
  store i32 2, ptr %27, align 4, !tbaa !18
  %28 = or i32 %25, 1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, ptr %17, i64 %29
  store i32 2, ptr %30, align 4, !tbaa !18
  %31 = or i32 %20, 1
  %32 = mul nsw i32 %31, %21
  %33 = add nsw i32 %32, %24
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i32, ptr %17, i64 %34
  store i32 2, ptr %35, align 4, !tbaa !18
  %36 = add nsw i32 %33, 1
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, ptr %17, i64 %37
  store i32 2, ptr %38, align 4, !tbaa !18
  br i1 %11, label %54, label %44

39:                                               ; preds = %10
  %40 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 3
  %41 = load ptr, ptr %40, align 8, !tbaa !254
  %42 = sext i32 %0 to i64
  %43 = getelementptr inbounds i32, ptr %41, i64 %42
  store i32 2, ptr %43, align 4, !tbaa !18
  br i1 %11, label %54, label %49

44:                                               ; preds = %15
  %45 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 3
  %46 = load ptr, ptr %45, align 8, !tbaa !254
  %47 = sext i32 %0 to i64
  %48 = getelementptr inbounds i32, ptr %46, i64 %47
  store i32 2, ptr %48, align 4, !tbaa !18
  br label %49

49:                                               ; preds = %44, %39, %13
  %50 = phi i64 [ %14, %13 ], [ %47, %44 ], [ %42, %39 ]
  %51 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 4
  %52 = load ptr, ptr %51, align 8, !tbaa !255
  %53 = getelementptr inbounds i32, ptr %52, i64 %50
  store i32 2, ptr %53, align 4, !tbaa !18
  br label %54

54:                                               ; preds = %49, %39, %15, %10, %6, %4
  ret void
}

; Function Attrs: nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal i32 @ercConcealIntraFrame(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr noundef readonly %3) #25 {
  %5 = icmp eq ptr %3, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 10
  %8 = load i32, ptr %7, align 8, !tbaa !250
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 9
  %12 = load i32, ptr %11, align 4, !tbaa !265
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = ashr i32 %2, 3
  %16 = ashr i32 %1, 3
  %17 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !252
  tail call fastcc void @concealBlocks(i32 noundef %16, i32 noundef %15, i32 noundef 0, ptr noundef %0, i32 noundef %1, ptr noundef %18) #47
  %19 = ashr i32 %2, 4
  %20 = ashr i32 %1, 4
  %21 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !254
  tail call fastcc void @concealBlocks(i32 noundef %20, i32 noundef %19, i32 noundef 1, ptr noundef %0, i32 noundef %1, ptr noundef %22) #47
  %23 = getelementptr inbounds %struct.ercVariables_s, ptr %3, i64 0, i32 4
  %24 = load ptr, ptr %23, align 8, !tbaa !255
  tail call fastcc void @concealBlocks(i32 noundef %20, i32 noundef %19, i32 noundef 2, ptr noundef %0, i32 noundef %1, ptr noundef %24) #47
  br label %25

25:                                               ; preds = %14, %10, %6, %4
  %26 = phi i32 [ 1, %14 ], [ 1, %10 ], [ 0, %6 ], [ 0, %4 ]
  ret i32 %26
}

; Function Attrs: nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @concealBlocks(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3, i32 noundef %4, ptr nocapture noundef %5) unnamed_addr #25 {
  %7 = alloca [8 x i32], align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #48
  %8 = icmp eq i32 %2, 0
  %9 = select i1 %8, i32 2, i32 1
  %10 = icmp sgt i32 %0, 0
  br i1 %10, label %11, label %161

11:                                               ; preds = %6
  %12 = icmp sgt i32 %1, 0
  %13 = getelementptr inbounds %struct.frame.16, ptr %3, i64 0, i32 2
  %14 = ashr i32 %4, 1
  %15 = getelementptr inbounds %struct.frame.16, ptr %3, i64 0, i32 1
  %16 = zext i32 %9 to i64
  %17 = zext i32 %0 to i64
  %18 = sext i32 %1 to i64
  br label %19

19:                                               ; preds = %158, %11
  %20 = phi i64 [ 0, %11 ], [ %159, %158 ]
  br i1 %12, label %21, label %158

21:                                               ; preds = %19
  %22 = trunc i64 %20 to i32
  %23 = trunc i64 %20 to i32
  %24 = trunc i64 %20 to i32
  br label %25

25:                                               ; preds = %154, %21
  %26 = phi i32 [ %156, %154 ], [ 0, %21 ]
  %27 = mul nsw i32 %26, %0
  %28 = sext i32 %27 to i64
  %29 = add nsw i64 %20, %28
  %30 = getelementptr inbounds i32, ptr %5, i64 %29
  %31 = load i32, ptr %30, align 4, !tbaa !18
  %32 = icmp slt i32 %31, 2
  br i1 %32, label %33, label %154

33:                                               ; preds = %25
  %34 = sext i32 %26 to i64
  br label %35

35:                                               ; preds = %41, %33
  %36 = phi i64 [ %34, %33 ], [ %37, %41 ]
  %37 = add i64 %36, %16
  %38 = icmp slt i64 %37, %18
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = icmp slt i32 %26, %1
  br i1 %40, label %47, label %154

41:                                               ; preds = %35
  %42 = mul nsw i64 %37, %17
  %43 = add nsw i64 %42, %20
  %44 = getelementptr inbounds i32, ptr %5, i64 %43
  %45 = load i32, ptr %44, align 4, !tbaa !18
  %46 = icmp sgt i32 %45, 1
  br i1 %46, label %73, label %35, !llvm.loop !269

47:                                               ; preds = %68, %39
  %48 = phi i64 [ %71, %68 ], [ %34, %39 ]
  %49 = trunc i64 %48 to i32
  %50 = call i32 @ercCollect8PredBlocks(ptr noundef nonnull %7, i32 noundef %49, i32 noundef %22, ptr noundef %5, i32 noundef %1, i32 noundef %0, i32 noundef %9, i8 noundef zeroext 1) #47
  switch i32 %2, label %65 [
    i32 0, label %52
    i32 1, label %62
    i32 2, label %51
  ]

51:                                               ; preds = %47
  br label %62

52:                                               ; preds = %47
  %53 = load ptr, ptr %3, align 8, !tbaa !270
  call void @ercPixConcealIMB(ptr noundef %53, i32 noundef %49, i32 noundef %22, ptr noundef nonnull %7, i32 noundef %4, i32 noundef 2) #47
  %54 = mul nsw i64 %48, %17
  %55 = add nsw i64 %54, %20
  %56 = getelementptr inbounds i32, ptr %5, i64 %55
  store i32 2, ptr %56, align 4, !tbaa !18
  %57 = add nsw i64 %55, 1
  %58 = getelementptr inbounds i32, ptr %5, i64 %57
  store i32 2, ptr %58, align 4, !tbaa !18
  %59 = add nsw i64 %55, %17
  %60 = getelementptr inbounds i32, ptr %5, i64 %59
  store i32 2, ptr %60, align 4, !tbaa !18
  %61 = add nsw i64 %59, 1
  br label %68

62:                                               ; preds = %51, %47
  %63 = phi ptr [ %13, %51 ], [ %15, %47 ]
  %64 = load ptr, ptr %63, align 8, !tbaa !13
  call void @ercPixConcealIMB(ptr noundef %64, i32 noundef %49, i32 noundef %22, ptr noundef nonnull %7, i32 noundef %14, i32 noundef 1) #47
  br label %65

65:                                               ; preds = %62, %47
  %66 = mul nsw i64 %48, %17
  %67 = add nsw i64 %66, %20
  br label %68

68:                                               ; preds = %65, %52
  %69 = phi i64 [ %61, %52 ], [ %67, %65 ]
  %70 = getelementptr inbounds i32, ptr %5, i64 %69
  store i32 2, ptr %70, align 4, !tbaa !18
  %71 = add i64 %48, %16
  %72 = icmp slt i64 %71, %18
  br i1 %72, label %47, label %154, !llvm.loop !272

73:                                               ; preds = %41
  %.lcssa1 = phi i64 [ %36, %41 ]
  %74 = trunc i64 %.lcssa1 to i32
  %75 = icmp eq i32 %26, 0
  br i1 %75, label %76, label %110

76:                                               ; preds = %73
  %77 = icmp sgt i32 %74, -1
  br i1 %77, label %78, label %108

78:                                               ; preds = %103, %76
  %79 = phi i32 [ %106, %103 ], [ %74, %76 ]
  %80 = call i32 @ercCollect8PredBlocks(ptr noundef nonnull %7, i32 noundef %79, i32 noundef %24, ptr noundef nonnull %5, i32 noundef %1, i32 noundef %0, i32 noundef %9, i8 noundef zeroext 1) #47
  switch i32 %2, label %99 [
    i32 0, label %82
    i32 1, label %96
    i32 2, label %81
  ]

81:                                               ; preds = %78
  br label %96

82:                                               ; preds = %78
  %83 = load ptr, ptr %3, align 8, !tbaa !270
  call void @ercPixConcealIMB(ptr noundef %83, i32 noundef %79, i32 noundef %24, ptr noundef nonnull %7, i32 noundef %4, i32 noundef 2) #47
  %84 = mul nsw i32 %79, %0
  %85 = add nsw i32 %84, %24
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i32, ptr %5, i64 %86
  store i32 2, ptr %87, align 4, !tbaa !18
  %88 = add nsw i32 %85, 1
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %5, i64 %89
  store i32 2, ptr %90, align 4, !tbaa !18
  %91 = add nsw i32 %85, %0
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i32, ptr %5, i64 %92
  store i32 2, ptr %93, align 4, !tbaa !18
  %94 = add nsw i32 %91, 1
  %95 = sext i32 %94 to i64
  br label %103

96:                                               ; preds = %81, %78
  %97 = phi ptr [ %13, %81 ], [ %15, %78 ]
  %98 = load ptr, ptr %97, align 8, !tbaa !13
  call void @ercPixConcealIMB(ptr noundef %98, i32 noundef %79, i32 noundef %24, ptr noundef nonnull %7, i32 noundef %14, i32 noundef 1) #47
  br label %99

99:                                               ; preds = %96, %78
  %100 = mul nsw i32 %79, %0
  %101 = sext i32 %100 to i64
  %102 = add nsw i64 %20, %101
  br label %103

103:                                              ; preds = %99, %82
  %104 = phi i64 [ %95, %82 ], [ %102, %99 ]
  %105 = getelementptr inbounds i32, ptr %5, i64 %104
  store i32 2, ptr %105, align 4, !tbaa !18
  %106 = sub nsw i32 %79, %9
  %107 = icmp sgt i32 %106, -1
  br i1 %107, label %78, label %108, !llvm.loop !273

108:                                              ; preds = %103, %76
  %109 = add nsw i32 %9, %74
  br label %154

110:                                              ; preds = %73
  %111 = add nsw i32 %9, %74
  %112 = sub i32 %9, %26
  %113 = add i32 %112, %74
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %154

115:                                              ; preds = %149, %110
  %116 = phi i32 [ %152, %149 ], [ 0, %110 ]
  %117 = phi i32 [ %124, %149 ], [ %26, %110 ]
  %118 = phi i32 [ %122, %149 ], [ %74, %110 ]
  %119 = and i32 %116, 1
  %120 = icmp eq i32 %119, 0
  %121 = select i1 %120, i32 0, i32 %9
  %122 = sub nsw i32 %118, %121
  %123 = select i1 %120, i32 %9, i32 0
  %124 = add nsw i32 %123, %117
  %125 = select i1 %120, i32 %117, i32 %118
  %126 = call i32 @ercCollect8PredBlocks(ptr noundef nonnull %7, i32 noundef %125, i32 noundef %23, ptr noundef nonnull %5, i32 noundef %1, i32 noundef %0, i32 noundef %9, i8 noundef zeroext 1) #47
  switch i32 %2, label %145 [
    i32 0, label %128
    i32 1, label %142
    i32 2, label %127
  ]

127:                                              ; preds = %115
  br label %142

128:                                              ; preds = %115
  %129 = load ptr, ptr %3, align 8, !tbaa !270
  call void @ercPixConcealIMB(ptr noundef %129, i32 noundef %125, i32 noundef %23, ptr noundef nonnull %7, i32 noundef %4, i32 noundef 2) #47
  %130 = mul nsw i32 %125, %0
  %131 = add nsw i32 %130, %23
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i32, ptr %5, i64 %132
  store i32 2, ptr %133, align 4, !tbaa !18
  %134 = add nsw i32 %131, 1
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i32, ptr %5, i64 %135
  store i32 2, ptr %136, align 4, !tbaa !18
  %137 = add nsw i32 %131, %0
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i32, ptr %5, i64 %138
  store i32 2, ptr %139, align 4, !tbaa !18
  %140 = add nsw i32 %137, 1
  %141 = sext i32 %140 to i64
  br label %149

142:                                              ; preds = %127, %115
  %143 = phi ptr [ %13, %127 ], [ %15, %115 ]
  %144 = load ptr, ptr %143, align 8, !tbaa !13
  call void @ercPixConcealIMB(ptr noundef %144, i32 noundef %125, i32 noundef %23, ptr noundef nonnull %7, i32 noundef %14, i32 noundef 1) #47
  br label %145

145:                                              ; preds = %142, %115
  %146 = mul nsw i32 %125, %0
  %147 = sext i32 %146 to i64
  %148 = add nsw i64 %20, %147
  br label %149

149:                                              ; preds = %145, %128
  %150 = phi i64 [ %141, %128 ], [ %148, %145 ]
  %151 = getelementptr inbounds i32, ptr %5, i64 %150
  store i32 2, ptr %151, align 4, !tbaa !18
  %152 = add nuw nsw i32 %116, %9
  %153 = icmp slt i32 %152, %113
  br i1 %153, label %115, label %154, !llvm.loop !274

154:                                              ; preds = %149, %110, %108, %68, %39, %25
  %155 = phi i32 [ %26, %25 ], [ %109, %108 ], [ %111, %110 ], [ %1, %39 ], [ %111, %149 ], [ %1, %68 ]
  %156 = add nsw i32 %155, %9
  %157 = icmp slt i32 %156, %1
  br i1 %157, label %25, label %158, !llvm.loop !275

158:                                              ; preds = %154, %19
  %159 = add i64 %20, %16
  %160 = icmp slt i64 %159, %17
  br i1 %160, label %19, label %161, !llvm.loop !276

161:                                              ; preds = %158, %6
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #48
  ret void
}

; Function Attrs: nofree nosync nounwind optsize memory(argmem: readwrite) uwtable
define internal i32 @ercCollect8PredBlocks(ptr nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i8 noundef zeroext %7) #17 {
  %9 = icmp eq i8 %7, 0
  %10 = select i1 %9, i32 4, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %0, i8 0, i64 32, i1 false)
  %11 = icmp sgt i32 %1, 0
  %12 = sub nsw i32 %4, %6
  %13 = icmp sgt i32 %12, %1
  %14 = icmp sgt i32 %2, 0
  %15 = sub nsw i32 %5, %6
  %16 = icmp sgt i32 %15, %2
  %17 = add nsw i32 %1, -1
  %18 = mul nsw i32 %17, %5
  %19 = add nsw i32 %18, %2
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, ptr %3, i64 %20
  %22 = getelementptr inbounds i32, ptr %0, i64 4
  %23 = add nsw i32 %6, %1
  %24 = mul nsw i32 %23, %5
  %25 = add nsw i32 %24, %2
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, ptr %3, i64 %26
  %28 = getelementptr inbounds i32, ptr %0, i64 6
  %29 = mul nsw i32 %5, %1
  %30 = add i32 %2, -1
  %31 = add i32 %30, %29
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i32, ptr %3, i64 %32
  %34 = getelementptr inbounds i32, ptr %0, i64 5
  %35 = add i32 %30, %18
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i32, ptr %3, i64 %36
  %38 = getelementptr inbounds i32, ptr %0, i64 1
  %39 = add i32 %30, %24
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, ptr %3, i64 %40
  %42 = getelementptr inbounds i32, ptr %0, i64 2
  %43 = add nsw i32 %29, %2
  %44 = add nsw i32 %43, %6
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, ptr %3, i64 %45
  %47 = getelementptr inbounds i32, ptr %0, i64 7
  %48 = add nsw i32 %19, %6
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %3, i64 %49
  %51 = add i32 %6, %2
  %52 = add i32 %51, %24
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, ptr %3, i64 %53
  %55 = getelementptr inbounds i32, ptr %0, i64 3
  br label %56

56:                                               ; preds = %114, %8
  %57 = phi i1 [ true, %8 ], [ false, %114 ]
  %58 = phi i32 [ 3, %8 ], [ 2, %114 ]
  br i1 %11, label %59, label %63

59:                                               ; preds = %56
  %60 = load i32, ptr %21, align 4, !tbaa !18
  %61 = icmp slt i32 %60, %58
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  store i32 %60, ptr %22, align 4, !tbaa !18
  br label %63

63:                                               ; preds = %62, %59, %56
  %64 = phi i32 [ 1, %62 ], [ 0, %59 ], [ 0, %56 ]
  br i1 %13, label %65, label %70

65:                                               ; preds = %63
  %66 = load i32, ptr %27, align 4, !tbaa !18
  %67 = icmp slt i32 %66, %58
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  store i32 %66, ptr %28, align 4, !tbaa !18
  %69 = add nuw nsw i32 %64, 1
  br label %70

70:                                               ; preds = %68, %65, %63
  %71 = phi i32 [ %69, %68 ], [ %64, %65 ], [ %64, %63 ]
  br i1 %14, label %72, label %92

72:                                               ; preds = %70
  %73 = load i32, ptr %33, align 4, !tbaa !18
  %74 = icmp slt i32 %73, %58
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  store i32 %73, ptr %34, align 4, !tbaa !18
  %76 = add nuw nsw i32 %71, 1
  br label %77

77:                                               ; preds = %75, %72
  %78 = phi i32 [ %76, %75 ], [ %71, %72 ]
  br i1 %9, label %79, label %92

79:                                               ; preds = %77
  br i1 %11, label %80, label %85

80:                                               ; preds = %79
  %81 = load i32, ptr %37, align 4, !tbaa !18
  %82 = icmp slt i32 %81, %58
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  store i32 %81, ptr %38, align 4, !tbaa !18
  %84 = add nuw nsw i32 %78, 1
  br label %85

85:                                               ; preds = %83, %80, %79
  %86 = phi i32 [ %84, %83 ], [ %78, %80 ], [ %78, %79 ]
  br i1 %13, label %87, label %92

87:                                               ; preds = %85
  %88 = load i32, ptr %41, align 4, !tbaa !18
  %89 = icmp slt i32 %88, %58
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  store i32 %88, ptr %42, align 4, !tbaa !18
  %91 = add nuw nsw i32 %86, 1
  br label %92

92:                                               ; preds = %90, %87, %85, %77, %70
  %93 = phi i32 [ %78, %77 ], [ %91, %90 ], [ %86, %87 ], [ %86, %85 ], [ %71, %70 ]
  br i1 %16, label %94, label %114

94:                                               ; preds = %92
  %95 = load i32, ptr %46, align 4, !tbaa !18
  %96 = icmp slt i32 %95, %58
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  store i32 %95, ptr %47, align 4, !tbaa !18
  %98 = add nuw nsw i32 %93, 1
  br label %99

99:                                               ; preds = %97, %94
  %100 = phi i32 [ %98, %97 ], [ %93, %94 ]
  br i1 %9, label %101, label %114

101:                                              ; preds = %99
  br i1 %11, label %102, label %107

102:                                              ; preds = %101
  %103 = load i32, ptr %50, align 4, !tbaa !18
  %104 = icmp slt i32 %103, %58
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  store i32 %103, ptr %0, align 4, !tbaa !18
  %106 = add nuw nsw i32 %100, 1
  br label %107

107:                                              ; preds = %105, %102, %101
  %108 = phi i32 [ %106, %105 ], [ %100, %102 ], [ %100, %101 ]
  br i1 %13, label %109, label %114

109:                                              ; preds = %107
  %110 = load i32, ptr %54, align 4, !tbaa !18
  %111 = icmp slt i32 %110, %58
  br i1 %111, label %114, label %112

112:                                              ; preds = %109
  store i32 %110, ptr %55, align 4, !tbaa !18
  %113 = add nuw nsw i32 %108, 1
  br label %114

114:                                              ; preds = %112, %109, %107, %99, %92
  %115 = phi i32 [ %100, %99 ], [ %113, %112 ], [ %108, %109 ], [ %108, %107 ], [ %93, %92 ]
  %116 = icmp slt i32 %115, %10
  %117 = select i1 %57, i1 %116, i1 false
  br i1 %117, label %56, label %118, !llvm.loop !277

118:                                              ; preds = %114
  %.lcssa = phi i32 [ %115, %114 ]
  ret i32 %.lcssa
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @ercPixConcealIMB(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3, i32 noundef %4, i32 noundef %5) #16 {
  %7 = getelementptr inbounds i32, ptr %3, i64 4
  %8 = load i32, ptr %7, align 4, !tbaa !18
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %6
  %11 = sub nsw i32 %1, %5
  %12 = shl i32 %4, 3
  %13 = mul i32 %12, %11
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i16, ptr %0, i64 %14
  %16 = shl nsw i32 %2, 3
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i16, ptr %15, i64 %17
  br label %19

19:                                               ; preds = %10, %6
  %20 = phi ptr [ null, %6 ], [ %18, %10 ]
  %21 = getelementptr inbounds i32, ptr %3, i64 5
  %22 = load i32, ptr %21, align 4, !tbaa !18
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %19
  %25 = mul nsw i32 %4, %1
  %26 = shl nsw i32 %25, 3
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i16, ptr %0, i64 %27
  %29 = sub nsw i32 %2, %5
  %30 = shl nsw i32 %29, 3
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i16, ptr %28, i64 %31
  br label %33

33:                                               ; preds = %24, %19
  %34 = phi ptr [ null, %19 ], [ %32, %24 ]
  %35 = getelementptr inbounds i32, ptr %3, i64 6
  %36 = load i32, ptr %35, align 4, !tbaa !18
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %33
  %39 = add nsw i32 %5, %1
  %40 = shl i32 %4, 3
  %41 = mul i32 %40, %39
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i16, ptr %0, i64 %42
  %44 = shl nsw i32 %2, 3
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i16, ptr %43, i64 %45
  br label %47

47:                                               ; preds = %38, %33
  %48 = phi ptr [ null, %33 ], [ %46, %38 ]
  %49 = getelementptr inbounds i32, ptr %3, i64 7
  %50 = load i32, ptr %49, align 4, !tbaa !18
  %51 = icmp eq i32 %50, 0
  %52 = mul nsw i32 %4, %1
  %53 = shl nsw i32 %52, 3
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i16, ptr %0, i64 %54
  %56 = add nsw i32 %5, %2
  %57 = shl nsw i32 %56, 3
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i16, ptr %55, i64 %58
  %60 = select i1 %51, ptr null, ptr %59
  %61 = getelementptr inbounds i16, ptr %0, i64 %54
  %62 = shl nsw i32 %2, 3
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i16, ptr %61, i64 %63
  %65 = shl nsw i32 %5, 3
  %66 = icmp sgt i32 %5, 0
  br i1 %66, label %67, label %154

67:                                               ; preds = %47
  %68 = add nsw i32 %65, -1
  %69 = mul nsw i32 %68, %4
  %70 = sext i32 %69 to i64
  %71 = zext i32 %68 to i64
  %72 = icmp eq i32 %5, 1
  %73 = sext i32 %4 to i64
  %74 = zext i32 %65 to i64
  %75 = icmp eq ptr %20, null
  %76 = getelementptr inbounds i16, ptr %20, i64 %70
  %77 = icmp eq ptr %34, null
  %78 = getelementptr i16, ptr %34, i64 %71
  %79 = icmp eq ptr %48, null
  %80 = icmp eq ptr %60, null
  br label %81

81:                                               ; preds = %151, %67
  %82 = phi i64 [ 0, %67 ], [ %152, %151 ]
  %83 = phi i64 [ 0, %67 ], [ %86, %151 ]
  %84 = mul nsw i64 %83, %73
  %85 = getelementptr i16, ptr %78, i64 %84
  %86 = add nuw nsw i64 %83, 1
  %87 = getelementptr inbounds i16, ptr %60, i64 %84
  %88 = trunc i64 %83 to i32
  %89 = sub i32 %65, %88
  %90 = trunc i64 %86 to i32
  br label %91

91:                                               ; preds = %145, %81
  %92 = phi i64 [ 0, %81 ], [ %149, %145 ]
  br i1 %75, label %98, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds i16, ptr %76, i64 %92
  %95 = load i16, ptr %94, align 2, !tbaa !40
  %96 = zext i16 %95 to i32
  %97 = mul nsw i32 %89, %96
  br label %98

98:                                               ; preds = %93, %91
  %99 = phi i32 [ %97, %93 ], [ 0, %91 ]
  %100 = phi i32 [ %89, %93 ], [ 0, %91 ]
  br i1 %77, label %109, label %101

101:                                              ; preds = %98
  %102 = load i16, ptr %85, align 2, !tbaa !40
  %103 = zext i16 %102 to i32
  %104 = trunc i64 %92 to i32
  %105 = sub i32 %65, %104
  %106 = mul nsw i32 %105, %103
  %107 = add nsw i32 %106, %99
  %108 = add nsw i32 %100, %105
  br label %109

109:                                              ; preds = %101, %98
  %110 = phi i32 [ %107, %101 ], [ %99, %98 ]
  %111 = phi i32 [ %108, %101 ], [ %100, %98 ]
  br i1 %79, label %119, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds i16, ptr %48, i64 %92
  %114 = load i16, ptr %113, align 2, !tbaa !40
  %115 = zext i16 %114 to i32
  %116 = mul nsw i32 %115, %90
  %117 = add nsw i32 %116, %110
  %118 = add nsw i32 %111, %90
  br label %119

119:                                              ; preds = %112, %109
  %120 = phi i32 [ %117, %112 ], [ %110, %109 ]
  %121 = phi i32 [ %118, %112 ], [ %111, %109 ]
  br i1 %80, label %130, label %122

122:                                              ; preds = %119
  %123 = load i16, ptr %87, align 2, !tbaa !40
  %124 = zext i16 %123 to i32
  %125 = trunc i64 %92 to i32
  %126 = add i32 %125, 1
  %127 = mul nsw i32 %126, %124
  %128 = add nsw i32 %127, %120
  %129 = add nsw i32 %121, %126
  br label %130

130:                                              ; preds = %122, %119
  %131 = phi i32 [ %128, %122 ], [ %120, %119 ]
  %132 = phi i32 [ %129, %122 ], [ %121, %119 ]
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %138

134:                                              ; preds = %130
  %135 = sdiv i32 %131, %132
  %136 = trunc i32 %135 to i16
  %137 = and i16 %136, 255
  br label %145

138:                                              ; preds = %130
  %139 = load ptr, ptr @img, align 8
  %140 = getelementptr inbounds %struct.img_par, ptr %139, i64 0, i32 106
  %141 = getelementptr inbounds %struct.img_par, ptr %139, i64 0, i32 105
  %142 = select i1 %72, ptr %140, ptr %141
  %143 = load i32, ptr %142, align 4, !tbaa !18
  %144 = trunc i32 %143 to i16
  br label %145

145:                                              ; preds = %138, %134
  %146 = phi i16 [ %137, %134 ], [ %144, %138 ]
  %147 = add nsw i64 %92, %82
  %148 = getelementptr inbounds i16, ptr %64, i64 %147
  store i16 %146, ptr %148, align 2, !tbaa !40
  %149 = add nuw nsw i64 %92, 1
  %150 = icmp eq i64 %149, %74
  br i1 %150, label %151, label %91, !llvm.loop !278

151:                                              ; preds = %145
  %152 = add i64 %82, %73
  %153 = icmp eq i64 %86, %74
  br i1 %153, label %154, label %81, !llvm.loop !279

154:                                              ; preds = %151, %47
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @ercConcealInterFrame(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, i32 noundef %5) #0 {
  %7 = alloca [8 x i32], align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #48
  %8 = icmp eq ptr %4, null
  br i1 %8, label %162, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.ercVariables_s, ptr %4, i64 0, i32 10
  %11 = load i32, ptr %10, align 8, !tbaa !250
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %162, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.ercVariables_s, ptr %4, i64 0, i32 9
  %15 = load i32, ptr %14, align 4, !tbaa !265
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %162, label %17

17:                                               ; preds = %13
  %18 = icmp eq i32 %5, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %17
  %20 = load ptr, ptr @img, align 8, !tbaa !13
  %21 = getelementptr inbounds %struct.img_par, ptr %20, i64 0, i32 115
  %22 = load i32, ptr %21, align 4, !tbaa !85
  %23 = getelementptr inbounds %struct.img_par, ptr %20, i64 0, i32 116
  %24 = load i32, ptr %23, align 8, !tbaa !86
  %25 = shl i32 %22, 1
  %26 = mul i32 %25, %24
  %27 = add nsw i32 %26, 256
  %28 = sext i32 %27 to i64
  %29 = shl nsw i64 %28, 1
  %30 = tail call noalias ptr @malloc(i64 noundef %29) #49
  br label %33

31:                                               ; preds = %17
  %32 = tail call noalias dereferenceable_or_null(512) ptr @malloc(i64 noundef 512) #49
  br label %33

33:                                               ; preds = %31, %19
  %34 = phi ptr [ %30, %19 ], [ %32, %31 ]
  %35 = icmp eq ptr %34, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @no_mem_exit(ptr noundef nonnull @.str.26) #46
  br label %37

37:                                               ; preds = %36, %33
  %38 = ashr i32 %3, 4
  %39 = ashr i32 %2, 4
  %40 = icmp sgt i32 %2, 15
  br i1 %40, label %41, label %161

41:                                               ; preds = %37
  %42 = icmp sgt i32 %3, 15
  %43 = getelementptr inbounds %struct.ercVariables_s, ptr %4, i64 0, i32 2
  %44 = lshr i32 %2, 2
  %45 = and i32 %44, 1073741822
  %46 = shl nsw i32 %38, 1
  %47 = shl nsw i32 %39, 1
  %48 = sext i32 %38 to i64
  %49 = tail call i32 @llvm.smax.i32(i32 %39, i32 1)
  br label %50

50:                                               ; preds = %158, %41
  %51 = phi i32 [ 0, %41 ], [ %159, %158 ]
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = lshr i32 %51, 1
  %55 = xor i32 %54, -1
  %56 = add nsw i32 %39, %55
  %57 = select i1 %53, i32 %54, i32 %56
  br i1 %42, label %58, label %158

58:                                               ; preds = %50
  %59 = shl i32 %57, 1
  br label %60

60:                                               ; preds = %154, %58
  %61 = phi i32 [ 0, %58 ], [ %156, %154 ]
  %62 = load ptr, ptr %43, align 8, !tbaa !252
  %63 = mul i32 %45, %61
  %64 = add nsw i32 %63, %59
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i32, ptr %62, i64 %65
  %67 = load i32, ptr %66, align 4, !tbaa !18
  %68 = icmp slt i32 %67, 2
  br i1 %68, label %69, label %154

69:                                               ; preds = %60
  %70 = sext i32 %61 to i64
  br label %71

71:                                               ; preds = %75, %69
  %72 = phi i64 [ %70, %69 ], [ %73, %75 ]
  %73 = add nsw i64 %72, 1
  %74 = icmp slt i64 %73, %48
  br i1 %74, label %75, label %86

75:                                               ; preds = %71
  %76 = trunc i64 %73 to i32
  %77 = mul i32 %45, %76
  %78 = add nsw i32 %77, %59
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i32, ptr %62, i64 %79
  %81 = load i32, ptr %80, align 4, !tbaa !18
  %82 = icmp sgt i32 %81, 1
  br i1 %82, label %83, label %71, !llvm.loop !280

83:                                               ; preds = %75
  %.lcssa1 = phi i64 [ %72, %75 ]
  %84 = trunc i64 %.lcssa1 to i32
  %85 = icmp sgt i32 %38, %84
  br i1 %85, label %103, label %86

86:                                               ; preds = %83, %71
  %87 = icmp slt i32 %61, %38
  br i1 %87, label %88, label %154

88:                                               ; preds = %100, %86
  %89 = phi i32 [ %101, %100 ], [ %61, %86 ]
  %90 = shl i32 %89, 1
  %91 = load ptr, ptr %43, align 8, !tbaa !252
  %92 = call i32 @ercCollect8PredBlocks(ptr noundef nonnull %7, i32 noundef %90, i32 noundef %59, ptr noundef %91, i32 noundef %46, i32 noundef %47, i32 noundef 2, i8 noundef zeroext 0) #46
  %93 = load i32, ptr @erc_mvperMB, align 4, !tbaa !18
  %94 = icmp sgt i32 %93, 7
  %95 = mul nsw i32 %89, %39
  %96 = add nsw i32 %95, %57
  br i1 %94, label %97, label %99

97:                                               ; preds = %88
  %98 = load ptr, ptr %43, align 8, !tbaa !252
  call fastcc void @concealByTrial(ptr noundef %0, ptr noundef %34, i32 noundef %96, ptr noundef %1, ptr noundef nonnull %7, i32 noundef %2, ptr noundef %98) #47
  br label %100

99:                                               ; preds = %88
  call fastcc void @concealByCopy(ptr noundef %0, i32 noundef %96, ptr noundef %1, i32 noundef %2) #47
  br label %100

100:                                              ; preds = %99, %97
  call void @ercMarkCurrMBConcealed(i32 noundef %96, i32 noundef -1, i32 noundef %2, ptr noundef nonnull %4) #46
  %101 = add i32 %89, 1
  %102 = icmp eq i32 %101, %38
  br i1 %102, label %154, label %88, !llvm.loop !281

103:                                              ; preds = %83
  %104 = icmp eq i32 %61, 0
  br i1 %104, label %105, label %124

105:                                              ; preds = %103
  %106 = icmp sgt i32 %84, -1
  br i1 %106, label %107, label %122

107:                                              ; preds = %119, %105
  %108 = phi i32 [ %120, %119 ], [ %84, %105 ]
  %109 = shl nuw i32 %108, 1
  %110 = load ptr, ptr %43, align 8, !tbaa !252
  %111 = call i32 @ercCollect8PredBlocks(ptr noundef nonnull %7, i32 noundef %109, i32 noundef %59, ptr noundef %110, i32 noundef %46, i32 noundef %47, i32 noundef 2, i8 noundef zeroext 0) #46
  %112 = load i32, ptr @erc_mvperMB, align 4, !tbaa !18
  %113 = icmp sgt i32 %112, 7
  %114 = mul nsw i32 %108, %39
  %115 = add nsw i32 %114, %57
  br i1 %113, label %116, label %118

116:                                              ; preds = %107
  %117 = load ptr, ptr %43, align 8, !tbaa !252
  call fastcc void @concealByTrial(ptr noundef %0, ptr noundef %34, i32 noundef %115, ptr noundef %1, ptr noundef nonnull %7, i32 noundef %2, ptr noundef %117) #47
  br label %119

118:                                              ; preds = %107
  call fastcc void @concealByCopy(ptr noundef %0, i32 noundef %115, ptr noundef %1, i32 noundef %2) #47
  br label %119

119:                                              ; preds = %118, %116
  call void @ercMarkCurrMBConcealed(i32 noundef %115, i32 noundef -1, i32 noundef %2, ptr noundef nonnull %4) #46
  %120 = add nsw i32 %108, -1
  %121 = icmp sgt i32 %108, 0
  br i1 %121, label %107, label %122, !llvm.loop !282

122:                                              ; preds = %119, %105
  %123 = add nsw i32 %84, 1
  br label %154

124:                                              ; preds = %103
  %125 = add nsw i32 %84, 1
  %126 = icmp sgt i32 %61, %84
  br i1 %126, label %154, label %127

127:                                              ; preds = %124
  %128 = sub i32 %125, %61
  br label %129

129:                                              ; preds = %151, %127
  %130 = phi i32 [ %152, %151 ], [ 0, %127 ]
  %131 = phi i32 [ %139, %151 ], [ %61, %127 ]
  %132 = phi i32 [ %136, %151 ], [ %84, %127 ]
  %133 = and i32 %130, 1
  %134 = icmp ne i32 %133, 0
  %135 = sext i1 %134 to i32
  %136 = add nsw i32 %132, %135
  %137 = xor i1 %134, true
  %138 = zext i1 %137 to i32
  %139 = add nsw i32 %131, %138
  %140 = select i1 %134, i32 %132, i32 %131
  %141 = shl i32 %140, 1
  %142 = load ptr, ptr %43, align 8, !tbaa !252
  %143 = call i32 @ercCollect8PredBlocks(ptr noundef nonnull %7, i32 noundef %141, i32 noundef %59, ptr noundef %142, i32 noundef %46, i32 noundef %47, i32 noundef 2, i8 noundef zeroext 0) #46
  %144 = load i32, ptr @erc_mvperMB, align 4, !tbaa !18
  %145 = icmp sgt i32 %144, 7
  %146 = mul nsw i32 %140, %39
  %147 = add nsw i32 %146, %57
  br i1 %145, label %148, label %150

148:                                              ; preds = %129
  %149 = load ptr, ptr %43, align 8, !tbaa !252
  call fastcc void @concealByTrial(ptr noundef %0, ptr noundef %34, i32 noundef %147, ptr noundef %1, ptr noundef nonnull %7, i32 noundef %2, ptr noundef %149) #47
  br label %151

150:                                              ; preds = %129
  call fastcc void @concealByCopy(ptr noundef %0, i32 noundef %147, ptr noundef %1, i32 noundef %2) #47
  br label %151

151:                                              ; preds = %150, %148
  call void @ercMarkCurrMBConcealed(i32 noundef %147, i32 noundef -1, i32 noundef %2, ptr noundef nonnull %4) #46
  %152 = add nuw i32 %130, 1
  %153 = icmp eq i32 %152, %128
  br i1 %153, label %154, label %129, !llvm.loop !283

154:                                              ; preds = %151, %124, %122, %100, %86, %60
  %155 = phi i32 [ %61, %60 ], [ %123, %122 ], [ %125, %124 ], [ %38, %86 ], [ %125, %151 ], [ %38, %100 ]
  %156 = add nsw i32 %155, 1
  %157 = icmp slt i32 %156, %38
  br i1 %157, label %60, label %158, !llvm.loop !284

158:                                              ; preds = %154, %50
  %159 = add nuw nsw i32 %51, 1
  %160 = icmp eq i32 %159, %49
  br i1 %160, label %161, label %50, !llvm.loop !285

161:                                              ; preds = %158, %37
  call void @free(ptr noundef %34) #46
  br label %162

162:                                              ; preds = %161, %13, %9, %6
  %163 = phi i32 [ 1, %161 ], [ 1, %13 ], [ 0, %9 ], [ 0, %6 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #48
  ret i32 %163
}

; Function Attrs: nounwind optsize uwtable
define internal fastcc void @concealByTrial(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, i32 noundef %2, ptr nocapture noundef %3, ptr nocapture noundef readonly %4, i32 noundef %5, ptr nocapture noundef writeonly %6) unnamed_addr #0 {
  %8 = alloca [3 x i32], align 4
  %9 = alloca [3 x i32], align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %9) #48
  %10 = ashr i32 %5, 4
  %11 = shl i32 %2, 2
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.objectBuffer_t, ptr %3, i64 %12
  %14 = sdiv i32 %2, %10
  %15 = ashr i32 %5, 3
  %16 = shl nsw i32 %15, 1
  %17 = mul i32 %16, %14
  %18 = srem i32 %2, %10
  %19 = shl nsw i32 %18, 1
  %20 = add nsw i32 %17, %19
  %21 = srem i32 %20, %15
  %22 = shl nsw i32 %21, 3
  %23 = getelementptr inbounds %struct.objectBuffer_t, ptr %3, i64 %12, i32 1
  store i32 %22, ptr %23, align 4, !tbaa !286
  %24 = sdiv i32 %20, %15
  %25 = shl i32 %24, 3
  %26 = getelementptr inbounds %struct.objectBuffer_t, ptr %3, i64 %12, i32 2
  store i32 %25, ptr %26, align 4, !tbaa !288
  %27 = add nsw i32 %2, 1
  %28 = add nsw i32 %10, %2
  %29 = add nsw i32 %2, -1
  %30 = sub nsw i32 %2, %10
  %31 = getelementptr inbounds [3 x i32], ptr %9, i64 0, i64 1
  %32 = getelementptr inbounds [3 x i32], ptr %9, i64 0, i64 2
  br label %33

33:                                               ; preds = %145, %7
  %34 = phi i32 [ 3, %7 ], [ 2, %145 ]
  %35 = phi i32 [ 0, %7 ], [ %.lcssa2, %145 ]
  %36 = phi i32 [ 0, %7 ], [ %.lcssa1, %145 ]
  %37 = phi i32 [ 0, %7 ], [ %.lcssa, %145 ]
  br label %38

38:                                               ; preds = %136, %33
  %39 = phi i64 [ 4, %33 ], [ %143, %136 ]
  %40 = phi i32 [ %37, %33 ], [ %142, %136 ]
  %41 = phi i32 [ %36, %33 ], [ %141, %136 ]
  %42 = phi i32 [ %35, %33 ], [ %140, %136 ]
  %43 = phi i32 [ 0, %33 ], [ %139, %136 ]
  %44 = phi i32 [ 0, %33 ], [ %138, %136 ]
  %45 = phi i32 [ 0, %33 ], [ %137, %136 ]
  %46 = getelementptr inbounds i32, ptr %4, i64 %39
  %47 = load i32, ptr %46, align 4, !tbaa !18
  %48 = icmp slt i32 %47, %34
  br i1 %48, label %136, label %49

49:                                               ; preds = %38
  %50 = trunc i64 %39 to i32
  switch i32 %50, label %55 [
    i32 4, label %51
    i32 5, label %52
    i32 6, label %53
    i32 7, label %54
  ]

51:                                               ; preds = %49
  br label %55

52:                                               ; preds = %49
  br label %55

53:                                               ; preds = %49
  br label %55

54:                                               ; preds = %49
  br label %55

55:                                               ; preds = %54, %53, %52, %51, %49
  %56 = phi i32 [ %42, %49 ], [ 2, %54 ], [ 1, %53 ], [ 3, %52 ], [ 3, %51 ]
  %57 = phi i32 [ %41, %49 ], [ 0, %54 ], [ 0, %53 ], [ 1, %52 ], [ 2, %51 ]
  %58 = phi i32 [ %40, %49 ], [ %27, %54 ], [ %28, %53 ], [ %29, %52 ], [ %30, %51 ]
  %59 = shl i32 %58, 2
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds %struct.objectBuffer_t, ptr %3, i64 %60
  %62 = load i8, ptr %61, align 4, !tbaa !289
  %63 = icmp ugt i8 %62, 2
  br i1 %63, label %64, label %69

64:                                               ; preds = %55
  %65 = zext i32 %57 to i64
  %66 = getelementptr inbounds %struct.objectBuffer_t, ptr %61, i64 %65
  %67 = load i8, ptr %66, align 4, !tbaa !289
  %68 = icmp eq i8 %67, 6
  br i1 %68, label %136, label %71

69:                                               ; preds = %55
  %70 = icmp eq i8 %62, 2
  br i1 %70, label %136, label %76

71:                                               ; preds = %64
  %72 = zext i32 %56 to i64
  %73 = getelementptr inbounds %struct.objectBuffer_t, ptr %61, i64 %72
  %74 = load i8, ptr %73, align 4, !tbaa !289
  %75 = icmp eq i8 %74, 6
  br i1 %75, label %136, label %76

76:                                               ; preds = %71, %69
  %77 = zext i1 %63 to i32
  %78 = getelementptr inbounds %struct.objectBuffer_t, ptr %3, i64 %60, i32 3
  %79 = icmp eq i32 %57, %56
  %80 = select i1 %79, i32 -2, i32 -1
  br label %81

81:                                               ; preds = %130, %76
  %82 = phi i32 [ %43, %76 ], [ %133, %130 ]
  %83 = phi i32 [ %77, %76 ], [ %134, %130 ]
  %84 = phi i32 [ %44, %76 ], [ %132, %130 ]
  %85 = phi i32 [ %45, %76 ], [ %131, %130 ]
  %86 = phi i32 [ %57, %76 ], [ %56, %130 ]
  %87 = load i8, ptr %61, align 4, !tbaa !289
  %88 = icmp ugt i8 %87, 2
  br i1 %88, label %89, label %93

89:                                               ; preds = %81
  %90 = zext i32 %86 to i64
  %91 = getelementptr inbounds %struct.objectBuffer_t, ptr %61, i64 %90
  %92 = load i8, ptr %91, align 4, !tbaa !289
  switch i8 %92, label %99 [
    i8 4, label %96
    i8 6, label %130
  ]

93:                                               ; preds = %81
  switch i8 %87, label %94 [
    i8 0, label %96
    i8 2, label %130
  ]

94:                                               ; preds = %93
  %95 = zext i32 %86 to i64
  br label %99

96:                                               ; preds = %93, %89
  %97 = icmp eq i32 %84, 0
  br i1 %97, label %98, label %130

98:                                               ; preds = %96
  store i32 0, ptr %31, align 4, !tbaa !18
  store i32 0, ptr %9, align 8, !tbaa !18
  br label %106

99:                                               ; preds = %94, %89
  %100 = phi i64 [ %95, %94 ], [ %90, %89 ]
  %101 = getelementptr inbounds %struct.objectBuffer_t, ptr %61, i64 %100, i32 3
  %102 = select i1 %88, ptr %101, ptr %78
  %103 = load <2 x i32>, ptr %102, align 4, !tbaa !18
  store <2 x i32> %103, ptr %9, align 8, !tbaa !18
  %104 = getelementptr inbounds i32, ptr %102, i64 2
  %105 = load i32, ptr %104, align 4, !tbaa !18
  br label %106

106:                                              ; preds = %99, %98
  %107 = phi i32 [ %105, %99 ], [ 0, %98 ]
  %108 = phi i32 [ %84, %99 ], [ 1, %98 ]
  store i32 %107, ptr %32, align 8, !tbaa !18
  %109 = load ptr, ptr @erc_img, align 8, !tbaa !13
  %110 = load i32, ptr %23, align 4, !tbaa !286
  %111 = load i32, ptr %26, align 4, !tbaa !288
  call fastcc void @buildPredRegionYUV(ptr noundef %109, ptr noundef nonnull %9, i32 noundef %110, i32 noundef %111, ptr noundef %1) #47
  %112 = load ptr, ptr %0, align 8, !tbaa !270
  %113 = tail call fastcc i32 @edgeDistortion(ptr noundef %4, i32 noundef %20, ptr noundef %1, ptr noundef %112, i32 noundef %5) #47
  %114 = icmp sge i32 %113, %82
  %115 = icmp ne i32 %85, 0
  %116 = select i1 %114, i1 %115, i1 false
  br i1 %116, label %130, label %117

117:                                              ; preds = %106
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %8, ptr noundef nonnull align 8 dereferenceable(12) %9, i64 12, i1 false), !tbaa !18
  %118 = load i8, ptr %61, align 4, !tbaa !289
  %119 = icmp ugt i8 %118, 2
  br i1 %119, label %120, label %125

120:                                              ; preds = %117
  %121 = zext i32 %86 to i64
  %122 = getelementptr inbounds %struct.objectBuffer_t, ptr %61, i64 %121
  %123 = load i8, ptr %122, align 4, !tbaa !289
  %124 = icmp eq i8 %123, 4
  br i1 %124, label %128, label %127

125:                                              ; preds = %117
  %126 = icmp eq i8 %118, 0
  br i1 %126, label %128, label %127

127:                                              ; preds = %125, %120
  br label %128

128:                                              ; preds = %127, %125, %120
  %129 = phi i8 [ 1, %127 ], [ 0, %125 ], [ 0, %120 ]
  store i8 %129, ptr %13, align 4, !tbaa !289
  tail call fastcc void @copyPredMB(i32 noundef %20, ptr noundef %1, i32 noundef %5) #47
  br label %130

130:                                              ; preds = %128, %106, %96, %93, %89
  %131 = phi i32 [ %85, %96 ], [ 1, %106 ], [ 1, %128 ], [ %85, %93 ], [ %85, %89 ]
  %132 = phi i32 [ 1, %96 ], [ %108, %106 ], [ %108, %128 ], [ %84, %93 ], [ %84, %89 ]
  %133 = phi i32 [ %82, %96 ], [ %82, %106 ], [ %113, %128 ], [ %82, %93 ], [ %82, %89 ]
  %134 = add nsw i32 %83, %80
  %135 = icmp sgt i32 %134, -1
  br i1 %135, label %81, label %136, !llvm.loop !290

136:                                              ; preds = %130, %71, %69, %64, %38
  %137 = phi i32 [ %45, %38 ], [ %45, %71 ], [ %45, %69 ], [ %45, %64 ], [ %131, %130 ]
  %138 = phi i32 [ %44, %38 ], [ %44, %71 ], [ %44, %69 ], [ %44, %64 ], [ %132, %130 ]
  %139 = phi i32 [ %43, %38 ], [ %43, %71 ], [ %43, %69 ], [ %43, %64 ], [ %133, %130 ]
  %140 = phi i32 [ %42, %38 ], [ %56, %71 ], [ %56, %69 ], [ %56, %64 ], [ %56, %130 ]
  %141 = phi i32 [ %41, %38 ], [ %57, %71 ], [ %57, %69 ], [ %57, %64 ], [ %57, %130 ]
  %142 = phi i32 [ %40, %38 ], [ %58, %71 ], [ %58, %69 ], [ %58, %64 ], [ %58, %130 ]
  %143 = add nuw nsw i64 %39, 1
  %144 = icmp eq i64 %143, 8
  br i1 %144, label %145, label %38, !llvm.loop !291

145:                                              ; preds = %136
  %.lcssa5 = phi i32 [ %137, %136 ]
  %.lcssa4 = phi i32 [ %138, %136 ]
  %.lcssa3 = phi i32 [ %139, %136 ]
  %.lcssa2 = phi i32 [ %140, %136 ]
  %.lcssa1 = phi i32 [ %141, %136 ]
  %.lcssa = phi i32 [ %142, %136 ]
  %146 = add nsw i32 %34, -3
  %147 = icmp ult i32 %146, -2
  %148 = icmp eq i32 %.lcssa5, 0
  %149 = select i1 %147, i1 %148, i1 false
  br i1 %149, label %33, label %150, !llvm.loop !292

150:                                              ; preds = %145
  %.lcssa5.lcssa = phi i32 [ %.lcssa5, %145 ]
  %.lcssa4.lcssa = phi i32 [ %.lcssa4, %145 ]
  %.lcssa3.lcssa = phi i32 [ %.lcssa3, %145 ]
  %151 = icmp eq i32 %.lcssa4.lcssa, 0
  br i1 %151, label %152, label %162

152:                                              ; preds = %150
  store i32 0, ptr %31, align 4, !tbaa !18
  store i32 0, ptr %9, align 8, !tbaa !18
  store i32 0, ptr %32, align 8, !tbaa !18
  %153 = load ptr, ptr @erc_img, align 8, !tbaa !13
  %154 = load i32, ptr %23, align 4, !tbaa !286
  %155 = load i32, ptr %26, align 4, !tbaa !288
  call fastcc void @buildPredRegionYUV(ptr noundef %153, ptr noundef nonnull %9, i32 noundef %154, i32 noundef %155, ptr noundef %1) #47
  %156 = load ptr, ptr %0, align 8, !tbaa !270
  %157 = tail call fastcc i32 @edgeDistortion(ptr noundef %4, i32 noundef %20, ptr noundef %1, ptr noundef %156, i32 noundef %5) #47
  %158 = icmp sge i32 %157, %.lcssa3.lcssa
  %159 = icmp ne i32 %.lcssa5.lcssa, 0
  %160 = select i1 %158, i1 %159, i1 false
  br i1 %160, label %162, label %161

161:                                              ; preds = %152
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %8, ptr noundef nonnull align 8 dereferenceable(12) %9, i64 12, i1 false), !tbaa !18
  store i8 0, ptr %13, align 4, !tbaa !289
  tail call fastcc void @copyPredMB(i32 noundef %20, ptr noundef %1, i32 noundef %5) #47
  br label %162

162:                                              ; preds = %161, %152, %150
  %163 = mul nsw i64 %12, 24
  %164 = or i64 %163, 12
  %165 = getelementptr i8, ptr %3, i64 %164
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %165, ptr noundef nonnull align 4 dereferenceable(12) %8, i64 12, i1 false), !tbaa !18
  %166 = sext i32 %20 to i64
  %167 = getelementptr inbounds i32, ptr %6, i64 %166
  store i32 2, ptr %167, align 4, !tbaa !18
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %9) #48
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8)
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @concealByCopy(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef writeonly %2, i32 noundef %3) unnamed_addr #9 {
  %5 = shl i32 %1, 2
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.objectBuffer_t, ptr %2, i64 %6
  store i8 0, ptr %7, align 4, !tbaa !289
  %8 = ashr i32 %3, 4
  %9 = srem i32 %1, %8
  %10 = shl nsw i32 %9, 4
  %11 = getelementptr inbounds %struct.objectBuffer_t, ptr %2, i64 %6, i32 1
  store i32 %10, ptr %11, align 4, !tbaa !286
  %12 = sdiv i32 %1, %8
  %13 = shl i32 %12, 4
  %14 = getelementptr inbounds %struct.objectBuffer_t, ptr %2, i64 %6, i32 2
  store i32 %13, ptr %14, align 4, !tbaa !288
  %15 = ashr i32 %3, 3
  %16 = shl nsw i32 %15, 1
  %17 = mul i32 %16, %12
  %18 = shl nsw i32 %9, 1
  %19 = add nsw i32 %17, %18
  %20 = load ptr, ptr @listX, align 16, !tbaa !13
  %21 = load ptr, ptr %20, align 8, !tbaa !13
  %22 = srem i32 %19, %15
  %23 = shl nsw i32 %22, 3
  %24 = sdiv i32 %19, %15
  %25 = shl i32 %24, 3
  %26 = add nsw i32 %25, 16
  %27 = getelementptr inbounds %struct.storable_picture, ptr %21, i64 0, i32 32
  %28 = load ptr, ptr %27, align 8, !tbaa !47
  %29 = load ptr, ptr %0, align 8, !tbaa !270
  %30 = sext i32 %23 to i64
  %31 = sext i32 %25 to i64
  %32 = sext i32 %3 to i64
  %33 = sext i32 %26 to i64
  %34 = add nsw i64 %30, 15
  br label %35

35:                                               ; preds = %48, %4
  %36 = phi i64 [ %31, %4 ], [ %49, %48 ]
  %37 = mul nsw i64 %36, %32
  %38 = getelementptr inbounds ptr, ptr %28, i64 %36
  %39 = load ptr, ptr %38, align 8, !tbaa !13
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi i64 [ %30, %35 ], [ %46, %40 ]
  %42 = add nsw i64 %41, %37
  %43 = getelementptr inbounds i16, ptr %39, i64 %41
  %44 = load i16, ptr %43, align 2, !tbaa !40
  %45 = getelementptr inbounds i16, ptr %29, i64 %42
  store i16 %44, ptr %45, align 2, !tbaa !40
  %46 = add nsw i64 %41, 1
  %47 = icmp eq i64 %41, %34
  br i1 %47, label %48, label %40, !llvm.loop !293

48:                                               ; preds = %40
  %49 = add nsw i64 %36, 1
  %50 = icmp slt i64 %49, %33
  br i1 %50, label %35, label %51, !llvm.loop !294

51:                                               ; preds = %48
  %52 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %53 = getelementptr inbounds %struct.storable_picture, ptr %52, i64 0, i32 50
  %54 = load i32, ptr %53, align 4, !tbaa !83
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [2 x [4 x i32]], ptr @uv_div, i64 0, i64 1, i64 %55
  %57 = load i32, ptr %56, align 4, !tbaa !18
  %58 = ashr i32 %25, %57
  %59 = ashr i32 %26, %57
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %106

61:                                               ; preds = %51
  %62 = getelementptr inbounds [4 x i32], ptr @uv_div, i64 0, i64 %55
  %63 = load i32, ptr %62, align 4, !tbaa !18
  %64 = ashr i32 %23, %63
  %65 = add nsw i32 %23, 16
  %66 = ashr i32 %65, %63
  %67 = icmp slt i32 %64, %66
  %68 = getelementptr inbounds %struct.storable_picture, ptr %21, i64 0, i32 33
  %69 = getelementptr inbounds %struct.frame.16, ptr %0, i64 0, i32 1
  %70 = getelementptr inbounds %struct.frame.16, ptr %0, i64 0, i32 2
  %71 = sext i32 %64 to i64
  %72 = sext i32 %58 to i64
  %73 = sext i32 %59 to i64
  %74 = sext i32 %66 to i64
  br label %75

75:                                               ; preds = %103, %61
  %76 = phi i64 [ %72, %61 ], [ %104, %103 ]
  br i1 %67, label %77, label %103

77:                                               ; preds = %75
  %78 = trunc i64 %76 to i32
  %79 = mul i32 %78, %3
  %80 = ashr i32 %79, %63
  %81 = load ptr, ptr %68, align 8, !tbaa !82
  %82 = load ptr, ptr %81, align 8, !tbaa !13
  %83 = getelementptr inbounds ptr, ptr %82, i64 %76
  %84 = load ptr, ptr %83, align 8, !tbaa !13
  %85 = load ptr, ptr %69, align 8, !tbaa !295
  %86 = getelementptr inbounds ptr, ptr %81, i64 1
  %87 = load ptr, ptr %86, align 8, !tbaa !13
  %88 = getelementptr inbounds ptr, ptr %87, i64 %76
  %89 = load ptr, ptr %88, align 8, !tbaa !13
  %90 = load ptr, ptr %70, align 8, !tbaa !296
  %91 = sext i32 %80 to i64
  br label %92

92:                                               ; preds = %92, %77
  %93 = phi i64 [ %71, %77 ], [ %101, %92 ]
  %94 = add nsw i64 %93, %91
  %95 = getelementptr inbounds i16, ptr %84, i64 %93
  %96 = load i16, ptr %95, align 2, !tbaa !40
  %97 = getelementptr inbounds i16, ptr %85, i64 %94
  store i16 %96, ptr %97, align 2, !tbaa !40
  %98 = getelementptr inbounds i16, ptr %89, i64 %93
  %99 = load i16, ptr %98, align 2, !tbaa !40
  %100 = getelementptr inbounds i16, ptr %90, i64 %94
  store i16 %99, ptr %100, align 2, !tbaa !40
  %101 = add nsw i64 %93, 1
  %102 = icmp eq i64 %101, %74
  br i1 %102, label %103, label %92, !llvm.loop !297

103:                                              ; preds = %92, %75
  %104 = add nsw i64 %76, 1
  %105 = icmp eq i64 %104, %73
  br i1 %105, label %106, label %75, !llvm.loop !298

106:                                              ; preds = %103, %51
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal fastcc void @buildPredRegionYUV(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, ptr nocapture noundef writeonly %4) unnamed_addr #0 {
  %6 = alloca [4 x [4 x i32]], align 16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %6) #48
  %7 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.storable_picture, ptr %7, i64 0, i32 50
  %9 = load i32, ptr %8, align 4, !tbaa !83
  %10 = getelementptr inbounds i32, ptr %1, i64 2
  %11 = load i32, ptr %10, align 4, !tbaa !18
  %12 = tail call i32 @llvm.smax.i32(i32 %11, i32 0)
  %13 = sdiv i32 %2, 16
  %14 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 17
  store i32 %13, ptr %14, align 8, !tbaa !299
  %15 = sdiv i32 %3, 16
  %16 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 16
  store i32 %15, ptr %16, align 4, !tbaa !300
  %17 = shl nsw i32 %15, 2
  %18 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  store i32 %17, ptr %18, align 4, !tbaa !301
  %19 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 116
  %20 = load i32, ptr %19, align 8, !tbaa !86
  %21 = mul nsw i32 %20, %15
  %22 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 21
  store i32 %21, ptr %22, align 8, !tbaa !302
  %23 = shl nsw i32 %13, 2
  %24 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  store i32 %23, ptr %24, align 4, !tbaa !303
  %25 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 115
  %26 = load i32, ptr %25, align 4, !tbaa !85
  %27 = mul nsw i32 %26, %13
  %28 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 23
  store i32 %27, ptr %28, align 8, !tbaa !304
  %29 = getelementptr inbounds i32, ptr %1, i64 1
  br label %30

30:                                               ; preds = %67, %5
  %31 = phi i64 [ 0, %5 ], [ %68, %67 ]
  %32 = shl nuw nsw i64 %31, 2
  %33 = load i32, ptr %18, align 4, !tbaa !301
  %34 = trunc i64 %31 to i32
  %35 = add nsw i32 %33, %34
  %36 = shl nsw i32 %35, 4
  br label %37

37:                                               ; preds = %64, %30
  %38 = phi i64 [ 0, %30 ], [ %65, %64 ]
  %39 = shl nuw nsw i64 %38, 2
  %40 = load i32, ptr %24, align 4, !tbaa !303
  %41 = trunc i64 %38 to i32
  %42 = add nsw i32 %40, %41
  %43 = shl nsw i32 %42, 4
  %44 = load i32, ptr %1, align 4, !tbaa !18
  %45 = add nsw i32 %43, %44
  %46 = load i32, ptr %29, align 4, !tbaa !18
  %47 = add nsw i32 %46, %36
  %48 = load ptr, ptr @listX, align 16, !tbaa !13
  call void @get_block(i32 noundef %12, ptr noundef %48, i32 noundef %45, i32 noundef %47, ptr noundef nonnull %0, ptr noundef nonnull %6) #46
  br label %49

49:                                               ; preds = %61, %37
  %50 = phi i64 [ 0, %37 ], [ %62, %61 ]
  %51 = add nuw nsw i64 %50, %39
  br label %52

52:                                               ; preds = %52, %49
  %53 = phi i64 [ 0, %49 ], [ %59, %52 ]
  %54 = getelementptr inbounds [4 x [4 x i32]], ptr %6, i64 0, i64 %53, i64 %50
  %55 = load i32, ptr %54, align 4, !tbaa !18
  %56 = trunc i32 %55 to i16
  %57 = add nuw nsw i64 %53, %32
  %58 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %57, i64 %51
  store i16 %56, ptr %58, align 2, !tbaa !40
  %59 = add nuw nsw i64 %53, 1
  %60 = icmp eq i64 %59, 4
  br i1 %60, label %61, label %52, !llvm.loop !305

61:                                               ; preds = %52
  %62 = add nuw nsw i64 %50, 1
  %63 = icmp eq i64 %62, 4
  br i1 %63, label %64, label %49, !llvm.loop !306

64:                                               ; preds = %61
  %65 = add nuw nsw i64 %38, 1
  %66 = icmp eq i64 %65, 4
  br i1 %66, label %67, label %37, !llvm.loop !307

67:                                               ; preds = %64
  %68 = add nuw nsw i64 %31, 1
  %69 = icmp eq i64 %68, 4
  br i1 %69, label %70, label %30, !llvm.loop !308

70:                                               ; preds = %81, %67
  %71 = phi i64 [ %82, %81 ], [ 0, %67 ]
  %72 = shl nsw i64 %71, 4
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi i64 [ 0, %70 ], [ %79, %73 ]
  %75 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %71, i64 %74
  %76 = load i16, ptr %75, align 2, !tbaa !40
  %77 = add nuw nsw i64 %74, %72
  %78 = getelementptr inbounds i16, ptr %4, i64 %77
  store i16 %76, ptr %78, align 2, !tbaa !40
  %79 = add nuw nsw i64 %74, 1
  %80 = icmp eq i64 %79, 16
  br i1 %80, label %81, label %73, !llvm.loop !309

81:                                               ; preds = %73
  %82 = add nuw nsw i64 %71, 1
  %83 = icmp eq i64 %82, 16
  br i1 %83, label %84, label %70, !llvm.loop !310

84:                                               ; preds = %81
  %85 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %86 = getelementptr inbounds %struct.storable_picture, ptr %85, i64 0, i32 50
  %87 = load i32, ptr %86, align 4, !tbaa !83
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %236, label %89

89:                                               ; preds = %84
  %90 = add nsw i32 %9, -1
  %91 = getelementptr inbounds i16, ptr %4, i64 256
  %92 = load i32, ptr %25, align 4, !tbaa !85
  %93 = sdiv i32 64, %92
  %94 = add nsw i32 %93, -1
  %95 = load i32, ptr %19, align 8, !tbaa !86
  %96 = sdiv i32 64, %95
  %97 = add nsw i32 %96, -1
  %98 = mul nsw i32 %96, %93
  %99 = ashr i32 %98, 1
  %100 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 113
  %101 = load i32, ptr %100, align 4, !tbaa !93
  %102 = sdiv i32 %101, 2
  %103 = icmp sgt i32 %101, 1
  %104 = sext i32 %90 to i64
  %105 = getelementptr inbounds %struct.storable_picture, ptr %85, i64 0, i32 21
  %106 = getelementptr inbounds %struct.storable_picture, ptr %85, i64 0, i32 22
  %107 = load ptr, ptr @listX, align 16
  %108 = zext i32 %12 to i64
  %109 = getelementptr inbounds ptr, ptr %107, i64 %108
  %110 = zext i32 %102 to i64
  br label %111

111:                                              ; preds = %234, %89
  %112 = phi i1 [ true, %89 ], [ false, %234 ]
  %113 = phi i64 [ 0, %89 ], [ 1, %234 ]
  %114 = phi ptr [ %91, %89 ], [ %235, %234 ]
  br i1 %103, label %115, label %219

115:                                              ; preds = %111
  %116 = load i32, ptr %22, align 8, !tbaa !302
  %117 = load i32, ptr %28, align 8, !tbaa !304
  %118 = load i32, ptr %1, align 4, !tbaa !18
  %119 = load i32, ptr %29, align 4, !tbaa !18
  %120 = load i32, ptr %105, align 8, !tbaa !311
  %121 = add nsw i32 %120, -1
  %122 = load i32, ptr %106, align 4, !tbaa !312
  %123 = add nsw i32 %122, -1
  %124 = load ptr, ptr %109, align 8, !tbaa !13
  %125 = getelementptr inbounds %struct.storable_picture, ptr %124, i64 0, i32 33
  %126 = load ptr, ptr %125, align 8, !tbaa !82
  %127 = getelementptr inbounds ptr, ptr %126, i64 %113
  %128 = load ptr, ptr %127, align 8, !tbaa !13
  br label %129

129:                                              ; preds = %216, %115
  %130 = phi i64 [ 0, %115 ], [ %217, %216 ]
  br label %131

131:                                              ; preds = %213, %129
  %132 = phi i64 [ 0, %129 ], [ %214, %213 ]
  %133 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %104, i64 %130, i64 %132
  %134 = load i8, ptr %133, align 1, !tbaa !14
  %135 = zext i8 %134 to i32
  %136 = add nsw i32 %116, %135
  %137 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %104, i64 %130, i64 %132
  %138 = load i8, ptr %137, align 1, !tbaa !14
  %139 = zext i8 %138 to i32
  %140 = add nsw i32 %117, %139
  %141 = zext i8 %138 to i64
  %142 = zext i8 %134 to i64
  br label %143

143:                                              ; preds = %210, %131
  %144 = phi i64 [ 0, %131 ], [ %211, %210 ]
  %145 = trunc i64 %144 to i32
  %146 = add nsw i32 %136, %145
  %147 = mul nsw i32 %146, %96
  %148 = add nsw i32 %119, %147
  %149 = sdiv i32 %148, %96
  %150 = call i32 @llvm.smax.i32(i32 %149, i32 0)
  %151 = call i32 @llvm.smin.i32(i32 %150, i32 %123)
  %152 = add nsw i32 %148, %97
  %153 = sdiv i32 %152, %96
  %154 = call i32 @llvm.smax.i32(i32 %153, i32 0)
  %155 = call i32 @llvm.smin.i32(i32 %154, i32 %123)
  %156 = and i32 %148, %97
  %157 = sub nsw i32 %96, %156
  %158 = sext i32 %151 to i64
  %159 = getelementptr inbounds ptr, ptr %128, i64 %158
  %160 = load ptr, ptr %159, align 8, !tbaa !13
  %161 = sext i32 %155 to i64
  %162 = getelementptr inbounds ptr, ptr %128, i64 %161
  %163 = load ptr, ptr %162, align 8, !tbaa !13
  %164 = add nuw nsw i64 %144, %142
  br label %165

165:                                              ; preds = %165, %143
  %166 = phi i64 [ 0, %143 ], [ %208, %165 ]
  %167 = trunc i64 %166 to i32
  %168 = add nsw i32 %140, %167
  %169 = mul nsw i32 %168, %93
  %170 = add nsw i32 %118, %169
  %171 = sdiv i32 %170, %93
  %172 = call i32 @llvm.smax.i32(i32 %171, i32 0)
  %173 = call i32 @llvm.smin.i32(i32 %172, i32 %121)
  %174 = add nsw i32 %170, %94
  %175 = sdiv i32 %174, %93
  %176 = call i32 @llvm.smax.i32(i32 %175, i32 0)
  %177 = call i32 @llvm.smin.i32(i32 %176, i32 %121)
  %178 = and i32 %170, %94
  %179 = sub nsw i32 %93, %178
  %180 = sext i32 %173 to i64
  %181 = getelementptr inbounds i16, ptr %160, i64 %180
  %182 = load i16, ptr %181, align 2, !tbaa !40
  %183 = zext i16 %182 to i32
  %184 = mul i32 %179, %183
  %185 = sext i32 %177 to i64
  %186 = getelementptr inbounds i16, ptr %160, i64 %185
  %187 = load i16, ptr %186, align 2, !tbaa !40
  %188 = zext i16 %187 to i32
  %189 = mul i32 %178, %188
  %190 = getelementptr inbounds i16, ptr %163, i64 %180
  %191 = load i16, ptr %190, align 2, !tbaa !40
  %192 = zext i16 %191 to i32
  %193 = mul i32 %179, %192
  %194 = getelementptr inbounds i16, ptr %163, i64 %185
  %195 = load i16, ptr %194, align 2, !tbaa !40
  %196 = zext i16 %195 to i32
  %197 = mul i32 %178, %196
  %198 = add i32 %197, %193
  %199 = mul i32 %198, %156
  %200 = add i32 %189, %184
  %201 = mul i32 %200, %157
  %202 = add i32 %201, %99
  %203 = add i32 %202, %199
  %204 = sdiv i32 %203, %98
  %205 = trunc i32 %204 to i16
  %206 = add nuw nsw i64 %166, %141
  %207 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %164, i64 %206
  store i16 %205, ptr %207, align 2, !tbaa !40
  %208 = add nuw nsw i64 %166, 1
  %209 = icmp eq i64 %208, 4
  br i1 %209, label %210, label %165, !llvm.loop !313

210:                                              ; preds = %165
  %211 = add nuw nsw i64 %144, 1
  %212 = icmp eq i64 %211, 4
  br i1 %212, label %213, label %143, !llvm.loop !314

213:                                              ; preds = %210
  %214 = add nuw nsw i64 %132, 1
  %215 = icmp eq i64 %214, 4
  br i1 %215, label %216, label %131, !llvm.loop !315

216:                                              ; preds = %213
  %217 = add nuw nsw i64 %130, 1
  %218 = icmp eq i64 %217, %110
  br i1 %218, label %219, label %129, !llvm.loop !316

219:                                              ; preds = %216, %111
  br label %220

220:                                              ; preds = %231, %219
  %221 = phi i64 [ %232, %231 ], [ 0, %219 ]
  %222 = shl nsw i64 %221, 3
  br label %223

223:                                              ; preds = %223, %220
  %224 = phi i64 [ 0, %220 ], [ %229, %223 ]
  %225 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %221, i64 %224
  %226 = load i16, ptr %225, align 2, !tbaa !40
  %227 = add nuw nsw i64 %224, %222
  %228 = getelementptr inbounds i16, ptr %114, i64 %227
  store i16 %226, ptr %228, align 2, !tbaa !40
  %229 = add nuw nsw i64 %224, 1
  %230 = icmp eq i64 %229, 8
  br i1 %230, label %231, label %223, !llvm.loop !317

231:                                              ; preds = %223
  %232 = add nuw nsw i64 %221, 1
  %233 = icmp eq i64 %232, 8
  br i1 %233, label %234, label %220, !llvm.loop !318

234:                                              ; preds = %231
  %235 = getelementptr inbounds i16, ptr %114, i64 64
  br i1 %112, label %111, label %236, !llvm.loop !319

236:                                              ; preds = %234, %84
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %6) #48
  ret void
}

; Function Attrs: nofree nosync nounwind optsize memory(argmem: read) uwtable
define internal fastcc i32 @edgeDistortion(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, i32 noundef %4) unnamed_addr #26 {
  %6 = ashr i32 %4, 3
  %7 = sdiv i32 %1, %6
  %8 = shl i32 %4, 3
  %9 = mul i32 %8, %7
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i16, ptr %3, i64 %10
  %12 = srem i32 %1, %6
  %13 = shl nsw i32 %12, 3
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i16, ptr %11, i64 %14
  %16 = getelementptr inbounds i16, ptr %15, i64 16
  %17 = shl nsw i32 %4, 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i16, ptr %15, i64 %18
  %20 = getelementptr inbounds i16, ptr %15, i64 -1
  %21 = sext i32 %4 to i64
  %22 = sub nsw i64 0, %21
  %23 = getelementptr inbounds i16, ptr %15, i64 %22
  br label %24

24:                                               ; preds = %113, %5
  %25 = phi i32 [ 3, %5 ], [ 2, %113 ]
  br label %26

26:                                               ; preds = %108, %24
  %27 = phi i64 [ 4, %24 ], [ %111, %108 ]
  %28 = phi i32 [ 0, %24 ], [ %110, %108 ]
  %29 = phi i32 [ 0, %24 ], [ %109, %108 ]
  %30 = getelementptr inbounds i32, ptr %0, i64 %27
  %31 = load i32, ptr %30, align 4, !tbaa !18
  %32 = icmp slt i32 %31, %25
  br i1 %32, label %108, label %33

33:                                               ; preds = %26
  %34 = trunc i64 %27 to i32
  switch i32 %34, label %105 [
    i32 4, label %54
    i32 5, label %72
    i32 6, label %35
    i32 7, label %88
  ]

35:                                               ; preds = %33
  %36 = insertelement <4 x i32> <i32 poison, i32 0, i32 0, i32 0>, i32 %29, i64 0
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ 0, %35 ], [ %50, %37 ]
  %39 = phi <4 x i32> [ %36, %35 ], [ %49, %37 ]
  %40 = add nuw nsw i64 %38, 240
  %41 = getelementptr inbounds i16, ptr %2, i64 %40
  %42 = load <4 x i16>, ptr %41, align 2, !tbaa !40
  %43 = zext <4 x i16> %42 to <4 x i32>
  %44 = getelementptr inbounds i16, ptr %19, i64 %38
  %45 = load <4 x i16>, ptr %44, align 2, !tbaa !40
  %46 = zext <4 x i16> %45 to <4 x i32>
  %47 = sub nsw <4 x i32> %43, %46
  %48 = tail call <4 x i32> @llvm.abs.v4i32(<4 x i32> %47, i1 true)
  %49 = add <4 x i32> %48, %39
  %50 = add nuw i64 %38, 4
  %51 = icmp eq i64 %50, 16
  br i1 %51, label %52, label %37, !llvm.loop !320

52:                                               ; preds = %37
  %.lcssa = phi <4 x i32> [ %49, %37 ]
  %53 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %.lcssa)
  br label %105

54:                                               ; preds = %33
  %55 = insertelement <4 x i32> <i32 poison, i32 0, i32 0, i32 0>, i32 %29, i64 0
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi i64 [ 0, %54 ], [ %68, %56 ]
  %58 = phi <4 x i32> [ %55, %54 ], [ %67, %56 ]
  %59 = getelementptr inbounds i16, ptr %2, i64 %57
  %60 = load <4 x i16>, ptr %59, align 2, !tbaa !40
  %61 = zext <4 x i16> %60 to <4 x i32>
  %62 = getelementptr inbounds i16, ptr %23, i64 %57
  %63 = load <4 x i16>, ptr %62, align 2, !tbaa !40
  %64 = zext <4 x i16> %63 to <4 x i32>
  %65 = sub nsw <4 x i32> %61, %64
  %66 = tail call <4 x i32> @llvm.abs.v4i32(<4 x i32> %65, i1 true)
  %67 = add <4 x i32> %66, %58
  %68 = add nuw i64 %57, 4
  %69 = icmp eq i64 %68, 16
  br i1 %69, label %70, label %56, !llvm.loop !321

70:                                               ; preds = %56
  %.lcssa1 = phi <4 x i32> [ %67, %56 ]
  %71 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %.lcssa1)
  br label %105

72:                                               ; preds = %72, %33
  %73 = phi i64 [ %86, %72 ], [ 0, %33 ]
  %74 = phi i32 [ %85, %72 ], [ %29, %33 ]
  %75 = shl nuw nsw i64 %73, 4
  %76 = getelementptr inbounds i16, ptr %2, i64 %75
  %77 = load i16, ptr %76, align 2, !tbaa !40
  %78 = zext i16 %77 to i32
  %79 = mul nsw i64 %73, %21
  %80 = getelementptr inbounds i16, ptr %20, i64 %79
  %81 = load i16, ptr %80, align 2, !tbaa !40
  %82 = zext i16 %81 to i32
  %83 = sub nsw i32 %78, %82
  %84 = tail call i32 @llvm.abs.i32(i32 %83, i1 true)
  %85 = add nsw i32 %84, %74
  %86 = add nuw nsw i64 %73, 1
  %87 = icmp eq i64 %86, 16
  br i1 %87, label %105, label %72, !llvm.loop !322

88:                                               ; preds = %88, %33
  %89 = phi i64 [ %103, %88 ], [ 0, %33 ]
  %90 = phi i32 [ %102, %88 ], [ %29, %33 ]
  %91 = shl nuw nsw i64 %89, 4
  %92 = or i64 %91, 15
  %93 = getelementptr inbounds i16, ptr %2, i64 %92
  %94 = load i16, ptr %93, align 2, !tbaa !40
  %95 = zext i16 %94 to i32
  %96 = mul nsw i64 %89, %21
  %97 = getelementptr inbounds i16, ptr %16, i64 %96
  %98 = load i16, ptr %97, align 2, !tbaa !40
  %99 = zext i16 %98 to i32
  %100 = sub nsw i32 %95, %99
  %101 = tail call i32 @llvm.abs.i32(i32 %100, i1 true)
  %102 = add nsw i32 %101, %90
  %103 = add nuw nsw i64 %89, 1
  %104 = icmp eq i64 %103, 16
  br i1 %104, label %105, label %88, !llvm.loop !323

105:                                              ; preds = %88, %72, %70, %52, %33
  %106 = phi i32 [ %29, %33 ], [ %71, %70 ], [ %53, %52 ], [ %85, %72 ], [ %102, %88 ]
  %107 = add nsw i32 %28, 1
  br label %108

108:                                              ; preds = %105, %26
  %109 = phi i32 [ %106, %105 ], [ %29, %26 ]
  %110 = phi i32 [ %107, %105 ], [ %28, %26 ]
  %111 = add nuw nsw i64 %27, 1
  %112 = icmp eq i64 %111, 8
  br i1 %112, label %113, label %26, !llvm.loop !324

113:                                              ; preds = %108
  %.lcssa3 = phi i32 [ %109, %108 ]
  %.lcssa2 = phi i32 [ %110, %108 ]
  %114 = add nsw i32 %25, -3
  %115 = icmp ult i32 %114, -2
  %116 = icmp eq i32 %.lcssa2, 0
  %117 = select i1 %115, i1 %116, i1 false
  br i1 %117, label %24, label %118, !llvm.loop !325

118:                                              ; preds = %113
  %.lcssa4 = phi i1 [ %116, %113 ]
  %.lcssa3.lcssa = phi i32 [ %.lcssa3, %113 ]
  %.lcssa2.lcssa = phi i32 [ %.lcssa2, %113 ]
  br i1 %.lcssa4, label %121, label %119

119:                                              ; preds = %118
  %120 = sdiv i32 %.lcssa3.lcssa, %.lcssa2.lcssa
  br label %121

121:                                              ; preds = %119, %118
  %122 = phi i32 [ %120, %119 ], [ 0, %118 ]
  ret i32 %122
}

; Function Attrs: nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @copyPredMB(i32 noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #25 {
  %4 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %5 = getelementptr inbounds %struct.storable_picture, ptr %4, i64 0, i32 50
  %6 = load i32, ptr %5, align 4, !tbaa !83
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [4 x i32], ptr @uv_div, i64 0, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !18
  %10 = getelementptr inbounds [2 x [4 x i32]], ptr @uv_div, i64 0, i64 1, i64 %7
  %11 = load i32, ptr %10, align 4, !tbaa !18
  %12 = ashr i32 %2, 3
  %13 = srem i32 %0, %12
  %14 = shl nsw i32 %13, 3
  %15 = sdiv i32 %0, %12
  %16 = shl i32 %15, 3
  %17 = add i32 %16, 15
  %18 = getelementptr inbounds %struct.storable_picture, ptr %4, i64 0, i32 32
  %19 = load ptr, ptr %18, align 8, !tbaa !47
  %20 = sext i32 %14 to i64
  %21 = add i32 %14, 16
  %22 = sext i32 %16 to i64
  %23 = tail call i32 @llvm.smax.i32(i32 %16, i32 %17)
  %24 = add i32 %23, 1
  br label %25

25:                                               ; preds = %44, %3
  %26 = phi i64 [ %22, %3 ], [ %45, %44 ]
  %27 = trunc i64 %26 to i32
  %28 = sub i32 %27, %16
  %29 = shl i32 %28, 4
  %30 = sub i32 %29, %14
  %31 = getelementptr inbounds ptr, ptr %19, i64 %26
  %32 = load ptr, ptr %31, align 8, !tbaa !13
  br label %33

33:                                               ; preds = %33, %25
  %34 = phi i64 [ %20, %25 ], [ %41, %33 ]
  %35 = trunc i64 %34 to i32
  %36 = add i32 %30, %35
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i16, ptr %1, i64 %37
  %39 = load i16, ptr %38, align 2, !tbaa !40
  %40 = getelementptr inbounds i16, ptr %32, i64 %34
  store i16 %39, ptr %40, align 2, !tbaa !40
  %41 = add nsw i64 %34, 1
  %42 = trunc i64 %41 to i32
  %43 = icmp eq i32 %21, %42
  br i1 %43, label %44, label %33, !llvm.loop !326

44:                                               ; preds = %33
  %45 = add nsw i64 %26, 1
  %46 = trunc i64 %45 to i32
  %47 = icmp eq i32 %24, %46
  br i1 %47, label %48, label %25, !llvm.loop !327

48:                                               ; preds = %44
  %49 = add nsw i32 %14, 15
  %50 = icmp eq i32 %6, 0
  br i1 %50, label %102, label %51

51:                                               ; preds = %48
  %52 = ashr i32 %16, %11
  %53 = ashr i32 %17, %11
  %54 = icmp sgt i32 %52, %53
  br i1 %54, label %102, label %55

55:                                               ; preds = %51
  %56 = ashr i32 %14, %9
  %57 = ashr i32 %49, %9
  %58 = icmp sgt i32 %56, %57
  %59 = load ptr, ptr @img, align 8
  %60 = getelementptr inbounds %struct.img_par, ptr %59, i64 0, i32 115
  %61 = shl nsw i32 %13, 2
  %62 = getelementptr inbounds %struct.storable_picture, ptr %4, i64 0, i32 33
  %63 = sext i32 %56 to i64
  %64 = sext i32 %61 to i64
  %65 = add i32 %57, 1
  %66 = sext i32 %52 to i64
  %67 = add i32 %53, 1
  br label %68

68:                                               ; preds = %98, %55
  %69 = phi i64 [ %66, %55 ], [ %99, %98 ]
  br i1 %58, label %98, label %70

70:                                               ; preds = %68
  %71 = sub nsw i64 %69, %66
  %72 = load i32, ptr %60, align 4, !tbaa !85
  %73 = sext i32 %72 to i64
  %74 = mul nsw i64 %71, %73
  %75 = load ptr, ptr %62, align 8, !tbaa !82
  %76 = load ptr, ptr %75, align 8, !tbaa !13
  %77 = getelementptr inbounds ptr, ptr %76, i64 %69
  %78 = load ptr, ptr %77, align 8, !tbaa !13
  %79 = getelementptr inbounds ptr, ptr %75, i64 1
  %80 = load ptr, ptr %79, align 8, !tbaa !13
  %81 = getelementptr inbounds ptr, ptr %80, i64 %69
  %82 = load ptr, ptr %81, align 8, !tbaa !13
  br label %83

83:                                               ; preds = %83, %70
  %84 = phi i64 [ %63, %70 ], [ %95, %83 ]
  %85 = sub nsw i64 %84, %64
  %86 = add nsw i64 %74, %85
  %87 = add nsw i64 %86, 256
  %88 = getelementptr inbounds i16, ptr %1, i64 %87
  %89 = load i16, ptr %88, align 2, !tbaa !40
  %90 = getelementptr inbounds i16, ptr %78, i64 %84
  store i16 %89, ptr %90, align 2, !tbaa !40
  %91 = add nsw i64 %86, 320
  %92 = getelementptr inbounds i16, ptr %1, i64 %91
  %93 = load i16, ptr %92, align 2, !tbaa !40
  %94 = getelementptr inbounds i16, ptr %82, i64 %84
  store i16 %93, ptr %94, align 2, !tbaa !40
  %95 = add nsw i64 %84, 1
  %96 = trunc i64 %95 to i32
  %97 = icmp eq i32 %65, %96
  br i1 %97, label %98, label %83, !llvm.loop !328

98:                                               ; preds = %83, %68
  %99 = add nsw i64 %69, 1
  %100 = trunc i64 %99 to i32
  %101 = icmp eq i32 %67, %100
  br i1 %101, label %102, label %68, !llvm.loop !329

102:                                              ; preds = %98, %51, %48
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i32> @llvm.abs.v4i32(<4 x i32>, i1 immarg) #12

; Function Attrs: nounwind optsize uwtable
define internal void @conceal_lost_frames(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 61
  %3 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 61, i64 1
  %4 = load <2 x i32>, ptr %2, align 8, !tbaa !18
  store i32 0, ptr %3, align 4, !tbaa !18
  store i32 0, ptr %2, align 8, !tbaa !18
  %5 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 133
  %6 = load i32, ptr %5, align 8, !tbaa !330
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 129
  %10 = load i32, ptr %9, align 8, !tbaa !331
  %11 = sub nsw i32 0, %10
  %12 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 127
  store i32 %11, ptr %12, align 8, !tbaa !332
  %13 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 131
  store i32 0, ptr %13, align 8, !tbaa !333
  br label %21

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 52
  %16 = load i32, ptr %15, align 4, !tbaa !334
  %17 = add i32 %16, 1
  %18 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 86
  %19 = load i32, ptr %18, align 8, !tbaa !335
  %20 = urem i32 %17, %19
  br label %21

21:                                               ; preds = %14, %8
  %22 = phi i32 [ 0, %8 ], [ %20, %14 ]
  %23 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %24 = load i32, ptr %23, align 4, !tbaa !336
  %25 = icmp eq i32 %24, %22
  br i1 %25, label %94, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 11
  %28 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 12
  %29 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 13
  %30 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 15
  %31 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 127
  %32 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 128
  %33 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 134
  %34 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 52
  %35 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 86
  br label %36

36:                                               ; preds = %89, %26
  %37 = phi i32 [ %22, %26 ], [ %92, %89 ]
  %38 = load i32, ptr %27, align 8, !tbaa !337
  %39 = load i32, ptr %28, align 4, !tbaa !338
  %40 = load i32, ptr %29, align 8, !tbaa !339
  %41 = load i32, ptr %30, align 8, !tbaa !340
  %42 = tail call ptr @alloc_storable_picture(i32 noundef 0, i32 noundef %38, i32 noundef %39, i32 noundef %40, i32 noundef %41) #46
  %43 = getelementptr inbounds %struct.storable_picture, ptr %42, i64 0, i32 28
  store i32 1, ptr %43, align 4, !tbaa !341
  %44 = getelementptr inbounds %struct.storable_picture, ptr %42, i64 0, i32 11
  store i32 %37, ptr %44, align 8, !tbaa !342
  %45 = getelementptr inbounds %struct.storable_picture, ptr %42, i64 0, i32 9
  store i32 %37, ptr %45, align 8, !tbaa !343
  %46 = getelementptr inbounds %struct.storable_picture, ptr %42, i64 0, i32 17
  store i32 0, ptr %46, align 8, !tbaa !344
  %47 = getelementptr inbounds %struct.storable_picture, ptr %42, i64 0, i32 16
  store i32 0, ptr %47, align 4, !tbaa !345
  %48 = getelementptr inbounds %struct.storable_picture, ptr %42, i64 0, i32 15
  store i32 1, ptr %48, align 8, !tbaa !346
  %49 = getelementptr inbounds %struct.storable_picture, ptr %42, i64 0, i32 61
  store i32 1, ptr %49, align 8, !tbaa !347
  %50 = getelementptr inbounds %struct.storable_picture, ptr %42, i64 0, i32 49
  store i32 0, ptr %50, align 8, !tbaa !348
  store i32 %37, ptr %23, align 4, !tbaa !336
  %51 = load i32, ptr %31, align 8, !tbaa !332
  %52 = load i32, ptr %32, align 4, !tbaa !349
  %53 = add nsw i32 %52, %51
  %54 = getelementptr inbounds %struct.storable_picture, ptr %42, i64 0, i32 1
  %55 = insertelement <4 x i32> poison, i32 %53, i64 0
  %56 = shufflevector <4 x i32> %55, <4 x i32> poison, <4 x i32> zeroinitializer
  store <4 x i32> %56, ptr %54, align 4, !tbaa !18
  store i32 %53, ptr %31, align 8, !tbaa !332
  %57 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %58 = add i32 %57, -1
  %59 = icmp sgt i32 %58, -1
  br i1 %59, label %60, label %82

60:                                               ; preds = %36
  %61 = load ptr, ptr @dpb, align 8, !tbaa !352
  %62 = zext i32 %58 to i64
  br label %63

63:                                               ; preds = %79, %60
  %64 = phi i64 [ %80, %79 ], [ %62, %60 ]
  %65 = getelementptr inbounds ptr, ptr %61, i64 %64
  %66 = load ptr, ptr %65, align 8, !tbaa !13
  %67 = load i32, ptr %66, align 8, !tbaa !353
  %68 = icmp eq i32 %67, 3
  br i1 %68, label %69, label %79

69:                                               ; preds = %63
  %70 = getelementptr inbounds %struct.frame_store, ptr %66, i64 0, i32 12
  %71 = load ptr, ptr %70, align 8, !tbaa !355
  %72 = getelementptr inbounds %struct.storable_picture, ptr %71, i64 0, i32 15
  %73 = load i32, ptr %72, align 8, !tbaa !346
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.storable_picture, ptr %71, i64 0, i32 14
  %77 = load i32, ptr %76, align 4, !tbaa !356
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %75, %69, %63
  %80 = add nsw i64 %64, -1
  %81 = icmp sgt i64 %64, 0
  br i1 %81, label %63, label %82, !llvm.loop !357

82:                                               ; preds = %79, %75, %36
  %83 = phi ptr [ null, %36 ], [ null, %79 ], [ %71, %75 ]
  store i32 0, ptr %33, align 4, !tbaa !358
  tail call fastcc void @copy_to_conceal(ptr noundef %83, ptr noundef %42, ptr noundef %0) #47
  %84 = load i32, ptr %5, align 8, !tbaa !330
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %89

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.storable_picture, ptr %42, i64 0, i32 45
  store i32 2, ptr %87, align 8, !tbaa !359
  %88 = getelementptr inbounds %struct.storable_picture, ptr %42, i64 0, i32 46
  store i32 1, ptr %88, align 4, !tbaa !360
  tail call void @flush_dpb() #46
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %54, i8 0, i64 16, i1 false)
  store i32 0, ptr %31, align 8, !tbaa !332
  br label %89

89:                                               ; preds = %86, %82
  tail call void @store_picture_in_dpb(ptr noundef %42) #46
  store i32 %37, ptr %34, align 4, !tbaa !334
  %90 = load i32, ptr %35, align 8, !tbaa !335
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(64) getelementptr inbounds ([17 x i32], ptr @ref_flag, i64 0, i64 1), ptr noundef nonnull align 16 dereferenceable(64) @ref_flag, i64 64, i1 false), !tbaa !18
  %91 = add nsw i32 %37, 1
  %92 = srem i32 %91, %90
  store i32 0, ptr @ref_flag, align 16, !tbaa !18
  %93 = icmp eq i32 %24, %92
  br i1 %93, label %94, label %36, !llvm.loop !361

94:                                               ; preds = %89, %21
  store <2 x i32> %4, ptr %2, align 8, !tbaa !18
  store i32 %24, ptr %23, align 4, !tbaa !336
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal fastcc void @copy_to_conceal(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2) unnamed_addr #0 {
  %4 = alloca [4 x [4 x i32]], align 16
  %5 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 1
  store i32 0, ptr %5, align 4, !tbaa !49
  %6 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 31
  %7 = load i32, ptr %6, align 8, !tbaa !362
  %8 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 31
  store i32 %7, ptr %8, align 8, !tbaa !362
  %9 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 134
  %10 = load i32, ptr %9, align 4, !tbaa !358
  %11 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 45
  store i32 %10, ptr %11, align 8, !tbaa !359
  %12 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 45
  store i32 %10, ptr %12, align 8, !tbaa !359
  %13 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 46
  store i32 0, ptr %13, align 4, !tbaa !360
  %14 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 47
  %15 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 47
  %16 = load <2 x i32>, ptr %14, align 8, !tbaa !18
  store <2 x i32> %16, ptr %15, align 8, !tbaa !18
  %17 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 49
  store i32 0, ptr %17, align 8, !tbaa !348
  %18 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 49
  store i32 0, ptr %18, align 8, !tbaa !348
  %19 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 50
  %20 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 50
  %21 = load <4 x i32>, ptr %19, align 4, !tbaa !18
  store <4 x i32> %21, ptr %20, align 4, !tbaa !18
  %22 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 54
  %23 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 54
  %24 = load <4 x i32>, ptr %22, align 4, !tbaa !18
  store <4 x i32> %24, ptr %23, align 4, !tbaa !18
  %25 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 59
  %26 = load i32, ptr %25, align 4, !tbaa !363
  %27 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 59
  store i32 %26, ptr %27, align 4, !tbaa !363
  store ptr %0, ptr @dec_picture, align 8, !tbaa !13
  %28 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 130
  %29 = load i32, ptr %28, align 4, !tbaa !364
  switch i32 %29, label %417 [
    i32 1, label %30
    i32 2, label %106
  ]

30:                                               ; preds = %3
  %31 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 30
  %32 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 30
  %33 = load <2 x i32>, ptr %31, align 4, !tbaa !18
  store <2 x i32> %33, ptr %32, align 4, !tbaa !18
  %34 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 32
  %35 = load ptr, ptr %34, align 8, !tbaa !47
  %36 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 33
  %37 = load ptr, ptr %36, align 8, !tbaa !82
  %38 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 32
  %39 = load ptr, ptr %38, align 8, !tbaa !47
  %40 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 33
  %41 = load ptr, ptr %40, align 8, !tbaa !82
  %42 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 11
  %43 = load i32, ptr %42, align 8, !tbaa !337
  %44 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 12
  %45 = load i32, ptr %44, align 4, !tbaa !338
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %47, label %417

47:                                               ; preds = %30
  %48 = icmp sgt i32 %43, 0
  %49 = zext i32 %45 to i64
  %50 = zext i32 %43 to i64
  br label %51

51:                                               ; preds = %75, %47
  %52 = phi i64 [ 0, %47 ], [ %76, %75 ]
  br i1 %48, label %53, label %75

53:                                               ; preds = %51
  %54 = getelementptr inbounds ptr, ptr %35, i64 %52
  %55 = load ptr, ptr %54, align 8, !tbaa !13
  %56 = getelementptr inbounds ptr, ptr %39, i64 %52
  %57 = load ptr, ptr %56, align 8, !tbaa !13
  br label %68

58:                                               ; preds = %75
  %59 = icmp sgt i32 %45, 1
  br i1 %59, label %60, label %417

60:                                               ; preds = %58
  %61 = lshr i32 %45, 1
  %62 = sdiv i32 %43, 2
  %63 = icmp sgt i32 %43, 1
  %64 = getelementptr inbounds ptr, ptr %37, i64 1
  %65 = getelementptr inbounds ptr, ptr %41, i64 1
  %66 = zext i32 %61 to i64
  %67 = zext i32 %62 to i64
  br label %78

68:                                               ; preds = %68, %53
  %69 = phi i64 [ 0, %53 ], [ %73, %68 ]
  %70 = getelementptr inbounds i16, ptr %55, i64 %69
  %71 = load i16, ptr %70, align 2, !tbaa !40
  %72 = getelementptr inbounds i16, ptr %57, i64 %69
  store i16 %71, ptr %72, align 2, !tbaa !40
  %73 = add nuw nsw i64 %69, 1
  %74 = icmp eq i64 %73, %50
  br i1 %74, label %75, label %68, !llvm.loop !365

75:                                               ; preds = %68, %51
  %76 = add nuw nsw i64 %52, 1
  %77 = icmp eq i64 %76, %49
  br i1 %77, label %58, label %51, !llvm.loop !366

78:                                               ; preds = %103, %60
  %79 = phi i64 [ 0, %60 ], [ %104, %103 ]
  br i1 %63, label %80, label %103

80:                                               ; preds = %78
  %81 = load ptr, ptr %37, align 8, !tbaa !13
  %82 = getelementptr inbounds ptr, ptr %81, i64 %79
  %83 = load ptr, ptr %82, align 8, !tbaa !13
  %84 = load ptr, ptr %41, align 8, !tbaa !13
  %85 = getelementptr inbounds ptr, ptr %84, i64 %79
  %86 = load ptr, ptr %85, align 8, !tbaa !13
  %87 = load ptr, ptr %64, align 8, !tbaa !13
  %88 = getelementptr inbounds ptr, ptr %87, i64 %79
  %89 = load ptr, ptr %88, align 8, !tbaa !13
  %90 = load ptr, ptr %65, align 8, !tbaa !13
  %91 = getelementptr inbounds ptr, ptr %90, i64 %79
  %92 = load ptr, ptr %91, align 8, !tbaa !13
  br label %93

93:                                               ; preds = %93, %80
  %94 = phi i64 [ 0, %80 ], [ %101, %93 ]
  %95 = getelementptr inbounds i16, ptr %83, i64 %94
  %96 = load i16, ptr %95, align 2, !tbaa !40
  %97 = getelementptr inbounds i16, ptr %86, i64 %94
  store i16 %96, ptr %97, align 2, !tbaa !40
  %98 = getelementptr inbounds i16, ptr %89, i64 %94
  %99 = load i16, ptr %98, align 2, !tbaa !40
  %100 = getelementptr inbounds i16, ptr %92, i64 %94
  store i16 %99, ptr %100, align 2, !tbaa !40
  %101 = add nuw nsw i64 %94, 1
  %102 = icmp eq i64 %101, %67
  br i1 %102, label %103, label %93, !llvm.loop !367

103:                                              ; preds = %93, %78
  %104 = add nuw nsw i64 %79, 1
  %105 = icmp eq i64 %104, %66
  br i1 %105, label %417, label %78, !llvm.loop !368

106:                                              ; preds = %3
  %107 = load i32, ptr %19, align 4, !tbaa !83
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %120, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 115
  %111 = load i32, ptr %110, align 4, !tbaa !85
  %112 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 116
  %113 = load i32, ptr %112, align 8, !tbaa !86
  %114 = mul nsw i32 %113, %111
  %115 = sdiv i32 %114, 8
  %116 = add nsw i32 %115, 16
  %117 = sext i32 %116 to i64
  %118 = shl nsw i64 %117, 1
  %119 = tail call noalias ptr @malloc(i64 noundef %118) #49
  br label %122

120:                                              ; preds = %106
  %121 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  br label %122

122:                                              ; preds = %120, %109
  %123 = phi ptr [ %119, %109 ], [ %121, %120 ]
  store ptr %2, ptr @erc_img, align 8, !tbaa !13
  %124 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 30
  %125 = load i32, ptr %124, align 4, !tbaa !369
  %126 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 30
  store i32 %125, ptr %126, align 4, !tbaa !369
  %127 = load i32, ptr %6, align 8, !tbaa !362
  store i32 %127, ptr %8, align 8, !tbaa !362
  %128 = udiv i32 %127, %125
  %129 = icmp eq i32 %10, 1
  %130 = select i1 %129, i32 2, i32 1
  %131 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 38
  %132 = load ptr, ptr %131, align 8, !tbaa !165
  %133 = getelementptr inbounds %struct.Slice, ptr %132, i64 0, i32 4
  %134 = load i32, ptr %133, align 8, !tbaa !370
  br i1 %129, label %135, label %136

135:                                              ; preds = %122
  tail call void @init_lists_for_non_reference_loss(i32 noundef 1, i32 noundef %134) #47
  br label %137

136:                                              ; preds = %122
  tail call void @init_lists(i32 noundef %10, i32 noundef %134) #46
  br label %137

137:                                              ; preds = %136, %135
  %138 = icmp sgt i32 %128, 0
  br i1 %138, label %139, label %416

139:                                              ; preds = %137
  %140 = shl i32 %128, 2
  %141 = shl i32 %125, 2
  %142 = icmp sgt i32 %125, 0
  %143 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 39
  %144 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 36
  %145 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 39
  %146 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 36
  %147 = getelementptr inbounds i16, ptr %123, i64 16
  %148 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 32
  %149 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 33
  %150 = tail call i32 @llvm.smax.i32(i32 %141, i32 1)
  %151 = tail call i32 @llvm.smax.i32(i32 %140, i32 1)
  %152 = zext i32 %151 to i64
  %153 = zext i32 %150 to i64
  br label %154

154:                                              ; preds = %413, %139
  %155 = phi i64 [ 0, %139 ], [ %414, %413 ]
  %156 = trunc i64 %155 to i32
  %157 = shl nsw i32 %156, 2
  br i1 %142, label %158, label %413

158:                                              ; preds = %154
  %159 = shl nsw i32 %156, 4
  %160 = shl nuw nsw i64 %155, 1
  %161 = zext i32 %157 to i64
  br label %162

162:                                              ; preds = %410, %158
  %163 = phi i64 [ 0, %158 ], [ %411, %410 ]
  %164 = trunc i64 %163 to i32
  %165 = shl i32 %164, 2
  %166 = zext i32 %165 to i64
  %167 = shl nuw nsw i64 %166, 1
  %168 = load ptr, ptr %143, align 8, !tbaa !371
  %169 = load ptr, ptr %168, align 8, !tbaa !13
  %170 = getelementptr inbounds ptr, ptr %169, i64 %155
  %171 = load ptr, ptr %170, align 8, !tbaa !13
  %172 = getelementptr inbounds ptr, ptr %171, i64 %163
  %173 = load ptr, ptr %172, align 8, !tbaa !13
  %174 = load i16, ptr %173, align 2, !tbaa !40
  %175 = sext i16 %174 to i32
  %176 = sdiv i32 %175, %130
  %177 = getelementptr inbounds i16, ptr %173, i64 1
  %178 = load i16, ptr %177, align 2, !tbaa !40
  %179 = sext i16 %178 to i32
  %180 = sdiv i32 %179, %130
  %181 = load ptr, ptr %144, align 8, !tbaa !197
  %182 = load ptr, ptr %181, align 8, !tbaa !13
  %183 = getelementptr inbounds ptr, ptr %182, i64 %155
  %184 = load ptr, ptr %183, align 8, !tbaa !13
  %185 = getelementptr inbounds i8, ptr %184, i64 %163
  %186 = load i8, ptr %185, align 1, !tbaa !14
  %187 = call i8 @llvm.smax.i8(i8 %186, i8 0)
  %188 = zext i8 %187 to i32
  %189 = trunc i32 %176 to i16
  %190 = load ptr, ptr %145, align 8, !tbaa !371
  %191 = load ptr, ptr %190, align 8, !tbaa !13
  %192 = getelementptr inbounds ptr, ptr %191, i64 %155
  %193 = load ptr, ptr %192, align 8, !tbaa !13
  %194 = getelementptr inbounds ptr, ptr %193, i64 %163
  %195 = load ptr, ptr %194, align 8, !tbaa !13
  store i16 %189, ptr %195, align 2, !tbaa !40
  %196 = trunc i32 %180 to i16
  %197 = getelementptr inbounds i16, ptr %195, i64 1
  store i16 %196, ptr %197, align 2, !tbaa !40
  %198 = load ptr, ptr %146, align 8, !tbaa !197
  %199 = load ptr, ptr %198, align 8, !tbaa !13
  %200 = getelementptr inbounds ptr, ptr %199, i64 %155
  %201 = load ptr, ptr %200, align 8, !tbaa !13
  %202 = getelementptr inbounds i8, ptr %201, i64 %163
  store i8 %187, ptr %202, align 1, !tbaa !14
  %203 = or i32 %164, %156
  %204 = and i32 %203, 3
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %209

206:                                              ; preds = %162
  %207 = load i32, ptr %5, align 4, !tbaa !49
  %208 = add i32 %207, 1
  store i32 %208, ptr %5, align 4, !tbaa !49
  br label %209

209:                                              ; preds = %206, %162
  %210 = load ptr, ptr @erc_img, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %4) #48
  %211 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %212 = getelementptr inbounds %struct.storable_picture, ptr %211, i64 0, i32 50
  %213 = load i32, ptr %212, align 4, !tbaa !83
  %214 = getelementptr inbounds %struct.img_par, ptr %210, i64 0, i32 17
  store i32 %164, ptr %214, align 8, !tbaa !299
  %215 = getelementptr inbounds %struct.img_par, ptr %210, i64 0, i32 16
  store i32 %156, ptr %215, align 4, !tbaa !300
  %216 = getelementptr inbounds %struct.img_par, ptr %210, i64 0, i32 18
  store i32 %157, ptr %216, align 4, !tbaa !301
  %217 = getelementptr inbounds %struct.img_par, ptr %210, i64 0, i32 116
  %218 = load i32, ptr %217, align 8, !tbaa !86
  %219 = mul nsw i32 %218, %156
  %220 = sdiv i32 %219, 4
  %221 = getelementptr inbounds %struct.img_par, ptr %210, i64 0, i32 21
  store i32 %220, ptr %221, align 8, !tbaa !302
  %222 = getelementptr inbounds %struct.img_par, ptr %210, i64 0, i32 22
  store i32 %165, ptr %222, align 4, !tbaa !303
  %223 = getelementptr inbounds %struct.img_par, ptr %210, i64 0, i32 115
  %224 = load i32, ptr %223, align 4, !tbaa !85
  %225 = mul nsw i32 %224, %164
  %226 = sdiv i32 %225, 4
  %227 = getelementptr inbounds %struct.img_par, ptr %210, i64 0, i32 23
  store i32 %226, ptr %227, align 8, !tbaa !304
  %228 = shl nsw i32 %164, 4
  %229 = add nsw i32 %176, %228
  %230 = add nsw i32 %180, %159
  %231 = load ptr, ptr @listX, align 16, !tbaa !13
  call void @get_block(i32 noundef %188, ptr noundef %231, i32 noundef %229, i32 noundef %230, ptr noundef %210, ptr noundef nonnull %4) #46
  br label %232

232:                                              ; preds = %232, %209
  %233 = phi i64 [ 0, %209 ], [ %238, %232 ]
  %234 = getelementptr inbounds [4 x [4 x i32]], ptr %4, i64 0, i64 %233, i64 0
  %235 = load <4 x i32>, ptr %234, align 16, !tbaa !18
  %236 = trunc <4 x i32> %235 to <4 x i16>
  %237 = getelementptr inbounds %struct.img_par, ptr %210, i64 0, i32 25, i64 %233, i64 0
  store <4 x i16> %236, ptr %237, align 2, !tbaa !40
  %238 = add nuw nsw i64 %233, 1
  %239 = icmp eq i64 %238, 4
  br i1 %239, label %240, label %232, !llvm.loop !372

240:                                              ; preds = %240, %232
  %241 = phi i64 [ %248, %240 ], [ 0, %232 ]
  %242 = shl nuw nsw i64 %241, 3
  %243 = getelementptr i8, ptr %123, i64 %242
  %244 = shl nuw nsw i64 %241, 5
  %245 = add nuw nsw i64 %244, 104
  %246 = getelementptr i8, ptr %210, i64 %245
  %247 = load i64, ptr %246, align 2, !tbaa !40
  store i64 %247, ptr %243, align 2, !tbaa !40
  %248 = add nuw nsw i64 %241, 1
  %249 = icmp eq i64 %248, 4
  br i1 %249, label %250, label %240, !llvm.loop !373

250:                                              ; preds = %240
  %251 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %252 = getelementptr inbounds %struct.storable_picture, ptr %251, i64 0, i32 50
  %253 = load i32, ptr %252, align 4, !tbaa !83
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %370, label %255

255:                                              ; preds = %250
  %256 = add nsw i32 %213, -1
  %257 = load i32, ptr %223, align 4, !tbaa !85
  %258 = sdiv i32 64, %257
  %259 = add nsw i32 %258, -1
  %260 = load i32, ptr %217, align 8, !tbaa !86
  %261 = sdiv i32 64, %260
  %262 = add nsw i32 %261, -1
  %263 = mul nsw i32 %261, %258
  %264 = ashr i32 %263, 1
  %265 = sext i32 %256 to i64
  %266 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %265
  %267 = load i8, ptr %266, align 16, !tbaa !14
  %268 = zext i8 %267 to i32
  %269 = load i32, ptr %221, align 8, !tbaa !302
  %270 = add nsw i32 %269, %268
  %271 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %265
  %272 = load i8, ptr %271, align 16, !tbaa !14
  %273 = zext i8 %272 to i32
  %274 = load i32, ptr %227, align 8, !tbaa !304
  %275 = add nsw i32 %274, %273
  %276 = getelementptr inbounds %struct.storable_picture, ptr %251, i64 0, i32 21
  %277 = load i32, ptr %276, align 8, !tbaa !311
  %278 = add nsw i32 %277, -1
  %279 = getelementptr inbounds %struct.storable_picture, ptr %251, i64 0, i32 22
  %280 = load i32, ptr %279, align 4, !tbaa !312
  %281 = add nsw i32 %280, -1
  %282 = load ptr, ptr @listX, align 16, !tbaa !13
  %283 = zext i8 %187 to i64
  %284 = getelementptr inbounds ptr, ptr %282, i64 %283
  %285 = load ptr, ptr %284, align 8, !tbaa !13
  %286 = getelementptr inbounds %struct.storable_picture, ptr %285, i64 0, i32 33
  %287 = load ptr, ptr %286, align 8, !tbaa !82
  %288 = getelementptr inbounds %struct.img_par, ptr %210, i64 0, i32 25, i64 0, i64 0
  %289 = getelementptr inbounds %struct.img_par, ptr %210, i64 0, i32 25, i64 1, i64 0
  %290 = getelementptr inbounds %struct.img_par, ptr %210, i64 0, i32 25, i64 1, i64 1
  br label %291

291:                                              ; preds = %363, %255
  %292 = phi i1 [ true, %255 ], [ false, %363 ]
  %293 = phi i64 [ 0, %255 ], [ 1, %363 ]
  %294 = phi ptr [ %147, %255 ], [ %369, %363 ]
  %295 = getelementptr inbounds ptr, ptr %287, i64 %293
  %296 = load ptr, ptr %295, align 8, !tbaa !13
  br label %297

297:                                              ; preds = %362, %291
  %298 = phi i1 [ true, %291 ], [ false, %362 ]
  %299 = phi i64 [ 0, %291 ], [ 1, %362 ]
  %300 = trunc i64 %299 to i32
  %301 = add nsw i32 %270, %300
  %302 = mul nsw i32 %301, %261
  %303 = add nsw i32 %302, %180
  %304 = sdiv i32 %303, %261
  %305 = call i32 @llvm.smax.i32(i32 %304, i32 0)
  %306 = call i32 @llvm.smin.i32(i32 %305, i32 %281)
  %307 = add nsw i32 %303, %262
  %308 = sdiv i32 %307, %261
  %309 = call i32 @llvm.smax.i32(i32 %308, i32 0)
  %310 = call i32 @llvm.smin.i32(i32 %309, i32 %281)
  %311 = and i32 %303, %262
  %312 = sub nsw i32 %261, %311
  %313 = sext i32 %306 to i64
  %314 = getelementptr inbounds ptr, ptr %296, i64 %313
  %315 = load ptr, ptr %314, align 8, !tbaa !13
  %316 = sext i32 %310 to i64
  %317 = getelementptr inbounds ptr, ptr %296, i64 %316
  %318 = load ptr, ptr %317, align 8, !tbaa !13
  br label %319

319:                                              ; preds = %319, %297
  %320 = phi i1 [ true, %297 ], [ false, %319 ]
  %321 = phi i64 [ 0, %297 ], [ 1, %319 ]
  %322 = trunc i64 %321 to i32
  %323 = add nsw i32 %275, %322
  %324 = mul nsw i32 %323, %258
  %325 = add nsw i32 %324, %176
  %326 = sdiv i32 %325, %258
  %327 = call i32 @llvm.smax.i32(i32 %326, i32 0)
  %328 = call i32 @llvm.smin.i32(i32 %327, i32 %278)
  %329 = add nsw i32 %325, %259
  %330 = sdiv i32 %329, %258
  %331 = call i32 @llvm.smax.i32(i32 %330, i32 0)
  %332 = call i32 @llvm.smin.i32(i32 %331, i32 %278)
  %333 = and i32 %325, %259
  %334 = sub nsw i32 %258, %333
  %335 = sext i32 %328 to i64
  %336 = getelementptr inbounds i16, ptr %315, i64 %335
  %337 = load i16, ptr %336, align 2, !tbaa !40
  %338 = zext i16 %337 to i32
  %339 = mul i32 %334, %338
  %340 = sext i32 %332 to i64
  %341 = getelementptr inbounds i16, ptr %315, i64 %340
  %342 = load i16, ptr %341, align 2, !tbaa !40
  %343 = zext i16 %342 to i32
  %344 = mul i32 %333, %343
  %345 = getelementptr inbounds i16, ptr %318, i64 %335
  %346 = load i16, ptr %345, align 2, !tbaa !40
  %347 = zext i16 %346 to i32
  %348 = mul i32 %334, %347
  %349 = getelementptr inbounds i16, ptr %318, i64 %340
  %350 = load i16, ptr %349, align 2, !tbaa !40
  %351 = zext i16 %350 to i32
  %352 = mul i32 %333, %351
  %353 = add i32 %352, %348
  %354 = mul i32 %353, %311
  %355 = add i32 %339, %344
  %356 = mul i32 %355, %312
  %357 = add i32 %356, %264
  %358 = add i32 %357, %354
  %359 = sdiv i32 %358, %263
  %360 = trunc i32 %359 to i16
  %361 = getelementptr inbounds %struct.img_par, ptr %210, i64 0, i32 25, i64 %299, i64 %321
  store i16 %360, ptr %361, align 2, !tbaa !40
  br i1 %320, label %319, label %362, !llvm.loop !374

362:                                              ; preds = %319
  br i1 %298, label %297, label %363, !llvm.loop !375

363:                                              ; preds = %362
  %364 = load <2 x i16>, ptr %288, align 2, !tbaa !40
  store <2 x i16> %364, ptr %294, align 2, !tbaa !40
  %365 = load i16, ptr %289, align 2, !tbaa !40
  %366 = getelementptr inbounds i16, ptr %294, i64 2
  store i16 %365, ptr %366, align 2, !tbaa !40
  %367 = load i16, ptr %290, align 2, !tbaa !40
  %368 = getelementptr inbounds i16, ptr %294, i64 3
  store i16 %367, ptr %368, align 2, !tbaa !40
  %369 = getelementptr inbounds i16, ptr %294, i64 4
  br i1 %292, label %291, label %370, !llvm.loop !376

370:                                              ; preds = %363, %250
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #48
  %371 = load ptr, ptr %148, align 8, !tbaa !47
  br label %372

372:                                              ; preds = %372, %370
  %373 = phi i64 [ 0, %370 ], [ %381, %372 ]
  %374 = shl nuw nsw i64 %373, 3
  %375 = getelementptr i8, ptr %123, i64 %374
  %376 = add nuw nsw i64 %373, %161
  %377 = getelementptr inbounds ptr, ptr %371, i64 %376
  %378 = load ptr, ptr %377, align 8, !tbaa !13
  %379 = getelementptr i8, ptr %378, i64 %167
  %380 = load i64, ptr %375, align 2, !tbaa !40
  store i64 %380, ptr %379, align 2, !tbaa !40
  %381 = add nuw nsw i64 %373, 1
  %382 = icmp eq i64 %381, 4
  br i1 %382, label %383, label %372, !llvm.loop !377

383:                                              ; preds = %372
  br i1 %254, label %410, label %384

384:                                              ; preds = %383
  %385 = load ptr, ptr %149, align 8, !tbaa !82
  %386 = shl nuw nsw i64 %163, 1
  %387 = or i64 %386, 1
  br label %388

388:                                              ; preds = %408, %384
  %389 = phi i1 [ true, %384 ], [ false, %408 ]
  %390 = phi i64 [ 0, %384 ], [ 1, %408 ]
  %391 = phi ptr [ %147, %384 ], [ %409, %408 ]
  %392 = getelementptr inbounds ptr, ptr %385, i64 %390
  %393 = load ptr, ptr %392, align 8, !tbaa !13
  br label %394

394:                                              ; preds = %394, %388
  %395 = phi i1 [ true, %388 ], [ false, %394 ]
  %396 = phi i64 [ 0, %388 ], [ 1, %394 ]
  %397 = shl nuw nsw i64 %396, 1
  %398 = or i64 %396, %160
  %399 = getelementptr inbounds ptr, ptr %393, i64 %398
  %400 = load ptr, ptr %399, align 8, !tbaa !13
  %401 = getelementptr inbounds i16, ptr %391, i64 %397
  %402 = load i16, ptr %401, align 2, !tbaa !40
  %403 = getelementptr inbounds i16, ptr %400, i64 %386
  store i16 %402, ptr %403, align 2, !tbaa !40
  %404 = or i64 %397, 1
  %405 = getelementptr inbounds i16, ptr %391, i64 %404
  %406 = load i16, ptr %405, align 2, !tbaa !40
  %407 = getelementptr inbounds i16, ptr %400, i64 %387
  store i16 %406, ptr %407, align 2, !tbaa !40
  br i1 %395, label %394, label %408, !llvm.loop !378

408:                                              ; preds = %394
  %409 = getelementptr inbounds i16, ptr %391, i64 4
  br i1 %389, label %388, label %410, !llvm.loop !379

410:                                              ; preds = %408, %383
  %411 = add nuw nsw i64 %163, 1
  %412 = icmp eq i64 %411, %153
  br i1 %412, label %413, label %162, !llvm.loop !380

413:                                              ; preds = %410, %154
  %414 = add nuw nsw i64 %155, 1
  %415 = icmp eq i64 %414, %152
  br i1 %415, label %416, label %154, !llvm.loop !381

416:                                              ; preds = %413, %137
  call void @free(ptr noundef %123) #46
  br label %417

417:                                              ; preds = %416, %103, %58, %30, %3
  ret void
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nofree nounwind optsize uwtable
define internal void @init_lists_for_non_reference_loss(i32 noundef %0, i32 noundef %1) #6 {
  %3 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %3, i64 0, i32 17
  %5 = load i32, ptr %4, align 4, !tbaa !382
  %6 = add i32 %5, 4
  %7 = shl nsw i32 -1, %6
  %8 = icmp eq i32 %1, 0
  br i1 %8, label %9, label %41

9:                                                ; preds = %2
  %10 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %41, label %12

12:                                               ; preds = %9
  %13 = load ptr, ptr @dpb, align 8, !tbaa !352
  %14 = load ptr, ptr @img, align 8
  %15 = getelementptr inbounds %struct.img_par, ptr %14, i64 0, i32 132
  %16 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8
  %17 = zext i32 %10 to i64
  br label %18

18:                                               ; preds = %38, %12
  %19 = phi i64 [ 0, %12 ], [ %39, %38 ]
  %20 = getelementptr inbounds ptr, ptr %13, i64 %19
  %21 = load ptr, ptr %20, align 8, !tbaa !13
  %22 = getelementptr inbounds %struct.frame_store, ptr %21, i64 0, i32 11
  %23 = load i32, ptr %22, align 4, !tbaa !384
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %38

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.frame_store, ptr %21, i64 0, i32 5
  %27 = load i32, ptr %26, align 4, !tbaa !385
  %28 = load i32, ptr %15, align 4, !tbaa !386
  %29 = icmp ugt i32 %27, %28
  %30 = select i1 %29, i32 %7, i32 0
  %31 = add i32 %27, %30
  %32 = getelementptr inbounds ptr, ptr %16, i64 %19
  %33 = load ptr, ptr %32, align 8, !tbaa !13
  %34 = getelementptr inbounds %struct.frame_store, ptr %33, i64 0, i32 7
  store i32 %31, ptr %34, align 4, !tbaa !387
  %35 = getelementptr inbounds %struct.frame_store, ptr %33, i64 0, i32 12
  %36 = load ptr, ptr %35, align 8, !tbaa !355
  %37 = getelementptr inbounds %struct.storable_picture, ptr %36, i64 0, i32 11
  store i32 %31, ptr %37, align 8, !tbaa !342
  br label %38

38:                                               ; preds = %25, %18
  %39 = add nuw nsw i64 %19, 1
  %40 = icmp eq i64 %39, %17
  br i1 %40, label %41, label %18, !llvm.loop !388

41:                                               ; preds = %38, %9, %2
  %42 = or i32 %1, %0
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %76

44:                                               ; preds = %41
  %45 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %72, label %47

47:                                               ; preds = %44
  %48 = zext i32 %45 to i64
  %49 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %50

50:                                               ; preds = %67, %47
  %51 = phi ptr [ %49, %47 ], [ %68, %67 ]
  %52 = phi i64 [ 0, %47 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %47 ], [ %69, %67 ]
  %54 = getelementptr inbounds ptr, ptr %51, i64 %52
  %55 = load ptr, ptr %54, align 8, !tbaa !13
  %56 = getelementptr inbounds %struct.frame_store, ptr %55, i64 0, i32 11
  %57 = load i32, ptr %56, align 4, !tbaa !384
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %67

59:                                               ; preds = %50
  %60 = getelementptr inbounds %struct.frame_store, ptr %55, i64 0, i32 12
  %61 = load ptr, ptr %60, align 8, !tbaa !355
  %62 = load ptr, ptr @listX, align 16, !tbaa !13
  %63 = add nsw i32 %53, 1
  %64 = sext i32 %53 to i64
  %65 = getelementptr inbounds ptr, ptr %62, i64 %64
  store ptr %61, ptr %65, align 8, !tbaa !13
  %66 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %67

67:                                               ; preds = %59, %50
  %68 = phi ptr [ %66, %59 ], [ %51, %50 ]
  %69 = phi i32 [ %63, %59 ], [ %53, %50 ]
  %70 = add nuw nsw i64 %52, 1
  %71 = icmp eq i64 %70, %48
  br i1 %71, label %72, label %50, !llvm.loop !389

72:                                               ; preds = %67, %44
  %73 = phi i32 [ 0, %44 ], [ %69, %67 ]
  %74 = load ptr, ptr @listX, align 16, !tbaa !13
  %75 = sext i32 %73 to i64
  tail call void @qsort(ptr noundef %74, i64 noundef %75, i64 noundef 8, ptr noundef nonnull @compare_pic_by_pic_num_desc) #46
  store i32 %73, ptr @listXsize, align 16, !tbaa !18
  br label %76

76:                                               ; preds = %72, %41
  %77 = phi i32 [ %73, %72 ], [ 0, %41 ]
  %78 = icmp eq i32 %0, 1
  %79 = and i1 %78, %8
  br i1 %79, label %83, label %80

80:                                               ; preds = %76
  %81 = load i32, ptr @listXsize, align 16
  %82 = load i32, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), align 4, !tbaa !18
  br label %199

83:                                               ; preds = %76
  %84 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %118, label %86

86:                                               ; preds = %83
  %87 = zext i32 %84 to i64
  %88 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %89

89:                                               ; preds = %113, %86
  %90 = phi ptr [ %88, %86 ], [ %114, %113 ]
  %91 = phi i64 [ 0, %86 ], [ %116, %113 ]
  %92 = phi i32 [ %77, %86 ], [ %115, %113 ]
  %93 = getelementptr inbounds ptr, ptr %90, i64 %91
  %94 = load ptr, ptr %93, align 8, !tbaa !13
  %95 = getelementptr inbounds %struct.frame_store, ptr %94, i64 0, i32 11
  %96 = load i32, ptr %95, align 4, !tbaa !384
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %113

98:                                               ; preds = %89
  %99 = load ptr, ptr @img, align 8, !tbaa !13
  %100 = getelementptr inbounds %struct.img_par, ptr %99, i64 0, i32 131
  %101 = load i32, ptr %100, align 8, !tbaa !333
  %102 = getelementptr inbounds %struct.frame_store, ptr %94, i64 0, i32 12
  %103 = load ptr, ptr %102, align 8, !tbaa !355
  %104 = getelementptr inbounds %struct.storable_picture, ptr %103, i64 0, i32 1
  %105 = load i32, ptr %104, align 4, !tbaa !390
  %106 = icmp sgt i32 %101, %105
  br i1 %106, label %107, label %113

107:                                              ; preds = %98
  %108 = load ptr, ptr @listX, align 16, !tbaa !13
  %109 = add nsw i32 %92, 1
  %110 = sext i32 %92 to i64
  %111 = getelementptr inbounds ptr, ptr %108, i64 %110
  store ptr %103, ptr %111, align 8, !tbaa !13
  %112 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %113

113:                                              ; preds = %107, %98, %89
  %114 = phi ptr [ %112, %107 ], [ %90, %98 ], [ %90, %89 ]
  %115 = phi i32 [ %109, %107 ], [ %92, %98 ], [ %92, %89 ]
  %116 = add nuw nsw i64 %91, 1
  %117 = icmp eq i64 %116, %87
  br i1 %117, label %118, label %89, !llvm.loop !391

118:                                              ; preds = %113, %83
  %119 = phi i32 [ %77, %83 ], [ %115, %113 ]
  %120 = load ptr, ptr @listX, align 16, !tbaa !13
  %121 = sext i32 %119 to i64
  tail call void @qsort(ptr noundef %120, i64 noundef %121, i64 noundef 8, ptr noundef nonnull @compare_pic_by_poc_desc) #46
  %122 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %156, label %124

124:                                              ; preds = %118
  %125 = zext i32 %122 to i64
  %126 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %127

127:                                              ; preds = %151, %124
  %128 = phi ptr [ %126, %124 ], [ %152, %151 ]
  %129 = phi i64 [ 0, %124 ], [ %154, %151 ]
  %130 = phi i32 [ %119, %124 ], [ %153, %151 ]
  %131 = getelementptr inbounds ptr, ptr %128, i64 %129
  %132 = load ptr, ptr %131, align 8, !tbaa !13
  %133 = getelementptr inbounds %struct.frame_store, ptr %132, i64 0, i32 11
  %134 = load i32, ptr %133, align 4, !tbaa !384
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %151

136:                                              ; preds = %127
  %137 = load ptr, ptr @img, align 8, !tbaa !13
  %138 = getelementptr inbounds %struct.img_par, ptr %137, i64 0, i32 131
  %139 = load i32, ptr %138, align 8, !tbaa !333
  %140 = getelementptr inbounds %struct.frame_store, ptr %132, i64 0, i32 12
  %141 = load ptr, ptr %140, align 8, !tbaa !355
  %142 = getelementptr inbounds %struct.storable_picture, ptr %141, i64 0, i32 1
  %143 = load i32, ptr %142, align 4, !tbaa !390
  %144 = icmp slt i32 %139, %143
  br i1 %144, label %145, label %151

145:                                              ; preds = %136
  %146 = load ptr, ptr @listX, align 16, !tbaa !13
  %147 = add nsw i32 %130, 1
  %148 = sext i32 %130 to i64
  %149 = getelementptr inbounds ptr, ptr %146, i64 %148
  store ptr %141, ptr %149, align 8, !tbaa !13
  %150 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %151

151:                                              ; preds = %145, %136, %127
  %152 = phi ptr [ %150, %145 ], [ %128, %136 ], [ %128, %127 ]
  %153 = phi i32 [ %147, %145 ], [ %130, %136 ], [ %130, %127 ]
  %154 = add nuw nsw i64 %129, 1
  %155 = icmp eq i64 %154, %125
  br i1 %155, label %156, label %127, !llvm.loop !392

156:                                              ; preds = %151, %118
  %157 = phi i32 [ %119, %118 ], [ %153, %151 ]
  %158 = load ptr, ptr @listX, align 16, !tbaa !13
  %159 = getelementptr inbounds ptr, ptr %158, i64 %121
  %160 = sub nsw i32 %157, %119
  %161 = sext i32 %160 to i64
  tail call void @qsort(ptr noundef %159, i64 noundef %161, i64 noundef 8, ptr noundef nonnull @compare_pic_by_poc_asc) #46
  %162 = icmp sgt i32 %119, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %156
  %164 = zext i32 %119 to i64
  br label %168

165:                                              ; preds = %168, %156
  %166 = icmp slt i32 %119, %157
  %167 = sext i32 %157 to i64
  br i1 %166, label %180, label %190

168:                                              ; preds = %168, %163
  %169 = phi i64 [ 0, %163 ], [ %178, %168 ]
  %170 = trunc i64 %169 to i32
  %171 = load ptr, ptr @listX, align 16, !tbaa !13
  %172 = getelementptr inbounds ptr, ptr %171, i64 %169
  %173 = load ptr, ptr %172, align 8, !tbaa !13
  %174 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %175 = add nsw i32 %160, %170
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds ptr, ptr %174, i64 %176
  store ptr %173, ptr %177, align 8, !tbaa !13
  %178 = add nuw nsw i64 %169, 1
  %179 = icmp eq i64 %178, %164
  br i1 %179, label %165, label %168, !llvm.loop !393

180:                                              ; preds = %180, %165
  %181 = phi i64 [ %188, %180 ], [ %121, %165 ]
  %182 = load ptr, ptr @listX, align 16, !tbaa !13
  %183 = getelementptr inbounds ptr, ptr %182, i64 %181
  %184 = load ptr, ptr %183, align 8, !tbaa !13
  %185 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %186 = sub nsw i64 %181, %121
  %187 = getelementptr inbounds ptr, ptr %185, i64 %186
  store ptr %184, ptr %187, align 8, !tbaa !13
  %188 = add nsw i64 %181, 1
  %189 = icmp eq i64 %188, %167
  br i1 %189, label %190, label %180, !llvm.loop !394

190:                                              ; preds = %180, %165
  store i32 %157, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), align 4, !tbaa !18
  store i32 %157, ptr @listXsize, align 16, !tbaa !18
  %191 = load ptr, ptr @listX, align 16, !tbaa !13
  %192 = getelementptr inbounds ptr, ptr %191, i64 %167
  tail call void @qsort(ptr noundef %192, i64 noundef 0, i64 noundef 8, ptr noundef nonnull @compare_pic_by_lt_pic_num_asc) #46
  %193 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %194 = load i32, ptr @listXsize, align 16, !tbaa !18
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds ptr, ptr %193, i64 %195
  %197 = sub nsw i32 %157, %194
  %198 = sext i32 %197 to i64
  tail call void @qsort(ptr noundef %196, i64 noundef %198, i64 noundef 8, ptr noundef nonnull @compare_pic_by_lt_pic_num_asc) #46
  br label %199

199:                                              ; preds = %190, %80
  %200 = phi i32 [ %82, %80 ], [ %157, %190 ]
  %201 = phi i32 [ %81, %80 ], [ %157, %190 ]
  %202 = icmp eq i32 %201, %200
  %203 = icmp sgt i32 %201, 1
  %204 = and i1 %203, %202
  br i1 %204, label %205, label %228

205:                                              ; preds = %199
  %206 = load ptr, ptr @listX, align 16, !tbaa !13
  %207 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %208 = zext i32 %200 to i64
  br label %209

209:                                              ; preds = %209, %205
  %210 = phi i64 [ 0, %205 ], [ %218, %209 ]
  %211 = phi i32 [ 0, %205 ], [ %217, %209 ]
  %212 = getelementptr inbounds ptr, ptr %206, i64 %210
  %213 = load ptr, ptr %212, align 8, !tbaa !13
  %214 = getelementptr inbounds ptr, ptr %207, i64 %210
  %215 = load ptr, ptr %214, align 8, !tbaa !13
  %216 = icmp eq ptr %213, %215
  %217 = select i1 %216, i32 %211, i32 1
  %218 = add nuw nsw i64 %210, 1
  %219 = icmp eq i64 %218, %208
  br i1 %219, label %220, label %209, !llvm.loop !395

220:                                              ; preds = %209
  %.lcssa = phi i32 [ %217, %209 ]
  %221 = icmp eq i32 %.lcssa, 0
  br i1 %221, label %222, label %228

222:                                              ; preds = %220
  %223 = load ptr, ptr %207, align 8, !tbaa !13
  %224 = getelementptr inbounds ptr, ptr %207, i64 1
  %225 = load ptr, ptr %224, align 8, !tbaa !13
  store ptr %225, ptr %207, align 8, !tbaa !13
  %226 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %227 = getelementptr inbounds ptr, ptr %226, i64 1
  store ptr %223, ptr %227, align 8, !tbaa !13
  br label %228

228:                                              ; preds = %222, %220, %199
  %229 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %230 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %229, i64 0, i32 25
  %231 = load i32, ptr %230, align 4, !tbaa !396
  %232 = tail call i32 @llvm.smin.i32(i32 %201, i32 %231)
  store i32 %232, ptr @listXsize, align 16, !tbaa !18
  store i32 0, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), align 4, !tbaa !18
  %233 = icmp ult i32 %232, 33
  br i1 %233, label %234, label %243

234:                                              ; preds = %228
  %235 = zext i32 %232 to i64
  br label %236

236:                                              ; preds = %236, %234
  %237 = phi i64 [ %235, %234 ], [ %240, %236 ]
  %238 = load ptr, ptr @listX, align 16, !tbaa !13
  %239 = getelementptr inbounds ptr, ptr %238, i64 %237
  store ptr null, ptr %239, align 8, !tbaa !13
  %240 = add nuw nsw i64 %237, 1
  %241 = and i64 %240, 4294967295
  %242 = icmp eq i64 %241, 33
  br i1 %242, label %243, label %236, !llvm.loop !397

243:                                              ; preds = %236, %228
  br label %244

244:                                              ; preds = %244, %243
  %245 = phi i64 [ %248, %244 ], [ 0, %243 ]
  %246 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %247 = getelementptr inbounds ptr, ptr %246, i64 %245
  store ptr null, ptr %247, align 8, !tbaa !13
  %248 = add nuw nsw i64 %245, 1
  %249 = icmp eq i64 %248, 33
  br i1 %249, label %250, label %244, !llvm.loop !398

250:                                              ; preds = %244
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.smax.i8(i8, i8) #12

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @compare_pic_by_pic_num_desc(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #8 {
  %3 = load ptr, ptr %0, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 11
  %5 = load i32, ptr %4, align 8, !tbaa !342
  %6 = load ptr, ptr %1, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 11
  %8 = load i32, ptr %7, align 8, !tbaa !342
  %9 = icmp slt i32 %5, %8
  %10 = icmp sgt i32 %5, %8
  %11 = sext i1 %10 to i32
  %12 = select i1 %9, i32 1, i32 %11
  ret i32 %12
}

; Function Attrs: nofree optsize
declare void @qsort(ptr noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #27

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @compare_pic_by_poc_desc(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #8 {
  %3 = load ptr, ptr %0, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !390
  %6 = load ptr, ptr %1, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 1
  %8 = load i32, ptr %7, align 4, !tbaa !390
  %9 = icmp slt i32 %5, %8
  %10 = icmp sgt i32 %5, %8
  %11 = sext i1 %10 to i32
  %12 = select i1 %9, i32 1, i32 %11
  ret i32 %12
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @compare_pic_by_poc_asc(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #8 {
  %3 = load ptr, ptr %0, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !390
  %6 = load ptr, ptr %1, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 1
  %8 = load i32, ptr %7, align 4, !tbaa !390
  %9 = icmp slt i32 %5, %8
  %10 = icmp sgt i32 %5, %8
  %11 = zext i1 %10 to i32
  %12 = select i1 %9, i32 -1, i32 %11
  ret i32 %12
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @compare_pic_by_lt_pic_num_asc(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #8 {
  %3 = load ptr, ptr %0, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 12
  %5 = load i32, ptr %4, align 4, !tbaa !399
  %6 = load ptr, ptr %1, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 12
  %8 = load i32, ptr %7, align 4, !tbaa !399
  %9 = icmp slt i32 %5, %8
  %10 = icmp sgt i32 %5, %8
  %11 = zext i1 %10 to i32
  %12 = select i1 %9, i32 -1, i32 %11
  ret i32 %12
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @update_ref_list_for_concealment() #9 {
  %1 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %26, label %3

3:                                                ; preds = %0
  %4 = zext i32 %1 to i64
  %5 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %6

6:                                                ; preds = %21, %3
  %7 = phi ptr [ %5, %3 ], [ %22, %21 ]
  %8 = phi i64 [ 0, %3 ], [ %24, %21 ]
  %9 = phi i32 [ 0, %3 ], [ %23, %21 ]
  %10 = getelementptr inbounds ptr, ptr %7, i64 %8
  %11 = load ptr, ptr %10, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.frame_store, ptr %11, i64 0, i32 11
  %13 = load i32, ptr %12, align 4, !tbaa !384
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %6
  %16 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %17 = add i32 %9, 1
  %18 = zext i32 %9 to i64
  %19 = getelementptr inbounds ptr, ptr %16, i64 %18
  store ptr %11, ptr %19, align 8, !tbaa !13
  %20 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %21

21:                                               ; preds = %15, %6
  %22 = phi ptr [ %20, %15 ], [ %7, %6 ]
  %23 = phi i32 [ %17, %15 ], [ %9, %6 ]
  %24 = add nuw nsw i64 %8, 1
  %25 = icmp eq i64 %24, %4
  br i1 %25, label %26, label %6, !llvm.loop !401

26:                                               ; preds = %21, %0
  %27 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %28 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %27, i64 0, i32 21
  %29 = load i32, ptr %28, align 8, !tbaa !402
  store i32 %29, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal ptr @get_pic_from_dpb(i32 noundef %0, ptr nocapture noundef writeonly %1) #16 {
  %3 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %4 = load ptr, ptr @img, align 8, !tbaa !13
  %5 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 130
  %6 = load i32, ptr %5, align 4, !tbaa !364
  switch i32 %6, label %15 [
    i32 1, label %7
    i32 2, label %11
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 129
  %9 = load i32, ptr %8, align 8, !tbaa !331
  %10 = sub nsw i32 %0, %9
  br label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 129
  %13 = load i32, ptr %12, align 8, !tbaa !331
  %14 = add nsw i32 %13, %0
  br label %15

15:                                               ; preds = %11, %7, %2
  %16 = phi i32 [ %10, %7 ], [ %14, %11 ], [ 0, %2 ]
  %17 = load ptr, ptr @dpb, align 8
  br label %18

18:                                               ; preds = %22, %15
  %19 = phi i32 [ %3, %15 ], [ %20, %22 ]
  %20 = add i32 %19, -1
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %22, label %32

22:                                               ; preds = %18
  %23 = zext i32 %20 to i64
  %24 = getelementptr inbounds ptr, ptr %17, i64 %23
  %25 = load ptr, ptr %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.frame_store, ptr %25, i64 0, i32 10
  %27 = load i32, ptr %26, align 8, !tbaa !403
  %28 = icmp eq i32 %27, %16
  br i1 %28, label %29, label %18, !llvm.loop !404

29:                                               ; preds = %22
  %.lcssa2 = phi ptr [ %25, %22 ]
  %.lcssa1 = phi i32 [ %20, %22 ]
  store i32 %.lcssa1, ptr %1, align 4, !tbaa !18
  %30 = getelementptr inbounds %struct.frame_store, ptr %.lcssa2, i64 0, i32 12
  %31 = load ptr, ptr %30, align 8, !tbaa !355
  br label %32

32:                                               ; preds = %29, %18
  %33 = phi ptr [ %31, %29 ], [ null, %18 ]
  ret ptr %33
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: read) uwtable
define internal i32 @comp(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #28 {
  %3 = load i32, ptr %0, align 4, !tbaa !18
  %4 = load i32, ptr %1, align 4, !tbaa !18
  %5 = sub nsw i32 %3, %4
  ret i32 %5
}

; Function Attrs: nounwind optsize uwtable
define internal void @conceal_non_ref_pics(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #48
  %3 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %74, label %5

5:                                                ; preds = %1
  %6 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %7 = zext i32 %6 to i64
  tail call void @qsort(ptr noundef nonnull @pocs_in_dpb, i64 noundef %7, i64 noundef 4, ptr noundef nonnull @comp) #46
  %8 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %9 = icmp eq i32 %8, %0
  br i1 %9, label %73, label %10

10:                                               ; preds = %5
  %11 = load ptr, ptr @img, align 8, !tbaa !13
  br label %12

12:                                               ; preds = %67, %10
  %13 = phi ptr [ %11, %10 ], [ %68, %67 ]
  %14 = phi i64 [ 0, %10 ], [ %16, %67 ]
  %15 = phi i32 [ %8, %10 ], [ %69, %67 ]
  store i32 %15, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %16 = add nuw nsw i64 %14, 1
  %17 = getelementptr inbounds [100 x i32], ptr @pocs_in_dpb, i64 0, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !18
  %19 = getelementptr inbounds [100 x i32], ptr @pocs_in_dpb, i64 0, i64 %14
  %20 = load i32, ptr %19, align 4, !tbaa !18
  %21 = sub nsw i32 %18, %20
  %22 = getelementptr inbounds %struct.img_par, ptr %13, i64 0, i32 129
  %23 = load i32, ptr %22, align 8, !tbaa !331
  %24 = icmp sgt i32 %21, %23
  br i1 %24, label %25, label %67

25:                                               ; preds = %12
  %26 = getelementptr inbounds %struct.img_par, ptr %13, i64 0, i32 11
  %27 = load i32, ptr %26, align 8, !tbaa !337
  %28 = getelementptr inbounds %struct.img_par, ptr %13, i64 0, i32 12
  %29 = load i32, ptr %28, align 4, !tbaa !338
  %30 = getelementptr inbounds %struct.img_par, ptr %13, i64 0, i32 13
  %31 = load i32, ptr %30, align 8, !tbaa !339
  %32 = getelementptr inbounds %struct.img_par, ptr %13, i64 0, i32 15
  %33 = load i32, ptr %32, align 8, !tbaa !340
  %34 = tail call ptr @alloc_storable_picture(i32 noundef 0, i32 noundef %27, i32 noundef %29, i32 noundef %31, i32 noundef %33) #46
  %35 = load i32, ptr %19, align 4, !tbaa !18
  %36 = load ptr, ptr @img, align 8, !tbaa !13
  %37 = getelementptr inbounds %struct.img_par, ptr %36, i64 0, i32 129
  %38 = load i32, ptr %37, align 8, !tbaa !331
  %39 = add nsw i32 %38, %35
  %40 = getelementptr inbounds %struct.img_par, ptr %36, i64 0, i32 131
  %41 = load i32, ptr %40, align 8, !tbaa !333
  %42 = icmp sgt i32 %39, %41
  br i1 %42, label %43, label %67

43:                                               ; preds = %25
  store i32 %39, ptr %40, align 8, !tbaa !333
  %44 = getelementptr inbounds %struct.storable_picture, ptr %34, i64 0, i32 1
  %45 = insertelement <4 x i32> poison, i32 %39, i64 0
  %46 = shufflevector <4 x i32> %45, <4 x i32> poison, <4 x i32> zeroinitializer
  store <4 x i32> %46, ptr %44, align 4, !tbaa !18
  %47 = call ptr @get_pic_from_dpb(i32 noundef %39, ptr noundef nonnull %2) #47
  %48 = load i32, ptr %2, align 4, !tbaa !18
  %49 = add i32 %48, 1
  store i32 %49, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %50 = getelementptr inbounds %struct.storable_picture, ptr %47, i64 0, i32 9
  %51 = load i32, ptr %50, align 8, !tbaa !343
  %52 = add i32 %51, 1
  %53 = getelementptr inbounds %struct.img_par, ptr %36, i64 0, i32 132
  store i32 %52, ptr %53, align 4, !tbaa !386
  tail call void @update_ref_list_for_concealment() #47
  %54 = load ptr, ptr @img, align 8, !tbaa !13
  %55 = getelementptr inbounds %struct.img_par, ptr %54, i64 0, i32 134
  store i32 1, ptr %55, align 4, !tbaa !358
  tail call fastcc void @copy_to_conceal(ptr noundef %47, ptr noundef %34, ptr noundef %54) #47
  %56 = tail call noalias dereferenceable_or_null(24) ptr @calloc(i64 noundef 1, i64 noundef 24) #45
  %57 = icmp eq ptr %56, null
  %58 = load ptr, ptr @img, align 8, !tbaa !13
  br i1 %57, label %61, label %59

59:                                               ; preds = %43
  store ptr %34, ptr %56, align 8, !tbaa !406
  %60 = getelementptr inbounds %struct.concealment_node, ptr %56, i64 0, i32 1
  store i32 %39, ptr %60, align 8, !tbaa !408
  br label %61

61:                                               ; preds = %59, %43
  %62 = load ptr, ptr @concealment_head, align 8, !tbaa !13
  %63 = icmp eq ptr %62, null
  %64 = load ptr, ptr @concealment_end, align 8
  %65 = getelementptr inbounds %struct.concealment_node, ptr %64, i64 0, i32 2
  %66 = select i1 %63, ptr @concealment_head, ptr %65
  store ptr %56, ptr %66, align 8, !tbaa !13
  store ptr %56, ptr @concealment_end, align 8, !tbaa !13
  br label %67

67:                                               ; preds = %61, %25, %12
  %68 = phi ptr [ %13, %12 ], [ %58, %61 ], [ %36, %25 ]
  %69 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %70 = sub i32 %69, %0
  %71 = zext i32 %70 to i64
  %72 = icmp ult i64 %16, %71
  br i1 %72, label %12, label %73, !llvm.loop !409

73:                                               ; preds = %67, %5
  store i32 %3, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  br label %74

74:                                               ; preds = %73, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #48
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind optsize willreturn memory(readwrite, argmem: none, inaccessiblemem: none) uwtable
define internal void @sliding_window_poc_management(ptr nocapture noundef readnone %0) #29 {
  %2 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %3 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %4 = icmp eq i32 %2, %3
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = add i32 %2, -1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  %9 = zext i32 %6 to i64
  %10 = shl nuw nsw i64 %9, 2
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 16 @pocs_in_dpb, ptr nonnull align 4 getelementptr inbounds ([100 x i32], ptr @pocs_in_dpb, i64 0, i64 1), i64 %10, i1 false), !tbaa !18
  br label %11

11:                                               ; preds = %8, %5, %1
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @write_lost_non_ref_pic(i32 noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.frame_store, align 8
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %3) #48
  %4 = icmp sgt i32 %0, 0
  br i1 %4, label %5, label %25

5:                                                ; preds = %2
  %6 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 7), align 8, !tbaa !410
  %7 = sub nsw i32 %0, %6
  %8 = load ptr, ptr @img, align 8, !tbaa !13
  %9 = getelementptr inbounds %struct.img_par, ptr %8, i64 0, i32 129
  %10 = load i32, ptr %9, align 8, !tbaa !331
  %11 = icmp sgt i32 %7, %10
  br i1 %11, label %12, label %25

12:                                               ; preds = %5
  %13 = load ptr, ptr @concealment_head, align 8, !tbaa !13
  %14 = load ptr, ptr %13, align 8, !tbaa !406
  %15 = getelementptr inbounds %struct.frame_store, ptr %3, i64 0, i32 12
  store ptr %14, ptr %15, align 8, !tbaa !355
  %16 = getelementptr inbounds %struct.frame_store, ptr %3, i64 0, i32 9
  store i32 0, ptr %16, align 4, !tbaa !411
  %17 = getelementptr inbounds %struct.frame_store, ptr %3, i64 0, i32 1
  store i32 0, ptr %17, align 4, !tbaa !412
  store i32 3, ptr %3, align 8, !tbaa !353
  call void @write_stored_frame(ptr noundef nonnull %3, i32 noundef %1) #46
  %18 = load ptr, ptr @concealment_head, align 8, !tbaa !13
  %19 = getelementptr inbounds %struct.concealment_node, ptr %18, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !413
  store ptr %20, ptr @concealment_head, align 8, !tbaa !13
  %21 = load ptr, ptr @concealment_end, align 8, !tbaa !13
  %22 = icmp eq ptr %21, %18
  br i1 %22, label %23, label %24

23:                                               ; preds = %12
  store ptr %20, ptr @concealment_end, align 8, !tbaa !13
  br label %24

24:                                               ; preds = %23, %12
  call void @free(ptr noundef nonnull %18) #46
  br label %25

25:                                               ; preds = %24, %5, %2
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %3) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @write_lost_ref_after_idr(i32 noundef %0) #0 {
  %2 = load ptr, ptr @last_out_fs, align 8, !tbaa !13
  %3 = getelementptr inbounds %struct.frame_store, ptr %2, i64 0, i32 12
  %4 = load ptr, ptr %3, align 8, !tbaa !355
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %19

6:                                                ; preds = %1
  %7 = load ptr, ptr @img, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.img_par, ptr %7, i64 0, i32 11
  %9 = load i32, ptr %8, align 8, !tbaa !337
  %10 = getelementptr inbounds %struct.img_par, ptr %7, i64 0, i32 12
  %11 = load i32, ptr %10, align 4, !tbaa !338
  %12 = getelementptr inbounds %struct.img_par, ptr %7, i64 0, i32 13
  %13 = load i32, ptr %12, align 8, !tbaa !339
  %14 = getelementptr inbounds %struct.img_par, ptr %7, i64 0, i32 15
  %15 = load i32, ptr %14, align 8, !tbaa !340
  %16 = tail call ptr @alloc_storable_picture(i32 noundef 0, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15) #46
  %17 = load ptr, ptr @last_out_fs, align 8, !tbaa !13
  %18 = getelementptr inbounds %struct.frame_store, ptr %17, i64 0, i32 12
  store ptr %16, ptr %18, align 8, !tbaa !355
  store i32 3, ptr %17, align 8, !tbaa !353
  br label %19

19:                                               ; preds = %6, %1
  %20 = phi ptr [ %16, %6 ], [ %4, %1 ]
  %21 = load ptr, ptr @img, align 8, !tbaa !13
  %22 = getelementptr inbounds %struct.img_par, ptr %21, i64 0, i32 130
  %23 = load i32, ptr %22, align 4, !tbaa !364
  %24 = icmp eq i32 %23, 2
  br i1 %24, label %25, label %26

25:                                               ; preds = %19
  store i32 1, ptr %22, align 4, !tbaa !364
  br label %26

26:                                               ; preds = %25, %19
  %27 = phi i32 [ 2, %25 ], [ 1, %19 ]
  %28 = load ptr, ptr @dpb, align 8, !tbaa !352
  %29 = sext i32 %0 to i64
  %30 = getelementptr inbounds ptr, ptr %28, i64 %29
  %31 = load ptr, ptr %30, align 8, !tbaa !13
  %32 = getelementptr inbounds %struct.frame_store, ptr %31, i64 0, i32 12
  %33 = load ptr, ptr %32, align 8, !tbaa !355
  tail call fastcc void @copy_to_conceal(ptr noundef %33, ptr noundef %20, ptr noundef nonnull %21) #47
  %34 = load ptr, ptr @img, align 8, !tbaa !13
  %35 = getelementptr inbounds %struct.img_par, ptr %34, i64 0, i32 130
  store i32 %27, ptr %35, align 4, !tbaa !364
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define internal i32 @set_ec_flag(i32 noundef %0) #18 {
  switch i32 %0, label %20 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %4
    i32 3, label %5
    i32 4, label %6
    i32 5, label %12
    i32 6, label %7
    i32 7, label %8
    i32 8, label %9
    i32 9, label %10
    i32 10, label %11
    i32 11, label %13
    i32 12, label %14
    i32 13, label %15
    i32 14, label %16
    i32 15, label %17
    i32 16, label %18
    i32 17, label %19
  ]

2:                                                ; preds = %1
  store i32 1, ptr @ec_flag, align 16, !tbaa !18
  br label %3

3:                                                ; preds = %2, %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 1), align 4, !tbaa !18
  br label %4

4:                                                ; preds = %3, %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 2), align 8, !tbaa !18
  br label %5

5:                                                ; preds = %4, %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 3), align 4, !tbaa !18
  br label %12

6:                                                ; preds = %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 4), align 16, !tbaa !18
  br label %7

7:                                                ; preds = %6, %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 6), align 8, !tbaa !18
  br label %8

8:                                                ; preds = %7, %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 7), align 4, !tbaa !18
  br label %9

9:                                                ; preds = %8, %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 8), align 16, !tbaa !18
  br label %10

10:                                               ; preds = %9, %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 9), align 4, !tbaa !18
  br label %11

11:                                               ; preds = %10, %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 10), align 8, !tbaa !18
  br label %20

12:                                               ; preds = %5, %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 5), align 4, !tbaa !18
  br label %13

13:                                               ; preds = %12, %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 11), align 4, !tbaa !18
  br label %14

14:                                               ; preds = %13, %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 12), align 16, !tbaa !18
  br label %15

15:                                               ; preds = %14, %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 13), align 4, !tbaa !18
  br label %16

16:                                               ; preds = %15, %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 14), align 8, !tbaa !18
  br label %17

17:                                               ; preds = %16, %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 15), align 4, !tbaa !18
  br label %20

18:                                               ; preds = %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 16), align 16, !tbaa !18
  br label %20

19:                                               ; preds = %1
  store i32 1, ptr getelementptr inbounds ([20 x i32], ptr @ec_flag, i64 0, i64 17), align 4, !tbaa !18
  br label %20

20:                                               ; preds = %19, %18, %17, %11, %1
  ret i32 1
}

; Function Attrs: noreturn nounwind optsize uwtable
define dso_local void @error(ptr noundef %0, i32 noundef %1) #30 {
  %3 = load ptr, ptr @stderr, align 8, !tbaa !13
  %4 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %3, ptr noundef nonnull @.str.29, ptr noundef %0) #50
  tail call void @flush_dpb() #46
  tail call void @exit(i32 noundef %1) #51
  unreachable
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: noreturn nounwind optsize
declare void @exit(i32 noundef) local_unnamed_addr #31

; Function Attrs: nounwind optsize uwtable
define internal i32 @FmoInit(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 28
  %4 = load i32, ptr %3, align 4, !tbaa !414
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 27
  %7 = load i32, ptr %6, align 4, !tbaa !415
  %8 = add i32 %7, 1
  %9 = mul i32 %8, %5
  %10 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 13
  %11 = load i32, ptr %10, align 8, !tbaa !416
  %12 = icmp eq i32 %11, 6
  br i1 %12, label %13, label %19

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 19
  %15 = load i32, ptr %14, align 4, !tbaa !417
  %16 = add i32 %15, 1
  %17 = icmp eq i32 %16, %9
  br i1 %17, label %19, label %18

18:                                               ; preds = %13
  tail call void @error(ptr noundef nonnull @.str.30, i32 noundef 500) #46
  br label %19

19:                                               ; preds = %18, %13, %2
  %20 = load ptr, ptr @MapUnitToSliceGroupMap, align 8, !tbaa !13
  %21 = icmp eq ptr %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  tail call void @free(ptr noundef nonnull %20) #46
  br label %23

23:                                               ; preds = %22, %19
  %24 = zext i32 %9 to i64
  %25 = shl nuw nsw i64 %24, 2
  %26 = tail call noalias ptr @malloc(i64 noundef %25) #49
  store ptr %26, ptr @MapUnitToSliceGroupMap, align 8, !tbaa !13
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %34

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 19
  %30 = load i32, ptr %29, align 4, !tbaa !417
  %31 = shl i32 %30, 2
  %32 = add i32 %31, 4
  %33 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.1.31, i32 noundef %32) #47
  tail call void @exit(i32 noundef -1) #51
  unreachable

34:                                               ; preds = %23
  %35 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 12
  %36 = load i32, ptr %35, align 4, !tbaa !418
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %26, i8 0, i64 %25, i1 false)
  br label %418

39:                                               ; preds = %34
  %40 = load i32, ptr %10, align 8, !tbaa !416
  switch i32 %40, label %416 [
    i32 0, label %41
    i32 1, label %79
    i32 2, label %98
    i32 3, label %172
    i32 4, label %296
    i32 5, label %353
    i32 6, label %404
  ]

41:                                               ; preds = %78, %39
  %42 = phi i32 [ %.lcssa3, %78 ], [ %36, %39 ]
  %43 = phi i32 [ %.lcssa2, %78 ], [ %40, %39 ]
  %44 = icmp ult i32 %43, %9
  br i1 %44, label %45, label %418

45:                                               ; preds = %69, %41
  %46 = phi i32 [ %70, %69 ], [ %42, %41 ]
  %47 = phi i32 [ %74, %69 ], [ %43, %41 ]
  %48 = phi i32 [ %72, %69 ], [ 0, %41 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 14, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !18
  %52 = load ptr, ptr @MapUnitToSliceGroupMap, align 8
  %53 = zext i32 %47 to i64
  %54 = tail call i32 @llvm.usub.sat.i32(i32 %9, i32 %47)
  %55 = zext i32 %54 to i64
  %56 = icmp ugt i32 %9, %47
  br i1 %56, label %57, label %69

57:                                               ; preds = %57, %45
  %58 = phi i64 [ %61, %57 ], [ 0, %45 ]
  %59 = add nuw nsw i64 %58, %53
  %60 = getelementptr inbounds i32, ptr %52, i64 %59
  store i32 %48, ptr %60, align 4, !tbaa !18
  %61 = add nuw nsw i64 %58, 1
  %62 = load i32, ptr %50, align 4, !tbaa !18
  %63 = zext i32 %62 to i64
  %64 = icmp uge i64 %58, %63
  %65 = icmp eq i64 %61, %55
  %66 = select i1 %64, i1 true, i1 %65
  br i1 %66, label %67, label %57, !llvm.loop !419

67:                                               ; preds = %57
  %.lcssa = phi i32 [ %62, %57 ]
  %68 = load i32, ptr %35, align 4, !tbaa !418
  br label %69

69:                                               ; preds = %67, %45
  %70 = phi i32 [ %46, %45 ], [ %68, %67 ]
  %71 = phi i32 [ %51, %45 ], [ %.lcssa, %67 ]
  %72 = add i32 %48, 1
  %73 = add i32 %47, 1
  %74 = add i32 %73, %71
  %75 = icmp ule i32 %72, %70
  %76 = icmp ult i32 %74, %9
  %77 = select i1 %75, i1 %76, i1 false
  br i1 %77, label %45, label %78, !llvm.loop !420

78:                                               ; preds = %69
  %.lcssa3 = phi i32 [ %70, %69 ]
  %.lcssa2 = phi i32 [ %74, %69 ]
  %.lcssa1 = phi i1 [ %76, %69 ]
  br i1 %.lcssa1, label %41, label %418, !llvm.loop !421

79:                                               ; preds = %39
  %80 = icmp eq i32 %9, 0
  br i1 %80, label %418, label %81

81:                                               ; preds = %79
  %82 = load ptr, ptr @img, align 8, !tbaa !13
  %83 = getelementptr inbounds %struct.img_par, ptr %82, i64 0, i32 87
  %84 = add i32 %36, 1
  br label %85

85:                                               ; preds = %85, %81
  %86 = phi i64 [ 0, %81 ], [ %96, %85 ]
  %87 = load i32, ptr %83, align 4, !tbaa !422
  %88 = trunc i64 %86 to i32
  %89 = urem i32 %88, %87
  %90 = udiv i32 %88, %87
  %91 = mul i32 %90, %84
  %92 = lshr i32 %91, 1
  %93 = add i32 %92, %89
  %94 = urem i32 %93, %84
  %95 = getelementptr inbounds i32, ptr %26, i64 %86
  store i32 %94, ptr %95, align 4, !tbaa !18
  %96 = add nuw nsw i64 %86, 1
  %97 = icmp eq i64 %96, %24
  br i1 %97, label %418, label %85, !llvm.loop !423

98:                                               ; preds = %39
  %99 = icmp eq i32 %9, 0
  br i1 %99, label %132, label %100

100:                                              ; preds = %98
  %101 = add nuw nsw i64 %24, 3
  %102 = and i64 %101, 8589934588
  %103 = add nsw i64 %24, -1
  %104 = insertelement <4 x i64> poison, i64 %103, i64 0
  %105 = shufflevector <4 x i64> %104, <4 x i64> poison, <4 x i32> zeroinitializer
  br label %106

106:                                              ; preds = %128, %100
  %107 = phi i64 [ 0, %100 ], [ %129, %128 ]
  %108 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %100 ], [ %130, %128 ]
  %109 = icmp ule <4 x i64> %108, %105
  %110 = extractelement <4 x i1> %109, i64 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %106
  %112 = getelementptr inbounds i32, ptr %26, i64 %107
  store i32 %36, ptr %112, align 4, !tbaa !18
  br label %113

113:                                              ; preds = %111, %106
  %114 = extractelement <4 x i1> %109, i64 1
  br i1 %114, label %115, label %118

115:                                              ; preds = %113
  %116 = or i64 %107, 1
  %117 = getelementptr inbounds i32, ptr %26, i64 %116
  store i32 %36, ptr %117, align 4, !tbaa !18
  br label %118

118:                                              ; preds = %115, %113
  %119 = extractelement <4 x i1> %109, i64 2
  br i1 %119, label %120, label %123

120:                                              ; preds = %118
  %121 = or i64 %107, 2
  %122 = getelementptr inbounds i32, ptr %26, i64 %121
  store i32 %36, ptr %122, align 4, !tbaa !18
  br label %123

123:                                              ; preds = %120, %118
  %124 = extractelement <4 x i1> %109, i64 3
  br i1 %124, label %125, label %128

125:                                              ; preds = %123
  %126 = or i64 %107, 3
  %127 = getelementptr inbounds i32, ptr %26, i64 %126
  store i32 %36, ptr %127, align 4, !tbaa !18
  br label %128

128:                                              ; preds = %125, %123
  %129 = add i64 %107, 4
  %130 = add <4 x i64> %108, <i64 4, i64 4, i64 4, i64 4>
  %131 = icmp eq i64 %129, %102
  br i1 %131, label %132, label %106, !llvm.loop !424

132:                                              ; preds = %128, %98
  %133 = add i32 %36, -1
  %134 = icmp sgt i32 %133, -1
  br i1 %134, label %135, label %418

135:                                              ; preds = %132
  %136 = load ptr, ptr @img, align 8, !tbaa !13
  %137 = getelementptr inbounds %struct.img_par, ptr %136, i64 0, i32 87
  %138 = zext i32 %133 to i64
  br label %142

139:                                              ; preds = %169, %142
  %140 = add nsw i64 %143, -1
  %141 = icmp sgt i64 %143, 0
  br i1 %141, label %142, label %418, !llvm.loop !425

142:                                              ; preds = %139, %135
  %143 = phi i64 [ %140, %139 ], [ %138, %135 ]
  %144 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 15, i64 %143
  %145 = load i32, ptr %144, align 4, !tbaa !18
  %146 = load i32, ptr %137, align 4, !tbaa !422
  %147 = udiv i32 %145, %146
  %148 = urem i32 %145, %146
  %149 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 16, i64 %143
  %150 = load i32, ptr %149, align 4, !tbaa !18
  %151 = udiv i32 %150, %146
  %152 = urem i32 %150, %146
  %153 = icmp ugt i32 %147, %151
  br i1 %153, label %139, label %154

154:                                              ; preds = %142
  %155 = icmp ugt i32 %148, %152
  %156 = load ptr, ptr @MapUnitToSliceGroupMap, align 8
  %157 = trunc i64 %143 to i32
  br label %158

158:                                              ; preds = %169, %154
  %159 = phi i32 [ %147, %154 ], [ %170, %169 ]
  br i1 %155, label %169, label %160

160:                                              ; preds = %160, %158
  %161 = phi i32 [ %167, %160 ], [ %148, %158 ]
  %162 = load i32, ptr %137, align 4, !tbaa !422
  %163 = mul i32 %162, %159
  %164 = add i32 %163, %161
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds i32, ptr %156, i64 %165
  store i32 %157, ptr %166, align 4, !tbaa !18
  %167 = add i32 %161, 1
  %168 = icmp ugt i32 %167, %152
  br i1 %168, label %169, label %160, !llvm.loop !426

169:                                              ; preds = %160, %158
  %170 = add i32 %159, 1
  %171 = icmp ugt i32 %170, %151
  br i1 %171, label %139, label %158, !llvm.loop !427

172:                                              ; preds = %39
  %173 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 18
  %174 = load i32, ptr %173, align 8, !tbaa !428
  %175 = add i32 %174, 1
  %176 = load ptr, ptr @img, align 8, !tbaa !13
  %177 = getelementptr inbounds %struct.img_par, ptr %176, i64 0, i32 49
  %178 = load i32, ptr %177, align 8, !tbaa !429
  %179 = mul i32 %178, %175
  %180 = tail call i32 @llvm.smin.i32(i32 %179, i32 %9)
  %181 = icmp eq i32 %9, 0
  br i1 %181, label %418, label %182

182:                                              ; preds = %172
  %183 = add nuw nsw i64 %24, 3
  %184 = and i64 %183, 8589934588
  %185 = add nsw i64 %24, -1
  %186 = insertelement <4 x i64> poison, i64 %185, i64 0
  %187 = shufflevector <4 x i64> %186, <4 x i64> poison, <4 x i32> zeroinitializer
  br label %188

188:                                              ; preds = %210, %182
  %189 = phi i64 [ 0, %182 ], [ %211, %210 ]
  %190 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %182 ], [ %212, %210 ]
  %191 = icmp ule <4 x i64> %190, %187
  %192 = extractelement <4 x i1> %191, i64 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %188
  %194 = getelementptr inbounds i32, ptr %26, i64 %189
  store i32 2, ptr %194, align 4, !tbaa !18
  br label %195

195:                                              ; preds = %193, %188
  %196 = extractelement <4 x i1> %191, i64 1
  br i1 %196, label %197, label %200

197:                                              ; preds = %195
  %198 = or i64 %189, 1
  %199 = getelementptr inbounds i32, ptr %26, i64 %198
  store i32 2, ptr %199, align 4, !tbaa !18
  br label %200

200:                                              ; preds = %197, %195
  %201 = extractelement <4 x i1> %191, i64 2
  br i1 %201, label %202, label %205

202:                                              ; preds = %200
  %203 = or i64 %189, 2
  %204 = getelementptr inbounds i32, ptr %26, i64 %203
  store i32 2, ptr %204, align 4, !tbaa !18
  br label %205

205:                                              ; preds = %202, %200
  %206 = extractelement <4 x i1> %191, i64 3
  br i1 %206, label %207, label %210

207:                                              ; preds = %205
  %208 = or i64 %189, 3
  %209 = getelementptr inbounds i32, ptr %26, i64 %208
  store i32 2, ptr %209, align 4, !tbaa !18
  br label %210

210:                                              ; preds = %207, %205
  %211 = add i64 %189, 4
  %212 = add <4 x i64> %190, <i64 4, i64 4, i64 4, i64 4>
  %213 = icmp eq i64 %211, %184
  br i1 %213, label %214, label %188, !llvm.loop !430

214:                                              ; preds = %210
  %215 = getelementptr inbounds %struct.img_par, ptr %176, i64 0, i32 87
  %216 = getelementptr inbounds %struct.img_par, ptr %176, i64 0, i32 88
  %217 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 17
  %218 = load i32, ptr %217, align 4, !tbaa !431
  %219 = add i32 %218, -1
  %220 = load i32, ptr %216, align 8, !tbaa !432
  %221 = sub i32 %220, %218
  %222 = lshr i32 %221, 1
  %223 = load i32, ptr %215, align 4, !tbaa !422
  %224 = sub i32 %223, %218
  %225 = lshr i32 %224, 1
  %226 = shl i32 %218, 1
  %227 = add i32 %226, -1
  %228 = sub i32 1, %226
  br label %229

229:                                              ; preds = %285, %214
  %230 = phi i32 [ 0, %214 ], [ %294, %285 ]
  %231 = phi i32 [ %218, %214 ], [ %293, %285 ]
  %232 = phi i32 [ %219, %214 ], [ %292, %285 ]
  %233 = phi i32 [ %222, %214 ], [ %291, %285 ]
  %234 = phi i32 [ %225, %214 ], [ %290, %285 ]
  %235 = phi i32 [ %222, %214 ], [ %289, %285 ]
  %236 = phi i32 [ %225, %214 ], [ %288, %285 ]
  %237 = phi i32 [ %222, %214 ], [ %287, %285 ]
  %238 = phi i32 [ %225, %214 ], [ %286, %285 ]
  %239 = load i32, ptr %215, align 4, !tbaa !422
  %240 = mul i32 %239, %233
  %241 = add i32 %240, %234
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds i32, ptr %26, i64 %242
  %244 = load i32, ptr %243, align 4, !tbaa !18
  %245 = icmp eq i32 %244, 2
  %246 = zext i1 %245 to i32
  br i1 %245, label %247, label %250

247:                                              ; preds = %229
  %248 = icmp uge i32 %230, %180
  %249 = zext i1 %248 to i32
  store i32 %249, ptr %243, align 4, !tbaa !18
  br label %250

250:                                              ; preds = %247, %229
  %251 = icmp eq i32 %232, -1
  %252 = icmp eq i32 %234, %238
  %253 = select i1 %251, i1 %252, i1 false
  br i1 %253, label %254, label %257

254:                                              ; preds = %250
  %255 = tail call i32 @llvm.smax.i32(i32 %234, i32 1)
  %256 = add nsw i32 %255, -1
  br label %285

257:                                              ; preds = %250
  %258 = icmp eq i32 %232, 1
  %259 = icmp eq i32 %234, %236
  %260 = select i1 %258, i1 %259, i1 false
  br i1 %260, label %261, label %266

261:                                              ; preds = %257
  %262 = add nsw i32 %234, 1
  %263 = load i32, ptr %215, align 4, !tbaa !422
  %264 = add nsw i32 %263, -1
  %265 = tail call i32 @llvm.smin.i32(i32 %262, i32 %264)
  br label %285

266:                                              ; preds = %257
  %267 = icmp eq i32 %231, -1
  %268 = icmp eq i32 %233, %237
  %269 = select i1 %267, i1 %268, i1 false
  br i1 %269, label %270, label %273

270:                                              ; preds = %266
  %271 = tail call i32 @llvm.smax.i32(i32 %233, i32 1)
  %272 = add nsw i32 %271, -1
  br label %285

273:                                              ; preds = %266
  %274 = icmp eq i32 %231, 1
  %275 = icmp eq i32 %233, %235
  %276 = select i1 %274, i1 %275, i1 false
  br i1 %276, label %277, label %282

277:                                              ; preds = %273
  %278 = add nsw i32 %233, 1
  %279 = load i32, ptr %216, align 8, !tbaa !432
  %280 = add nsw i32 %279, -1
  %281 = tail call i32 @llvm.smin.i32(i32 %278, i32 %280)
  br label %285

282:                                              ; preds = %273
  %283 = add nsw i32 %234, %232
  %284 = add nsw i32 %233, %231
  br label %285

285:                                              ; preds = %282, %277, %270, %261, %254
  %286 = phi i32 [ %256, %254 ], [ %238, %261 ], [ %238, %270 ], [ %238, %277 ], [ %238, %282 ]
  %287 = phi i32 [ %237, %254 ], [ %237, %261 ], [ %272, %270 ], [ %237, %277 ], [ %237, %282 ]
  %288 = phi i32 [ %236, %254 ], [ %265, %261 ], [ %236, %270 ], [ %236, %277 ], [ %236, %282 ]
  %289 = phi i32 [ %235, %254 ], [ %235, %261 ], [ %235, %270 ], [ %281, %277 ], [ %235, %282 ]
  %290 = phi i32 [ %256, %254 ], [ %265, %261 ], [ %234, %270 ], [ %234, %277 ], [ %283, %282 ]
  %291 = phi i32 [ %233, %254 ], [ %233, %261 ], [ %272, %270 ], [ %281, %277 ], [ %284, %282 ]
  %292 = phi i32 [ 0, %254 ], [ 0, %261 ], [ %228, %270 ], [ %227, %277 ], [ %232, %282 ]
  %293 = phi i32 [ %227, %254 ], [ %228, %261 ], [ 0, %270 ], [ 0, %277 ], [ %231, %282 ]
  %294 = add nuw i32 %230, %246
  %295 = icmp ult i32 %294, %9
  br i1 %295, label %229, label %418, !llvm.loop !433

296:                                              ; preds = %39
  %297 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 17
  %298 = load i32, ptr %297, align 4, !tbaa !431
  %299 = icmp eq i32 %9, 0
  br i1 %299, label %418, label %300

300:                                              ; preds = %296
  %301 = icmp eq i32 %298, 0
  %302 = load ptr, ptr @img, align 8, !tbaa !13
  %303 = getelementptr inbounds %struct.img_par, ptr %302, i64 0, i32 49
  %304 = load i32, ptr %303, align 8, !tbaa !429
  %305 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 18
  %306 = load i32, ptr %305, align 8, !tbaa !428
  %307 = add i32 %306, 1
  %308 = mul i32 %307, %304
  %309 = tail call i32 @llvm.smin.i32(i32 %308, i32 %9)
  %310 = sub i32 %9, %309
  %311 = select i1 %301, i32 %309, i32 %310
  %312 = sub i32 1, %298
  %313 = zext i32 %311 to i64
  %314 = add nuw nsw i64 %24, 3
  %315 = and i64 %314, 8589934588
  %316 = add nsw i64 %24, -1
  %317 = insertelement <4 x i64> poison, i64 %316, i64 0
  %318 = shufflevector <4 x i64> %317, <4 x i64> poison, <4 x i32> zeroinitializer
  br label %319

319:                                              ; preds = %349, %300
  %320 = phi i64 [ 0, %300 ], [ %350, %349 ]
  %321 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %300 ], [ %351, %349 ]
  %322 = icmp ule <4 x i64> %321, %318
  %323 = extractelement <4 x i1> %322, i64 0
  br i1 %323, label %324, label %328

324:                                              ; preds = %319
  %325 = icmp ult i64 %320, %313
  %326 = getelementptr inbounds i32, ptr %26, i64 %320
  %327 = select i1 %325, i32 %298, i32 %312
  store i32 %327, ptr %326, align 4
  br label %328

328:                                              ; preds = %324, %319
  %329 = extractelement <4 x i1> %322, i64 1
  br i1 %329, label %330, label %335

330:                                              ; preds = %328
  %331 = or i64 %320, 1
  %332 = icmp ult i64 %331, %313
  %333 = getelementptr inbounds i32, ptr %26, i64 %331
  %334 = select i1 %332, i32 %298, i32 %312
  store i32 %334, ptr %333, align 4
  br label %335

335:                                              ; preds = %330, %328
  %336 = extractelement <4 x i1> %322, i64 2
  br i1 %336, label %337, label %342

337:                                              ; preds = %335
  %338 = or i64 %320, 2
  %339 = icmp ult i64 %338, %313
  %340 = getelementptr inbounds i32, ptr %26, i64 %338
  %341 = select i1 %339, i32 %298, i32 %312
  store i32 %341, ptr %340, align 4
  br label %342

342:                                              ; preds = %337, %335
  %343 = extractelement <4 x i1> %322, i64 3
  br i1 %343, label %344, label %349

344:                                              ; preds = %342
  %345 = or i64 %320, 3
  %346 = icmp ult i64 %345, %313
  %347 = getelementptr inbounds i32, ptr %26, i64 %345
  %348 = select i1 %346, i32 %298, i32 %312
  store i32 %348, ptr %347, align 4
  br label %349

349:                                              ; preds = %344, %342
  %350 = add i64 %320, 4
  %351 = add <4 x i64> %321, <i64 4, i64 4, i64 4, i64 4>
  %352 = icmp eq i64 %350, %315
  br i1 %352, label %418, label %319, !llvm.loop !434

353:                                              ; preds = %39
  %354 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 18
  %355 = load i32, ptr %354, align 8, !tbaa !428
  %356 = add i32 %355, 1
  %357 = load ptr, ptr @img, align 8, !tbaa !13
  %358 = getelementptr inbounds %struct.img_par, ptr %357, i64 0, i32 49
  %359 = load i32, ptr %358, align 8, !tbaa !429
  %360 = mul i32 %359, %356
  %361 = tail call i32 @llvm.smin.i32(i32 %360, i32 %9)
  %362 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 17
  %363 = load i32, ptr %362, align 4, !tbaa !431
  %364 = icmp eq i32 %363, 0
  %365 = sub i32 %9, %361
  %366 = select i1 %364, i32 %361, i32 %365
  %367 = getelementptr inbounds %struct.img_par, ptr %357, i64 0, i32 87
  %368 = load i32, ptr %367, align 4, !tbaa !422
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %418, label %370

370:                                              ; preds = %353
  %371 = getelementptr inbounds %struct.img_par, ptr %357, i64 0, i32 88
  %372 = sub i32 1, %363
  %373 = load i32, ptr %371, align 8, !tbaa !432
  br label %374

374:                                              ; preds = %398, %370
  %375 = phi i32 [ %368, %370 ], [ %399, %398 ]
  %376 = phi i32 [ %373, %370 ], [ %400, %398 ]
  %377 = phi i32 [ 0, %370 ], [ %401, %398 ]
  %378 = phi i32 [ 0, %370 ], [ %402, %398 ]
  %379 = icmp eq i32 %376, 0
  br i1 %379, label %398, label %380

380:                                              ; preds = %374
  %381 = load ptr, ptr @MapUnitToSliceGroupMap, align 8
  br label %382

382:                                              ; preds = %382, %380
  %383 = phi i32 [ %377, %380 ], [ %385, %382 ]
  %384 = phi i32 [ 0, %380 ], [ %393, %382 ]
  %385 = add i32 %383, 1
  %386 = icmp ult i32 %383, %366
  %387 = load i32, ptr %367, align 4, !tbaa !422
  %388 = mul i32 %387, %384
  %389 = add i32 %388, %378
  %390 = zext i32 %389 to i64
  %391 = getelementptr inbounds i32, ptr %381, i64 %390
  %392 = select i1 %386, i32 %363, i32 %372
  store i32 %392, ptr %391, align 4, !tbaa !18
  %393 = add nuw i32 %384, 1
  %394 = load i32, ptr %371, align 8, !tbaa !432
  %395 = icmp ult i32 %393, %394
  br i1 %395, label %382, label %396, !llvm.loop !435

396:                                              ; preds = %382
  %.lcssa5 = phi i32 [ %385, %382 ]
  %.lcssa4 = phi i32 [ %394, %382 ]
  %397 = load i32, ptr %367, align 4, !tbaa !422
  br label %398

398:                                              ; preds = %396, %374
  %399 = phi i32 [ %375, %374 ], [ %397, %396 ]
  %400 = phi i32 [ 0, %374 ], [ %.lcssa4, %396 ]
  %401 = phi i32 [ %377, %374 ], [ %.lcssa5, %396 ]
  %402 = add nuw i32 %378, 1
  %403 = icmp ult i32 %402, %399
  br i1 %403, label %374, label %418, !llvm.loop !436

404:                                              ; preds = %39
  %405 = icmp eq i32 %9, 0
  br i1 %405, label %418, label %406

406:                                              ; preds = %404
  %407 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 20
  %408 = load ptr, ptr %407, align 8, !tbaa !437
  br label %409

409:                                              ; preds = %409, %406
  %410 = phi i64 [ 0, %406 ], [ %414, %409 ]
  %411 = getelementptr inbounds i32, ptr %408, i64 %410
  %412 = load i32, ptr %411, align 4, !tbaa !18
  %413 = getelementptr inbounds i32, ptr %26, i64 %410
  store i32 %412, ptr %413, align 4, !tbaa !18
  %414 = add nuw nsw i64 %410, 1
  %415 = icmp eq i64 %414, %24
  br i1 %415, label %418, label %409, !llvm.loop !438

416:                                              ; preds = %39
  %417 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.2.32, i32 noundef %40) #47
  tail call void @exit(i32 noundef -1) #51
  unreachable

418:                                              ; preds = %409, %404, %398, %353, %349, %296, %285, %172, %139, %132, %85, %79, %78, %41, %38
  %419 = load ptr, ptr @MbToSliceGroupMap, align 8, !tbaa !13
  %420 = icmp eq ptr %419, null
  br i1 %420, label %422, label %421

421:                                              ; preds = %418
  tail call void @free(ptr noundef nonnull %419) #46
  br label %422

422:                                              ; preds = %421, %418
  %423 = load ptr, ptr @img, align 8, !tbaa !13
  %424 = getelementptr inbounds %struct.img_par, ptr %423, i64 0, i32 91
  %425 = load i32, ptr %424, align 4, !tbaa !439
  %426 = zext i32 %425 to i64
  %427 = shl nuw nsw i64 %426, 2
  %428 = tail call noalias ptr @malloc(i64 noundef %427) #49
  store ptr %428, ptr @MbToSliceGroupMap, align 8, !tbaa !13
  %429 = icmp eq ptr %428, null
  br i1 %429, label %430, label %433

430:                                              ; preds = %422
  %431 = shl i32 %425, 2
  %432 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.3.33, i32 noundef %431) #47
  tail call void @exit(i32 noundef -1) #51
  unreachable

433:                                              ; preds = %422
  %434 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 29
  %435 = load i32, ptr %434, align 4, !tbaa !440
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %437, label %441

437:                                              ; preds = %433
  %438 = getelementptr inbounds %struct.img_par, ptr %423, i64 0, i32 57
  %439 = load i32, ptr %438, align 8, !tbaa !441
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %454, label %441

441:                                              ; preds = %437, %433
  %442 = icmp eq i32 %425, 0
  br i1 %442, label %494, label %443

443:                                              ; preds = %441
  %444 = load ptr, ptr @MapUnitToSliceGroupMap, align 8, !tbaa !13
  br label %445

445:                                              ; preds = %445, %443
  %446 = phi i64 [ 0, %443 ], [ %450, %445 ]
  %447 = getelementptr inbounds i32, ptr %444, i64 %446
  %448 = load i32, ptr %447, align 4, !tbaa !18
  %449 = getelementptr inbounds i32, ptr %428, i64 %446
  store i32 %448, ptr %449, align 4, !tbaa !18
  %450 = add nuw nsw i64 %446, 1
  %451 = load i32, ptr %424, align 4, !tbaa !439
  %452 = zext i32 %451 to i64
  %453 = icmp ult i64 %450, %452
  br i1 %453, label %445, label %494, !llvm.loop !442

454:                                              ; preds = %437
  %455 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 30
  %456 = load i32, ptr %455, align 4, !tbaa !443
  %457 = icmp eq i32 %456, 0
  %458 = icmp eq i32 %425, 0
  br i1 %457, label %462, label %459

459:                                              ; preds = %454
  br i1 %458, label %494, label %460

460:                                              ; preds = %459
  %461 = load ptr, ptr @MapUnitToSliceGroupMap, align 8, !tbaa !13
  br label %466

462:                                              ; preds = %454
  br i1 %458, label %494, label %463

463:                                              ; preds = %462
  %464 = load ptr, ptr @MapUnitToSliceGroupMap, align 8, !tbaa !13
  %465 = getelementptr inbounds %struct.img_par, ptr %423, i64 0, i32 87
  br label %477

466:                                              ; preds = %466, %460
  %467 = phi i64 [ 0, %460 ], [ %473, %466 ]
  %468 = lshr i64 %467, 1
  %469 = and i64 %468, 2147483647
  %470 = getelementptr inbounds i32, ptr %461, i64 %469
  %471 = load i32, ptr %470, align 4, !tbaa !18
  %472 = getelementptr inbounds i32, ptr %428, i64 %467
  store i32 %471, ptr %472, align 4, !tbaa !18
  %473 = add nuw nsw i64 %467, 1
  %474 = load i32, ptr %424, align 4, !tbaa !439
  %475 = zext i32 %474 to i64
  %476 = icmp ult i64 %473, %475
  br i1 %476, label %466, label %494, !llvm.loop !444

477:                                              ; preds = %477, %463
  %478 = phi i64 [ 0, %463 ], [ %490, %477 ]
  %479 = load i32, ptr %465, align 4, !tbaa !422
  %480 = shl i32 %479, 1
  %481 = trunc i64 %478 to i32
  %482 = udiv i32 %481, %480
  %483 = mul i32 %482, %479
  %484 = urem i32 %481, %479
  %485 = add i32 %483, %484
  %486 = zext i32 %485 to i64
  %487 = getelementptr inbounds i32, ptr %464, i64 %486
  %488 = load i32, ptr %487, align 4, !tbaa !18
  %489 = getelementptr inbounds i32, ptr %428, i64 %478
  store i32 %488, ptr %489, align 4, !tbaa !18
  %490 = add nuw nsw i64 %478, 1
  %491 = load i32, ptr %424, align 4, !tbaa !439
  %492 = zext i32 %491 to i64
  %493 = icmp ult i64 %490, %492
  br i1 %493, label %477, label %494, !llvm.loop !445

494:                                              ; preds = %477, %466, %462, %459, %445, %441
  %495 = load i32, ptr %35, align 4, !tbaa !418
  %496 = add i32 %495, 1
  store i32 %496, ptr @NumberOfSliceGroups, align 4, !tbaa !18
  ret i32 0
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.usub.sat.i32(i32, i32) #12

; Function Attrs: mustprogress nounwind optsize willreturn uwtable
define internal i32 @FmoFinit() #22 {
  %1 = load ptr, ptr @MbToSliceGroupMap, align 8, !tbaa !13
  %2 = icmp eq ptr %1, null
  br i1 %2, label %4, label %3

3:                                                ; preds = %0
  tail call void @free(ptr noundef nonnull %1) #46
  store ptr null, ptr @MbToSliceGroupMap, align 8, !tbaa !13
  br label %4

4:                                                ; preds = %3, %0
  %5 = load ptr, ptr @MapUnitToSliceGroupMap, align 8, !tbaa !13
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @free(ptr noundef nonnull %5) #46
  store ptr null, ptr @MapUnitToSliceGroupMap, align 8, !tbaa !13
  br label %8

8:                                                ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(read, inaccessiblemem: none) uwtable
define internal i32 @FmoGetNextMBNr(i32 noundef %0) #32 {
  %2 = load ptr, ptr @MbToSliceGroupMap, align 8, !tbaa !13
  %3 = sext i32 %0 to i64
  %4 = getelementptr inbounds i32, ptr %2, i64 %3
  %5 = load i32, ptr %4, align 4, !tbaa !18
  %6 = load ptr, ptr @img, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 91
  %8 = load i32, ptr %7, align 4, !tbaa !439
  %9 = sext i32 %8 to i64
  br label %10

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %12, %14 ], [ %3, %1 ]
  %12 = add nsw i64 %11, 1
  %13 = icmp slt i64 %12, %9
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = getelementptr inbounds i32, ptr %2, i64 %12
  %16 = load i32, ptr %15, align 4, !tbaa !18
  %17 = icmp eq i32 %16, %5
  br i1 %17, label %18, label %10, !llvm.loop !446

18:                                               ; preds = %14
  %.lcssa1 = phi i64 [ %12, %14 ]
  %19 = trunc i64 %.lcssa1 to i32
  br label %20

20:                                               ; preds = %18, %10
  %21 = phi i32 [ %19, %18 ], [ -1, %10 ]
  ret i32 %21
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(none) uwtable
define internal i32 @CeilLog2(i32 noundef %0) #33 {
  %2 = add i32 %0, -1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %4, %1
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i32 [ %7, %4 ], [ %2, %1 ]
  %7 = lshr i32 %6, 1
  %8 = add nuw nsw i32 %5, 1
  %9 = icmp ult i32 %6, 2
  br i1 %9, label %10, label %4, !llvm.loop !447

10:                                               ; preds = %4, %1
  %11 = phi i32 [ 0, %1 ], [ %8, %4 ]
  ret i32 %11
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @FirstPartOfSliceHeader() #0 {
  %1 = load ptr, ptr @img, align 8, !tbaa !13
  %2 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %3 = load ptr, ptr %2, align 8, !tbaa !165
  %4 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 7
  %5 = load i32, ptr %4, align 4, !tbaa !213
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [0 x [20 x i32]], ptr @assignSE2partition, i64 0, i64 %6
  %8 = load i32, ptr %7, align 4, !tbaa !18
  %9 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 9
  %10 = load ptr, ptr %9, align 8, !tbaa !214
  %11 = sext i32 %8 to i64
  %12 = getelementptr inbounds %struct.datapartition, ptr %10, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !448
  %14 = getelementptr inbounds %struct.Bitstream, ptr %13, i64 0, i32 2
  %15 = load i32, ptr %14, align 8, !tbaa !450
  store i32 %15, ptr @UsedBits, align 4, !tbaa !18
  %16 = tail call i32 @ue_v(ptr noundef nonnull @.str.34, ptr noundef %13) #46
  %17 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 5
  store i32 %16, ptr %17, align 4, !tbaa !451
  %18 = tail call i32 @ue_v(ptr noundef nonnull @.str.1.35, ptr noundef %13) #46
  %19 = icmp sgt i32 %18, 4
  %20 = add nsw i32 %18, -5
  %21 = select i1 %19, i32 %20, i32 %18
  %22 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 3
  store i32 %21, ptr %22, align 4, !tbaa !452
  %23 = load ptr, ptr @img, align 8, !tbaa !13
  %24 = getelementptr inbounds %struct.img_par, ptr %23, i64 0, i32 10
  store i32 %21, ptr %24, align 4, !tbaa !137
  %25 = tail call i32 @ue_v(ptr noundef nonnull @.str.2.36, ptr noundef %13) #46
  %26 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 24
  store i32 %25, ptr %26, align 4, !tbaa !453
  %27 = load i32, ptr @UsedBits, align 4, !tbaa !18
  ret i32 %27
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @RestOfSliceHeader() #0 {
  %1 = load ptr, ptr @img, align 8, !tbaa !13
  %2 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %3 = load ptr, ptr %2, align 8, !tbaa !165
  %4 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 7
  %5 = load i32, ptr %4, align 4, !tbaa !213
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [0 x [20 x i32]], ptr @assignSE2partition, i64 0, i64 %6
  %8 = load i32, ptr %7, align 4, !tbaa !18
  %9 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 9
  %10 = load ptr, ptr %9, align 8, !tbaa !214
  %11 = sext i32 %8 to i64
  %12 = getelementptr inbounds %struct.datapartition, ptr %10, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !448
  %14 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %15 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %14, i64 0, i32 17
  %16 = load i32, ptr %15, align 4, !tbaa !382
  %17 = add i32 %16, 4
  %18 = tail call i32 @u_v(i32 noundef %17, ptr noundef nonnull @.str.3.37, ptr noundef %13) #46
  %19 = load ptr, ptr @img, align 8, !tbaa !13
  %20 = getelementptr inbounds %struct.img_par, ptr %19, i64 0, i32 56
  store i32 %18, ptr %20, align 4, !tbaa !336
  %21 = getelementptr inbounds %struct.img_par, ptr %19, i64 0, i32 83
  %22 = load i32, ptr %21, align 4, !tbaa !454
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %0
  %25 = getelementptr inbounds %struct.img_par, ptr %19, i64 0, i32 52
  store i32 %18, ptr %25, align 4, !tbaa !334
  %26 = getelementptr inbounds %struct.img_par, ptr %19, i64 0, i32 127
  store i32 0, ptr %26, align 8, !tbaa !332
  br label %27

27:                                               ; preds = %24, %0
  %28 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %29 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %28, i64 0, i32 29
  %30 = load i32, ptr %29, align 4, !tbaa !440
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.img_par, ptr %19, i64 0, i32 36
  store i32 0, ptr %33, align 8, !tbaa !206
  %34 = getelementptr inbounds %struct.img_par, ptr %19, i64 0, i32 57
  store i32 0, ptr %34, align 8, !tbaa !441
  br label %50

35:                                               ; preds = %27
  %36 = tail call i32 @u_1(ptr noundef nonnull @.str.4.38, ptr noundef %13) #46
  %37 = load ptr, ptr @img, align 8, !tbaa !13
  %38 = getelementptr inbounds %struct.img_par, ptr %37, i64 0, i32 57
  store i32 %36, ptr %38, align 8, !tbaa !441
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = tail call i32 @u_1(ptr noundef nonnull @.str.5.39, ptr noundef %13) #46
  %42 = load ptr, ptr @img, align 8, !tbaa !13
  %43 = getelementptr inbounds %struct.img_par, ptr %42, i64 0, i32 58
  store i32 %41, ptr %43, align 4, !tbaa !455
  %44 = icmp eq i32 %41, 0
  %45 = select i1 %44, i32 1, i32 2
  %46 = getelementptr inbounds %struct.img_par, ptr %42, i64 0, i32 36
  store i32 %45, ptr %46, align 8, !tbaa !206
  br label %50

47:                                               ; preds = %35
  %48 = getelementptr inbounds %struct.img_par, ptr %37, i64 0, i32 36
  store i32 0, ptr %48, align 8, !tbaa !206
  %49 = getelementptr inbounds %struct.img_par, ptr %37, i64 0, i32 58
  store i32 0, ptr %49, align 4, !tbaa !455
  br label %50

50:                                               ; preds = %47, %40, %32
  %51 = phi i32 [ %45, %40 ], [ 0, %47 ], [ 0, %32 ]
  %52 = phi ptr [ %42, %40 ], [ %37, %47 ], [ %19, %32 ]
  %53 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 4
  store i32 %51, ptr %53, align 8, !tbaa !370
  %54 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %55 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %54, i64 0, i32 30
  %56 = load i32, ptr %55, align 4, !tbaa !443
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %struct.img_par, ptr %52, i64 0, i32 57
  %60 = load i32, ptr %59, align 8, !tbaa !441
  %61 = icmp eq i32 %60, 0
  br label %62

62:                                               ; preds = %58, %50
  %63 = phi i1 [ false, %50 ], [ %61, %58 ]
  %64 = zext i1 %63 to i32
  %65 = getelementptr inbounds %struct.img_par, ptr %52, i64 0, i32 44
  store i32 %64, ptr %65, align 8, !tbaa !189
  %66 = getelementptr inbounds %struct.img_par, ptr %52, i64 0, i32 83
  %67 = load i32, ptr %66, align 4, !tbaa !454
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %62
  %70 = tail call i32 @ue_v(ptr noundef nonnull @.str.6.40, ptr noundef %13) #46
  %71 = load ptr, ptr @img, align 8, !tbaa !13
  %72 = getelementptr inbounds %struct.img_par, ptr %71, i64 0, i32 85
  store i32 %70, ptr %72, align 4, !tbaa !456
  %73 = load ptr, ptr @active_sps, align 8, !tbaa !13
  br label %74

74:                                               ; preds = %69, %62
  %75 = phi ptr [ %71, %69 ], [ %52, %62 ]
  %76 = phi ptr [ %73, %69 ], [ %54, %62 ]
  %77 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %76, i64 0, i32 18
  %78 = load i32, ptr %77, align 4, !tbaa !457
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %102

80:                                               ; preds = %74
  %81 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %76, i64 0, i32 19
  %82 = load i32, ptr %81, align 4, !tbaa !458
  %83 = add i32 %82, 4
  %84 = tail call i32 @u_v(i32 noundef %83, ptr noundef nonnull @.str.7.41, ptr noundef %13) #46
  %85 = load ptr, ptr @img, align 8, !tbaa !13
  %86 = getelementptr inbounds %struct.img_par, ptr %85, i64 0, i32 59
  store i32 %84, ptr %86, align 8, !tbaa !459
  %87 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %88 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %87, i64 0, i32 11
  %89 = load i32, ptr %88, align 8, !tbaa !460
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %98

91:                                               ; preds = %80
  %92 = getelementptr inbounds %struct.img_par, ptr %85, i64 0, i32 57
  %93 = load i32, ptr %92, align 8, !tbaa !441
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %91
  %96 = tail call i32 @se_v(ptr noundef nonnull @.str.8.42, ptr noundef %13) #46
  %97 = load ptr, ptr @img, align 8, !tbaa !13
  br label %98

98:                                               ; preds = %95, %91, %80
  %99 = phi ptr [ %97, %95 ], [ %85, %91 ], [ %85, %80 ]
  %100 = phi i32 [ %96, %95 ], [ 0, %91 ], [ 0, %80 ]
  %101 = getelementptr inbounds %struct.img_par, ptr %99, i64 0, i32 60
  store i32 %100, ptr %101, align 4, !tbaa !461
  br label %102

102:                                              ; preds = %98, %74
  %103 = phi ptr [ %75, %74 ], [ %99, %98 ]
  %104 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %105 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %104, i64 0, i32 18
  %106 = load i32, ptr %105, align 4, !tbaa !457
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %133

108:                                              ; preds = %102
  %109 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %104, i64 0, i32 20
  %110 = load i32, ptr %109, align 4, !tbaa !462
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %127

112:                                              ; preds = %108
  %113 = tail call i32 @se_v(ptr noundef nonnull @.str.9.43, ptr noundef %13) #46
  %114 = load ptr, ptr @img, align 8, !tbaa !13
  %115 = getelementptr inbounds %struct.img_par, ptr %114, i64 0, i32 61
  store i32 %113, ptr %115, align 8, !tbaa !18
  %116 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %117 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %116, i64 0, i32 11
  %118 = load i32, ptr %117, align 8, !tbaa !460
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %133

120:                                              ; preds = %112
  %121 = getelementptr inbounds %struct.img_par, ptr %114, i64 0, i32 57
  %122 = load i32, ptr %121, align 8, !tbaa !441
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %133

124:                                              ; preds = %120
  %125 = tail call i32 @se_v(ptr noundef nonnull @.str.10.44, ptr noundef %13) #46
  %126 = load ptr, ptr @img, align 8, !tbaa !13
  br label %129

127:                                              ; preds = %108
  %128 = getelementptr inbounds %struct.img_par, ptr %103, i64 0, i32 61
  store i32 0, ptr %128, align 8, !tbaa !18
  br label %129

129:                                              ; preds = %127, %124
  %130 = phi ptr [ %103, %127 ], [ %126, %124 ]
  %131 = phi i32 [ 0, %127 ], [ %125, %124 ]
  %132 = getelementptr inbounds %struct.img_par, ptr %130, i64 0, i32 61, i64 1
  store i32 %131, ptr %132, align 4, !tbaa !18
  br label %133

133:                                              ; preds = %129, %120, %112, %102
  %134 = phi ptr [ %103, %102 ], [ %114, %112 ], [ %114, %120 ], [ %130, %129 ]
  %135 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %136 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %135, i64 0, i32 31
  %137 = load i32, ptr %136, align 8, !tbaa !463
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %143, label %139

139:                                              ; preds = %133
  %140 = tail call i32 @ue_v(ptr noundef nonnull @.str.11.45, ptr noundef %13) #46
  %141 = load ptr, ptr @img, align 8, !tbaa !13
  %142 = getelementptr inbounds %struct.img_par, ptr %141, i64 0, i32 50
  store i32 %140, ptr %142, align 4, !tbaa !464
  br label %143

143:                                              ; preds = %139, %133
  %144 = phi ptr [ %141, %139 ], [ %134, %133 ]
  %145 = getelementptr inbounds %struct.img_par, ptr %144, i64 0, i32 10
  %146 = load i32, ptr %145, align 4, !tbaa !137
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %148, label %154

148:                                              ; preds = %143
  %149 = tail call i32 @u_1(ptr noundef nonnull @.str.12.46, ptr noundef %13) #46
  %150 = load ptr, ptr @img, align 8, !tbaa !13
  %151 = getelementptr inbounds %struct.img_par, ptr %150, i64 0, i32 9
  store i32 %149, ptr %151, align 8, !tbaa !465
  %152 = getelementptr inbounds %struct.img_par, ptr %150, i64 0, i32 10
  %153 = load i32, ptr %152, align 4, !tbaa !137
  br label %154

154:                                              ; preds = %148, %143
  %155 = phi i32 [ %153, %148 ], [ %146, %143 ]
  %156 = phi ptr [ %150, %148 ], [ %144, %143 ]
  %157 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %158 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %157, i64 0, i32 21
  %159 = getelementptr inbounds %struct.img_par, ptr %156, i64 0, i32 47
  %160 = load <2 x i32>, ptr %158, align 8, !tbaa !18
  %161 = add <2 x i32> %160, <i32 1, i32 1>
  store <2 x i32> %161, ptr %159, align 8, !tbaa !18
  switch i32 %155, label %180 [
    i32 0, label %162
    i32 3, label %162
    i32 1, label %162
  ]

162:                                              ; preds = %154, %154, %154
  %163 = tail call i32 @u_1(ptr noundef nonnull @.str.13.47, ptr noundef %13) #46
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %162
  %166 = load ptr, ptr @img, align 8, !tbaa !13
  br label %180

167:                                              ; preds = %162
  %168 = tail call i32 @ue_v(ptr noundef nonnull @.str.14.48, ptr noundef %13) #46
  %169 = add nsw i32 %168, 1
  %170 = load ptr, ptr @img, align 8, !tbaa !13
  %171 = getelementptr inbounds %struct.img_par, ptr %170, i64 0, i32 47
  store i32 %169, ptr %171, align 8, !tbaa !466
  %172 = getelementptr inbounds %struct.img_par, ptr %170, i64 0, i32 10
  %173 = load i32, ptr %172, align 4, !tbaa !137
  %174 = icmp eq i32 %173, 1
  br i1 %174, label %175, label %180

175:                                              ; preds = %167
  %176 = tail call i32 @ue_v(ptr noundef nonnull @.str.15.49, ptr noundef %13) #46
  %177 = add nsw i32 %176, 1
  %178 = load ptr, ptr @img, align 8, !tbaa !13
  %179 = getelementptr inbounds %struct.img_par, ptr %178, i64 0, i32 48
  store i32 %177, ptr %179, align 4, !tbaa !467
  br label %180

180:                                              ; preds = %175, %167, %165, %154
  %181 = phi ptr [ %166, %165 ], [ %156, %154 ], [ %178, %175 ], [ %170, %167 ]
  %182 = getelementptr inbounds %struct.img_par, ptr %181, i64 0, i32 10
  %183 = load i32, ptr %182, align 4, !tbaa !137
  %184 = icmp eq i32 %183, 1
  br i1 %184, label %187, label %185

185:                                              ; preds = %180
  %186 = getelementptr inbounds %struct.img_par, ptr %181, i64 0, i32 48
  store i32 0, ptr %186, align 4, !tbaa !467
  br label %187

187:                                              ; preds = %185, %180
  %188 = getelementptr inbounds %struct.img_par, ptr %181, i64 0, i32 38
  %189 = load ptr, ptr %188, align 8, !tbaa !165
  %190 = getelementptr inbounds %struct.Slice, ptr %189, i64 0, i32 7
  %191 = load i32, ptr %190, align 4, !tbaa !213
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds [0 x [20 x i32]], ptr @assignSE2partition, i64 0, i64 %192
  %194 = load i32, ptr %193, align 4, !tbaa !18
  %195 = getelementptr inbounds %struct.Slice, ptr %189, i64 0, i32 9
  %196 = load ptr, ptr %195, align 8, !tbaa !214
  %197 = sext i32 %194 to i64
  %198 = getelementptr inbounds %struct.datapartition, ptr %196, i64 %197
  %199 = load ptr, ptr %198, align 8, !tbaa !448
  tail call void @alloc_ref_pic_list_reordering_buffer(ptr noundef %189) #46
  %200 = load ptr, ptr @img, align 8, !tbaa !13
  %201 = getelementptr inbounds %struct.img_par, ptr %200, i64 0, i32 10
  %202 = load i32, ptr %201, align 4, !tbaa !137
  switch i32 %202, label %203 [
    i32 2, label %228
    i32 4, label %228
  ]

203:                                              ; preds = %187
  %204 = tail call i32 @u_1(ptr noundef nonnull @.str.58, ptr noundef %199) #46
  %205 = getelementptr inbounds %struct.Slice, ptr %189, i64 0, i32 12
  store i32 %204, ptr %205, align 8, !tbaa !468
  %206 = icmp eq i32 %204, 0
  br i1 %206, label %228, label %207

207:                                              ; preds = %203
  %208 = getelementptr inbounds %struct.Slice, ptr %189, i64 0, i32 13
  %209 = getelementptr inbounds %struct.Slice, ptr %189, i64 0, i32 15
  %210 = getelementptr inbounds %struct.Slice, ptr %189, i64 0, i32 14
  br label %211

211:                                              ; preds = %225, %207
  %212 = phi i64 [ 0, %207 ], [ %226, %225 ]
  %213 = tail call i32 @ue_v(ptr noundef nonnull @.str.59, ptr noundef %199) #46
  %214 = load ptr, ptr %208, align 8, !tbaa !469
  %215 = getelementptr inbounds i32, ptr %214, i64 %212
  store i32 %213, ptr %215, align 4, !tbaa !18
  %216 = icmp ult i32 %213, 2
  br i1 %216, label %219, label %217

217:                                              ; preds = %211
  %218 = icmp eq i32 %213, 2
  br i1 %218, label %219, label %225

219:                                              ; preds = %217, %211
  %220 = phi ptr [ @.str.60, %211 ], [ @.str.61, %217 ]
  %221 = phi ptr [ %210, %211 ], [ %209, %217 ]
  %222 = tail call i32 @ue_v(ptr noundef nonnull %220, ptr noundef %199) #46
  %223 = load ptr, ptr %221, align 8, !tbaa !13
  %224 = getelementptr inbounds i32, ptr %223, i64 %212
  store i32 %222, ptr %224, align 4, !tbaa !18
  br label %225

225:                                              ; preds = %219, %217
  %226 = add nuw i64 %212, 1
  %227 = icmp eq i32 %213, 3
  br i1 %227, label %228, label %211, !llvm.loop !470

228:                                              ; preds = %225, %203, %187, %187
  %229 = load ptr, ptr @img, align 8, !tbaa !13
  %230 = getelementptr inbounds %struct.img_par, ptr %229, i64 0, i32 10
  %231 = load i32, ptr %230, align 4, !tbaa !137
  %232 = icmp eq i32 %231, 1
  br i1 %232, label %233, label %258

233:                                              ; preds = %228
  %234 = tail call i32 @u_1(ptr noundef nonnull @.str.62, ptr noundef %199) #46
  %235 = getelementptr inbounds %struct.Slice, ptr %189, i64 0, i32 16
  store i32 %234, ptr %235, align 8, !tbaa !471
  %236 = icmp eq i32 %234, 0
  br i1 %236, label %258, label %237

237:                                              ; preds = %233
  %238 = getelementptr inbounds %struct.Slice, ptr %189, i64 0, i32 17
  %239 = getelementptr inbounds %struct.Slice, ptr %189, i64 0, i32 19
  %240 = getelementptr inbounds %struct.Slice, ptr %189, i64 0, i32 18
  br label %241

241:                                              ; preds = %255, %237
  %242 = phi i64 [ 0, %237 ], [ %256, %255 ]
  %243 = tail call i32 @ue_v(ptr noundef nonnull @.str.63, ptr noundef %199) #46
  %244 = load ptr, ptr %238, align 8, !tbaa !472
  %245 = getelementptr inbounds i32, ptr %244, i64 %242
  store i32 %243, ptr %245, align 4, !tbaa !18
  %246 = icmp ult i32 %243, 2
  br i1 %246, label %249, label %247

247:                                              ; preds = %241
  %248 = icmp eq i32 %243, 2
  br i1 %248, label %249, label %255

249:                                              ; preds = %247, %241
  %250 = phi ptr [ @.str.64, %241 ], [ @.str.65, %247 ]
  %251 = phi ptr [ %240, %241 ], [ %239, %247 ]
  %252 = tail call i32 @ue_v(ptr noundef nonnull %250, ptr noundef %199) #46
  %253 = load ptr, ptr %251, align 8, !tbaa !13
  %254 = getelementptr inbounds i32, ptr %253, i64 %242
  store i32 %252, ptr %254, align 4, !tbaa !18
  br label %255

255:                                              ; preds = %249, %247
  %256 = add nuw i64 %242, 1
  %257 = icmp eq i32 %243, 3
  br i1 %257, label %258, label %241, !llvm.loop !473

258:                                              ; preds = %255, %233, %228
  %259 = load ptr, ptr @img, align 8, !tbaa !13
  %260 = getelementptr inbounds %struct.img_par, ptr %259, i64 0, i32 50
  %261 = load i32, ptr %260, align 4, !tbaa !464
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %268, label %263

263:                                              ; preds = %258
  %264 = getelementptr inbounds %struct.Slice, ptr %189, i64 0, i32 14
  %265 = load ptr, ptr %264, align 8, !tbaa !474
  %266 = load i32, ptr %265, align 4, !tbaa !18
  %267 = add nsw i32 %266, 1
  store i32 %267, ptr @redundant_slice_ref_idx, align 4, !tbaa !18
  br label %268

268:                                              ; preds = %263, %258
  %269 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %270 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %269, i64 0, i32 23
  %271 = load i32, ptr %270, align 8, !tbaa !475
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %276, label %273

273:                                              ; preds = %268
  %274 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 3
  %275 = load i32, ptr %274, align 4, !tbaa !452
  switch i32 %275, label %276 [
    i32 0, label %284
    i32 3, label %284
  ]

276:                                              ; preds = %273, %268
  %277 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %269, i64 0, i32 24
  %278 = load i32, ptr %277, align 4, !tbaa !476
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %286, label %280

280:                                              ; preds = %276
  %281 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 3
  %282 = load i32, ptr %281, align 4, !tbaa !452
  %283 = icmp eq i32 %282, 1
  br label %286

284:                                              ; preds = %273, %273
  %285 = getelementptr inbounds %struct.img_par, ptr %259, i64 0, i32 82
  store i32 1, ptr %285, align 8, !tbaa !477
  br label %290

286:                                              ; preds = %280, %276
  %287 = phi i1 [ false, %276 ], [ %283, %280 ]
  %288 = zext i1 %287 to i32
  %289 = getelementptr inbounds %struct.img_par, ptr %259, i64 0, i32 82
  store i32 %288, ptr %289, align 8, !tbaa !477
  br i1 %272, label %296, label %290

290:                                              ; preds = %286, %284
  %291 = getelementptr inbounds %struct.img_par, ptr %259, i64 0, i32 10
  %292 = load i32, ptr %291, align 4, !tbaa !137
  switch i32 %292, label %293 [
    i32 0, label %303
    i32 3, label %303
  ]

293:                                              ; preds = %290
  %294 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %269, i64 0, i32 24
  %295 = load i32, ptr %294, align 4, !tbaa !476
  br label %296

296:                                              ; preds = %293, %286
  %297 = phi i32 [ %295, %293 ], [ %278, %286 ]
  %298 = icmp eq i32 %297, 1
  br i1 %298, label %299, label %525

299:                                              ; preds = %296
  %300 = getelementptr inbounds %struct.img_par, ptr %259, i64 0, i32 10
  %301 = load i32, ptr %300, align 4, !tbaa !137
  %302 = icmp eq i32 %301, 1
  br i1 %302, label %303, label %525

303:                                              ; preds = %299, %290, %290
  %304 = getelementptr inbounds %struct.img_par, ptr %259, i64 0, i32 38
  %305 = load ptr, ptr %304, align 8, !tbaa !165
  %306 = getelementptr inbounds %struct.Slice, ptr %305, i64 0, i32 7
  %307 = load i32, ptr %306, align 4, !tbaa !213
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds [0 x [20 x i32]], ptr @assignSE2partition, i64 0, i64 %308
  %310 = load i32, ptr %309, align 4, !tbaa !18
  %311 = getelementptr inbounds %struct.Slice, ptr %305, i64 0, i32 9
  %312 = load ptr, ptr %311, align 8, !tbaa !214
  %313 = sext i32 %310 to i64
  %314 = getelementptr inbounds %struct.datapartition, ptr %312, i64 %313
  %315 = load ptr, ptr %314, align 8, !tbaa !448
  %316 = tail call i32 @ue_v(ptr noundef nonnull @.str.66, ptr noundef %315) #46
  %317 = load ptr, ptr @img, align 8, !tbaa !13
  %318 = getelementptr inbounds %struct.img_par, ptr %317, i64 0, i32 75
  store i32 %316, ptr %318, align 8, !tbaa !478
  %319 = icmp eq i32 %316, 0
  %320 = add i32 %316, -1
  %321 = shl nuw i32 1, %320
  %322 = select i1 %319, i32 0, i32 %321
  %323 = getelementptr inbounds %struct.img_par, ptr %317, i64 0, i32 80
  store i32 %322, ptr %323, align 8, !tbaa !479
  %324 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %325 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %324, i64 0, i32 8
  %326 = load i32, ptr %325, align 4, !tbaa !480
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %337, label %328

328:                                              ; preds = %303
  %329 = tail call i32 @ue_v(ptr noundef nonnull @.str.67, ptr noundef %315) #46
  %330 = load ptr, ptr @img, align 8, !tbaa !13
  %331 = getelementptr inbounds %struct.img_par, ptr %330, i64 0, i32 76
  store i32 %329, ptr %331, align 4, !tbaa !481
  %332 = icmp eq i32 %329, 0
  %333 = add i32 %329, -1
  %334 = shl nuw i32 1, %333
  %335 = select i1 %332, i32 0, i32 %334
  %336 = getelementptr inbounds %struct.img_par, ptr %330, i64 0, i32 81
  store i32 %335, ptr %336, align 4, !tbaa !482
  br label %337

337:                                              ; preds = %328, %303
  %338 = phi ptr [ %330, %328 ], [ %317, %303 ]
  tail call void @reset_wp_params(ptr noundef nonnull %338) #46
  %339 = load ptr, ptr @img, align 8, !tbaa !13
  %340 = getelementptr inbounds %struct.img_par, ptr %339, i64 0, i32 47
  %341 = load i32, ptr %340, align 8, !tbaa !466
  %342 = icmp sgt i32 %341, 0
  br i1 %342, label %343, label %424

343:                                              ; preds = %417, %337
  %344 = phi i64 [ %419, %417 ], [ 0, %337 ]
  %345 = tail call i32 @u_1(ptr noundef nonnull @.str.68, ptr noundef %315) #46
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %357, label %347

347:                                              ; preds = %343
  %348 = tail call i32 @se_v(ptr noundef nonnull @.str.69, ptr noundef %315) #46
  %349 = load ptr, ptr @img, align 8, !tbaa !13
  %350 = getelementptr inbounds %struct.img_par, ptr %349, i64 0, i32 77
  %351 = load ptr, ptr %350, align 8, !tbaa !483
  %352 = load ptr, ptr %351, align 8, !tbaa !13
  %353 = getelementptr inbounds ptr, ptr %352, i64 %344
  %354 = load ptr, ptr %353, align 8, !tbaa !13
  store i32 %348, ptr %354, align 4, !tbaa !18
  %355 = tail call i32 @se_v(ptr noundef nonnull @.str.70, ptr noundef %315) #46
  %356 = load ptr, ptr @img, align 8, !tbaa !13
  br label %367

357:                                              ; preds = %343
  %358 = load ptr, ptr @img, align 8, !tbaa !13
  %359 = getelementptr inbounds %struct.img_par, ptr %358, i64 0, i32 75
  %360 = load i32, ptr %359, align 8, !tbaa !478
  %361 = shl nuw i32 1, %360
  %362 = getelementptr inbounds %struct.img_par, ptr %358, i64 0, i32 77
  %363 = load ptr, ptr %362, align 8, !tbaa !483
  %364 = load ptr, ptr %363, align 8, !tbaa !13
  %365 = getelementptr inbounds ptr, ptr %364, i64 %344
  %366 = load ptr, ptr %365, align 8, !tbaa !13
  store i32 %361, ptr %366, align 4, !tbaa !18
  br label %367

367:                                              ; preds = %357, %347
  %368 = phi ptr [ %358, %357 ], [ %356, %347 ]
  %369 = phi i32 [ 0, %357 ], [ %355, %347 ]
  %370 = getelementptr inbounds %struct.img_par, ptr %368, i64 0, i32 78
  %371 = load ptr, ptr %370, align 8, !tbaa !484
  %372 = load ptr, ptr %371, align 8, !tbaa !13
  %373 = getelementptr inbounds ptr, ptr %372, i64 %344
  %374 = load ptr, ptr %373, align 8, !tbaa !13
  store i32 %369, ptr %374, align 4, !tbaa !18
  %375 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %376 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %375, i64 0, i32 8
  %377 = load i32, ptr %376, align 4, !tbaa !480
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %417, label %379

379:                                              ; preds = %367
  %380 = tail call i32 @u_1(ptr noundef nonnull @.str.71, ptr noundef %315) #46
  %381 = icmp eq i32 %380, 0
  br label %382

382:                                              ; preds = %406, %379
  %383 = phi i64 [ 1, %379 ], [ %415, %406 ]
  br i1 %381, label %395, label %384

384:                                              ; preds = %382
  %385 = tail call i32 @se_v(ptr noundef nonnull @.str.72, ptr noundef %315) #46
  %386 = load ptr, ptr @img, align 8, !tbaa !13
  %387 = getelementptr inbounds %struct.img_par, ptr %386, i64 0, i32 77
  %388 = load ptr, ptr %387, align 8, !tbaa !483
  %389 = load ptr, ptr %388, align 8, !tbaa !13
  %390 = getelementptr inbounds ptr, ptr %389, i64 %344
  %391 = load ptr, ptr %390, align 8, !tbaa !13
  %392 = getelementptr inbounds i32, ptr %391, i64 %383
  store i32 %385, ptr %392, align 4, !tbaa !18
  %393 = tail call i32 @se_v(ptr noundef nonnull @.str.73, ptr noundef %315) #46
  %394 = load ptr, ptr @img, align 8, !tbaa !13
  br label %406

395:                                              ; preds = %382
  %396 = load ptr, ptr @img, align 8, !tbaa !13
  %397 = getelementptr inbounds %struct.img_par, ptr %396, i64 0, i32 76
  %398 = load i32, ptr %397, align 4, !tbaa !481
  %399 = shl nuw i32 1, %398
  %400 = getelementptr inbounds %struct.img_par, ptr %396, i64 0, i32 77
  %401 = load ptr, ptr %400, align 8, !tbaa !483
  %402 = load ptr, ptr %401, align 8, !tbaa !13
  %403 = getelementptr inbounds ptr, ptr %402, i64 %344
  %404 = load ptr, ptr %403, align 8, !tbaa !13
  %405 = getelementptr inbounds i32, ptr %404, i64 %383
  store i32 %399, ptr %405, align 4, !tbaa !18
  br label %406

406:                                              ; preds = %395, %384
  %407 = phi ptr [ %394, %384 ], [ %396, %395 ]
  %408 = phi i32 [ %393, %384 ], [ 0, %395 ]
  %409 = getelementptr inbounds %struct.img_par, ptr %407, i64 0, i32 78
  %410 = load ptr, ptr %409, align 8, !tbaa !484
  %411 = load ptr, ptr %410, align 8, !tbaa !13
  %412 = getelementptr inbounds ptr, ptr %411, i64 %344
  %413 = load ptr, ptr %412, align 8, !tbaa !13
  %414 = getelementptr inbounds i32, ptr %413, i64 %383
  store i32 %408, ptr %414, align 4, !tbaa !18
  %415 = add nuw nsw i64 %383, 1
  %416 = icmp eq i64 %415, 3
  br i1 %416, label %417, label %382, !llvm.loop !485

417:                                              ; preds = %406, %367
  %418 = phi ptr [ %368, %367 ], [ %407, %406 ]
  %419 = add nuw nsw i64 %344, 1
  %420 = getelementptr inbounds %struct.img_par, ptr %418, i64 0, i32 47
  %421 = load i32, ptr %420, align 8, !tbaa !466
  %422 = sext i32 %421 to i64
  %423 = icmp slt i64 %419, %422
  br i1 %423, label %343, label %424, !llvm.loop !486

424:                                              ; preds = %417, %337
  %425 = phi ptr [ %339, %337 ], [ %418, %417 ]
  %426 = getelementptr inbounds %struct.img_par, ptr %425, i64 0, i32 10
  %427 = load i32, ptr %426, align 4, !tbaa !137
  %428 = icmp eq i32 %427, 1
  br i1 %428, label %429, label %525

429:                                              ; preds = %424
  %430 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %431 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %430, i64 0, i32 24
  %432 = load i32, ptr %431, align 4, !tbaa !476
  %433 = icmp eq i32 %432, 1
  br i1 %433, label %434, label %525

434:                                              ; preds = %429
  %435 = getelementptr inbounds %struct.img_par, ptr %425, i64 0, i32 48
  %436 = load i32, ptr %435, align 4, !tbaa !467
  %437 = icmp sgt i32 %436, 0
  br i1 %437, label %438, label %525

438:                                              ; preds = %518, %434
  %439 = phi i64 [ %520, %518 ], [ 0, %434 ]
  %440 = tail call i32 @u_1(ptr noundef nonnull @.str.74, ptr noundef %315) #46
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %453, label %442

442:                                              ; preds = %438
  %443 = tail call i32 @se_v(ptr noundef nonnull @.str.75, ptr noundef %315) #46
  %444 = load ptr, ptr @img, align 8, !tbaa !13
  %445 = getelementptr inbounds %struct.img_par, ptr %444, i64 0, i32 77
  %446 = load ptr, ptr %445, align 8, !tbaa !483
  %447 = getelementptr inbounds ptr, ptr %446, i64 1
  %448 = load ptr, ptr %447, align 8, !tbaa !13
  %449 = getelementptr inbounds ptr, ptr %448, i64 %439
  %450 = load ptr, ptr %449, align 8, !tbaa !13
  store i32 %443, ptr %450, align 4, !tbaa !18
  %451 = tail call i32 @se_v(ptr noundef nonnull @.str.76, ptr noundef %315) #46
  %452 = load ptr, ptr @img, align 8, !tbaa !13
  br label %464

453:                                              ; preds = %438
  %454 = load ptr, ptr @img, align 8, !tbaa !13
  %455 = getelementptr inbounds %struct.img_par, ptr %454, i64 0, i32 75
  %456 = load i32, ptr %455, align 8, !tbaa !478
  %457 = shl nuw i32 1, %456
  %458 = getelementptr inbounds %struct.img_par, ptr %454, i64 0, i32 77
  %459 = load ptr, ptr %458, align 8, !tbaa !483
  %460 = getelementptr inbounds ptr, ptr %459, i64 1
  %461 = load ptr, ptr %460, align 8, !tbaa !13
  %462 = getelementptr inbounds ptr, ptr %461, i64 %439
  %463 = load ptr, ptr %462, align 8, !tbaa !13
  store i32 %457, ptr %463, align 4, !tbaa !18
  br label %464

464:                                              ; preds = %453, %442
  %465 = phi ptr [ %454, %453 ], [ %452, %442 ]
  %466 = phi i32 [ 0, %453 ], [ %451, %442 ]
  %467 = getelementptr inbounds %struct.img_par, ptr %465, i64 0, i32 78
  %468 = load ptr, ptr %467, align 8, !tbaa !484
  %469 = getelementptr inbounds ptr, ptr %468, i64 1
  %470 = load ptr, ptr %469, align 8, !tbaa !13
  %471 = getelementptr inbounds ptr, ptr %470, i64 %439
  %472 = load ptr, ptr %471, align 8, !tbaa !13
  store i32 %466, ptr %472, align 4, !tbaa !18
  %473 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %474 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %473, i64 0, i32 8
  %475 = load i32, ptr %474, align 4, !tbaa !480
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %518, label %477

477:                                              ; preds = %464
  %478 = tail call i32 @u_1(ptr noundef nonnull @.str.77, ptr noundef %315) #46
  %479 = icmp eq i32 %478, 0
  br label %480

480:                                              ; preds = %506, %477
  %481 = phi i64 [ 1, %477 ], [ %516, %506 ]
  br i1 %479, label %494, label %482

482:                                              ; preds = %480
  %483 = tail call i32 @se_v(ptr noundef nonnull @.str.78, ptr noundef %315) #46
  %484 = load ptr, ptr @img, align 8, !tbaa !13
  %485 = getelementptr inbounds %struct.img_par, ptr %484, i64 0, i32 77
  %486 = load ptr, ptr %485, align 8, !tbaa !483
  %487 = getelementptr inbounds ptr, ptr %486, i64 1
  %488 = load ptr, ptr %487, align 8, !tbaa !13
  %489 = getelementptr inbounds ptr, ptr %488, i64 %439
  %490 = load ptr, ptr %489, align 8, !tbaa !13
  %491 = getelementptr inbounds i32, ptr %490, i64 %481
  store i32 %483, ptr %491, align 4, !tbaa !18
  %492 = tail call i32 @se_v(ptr noundef nonnull @.str.79, ptr noundef %315) #46
  %493 = load ptr, ptr @img, align 8, !tbaa !13
  br label %506

494:                                              ; preds = %480
  %495 = load ptr, ptr @img, align 8, !tbaa !13
  %496 = getelementptr inbounds %struct.img_par, ptr %495, i64 0, i32 76
  %497 = load i32, ptr %496, align 4, !tbaa !481
  %498 = shl nuw i32 1, %497
  %499 = getelementptr inbounds %struct.img_par, ptr %495, i64 0, i32 77
  %500 = load ptr, ptr %499, align 8, !tbaa !483
  %501 = getelementptr inbounds ptr, ptr %500, i64 1
  %502 = load ptr, ptr %501, align 8, !tbaa !13
  %503 = getelementptr inbounds ptr, ptr %502, i64 %439
  %504 = load ptr, ptr %503, align 8, !tbaa !13
  %505 = getelementptr inbounds i32, ptr %504, i64 %481
  store i32 %498, ptr %505, align 4, !tbaa !18
  br label %506

506:                                              ; preds = %494, %482
  %507 = phi ptr [ %493, %482 ], [ %495, %494 ]
  %508 = phi i32 [ %492, %482 ], [ 0, %494 ]
  %509 = getelementptr inbounds %struct.img_par, ptr %507, i64 0, i32 78
  %510 = load ptr, ptr %509, align 8, !tbaa !484
  %511 = getelementptr inbounds ptr, ptr %510, i64 1
  %512 = load ptr, ptr %511, align 8, !tbaa !13
  %513 = getelementptr inbounds ptr, ptr %512, i64 %439
  %514 = load ptr, ptr %513, align 8, !tbaa !13
  %515 = getelementptr inbounds i32, ptr %514, i64 %481
  store i32 %508, ptr %515, align 4, !tbaa !18
  %516 = add nuw nsw i64 %481, 1
  %517 = icmp eq i64 %516, 3
  br i1 %517, label %518, label %480, !llvm.loop !487

518:                                              ; preds = %506, %464
  %519 = phi ptr [ %465, %464 ], [ %507, %506 ]
  %520 = add nuw nsw i64 %439, 1
  %521 = getelementptr inbounds %struct.img_par, ptr %519, i64 0, i32 48
  %522 = load i32, ptr %521, align 4, !tbaa !467
  %523 = sext i32 %522 to i64
  %524 = icmp slt i64 %520, %523
  br i1 %524, label %438, label %525, !llvm.loop !488

525:                                              ; preds = %518, %434, %429, %424, %299, %296
  %526 = phi ptr [ %425, %434 ], [ %425, %429 ], [ %425, %424 ], [ %259, %299 ], [ %259, %296 ], [ %519, %518 ]
  %527 = getelementptr inbounds %struct.img_par, ptr %526, i64 0, i32 84
  %528 = load i32, ptr %527, align 8, !tbaa !489
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %532, label %530

530:                                              ; preds = %525
  tail call void @dec_ref_pic_marking(ptr noundef %13) #47
  %531 = load ptr, ptr @img, align 8, !tbaa !13
  br label %532

532:                                              ; preds = %530, %525
  %533 = phi ptr [ %531, %530 ], [ %526, %525 ]
  %534 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %535 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %534, i64 0, i32 3
  %536 = load i32, ptr %535, align 4, !tbaa !490
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %544, label %538

538:                                              ; preds = %532
  %539 = getelementptr inbounds %struct.img_par, ptr %533, i64 0, i32 10
  %540 = load i32, ptr %539, align 4, !tbaa !137
  switch i32 %540, label %541 [
    i32 2, label %544
    i32 4, label %544
  ]

541:                                              ; preds = %538
  %542 = tail call i32 @ue_v(ptr noundef nonnull @.str.16.50, ptr noundef %13) #46
  %543 = load ptr, ptr @img, align 8, !tbaa !13
  br label %544

544:                                              ; preds = %541, %538, %538, %532
  %545 = phi ptr [ %543, %541 ], [ %533, %538 ], [ %533, %538 ], [ %533, %532 ]
  %546 = phi i32 [ %542, %541 ], [ 0, %538 ], [ 0, %538 ], [ 0, %532 ]
  %547 = getelementptr inbounds %struct.img_par, ptr %545, i64 0, i32 99
  store i32 %546, ptr %547, align 4, !tbaa !220
  %548 = tail call i32 @se_v(ptr noundef nonnull @.str.17.51, ptr noundef %13) #46
  %549 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %550 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %549, i64 0, i32 25
  %551 = load i32, ptr %550, align 8, !tbaa !491
  %552 = add i32 %548, 26
  %553 = add i32 %552, %551
  %554 = load ptr, ptr @img, align 8, !tbaa !13
  %555 = getelementptr inbounds %struct.img_par, ptr %554, i64 0, i32 6
  store i32 %553, ptr %555, align 4, !tbaa !43
  %556 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 1
  store i32 %553, ptr %556, align 4, !tbaa !492
  %557 = getelementptr inbounds %struct.img_par, ptr %554, i64 0, i32 103
  %558 = load i32, ptr %557, align 4, !tbaa !117
  %559 = sub nsw i32 0, %558
  %560 = icmp slt i32 %553, %559
  %561 = icmp sgt i32 %553, 51
  %562 = or i1 %561, %560
  br i1 %562, label %563, label %565

563:                                              ; preds = %544
  tail call void @error(ptr noundef nonnull @.str.18, i32 noundef 500) #46
  %564 = load ptr, ptr @img, align 8, !tbaa !13
  br label %565

565:                                              ; preds = %563, %544
  %566 = phi ptr [ %554, %544 ], [ %564, %563 ]
  %567 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 2
  store i32 %548, ptr %567, align 8, !tbaa !493
  %568 = getelementptr inbounds %struct.img_par, ptr %566, i64 0, i32 10
  %569 = load i32, ptr %568, align 4, !tbaa !137
  %570 = add i32 %569, -3
  %571 = icmp ult i32 %570, 2
  br i1 %571, label %572, label %589

572:                                              ; preds = %565
  %573 = icmp eq i32 %569, 3
  br i1 %573, label %574, label %578

574:                                              ; preds = %572
  %575 = tail call i32 @u_1(ptr noundef nonnull @.str.19.52, ptr noundef %13) #46
  %576 = load ptr, ptr @img, align 8, !tbaa !13
  %577 = getelementptr inbounds %struct.img_par, ptr %576, i64 0, i32 8
  store i32 %575, ptr %577, align 4, !tbaa !144
  br label %578

578:                                              ; preds = %574, %572
  %579 = tail call i32 @se_v(ptr noundef nonnull @.str.20, ptr noundef %13) #46
  %580 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %581 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %580, i64 0, i32 26
  %582 = load i32, ptr %581, align 4, !tbaa !494
  %583 = add i32 %579, 26
  %584 = add i32 %583, %582
  %585 = load ptr, ptr @img, align 8, !tbaa !13
  %586 = getelementptr inbounds %struct.img_par, ptr %585, i64 0, i32 7
  store i32 %584, ptr %586, align 8, !tbaa !136
  %587 = icmp ugt i32 %584, 51
  br i1 %587, label %588, label %589

588:                                              ; preds = %578
  tail call void @error(ptr noundef nonnull @.str.21, i32 noundef 500) #46
  br label %589

589:                                              ; preds = %588, %578, %565
  %590 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %591 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %590, i64 0, i32 29
  %592 = load i32, ptr %591, align 8, !tbaa !495
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %607, label %594

594:                                              ; preds = %589
  %595 = tail call i32 @ue_v(ptr noundef nonnull @.str.22, ptr noundef %13) #46
  %596 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 21
  store i32 %595, ptr %596, align 8, !tbaa !496
  %597 = icmp eq i32 %595, 1
  %598 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 22
  br i1 %597, label %605, label %599

599:                                              ; preds = %594
  %600 = tail call i32 @se_v(ptr noundef nonnull @.str.23, ptr noundef %13) #46
  %601 = shl nsw i32 %600, 1
  store i32 %601, ptr %598, align 4, !tbaa !497
  %602 = tail call i32 @se_v(ptr noundef nonnull @.str.24, ptr noundef %13) #46
  %603 = shl nsw i32 %602, 1
  %604 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 23
  store i32 %603, ptr %604, align 8, !tbaa !498
  br label %611

605:                                              ; preds = %594
  %606 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 23
  store i32 0, ptr %606, align 8, !tbaa !498
  store i32 0, ptr %598, align 4, !tbaa !497
  br label %611

607:                                              ; preds = %589
  %608 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 23
  store i32 0, ptr %608, align 8, !tbaa !498
  %609 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 22
  store i32 0, ptr %609, align 4, !tbaa !497
  %610 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 21
  store i32 0, ptr %610, align 8, !tbaa !496
  br label %611

611:                                              ; preds = %607, %605, %599
  %612 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %613 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %612, i64 0, i32 12
  %614 = load i32, ptr %613, align 4, !tbaa !418
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %650, label %616

616:                                              ; preds = %611
  %617 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %612, i64 0, i32 13
  %618 = load i32, ptr %617, align 8, !tbaa !416
  %619 = add i32 %618, -3
  %620 = icmp ult i32 %619, 3
  br i1 %620, label %621, label %650

621:                                              ; preds = %616
  %622 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %623 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %622, i64 0, i32 28
  %624 = load i32, ptr %623, align 4, !tbaa !414
  %625 = add i32 %624, 1
  %626 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %622, i64 0, i32 27
  %627 = load i32, ptr %626, align 4, !tbaa !415
  %628 = add i32 %627, 1
  %629 = mul i32 %628, %625
  %630 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %612, i64 0, i32 18
  %631 = load i32, ptr %630, align 8, !tbaa !428
  %632 = add i32 %631, 1
  %633 = udiv i32 %629, %632
  %634 = urem i32 %629, %632
  %635 = icmp ne i32 %634, 0
  %636 = zext i1 %635 to i32
  %637 = add nsw i32 %633, %636
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %645, label %639

639:                                              ; preds = %639, %621
  %640 = phi i32 [ %643, %639 ], [ 0, %621 ]
  %641 = phi i32 [ %642, %639 ], [ %637, %621 ]
  %642 = lshr i32 %641, 1
  %643 = add nuw nsw i32 %640, 1
  %644 = icmp ult i32 %641, 2
  br i1 %644, label %645, label %639, !llvm.loop !447

645:                                              ; preds = %639, %621
  %646 = phi i32 [ 0, %621 ], [ %643, %639 ]
  %647 = tail call i32 @u_v(i32 noundef %646, ptr noundef nonnull @.str.25, ptr noundef %13) #46
  %648 = load ptr, ptr @img, align 8, !tbaa !13
  %649 = getelementptr inbounds %struct.img_par, ptr %648, i64 0, i32 49
  store i32 %647, ptr %649, align 8, !tbaa !429
  br label %650

650:                                              ; preds = %645, %616, %611
  %651 = load ptr, ptr @img, align 8, !tbaa !13
  %652 = getelementptr inbounds %struct.img_par, ptr %651, i64 0, i32 89
  %653 = load i32, ptr %652, align 4, !tbaa !499
  %654 = getelementptr inbounds %struct.img_par, ptr %651, i64 0, i32 57
  %655 = load i32, ptr %654, align 8, !tbaa !441
  %656 = add i32 %655, 1
  %657 = udiv i32 %653, %656
  %658 = getelementptr inbounds %struct.img_par, ptr %651, i64 0, i32 90
  store i32 %657, ptr %658, align 8, !tbaa !500
  %659 = getelementptr inbounds %struct.img_par, ptr %651, i64 0, i32 87
  %660 = load i32, ptr %659, align 4, !tbaa !422
  %661 = mul i32 %660, %657
  %662 = getelementptr inbounds %struct.img_par, ptr %651, i64 0, i32 91
  store i32 %661, ptr %662, align 4, !tbaa !439
  %663 = mul i32 %660, %653
  %664 = getelementptr inbounds %struct.img_par, ptr %651, i64 0, i32 92
  store i32 %663, ptr %664, align 8, !tbaa !501
  %665 = load i32, ptr @UsedBits, align 4, !tbaa !18
  ret i32 %665
}

; Function Attrs: nounwind optsize uwtable
define internal void @dec_ref_pic_marking(ptr noundef %0) #0 {
  %2 = load ptr, ptr @img, align 8, !tbaa !13
  %3 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 46
  %4 = load ptr, ptr %3, align 8, !tbaa !502
  %5 = icmp eq ptr %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %6, %1
  %7 = phi ptr [ %13, %6 ], [ %4, %1 ]
  %8 = phi ptr [ %12, %6 ], [ %3, %1 ]
  %9 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %7, i64 0, i32 5
  %10 = load ptr, ptr %9, align 8, !tbaa !503
  store ptr %10, ptr %8, align 8, !tbaa !502
  tail call void @free(ptr noundef nonnull %7) #46
  %11 = load ptr, ptr @img, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.img_par, ptr %11, i64 0, i32 46
  %13 = load ptr, ptr %12, align 8, !tbaa !502
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %6, !llvm.loop !505

15:                                               ; preds = %6, %1
  %16 = phi ptr [ %2, %1 ], [ %11, %6 ]
  %17 = getelementptr inbounds %struct.img_par, ptr %16, i64 0, i32 83
  %18 = load i32, ptr %17, align 4, !tbaa !454
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %15
  %21 = tail call i32 @u_1(ptr noundef nonnull @.str.26.53, ptr noundef %0) #46
  %22 = load ptr, ptr @img, align 8, !tbaa !13
  %23 = getelementptr inbounds %struct.img_par, ptr %22, i64 0, i32 94
  store i32 %21, ptr %23, align 8, !tbaa !506
  %24 = tail call i32 @u_1(ptr noundef nonnull @.str.27, ptr noundef %0) #46
  %25 = load ptr, ptr @img, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.img_par, ptr %25, i64 0, i32 95
  store i32 %24, ptr %26, align 4, !tbaa !507
  br label %63

27:                                               ; preds = %15
  %28 = tail call i32 @u_1(ptr noundef nonnull @.str.28, ptr noundef %0) #46
  %29 = load ptr, ptr @img, align 8, !tbaa !13
  %30 = getelementptr inbounds %struct.img_par, ptr %29, i64 0, i32 96
  store i32 %28, ptr %30, align 8, !tbaa !508
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %63, label %32

32:                                               ; preds = %60, %27
  %33 = tail call noalias dereferenceable_or_null(32) ptr @calloc(i64 noundef 1, i64 noundef 32) #45
  %34 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %33, i64 0, i32 5
  store ptr null, ptr %34, align 8, !tbaa !503
  %35 = tail call i32 @ue_v(ptr noundef nonnull @.str.29.54, ptr noundef %0) #46
  store i32 %35, ptr %33, align 8, !tbaa !509
  switch i32 %35, label %48 [
    i32 3, label %36
    i32 1, label %36
    i32 2, label %39
    i32 6, label %42
    i32 4, label %45
  ]

36:                                               ; preds = %32, %32
  %37 = tail call i32 @ue_v(ptr noundef nonnull @.str.30.55, ptr noundef %0) #46
  %38 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %33, i64 0, i32 1
  store i32 %37, ptr %38, align 4, !tbaa !510
  switch i32 %35, label %48 [
    i32 2, label %39
    i32 3, label %42
  ]

39:                                               ; preds = %36, %32
  %40 = tail call i32 @ue_v(ptr noundef nonnull @.str.31, ptr noundef %0) #46
  %41 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %33, i64 0, i32 2
  store i32 %40, ptr %41, align 8, !tbaa !511
  br label %48

42:                                               ; preds = %36, %32
  %43 = tail call i32 @ue_v(ptr noundef nonnull @.str.32, ptr noundef %0) #46
  %44 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %33, i64 0, i32 3
  store i32 %43, ptr %44, align 4, !tbaa !512
  br label %48

45:                                               ; preds = %32
  %46 = tail call i32 @ue_v(ptr noundef nonnull @.str.33, ptr noundef %0) #46
  %47 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %33, i64 0, i32 4
  store i32 %46, ptr %47, align 8, !tbaa !513
  br label %48

48:                                               ; preds = %45, %42, %39, %36, %32
  %49 = load ptr, ptr @img, align 8, !tbaa !13
  %50 = getelementptr inbounds %struct.img_par, ptr %49, i64 0, i32 46
  %51 = load ptr, ptr %50, align 8, !tbaa !502
  %52 = icmp eq ptr %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %53, %48
  %54 = phi ptr [ %56, %53 ], [ %51, %48 ]
  %55 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %54, i64 0, i32 5
  %56 = load ptr, ptr %55, align 8, !tbaa !503
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %53, !llvm.loop !514

58:                                               ; preds = %53
  %.lcssa = phi ptr [ %54, %53 ]
  %59 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %.lcssa, i64 0, i32 5
  br label %60

60:                                               ; preds = %58, %48
  %61 = phi ptr [ %59, %58 ], [ %50, %48 ]
  store ptr %33, ptr %61, align 8, !tbaa !13
  %62 = icmp eq i32 %35, 0
  br i1 %62, label %63, label %32, !llvm.loop !515

63:                                               ; preds = %60, %27, %20
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @decode_poc(ptr noundef %0) #0 {
  %2 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %3 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %2, i64 0, i32 19
  %4 = load i32, ptr %3, align 4, !tbaa !458
  %5 = add i32 %4, 4
  %6 = shl nuw i32 1, %5
  %7 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %2, i64 0, i32 18
  %8 = load i32, ptr %7, align 4, !tbaa !457
  switch i32 %8, label %338 [
    i32 0, label %9
    i32 1, label %109
    i32 2, label %264
  ]

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 83
  %11 = load i32, ptr %10, align 4, !tbaa !454
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 62
  store i32 0, ptr %14, align 4, !tbaa !516
  br label %31

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 97
  %17 = load i32, ptr %16, align 4, !tbaa !517
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 63
  %21 = load i32, ptr %20, align 8, !tbaa !518
  br label %36

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 98
  %24 = load i32, ptr %23, align 8, !tbaa !519
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 62
  store i32 0, ptr %26, align 4, !tbaa !516
  br i1 %25, label %27, label %31

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 53
  %29 = load i32, ptr %28, align 8, !tbaa !520
  %30 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 63
  store i32 %29, ptr %30, align 8, !tbaa !518
  br label %36

31:                                               ; preds = %22, %13
  %32 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 63
  store i32 0, ptr %32, align 8, !tbaa !518
  %33 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 59
  %34 = load i32, ptr %33, align 8, !tbaa !459
  %35 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 63
  br label %50

36:                                               ; preds = %27, %19
  %37 = phi i32 [ %21, %19 ], [ %29, %27 ]
  %38 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 59
  %39 = load i32, ptr %38, align 8, !tbaa !459
  %40 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 63
  %41 = icmp ult i32 %39, %37
  br i1 %41, label %42, label %50

42:                                               ; preds = %36
  %43 = sub i32 %37, %39
  %44 = lshr i32 %6, 1
  %45 = icmp ult i32 %43, %44
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 62
  %48 = load i32, ptr %47, align 4, !tbaa !516
  %49 = add i32 %48, %6
  br label %66

50:                                               ; preds = %42, %36, %31
  %51 = phi ptr [ %35, %31 ], [ %40, %42 ], [ %40, %36 ]
  %52 = phi i32 [ %34, %31 ], [ %39, %42 ], [ %39, %36 ]
  %53 = phi i32 [ 0, %31 ], [ %37, %42 ], [ %37, %36 ]
  %54 = icmp ugt i32 %52, %53
  br i1 %54, label %55, label %63

55:                                               ; preds = %50
  %56 = sub i32 %52, %53
  %57 = lshr i32 %6, 1
  %58 = icmp ugt i32 %56, %57
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 62
  %61 = load i32, ptr %60, align 4, !tbaa !516
  %62 = sub i32 %61, %6
  br label %66

63:                                               ; preds = %55, %50
  %64 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 62
  %65 = load i32, ptr %64, align 4, !tbaa !516
  br label %66

66:                                               ; preds = %63, %59, %46
  %67 = phi i32 [ %62, %59 ], [ %65, %63 ], [ %49, %46 ]
  %68 = phi ptr [ %51, %59 ], [ %51, %63 ], [ %40, %46 ]
  %69 = phi i32 [ %52, %59 ], [ %52, %63 ], [ %39, %46 ]
  %70 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 64
  store i32 %67, ptr %70, align 4, !tbaa !521
  %71 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 57
  %72 = load i32, ptr %71, align 8, !tbaa !441
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %84

74:                                               ; preds = %66
  %75 = add i32 %67, %69
  %76 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 53
  store i32 %75, ptr %76, align 8, !tbaa !520
  %77 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 60
  %78 = load i32, ptr %77, align 4, !tbaa !461
  %79 = add nsw i32 %78, %75
  %80 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 54
  store i32 %79, ptr %80, align 4, !tbaa !522
  %81 = icmp sgt i32 %78, 0
  %82 = select i1 %81, i32 %75, i32 %79
  %83 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 73
  store i32 %82, ptr %83, align 8, !tbaa !523
  br label %94

84:                                               ; preds = %66
  %85 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 58
  %86 = load i32, ptr %85, align 4, !tbaa !455
  %87 = icmp eq i32 %86, 0
  %88 = add i32 %67, %69
  %89 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 73
  br i1 %87, label %90, label %92

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 53
  store i32 %88, ptr %91, align 8, !tbaa !520
  store i32 %88, ptr %89, align 8, !tbaa !523
  br label %94

92:                                               ; preds = %84
  %93 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 54
  store i32 %88, ptr %93, align 4, !tbaa !522
  store i32 %88, ptr %89, align 8, !tbaa !523
  br label %94

94:                                               ; preds = %92, %90, %74
  %95 = phi i32 [ %88, %90 ], [ %88, %92 ], [ %82, %74 ]
  %96 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 55
  store i32 %95, ptr %96, align 8, !tbaa !524
  %97 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %98 = load i32, ptr %97, align 4, !tbaa !336
  %99 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 69
  %100 = load i32, ptr %99, align 8, !tbaa !525
  %101 = icmp eq i32 %98, %100
  br i1 %101, label %103, label %102

102:                                              ; preds = %94
  store i32 %98, ptr %99, align 8, !tbaa !525
  br label %103

103:                                              ; preds = %102, %94
  %104 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 84
  %105 = load i32, ptr %104, align 8, !tbaa !489
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %338, label %107

107:                                              ; preds = %103
  store i32 %69, ptr %68, align 8, !tbaa !518
  %108 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 62
  store i32 %67, ptr %108, align 4, !tbaa !516
  br label %338

109:                                              ; preds = %1
  %110 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 83
  %111 = load i32, ptr %110, align 4, !tbaa !454
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %121, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 70
  store i32 0, ptr %114, align 4, !tbaa !526
  %115 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 61
  store i32 0, ptr %115, align 8, !tbaa !18
  %116 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %117 = load i32, ptr %116, align 4, !tbaa !336
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %145, label %119

119:                                              ; preds = %113
  tail call void @error(ptr noundef nonnull @.str.34.56, i32 noundef -1020) #46
  %120 = load ptr, ptr @active_sps, align 8, !tbaa !13
  br label %145

121:                                              ; preds = %109
  %122 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 97
  %123 = load i32, ptr %122, align 4, !tbaa !517
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 74
  store i32 0, ptr %126, align 4, !tbaa !527
  %127 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 69
  store i32 0, ptr %127, align 8, !tbaa !525
  br label %141

128:                                              ; preds = %121
  %129 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 69
  %130 = load i32, ptr %129, align 8, !tbaa !525
  %131 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %132 = load i32, ptr %131, align 4, !tbaa !336
  %133 = icmp ult i32 %132, %130
  br i1 %133, label %134, label %141

134:                                              ; preds = %128
  %135 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 74
  %136 = load i32, ptr %135, align 4, !tbaa !527
  %137 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 86
  %138 = load i32, ptr %137, align 8, !tbaa !335
  %139 = add nsw i32 %138, %136
  %140 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 70
  store i32 %139, ptr %140, align 4, !tbaa !526
  br label %145

141:                                              ; preds = %128, %125
  %142 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 74
  %143 = load i32, ptr %142, align 4, !tbaa !527
  %144 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 70
  store i32 %143, ptr %144, align 4, !tbaa !526
  br label %145

145:                                              ; preds = %141, %134, %119, %113
  %146 = phi ptr [ %2, %134 ], [ %2, %141 ], [ %2, %113 ], [ %120, %119 ]
  %147 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %146, i64 0, i32 23
  %148 = load i32, ptr %147, align 4, !tbaa !528
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %160, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 70
  %152 = load i32, ptr %151, align 4, !tbaa !526
  %153 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %154 = load i32, ptr %153, align 4, !tbaa !336
  %155 = add i32 %154, %152
  %156 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 65
  store i32 %155, ptr %156, align 8
  %157 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 84
  %158 = load i32, ptr %157, align 8, !tbaa !489
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %167, label %171

160:                                              ; preds = %145
  %161 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 65
  store i32 0, ptr %161, align 8
  %162 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 84
  %163 = load i32, ptr %162, align 8, !tbaa !489
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 71
  store i32 0, ptr %165, align 8, !tbaa !529
  %166 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 66
  store i32 0, ptr %166, align 4, !tbaa !530
  br i1 %164, label %213, label %219

167:                                              ; preds = %150
  %168 = icmp eq i32 %155, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %167
  %170 = add i32 %155, -1
  store i32 %170, ptr %156, align 8, !tbaa !531
  br label %171

171:                                              ; preds = %169, %167, %150
  %172 = phi i32 [ %170, %169 ], [ 0, %167 ], [ %155, %150 ]
  %173 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 71
  store i32 0, ptr %173, align 8, !tbaa !529
  %174 = icmp sgt i32 %148, 0
  br i1 %174, label %175, label %185

175:                                              ; preds = %171
  %176 = zext i32 %148 to i64
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %183, %177 ]
  %179 = phi i32 [ 0, %175 ], [ %182, %177 ]
  %180 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %146, i64 0, i32 24, i64 %178
  %181 = load i32, ptr %180, align 4, !tbaa !18
  %182 = add nsw i32 %179, %181
  store i32 %182, ptr %173, align 8, !tbaa !529
  %183 = add nuw nsw i64 %178, 1
  %184 = icmp eq i64 %183, %176
  br i1 %184, label %185, label %177, !llvm.loop !532

185:                                              ; preds = %177, %171
  %186 = phi i32 [ 0, %171 ], [ %182, %177 ]
  %187 = icmp eq i32 %172, 0
  br i1 %187, label %209, label %188

188:                                              ; preds = %185
  %189 = add i32 %172, -1
  %190 = udiv i32 %189, %148
  %191 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 67
  store i32 %190, ptr %191, align 8, !tbaa !533
  %192 = urem i32 %189, %148
  %193 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 68
  store i32 %192, ptr %193, align 4, !tbaa !534
  %194 = mul nsw i32 %186, %190
  %195 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 66
  store i32 %194, ptr %195, align 4, !tbaa !530
  %196 = icmp slt i32 %192, 0
  br i1 %196, label %211, label %197

197:                                              ; preds = %188
  %198 = mul nuw i32 %148, %190
  %199 = sub i32 %172, %198
  %200 = zext i32 %199 to i64
  br label %201

201:                                              ; preds = %201, %197
  %202 = phi i64 [ 0, %197 ], [ %207, %201 ]
  %203 = phi i32 [ %194, %197 ], [ %206, %201 ]
  %204 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %146, i64 0, i32 24, i64 %202
  %205 = load i32, ptr %204, align 4, !tbaa !18
  %206 = add nsw i32 %203, %205
  store i32 %206, ptr %195, align 4, !tbaa !530
  %207 = add nuw nsw i64 %202, 1
  %208 = icmp eq i64 %207, %200
  br i1 %208, label %211, label %201, !llvm.loop !535

209:                                              ; preds = %185
  %210 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 66
  store i32 0, ptr %210, align 4, !tbaa !530
  br i1 %159, label %213, label %219

211:                                              ; preds = %201, %188
  %212 = phi i32 [ %194, %188 ], [ %206, %201 ]
  br i1 %159, label %213, label %219

213:                                              ; preds = %211, %209, %160
  %214 = phi i32 [ 0, %209 ], [ %212, %211 ], [ 0, %160 ]
  %215 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %146, i64 0, i32 21
  %216 = load i32, ptr %215, align 4, !tbaa !536
  %217 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 66
  %218 = add nsw i32 %214, %216
  store i32 %218, ptr %217, align 4, !tbaa !530
  br label %219

219:                                              ; preds = %213, %211, %209, %160
  %220 = phi i32 [ %218, %213 ], [ %212, %211 ], [ 0, %209 ], [ 0, %160 ]
  %221 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 57
  %222 = load i32, ptr %221, align 8, !tbaa !441
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %237

224:                                              ; preds = %219
  %225 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 61
  %226 = load i32, ptr %225, align 8, !tbaa !18
  %227 = add nsw i32 %226, %220
  %228 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 53
  store i32 %227, ptr %228, align 8, !tbaa !520
  %229 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %146, i64 0, i32 22
  %230 = load i32, ptr %229, align 4, !tbaa !537
  %231 = add nsw i32 %230, %227
  %232 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 61, i64 1
  %233 = load i32, ptr %232, align 4, !tbaa !18
  %234 = add nsw i32 %231, %233
  %235 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 54
  store i32 %234, ptr %235, align 4, !tbaa !522
  %236 = tail call i32 @llvm.smin.i32(i32 %227, i32 %234)
  br label %254

237:                                              ; preds = %219
  %238 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 58
  %239 = load i32, ptr %238, align 4, !tbaa !455
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %246

241:                                              ; preds = %237
  %242 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 61
  %243 = load i32, ptr %242, align 8, !tbaa !18
  %244 = add nsw i32 %243, %220
  %245 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 53
  store i32 %244, ptr %245, align 8, !tbaa !520
  br label %254

246:                                              ; preds = %237
  %247 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %146, i64 0, i32 22
  %248 = load i32, ptr %247, align 4, !tbaa !537
  %249 = add nsw i32 %248, %220
  %250 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 61
  %251 = load i32, ptr %250, align 8, !tbaa !18
  %252 = add nsw i32 %249, %251
  %253 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 54
  store i32 %252, ptr %253, align 4, !tbaa !522
  br label %254

254:                                              ; preds = %246, %241, %224
  %255 = phi i32 [ %244, %241 ], [ %252, %246 ], [ %236, %224 ]
  %256 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 73
  store i32 %255, ptr %256, align 8, !tbaa !523
  %257 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 55
  store i32 %255, ptr %257, align 8, !tbaa !524
  %258 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %259 = load i32, ptr %258, align 4, !tbaa !336
  %260 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 69
  store i32 %259, ptr %260, align 8, !tbaa !525
  %261 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 70
  %262 = load i32, ptr %261, align 4, !tbaa !526
  %263 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 74
  store i32 %262, ptr %263, align 4, !tbaa !527
  br label %338

264:                                              ; preds = %1
  %265 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 83
  %266 = load i32, ptr %265, align 4, !tbaa !454
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %280, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 70
  store i32 0, ptr %269, align 4, !tbaa !526
  %270 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 54
  store i32 0, ptr %270, align 4, !tbaa !522
  %271 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 53
  store i32 0, ptr %271, align 8, !tbaa !520
  %272 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 55
  store i32 0, ptr %272, align 8, !tbaa !524
  %273 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 73
  store i32 0, ptr %273, align 8, !tbaa !523
  %274 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %275 = load i32, ptr %274, align 4, !tbaa !336
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %333, label %277

277:                                              ; preds = %268
  tail call void @error(ptr noundef nonnull @.str.34.56, i32 noundef -1020) #46
  %278 = load i32, ptr %274, align 4, !tbaa !336
  %279 = load i32, ptr %269, align 4, !tbaa !526
  br label %333

280:                                              ; preds = %264
  %281 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 97
  %282 = load i32, ptr %281, align 4, !tbaa !517
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 69
  br i1 %283, label %289, label %285

285:                                              ; preds = %280
  store i32 0, ptr %284, align 8, !tbaa !525
  %286 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 74
  store i32 0, ptr %286, align 4, !tbaa !527
  %287 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %288 = load i32, ptr %287, align 4, !tbaa !336
  br label %300

289:                                              ; preds = %280
  %290 = load i32, ptr %284, align 8, !tbaa !525
  %291 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %292 = load i32, ptr %291, align 4, !tbaa !336
  %293 = icmp ult i32 %292, %290
  br i1 %293, label %294, label %300

294:                                              ; preds = %289
  %295 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 74
  %296 = load i32, ptr %295, align 4, !tbaa !527
  %297 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 86
  %298 = load i32, ptr %297, align 8, !tbaa !335
  %299 = add nsw i32 %298, %296
  br label %304

300:                                              ; preds = %289, %285
  %301 = phi i32 [ %288, %285 ], [ %292, %289 ]
  %302 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 74
  %303 = load i32, ptr %302, align 4, !tbaa !527
  br label %304

304:                                              ; preds = %300, %294
  %305 = phi i32 [ %292, %294 ], [ %301, %300 ]
  %306 = phi i32 [ %299, %294 ], [ %303, %300 ]
  %307 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 70
  store i32 %306, ptr %307, align 4
  %308 = add i32 %306, %305
  %309 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 65
  store i32 %308, ptr %309, align 8, !tbaa !531
  %310 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 84
  %311 = load i32, ptr %310, align 8, !tbaa !489
  %312 = icmp eq i32 %311, 0
  %313 = shl i32 %308, 1
  %314 = sext i1 %312 to i32
  %315 = add i32 %313, %314
  %316 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 73
  store i32 %315, ptr %316, align 8
  %317 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 57
  %318 = load i32, ptr %317, align 8, !tbaa !441
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %324

320:                                              ; preds = %304
  %321 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 55
  store i32 %315, ptr %321, align 8, !tbaa !524
  %322 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 54
  store i32 %315, ptr %322, align 4, !tbaa !522
  %323 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 53
  store i32 %315, ptr %323, align 8, !tbaa !520
  br label %333

324:                                              ; preds = %304
  %325 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 58
  %326 = load i32, ptr %325, align 4, !tbaa !455
  %327 = icmp eq i32 %326, 0
  %328 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 55
  store i32 %315, ptr %328, align 8, !tbaa !524
  br i1 %327, label %329, label %331

329:                                              ; preds = %324
  %330 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 53
  store i32 %315, ptr %330, align 8, !tbaa !520
  br label %333

331:                                              ; preds = %324
  %332 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 54
  store i32 %315, ptr %332, align 4, !tbaa !522
  br label %333

333:                                              ; preds = %331, %329, %320, %277, %268
  %334 = phi i32 [ %306, %320 ], [ %306, %331 ], [ %306, %329 ], [ 0, %268 ], [ %279, %277 ]
  %335 = phi i32 [ %305, %320 ], [ %305, %331 ], [ %305, %329 ], [ 0, %268 ], [ %278, %277 ]
  %336 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 69
  store i32 %335, ptr %336, align 8, !tbaa !525
  %337 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 74
  store i32 %334, ptr %337, align 4, !tbaa !527
  br label %338

338:                                              ; preds = %333, %254, %107, %103, %1
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @MbAffPostProc() #0 {
  %1 = alloca [16 x [32 x i16]], align 16
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 1024, ptr nonnull %1) #48
  %4 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %5 = getelementptr inbounds %struct.storable_picture, ptr %4, i64 0, i32 32
  %6 = load ptr, ptr %5, align 8, !tbaa !47
  %7 = getelementptr inbounds %struct.storable_picture, ptr %4, i64 0, i32 33
  %8 = load ptr, ptr %7, align 8, !tbaa !82
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #48
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #48
  %9 = getelementptr inbounds %struct.storable_picture, ptr %4, i64 0, i32 31
  %10 = load i32, ptr %9, align 8, !tbaa !362
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %180

12:                                               ; preds = %173, %0
  %13 = phi ptr [ %174, %173 ], [ %4, %0 ]
  %14 = phi i64 [ %175, %173 ], [ 0, %0 ]
  %15 = getelementptr inbounds %struct.storable_picture, ptr %13, i64 0, i32 34
  %16 = load ptr, ptr %15, align 8, !tbaa !538
  %17 = getelementptr inbounds i8, ptr %16, i64 %14
  %18 = load i8, ptr %17, align 1, !tbaa !14
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %173, label %20

20:                                               ; preds = %12
  %21 = trunc i64 %14 to i32
  call void @get_mb_pos(i32 noundef %21, ptr noundef nonnull %2, ptr noundef nonnull %3, i32 noundef 0) #46
  %22 = load i32, ptr %3, align 4, !tbaa !18
  %23 = load i32, ptr %2, align 4, !tbaa !18
  %24 = sext i32 %23 to i64
  %25 = sext i32 %22 to i64
  br label %26

26:                                               ; preds = %61, %20
  %27 = phi i64 [ 0, %20 ], [ %62, %61 ]
  %28 = add nsw i64 %27, %25
  %29 = getelementptr inbounds ptr, ptr %6, i64 %28
  %30 = load ptr, ptr %29, align 8, !tbaa !13
  br label %31

31:                                               ; preds = %31, %26
  %32 = phi i64 [ 0, %26 ], [ %59, %31 ]
  %33 = or i64 %32, 1
  %34 = or i64 %32, 2
  %35 = or i64 %32, 3
  %36 = or i64 %32, 4
  %37 = or i64 %32, 5
  %38 = or i64 %32, 6
  %39 = or i64 %32, 7
  %40 = add nsw i64 %32, %24
  %41 = getelementptr inbounds i16, ptr %30, i64 %40
  %42 = load <8 x i16>, ptr %41, align 2, !tbaa !40
  %43 = getelementptr inbounds [16 x [32 x i16]], ptr %1, i64 0, i64 %32, i64 %27
  %44 = getelementptr inbounds [16 x [32 x i16]], ptr %1, i64 0, i64 %33, i64 %27
  %45 = getelementptr inbounds [16 x [32 x i16]], ptr %1, i64 0, i64 %34, i64 %27
  %46 = getelementptr inbounds [16 x [32 x i16]], ptr %1, i64 0, i64 %35, i64 %27
  %47 = getelementptr inbounds [16 x [32 x i16]], ptr %1, i64 0, i64 %36, i64 %27
  %48 = getelementptr inbounds [16 x [32 x i16]], ptr %1, i64 0, i64 %37, i64 %27
  %49 = getelementptr inbounds [16 x [32 x i16]], ptr %1, i64 0, i64 %38, i64 %27
  %50 = getelementptr inbounds [16 x [32 x i16]], ptr %1, i64 0, i64 %39, i64 %27
  %51 = extractelement <8 x i16> %42, i64 0
  store i16 %51, ptr %43, align 2, !tbaa !40
  %52 = extractelement <8 x i16> %42, i64 1
  store i16 %52, ptr %44, align 2, !tbaa !40
  %53 = extractelement <8 x i16> %42, i64 2
  store i16 %53, ptr %45, align 2, !tbaa !40
  %54 = extractelement <8 x i16> %42, i64 3
  store i16 %54, ptr %46, align 2, !tbaa !40
  %55 = extractelement <8 x i16> %42, i64 4
  store i16 %55, ptr %47, align 2, !tbaa !40
  %56 = extractelement <8 x i16> %42, i64 5
  store i16 %56, ptr %48, align 2, !tbaa !40
  %57 = extractelement <8 x i16> %42, i64 6
  store i16 %57, ptr %49, align 2, !tbaa !40
  %58 = extractelement <8 x i16> %42, i64 7
  store i16 %58, ptr %50, align 2, !tbaa !40
  %59 = add nuw i64 %32, 8
  %60 = icmp eq i64 %59, 16
  br i1 %60, label %61, label %31, !llvm.loop !539

61:                                               ; preds = %31
  %62 = add nuw nsw i64 %27, 1
  %63 = icmp eq i64 %62, 32
  br i1 %63, label %64, label %26, !llvm.loop !540

64:                                               ; preds = %86, %61
  %65 = phi i64 [ %87, %86 ], [ 0, %61 ]
  %66 = shl nuw nsw i64 %65, 1
  %67 = add nsw i64 %66, %25
  %68 = getelementptr inbounds ptr, ptr %6, i64 %67
  %69 = load ptr, ptr %68, align 8, !tbaa !13
  %70 = add nuw nsw i64 %65, 16
  %71 = or i64 %66, 1
  %72 = add nsw i64 %71, %25
  %73 = getelementptr inbounds ptr, ptr %6, i64 %72
  %74 = load ptr, ptr %73, align 8, !tbaa !13
  br label %75

75:                                               ; preds = %75, %64
  %76 = phi i64 [ 0, %64 ], [ %84, %75 ]
  %77 = getelementptr inbounds [16 x [32 x i16]], ptr %1, i64 0, i64 %76, i64 %65
  %78 = load i16, ptr %77, align 2, !tbaa !40
  %79 = add nsw i64 %76, %24
  %80 = getelementptr inbounds i16, ptr %69, i64 %79
  store i16 %78, ptr %80, align 2, !tbaa !40
  %81 = getelementptr inbounds [16 x [32 x i16]], ptr %1, i64 0, i64 %76, i64 %70
  %82 = load i16, ptr %81, align 2, !tbaa !40
  %83 = getelementptr inbounds i16, ptr %74, i64 %79
  store i16 %82, ptr %83, align 2, !tbaa !40
  %84 = add nuw nsw i64 %76, 1
  %85 = icmp eq i64 %84, 16
  br i1 %85, label %86, label %75, !llvm.loop !541

86:                                               ; preds = %75
  %87 = add nuw nsw i64 %65, 1
  %88 = icmp eq i64 %87, 16
  br i1 %88, label %89, label %64, !llvm.loop !542

89:                                               ; preds = %86
  %90 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %91 = getelementptr inbounds %struct.storable_picture, ptr %90, i64 0, i32 50
  %92 = load i32, ptr %91, align 4, !tbaa !83
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %173, label %94

94:                                               ; preds = %89
  %95 = load ptr, ptr @img, align 8, !tbaa !13
  %96 = getelementptr inbounds %struct.img_par, ptr %95, i64 0, i32 115
  %97 = load i32, ptr %96, align 4, !tbaa !85
  %98 = sdiv i32 16, %97
  %99 = sdiv i32 %23, %98
  store i32 %99, ptr %2, align 4, !tbaa !18
  %100 = getelementptr inbounds %struct.img_par, ptr %95, i64 0, i32 116
  %101 = load i32, ptr %100, align 8, !tbaa !86
  %102 = sdiv i32 16, %101
  %103 = sdiv i32 %22, %102
  store i32 %103, ptr %3, align 4, !tbaa !18
  %104 = shl i32 %101, 1
  %105 = icmp sgt i32 %101, 0
  %106 = add i32 %103, 1
  %107 = sext i32 %99 to i64
  %108 = sext i32 %103 to i64
  %109 = call i32 @llvm.smax.i32(i32 %104, i32 1)
  %110 = sext i32 %101 to i64
  %111 = icmp sgt i32 %97, 0
  %112 = zext i32 %109 to i64
  %113 = zext i32 %97 to i64
  %114 = icmp sgt i32 %97, 0
  %115 = zext i32 %101 to i64
  %116 = zext i32 %97 to i64
  br label %117

117:                                              ; preds = %172, %94
  %118 = phi i1 [ true, %94 ], [ false, %172 ]
  %119 = phi i64 [ 0, %94 ], [ 1, %172 ]
  br i1 %105, label %120, label %172

120:                                              ; preds = %117
  %121 = getelementptr inbounds ptr, ptr %8, i64 %119
  br label %125

122:                                              ; preds = %140
  br i1 %105, label %123, label %172

123:                                              ; preds = %122
  %124 = getelementptr inbounds ptr, ptr %8, i64 %119
  br label %143

125:                                              ; preds = %140, %120
  %126 = phi i64 [ 0, %120 ], [ %141, %140 ]
  br i1 %111, label %127, label %140

127:                                              ; preds = %125
  %128 = load ptr, ptr %121, align 8, !tbaa !13
  %129 = add nsw i64 %126, %108
  %130 = getelementptr inbounds ptr, ptr %128, i64 %129
  %131 = load ptr, ptr %130, align 8, !tbaa !13
  br label %132

132:                                              ; preds = %132, %127
  %133 = phi i64 [ 0, %127 ], [ %138, %132 ]
  %134 = add nsw i64 %133, %107
  %135 = getelementptr inbounds i16, ptr %131, i64 %134
  %136 = load i16, ptr %135, align 2, !tbaa !40
  %137 = getelementptr inbounds [16 x [32 x i16]], ptr %1, i64 0, i64 %133, i64 %126
  store i16 %136, ptr %137, align 2, !tbaa !40
  %138 = add nuw nsw i64 %133, 1
  %139 = icmp eq i64 %138, %113
  br i1 %139, label %140, label %132, !llvm.loop !543

140:                                              ; preds = %132, %125
  %141 = add nuw nsw i64 %126, 1
  %142 = icmp eq i64 %141, %112
  br i1 %142, label %122, label %125, !llvm.loop !544

143:                                              ; preds = %169, %123
  %144 = phi i64 [ 0, %123 ], [ %170, %169 ]
  br i1 %114, label %145, label %169

145:                                              ; preds = %143
  %146 = load ptr, ptr %124, align 8, !tbaa !13
  %147 = trunc i64 %144 to i32
  %148 = shl i32 %147, 1
  %149 = add nsw i32 %148, %103
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds ptr, ptr %146, i64 %150
  %152 = load ptr, ptr %151, align 8, !tbaa !13
  %153 = add nsw i64 %144, %110
  %154 = add i32 %106, %148
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds ptr, ptr %146, i64 %155
  %157 = load ptr, ptr %156, align 8, !tbaa !13
  br label %158

158:                                              ; preds = %158, %145
  %159 = phi i64 [ 0, %145 ], [ %167, %158 ]
  %160 = getelementptr inbounds [16 x [32 x i16]], ptr %1, i64 0, i64 %159, i64 %144
  %161 = load i16, ptr %160, align 2, !tbaa !40
  %162 = add nsw i64 %159, %107
  %163 = getelementptr inbounds i16, ptr %152, i64 %162
  store i16 %161, ptr %163, align 2, !tbaa !40
  %164 = getelementptr inbounds [16 x [32 x i16]], ptr %1, i64 0, i64 %159, i64 %153
  %165 = load i16, ptr %164, align 2, !tbaa !40
  %166 = getelementptr inbounds i16, ptr %157, i64 %162
  store i16 %165, ptr %166, align 2, !tbaa !40
  %167 = add nuw nsw i64 %159, 1
  %168 = icmp eq i64 %167, %116
  br i1 %168, label %169, label %158, !llvm.loop !545

169:                                              ; preds = %158, %143
  %170 = add nuw nsw i64 %144, 1
  %171 = icmp eq i64 %170, %115
  br i1 %171, label %172, label %143, !llvm.loop !546

172:                                              ; preds = %169, %122, %117
  br i1 %118, label %117, label %173, !llvm.loop !547

173:                                              ; preds = %172, %89, %12
  %174 = phi ptr [ %13, %12 ], [ %90, %89 ], [ %90, %172 ]
  %175 = add nuw i64 %14, 2
  %176 = getelementptr inbounds %struct.storable_picture, ptr %174, i64 0, i32 31
  %177 = load i32, ptr %176, align 8, !tbaa !362
  %178 = trunc i64 %175 to i32
  %179 = icmp sgt i32 %177, %178
  br i1 %179, label %12, label %180, !llvm.loop !548

180:                                              ; preds = %173, %0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #48
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %1) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @decode_one_frame(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readnone %2) #0 {
  %4 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %5 = load ptr, ptr %4, align 8, !tbaa !165
  %6 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 3
  store i32 0, ptr %6, align 4, !tbaa !175
  %7 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  store i32 -4711, ptr %7, align 4, !tbaa !49
  %8 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 8
  store i32 -8888, ptr %8, align 8, !tbaa !549
  %9 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 2
  store i32 0, ptr %9, align 8, !tbaa !550
  %10 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 35
  store i32 1, ptr %10, align 4, !tbaa !551
  %11 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %12 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 50
  br label %13

13:                                               ; preds = %37, %3
  %14 = tail call i32 @read_new_slice() #47, !range !552
  tail call void @Error_tracking() #47
  %15 = load i32, ptr %11, align 4, !tbaa !336
  %16 = load i32, ptr @previous_frame_num, align 4, !tbaa !18
  %17 = icmp eq i32 %15, %16
  %18 = load i32, ptr %12, align 4, !tbaa !464
  %19 = load i32, ptr @Is_primary_correct, align 4
  br i1 %17, label %20, label %28

20:                                               ; preds = %13
  %21 = icmp ne i32 %18, 0
  %22 = icmp ne i32 %19, 0
  %23 = select i1 %21, i1 %22, i1 false
  %24 = icmp ne i32 %14, 1
  %25 = select i1 %23, i1 %24, i1 false
  br i1 %25, label %37, label %26

26:                                               ; preds = %20
  %27 = icmp eq i32 %18, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %26, %13
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(64) getelementptr inbounds ([17 x i32], ptr @ref_flag, i64 0, i64 1), ptr noundef nonnull align 16 dereferenceable(64) @ref_flag, i64 64, i1 false), !tbaa !18
  br label %29

29:                                               ; preds = %28, %26
  %30 = icmp eq i32 %18, 0
  %31 = load i32, ptr @Is_redundant_correct, align 4
  %32 = select i1 %30, i32 %19, i32 %31
  store i32 %32, ptr @ref_flag, align 16, !tbaa !18
  store i32 %15, ptr @previous_frame_num, align 4, !tbaa !18
  %33 = icmp eq i32 %14, 1
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  tail call void @decode_slice(ptr noundef nonnull %0, ptr noundef %1, i32 noundef %14) #47
  store i32 0, ptr %10, align 4, !tbaa !551
  %35 = load i32, ptr %6, align 4, !tbaa !175
  %36 = add nsw i32 %35, 1
  store i32 %36, ptr %6, align 4, !tbaa !175
  br label %37

37:                                               ; preds = %34, %20
  %38 = load i32, ptr %8, align 8, !tbaa !549
  %39 = add i32 %38, -1
  %40 = icmp ult i32 %39, 2
  br i1 %40, label %41, label %13, !llvm.loop !553

41:                                               ; preds = %37, %29
  %42 = phi i32 [ 1, %29 ], [ 2, %37 ]
  tail call void @exit_picture() #47
  ret i32 %42
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @read_new_slice() #0 {
  %1 = alloca i32, align 4
  %2 = tail call ptr (i32, ...) @AllocNALU(i32 noundef 8000000) #46
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %1) #48
  %3 = load ptr, ptr @img, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.img_par, ptr %3, i64 0, i32 38
  %5 = load ptr, ptr %4, align 8, !tbaa !165
  %6 = getelementptr inbounds %struct.NALU_t, ptr %2, i64 0, i32 5
  %7 = getelementptr inbounds %struct.NALU_t, ptr %2, i64 0, i32 3
  %8 = getelementptr inbounds %struct.NALU_t, ptr %2, i64 0, i32 1
  %9 = getelementptr inbounds %struct.NALU_t, ptr %2, i64 0, i32 6
  br label %10

10:                                               ; preds = %74, %0
  %11 = load ptr, ptr @bits, align 8, !tbaa !13
  %12 = call i64 @ftell(ptr noundef %11) #47
  %13 = load ptr, ptr @input, align 8, !tbaa !13
  %14 = getelementptr inbounds %struct.inp_par, ptr %13, i64 0, i32 3
  %15 = load i32, ptr %14, align 4, !tbaa !554
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %10
  %18 = call i32 @GetAnnexbNALU(ptr noundef %2) #46
  br label %21

19:                                               ; preds = %10
  %20 = call i32 @GetRTPNALU(ptr noundef %2) #46
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi i32 [ %20, %19 ], [ %18, %17 ]
  store i32 %22, ptr %1, align 4, !tbaa !18
  call void @CheckZeroByteNonVCL(ptr noundef %2, ptr noundef nonnull %1) #46
  %23 = call i32 @NALUtoRBSP(ptr noundef %2) #46
  %24 = load i32, ptr %1, align 4, !tbaa !18
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %21
  %27 = load ptr, ptr @input, align 8, !tbaa !13
  %28 = getelementptr inbounds %struct.inp_par, ptr %27, i64 0, i32 3
  %29 = load i32, ptr %28, align 4, !tbaa !554
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, ptr @.str.11.62, ptr @.str.12.63
  %32 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.10.64, ptr noundef nonnull %31) #47
  %33 = load i32, ptr %1, align 4, !tbaa !18
  br label %34

34:                                               ; preds = %26, %21
  %35 = phi i32 [ %33, %26 ], [ %24, %21 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @FreeNALU(ptr noundef %2) #46
  br label %409

38:                                               ; preds = %34
  %39 = load i32, ptr %6, align 4, !tbaa !22
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  %42 = call i32 @puts(ptr nonnull dereferenceable(1) @str.47)
  br label %43

43:                                               ; preds = %41, %38
  %44 = load i32, ptr %7, align 4, !tbaa !24
  switch i32 %44, label %406 [
    i32 1, label %45
    i32 5, label %45
    i32 2, label %183
    i32 3, label %390
    i32 4, label %392
    i32 6, label %394
    i32 8, label %400
    i32 7, label %401
    i32 9, label %74
    i32 10, label %74
    i32 11, label %74
    i32 12, label %402
  ]

45:                                               ; preds = %43, %43
  %46 = load ptr, ptr @img, align 8, !tbaa !13
  %47 = getelementptr inbounds %struct.img_par, ptr %46, i64 0, i32 135
  %48 = load i32, ptr %47, align 8, !tbaa !556
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %55

50:                                               ; preds = %45
  %51 = icmp eq i32 %44, 5
  %52 = getelementptr inbounds %struct.img_par, ptr %46, i64 0, i32 136
  %53 = load i32, ptr %52, align 4, !tbaa !557
  %54 = icmp eq i32 %53, 0
  br i1 %51, label %59, label %73

55:                                               ; preds = %45
  %.lcssa5 = phi ptr [ %46, %45 ]
  %.lcssa2 = phi i32 [ %44, %45 ]
  %56 = getelementptr inbounds %struct.img_par, ptr %.lcssa5, i64 0, i32 136
  %57 = load i32, ptr %56, align 4, !tbaa !557
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %68

59:                                               ; preds = %50
  %.lcssa6 = phi ptr [ %46, %50 ]
  %.lcssa3 = phi i32 [ %44, %50 ]
  %.lcssa = phi i1 [ %54, %50 ]
  br i1 %.lcssa, label %65, label %68

60:                                               ; preds = %55
  %61 = icmp eq i32 %.lcssa2, 5
  br i1 %61, label %65, label %62

62:                                               ; preds = %60
  %63 = call i32 @puts(ptr nonnull dereferenceable(1) @str.46)
  store i32 1, ptr @non_conforming_stream, align 4, !tbaa !18
  %64 = load ptr, ptr @img, align 8, !tbaa !13
  br label %68

65:                                               ; preds = %60, %59
  %66 = phi ptr [ %.lcssa5, %60 ], [ %.lcssa6, %59 ]
  %67 = phi i32 [ %.lcssa2, %60 ], [ %.lcssa3, %59 ]
  store i32 0, ptr @non_conforming_stream, align 4, !tbaa !18
  br label %68

68:                                               ; preds = %65, %62, %59, %55
  %69 = phi ptr [ %.lcssa6, %59 ], [ %.lcssa5, %62 ], [ %66, %65 ], [ %.lcssa5, %55 ]
  %70 = phi i32 [ %.lcssa3, %59 ], [ %.lcssa2, %62 ], [ %67, %65 ], [ %.lcssa2, %55 ]
  %71 = phi ptr [ %.lcssa6, %59 ], [ %64, %62 ], [ %66, %65 ], [ %.lcssa5, %55 ]
  %72 = getelementptr inbounds %struct.img_par, ptr %71, i64 0, i32 136
  store i32 1, ptr %72, align 4, !tbaa !557
  br label %75

73:                                               ; preds = %50
  br i1 %54, label %74, label %75

74:                                               ; preds = %406, %402, %401, %400, %394, %392, %390, %73, %43, %43, %43
  br label %10

75:                                               ; preds = %73, %68
  %76 = phi ptr [ %71, %68 ], [ %46, %73 ]
  %77 = load i32, ptr %7, align 4, !tbaa !24
  %78 = icmp eq i32 %77, 5
  %79 = zext i1 %78 to i32
  %80 = getelementptr inbounds %struct.img_par, ptr %76, i64 0, i32 83
  store i32 %79, ptr %80, align 4, !tbaa !454
  %81 = getelementptr inbounds %struct.NALU_t, ptr %2, i64 0, i32 4
  %82 = load i32, ptr %81, align 8, !tbaa !23
  %83 = getelementptr inbounds %struct.img_par, ptr %76, i64 0, i32 84
  store i32 %82, ptr %83, align 8, !tbaa !489
  %84 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 7
  store i32 0, ptr %84, align 4, !tbaa !213
  %85 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 6
  store i32 1, ptr %85, align 8, !tbaa !558
  store i32 0, ptr %5, align 8, !tbaa !559
  %86 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 9
  %87 = load ptr, ptr %86, align 8, !tbaa !214
  %88 = load ptr, ptr %87, align 8, !tbaa !448
  %89 = getelementptr inbounds %struct.Bitstream, ptr %88, i64 0, i32 5
  store i32 0, ptr %89, align 8, !tbaa !560
  store i32 0, ptr %88, align 8, !tbaa !215
  %90 = getelementptr inbounds %struct.Bitstream, ptr %88, i64 0, i32 2
  store i32 0, ptr %90, align 8, !tbaa !450
  %91 = getelementptr inbounds %struct.Bitstream, ptr %88, i64 0, i32 4
  %92 = load ptr, ptr %91, align 8, !tbaa !218
  %93 = load ptr, ptr %9, align 8, !tbaa !21
  %94 = getelementptr inbounds i8, ptr %93, i64 1
  %95 = load i32, ptr %8, align 4, !tbaa !20
  %96 = add i32 %95, -1
  %97 = zext i32 %96 to i64
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %92, ptr nonnull align 1 %94, i64 %97, i1 false)
  %98 = load ptr, ptr %91, align 8, !tbaa !218
  %99 = load i32, ptr %8, align 4, !tbaa !20
  %100 = add i32 %99, -1
  %101 = call i32 @RBSPtoSODB(ptr noundef %98, i32 noundef %100) #46
  %102 = getelementptr inbounds %struct.Bitstream, ptr %88, i64 0, i32 3
  store i32 %101, ptr %102, align 4, !tbaa !561
  %103 = getelementptr inbounds %struct.Bitstream, ptr %88, i64 0, i32 1
  store i32 %101, ptr %103, align 4, !tbaa !217
  %104 = call i32 (...) @FirstPartOfSliceHeader() #46
  %105 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 24
  %106 = load i32, ptr %105, align 4, !tbaa !453
  call void @UseParameterSet(i32 noundef %106) #46
  %107 = call i32 (...) @RestOfSliceHeader() #46
  %108 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %109 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %110 = call i32 @FmoInit(ptr noundef %108, ptr noundef %109) #46
  %111 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %112 = load ptr, ptr @active_sps, align 8, !tbaa !13
  call void @AssignQuantParam(ptr noundef %111, ptr noundef %112) #46
  %113 = load ptr, ptr @img, align 8, !tbaa !13
  %114 = getelementptr inbounds %struct.img_par, ptr %113, i64 0, i32 50
  %115 = load i32, ptr %114, align 4, !tbaa !464
  %116 = icmp ne i32 %115, 0
  %117 = load i32, ptr @Is_primary_correct, align 4
  %118 = icmp eq i32 %117, 0
  %119 = select i1 %116, i1 %118, i1 false
  %120 = load i32, ptr @Is_redundant_correct, align 4
  %121 = icmp ne i32 %120, 0
  %122 = select i1 %119, i1 %121, i1 false
  br i1 %122, label %123, label %128

123:                                              ; preds = %75
  %124 = getelementptr inbounds %struct.img_par, ptr %113, i64 0, i32 10
  %125 = load i32, ptr %124, align 4, !tbaa !137
  %126 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %127 = getelementptr inbounds %struct.storable_picture, ptr %126, i64 0, i32 45
  store i32 %125, ptr %127, align 8, !tbaa !359
  br label %128

128:                                              ; preds = %123, %75
  %129 = call i32 @is_new_picture() #47, !range !562
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %134, label %131

131:                                              ; preds = %128
  %132 = load ptr, ptr @input, align 8, !tbaa !13
  call void @init_picture(ptr noundef nonnull %113, ptr noundef %132) #47
  call void @CheckZeroByteVCL(ptr noundef nonnull %2, ptr noundef nonnull %1) #46
  %133 = load ptr, ptr @img, align 8, !tbaa !13
  br label %134

134:                                              ; preds = %131, %128
  %135 = phi ptr [ %133, %131 ], [ %113, %128 ]
  %136 = phi i32 [ 2, %131 ], [ 3, %128 ]
  %137 = getelementptr inbounds %struct.img_par, ptr %135, i64 0, i32 10
  %138 = load i32, ptr %137, align 4, !tbaa !137
  %139 = getelementptr inbounds %struct.img_par, ptr %135, i64 0, i32 38
  %140 = load ptr, ptr %139, align 8, !tbaa !165
  %141 = getelementptr inbounds %struct.Slice, ptr %140, i64 0, i32 4
  %142 = load i32, ptr %141, align 8, !tbaa !370
  call void @init_lists(i32 noundef %138, i32 noundef %142) #46
  %143 = load ptr, ptr @img, align 8, !tbaa !13
  %144 = getelementptr inbounds %struct.img_par, ptr %143, i64 0, i32 10
  %145 = load i32, ptr %144, align 4, !tbaa !137
  %146 = getelementptr inbounds %struct.img_par, ptr %143, i64 0, i32 38
  %147 = load ptr, ptr %146, align 8, !tbaa !165
  call void @reorder_lists(i32 noundef %145, ptr noundef %147) #47
  %148 = load ptr, ptr @img, align 8, !tbaa !13
  %149 = getelementptr inbounds %struct.img_par, ptr %148, i64 0, i32 36
  %150 = load i32, ptr %149, align 8, !tbaa !206
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %134
  call void (...) @init_mbaff_lists() #46
  %153 = load ptr, ptr @img, align 8, !tbaa !13
  br label %154

154:                                              ; preds = %152, %134
  %155 = phi ptr [ %153, %152 ], [ %148, %134 ]
  %156 = getelementptr inbounds %struct.img_par, ptr %155, i64 0, i32 44
  %157 = load i32, ptr %156, align 8, !tbaa !189
  %158 = icmp ne i32 %157, 0
  %159 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 5
  %160 = load i32, ptr %159, align 4, !tbaa !451
  %161 = zext i1 %158 to i32
  %162 = shl i32 %160, %161
  %163 = getelementptr inbounds %struct.img_par, ptr %155, i64 0, i32 1
  store i32 %162, ptr %163, align 4
  %164 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %165 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %164, i64 0, i32 3
  %166 = load i32, ptr %165, align 4, !tbaa !490
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %180, label %168

168:                                              ; preds = %154
  %169 = load i32, ptr %90, align 8, !tbaa !450
  %170 = sdiv i32 %169, 8
  %171 = and i32 %169, 7
  %172 = icmp ne i32 %171, 0
  %173 = zext i1 %172 to i32
  %174 = add nsw i32 %170, %173
  %175 = load ptr, ptr %86, align 8, !tbaa !214
  %176 = getelementptr inbounds %struct.datapartition, ptr %175, i64 0, i32 1
  %177 = load ptr, ptr %91, align 8, !tbaa !218
  %178 = getelementptr inbounds %struct.img_par, ptr %155, i64 0, i32 10
  %179 = load i32, ptr %178, align 4, !tbaa !137
  call void @arideco_start_decoding(ptr noundef nonnull %176, ptr noundef %177, i32 noundef %174, ptr noundef nonnull %88, i32 noundef %179) #46
  br label %180

180:                                              ; preds = %168, %154
  call void @FreeNALU(ptr noundef nonnull %2) #46
  %181 = load ptr, ptr @img, align 8, !tbaa !13
  %182 = getelementptr inbounds %struct.img_par, ptr %181, i64 0, i32 135
  store i32 0, ptr %182, align 8, !tbaa !556
  br label %409

183:                                              ; preds = %43
  %184 = load ptr, ptr @img, align 8, !tbaa !13
  %185 = getelementptr inbounds %struct.img_par, ptr %184, i64 0, i32 83
  store i32 0, ptr %185, align 4, !tbaa !454
  %186 = getelementptr inbounds %struct.NALU_t, ptr %2, i64 0, i32 4
  %187 = load i32, ptr %186, align 8, !tbaa !23
  %188 = getelementptr inbounds %struct.img_par, ptr %184, i64 0, i32 84
  store i32 %187, ptr %188, align 8, !tbaa !489
  %189 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 7
  store i32 1, ptr %189, align 4, !tbaa !213
  %190 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 6
  store i32 3, ptr %190, align 8, !tbaa !558
  store i32 0, ptr %5, align 8, !tbaa !559
  %191 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 9
  %192 = load ptr, ptr %191, align 8, !tbaa !214
  %193 = load ptr, ptr %192, align 8, !tbaa !448
  %194 = getelementptr inbounds %struct.Bitstream, ptr %193, i64 0, i32 5
  store i32 0, ptr %194, align 8, !tbaa !560
  store i32 0, ptr %193, align 8, !tbaa !215
  %195 = getelementptr inbounds %struct.Bitstream, ptr %193, i64 0, i32 2
  store i32 0, ptr %195, align 8, !tbaa !450
  %196 = getelementptr inbounds %struct.Bitstream, ptr %193, i64 0, i32 4
  %197 = load ptr, ptr %196, align 8, !tbaa !218
  %198 = load ptr, ptr %9, align 8, !tbaa !21
  %199 = getelementptr inbounds i8, ptr %198, i64 1
  %200 = load i32, ptr %8, align 4, !tbaa !20
  %201 = add i32 %200, -1
  %202 = zext i32 %201 to i64
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %197, ptr nonnull align 1 %199, i64 %202, i1 false)
  %203 = load ptr, ptr %196, align 8, !tbaa !218
  %204 = load i32, ptr %8, align 4, !tbaa !20
  %205 = add i32 %204, -1
  %206 = call i32 @RBSPtoSODB(ptr noundef %203, i32 noundef %205) #46
  %207 = getelementptr inbounds %struct.Bitstream, ptr %193, i64 0, i32 3
  store i32 %206, ptr %207, align 4, !tbaa !561
  %208 = getelementptr inbounds %struct.Bitstream, ptr %193, i64 0, i32 1
  store i32 %206, ptr %208, align 4, !tbaa !217
  %209 = call i32 (...) @FirstPartOfSliceHeader() #46
  %210 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 24
  %211 = load i32, ptr %210, align 4, !tbaa !453
  call void @UseParameterSet(i32 noundef %211) #46
  %212 = call i32 (...) @RestOfSliceHeader() #46
  %213 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %214 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %215 = call i32 @FmoInit(ptr noundef %213, ptr noundef %214) #46
  %216 = call i32 @is_new_picture() #47, !range !562
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %221, label %218

218:                                              ; preds = %183
  %219 = load ptr, ptr @img, align 8, !tbaa !13
  %220 = load ptr, ptr @input, align 8, !tbaa !13
  call void @init_picture(ptr noundef %219, ptr noundef %220) #47
  call void @CheckZeroByteVCL(ptr noundef nonnull %2, ptr noundef nonnull %1) #46
  br label %221

221:                                              ; preds = %218, %183
  %222 = phi i32 [ 2, %218 ], [ 3, %183 ]
  %223 = load ptr, ptr @img, align 8, !tbaa !13
  %224 = getelementptr inbounds %struct.img_par, ptr %223, i64 0, i32 10
  %225 = load i32, ptr %224, align 4, !tbaa !137
  %226 = getelementptr inbounds %struct.img_par, ptr %223, i64 0, i32 38
  %227 = load ptr, ptr %226, align 8, !tbaa !165
  %228 = getelementptr inbounds %struct.Slice, ptr %227, i64 0, i32 4
  %229 = load i32, ptr %228, align 8, !tbaa !370
  call void @init_lists(i32 noundef %225, i32 noundef %229) #46
  %230 = load ptr, ptr @img, align 8, !tbaa !13
  %231 = getelementptr inbounds %struct.img_par, ptr %230, i64 0, i32 10
  %232 = load i32, ptr %231, align 4, !tbaa !137
  %233 = getelementptr inbounds %struct.img_par, ptr %230, i64 0, i32 38
  %234 = load ptr, ptr %233, align 8, !tbaa !165
  call void @reorder_lists(i32 noundef %232, ptr noundef %234) #47
  %235 = load ptr, ptr @img, align 8, !tbaa !13
  %236 = getelementptr inbounds %struct.img_par, ptr %235, i64 0, i32 36
  %237 = load i32, ptr %236, align 8, !tbaa !206
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %241

239:                                              ; preds = %221
  call void (...) @init_mbaff_lists() #46
  %240 = load ptr, ptr @img, align 8, !tbaa !13
  br label %241

241:                                              ; preds = %239, %221
  %242 = phi ptr [ %240, %239 ], [ %235, %221 ]
  %243 = getelementptr inbounds %struct.img_par, ptr %242, i64 0, i32 44
  %244 = load i32, ptr %243, align 8, !tbaa !189
  %245 = icmp ne i32 %244, 0
  %246 = getelementptr inbounds %struct.Slice, ptr %5, i64 0, i32 5
  %247 = load i32, ptr %246, align 4, !tbaa !451
  %248 = zext i1 %245 to i32
  %249 = shl i32 %247, %248
  %250 = getelementptr inbounds %struct.img_par, ptr %242, i64 0, i32 1
  store i32 %249, ptr %250, align 4
  %251 = call i32 @ue_v(ptr noundef nonnull @.str.16.65, ptr noundef nonnull %193) #46
  %252 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %253 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %252, i64 0, i32 3
  %254 = load i32, ptr %253, align 4, !tbaa !490
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %257, label %256

256:                                              ; preds = %241
  call void @error(ptr noundef nonnull @.str.17.66, i32 noundef 500) #46
  br label %257

257:                                              ; preds = %256, %241
  %258 = load ptr, ptr @bits, align 8, !tbaa !13
  %259 = call i64 @ftell(ptr noundef %258) #47
  %260 = load ptr, ptr @input, align 8, !tbaa !13
  %261 = getelementptr inbounds %struct.inp_par, ptr %260, i64 0, i32 3
  %262 = load i32, ptr %261, align 4, !tbaa !554
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %266

264:                                              ; preds = %257
  %265 = call i32 @GetAnnexbNALU(ptr noundef nonnull %2) #46
  br label %268

266:                                              ; preds = %257
  %267 = call i32 @GetRTPNALU(ptr noundef nonnull %2) #46
  br label %268

268:                                              ; preds = %266, %264
  %269 = phi i32 [ %267, %266 ], [ %265, %264 ]
  store i32 %269, ptr %1, align 4, !tbaa !18
  call void @CheckZeroByteNonVCL(ptr noundef nonnull %2, ptr noundef nonnull %1) #46
  %270 = call i32 @NALUtoRBSP(ptr noundef nonnull %2) #46
  %271 = load i32, ptr %1, align 4, !tbaa !18
  %272 = icmp slt i32 %271, 0
  br i1 %272, label %273, label %281

273:                                              ; preds = %268
  %274 = load ptr, ptr @input, align 8, !tbaa !13
  %275 = getelementptr inbounds %struct.inp_par, ptr %274, i64 0, i32 3
  %276 = load i32, ptr %275, align 4, !tbaa !554
  %277 = icmp eq i32 %276, 0
  %278 = select i1 %277, ptr @.str.11.62, ptr @.str.12.63
  %279 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.10.64, ptr noundef nonnull %278) #47
  %280 = load i32, ptr %1, align 4, !tbaa !18
  br label %281

281:                                              ; preds = %273, %268
  %282 = phi i32 [ %280, %273 ], [ %271, %268 ]
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  call void @FreeNALU(ptr noundef nonnull %2) #46
  br label %409

285:                                              ; preds = %281
  %286 = load i32, ptr %7, align 4, !tbaa !24
  %287 = icmp eq i32 %286, 3
  br i1 %287, label %288, label %348

288:                                              ; preds = %285
  %289 = load ptr, ptr %191, align 8, !tbaa !214
  %290 = getelementptr inbounds %struct.datapartition, ptr %289, i64 1
  %291 = load ptr, ptr %290, align 8, !tbaa !448
  %292 = getelementptr inbounds %struct.Bitstream, ptr %291, i64 0, i32 5
  store i32 0, ptr %292, align 8, !tbaa !560
  store i32 0, ptr %291, align 8, !tbaa !215
  %293 = getelementptr inbounds %struct.Bitstream, ptr %291, i64 0, i32 2
  store i32 0, ptr %293, align 8, !tbaa !450
  %294 = getelementptr inbounds %struct.Bitstream, ptr %291, i64 0, i32 4
  %295 = load ptr, ptr %294, align 8, !tbaa !218
  %296 = load ptr, ptr %9, align 8, !tbaa !21
  %297 = getelementptr inbounds i8, ptr %296, i64 1
  %298 = load i32, ptr %8, align 4, !tbaa !20
  %299 = add i32 %298, -1
  %300 = zext i32 %299 to i64
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %295, ptr nonnull align 1 %297, i64 %300, i1 false)
  %301 = load ptr, ptr %294, align 8, !tbaa !218
  %302 = load i32, ptr %8, align 4, !tbaa !20
  %303 = add i32 %302, -1
  %304 = call i32 @RBSPtoSODB(ptr noundef %301, i32 noundef %303) #46
  %305 = getelementptr inbounds %struct.Bitstream, ptr %291, i64 0, i32 3
  store i32 %304, ptr %305, align 4, !tbaa !561
  %306 = getelementptr inbounds %struct.Bitstream, ptr %291, i64 0, i32 1
  store i32 %304, ptr %306, align 4, !tbaa !217
  %307 = call i32 @ue_v(ptr noundef nonnull @.str.18.67, ptr noundef nonnull %291) #46
  %308 = icmp eq i32 %307, %251
  br i1 %308, label %311, label %309

309:                                              ; preds = %288
  %310 = call i32 @puts(ptr nonnull dereferenceable(1) @str.45)
  br label %311

311:                                              ; preds = %309, %288
  %312 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %313 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %312, i64 0, i32 31
  %314 = load i32, ptr %313, align 8, !tbaa !463
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %311
  %317 = call i32 @ue_v(ptr noundef nonnull @.str.20.68, ptr noundef nonnull %291) #46
  br label %318

318:                                              ; preds = %316, %311
  %319 = load ptr, ptr @bits, align 8, !tbaa !13
  %320 = call i64 @ftell(ptr noundef %319) #47
  %321 = load ptr, ptr @input, align 8, !tbaa !13
  %322 = getelementptr inbounds %struct.inp_par, ptr %321, i64 0, i32 3
  %323 = load i32, ptr %322, align 4, !tbaa !554
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %327

325:                                              ; preds = %318
  %326 = call i32 @GetAnnexbNALU(ptr noundef nonnull %2) #46
  br label %329

327:                                              ; preds = %318
  %328 = call i32 @GetRTPNALU(ptr noundef nonnull %2) #46
  br label %329

329:                                              ; preds = %327, %325
  %330 = phi i32 [ %328, %327 ], [ %326, %325 ]
  store i32 %330, ptr %1, align 4, !tbaa !18
  call void @CheckZeroByteNonVCL(ptr noundef nonnull %2, ptr noundef nonnull %1) #46
  %331 = call i32 @NALUtoRBSP(ptr noundef nonnull %2) #46
  %332 = load i32, ptr %1, align 4, !tbaa !18
  %333 = icmp slt i32 %332, 0
  br i1 %333, label %334, label %342

334:                                              ; preds = %329
  %335 = load ptr, ptr @input, align 8, !tbaa !13
  %336 = getelementptr inbounds %struct.inp_par, ptr %335, i64 0, i32 3
  %337 = load i32, ptr %336, align 4, !tbaa !554
  %338 = icmp eq i32 %337, 0
  %339 = select i1 %338, ptr @.str.11.62, ptr @.str.12.63
  %340 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.10.64, ptr noundef nonnull %339) #47
  %341 = load i32, ptr %1, align 4, !tbaa !18
  br label %342

342:                                              ; preds = %334, %329
  %343 = phi i32 [ %341, %334 ], [ %332, %329 ]
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %342
  call void @FreeNALU(ptr noundef nonnull %2) #46
  br label %409

346:                                              ; preds = %342
  %347 = load i32, ptr %7, align 4, !tbaa !24
  br label %348

348:                                              ; preds = %346, %285
  %349 = phi i32 [ %347, %346 ], [ %286, %285 ]
  %350 = phi i64 [ %320, %346 ], [ %259, %285 ]
  %351 = icmp eq i32 %349, 4
  br i1 %351, label %352, label %382

352:                                              ; preds = %348
  %353 = load ptr, ptr %191, align 8, !tbaa !214
  %354 = getelementptr inbounds %struct.datapartition, ptr %353, i64 2
  %355 = load ptr, ptr %354, align 8, !tbaa !448
  %356 = getelementptr inbounds %struct.Bitstream, ptr %355, i64 0, i32 5
  store i32 0, ptr %356, align 8, !tbaa !560
  store i32 0, ptr %355, align 8, !tbaa !215
  %357 = getelementptr inbounds %struct.Bitstream, ptr %355, i64 0, i32 2
  store i32 0, ptr %357, align 8, !tbaa !450
  %358 = getelementptr inbounds %struct.Bitstream, ptr %355, i64 0, i32 4
  %359 = load ptr, ptr %358, align 8, !tbaa !218
  %360 = load ptr, ptr %9, align 8, !tbaa !21
  %361 = getelementptr inbounds i8, ptr %360, i64 1
  %362 = load i32, ptr %8, align 4, !tbaa !20
  %363 = add i32 %362, -1
  %364 = zext i32 %363 to i64
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %359, ptr nonnull align 1 %361, i64 %364, i1 false)
  %365 = load ptr, ptr %358, align 8, !tbaa !218
  %366 = load i32, ptr %8, align 4, !tbaa !20
  %367 = add i32 %366, -1
  %368 = call i32 @RBSPtoSODB(ptr noundef %365, i32 noundef %367) #46
  %369 = getelementptr inbounds %struct.Bitstream, ptr %355, i64 0, i32 3
  store i32 %368, ptr %369, align 4, !tbaa !561
  %370 = getelementptr inbounds %struct.Bitstream, ptr %355, i64 0, i32 1
  store i32 %368, ptr %370, align 4, !tbaa !217
  %371 = call i32 @ue_v(ptr noundef nonnull @.str.21.69, ptr noundef nonnull %355) #46
  %372 = icmp eq i32 %371, %251
  br i1 %372, label %375, label %373

373:                                              ; preds = %352
  %374 = call i32 @puts(ptr nonnull dereferenceable(1) @str.44)
  br label %375

375:                                              ; preds = %373, %352
  %376 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %377 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %376, i64 0, i32 31
  %378 = load i32, ptr %377, align 8, !tbaa !463
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %382, label %380

380:                                              ; preds = %375
  %381 = call i32 @ue_v(ptr noundef nonnull @.str.23.70, ptr noundef nonnull %355) #46
  br label %382

382:                                              ; preds = %380, %375, %348
  %383 = load i32, ptr %7, align 4, !tbaa !24
  %384 = add i32 %383, -3
  %385 = icmp ult i32 %384, 2
  br i1 %385, label %389, label %386

386:                                              ; preds = %382
  %387 = load ptr, ptr @bits, align 8, !tbaa !13
  %388 = call i32 @fseek(ptr noundef %387, i64 noundef %350, i32 noundef 0) #47
  br label %389

389:                                              ; preds = %386, %382
  call void @FreeNALU(ptr noundef nonnull %2) #46
  br label %409

390:                                              ; preds = %43
  %391 = call i32 @puts(ptr nonnull dereferenceable(1) @str.43)
  br label %74

392:                                              ; preds = %43
  %393 = call i32 @puts(ptr nonnull dereferenceable(1) @str.42)
  br label %74

394:                                              ; preds = %43
  %395 = load i32, ptr %8, align 4, !tbaa !20
  %396 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.26.71, i32 noundef %395) #47
  %397 = load ptr, ptr %9, align 8, !tbaa !21
  %398 = load i32, ptr %8, align 4, !tbaa !20
  %399 = load ptr, ptr @img, align 8, !tbaa !13
  call void @InterpretSEIMessage(ptr noundef %397, i32 noundef %398, ptr noundef %399) #46
  br label %74

400:                                              ; preds = %43
  call void @ProcessPPS(ptr noundef nonnull %2) #46
  br label %74

401:                                              ; preds = %43
  call void @ProcessSPS(ptr noundef nonnull %2) #46
  br label %74

402:                                              ; preds = %43
  %403 = load i32, ptr %8, align 4, !tbaa !20
  %404 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.27.72, i32 noundef %403) #47
  %405 = call i32 @puts(ptr nonnull dereferenceable(1) @str.41)
  br label %74

406:                                              ; preds = %43
  %407 = load i32, ptr %8, align 4, !tbaa !20
  %408 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.29.73, i32 noundef %44, i32 noundef %407) #47
  br label %74

409:                                              ; preds = %389, %345, %284, %180, %37
  %410 = phi i32 [ 1, %37 ], [ %222, %284 ], [ %222, %345 ], [ %222, %389 ], [ %136, %180 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %1) #48
  ret i32 %410
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define internal void @Error_tracking() #15 {
  %1 = load ptr, ptr @img, align 8, !tbaa !13
  %2 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 50
  %3 = load i32, ptr %2, align 4, !tbaa !464
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %24

5:                                                ; preds = %0
  store i32 1, ptr @Is_redundant_correct, align 4, !tbaa !18
  store i32 1, ptr @Is_primary_correct, align 4, !tbaa !18
  %6 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 10
  %7 = load i32, ptr %6, align 4, !tbaa !137
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 47
  %11 = load i32, ptr %10, align 8, !tbaa !466
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %35

13:                                               ; preds = %9
  %14 = sext i32 %11 to i64
  br label %15

15:                                               ; preds = %21, %13
  %16 = phi i64 [ 0, %13 ], [ %22, %21 ]
  %17 = getelementptr inbounds [17 x i32], ptr @ref_flag, i64 0, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !18
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  store i32 0, ptr @Is_primary_correct, align 4, !tbaa !18
  br label %21

21:                                               ; preds = %20, %15
  %22 = add nuw nsw i64 %16, 1
  %23 = icmp slt i64 %22, %14
  br i1 %23, label %15, label %35, !llvm.loop !563

24:                                               ; preds = %0
  %25 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 10
  %26 = load i32, ptr %25, align 4, !tbaa !137
  %27 = icmp eq i32 %26, 2
  br i1 %27, label %35, label %28

28:                                               ; preds = %24
  %29 = load i32, ptr @redundant_slice_ref_idx, align 4, !tbaa !18
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [17 x i32], ptr @ref_flag, i64 0, i64 %30
  %32 = load i32, ptr %31, align 4, !tbaa !18
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %28
  store i32 0, ptr @Is_redundant_correct, align 4, !tbaa !18
  br label %35

35:                                               ; preds = %34, %28, %24, %21, %9, %5
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @decode_slice(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %5 = load ptr, ptr %4, align 8, !tbaa !165
  %6 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %6, i64 0, i32 3
  %8 = load i32, ptr %7, align 4, !tbaa !490
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  tail call void @init_contexts(ptr noundef nonnull %0) #46
  tail call void (...) @cabac_new_slice() #46
  %11 = load ptr, ptr @active_pps, align 8, !tbaa !13
  br label %12

12:                                               ; preds = %10, %3
  %13 = phi ptr [ %11, %10 ], [ %6, %3 ]
  %14 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %13, i64 0, i32 24
  %15 = load i32, ptr %14, align 4, !tbaa !476
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %19 = load i32, ptr %18, align 4, !tbaa !137
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %29, label %21

21:                                               ; preds = %17, %12
  %22 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %13, i64 0, i32 23
  %23 = load i32, ptr %22, align 8, !tbaa !475
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %27 = load i32, ptr %26, align 4, !tbaa !137
  %28 = icmp eq i32 %27, 2
  br i1 %28, label %30, label %29

29:                                               ; preds = %25, %17
  tail call void @fill_wp_params(ptr noundef nonnull %0) #47
  br label %30

30:                                               ; preds = %29, %25, %21
  %31 = and i32 %2, -2
  %32 = icmp eq i32 %31, 2
  br i1 %32, label %33, label %37

33:                                               ; preds = %30
  %34 = load i32, ptr %5, align 8, !tbaa !559
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @decode_one_slice(ptr noundef nonnull %0, ptr noundef %1) #47
  br label %37

37:                                               ; preds = %36, %33, %30
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @exit_picture() #0 {
  %1 = alloca %struct.frame.16, align 8
  %2 = alloca [10 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %1) #48
  call void @llvm.lifetime.start.p0(i64 10, ptr nonnull %2) #48
  %3 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %4 = icmp eq ptr %3, null
  br i1 %4, label %286, label %5

5:                                                ; preds = %0
  %6 = load ptr, ptr @img, align 8, !tbaa !13
  tail call void @DeblockPicture(ptr noundef %6, ptr noundef nonnull %3) #46
  %7 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.storable_picture, ptr %7, i64 0, i32 29
  %9 = load i32, ptr %8, align 8, !tbaa !564
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  tail call void @MbAffPostProc() #47
  %12 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  br label %13

13:                                               ; preds = %11, %5
  %14 = phi ptr [ %12, %11 ], [ %7, %5 ]
  %15 = getelementptr inbounds %struct.storable_picture, ptr %14, i64 0, i32 32
  %16 = load ptr, ptr %15, align 8, !tbaa !47
  %17 = load ptr, ptr %16, align 8, !tbaa !13
  store ptr %17, ptr %1, align 8, !tbaa !270
  %18 = getelementptr inbounds %struct.storable_picture, ptr %14, i64 0, i32 50
  %19 = load i32, ptr %18, align 4, !tbaa !83
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %struct.storable_picture, ptr %14, i64 0, i32 33
  %23 = load ptr, ptr %22, align 8, !tbaa !82
  %24 = load ptr, ptr %23, align 8, !tbaa !13
  %25 = load ptr, ptr %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.frame.16, ptr %1, i64 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !295
  %27 = getelementptr inbounds ptr, ptr %23, i64 1
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  %29 = load ptr, ptr %28, align 8, !tbaa !13
  %30 = getelementptr inbounds %struct.frame.16, ptr %1, i64 0, i32 2
  store ptr %29, ptr %30, align 8, !tbaa !296
  br label %31

31:                                               ; preds = %21, %13
  %32 = getelementptr inbounds %struct.storable_picture, ptr %14, i64 0, i32 29
  %33 = load i32, ptr %32, align 8, !tbaa !564
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %132

35:                                               ; preds = %31
  %36 = load ptr, ptr @erc_errorVar, align 8, !tbaa !13
  tail call void @ercStartSegment(i32 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef %36) #46
  %37 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %38 = getelementptr inbounds %struct.storable_picture, ptr %37, i64 0, i32 31
  %39 = load i32, ptr %38, align 8, !tbaa !362
  %40 = icmp ugt i32 %39, 1
  br i1 %40, label %41, label %88

41:                                               ; preds = %35
  %42 = load ptr, ptr @img, align 8, !tbaa !13
  br label %43

43:                                               ; preds = %77, %41
  %44 = phi ptr [ %37, %41 ], [ %78, %77 ]
  %45 = phi ptr [ %42, %41 ], [ %79, %77 ]
  %46 = phi i64 [ 1, %41 ], [ %81, %77 ]
  %47 = phi i32 [ 0, %41 ], [ %80, %77 ]
  %48 = getelementptr inbounds %struct.img_par, ptr %45, i64 0, i32 39
  %49 = load ptr, ptr %48, align 8, !tbaa !84
  %50 = getelementptr inbounds %struct.macroblock, ptr %49, i64 %46, i32 15
  %51 = load i32, ptr %50, align 8, !tbaa !565
  %52 = add nsw i64 %46, -1
  %53 = getelementptr inbounds %struct.macroblock, ptr %49, i64 %52, i32 15
  %54 = load i32, ptr %53, align 8, !tbaa !565
  %55 = icmp eq i32 %51, %54
  br i1 %55, label %77, label %56

56:                                               ; preds = %43
  %57 = load ptr, ptr @erc_errorVar, align 8, !tbaa !13
  %58 = trunc i64 %52 to i32
  tail call void @ercStopSegment(i32 noundef %58, i32 noundef %47, i32 noundef 0, ptr noundef %57) #46
  %59 = load ptr, ptr @img, align 8, !tbaa !13
  %60 = getelementptr inbounds %struct.img_par, ptr %59, i64 0, i32 39
  %61 = load ptr, ptr %60, align 8, !tbaa !84
  %62 = getelementptr inbounds %struct.macroblock, ptr %61, i64 %52, i32 15
  %63 = load i32, ptr %62, align 8, !tbaa !565
  %64 = icmp eq i32 %63, 0
  %65 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %66 = getelementptr inbounds %struct.storable_picture, ptr %65, i64 0, i32 19
  %67 = load i32, ptr %66, align 8, !tbaa !566
  %68 = load ptr, ptr @erc_errorVar, align 8, !tbaa !13
  br i1 %64, label %70, label %69

69:                                               ; preds = %56
  tail call void @ercMarkCurrSegmentLost(i32 noundef %67, ptr noundef %68) #46
  br label %71

70:                                               ; preds = %56
  tail call void @ercMarkCurrSegmentOK(i32 noundef %67, ptr noundef %68) #46
  br label %71

71:                                               ; preds = %70, %69
  %72 = add nsw i32 %47, 1
  %73 = load ptr, ptr @erc_errorVar, align 8, !tbaa !13
  %74 = trunc i64 %46 to i32
  tail call void @ercStartSegment(i32 noundef %74, i32 noundef %72, i32 noundef 0, ptr noundef %73) #46
  %75 = load ptr, ptr @img, align 8, !tbaa !13
  %76 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  br label %77

77:                                               ; preds = %71, %43
  %78 = phi ptr [ %76, %71 ], [ %44, %43 ]
  %79 = phi ptr [ %75, %71 ], [ %45, %43 ]
  %80 = phi i32 [ %72, %71 ], [ %47, %43 ]
  %81 = add nuw nsw i64 %46, 1
  %82 = getelementptr inbounds %struct.storable_picture, ptr %78, i64 0, i32 31
  %83 = load i32, ptr %82, align 8, !tbaa !362
  %84 = zext i32 %83 to i64
  %85 = icmp ult i64 %81, %84
  br i1 %85, label %43, label %86, !llvm.loop !567

86:                                               ; preds = %77
  %.lcssa2 = phi i32 [ %80, %77 ]
  %.lcssa1 = phi i32 [ %83, %77 ]
  %.lcssa = phi i64 [ %46, %77 ]
  %87 = and i64 %.lcssa, 4294967295
  br label %88

88:                                               ; preds = %86, %35
  %89 = phi i64 [ 0, %35 ], [ %87, %86 ]
  %90 = phi i32 [ 0, %35 ], [ %.lcssa2, %86 ]
  %91 = phi i32 [ %39, %35 ], [ %.lcssa1, %86 ]
  %92 = add i32 %91, -1
  %93 = load ptr, ptr @erc_errorVar, align 8, !tbaa !13
  tail call void @ercStopSegment(i32 noundef %92, i32 noundef %90, i32 noundef 0, ptr noundef %93) #46
  %94 = load ptr, ptr @img, align 8, !tbaa !13
  %95 = getelementptr inbounds %struct.img_par, ptr %94, i64 0, i32 39
  %96 = load ptr, ptr %95, align 8, !tbaa !84
  %97 = getelementptr inbounds %struct.macroblock, ptr %96, i64 %89, i32 15
  %98 = load i32, ptr %97, align 8, !tbaa !565
  %99 = icmp eq i32 %98, 0
  %100 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %101 = getelementptr inbounds %struct.storable_picture, ptr %100, i64 0, i32 19
  %102 = load i32, ptr %101, align 8, !tbaa !566
  %103 = load ptr, ptr @erc_errorVar, align 8, !tbaa !13
  br i1 %99, label %105, label %104

104:                                              ; preds = %88
  tail call void @ercMarkCurrSegmentLost(i32 noundef %102, ptr noundef %103) #46
  br label %106

105:                                              ; preds = %88
  tail call void @ercMarkCurrSegmentOK(i32 noundef %102, ptr noundef %103) #46
  br label %106

106:                                              ; preds = %105, %104
  %107 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %108 = getelementptr inbounds %struct.storable_picture, ptr %107, i64 0, i32 31
  %109 = load i32, ptr %108, align 8, !tbaa !362
  %110 = load i32, ptr @erc_mvperMB, align 4, !tbaa !18
  %111 = udiv i32 %110, %109
  store i32 %111, ptr @erc_mvperMB, align 4, !tbaa !18
  %112 = load ptr, ptr @img, align 8, !tbaa !13
  store ptr %112, ptr @erc_img, align 8, !tbaa !13
  %113 = getelementptr inbounds %struct.storable_picture, ptr %107, i64 0, i32 45
  %114 = load i32, ptr %113, align 8, !tbaa !359
  switch i32 %114, label %122 [
    i32 2, label %115
    i32 4, label %115
  ]

115:                                              ; preds = %106, %106
  %116 = getelementptr inbounds %struct.storable_picture, ptr %107, i64 0, i32 19
  %117 = load i32, ptr %116, align 8, !tbaa !566
  %118 = getelementptr inbounds %struct.storable_picture, ptr %107, i64 0, i32 20
  %119 = load i32, ptr %118, align 4, !tbaa !568
  %120 = load ptr, ptr @erc_errorVar, align 8, !tbaa !13
  %121 = call i32 @ercConcealIntraFrame(ptr noundef nonnull %1, i32 noundef %117, i32 noundef %119, ptr noundef %120) #46
  br label %132

122:                                              ; preds = %106
  %123 = load ptr, ptr @erc_object_list, align 8, !tbaa !13
  %124 = getelementptr inbounds %struct.storable_picture, ptr %107, i64 0, i32 19
  %125 = load i32, ptr %124, align 8, !tbaa !566
  %126 = getelementptr inbounds %struct.storable_picture, ptr %107, i64 0, i32 20
  %127 = load i32, ptr %126, align 4, !tbaa !568
  %128 = load ptr, ptr @erc_errorVar, align 8, !tbaa !13
  %129 = getelementptr inbounds %struct.storable_picture, ptr %107, i64 0, i32 50
  %130 = load i32, ptr %129, align 4, !tbaa !83
  %131 = call i32 @ercConcealInterFrame(ptr noundef nonnull %1, ptr noundef %123, i32 noundef %125, i32 noundef %127, ptr noundef %128, i32 noundef %130) #46
  br label %132

132:                                              ; preds = %122, %115, %31
  %133 = load ptr, ptr @img, align 8, !tbaa !13
  %134 = getelementptr inbounds %struct.img_par, ptr %133, i64 0, i32 36
  %135 = load i32, ptr %134, align 8, !tbaa !206
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %132
  %138 = load i32, ptr %133, align 8, !tbaa !569
  %139 = sdiv i32 %138, 2
  store i32 %139, ptr %133, align 8, !tbaa !569
  br label %140

140:                                              ; preds = %137, %132
  %141 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %142 = load i32, ptr %141, align 8, !tbaa !570
  %143 = getelementptr inbounds %struct.storable_picture, ptr %141, i64 0, i32 45
  %144 = load i32, ptr %143, align 8, !tbaa !359
  %145 = getelementptr inbounds %struct.storable_picture, ptr %141, i64 0, i32 4
  %146 = load i32, ptr %145, align 8, !tbaa !571
  %147 = getelementptr inbounds %struct.storable_picture, ptr %141, i64 0, i32 15
  %148 = load i32, ptr %147, align 8, !tbaa !346
  %149 = freeze i32 %148
  %150 = getelementptr inbounds %struct.storable_picture, ptr %141, i64 0, i32 57
  %151 = load i32, ptr %150, align 8, !tbaa !572
  %152 = getelementptr inbounds %struct.storable_picture, ptr %141, i64 0, i32 11
  %153 = load i32, ptr %152, align 8, !tbaa !342
  %154 = getelementptr inbounds %struct.storable_picture, ptr %141, i64 0, i32 50
  %155 = load i32, ptr %154, align 4, !tbaa !83
  call void @store_picture_in_dpb(ptr noundef nonnull %141) #46
  store ptr null, ptr @dec_picture, align 8, !tbaa !13
  %156 = load ptr, ptr @img, align 8, !tbaa !13
  %157 = getelementptr inbounds %struct.img_par, ptr %156, i64 0, i32 97
  %158 = load i32, ptr %157, align 4, !tbaa !517
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %140
  %161 = getelementptr inbounds %struct.img_par, ptr %156, i64 0, i32 52
  store i32 0, ptr %161, align 4, !tbaa !334
  br label %162

162:                                              ; preds = %160, %140
  %163 = and i32 %142, -3
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %282

165:                                              ; preds = %162
  %166 = getelementptr inbounds %struct.img_par, ptr %156, i64 0, i32 126
  %167 = call i32 @ftime(ptr noundef nonnull %166) #46
  %168 = load ptr, ptr @img, align 8, !tbaa !13
  %169 = getelementptr inbounds %struct.img_par, ptr %168, i64 0, i32 124
  %170 = call i64 @time(ptr noundef nonnull %169) #46
  %171 = sext i32 %155 to i64
  %172 = getelementptr inbounds [4 x [6 x i8]], ptr @__const.exit_picture.yuv_types, i64 0, i64 %171
  %173 = call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull dereferenceable(1) %172)
  %174 = load ptr, ptr @input, align 8, !tbaa !13
  %175 = getelementptr inbounds %struct.inp_par, ptr %174, i64 0, i32 7
  %176 = load i32, ptr %175, align 4, !tbaa !573
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %257

178:                                              ; preds = %165
  switch i32 %144, label %235 [
    i32 2, label %179
    i32 0, label %193
    i32 3, label %207
    i32 4, label %221
  ]

179:                                              ; preds = %178
  %180 = load ptr, ptr @stdout, align 8, !tbaa !13
  %181 = load i32, ptr @frame_no, align 4, !tbaa !18
  %182 = load ptr, ptr @snr, align 8, !tbaa !13
  %183 = getelementptr inbounds %struct.snr_par, ptr %182, i64 0, i32 1
  %184 = load float, ptr %183, align 4, !tbaa !574
  %185 = fpext float %184 to double
  %186 = getelementptr inbounds %struct.snr_par, ptr %182, i64 0, i32 2
  %187 = load float, ptr %186, align 4, !tbaa !577
  %188 = fpext float %187 to double
  %189 = getelementptr inbounds %struct.snr_par, ptr %182, i64 0, i32 3
  %190 = load float, ptr %189, align 4, !tbaa !578
  %191 = fpext float %190 to double
  %192 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %180, ptr noundef nonnull @.str.33.59, i32 noundef %181, i32 noundef %146, i32 noundef %153, i32 noundef %151, double noundef %185, double noundef %188, double noundef %191, ptr noundef nonnull %2, i32 noundef 0) #47
  br label %262

193:                                              ; preds = %178
  %194 = load ptr, ptr @stdout, align 8, !tbaa !13
  %195 = load i32, ptr @frame_no, align 4, !tbaa !18
  %196 = load ptr, ptr @snr, align 8, !tbaa !13
  %197 = getelementptr inbounds %struct.snr_par, ptr %196, i64 0, i32 1
  %198 = load float, ptr %197, align 4, !tbaa !574
  %199 = fpext float %198 to double
  %200 = getelementptr inbounds %struct.snr_par, ptr %196, i64 0, i32 2
  %201 = load float, ptr %200, align 4, !tbaa !577
  %202 = fpext float %201 to double
  %203 = getelementptr inbounds %struct.snr_par, ptr %196, i64 0, i32 3
  %204 = load float, ptr %203, align 4, !tbaa !578
  %205 = fpext float %204 to double
  %206 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %194, ptr noundef nonnull @.str.4.60, i32 noundef %195, i32 noundef %146, i32 noundef %153, i32 noundef %151, double noundef %199, double noundef %202, double noundef %205, ptr noundef nonnull %2, i32 noundef 0) #47
  br label %262

207:                                              ; preds = %178
  %208 = load ptr, ptr @stdout, align 8, !tbaa !13
  %209 = load i32, ptr @frame_no, align 4, !tbaa !18
  %210 = load ptr, ptr @snr, align 8, !tbaa !13
  %211 = getelementptr inbounds %struct.snr_par, ptr %210, i64 0, i32 1
  %212 = load float, ptr %211, align 4, !tbaa !574
  %213 = fpext float %212 to double
  %214 = getelementptr inbounds %struct.snr_par, ptr %210, i64 0, i32 2
  %215 = load float, ptr %214, align 4, !tbaa !577
  %216 = fpext float %215 to double
  %217 = getelementptr inbounds %struct.snr_par, ptr %210, i64 0, i32 3
  %218 = load float, ptr %217, align 4, !tbaa !578
  %219 = fpext float %218 to double
  %220 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %208, ptr noundef nonnull @.str.34.61, i32 noundef %209, i32 noundef %146, i32 noundef %153, i32 noundef %151, double noundef %213, double noundef %216, double noundef %219, ptr noundef nonnull %2, i32 noundef 0) #47
  br label %262

221:                                              ; preds = %178
  %222 = load ptr, ptr @stdout, align 8, !tbaa !13
  %223 = load i32, ptr @frame_no, align 4, !tbaa !18
  %224 = load ptr, ptr @snr, align 8, !tbaa !13
  %225 = getelementptr inbounds %struct.snr_par, ptr %224, i64 0, i32 1
  %226 = load float, ptr %225, align 4, !tbaa !574
  %227 = fpext float %226 to double
  %228 = getelementptr inbounds %struct.snr_par, ptr %224, i64 0, i32 2
  %229 = load float, ptr %228, align 4, !tbaa !577
  %230 = fpext float %229 to double
  %231 = getelementptr inbounds %struct.snr_par, ptr %224, i64 0, i32 3
  %232 = load float, ptr %231, align 4, !tbaa !578
  %233 = fpext float %232 to double
  %234 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %222, ptr noundef nonnull @.str.35, i32 noundef %223, i32 noundef %146, i32 noundef %153, i32 noundef %151, double noundef %227, double noundef %230, double noundef %233, ptr noundef nonnull %2, i32 noundef 0) #47
  br label %262

235:                                              ; preds = %178
  %236 = icmp eq i32 %149, 0
  %237 = load ptr, ptr @stdout, align 8, !tbaa !13
  %238 = load i32, ptr @frame_no, align 4, !tbaa !18
  %239 = load ptr, ptr @snr, align 8, !tbaa !13
  %240 = getelementptr inbounds %struct.snr_par, ptr %239, i64 0, i32 1
  %241 = load float, ptr %240, align 4, !tbaa !574
  %242 = fpext float %241 to double
  %243 = getelementptr inbounds %struct.snr_par, ptr %239, i64 0, i32 2
  %244 = load float, ptr %243, align 4, !tbaa !577
  %245 = fpext float %244 to double
  %246 = getelementptr inbounds %struct.snr_par, ptr %239, i64 0, i32 3
  %247 = load float, ptr %246, align 4, !tbaa !578
  %248 = fpext float %247 to double
  br i1 %236, label %253, label %249

249:                                              ; preds = %235
  %250 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %237, ptr noundef nonnull @.str.36, i32 noundef %238, i32 noundef %146, i32 noundef %153, i32 noundef %151, double noundef %242, double noundef %245, double noundef %248, ptr noundef nonnull %2, i32 noundef 0) #47
  %251 = load ptr, ptr @stdout, align 8, !tbaa !13
  %252 = call i32 @fflush(ptr noundef %251) #47
  br label %267

253:                                              ; preds = %235
  %254 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %237, ptr noundef nonnull @.str.37, i32 noundef %238, i32 noundef %146, i32 noundef %153, i32 noundef %151, double noundef %242, double noundef %245, double noundef %248, ptr noundef nonnull %2, i32 noundef 0) #47
  %255 = load ptr, ptr @stdout, align 8, !tbaa !13
  %256 = call i32 @fflush(ptr noundef %255) #47
  br label %266

257:                                              ; preds = %165
  %258 = load ptr, ptr @stdout, align 8, !tbaa !13
  %259 = load ptr, ptr @snr, align 8, !tbaa !13
  %260 = load i32, ptr %259, align 4, !tbaa !579
  %261 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %258, ptr noundef nonnull @.str.38, i32 noundef %260) #47
  br label %262

262:                                              ; preds = %257, %221, %207, %193, %179
  %263 = load ptr, ptr @stdout, align 8, !tbaa !13
  %264 = call i32 @fflush(ptr noundef %263) #47
  %265 = icmp eq i32 %149, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %262, %253
  switch i32 %144, label %271 [
    i32 4, label %267
    i32 2, label %267
    i32 0, label %267
  ]

267:                                              ; preds = %266, %266, %266, %262, %249
  %268 = load ptr, ptr @img, align 8, !tbaa !13
  %269 = load i32, ptr %268, align 8, !tbaa !569
  %270 = add nsw i32 %269, 1
  store i32 %270, ptr %268, align 8, !tbaa !569
  br label %275

271:                                              ; preds = %266
  %272 = load i32, ptr @Bframe_ctr, align 4, !tbaa !18
  %273 = add nsw i32 %272, 1
  store i32 %273, ptr @Bframe_ctr, align 4, !tbaa !18
  %274 = load ptr, ptr @img, align 8, !tbaa !13
  br label %275

275:                                              ; preds = %271, %267
  %276 = phi ptr [ %274, %271 ], [ %268, %267 ]
  %277 = load ptr, ptr @snr, align 8, !tbaa !13
  %278 = load i32, ptr %277, align 4, !tbaa !579
  %279 = add nsw i32 %278, 1
  store i32 %279, ptr %277, align 4, !tbaa !579
  %280 = load i32, ptr @g_nFrame, align 4, !tbaa !18
  %281 = add nsw i32 %280, 1
  store i32 %281, ptr @g_nFrame, align 4, !tbaa !18
  br label %282

282:                                              ; preds = %275, %162
  %283 = phi ptr [ %156, %162 ], [ %276, %275 ]
  %284 = getelementptr inbounds %struct.img_par, ptr %283, i64 0, i32 1
  store i32 -4712, ptr %284, align 4, !tbaa !49
  %285 = getelementptr inbounds %struct.img_par, ptr %283, i64 0, i32 3
  store i32 0, ptr %285, align 4, !tbaa !175
  br label %286

286:                                              ; preds = %282, %0
  call void @llvm.lifetime.end.p0(i64 10, ptr nonnull %2) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %1) #48
  ret void
}

; Function Attrs: optsize
declare i32 @ftime(ptr noundef) local_unnamed_addr #34

; Function Attrs: nounwind optsize
declare i64 @time(ptr noundef) local_unnamed_addr #35

; Function Attrs: nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strcpy(ptr noalias returned writeonly, ptr noalias nocapture readonly) local_unnamed_addr #36

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fflush(ptr nocapture noundef) local_unnamed_addr #2

; Function Attrs: nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @fill_wp_params(ptr nocapture noundef %0) #25 {
  %2 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %3 = load i32, ptr %2, align 4, !tbaa !137
  %4 = icmp eq i32 %3, 1
  %5 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 47
  %6 = load i32, ptr %5, align 8, !tbaa !466
  %7 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 48
  %8 = load i32, ptr %7, align 4, !tbaa !467
  %9 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %10 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %9, i64 0, i32 24
  %11 = load i32, ptr %10, align 4, !tbaa !476
  %12 = icmp eq i32 %11, 2
  %13 = select i1 %12, i1 %4, i1 false
  br i1 %13, label %14, label %54

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 75
  store i32 5, ptr %15, align 8, !tbaa !478
  %16 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 76
  store i32 5, ptr %16, align 4, !tbaa !481
  %17 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 80
  store i32 16, ptr %17, align 8, !tbaa !479
  %18 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 81
  store i32 16, ptr %18, align 4, !tbaa !482
  %19 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 77
  %20 = load ptr, ptr %19, align 8, !tbaa !483
  %21 = load ptr, ptr %20, align 8, !tbaa !13
  %22 = getelementptr inbounds ptr, ptr %20, i64 1
  %23 = load ptr, ptr %22, align 8, !tbaa !13
  %24 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 78
  %25 = load ptr, ptr %24, align 8, !tbaa !484
  %26 = load ptr, ptr %25, align 8, !tbaa !13
  %27 = getelementptr inbounds ptr, ptr %25, i64 1
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  br label %29

29:                                               ; preds = %51, %14
  %30 = phi i64 [ 0, %14 ], [ %52, %51 ]
  %31 = getelementptr inbounds ptr, ptr %21, i64 %30
  %32 = load ptr, ptr %31, align 8, !tbaa !13
  %33 = getelementptr inbounds ptr, ptr %23, i64 %30
  %34 = load ptr, ptr %33, align 8, !tbaa !13
  %35 = getelementptr inbounds ptr, ptr %26, i64 %30
  %36 = load ptr, ptr %35, align 8, !tbaa !13
  %37 = getelementptr inbounds ptr, ptr %28, i64 %30
  %38 = load ptr, ptr %37, align 8, !tbaa !13
  br label %39

39:                                               ; preds = %39, %29
  %40 = phi i64 [ 0, %29 ], [ %49, %39 ]
  %41 = icmp eq i64 %40, 0
  %42 = select i1 %41, ptr %15, ptr %16
  %43 = load i32, ptr %42, align 4, !tbaa !18
  %44 = shl nuw i32 1, %43
  %45 = getelementptr inbounds i32, ptr %32, i64 %40
  store i32 %44, ptr %45, align 4, !tbaa !18
  %46 = getelementptr inbounds i32, ptr %34, i64 %40
  store i32 %44, ptr %46, align 4, !tbaa !18
  %47 = getelementptr inbounds i32, ptr %36, i64 %40
  store i32 0, ptr %47, align 4, !tbaa !18
  %48 = getelementptr inbounds i32, ptr %38, i64 %40
  store i32 0, ptr %48, align 4, !tbaa !18
  %49 = add nuw nsw i64 %40, 1
  %50 = icmp eq i64 %49, 3
  br i1 %50, label %51, label %39, !llvm.loop !580

51:                                               ; preds = %39
  %52 = add nuw nsw i64 %30, 1
  %53 = icmp eq i64 %52, 32
  br i1 %53, label %54, label %29, !llvm.loop !581

54:                                               ; preds = %51, %1
  br i1 %4, label %55, label %366

55:                                               ; preds = %54
  %56 = icmp slt i32 %6, 1
  br i1 %56, label %366, label %57

57:                                               ; preds = %55
  %58 = icmp sgt i32 %8, 0
  %59 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 73
  %60 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 79
  %61 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 78
  %62 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 77
  %63 = zext i32 %6 to i64
  %64 = zext i32 %8 to i64
  br label %65

65:                                               ; preds = %186, %57
  %66 = phi i64 [ 0, %57 ], [ %187, %186 ]
  br i1 %58, label %67, label %186

67:                                               ; preds = %183, %65
  %68 = phi i64 [ %184, %183 ], [ 0, %65 ]
  %69 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr @listX, align 16
  %72 = getelementptr inbounds ptr, ptr %71, i64 %66
  br label %73

73:                                               ; preds = %180, %67
  %74 = phi i64 [ 0, %67 ], [ %181, %180 ]
  %75 = load i32, ptr %10, align 4, !tbaa !476
  switch i32 %75, label %180 [
    i32 1, label %76
    i32 2, label %99
  ]

76:                                               ; preds = %73
  %77 = load ptr, ptr %62, align 8, !tbaa !483
  %78 = load ptr, ptr %77, align 8, !tbaa !13
  %79 = getelementptr inbounds ptr, ptr %78, i64 %66
  %80 = load ptr, ptr %79, align 8, !tbaa !13
  %81 = getelementptr inbounds i32, ptr %80, i64 %74
  %82 = load i32, ptr %81, align 4, !tbaa !18
  %83 = load ptr, ptr %60, align 8, !tbaa !582
  %84 = load ptr, ptr %83, align 8, !tbaa !13
  %85 = getelementptr inbounds ptr, ptr %84, i64 %66
  %86 = load ptr, ptr %85, align 8, !tbaa !13
  %87 = getelementptr inbounds ptr, ptr %86, i64 %68
  %88 = load ptr, ptr %87, align 8, !tbaa !13
  %89 = getelementptr inbounds i32, ptr %88, i64 %74
  store i32 %82, ptr %89, align 4, !tbaa !18
  %90 = getelementptr inbounds ptr, ptr %77, i64 1
  %91 = load ptr, ptr %90, align 8, !tbaa !13
  %92 = getelementptr inbounds ptr, ptr %91, i64 %68
  %93 = load ptr, ptr %92, align 8, !tbaa !13
  %94 = getelementptr inbounds i32, ptr %93, i64 %74
  %95 = load i32, ptr %94, align 4, !tbaa !18
  %96 = getelementptr inbounds ptr, ptr %83, i64 1
  %97 = load ptr, ptr %96, align 8, !tbaa !13
  %98 = getelementptr inbounds ptr, ptr %97, i64 %66
  br label %173

99:                                               ; preds = %73
  %100 = load ptr, ptr %70, align 8, !tbaa !13
  %101 = getelementptr inbounds %struct.storable_picture, ptr %100, i64 0, i32 1
  %102 = load i32, ptr %101, align 4, !tbaa !390
  %103 = load ptr, ptr %72, align 8, !tbaa !13
  %104 = getelementptr inbounds %struct.storable_picture, ptr %103, i64 0, i32 1
  %105 = load i32, ptr %104, align 4, !tbaa !390
  %106 = sub nsw i32 %102, %105
  %107 = tail call i32 @llvm.smax.i32(i32 %106, i32 -128)
  %108 = tail call i32 @llvm.smin.i32(i32 %107, i32 127)
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %118, label %110

110:                                              ; preds = %99
  %111 = getelementptr inbounds %struct.storable_picture, ptr %100, i64 0, i32 14
  %112 = load i32, ptr %111, align 4, !tbaa !356
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %118

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.storable_picture, ptr %103, i64 0, i32 14
  %116 = load i32, ptr %115, align 4, !tbaa !356
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %129, label %118

118:                                              ; preds = %114, %110, %99
  %119 = load ptr, ptr %60, align 8, !tbaa !582
  %120 = load ptr, ptr %119, align 8, !tbaa !13
  %121 = getelementptr inbounds ptr, ptr %120, i64 %66
  %122 = load ptr, ptr %121, align 8, !tbaa !13
  %123 = getelementptr inbounds ptr, ptr %122, i64 %68
  %124 = load ptr, ptr %123, align 8, !tbaa !13
  %125 = getelementptr inbounds i32, ptr %124, i64 %74
  store i32 32, ptr %125, align 4, !tbaa !18
  %126 = getelementptr inbounds ptr, ptr %119, i64 1
  %127 = load ptr, ptr %126, align 8, !tbaa !13
  %128 = getelementptr inbounds ptr, ptr %127, i64 %66
  br label %173

129:                                              ; preds = %114
  %130 = load i32, ptr %59, align 8, !tbaa !523
  %131 = sub nsw i32 %130, %105
  %132 = tail call i32 @llvm.smax.i32(i32 %131, i32 -128)
  %133 = tail call i32 @llvm.smin.i32(i32 %132, i32 127)
  %134 = trunc i32 %108 to i8
  %135 = sdiv i8 %134, 2
  %136 = tail call i8 @llvm.abs.i8(i8 %135, i1 true)
  %137 = zext i8 %136 to i16
  %138 = or i16 %137, 16384
  %139 = trunc i32 %108 to i16
  %140 = sdiv i16 %138, %139
  %141 = sext i16 %140 to i32
  %142 = mul nsw i32 %133, %141
  %143 = add nsw i32 %142, 32
  %144 = ashr i32 %143, 6
  %145 = tail call i32 @llvm.smax.i32(i32 %144, i32 -1024)
  %146 = tail call i32 @llvm.smin.i32(i32 %145, i32 1023)
  %147 = ashr i32 %146, 2
  %148 = load ptr, ptr %60, align 8, !tbaa !582
  %149 = getelementptr inbounds ptr, ptr %148, i64 1
  %150 = load ptr, ptr %149, align 8, !tbaa !13
  %151 = getelementptr inbounds ptr, ptr %150, i64 %66
  %152 = load ptr, ptr %151, align 8, !tbaa !13
  %153 = getelementptr inbounds ptr, ptr %152, i64 %68
  %154 = load ptr, ptr %153, align 8, !tbaa !13
  %155 = getelementptr inbounds i32, ptr %154, i64 %74
  store i32 %147, ptr %155, align 4, !tbaa !18
  %156 = sub nsw i32 64, %147
  %157 = load ptr, ptr %148, align 8, !tbaa !13
  %158 = getelementptr inbounds ptr, ptr %157, i64 %66
  %159 = load ptr, ptr %158, align 8, !tbaa !13
  %160 = getelementptr inbounds ptr, ptr %159, i64 %68
  %161 = load ptr, ptr %160, align 8, !tbaa !13
  %162 = getelementptr inbounds i32, ptr %161, i64 %74
  store i32 %156, ptr %162, align 4, !tbaa !18
  %163 = load i32, ptr %155, align 4, !tbaa !18
  %164 = add i32 %163, -129
  %165 = icmp ult i32 %164, -193
  br i1 %165, label %166, label %180

166:                                              ; preds = %129
  store i32 32, ptr %162, align 4, !tbaa !18
  store i32 32, ptr %155, align 4, !tbaa !18
  %167 = load ptr, ptr %61, align 8, !tbaa !484
  %168 = load ptr, ptr %167, align 8, !tbaa !13
  %169 = getelementptr inbounds ptr, ptr %168, i64 %66
  %170 = load ptr, ptr %169, align 8, !tbaa !13
  %171 = getelementptr inbounds i32, ptr %170, i64 %74
  store i32 0, ptr %171, align 4, !tbaa !18
  %172 = getelementptr inbounds ptr, ptr %167, i64 1
  br label %173

173:                                              ; preds = %166, %118, %76
  %174 = phi ptr [ %98, %76 ], [ %128, %118 ], [ %172, %166 ]
  %175 = phi i32 [ %95, %76 ], [ 32, %118 ], [ 0, %166 ]
  %176 = load ptr, ptr %174, align 8, !tbaa !13
  %177 = getelementptr inbounds ptr, ptr %176, i64 %68
  %178 = load ptr, ptr %177, align 8, !tbaa !13
  %179 = getelementptr inbounds i32, ptr %178, i64 %74
  store i32 %175, ptr %179, align 4, !tbaa !18
  br label %180

180:                                              ; preds = %173, %129, %73
  %181 = add nuw nsw i64 %74, 1
  %182 = icmp eq i64 %181, 3
  br i1 %182, label %183, label %73, !llvm.loop !583

183:                                              ; preds = %180
  %184 = add nuw nsw i64 %68, 1
  %185 = icmp eq i64 %184, %64
  br i1 %185, label %186, label %67, !llvm.loop !584

186:                                              ; preds = %183, %65
  %187 = add nuw nsw i64 %66, 1
  %188 = icmp eq i64 %187, %63
  br i1 %188, label %189, label %65, !llvm.loop !585

189:                                              ; preds = %186
  %190 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 44
  %191 = load i32, ptr %190, align 8, !tbaa !189
  %192 = icmp eq i32 %191, 0
  %193 = or i1 %192, %56
  br i1 %193, label %366, label %194

194:                                              ; preds = %189
  %195 = shl nuw i32 %6, 1
  %196 = shl i32 %8, 1
  %197 = icmp sgt i32 %8, 0
  %198 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 78
  %199 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 53
  %200 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 54
  %201 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 79
  %202 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 77
  %203 = tail call i32 @llvm.smax.i32(i32 %196, i32 1)
  %204 = tail call i32 @llvm.smax.i32(i32 %195, i32 1)
  %205 = zext i32 %204 to i64
  %206 = zext i32 %203 to i64
  br label %207

207:                                              ; preds = %363, %194
  %208 = phi i64 [ 0, %194 ], [ %364, %363 ]
  br i1 %197, label %209, label %363

209:                                              ; preds = %207
  %210 = load ptr, ptr %198, align 8, !tbaa !484
  %211 = load ptr, ptr %210, align 8, !tbaa !13
  %212 = lshr i64 %208, 1
  %213 = and i64 %212, 2147483647
  %214 = getelementptr inbounds ptr, ptr %211, i64 %213
  %215 = load ptr, ptr %214, align 8, !tbaa !13
  %216 = getelementptr inbounds ptr, ptr %210, i64 1
  %217 = load ptr, ptr %216, align 8, !tbaa !13
  br label %218

218:                                              ; preds = %360, %209
  %219 = phi i64 [ 0, %209 ], [ %361, %360 ]
  %220 = lshr i64 %219, 1
  %221 = and i64 %220, 2147483647
  %222 = getelementptr inbounds ptr, ptr %217, i64 %221
  %223 = load ptr, ptr %222, align 8, !tbaa !13
  br label %224

224:                                              ; preds = %357, %218
  %225 = phi i64 [ 0, %218 ], [ %358, %357 ]
  %226 = getelementptr inbounds i32, ptr %215, i64 %225
  %227 = getelementptr inbounds i32, ptr %223, i64 %225
  br label %228

228:                                              ; preds = %354, %224
  %229 = phi i64 [ 2, %224 ], [ %355, %354 ]
  %230 = load i32, ptr %226, align 4, !tbaa !18
  %231 = getelementptr inbounds ptr, ptr %210, i64 %229
  %232 = load ptr, ptr %231, align 8, !tbaa !13
  %233 = getelementptr inbounds ptr, ptr %232, i64 %208
  %234 = load ptr, ptr %233, align 8, !tbaa !13
  %235 = getelementptr inbounds i32, ptr %234, i64 %225
  store i32 %230, ptr %235, align 4, !tbaa !18
  %236 = load i32, ptr %227, align 4, !tbaa !18
  %237 = or i64 %229, 1
  %238 = getelementptr inbounds ptr, ptr %210, i64 %237
  %239 = load ptr, ptr %238, align 8, !tbaa !13
  %240 = getelementptr inbounds ptr, ptr %239, i64 %219
  %241 = load ptr, ptr %240, align 8, !tbaa !13
  %242 = getelementptr inbounds i32, ptr %241, i64 %225
  store i32 %236, ptr %242, align 4, !tbaa !18
  %243 = load i32, ptr %10, align 4, !tbaa !476
  switch i32 %243, label %354 [
    i32 1, label %244
    i32 2, label %272
  ]

244:                                              ; preds = %228
  %245 = load ptr, ptr %202, align 8, !tbaa !483
  %246 = load ptr, ptr %245, align 8, !tbaa !13
  %247 = getelementptr inbounds ptr, ptr %246, i64 %213
  %248 = load ptr, ptr %247, align 8, !tbaa !13
  %249 = getelementptr inbounds i32, ptr %248, i64 %225
  %250 = load i32, ptr %249, align 4, !tbaa !18
  %251 = load ptr, ptr %201, align 8, !tbaa !582
  %252 = getelementptr inbounds ptr, ptr %251, i64 %229
  %253 = load ptr, ptr %252, align 8, !tbaa !13
  %254 = getelementptr inbounds ptr, ptr %253, i64 %208
  %255 = load ptr, ptr %254, align 8, !tbaa !13
  %256 = getelementptr inbounds ptr, ptr %255, i64 %219
  %257 = load ptr, ptr %256, align 8, !tbaa !13
  %258 = getelementptr inbounds i32, ptr %257, i64 %225
  store i32 %250, ptr %258, align 4, !tbaa !18
  %259 = getelementptr inbounds ptr, ptr %245, i64 1
  %260 = load ptr, ptr %259, align 8, !tbaa !13
  %261 = getelementptr inbounds ptr, ptr %260, i64 %221
  %262 = load ptr, ptr %261, align 8, !tbaa !13
  %263 = getelementptr inbounds i32, ptr %262, i64 %225
  %264 = load i32, ptr %263, align 4, !tbaa !18
  %265 = getelementptr inbounds ptr, ptr %251, i64 %237
  %266 = load ptr, ptr %265, align 8, !tbaa !13
  %267 = getelementptr inbounds ptr, ptr %266, i64 %208
  %268 = load ptr, ptr %267, align 8, !tbaa !13
  %269 = getelementptr inbounds ptr, ptr %268, i64 %219
  %270 = load ptr, ptr %269, align 8, !tbaa !13
  %271 = getelementptr inbounds i32, ptr %270, i64 %225
  store i32 %264, ptr %271, align 4, !tbaa !18
  br label %354

272:                                              ; preds = %228
  %273 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %237
  %274 = load ptr, ptr %273, align 8, !tbaa !13
  %275 = getelementptr inbounds ptr, ptr %274, i64 %219
  %276 = load ptr, ptr %275, align 8, !tbaa !13
  %277 = getelementptr inbounds %struct.storable_picture, ptr %276, i64 0, i32 1
  %278 = load i32, ptr %277, align 4, !tbaa !390
  %279 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %229
  %280 = load ptr, ptr %279, align 16, !tbaa !13
  %281 = getelementptr inbounds ptr, ptr %280, i64 %208
  %282 = load ptr, ptr %281, align 8, !tbaa !13
  %283 = getelementptr inbounds %struct.storable_picture, ptr %282, i64 0, i32 1
  %284 = load i32, ptr %283, align 4, !tbaa !390
  %285 = sub nsw i32 %278, %284
  %286 = tail call i32 @llvm.smax.i32(i32 %285, i32 -128)
  %287 = tail call i32 @llvm.smin.i32(i32 %286, i32 127)
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %297, label %289

289:                                              ; preds = %272
  %290 = getelementptr inbounds %struct.storable_picture, ptr %276, i64 0, i32 14
  %291 = load i32, ptr %290, align 4, !tbaa !356
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %297

293:                                              ; preds = %289
  %294 = getelementptr inbounds %struct.storable_picture, ptr %282, i64 0, i32 14
  %295 = load i32, ptr %294, align 4, !tbaa !356
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %313, label %297

297:                                              ; preds = %293, %289, %272
  %298 = load ptr, ptr %201, align 8, !tbaa !582
  %299 = getelementptr inbounds ptr, ptr %298, i64 %229
  %300 = load ptr, ptr %299, align 8, !tbaa !13
  %301 = getelementptr inbounds ptr, ptr %300, i64 %208
  %302 = load ptr, ptr %301, align 8, !tbaa !13
  %303 = getelementptr inbounds ptr, ptr %302, i64 %219
  %304 = load ptr, ptr %303, align 8, !tbaa !13
  %305 = getelementptr inbounds i32, ptr %304, i64 %225
  store i32 32, ptr %305, align 4, !tbaa !18
  %306 = getelementptr inbounds ptr, ptr %298, i64 %237
  %307 = load ptr, ptr %306, align 8, !tbaa !13
  %308 = getelementptr inbounds ptr, ptr %307, i64 %208
  %309 = load ptr, ptr %308, align 8, !tbaa !13
  %310 = getelementptr inbounds ptr, ptr %309, i64 %219
  %311 = load ptr, ptr %310, align 8, !tbaa !13
  %312 = getelementptr inbounds i32, ptr %311, i64 %225
  store i32 32, ptr %312, align 4, !tbaa !18
  br label %354

313:                                              ; preds = %293
  %314 = icmp eq i64 %229, 2
  %315 = select i1 %314, ptr %199, ptr %200
  %316 = load i32, ptr %315, align 4, !tbaa !18
  %317 = sub nsw i32 %316, %284
  %318 = tail call i32 @llvm.smax.i32(i32 %317, i32 -128)
  %319 = tail call i32 @llvm.smin.i32(i32 %318, i32 127)
  %320 = trunc i32 %287 to i8
  %321 = sdiv i8 %320, 2
  %322 = tail call i8 @llvm.abs.i8(i8 %321, i1 true)
  %323 = zext i8 %322 to i16
  %324 = or i16 %323, 16384
  %325 = trunc i32 %287 to i16
  %326 = sdiv i16 %324, %325
  %327 = sext i16 %326 to i32
  %328 = mul nsw i32 %319, %327
  %329 = add nsw i32 %328, 32
  %330 = ashr i32 %329, 6
  %331 = tail call i32 @llvm.smax.i32(i32 %330, i32 -1024)
  %332 = tail call i32 @llvm.smin.i32(i32 %331, i32 1023)
  %333 = ashr i32 %332, 2
  %334 = load ptr, ptr %201, align 8, !tbaa !582
  %335 = getelementptr inbounds ptr, ptr %334, i64 %237
  %336 = load ptr, ptr %335, align 8, !tbaa !13
  %337 = getelementptr inbounds ptr, ptr %336, i64 %208
  %338 = load ptr, ptr %337, align 8, !tbaa !13
  %339 = getelementptr inbounds ptr, ptr %338, i64 %219
  %340 = load ptr, ptr %339, align 8, !tbaa !13
  %341 = getelementptr inbounds i32, ptr %340, i64 %225
  store i32 %333, ptr %341, align 4, !tbaa !18
  %342 = sub nsw i32 64, %333
  %343 = getelementptr inbounds ptr, ptr %334, i64 %229
  %344 = load ptr, ptr %343, align 8, !tbaa !13
  %345 = getelementptr inbounds ptr, ptr %344, i64 %208
  %346 = load ptr, ptr %345, align 8, !tbaa !13
  %347 = getelementptr inbounds ptr, ptr %346, i64 %219
  %348 = load ptr, ptr %347, align 8, !tbaa !13
  %349 = getelementptr inbounds i32, ptr %348, i64 %225
  store i32 %342, ptr %349, align 4, !tbaa !18
  %350 = load i32, ptr %341, align 4, !tbaa !18
  %351 = add i32 %350, -129
  %352 = icmp ult i32 %351, -193
  br i1 %352, label %353, label %354

353:                                              ; preds = %313
  store i32 32, ptr %341, align 4, !tbaa !18
  store i32 32, ptr %349, align 4, !tbaa !18
  store i32 0, ptr %235, align 4, !tbaa !18
  store i32 0, ptr %242, align 4, !tbaa !18
  br label %354

354:                                              ; preds = %353, %313, %297, %244, %228
  %355 = add nuw nsw i64 %229, 2
  %356 = icmp ult i64 %229, 4
  br i1 %356, label %228, label %357, !llvm.loop !586

357:                                              ; preds = %354
  %358 = add nuw nsw i64 %225, 1
  %359 = icmp eq i64 %358, 3
  br i1 %359, label %360, label %224, !llvm.loop !587

360:                                              ; preds = %357
  %361 = add nuw nsw i64 %219, 1
  %362 = icmp eq i64 %361, %206
  br i1 %362, label %363, label %218, !llvm.loop !588

363:                                              ; preds = %360, %207
  %364 = add nuw nsw i64 %208, 1
  %365 = icmp eq i64 %364, %205
  br i1 %365, label %366, label %207, !llvm.loop !589

366:                                              ; preds = %363, %189, %55, %54
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @decode_one_slice(ptr noundef %0, ptr noundef %1) #0 {
  %3 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 34
  store i32 -1, ptr %3, align 8, !tbaa !590
  tail call void @set_ref_pic_num() #47
  %4 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %5 = load i32, ptr %4, align 4, !tbaa !137
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = load ptr, ptr @Co_located, align 8, !tbaa !13
  tail call void @compute_colocated(ptr noundef %8, ptr noundef nonnull @listX) #46
  br label %9

9:                                                ; preds = %7, %2
  %10 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %11 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 44
  %12 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 47
  br label %13

13:                                               ; preds = %38, %9
  %14 = load i32, ptr %10, align 4, !tbaa !49
  tail call void @start_macroblock(ptr noundef nonnull %0, i32 noundef %14) #46
  %15 = tail call i32 @read_one_macroblock(ptr noundef nonnull %0, ptr noundef %1) #46
  %16 = tail call i32 @decode_one_macroblock(ptr noundef nonnull %0, ptr noundef %1) #46
  %17 = load i32, ptr %11, align 8, !tbaa !189
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %13
  %20 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %21 = getelementptr inbounds %struct.storable_picture, ptr %20, i64 0, i32 34
  %22 = load ptr, ptr %21, align 8, !tbaa !538
  %23 = load i32, ptr %10, align 4, !tbaa !49
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8, ptr %22, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !14
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %19
  %29 = load <2 x i32>, ptr %12, align 8, !tbaa !18
  %30 = ashr <2 x i32> %29, <i32 1, i32 1>
  store <2 x i32> %30, ptr %12, align 8, !tbaa !18
  br label %31

31:                                               ; preds = %28, %19, %13
  tail call void @ercWriteMBMODEandMV(ptr noundef nonnull %0, ptr poison) #47
  %32 = load i32, ptr %11, align 8, !tbaa !189
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = load i32, ptr %10, align 4, !tbaa !49
  %36 = and i32 %35, 1
  %37 = icmp ne i32 %36, 0
  br label %38

38:                                               ; preds = %34, %31
  %39 = phi i1 [ true, %31 ], [ %37, %34 ]
  %40 = zext i1 %39 to i32
  %41 = tail call i32 @exit_macroblock(ptr noundef nonnull %0, ptr noundef %1, i32 noundef %40) #46
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %13, label %43, !llvm.loop !591

43:                                               ; preds = %38
  tail call void @exit_slice() #47
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @set_ref_pic_num() #9 {
  %1 = load ptr, ptr @img, align 8, !tbaa !13
  %2 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 3
  %3 = load i32, ptr %2, align 4, !tbaa !175
  %4 = load i32, ptr @listXsize, align 16, !tbaa !18
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %15

6:                                                ; preds = %0
  %7 = load ptr, ptr @listX, align 16, !tbaa !13
  %8 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %9 = sext i32 %3 to i64
  %10 = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 5, i64 %9
  %11 = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 6, i64 %9
  %12 = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 7, i64 %9
  %13 = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 8, i64 %9
  %14 = zext i32 %4 to i64
  br label %23

15:                                               ; preds = %23, %0
  %16 = load i32, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), align 4, !tbaa !18
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %85

18:                                               ; preds = %15
  %19 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %20 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %21 = sext i32 %3 to i64
  %22 = zext i32 %16 to i64
  br label %54

23:                                               ; preds = %23, %6
  %24 = phi i64 [ 0, %6 ], [ %52, %23 ]
  %25 = getelementptr inbounds ptr, ptr %7, i64 %24
  %26 = load ptr, ptr %25, align 8, !tbaa !13
  %27 = getelementptr inbounds %struct.storable_picture, ptr %26, i64 0, i32 1
  %28 = load i32, ptr %27, align 4, !tbaa !390
  %29 = shl nsw i32 %28, 1
  %30 = load i32, ptr %26, align 8, !tbaa !570
  %31 = icmp eq i32 %30, 2
  %32 = zext i1 %31 to i32
  %33 = or i32 %29, %32
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [33 x i64], ptr %10, i64 0, i64 %24
  store i64 %34, ptr %35, align 8, !tbaa !592
  %36 = getelementptr inbounds %struct.storable_picture, ptr %26, i64 0, i32 4
  %37 = load i32, ptr %36, align 8, !tbaa !571
  %38 = shl nsw i32 %37, 1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [33 x i64], ptr %11, i64 0, i64 %24
  store i64 %39, ptr %40, align 8, !tbaa !592
  %41 = getelementptr inbounds %struct.storable_picture, ptr %26, i64 0, i32 2
  %42 = load i32, ptr %41, align 8, !tbaa !593
  %43 = shl nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [33 x i64], ptr %12, i64 0, i64 %24
  store i64 %44, ptr %45, align 8, !tbaa !592
  %46 = getelementptr inbounds %struct.storable_picture, ptr %26, i64 0, i32 3
  %47 = load i32, ptr %46, align 4, !tbaa !594
  %48 = shl nsw i32 %47, 1
  %49 = or i32 %48, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [33 x i64], ptr %13, i64 0, i64 %24
  store i64 %50, ptr %51, align 8, !tbaa !592
  %52 = add nuw nsw i64 %24, 1
  %53 = icmp eq i64 %52, %14
  br i1 %53, label %15, label %23, !llvm.loop !595

54:                                               ; preds = %54, %18
  %55 = phi i64 [ 0, %18 ], [ %83, %54 ]
  %56 = getelementptr inbounds ptr, ptr %19, i64 %55
  %57 = load ptr, ptr %56, align 8, !tbaa !13
  %58 = getelementptr inbounds %struct.storable_picture, ptr %57, i64 0, i32 1
  %59 = load i32, ptr %58, align 4, !tbaa !390
  %60 = shl nsw i32 %59, 1
  %61 = load i32, ptr %57, align 8, !tbaa !570
  %62 = icmp eq i32 %61, 2
  %63 = zext i1 %62 to i32
  %64 = or i32 %60, %63
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %struct.storable_picture, ptr %20, i64 0, i32 5, i64 %21, i64 1, i64 %55
  store i64 %65, ptr %66, align 8, !tbaa !592
  %67 = getelementptr inbounds %struct.storable_picture, ptr %57, i64 0, i32 4
  %68 = load i32, ptr %67, align 8, !tbaa !571
  %69 = shl nsw i32 %68, 1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %struct.storable_picture, ptr %20, i64 0, i32 6, i64 %21, i64 1, i64 %55
  store i64 %70, ptr %71, align 8, !tbaa !592
  %72 = getelementptr inbounds %struct.storable_picture, ptr %57, i64 0, i32 2
  %73 = load i32, ptr %72, align 8, !tbaa !593
  %74 = shl nsw i32 %73, 1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %struct.storable_picture, ptr %20, i64 0, i32 7, i64 %21, i64 1, i64 %55
  store i64 %75, ptr %76, align 8, !tbaa !592
  %77 = getelementptr inbounds %struct.storable_picture, ptr %57, i64 0, i32 3
  %78 = load i32, ptr %77, align 4, !tbaa !594
  %79 = shl nsw i32 %78, 1
  %80 = or i32 %79, 1
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds %struct.storable_picture, ptr %20, i64 0, i32 8, i64 %21, i64 1, i64 %55
  store i64 %81, ptr %82, align 8, !tbaa !592
  %83 = add nuw nsw i64 %55, 1
  %84 = icmp eq i64 %83, %22
  br i1 %84, label %85, label %54, !llvm.loop !596

85:                                               ; preds = %54, %15
  %86 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %87 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %86, i64 0, i32 29
  %88 = load i32, ptr %87, align 4, !tbaa !440
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %140

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 36
  %92 = load i32, ptr %91, align 8, !tbaa !206
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %140

94:                                               ; preds = %90
  %95 = load ptr, ptr @dec_picture, align 8
  %96 = sext i32 %3 to i64
  br label %97

97:                                               ; preds = %137, %94
  %98 = phi i64 [ 2, %94 ], [ %138, %137 ]
  %99 = getelementptr inbounds [6 x i32], ptr @listXsize, i64 0, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !18
  %101 = icmp sgt i32 %100, 0
  br i1 %101, label %102, label %137

102:                                              ; preds = %97
  %103 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %98
  %104 = load ptr, ptr %103, align 8, !tbaa !13
  %105 = zext i32 %100 to i64
  br label %106

106:                                              ; preds = %106, %102
  %107 = phi i64 [ 0, %102 ], [ %135, %106 ]
  %108 = getelementptr inbounds ptr, ptr %104, i64 %107
  %109 = load ptr, ptr %108, align 8, !tbaa !13
  %110 = getelementptr inbounds %struct.storable_picture, ptr %109, i64 0, i32 1
  %111 = load i32, ptr %110, align 4, !tbaa !390
  %112 = shl nsw i32 %111, 1
  %113 = load i32, ptr %109, align 8, !tbaa !570
  %114 = icmp eq i32 %113, 2
  %115 = zext i1 %114 to i32
  %116 = or i32 %112, %115
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds %struct.storable_picture, ptr %95, i64 0, i32 5, i64 %96, i64 %98, i64 %107
  store i64 %117, ptr %118, align 8, !tbaa !592
  %119 = getelementptr inbounds %struct.storable_picture, ptr %109, i64 0, i32 4
  %120 = load i32, ptr %119, align 8, !tbaa !571
  %121 = shl nsw i32 %120, 1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds %struct.storable_picture, ptr %95, i64 0, i32 6, i64 %96, i64 %98, i64 %107
  store i64 %122, ptr %123, align 8, !tbaa !592
  %124 = getelementptr inbounds %struct.storable_picture, ptr %109, i64 0, i32 2
  %125 = load i32, ptr %124, align 8, !tbaa !593
  %126 = shl nsw i32 %125, 1
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %struct.storable_picture, ptr %95, i64 0, i32 7, i64 %96, i64 %98, i64 %107
  store i64 %127, ptr %128, align 8, !tbaa !592
  %129 = getelementptr inbounds %struct.storable_picture, ptr %109, i64 0, i32 3
  %130 = load i32, ptr %129, align 4, !tbaa !594
  %131 = shl nsw i32 %130, 1
  %132 = or i32 %131, 1
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds %struct.storable_picture, ptr %95, i64 0, i32 8, i64 %96, i64 %98, i64 %107
  store i64 %133, ptr %134, align 8, !tbaa !592
  %135 = add nuw nsw i64 %107, 1
  %136 = icmp eq i64 %135, %105
  br i1 %136, label %137, label %106, !llvm.loop !597

137:                                              ; preds = %106, %97
  %138 = add nuw nsw i64 %98, 1
  %139 = icmp eq i64 %138, 6
  br i1 %139, label %140, label %97, !llvm.loop !598

140:                                              ; preds = %137, %90, %85
  ret void
}

; Function Attrs: nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @ercWriteMBMODEandMV(ptr nocapture noundef readonly %0, ptr nocapture readnone %1) #25 {
  %3 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !49
  %5 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %6 = getelementptr inbounds %struct.storable_picture, ptr %5, i64 0, i32 19
  %7 = load i32, ptr %6, align 8, !tbaa !566
  %8 = ashr i32 %7, 4
  %9 = srem i32 %4, %8
  %10 = sdiv i32 %4, %8
  %11 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %12 = load ptr, ptr %11, align 8, !tbaa !84
  %13 = sext i32 %4 to i64
  %14 = load ptr, ptr @erc_object_list, align 8, !tbaa !13
  %15 = shl i32 %4, 2
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.objectBuffer_t, ptr %14, i64 %16
  %18 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %19 = load i32, ptr %18, align 4, !tbaa !137
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %27, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %13, i32 6
  %23 = shl nsw i32 %9, 2
  %24 = shl nsw i32 %10, 2
  %25 = getelementptr inbounds %struct.storable_picture, ptr %5, i64 0, i32 39
  %26 = getelementptr inbounds %struct.storable_picture, ptr %5, i64 0, i32 36
  br label %33

27:                                               ; preds = %2
  %28 = shl nsw i32 %9, 2
  %29 = shl nsw i32 %10, 2
  %30 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %13, i32 6
  %31 = getelementptr inbounds %struct.storable_picture, ptr %5, i64 0, i32 36
  %32 = getelementptr inbounds %struct.storable_picture, ptr %5, i64 0, i32 39
  br label %139

33:                                               ; preds = %134, %21
  %34 = phi i64 [ 0, %21 ], [ %137, %134 ]
  %35 = getelementptr inbounds %struct.objectBuffer_t, ptr %17, i64 %34
  %36 = load i32, ptr %22, align 8, !tbaa !195
  %37 = icmp eq i32 %36, 10
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %13, i32 13, i64 %34
  %40 = load i8, ptr %39, align 1, !tbaa !14
  switch i8 %40, label %41 [
    i8 11, label %45
    i8 0, label %44
  ]

41:                                               ; preds = %38
  %42 = icmp eq i8 %40, 1
  %43 = select i1 %42, i8 1, i8 5
  br label %45

44:                                               ; preds = %38
  br label %45

45:                                               ; preds = %44, %41, %38, %33
  %46 = phi i8 [ 2, %33 ], [ 6, %38 ], [ %43, %41 ], [ 0, %44 ]
  store i8 %46, ptr %35, align 4, !tbaa !289
  %47 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %13, i32 13, i64 %34
  %48 = load i8, ptr %47, align 1, !tbaa !14
  switch i8 %48, label %52 [
    i8 0, label %49
    i8 11, label %49
  ]

49:                                               ; preds = %45, %45
  %50 = getelementptr inbounds %struct.objectBuffer_t, ptr %17, i64 %34, i32 3
  store i32 0, ptr %50, align 4, !tbaa !18
  %51 = getelementptr inbounds %struct.objectBuffer_t, ptr %17, i64 %34, i32 3, i64 1
  store i32 0, ptr %51, align 4, !tbaa !18
  br label %134

52:                                               ; preds = %45
  %53 = trunc i64 %34 to i32
  %54 = shl i32 %53, 1
  %55 = and i32 %54, 2
  %56 = or i32 %55, %23
  %57 = trunc i64 %34 to i32
  %58 = and i32 %57, 2147483646
  %59 = add nuw nsw i32 %58, %24
  %60 = add i8 %48, -5
  %61 = icmp ult i8 %60, 3
  %62 = load ptr, ptr %25, align 8, !tbaa !371
  %63 = load ptr, ptr %62, align 8, !tbaa !13
  %64 = sext i32 %59 to i64
  %65 = getelementptr inbounds ptr, ptr %63, i64 %64
  %66 = load ptr, ptr %65, align 8, !tbaa !13
  %67 = sext i32 %56 to i64
  %68 = getelementptr inbounds ptr, ptr %66, i64 %67
  %69 = load ptr, ptr %68, align 8, !tbaa !13
  %70 = load i16, ptr %69, align 2, !tbaa !40
  %71 = sext i16 %70 to i32
  br i1 %61, label %72, label %113

72:                                               ; preds = %52
  %73 = or i32 %56, 1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds ptr, ptr %66, i64 %74
  %76 = load ptr, ptr %75, align 8, !tbaa !13
  %77 = load i16, ptr %76, align 2, !tbaa !40
  %78 = sext i16 %77 to i32
  %79 = or i32 %59, 1
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds ptr, ptr %63, i64 %80
  %82 = load ptr, ptr %81, align 8, !tbaa !13
  %83 = getelementptr inbounds ptr, ptr %82, i64 %67
  %84 = load ptr, ptr %83, align 8, !tbaa !13
  %85 = load i16, ptr %84, align 2, !tbaa !40
  %86 = sext i16 %85 to i32
  %87 = getelementptr inbounds ptr, ptr %82, i64 %74
  %88 = load ptr, ptr %87, align 8, !tbaa !13
  %89 = load i16, ptr %88, align 2, !tbaa !40
  %90 = sext i16 %89 to i32
  %91 = add nsw i32 %71, 2
  %92 = add nsw i32 %91, %78
  %93 = add nsw i32 %92, %86
  %94 = add nsw i32 %93, %90
  %95 = sdiv i32 %94, 4
  %96 = getelementptr inbounds i16, ptr %69, i64 1
  %97 = load i16, ptr %96, align 2, !tbaa !40
  %98 = sext i16 %97 to i32
  %99 = getelementptr inbounds i16, ptr %76, i64 1
  %100 = load i16, ptr %99, align 2, !tbaa !40
  %101 = sext i16 %100 to i32
  %102 = getelementptr inbounds i16, ptr %84, i64 1
  %103 = load i16, ptr %102, align 2, !tbaa !40
  %104 = sext i16 %103 to i32
  %105 = getelementptr inbounds i16, ptr %88, i64 1
  %106 = load i16, ptr %105, align 2, !tbaa !40
  %107 = sext i16 %106 to i32
  %108 = add nsw i32 %98, 2
  %109 = add nsw i32 %108, %101
  %110 = add nsw i32 %109, %104
  %111 = add nsw i32 %110, %107
  %112 = sdiv i32 %111, 4
  br label %117

113:                                              ; preds = %52
  %114 = getelementptr inbounds i16, ptr %69, i64 1
  %115 = load i16, ptr %114, align 2, !tbaa !40
  %116 = sext i16 %115 to i32
  br label %117

117:                                              ; preds = %113, %72
  %118 = phi i32 [ %71, %113 ], [ %95, %72 ]
  %119 = phi i32 [ %116, %113 ], [ %112, %72 ]
  %120 = getelementptr inbounds %struct.objectBuffer_t, ptr %17, i64 %34, i32 3
  store i32 %118, ptr %120, align 4
  %121 = getelementptr inbounds %struct.objectBuffer_t, ptr %17, i64 %34, i32 3, i64 1
  store i32 %119, ptr %121, align 4
  %122 = tail call i32 @llvm.abs.i32(i32 %118, i1 true)
  %123 = tail call i32 @llvm.abs.i32(i32 %119, i1 true)
  %124 = add nuw nsw i32 %123, %122
  %125 = load i32, ptr @erc_mvperMB, align 4, !tbaa !18
  %126 = add nsw i32 %124, %125
  store i32 %126, ptr @erc_mvperMB, align 4, !tbaa !18
  %127 = load ptr, ptr %26, align 8, !tbaa !197
  %128 = load ptr, ptr %127, align 8, !tbaa !13
  %129 = getelementptr inbounds ptr, ptr %128, i64 %64
  %130 = load ptr, ptr %129, align 8, !tbaa !13
  %131 = getelementptr inbounds i8, ptr %130, i64 %67
  %132 = load i8, ptr %131, align 1, !tbaa !14
  %133 = sext i8 %132 to i32
  br label %134

134:                                              ; preds = %117, %49
  %135 = phi i32 [ 0, %49 ], [ %133, %117 ]
  %136 = getelementptr inbounds %struct.objectBuffer_t, ptr %17, i64 %34, i32 3, i64 2
  store i32 %135, ptr %136, align 4, !tbaa !18
  %137 = add nuw nsw i64 %34, 1
  %138 = icmp eq i64 %137, 4
  br i1 %138, label %225, label %33, !llvm.loop !599

139:                                              ; preds = %220, %27
  %140 = phi i64 [ 0, %27 ], [ %223, %220 ]
  %141 = trunc i64 %140 to i32
  %142 = shl i32 %141, 1
  %143 = and i32 %142, 2
  %144 = or i32 %143, %28
  %145 = trunc i64 %140 to i32
  %146 = and i32 %145, 2147483646
  %147 = add nuw nsw i32 %146, %29
  %148 = getelementptr inbounds %struct.objectBuffer_t, ptr %17, i64 %140
  %149 = load i32, ptr %30, align 8, !tbaa !195
  %150 = icmp eq i32 %149, 10
  br i1 %150, label %151, label %152

151:                                              ; preds = %139
  store i8 2, ptr %148, align 4, !tbaa !289
  br label %159

152:                                              ; preds = %139
  %153 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %13, i32 13, i64 %140
  %154 = load i8, ptr %153, align 1, !tbaa !14
  %155 = icmp eq i8 %154, 11
  %156 = select i1 %155, i8 6, i8 5
  store i8 %156, ptr %148, align 4, !tbaa !289
  %157 = load i8, ptr %153, align 1, !tbaa !14
  %158 = icmp eq i8 %157, 11
  br i1 %158, label %159, label %162

159:                                              ; preds = %152, %151
  %160 = getelementptr inbounds %struct.objectBuffer_t, ptr %17, i64 %140, i32 3
  store i32 0, ptr %160, align 4, !tbaa !18
  %161 = getelementptr inbounds %struct.objectBuffer_t, ptr %17, i64 %140, i32 3, i64 1
  store i32 0, ptr %161, align 4, !tbaa !18
  br label %220

162:                                              ; preds = %152
  %163 = load ptr, ptr %31, align 8, !tbaa !197
  %164 = load ptr, ptr %163, align 8, !tbaa !13
  %165 = sext i32 %147 to i64
  %166 = getelementptr inbounds ptr, ptr %164, i64 %165
  %167 = load ptr, ptr %166, align 8, !tbaa !13
  %168 = sext i32 %144 to i64
  %169 = getelementptr inbounds i8, ptr %167, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !14
  %171 = lshr i8 %170, 7
  %172 = load ptr, ptr %32, align 8, !tbaa !371
  %173 = zext i8 %171 to i64
  %174 = getelementptr inbounds ptr, ptr %172, i64 %173
  %175 = load ptr, ptr %174, align 8, !tbaa !13
  %176 = getelementptr inbounds ptr, ptr %175, i64 %165
  %177 = load ptr, ptr %176, align 8, !tbaa !13
  %178 = getelementptr inbounds ptr, ptr %177, i64 %168
  %179 = load ptr, ptr %178, align 8, !tbaa !13
  %180 = or i32 %144, 1
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds ptr, ptr %177, i64 %181
  %183 = load ptr, ptr %182, align 8, !tbaa !13
  %184 = or i32 %147, 1
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds ptr, ptr %175, i64 %185
  %187 = load ptr, ptr %186, align 8, !tbaa !13
  %188 = getelementptr inbounds ptr, ptr %187, i64 %168
  %189 = load ptr, ptr %188, align 8, !tbaa !13
  %190 = getelementptr inbounds ptr, ptr %187, i64 %181
  %191 = load ptr, ptr %190, align 8, !tbaa !13
  %192 = getelementptr inbounds %struct.objectBuffer_t, ptr %17, i64 %140, i32 3
  %193 = load <2 x i16>, ptr %179, align 2, !tbaa !40
  %194 = sext <2 x i16> %193 to <2 x i32>
  %195 = load <2 x i16>, ptr %183, align 2, !tbaa !40
  %196 = sext <2 x i16> %195 to <2 x i32>
  %197 = load <2 x i16>, ptr %189, align 2, !tbaa !40
  %198 = sext <2 x i16> %197 to <2 x i32>
  %199 = load <2 x i16>, ptr %191, align 2, !tbaa !40
  %200 = sext <2 x i16> %199 to <2 x i32>
  %201 = add nsw <2 x i32> %194, <i32 2, i32 2>
  %202 = add nsw <2 x i32> %201, %196
  %203 = add nsw <2 x i32> %202, %198
  %204 = add nsw <2 x i32> %203, %200
  %205 = sdiv <2 x i32> %204, <i32 4, i32 4>
  store <2 x i32> %205, ptr %192, align 4, !tbaa !18
  %206 = extractelement <2 x i32> %205, i64 0
  %207 = tail call i32 @llvm.abs.i32(i32 %206, i1 true)
  %208 = extractelement <2 x i32> %205, i64 1
  %209 = tail call i32 @llvm.abs.i32(i32 %208, i1 true)
  %210 = load i32, ptr @erc_mvperMB, align 4, !tbaa !18
  %211 = add i32 %210, %207
  %212 = add i32 %211, %209
  store i32 %212, ptr @erc_mvperMB, align 4, !tbaa !18
  %213 = getelementptr inbounds ptr, ptr %163, i64 %173
  %214 = load ptr, ptr %213, align 8, !tbaa !13
  %215 = getelementptr inbounds ptr, ptr %214, i64 %165
  %216 = load ptr, ptr %215, align 8, !tbaa !13
  %217 = getelementptr inbounds i8, ptr %216, i64 %168
  %218 = load i8, ptr %217, align 1, !tbaa !14
  %219 = sext i8 %218 to i32
  br label %220

220:                                              ; preds = %162, %159
  %221 = phi i32 [ 0, %159 ], [ %219, %162 ]
  %222 = getelementptr inbounds %struct.objectBuffer_t, ptr %17, i64 %140, i32 3, i64 2
  store i32 %221, ptr %222, align 4, !tbaa !18
  %223 = add nuw nsw i64 %140, 1
  %224 = icmp eq i64 %223, 4
  br i1 %224, label %225, label %139, !llvm.loop !600

225:                                              ; preds = %220, %134
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal void @exit_slice() #10 {
  %1 = load ptr, ptr @img, align 8, !tbaa !13
  %2 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %3 = load ptr, ptr %2, align 8, !tbaa !165
  %4 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 24
  %5 = load i32, ptr %4, align 4, !tbaa !453
  store i32 %5, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 9), align 4, !tbaa !601
  %6 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 56
  %7 = load i32, ptr %6, align 4, !tbaa !336
  store i32 %7, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 2), align 4, !tbaa !603
  %8 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 57
  %9 = load i32, ptr %8, align 8, !tbaa !441
  store i32 %9, ptr @old_slice, align 4, !tbaa !604
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %0
  %12 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 58
  %13 = load i32, ptr %12, align 4, !tbaa !455
  store i32 %13, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 1), align 4, !tbaa !605
  br label %14

14:                                               ; preds = %11, %0
  %15 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 84
  %16 = load i32, ptr %15, align 8, !tbaa !489
  store i32 %16, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 3), align 4, !tbaa !606
  %17 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 83
  %18 = load i32, ptr %17, align 4, !tbaa !454
  store i32 %18, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 7), align 4, !tbaa !607
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 85
  %22 = load i32, ptr %21, align 4, !tbaa !456
  store i32 %22, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 8), align 4, !tbaa !608
  br label %23

23:                                               ; preds = %20, %14
  %24 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %25 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %24, i64 0, i32 18
  %26 = load i32, ptr %25, align 4, !tbaa !457
  switch i32 %26, label %39 [
    i32 0, label %27
    i32 1, label %31
  ]

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 59
  %29 = load i32, ptr %28, align 8, !tbaa !459
  store i32 %29, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 4), align 4, !tbaa !609
  %30 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 60
  br label %35

31:                                               ; preds = %23
  %32 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 61
  %33 = load i32, ptr %32, align 8, !tbaa !18
  store i32 %33, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 6), align 4, !tbaa !18
  %34 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 61, i64 1
  br label %35

35:                                               ; preds = %31, %27
  %36 = phi ptr [ %30, %27 ], [ %34, %31 ]
  %37 = phi ptr [ getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 5), %27 ], [ getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 6, i64 1), %31 ]
  %38 = load i32, ptr %36, align 4, !tbaa !18
  store i32 %38, ptr %37, align 4, !tbaa !18
  br label %39

39:                                               ; preds = %35, %23
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.abs.i8(i8, i1 immarg) #12

; Function Attrs: nofree nounwind optsize
declare noundef i64 @ftell(ptr nocapture noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @is_new_picture() #8 {
  %1 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %2 = icmp eq ptr %1, null
  %3 = load i32, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 9), align 4, !tbaa !601
  %4 = load ptr, ptr @img, align 8, !tbaa !13
  %5 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 38
  %6 = load ptr, ptr %5, align 8, !tbaa !165
  %7 = getelementptr inbounds %struct.Slice, ptr %6, i64 0, i32 24
  %8 = load i32, ptr %7, align 4, !tbaa !453
  %9 = icmp ne i32 %3, %8
  %10 = or i1 %2, %9
  %11 = load i32, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 2), align 4, !tbaa !603
  %12 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 56
  %13 = load i32, ptr %12, align 4, !tbaa !336
  %14 = icmp ne i32 %11, %13
  %15 = or i1 %10, %14
  %16 = load i32, ptr @old_slice, align 4
  %17 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 57
  %18 = load i32, ptr %17, align 8, !tbaa !441
  %19 = icmp ne i32 %16, %18
  %20 = or i1 %15, %19
  %21 = icmp ne i32 %18, 0
  %22 = icmp ne i32 %16, 0
  %23 = select i1 %21, i1 %22, i1 false
  br i1 %23, label %24, label %30

24:                                               ; preds = %0
  %25 = load i32, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 1), align 4, !tbaa !605
  %26 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 58
  %27 = load i32, ptr %26, align 4, !tbaa !455
  %28 = icmp ne i32 %25, %27
  %29 = or i1 %20, %28
  br label %30

30:                                               ; preds = %24, %0
  %31 = phi i1 [ %29, %24 ], [ %20, %0 ]
  %32 = zext i1 %31 to i32
  %33 = load i32, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 3), align 4, !tbaa !606
  %34 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 84
  %35 = load i32, ptr %34, align 8, !tbaa !489
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %42, label %37

37:                                               ; preds = %30
  %38 = icmp eq i32 %33, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %37
  %40 = icmp eq i32 %35, 0
  %41 = zext i1 %40 to i32
  br label %42

42:                                               ; preds = %39, %37, %30
  %43 = phi i32 [ 0, %30 ], [ 1, %37 ], [ %41, %39 ]
  %44 = or i32 %43, %32
  %45 = load i32, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 7), align 4
  %46 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 83
  %47 = load i32, ptr %46, align 4, !tbaa !454
  %48 = icmp ne i32 %45, %47
  %49 = zext i1 %48 to i32
  %50 = or i32 %44, %49
  %51 = icmp ne i32 %47, 0
  %52 = icmp ne i32 %45, 0
  %53 = select i1 %51, i1 %52, i1 false
  br i1 %53, label %54, label %61

54:                                               ; preds = %42
  %55 = load i32, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 8), align 4, !tbaa !608
  %56 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 85
  %57 = load i32, ptr %56, align 4, !tbaa !456
  %58 = icmp ne i32 %55, %57
  %59 = zext i1 %58 to i32
  %60 = or i32 %50, %59
  br label %61

61:                                               ; preds = %54, %42
  %62 = phi i32 [ %60, %54 ], [ %50, %42 ]
  %63 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %64 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %63, i64 0, i32 18
  %65 = load i32, ptr %64, align 4, !tbaa !457
  switch i32 %65, label %88 [
    i32 0, label %66
    i32 1, label %72
  ]

66:                                               ; preds = %61
  %67 = load i32, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 4), align 4, !tbaa !609
  %68 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 59
  %69 = load i32, ptr %68, align 8, !tbaa !459
  %70 = icmp ne i32 %67, %69
  %71 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 60
  br label %78

72:                                               ; preds = %61
  %73 = load i32, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 6), align 4, !tbaa !18
  %74 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 61
  %75 = load i32, ptr %74, align 8, !tbaa !18
  %76 = icmp ne i32 %73, %75
  %77 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 61, i64 1
  br label %78

78:                                               ; preds = %72, %66
  %79 = phi ptr [ %71, %66 ], [ %77, %72 ]
  %80 = phi ptr [ getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 5), %66 ], [ getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 6, i64 1), %72 ]
  %81 = phi i1 [ %70, %66 ], [ %76, %72 ]
  %82 = load i32, ptr %80, align 4, !tbaa !18
  %83 = load i32, ptr %79, align 4, !tbaa !18
  %84 = icmp ne i32 %82, %83
  %85 = or i1 %81, %84
  %86 = zext i1 %85 to i32
  %87 = or i32 %62, %86
  br label %88

88:                                               ; preds = %78, %61
  %89 = phi i32 [ %62, %61 ], [ %87, %78 ]
  ret i32 %89
}

; Function Attrs: nounwind optsize uwtable
define internal void @init_picture(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %4 = load ptr, ptr %3, align 8, !tbaa !165
  %5 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @exit_picture() #47
  br label %8

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 135
  %10 = load i32, ptr %9, align 8, !tbaa !556
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %14 = load i32, ptr %13, align 4, !tbaa !336
  %15 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 137
  %16 = load i32, ptr %15, align 8, !tbaa !610
  %17 = add i32 %16, %14
  %18 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 86
  %19 = load i32, ptr %18, align 8, !tbaa !335
  %20 = urem i32 %17, %19
  %21 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 138
  store i32 %20, ptr %21, align 4, !tbaa !611
  br label %22

22:                                               ; preds = %12, %8
  %23 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 83
  %24 = load i32, ptr %23, align 4, !tbaa !454
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %28 = load i32, ptr %27, align 4, !tbaa !336
  %29 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 138
  store i32 %28, ptr %29, align 4, !tbaa !611
  br label %30

30:                                               ; preds = %26, %22
  br i1 %11, label %31, label %65

31:                                               ; preds = %30
  %32 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %33 = load i32, ptr %32, align 4, !tbaa !336
  %34 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 52
  %35 = load i32, ptr %34, align 4, !tbaa !334
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %65, label %37

37:                                               ; preds = %31
  %38 = add i32 %35, 1
  %39 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 86
  %40 = load i32, ptr %39, align 8, !tbaa !335
  %41 = urem i32 %38, %40
  %42 = icmp eq i32 %33, %41
  br i1 %42, label %65, label %43

43:                                               ; preds = %37
  %44 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %45 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %44, i64 0, i32 26
  %46 = load i32, ptr %45, align 4, !tbaa !612
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.inp_par, ptr %1, i64 0, i32 8
  %50 = load i32, ptr %49, align 4, !tbaa !613
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %48
  %53 = icmp ult i32 %33, %41
  %54 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 130
  %55 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 133
  br i1 %53, label %56, label %58

56:                                               ; preds = %52
  store i32 1, ptr %54, align 4, !tbaa !364
  store i32 1, ptr %55, align 8, !tbaa !330
  tail call void @conceal_lost_frames(ptr noundef nonnull %0) #46
  %57 = load i32, ptr %49, align 4, !tbaa !613
  store i32 %57, ptr %54, align 4, !tbaa !364
  br label %60

58:                                               ; preds = %52
  store i32 %50, ptr %54, align 4, !tbaa !364
  store i32 0, ptr %55, align 8, !tbaa !330
  tail call void @conceal_lost_frames(ptr noundef nonnull %0) #46
  br label %60

59:                                               ; preds = %48
  tail call void @error(ptr noundef nonnull @.str.30.76, i32 noundef 100) #46
  br label %60

60:                                               ; preds = %59, %58, %56, %43
  %61 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 130
  %62 = load i32, ptr %61, align 4, !tbaa !364
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  tail call void @fill_frame_num_gap(ptr noundef nonnull %0) #46
  br label %65

65:                                               ; preds = %64, %60, %37, %31, %30
  %66 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 84
  %67 = load i32, ptr %66, align 8, !tbaa !489
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %71 = load i32, ptr %70, align 4, !tbaa !336
  %72 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 52
  store i32 %71, ptr %72, align 4, !tbaa !334
  br label %73

73:                                               ; preds = %69, %65
  tail call void @decode_poc(ptr noundef nonnull %0) #46
  %74 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 138
  %75 = load i32, ptr %74, align 4, !tbaa !611
  %76 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %77 = load i32, ptr %76, align 4, !tbaa !336
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %86

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 139
  %81 = load i32, ptr %80, align 8, !tbaa !614
  %82 = icmp eq i32 %81, 2147483647
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 55
  %85 = load i32, ptr %84, align 8, !tbaa !524
  store i32 %85, ptr %80, align 8, !tbaa !614
  br label %86

86:                                               ; preds = %83, %79, %73
  %87 = load i32, ptr %66, align 8, !tbaa !489
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 55
  %91 = load i32, ptr %90, align 8, !tbaa !524
  %92 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 127
  store i32 %91, ptr %92, align 8, !tbaa !332
  br label %93

93:                                               ; preds = %89, %86
  %94 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 36
  %95 = load i32, ptr %94, align 8, !tbaa !206
  %96 = icmp ult i32 %95, 2
  br i1 %96, label %97, label %103

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 125
  %99 = tail call i32 @ftime(ptr noundef nonnull %98) #46
  %100 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 123
  %101 = tail call i64 @time(ptr noundef nonnull %100) #46
  %102 = load i32, ptr %94, align 8, !tbaa !206
  br label %103

103:                                              ; preds = %97, %93
  %104 = phi i32 [ %95, %93 ], [ %102, %97 ]
  %105 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 11
  %106 = load i32, ptr %105, align 8, !tbaa !337
  %107 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 12
  %108 = load i32, ptr %107, align 4, !tbaa !338
  %109 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 13
  %110 = load i32, ptr %109, align 8, !tbaa !339
  %111 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 15
  %112 = load i32, ptr %111, align 8, !tbaa !340
  %113 = tail call ptr @alloc_storable_picture(i32 noundef %104, i32 noundef %106, i32 noundef %108, i32 noundef %110, i32 noundef %112) #46
  store ptr %113, ptr @dec_picture, align 8, !tbaa !13
  %114 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 53
  %115 = getelementptr inbounds %struct.storable_picture, ptr %113, i64 0, i32 2
  %116 = load <2 x i32>, ptr %114, align 8, !tbaa !18
  store <2 x i32> %116, ptr %115, align 8, !tbaa !18
  %117 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 55
  %118 = load i32, ptr %117, align 8, !tbaa !524
  %119 = getelementptr inbounds %struct.storable_picture, ptr %113, i64 0, i32 4
  store i32 %118, ptr %119, align 8, !tbaa !571
  %120 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 6
  %121 = load i32, ptr %120, align 4, !tbaa !43
  %122 = getelementptr inbounds %struct.storable_picture, ptr %113, i64 0, i32 57
  store i32 %121, ptr %122, align 8, !tbaa !572
  %123 = getelementptr inbounds %struct.Slice, ptr %4, i64 0, i32 2
  %124 = load i32, ptr %123, align 8, !tbaa !493
  %125 = getelementptr inbounds %struct.storable_picture, ptr %113, i64 0, i32 59
  store i32 %124, ptr %125, align 4, !tbaa !363
  %126 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %127 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %126, i64 0, i32 27
  %128 = load i32, ptr %127, align 8, !tbaa !615
  %129 = getelementptr inbounds %struct.storable_picture, ptr %113, i64 0, i32 58
  store i32 %128, ptr %129, align 4, !tbaa !18
  %130 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %126, i64 0, i32 28
  %131 = load i32, ptr %130, align 4, !tbaa !616
  %132 = getelementptr inbounds %struct.storable_picture, ptr %113, i64 0, i32 58, i64 1
  store i32 %131, ptr %132, align 4, !tbaa !18
  %133 = load ptr, ptr @erc_errorVar, align 8, !tbaa !13
  %134 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 91
  %135 = load i32, ptr %134, align 4, !tbaa !439
  %136 = getelementptr inbounds %struct.storable_picture, ptr %113, i64 0, i32 19
  %137 = load i32, ptr %136, align 8, !tbaa !566
  tail call void @ercReset(ptr noundef %133, i32 noundef %135, i32 noundef %135, i32 noundef %137) #46
  store i32 0, ptr @erc_mvperMB, align 4, !tbaa !18
  %138 = load i32, ptr %94, align 8, !tbaa !206
  switch i32 %138, label %157 [
    i32 1, label %139
    i32 2, label %145
    i32 0, label %153
  ]

139:                                              ; preds = %103
  %140 = load i32, ptr %114, align 8, !tbaa !520
  %141 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %142 = getelementptr inbounds %struct.storable_picture, ptr %141, i64 0, i32 1
  store i32 %140, ptr %142, align 4, !tbaa !390
  %143 = load i32, ptr %0, align 8, !tbaa !569
  %144 = shl nsw i32 %143, 1
  store i32 %144, ptr %0, align 8, !tbaa !569
  br label %158

145:                                              ; preds = %103
  %146 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 54
  %147 = load i32, ptr %146, align 4, !tbaa !522
  %148 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %149 = getelementptr inbounds %struct.storable_picture, ptr %148, i64 0, i32 1
  store i32 %147, ptr %149, align 4, !tbaa !390
  %150 = load i32, ptr %0, align 8, !tbaa !569
  %151 = shl nsw i32 %150, 1
  %152 = or i32 %151, 1
  store i32 %152, ptr %0, align 8, !tbaa !569
  br label %158

153:                                              ; preds = %103
  %154 = load i32, ptr %117, align 8, !tbaa !524
  %155 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %156 = getelementptr inbounds %struct.storable_picture, ptr %155, i64 0, i32 1
  store i32 %154, ptr %156, align 4, !tbaa !390
  br label %158

157:                                              ; preds = %103
  tail call void @error(ptr noundef nonnull @.str.31.77, i32 noundef 235) #46
  br label %158

158:                                              ; preds = %157, %153, %145, %139
  %159 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 3
  store i32 0, ptr %159, align 4, !tbaa !175
  %160 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %161 = load i32, ptr %160, align 4, !tbaa !137
  %162 = icmp sgt i32 %161, 4
  br i1 %162, label %163, label %165

163:                                              ; preds = %158
  %164 = tail call i32 @set_ec_flag(i32 noundef 1) #46
  store i32 0, ptr %160, align 4, !tbaa !137
  br label %165

165:                                              ; preds = %163, %158
  %166 = load i32, ptr %134, align 4, !tbaa !439
  %167 = icmp sgt i32 %166, 0
  br i1 %167, label %168, label %204

168:                                              ; preds = %165
  %169 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 113
  %170 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 32
  %171 = load i32, ptr %169, align 4, !tbaa !93
  br label %172

172:                                              ; preds = %199, %168
  %173 = phi i32 [ %171, %168 ], [ %.lcssa, %199 ]
  %174 = phi i64 [ 0, %168 ], [ %200, %199 ]
  br label %175

175:                                              ; preds = %194, %172
  %176 = phi i32 [ %173, %172 ], [ %195, %194 ]
  %177 = phi i32 [ %173, %172 ], [ %196, %194 ]
  %178 = phi i64 [ 0, %172 ], [ %197, %194 ]
  %179 = icmp sgt i32 %177, -4
  br i1 %179, label %180, label %194

180:                                              ; preds = %175
  %181 = load ptr, ptr %170, align 8, !tbaa !617
  %182 = getelementptr inbounds ptr, ptr %181, i64 %174
  %183 = load ptr, ptr %182, align 8, !tbaa !13
  %184 = getelementptr inbounds ptr, ptr %183, i64 %178
  %185 = load ptr, ptr %184, align 8, !tbaa !13
  br label %186

186:                                              ; preds = %186, %180
  %187 = phi i64 [ 0, %180 ], [ %189, %186 ]
  %188 = getelementptr inbounds i32, ptr %185, i64 %187
  store i32 -1, ptr %188, align 4, !tbaa !18
  %189 = add nuw nsw i64 %187, 1
  %190 = load i32, ptr %169, align 4, !tbaa !93
  %191 = add nsw i32 %190, 3
  %192 = sext i32 %191 to i64
  %193 = icmp slt i64 %187, %192
  br i1 %193, label %186, label %194, !llvm.loop !618

194:                                              ; preds = %186, %175
  %195 = phi i32 [ %176, %175 ], [ %190, %186 ]
  %196 = phi i32 [ %177, %175 ], [ %190, %186 ]
  %197 = add nuw nsw i64 %178, 1
  %198 = icmp eq i64 %197, 4
  br i1 %198, label %199, label %175, !llvm.loop !619

199:                                              ; preds = %194
  %.lcssa = phi i32 [ %195, %194 ]
  %200 = add nuw nsw i64 %174, 1
  %201 = load i32, ptr %134, align 4, !tbaa !439
  %202 = sext i32 %201 to i64
  %203 = icmp slt i64 %200, %202
  br i1 %203, label %172, label %204, !llvm.loop !620

204:                                              ; preds = %199, %165
  %205 = phi i32 [ %166, %165 ], [ %201, %199 ]
  %206 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %207 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %206, i64 0, i32 30
  %208 = load i32, ptr %207, align 4, !tbaa !54
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %222, label %210

210:                                              ; preds = %204
  %211 = icmp sgt i32 %205, 0
  br i1 %211, label %212, label %235

212:                                              ; preds = %210
  %213 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  %214 = load ptr, ptr %213, align 8, !tbaa !56
  br label %215

215:                                              ; preds = %215, %212
  %216 = phi i64 [ 0, %212 ], [ %218, %215 ]
  %217 = getelementptr inbounds i32, ptr %214, i64 %216
  store i32 1, ptr %217, align 4, !tbaa !18
  %218 = add nuw nsw i64 %216, 1
  %219 = load i32, ptr %134, align 4, !tbaa !439
  %220 = sext i32 %219 to i64
  %221 = icmp slt i64 %218, %220
  br i1 %221, label %215, label %222, !llvm.loop !621

222:                                              ; preds = %215, %204
  %223 = phi i32 [ %205, %204 ], [ %219, %215 ]
  %224 = icmp sgt i32 %223, 0
  br i1 %224, label %225, label %235

225:                                              ; preds = %222
  %226 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %227 = load ptr, ptr %226, align 8, !tbaa !84
  %228 = zext i32 %223 to i64
  br label %229

229:                                              ; preds = %229, %225
  %230 = phi i64 [ 0, %225 ], [ %233, %229 ]
  %231 = getelementptr inbounds %struct.macroblock, ptr %227, i64 %230, i32 2
  store i32 -1, ptr %231, align 4, !tbaa !176
  %232 = getelementptr inbounds %struct.macroblock, ptr %227, i64 %230, i32 15
  store i32 1, ptr %232, align 8, !tbaa !565
  %233 = add nuw nsw i64 %230, 1
  %234 = icmp eq i64 %233, %228
  br i1 %234, label %235, label %229, !llvm.loop !622

235:                                              ; preds = %229, %222, %210
  %236 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 16
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %236, i8 0, i64 32, i1 false)
  %237 = load i32, ptr %160, align 4, !tbaa !137
  %238 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %239 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 45
  store i32 %237, ptr %239, align 8, !tbaa !359
  %240 = load i32, ptr %66, align 8, !tbaa !489
  %241 = icmp ne i32 %240, 0
  %242 = zext i1 %241 to i32
  %243 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 15
  store i32 %242, ptr %243, align 8, !tbaa !346
  %244 = load i32, ptr %23, align 4, !tbaa !454
  %245 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 46
  store i32 %244, ptr %245, align 4, !tbaa !360
  %246 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 94
  %247 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 47
  %248 = load <2 x i32>, ptr %246, align 8, !tbaa !18
  store <2 x i32> %248, ptr %247, align 8, !tbaa !18
  %249 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 96
  %250 = load i32, ptr %249, align 8, !tbaa !508
  %251 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 49
  store i32 %250, ptr %251, align 8, !tbaa !348
  %252 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 46
  %253 = load ptr, ptr %252, align 8, !tbaa !502
  %254 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 60
  store ptr %253, ptr %254, align 8, !tbaa !623
  store ptr null, ptr %252, align 8, !tbaa !502
  %255 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 44
  %256 = load i32, ptr %255, align 8, !tbaa !189
  %257 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 29
  store i32 %256, ptr %257, align 8, !tbaa !564
  %258 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 87
  %259 = load i32, ptr %258, align 4, !tbaa !422
  %260 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 30
  store i32 %259, ptr %260, align 4, !tbaa !369
  %261 = icmp eq i32 %256, 0
  %262 = select i1 %261, ptr @get_mb_block_pos_normal, ptr @get_mb_block_pos_mbaff
  store ptr %262, ptr @get_mb_block_pos, align 8, !tbaa !13
  %263 = select i1 %261, ptr @getNonAffNeighbour, ptr @getAffNeighbour
  store ptr %263, ptr @getNeighbour, align 8, !tbaa !13
  %264 = load i32, ptr %76, align 4, !tbaa !336
  %265 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 11
  store i32 %264, ptr %265, align 8, !tbaa !342
  %266 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 9
  store i32 %264, ptr %266, align 8, !tbaa !343
  %267 = load i32, ptr %74, align 4, !tbaa !611
  %268 = icmp eq i32 %264, %267
  %269 = zext i1 %268 to i32
  %270 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 10
  store i32 %269, ptr %270, align 4, !tbaa !624
  %271 = load i32, ptr %94, align 8, !tbaa !206
  %272 = icmp eq i32 %271, 0
  %273 = zext i1 %272 to i32
  %274 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 28
  store i32 %273, ptr %274, align 4, !tbaa !341
  %275 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %276 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %275, i64 0, i32 8
  %277 = load i32, ptr %276, align 4, !tbaa !480
  %278 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 50
  store i32 %277, ptr %278, align 4, !tbaa !83
  %279 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %275, i64 0, i32 29
  %280 = load i32, ptr %279, align 4, !tbaa !440
  %281 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 51
  store i32 %280, ptr %281, align 8, !tbaa !625
  %282 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %275, i64 0, i32 32
  %283 = load i32, ptr %282, align 4, !tbaa !626
  %284 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 52
  store i32 %283, ptr %284, align 4, !tbaa !627
  %285 = icmp eq i32 %283, 0
  br i1 %285, label %290, label %286

286:                                              ; preds = %235
  %287 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %275, i64 0, i32 33
  %288 = getelementptr inbounds %struct.storable_picture, ptr %238, i64 0, i32 53
  %289 = load <4 x i32>, ptr %287, align 4, !tbaa !18
  store <4 x i32> %289, ptr %288, align 8, !tbaa !18
  br label %290

290:                                              ; preds = %286, %235
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @reorder_lists(i32 noundef %0, ptr noundef %1) #0 {
  switch i32 %0, label %3 [
    i32 2, label %78
    i32 4, label %78
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 12
  %5 = load i32, ptr %4, align 8, !tbaa !468
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %19, label %7

7:                                                ; preds = %3
  %8 = load ptr, ptr @listX, align 16, !tbaa !13
  %9 = load ptr, ptr @img, align 8, !tbaa !13
  %10 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 47
  %11 = load i32, ptr %10, align 8, !tbaa !466
  %12 = add nsw i32 %11, -1
  %13 = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 13
  %14 = load ptr, ptr %13, align 8, !tbaa !469
  %15 = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 14
  %16 = load ptr, ptr %15, align 8, !tbaa !474
  %17 = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 15
  %18 = load ptr, ptr %17, align 8, !tbaa !628
  tail call void @reorder_ref_pic_list(ptr noundef %8, ptr noundef nonnull @listXsize, i32 noundef %12, ptr noundef %14, ptr noundef %16, ptr noundef %18) #46
  br label %19

19:                                               ; preds = %7, %3
  %20 = load ptr, ptr @no_reference_picture, align 8, !tbaa !13
  %21 = load ptr, ptr @listX, align 16, !tbaa !13
  %22 = load ptr, ptr @img, align 8, !tbaa !13
  %23 = getelementptr inbounds %struct.img_par, ptr %22, i64 0, i32 47
  %24 = load i32, ptr %23, align 8, !tbaa !466
  %25 = add nsw i32 %24, -1
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds ptr, ptr %21, i64 %26
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  %29 = icmp eq ptr %20, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %19
  %31 = load i32, ptr @non_conforming_stream, align 4, !tbaa !18
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.40)
  br label %36

35:                                               ; preds = %30
  tail call void @error(ptr noundef nonnull @.str.7.74, i32 noundef 500) #46
  br label %36

36:                                               ; preds = %35, %33, %19
  %37 = load ptr, ptr @img, align 8, !tbaa !13
  %38 = getelementptr inbounds %struct.img_par, ptr %37, i64 0, i32 47
  %39 = load i32, ptr %38, align 8, !tbaa !466
  store i32 %39, ptr @listXsize, align 16, !tbaa !18
  %40 = icmp eq i32 %0, 1
  br i1 %40, label %41, label %78

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 16
  %43 = load i32, ptr %42, align 8, !tbaa !471
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %57, label %45

45:                                               ; preds = %41
  %46 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %47 = getelementptr inbounds %struct.img_par, ptr %37, i64 0, i32 48
  %48 = load i32, ptr %47, align 4, !tbaa !467
  %49 = add nsw i32 %48, -1
  %50 = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 17
  %51 = load ptr, ptr %50, align 8, !tbaa !472
  %52 = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 18
  %53 = load ptr, ptr %52, align 8, !tbaa !629
  %54 = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 19
  %55 = load ptr, ptr %54, align 8, !tbaa !630
  tail call void @reorder_ref_pic_list(ptr noundef %46, ptr noundef nonnull getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), i32 noundef %49, ptr noundef %51, ptr noundef %53, ptr noundef %55) #46
  %56 = load ptr, ptr @img, align 8, !tbaa !13
  br label %57

57:                                               ; preds = %45, %41
  %58 = phi ptr [ %56, %45 ], [ %37, %41 ]
  %59 = load ptr, ptr @no_reference_picture, align 8, !tbaa !13
  %60 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %61 = getelementptr inbounds %struct.img_par, ptr %58, i64 0, i32 48
  %62 = load i32, ptr %61, align 4, !tbaa !467
  %63 = add nsw i32 %62, -1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds ptr, ptr %60, i64 %64
  %66 = load ptr, ptr %65, align 8, !tbaa !13
  %67 = icmp eq ptr %59, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %57
  %69 = load i32, ptr @non_conforming_stream, align 4, !tbaa !18
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.39)
  br label %74

73:                                               ; preds = %68
  tail call void @error(ptr noundef nonnull @.str.9.75, i32 noundef 500) #46
  br label %74

74:                                               ; preds = %73, %71, %57
  %75 = load ptr, ptr @img, align 8, !tbaa !13
  %76 = getelementptr inbounds %struct.img_par, ptr %75, i64 0, i32 48
  %77 = load i32, ptr %76, align 4, !tbaa !467
  store i32 %77, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), align 4, !tbaa !18
  br label %78

78:                                               ; preds = %74, %36, %2, %2
  tail call void @free_ref_pic_list_reordering_buffer(ptr noundef %1) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @buf2img(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = sext i32 %4 to i64
  %7 = icmp ugt i32 %4, 2
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @error(ptr noundef nonnull @.str.80, i32 noundef 500) #46
  br label %9

9:                                                ; preds = %8, %5
  %10 = tail call i32 (...) @testEndian() #46
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %96, label %12

12:                                               ; preds = %9
  switch i32 %4, label %95 [
    i32 1, label %25
    i32 2, label %19
    i32 4, label %13
  ]

13:                                               ; preds = %12
  %14 = icmp sgt i32 %3, 0
  br i1 %14, label %15, label %95

15:                                               ; preds = %13
  %16 = icmp sgt i32 %2, 0
  %17 = zext i32 %3 to i64
  %18 = zext i32 %2 to i64
  br label %72

19:                                               ; preds = %12
  %20 = icmp sgt i32 %3, 0
  br i1 %20, label %21, label %146

21:                                               ; preds = %19
  %22 = icmp sgt i32 %2, 0
  %23 = zext i32 %3 to i64
  %24 = zext i32 %2 to i64
  br label %50

25:                                               ; preds = %12
  %26 = icmp sgt i32 %3, 0
  br i1 %26, label %27, label %146

27:                                               ; preds = %25
  %28 = icmp sgt i32 %2, 0
  %29 = sext i32 %2 to i64
  %30 = zext i32 %3 to i64
  %31 = zext i32 %2 to i64
  br label %32

32:                                               ; preds = %47, %27
  %33 = phi i64 [ 0, %27 ], [ %48, %47 ]
  br i1 %28, label %34, label %47

34:                                               ; preds = %32
  %35 = mul nsw i64 %33, %29
  %36 = getelementptr inbounds ptr, ptr %0, i64 %33
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  br label %38

38:                                               ; preds = %38, %34
  %39 = phi i64 [ 0, %34 ], [ %45, %38 ]
  %40 = add nsw i64 %39, %35
  %41 = getelementptr inbounds i8, ptr %1, i64 %40
  %42 = load i8, ptr %41, align 1, !tbaa !14
  %43 = zext i8 %42 to i16
  %44 = getelementptr inbounds i16, ptr %37, i64 %39
  store i16 %43, ptr %44, align 2, !tbaa !40
  %45 = add nuw nsw i64 %39, 1
  %46 = icmp eq i64 %45, %31
  br i1 %46, label %47, label %38, !llvm.loop !631

47:                                               ; preds = %38, %32
  %48 = add nuw nsw i64 %33, 1
  %49 = icmp eq i64 %48, %30
  br i1 %49, label %146, label %32, !llvm.loop !632

50:                                               ; preds = %69, %21
  %51 = phi i64 [ 0, %21 ], [ %70, %69 ]
  br i1 %22, label %52, label %69

52:                                               ; preds = %50
  %53 = trunc i64 %51 to i32
  %54 = mul nsw i32 %53, %2
  %55 = getelementptr inbounds ptr, ptr %0, i64 %51
  %56 = load ptr, ptr %55, align 8, !tbaa !13
  br label %57

57:                                               ; preds = %57, %52
  %58 = phi i64 [ 0, %52 ], [ %67, %57 ]
  %59 = trunc i64 %58 to i32
  %60 = add nsw i32 %54, %59
  %61 = shl nsw i32 %60, 1
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, ptr %1, i64 %62
  %64 = load i16, ptr %63, align 1
  %65 = tail call i16 @llvm.bswap.i16(i16 %64)
  %66 = getelementptr inbounds i16, ptr %56, i64 %58
  store i16 %65, ptr %66, align 2, !tbaa !40
  %67 = add nuw nsw i64 %58, 1
  %68 = icmp eq i64 %67, %24
  br i1 %68, label %69, label %57, !llvm.loop !633

69:                                               ; preds = %57, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = icmp eq i64 %70, %23
  br i1 %71, label %146, label %50, !llvm.loop !634

72:                                               ; preds = %92, %15
  %73 = phi i64 [ 0, %15 ], [ %93, %92 ]
  br i1 %16, label %74, label %92

74:                                               ; preds = %72
  %75 = trunc i64 %73 to i32
  %76 = mul nsw i32 %75, %2
  %77 = getelementptr inbounds ptr, ptr %0, i64 %73
  %78 = load ptr, ptr %77, align 8, !tbaa !13
  br label %79

79:                                               ; preds = %79, %74
  %80 = phi i64 [ 0, %74 ], [ %90, %79 ]
  %81 = trunc i64 %80 to i32
  %82 = add nsw i32 %76, %81
  %83 = shl nsw i32 %82, 2
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, ptr %1, i64 %84
  %86 = load i32, ptr %85, align 1
  %87 = tail call i32 @llvm.bswap.i32(i32 %86)
  %88 = trunc i32 %87 to i16
  %89 = getelementptr inbounds i16, ptr %78, i64 %80
  store i16 %88, ptr %89, align 2, !tbaa !40
  %90 = add nuw nsw i64 %80, 1
  %91 = icmp eq i64 %90, %18
  br i1 %91, label %92, label %79, !llvm.loop !635

92:                                               ; preds = %79, %72
  %93 = add nuw nsw i64 %73, 1
  %94 = icmp eq i64 %93, %17
  br i1 %94, label %95, label %72, !llvm.loop !636

95:                                               ; preds = %92, %13, %12
  tail call void @error(ptr noundef nonnull @.str.1.81, i32 noundef 500) #46
  br label %146

96:                                               ; preds = %9
  %97 = icmp eq i32 %4, 1
  %98 = icmp sgt i32 %3, 0
  br i1 %97, label %105, label %99

99:                                               ; preds = %96
  br i1 %98, label %100, label %146

100:                                              ; preds = %99
  %101 = icmp sgt i32 %2, 0
  %102 = sext i32 %2 to i64
  %103 = zext i32 %3 to i64
  %104 = zext i32 %2 to i64
  br label %129

105:                                              ; preds = %96
  br i1 %98, label %106, label %146

106:                                              ; preds = %105
  %107 = icmp sgt i32 %2, 0
  %108 = zext i32 %3 to i64
  %109 = zext i32 %2 to i64
  br label %110

110:                                              ; preds = %125, %106
  %111 = phi i64 [ 0, %106 ], [ %127, %125 ]
  %112 = phi ptr [ %1, %106 ], [ %126, %125 ]
  br i1 %107, label %113, label %125

113:                                              ; preds = %110
  %114 = getelementptr inbounds ptr, ptr %0, i64 %111
  %115 = load ptr, ptr %114, align 8, !tbaa !13
  br label %116

116:                                              ; preds = %116, %113
  %117 = phi i64 [ 0, %113 ], [ %123, %116 ]
  %118 = phi ptr [ %112, %113 ], [ %119, %116 ]
  %119 = getelementptr inbounds i8, ptr %118, i64 1
  %120 = load i8, ptr %118, align 1, !tbaa !14
  %121 = zext i8 %120 to i16
  %122 = getelementptr inbounds i16, ptr %115, i64 %117
  store i16 %121, ptr %122, align 2, !tbaa !40
  %123 = add nuw nsw i64 %117, 1
  %124 = icmp eq i64 %123, %109
  br i1 %124, label %125, label %116, !llvm.loop !637

125:                                              ; preds = %116, %110
  %126 = phi ptr [ %112, %110 ], [ %119, %116 ]
  %127 = add nuw nsw i64 %111, 1
  %128 = icmp eq i64 %127, %108
  br i1 %128, label %146, label %110, !llvm.loop !638

129:                                              ; preds = %143, %100
  %130 = phi i64 [ 0, %100 ], [ %144, %143 ]
  %131 = mul nsw i64 %130, %102
  br i1 %101, label %132, label %143

132:                                              ; preds = %129
  %133 = getelementptr inbounds ptr, ptr %0, i64 %130
  br label %134

134:                                              ; preds = %134, %132
  %135 = phi i64 [ 0, %132 ], [ %141, %134 ]
  %136 = load ptr, ptr %133, align 8, !tbaa !13
  %137 = getelementptr inbounds i16, ptr %136, i64 %135
  store i16 0, ptr %137, align 2, !tbaa !40
  %138 = add nsw i64 %135, %131
  %139 = mul nsw i64 %138, %6
  %140 = getelementptr inbounds i8, ptr %1, i64 %139
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2 %137, ptr align 1 %140, i64 %6, i1 false)
  %141 = add nuw nsw i64 %135, 1
  %142 = icmp eq i64 %141, %104
  br i1 %142, label %143, label %134, !llvm.loop !639

143:                                              ; preds = %134, %129
  %144 = add nuw nsw i64 %130, 1
  %145 = icmp eq i64 %144, %103
  br i1 %145, label %146, label %129, !llvm.loop !640

146:                                              ; preds = %143, %125, %105, %99, %95, %69, %47, %25, %19
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.bswap.i16(i16) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.bswap.i32(i32) #12

; Function Attrs: nounwind optsize uwtable
define internal void @find_snr(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca [4 x [6 x i8]], align 16
  %5 = load ptr, ptr @img, align 8, !tbaa !13
  %6 = getelementptr inbounds %struct.img_par, ptr %5, i64 0, i32 100
  %7 = load i32, ptr %6, align 8, !tbaa !641
  %8 = sdiv i32 %7, 8
  %9 = getelementptr inbounds %struct.img_par, ptr %5, i64 0, i32 107
  %10 = load i32, ptr %9, align 4, !tbaa !77
  %11 = mul nsw i32 %10, %10
  %12 = getelementptr inbounds %struct.img_par, ptr %5, i64 0, i32 108
  %13 = load i32, ptr %12, align 8, !tbaa !103
  %14 = mul nsw i32 %13, %13
  %15 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %16 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %15, i64 0, i32 38, i32 12
  %17 = load i32, ptr %16, align 4, !tbaa !642
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #48
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(24) %4, ptr noundef nonnull align 16 dereferenceable(24) @__const.exit_picture.yuv_types, i64 24, i1 false)
  %19 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 1
  %20 = load i32, ptr %19, align 4, !tbaa !390
  %21 = load ptr, ptr @input, align 8, !tbaa !13
  %22 = getelementptr inbounds %struct.inp_par, ptr %21, i64 0, i32 5
  %23 = load i32, ptr %22, align 4, !tbaa !643
  %24 = sdiv i32 %20, %23
  %25 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 52
  %26 = load i32, ptr %25, align 4, !tbaa !627
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %3
  %29 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 19
  %30 = load i32, ptr %29, align 8, !tbaa !566
  %31 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 20
  %32 = load i32, ptr %31, align 4, !tbaa !568
  %33 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 50
  %34 = load i32, ptr %33, align 4, !tbaa !83
  br label %67

35:                                               ; preds = %3
  %36 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 50
  %37 = load i32, ptr %36, align 4, !tbaa !83
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [4 x i32], ptr @find_snr.SubWidthC, i64 0, i64 %38
  %40 = load i32, ptr %39, align 4, !tbaa !18
  %41 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 53
  %42 = load i32, ptr %41, align 8, !tbaa !644
  %43 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 54
  %44 = load i32, ptr %43, align 4, !tbaa !645
  %45 = getelementptr inbounds [4 x i32], ptr @find_snr.SubHeightC, i64 0, i64 %38
  %46 = load i32, ptr %45, align 4, !tbaa !18
  %47 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 51
  %48 = load i32, ptr %47, align 8, !tbaa !625
  %49 = add i32 %48, -2
  %50 = mul i32 %49, %46
  %51 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 55
  %52 = load i32, ptr %51, align 8, !tbaa !646
  %53 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 56
  %54 = load i32, ptr %53, align 4, !tbaa !647
  %55 = add i32 %44, %42
  %56 = mul i32 %55, %40
  %57 = add i32 %54, %52
  %58 = mul i32 %50, %57
  %59 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 19
  %60 = load i32, ptr %59, align 8, !tbaa !566
  %61 = sub i32 %60, %56
  %62 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 20
  %63 = load i32, ptr %62, align 4, !tbaa !568
  %64 = add i32 %58, %63
  %65 = mul i32 %49, %52
  %66 = mul i32 %49, %54
  br label %67

67:                                               ; preds = %35, %28
  %68 = phi i32 [ %37, %35 ], [ %34, %28 ]
  %69 = phi i32 [ %64, %35 ], [ %32, %28 ]
  %70 = phi i32 [ %63, %35 ], [ %32, %28 ]
  %71 = phi i32 [ %61, %35 ], [ %30, %28 ]
  %72 = phi i32 [ %60, %35 ], [ %30, %28 ]
  %73 = phi i32 [ %66, %35 ], [ 0, %28 ]
  %74 = phi i32 [ %65, %35 ], [ 0, %28 ]
  %75 = phi i32 [ %44, %35 ], [ 0, %28 ]
  %76 = phi i32 [ %42, %35 ], [ 0, %28 ]
  %77 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 50
  %78 = icmp eq i32 %68, 0
  br i1 %78, label %79, label %86

79:                                               ; preds = %67
  %80 = getelementptr inbounds %struct.inp_par, ptr %21, i64 0, i32 6
  %81 = load i32, ptr %80, align 4, !tbaa !648
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %79
  %84 = sdiv i32 %72, 2
  %85 = sdiv i32 %70, 2
  br label %95

86:                                               ; preds = %79, %67
  %87 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 21
  %88 = load i32, ptr %87, align 8, !tbaa !311
  %89 = add i32 %76, %75
  %90 = sub i32 %88, %89
  %91 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 22
  %92 = load i32, ptr %91, align 4, !tbaa !312
  %93 = add i32 %74, %73
  %94 = add i32 %93, %92
  br label %95

95:                                               ; preds = %86, %83
  %96 = phi i32 [ %84, %83 ], [ %90, %86 ]
  %97 = phi i32 [ %85, %83 ], [ %94, %86 ]
  %98 = sext i32 %69 to i64
  %99 = sext i32 %71 to i64
  %100 = mul nsw i64 %99, %98
  %101 = sext i32 %97 to i64
  %102 = sext i32 %96 to i64
  %103 = shl nsw i64 %102, 1
  %104 = mul i64 %103, %101
  %105 = add nsw i64 %104, %100
  %106 = sext i32 %8 to i64
  %107 = mul nsw i64 %105, %106
  %108 = icmp eq i32 %24, 0
  %109 = getelementptr inbounds %struct.img_par, ptr %5, i64 0, i32 122
  %110 = load i32, ptr %109, align 8, !tbaa !649
  br i1 %108, label %111, label %120

111:                                              ; preds = %95
  %112 = icmp eq i32 %110, 0
  br i1 %112, label %120, label %113

113:                                              ; preds = %111
  %114 = load i32, ptr %5, align 8, !tbaa !569
  %115 = getelementptr inbounds %struct.img_par, ptr %5, i64 0, i32 128
  %116 = load i32, ptr %115, align 4, !tbaa !349
  %117 = mul nsw i32 %116, %114
  %118 = sdiv i32 %117, %23
  %119 = getelementptr inbounds %struct.img_par, ptr %5, i64 0, i32 121
  store i32 %118, ptr %119, align 4, !tbaa !650
  br label %120

120:                                              ; preds = %113, %111, %95
  %121 = phi i32 [ %110, %113 ], [ 0, %111 ], [ %110, %95 ]
  %122 = getelementptr inbounds %struct.img_par, ptr %5, i64 0, i32 122
  %123 = getelementptr inbounds %struct.img_par, ptr %5, i64 0, i32 121
  %124 = load i32, ptr %123, align 4, !tbaa !650
  %125 = add nsw i32 %124, %24
  %126 = tail call i32 @llvm.smax.i32(i32 %121, i32 %125)
  store i32 %126, ptr %122, align 8, !tbaa !649
  store i32 %125, ptr @frame_no, align 4, !tbaa !18
  %127 = mul i32 %69, %8
  %128 = mul i32 %127, %71
  %129 = sext i32 %128 to i64
  %130 = tail call noalias ptr @malloc(i64 noundef %129) #49
  %131 = icmp eq ptr %130, null
  br i1 %131, label %132, label %134

132:                                              ; preds = %120
  tail call void @no_mem_exit(ptr noundef nonnull @.str.2.82) #46
  %133 = load i32, ptr @frame_no, align 4, !tbaa !18
  br label %134

134:                                              ; preds = %132, %120
  %135 = phi i32 [ %133, %132 ], [ %125, %120 ]
  %136 = sext i32 %135 to i64
  %137 = mul nsw i64 %107, %136
  %138 = tail call i64 @lseek64(i32 noundef %2, i64 noundef %137, i32 noundef 0) #46
  %139 = icmp eq i64 %138, -1
  br i1 %139, label %140, label %144

140:                                              ; preds = %134
  %141 = load ptr, ptr @stderr, align 8, !tbaa !13
  %142 = load i32, ptr @frame_no, align 4, !tbaa !18
  %143 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %141, ptr noundef nonnull @.str.3.83, i32 noundef %142) #50
  tail call void @free(ptr noundef %130) #46
  br label %381

144:                                              ; preds = %134
  br i1 %18, label %145, label %148

145:                                              ; preds = %144
  %146 = sdiv i64 %107, 3
  %147 = tail call i64 @lseek64(i32 noundef %2, i64 noundef %146, i32 noundef 1) #46
  br label %148

148:                                              ; preds = %145, %144
  %149 = tail call i64 @read(i32 noundef %2, ptr noundef %130, i64 noundef %129) #46
  %150 = load ptr, ptr @imgY_ref, align 8, !tbaa !13
  tail call void @buf2img(ptr noundef %150, ptr noundef %130, i32 noundef %71, i32 noundef %69, i32 noundef %8) #47
  %151 = load i32, ptr %77, align 4, !tbaa !83
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %170, label %153

153:                                              ; preds = %148
  %154 = sub nsw i64 0, %107
  %155 = mul i32 %96, %8
  %156 = mul i32 %155, %97
  %157 = sext i32 %156 to i64
  br label %158

158:                                              ; preds = %165, %153
  %159 = phi i1 [ false, %153 ], [ true, %165 ]
  %160 = phi i1 [ true, %153 ], [ false, %165 ]
  %161 = phi i64 [ 0, %153 ], [ 1, %165 ]
  %162 = and i1 %18, %159
  br i1 %162, label %163, label %165

163:                                              ; preds = %158
  %164 = tail call i64 @lseek64(i32 noundef %2, i64 noundef %154, i32 noundef 1) #46
  br label %165

165:                                              ; preds = %163, %158
  %166 = tail call i64 @read(i32 noundef %2, ptr noundef %130, i64 noundef %157) #46
  %167 = load ptr, ptr @imgUV_ref, align 8, !tbaa !13
  %168 = getelementptr inbounds ptr, ptr %167, i64 %161
  %169 = load ptr, ptr %168, align 8, !tbaa !13
  tail call void @buf2img(ptr noundef %169, ptr noundef %130, i32 noundef %96, i32 noundef %97, i32 noundef %8) #47
  br i1 %160, label %158, label %170, !llvm.loop !651

170:                                              ; preds = %165, %148
  br i1 %18, label %171, label %175

171:                                              ; preds = %170
  %172 = shl nsw i64 %107, 1
  %173 = sdiv i64 %172, 3
  %174 = tail call i64 @lseek64(i32 noundef %2, i64 noundef %173, i32 noundef 1) #46
  br label %175

175:                                              ; preds = %171, %170
  tail call void @free(ptr noundef %130) #46
  %176 = load ptr, ptr @img, align 8, !tbaa !13
  %177 = getelementptr inbounds %struct.img_par, ptr %176, i64 0, i32 31
  %178 = load ptr, ptr %177, align 8, !tbaa !652
  store i32 0, ptr %178, align 4, !tbaa !18
  %179 = icmp sgt i32 %69, 0
  br i1 %179, label %180, label %215

180:                                              ; preds = %175
  %181 = icmp sgt i32 %71, 0
  %182 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 32
  %183 = load ptr, ptr @imgY_ref, align 8
  %184 = zext i32 %69 to i64
  %185 = zext i32 %71 to i64
  br label %186

186:                                              ; preds = %211, %180
  %187 = phi i64 [ 0, %180 ], [ %213, %211 ]
  %188 = phi i64 [ 0, %180 ], [ %212, %211 ]
  br i1 %181, label %189, label %211

189:                                              ; preds = %186
  %190 = load ptr, ptr %182, align 8, !tbaa !47
  %191 = getelementptr inbounds ptr, ptr %190, i64 %187
  %192 = load ptr, ptr %191, align 8, !tbaa !13
  %193 = getelementptr inbounds ptr, ptr %183, i64 %187
  %194 = load ptr, ptr %193, align 8, !tbaa !13
  br label %195

195:                                              ; preds = %195, %189
  %196 = phi i64 [ 0, %189 ], [ %209, %195 ]
  %197 = phi i64 [ %188, %189 ], [ %208, %195 ]
  %198 = getelementptr inbounds i16, ptr %192, i64 %196
  %199 = load i16, ptr %198, align 2, !tbaa !40
  %200 = zext i16 %199 to i64
  %201 = getelementptr inbounds i16, ptr %194, i64 %196
  %202 = load i16, ptr %201, align 2, !tbaa !40
  %203 = zext i16 %202 to i64
  %204 = sub nsw i64 %200, %203
  %205 = getelementptr inbounds i32, ptr %178, i64 %204
  %206 = load i32, ptr %205, align 4, !tbaa !18
  %207 = sext i32 %206 to i64
  %208 = add nsw i64 %197, %207
  %209 = add nuw nsw i64 %196, 1
  %210 = icmp eq i64 %209, %185
  br i1 %210, label %211, label %195, !llvm.loop !653

211:                                              ; preds = %195, %186
  %212 = phi i64 [ %188, %186 ], [ %208, %195 ]
  %213 = add nuw nsw i64 %187, 1
  %214 = icmp eq i64 %213, %184
  br i1 %214, label %215, label %186, !llvm.loop !654

215:                                              ; preds = %211, %175
  %216 = phi i64 [ 0, %175 ], [ %212, %211 ]
  %217 = load i32, ptr %77, align 4, !tbaa !83
  %218 = icmp ne i32 %217, 0
  %219 = icmp sgt i32 %97, 0
  %220 = select i1 %218, i1 %219, i1 false
  br i1 %220, label %221, label %280

221:                                              ; preds = %215
  %222 = icmp sgt i32 %96, 0
  %223 = load ptr, ptr @imgUV_ref, align 8
  %224 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 33
  %225 = getelementptr inbounds ptr, ptr %223, i64 1
  %226 = zext i32 %97 to i64
  %227 = zext i32 %96 to i64
  br label %228

228:                                              ; preds = %275, %221
  %229 = phi i64 [ 0, %221 ], [ %278, %275 ]
  %230 = phi i64 [ 0, %221 ], [ %277, %275 ]
  %231 = phi i64 [ 0, %221 ], [ %276, %275 ]
  br i1 %222, label %232, label %275

232:                                              ; preds = %228
  %233 = load ptr, ptr %223, align 8, !tbaa !13
  %234 = getelementptr inbounds ptr, ptr %233, i64 %229
  %235 = load ptr, ptr %234, align 8, !tbaa !13
  %236 = load ptr, ptr %224, align 8, !tbaa !82
  %237 = load ptr, ptr %236, align 8, !tbaa !13
  %238 = getelementptr inbounds ptr, ptr %237, i64 %229
  %239 = load ptr, ptr %238, align 8, !tbaa !13
  %240 = load ptr, ptr %225, align 8, !tbaa !13
  %241 = getelementptr inbounds ptr, ptr %240, i64 %229
  %242 = load ptr, ptr %241, align 8, !tbaa !13
  %243 = getelementptr inbounds ptr, ptr %236, i64 1
  %244 = load ptr, ptr %243, align 8, !tbaa !13
  %245 = getelementptr inbounds ptr, ptr %244, i64 %229
  %246 = load ptr, ptr %245, align 8, !tbaa !13
  br label %247

247:                                              ; preds = %247, %232
  %248 = phi i64 [ 0, %232 ], [ %273, %247 ]
  %249 = phi i64 [ %230, %232 ], [ %261, %247 ]
  %250 = phi i64 [ %231, %232 ], [ %272, %247 ]
  %251 = getelementptr inbounds i16, ptr %235, i64 %248
  %252 = load i16, ptr %251, align 2, !tbaa !40
  %253 = zext i16 %252 to i64
  %254 = getelementptr inbounds i16, ptr %239, i64 %248
  %255 = load i16, ptr %254, align 2, !tbaa !40
  %256 = zext i16 %255 to i64
  %257 = sub nsw i64 %253, %256
  %258 = getelementptr inbounds i32, ptr %178, i64 %257
  %259 = load i32, ptr %258, align 4, !tbaa !18
  %260 = sext i32 %259 to i64
  %261 = add nsw i64 %249, %260
  %262 = getelementptr inbounds i16, ptr %242, i64 %248
  %263 = load i16, ptr %262, align 2, !tbaa !40
  %264 = zext i16 %263 to i64
  %265 = getelementptr inbounds i16, ptr %246, i64 %248
  %266 = load i16, ptr %265, align 2, !tbaa !40
  %267 = zext i16 %266 to i64
  %268 = sub nsw i64 %264, %267
  %269 = getelementptr inbounds i32, ptr %178, i64 %268
  %270 = load i32, ptr %269, align 4, !tbaa !18
  %271 = sext i32 %270 to i64
  %272 = add nsw i64 %250, %271
  %273 = add nuw nsw i64 %248, 1
  %274 = icmp eq i64 %273, %227
  br i1 %274, label %275, label %247, !llvm.loop !655

275:                                              ; preds = %247, %228
  %276 = phi i64 [ %231, %228 ], [ %272, %247 ]
  %277 = phi i64 [ %230, %228 ], [ %261, %247 ]
  %278 = add nuw nsw i64 %229, 1
  %279 = icmp eq i64 %278, %226
  br i1 %279, label %280, label %228, !llvm.loop !656

280:                                              ; preds = %275, %215
  %281 = phi i64 [ 0, %215 ], [ %276, %275 ]
  %282 = phi i64 [ 0, %215 ], [ %277, %275 ]
  %283 = icmp eq i64 %216, 0
  br i1 %283, label %295, label %284

284:                                              ; preds = %280
  %285 = uitofp i32 %11 to double
  %286 = sitofp i32 %71 to double
  %287 = sitofp i32 %69 to double
  %288 = fmul double %287, %286
  %289 = sitofp i64 %216 to double
  %290 = fdiv double %288, %289
  %291 = fmul double %290, %285
  %292 = tail call double @log10(double noundef %291) #46
  %293 = fmul double %292, 1.000000e+01
  %294 = fptrunc double %293 to float
  br label %295

295:                                              ; preds = %284, %280
  %296 = phi float [ %294, %284 ], [ 0.000000e+00, %280 ]
  %297 = getelementptr inbounds %struct.snr_par, ptr %0, i64 0, i32 1
  store float %296, ptr %297, align 4
  %298 = icmp eq i64 %282, 0
  br i1 %298, label %310, label %299

299:                                              ; preds = %295
  %300 = uitofp i32 %14 to double
  %301 = sitofp i32 %96 to double
  %302 = sitofp i32 %97 to double
  %303 = fmul double %301, %302
  %304 = sitofp i64 %282 to double
  %305 = fdiv double %303, %304
  %306 = fmul double %305, %300
  %307 = tail call double @log10(double noundef %306) #46
  %308 = fmul double %307, 1.000000e+01
  %309 = fptrunc double %308 to float
  br label %310

310:                                              ; preds = %299, %295
  %311 = phi float [ %309, %299 ], [ 0.000000e+00, %295 ]
  %312 = getelementptr inbounds %struct.snr_par, ptr %0, i64 0, i32 2
  store float %311, ptr %312, align 4
  %313 = icmp eq i64 %281, 0
  br i1 %313, label %325, label %314

314:                                              ; preds = %310
  %315 = uitofp i32 %14 to double
  %316 = sitofp i32 %96 to double
  %317 = sitofp i32 %97 to double
  %318 = fmul double %316, %317
  %319 = sitofp i64 %281 to double
  %320 = fdiv double %318, %319
  %321 = fmul double %320, %315
  %322 = tail call double @log10(double noundef %321) #46
  %323 = fmul double %322, 1.000000e+01
  %324 = fptrunc double %323 to float
  br label %325

325:                                              ; preds = %314, %310
  %326 = phi float [ %324, %314 ], [ 0.000000e+00, %310 ]
  %327 = getelementptr inbounds %struct.snr_par, ptr %0, i64 0, i32 3
  store float %326, ptr %327, align 4
  %328 = load ptr, ptr @img, align 8, !tbaa !13
  %329 = load i32, ptr %328, align 8, !tbaa !569
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %339

331:                                              ; preds = %325
  %332 = getelementptr inbounds %struct.snr_par, ptr %0, i64 0, i32 4
  %333 = getelementptr inbounds %struct.snr_par, ptr %0, i64 0, i32 7
  %334 = load <2 x float>, ptr %297, align 4, !tbaa !657
  store <2 x float> %334, ptr %332, align 4, !tbaa !657
  store <2 x float> %334, ptr %333, align 4, !tbaa !657
  %335 = getelementptr inbounds %struct.snr_par, ptr %0, i64 0, i32 6
  store float %326, ptr %335, align 4, !tbaa !658
  %336 = getelementptr inbounds %struct.snr_par, ptr %0, i64 0, i32 9
  store float %326, ptr %336, align 4, !tbaa !659
  %337 = extractelement <2 x float> %334, i64 0
  %338 = extractelement <2 x float> %334, i64 1
  br label %359

339:                                              ; preds = %325
  %340 = getelementptr inbounds %struct.snr_par, ptr %0, i64 0, i32 7
  %341 = load i32, ptr %0, align 4, !tbaa !579
  %342 = sitofp i32 %341 to float
  %343 = add nsw i32 %341, 1
  %344 = sitofp i32 %343 to float
  %345 = load <2 x float>, ptr %340, align 4, !tbaa !657
  %346 = load <2 x float>, ptr %297, align 4, !tbaa !657
  %347 = insertelement <2 x float> poison, float %342, i64 0
  %348 = shufflevector <2 x float> %347, <2 x float> poison, <2 x i32> zeroinitializer
  %349 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %345, <2 x float> %348, <2 x float> %346)
  %350 = insertelement <2 x float> poison, float %344, i64 0
  %351 = shufflevector <2 x float> %350, <2 x float> poison, <2 x i32> zeroinitializer
  %352 = fdiv <2 x float> %349, %351
  store <2 x float> %352, ptr %340, align 4, !tbaa !657
  %353 = getelementptr inbounds %struct.snr_par, ptr %0, i64 0, i32 9
  %354 = load float, ptr %353, align 4, !tbaa !659
  %355 = tail call float @llvm.fmuladd.f32(float %354, float %342, float %326)
  %356 = fdiv float %355, %344
  store float %356, ptr %353, align 4, !tbaa !659
  %357 = extractelement <2 x float> %346, i64 0
  %358 = extractelement <2 x float> %346, i64 1
  br label %359

359:                                              ; preds = %339, %331
  %360 = phi float [ %358, %339 ], [ %338, %331 ]
  %361 = phi float [ %357, %339 ], [ %337, %331 ]
  %362 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 61
  %363 = load i32, ptr %362, align 8, !tbaa !347
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %381, label %365

365:                                              ; preds = %359
  %366 = load ptr, ptr @stdout, align 8, !tbaa !13
  %367 = load i32, ptr @frame_no, align 4, !tbaa !18
  %368 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 4
  %369 = load i32, ptr %368, align 8, !tbaa !571
  %370 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 11
  %371 = load i32, ptr %370, align 8, !tbaa !342
  %372 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 57
  %373 = load i32, ptr %372, align 8, !tbaa !572
  %374 = fpext float %361 to double
  %375 = fpext float %360 to double
  %376 = fpext float %326 to double
  %377 = load i32, ptr %77, align 4, !tbaa !83
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds [4 x [6 x i8]], ptr %4, i64 0, i64 %378
  %380 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %366, ptr noundef nonnull @.str.4.60, i32 noundef %367, i32 noundef %369, i32 noundef %371, i32 noundef %373, double noundef %374, double noundef %375, double noundef %376, ptr noundef nonnull %379, i32 noundef 0) #47
  br label %381

381:                                              ; preds = %365, %359, %140
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #48
  ret void
}

; Function Attrs: nounwind optsize
declare i64 @lseek64(i32 noundef, i64 noundef, i32 noundef) local_unnamed_addr #35

; Function Attrs: nofree optsize
declare noundef i64 @read(i32 noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #27

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(write)
declare double @log10(double noundef) local_unnamed_addr #37

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.fmuladd.v2f32(<2 x float>, <2 x float>, <2 x float>) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fmuladd.f32(float, float, float) #12

; Function Attrs: nofree nounwind optsize uwtable
define internal void @get_block(i32 noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, ptr nocapture noundef readonly %4, ptr nocapture noundef %5) #6 {
  %7 = alloca [9 x [9 x i32]], align 16
  call void @llvm.lifetime.start.p0(i64 324, ptr nonnull %7) #48
  %8 = sext i32 %0 to i64
  %9 = getelementptr inbounds ptr, ptr %1, i64 %8
  %10 = load ptr, ptr %9, align 8, !tbaa !13
  %11 = load ptr, ptr @no_reference_picture, align 8, !tbaa !13
  %12 = icmp eq ptr %10, %11
  br i1 %12, label %13, label %26

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 55
  %15 = load i32, ptr %14, align 8, !tbaa !524
  %16 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 139
  %17 = load i32, ptr %16, align 8, !tbaa !614
  %18 = icmp slt i32 %15, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.86)
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i64 [ 0, %19 ], [ %24, %21 ]
  %23 = getelementptr inbounds [4 x i32], ptr %5, i64 %22, i64 0
  store <4 x i32> <i32 128, i32 128, i32 128, i32 128>, ptr %23, align 4, !tbaa !18
  %24 = add nuw nsw i64 %22, 1
  %25 = icmp eq i64 %24, 4
  br i1 %25, label %887, label %21, !llvm.loop !660

26:                                               ; preds = %13, %6
  %27 = getelementptr inbounds %struct.storable_picture, ptr %10, i64 0, i32 32
  %28 = load ptr, ptr %27, align 8, !tbaa !47
  store ptr %28, ptr @get_block.cur_imgY, align 8, !tbaa !13
  %29 = and i32 %2, 3
  %30 = and i32 %3, 3
  %31 = ashr i32 %2, 2
  %32 = ashr i32 %3, 2
  %33 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %34 = getelementptr inbounds %struct.storable_picture, ptr %33, i64 0, i32 23
  %35 = load i32, ptr %34, align 8, !tbaa !661
  %36 = getelementptr inbounds %struct.storable_picture, ptr %33, i64 0, i32 24
  %37 = load i32, ptr %36, align 4, !tbaa !662
  %38 = getelementptr inbounds %struct.storable_picture, ptr %33, i64 0, i32 34
  %39 = load ptr, ptr %38, align 8, !tbaa !538
  %40 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 1
  %41 = load i32, ptr %40, align 4, !tbaa !49
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, ptr %39, i64 %42
  %44 = load i8, ptr %43, align 1, !tbaa !14
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %26
  %47 = getelementptr inbounds %struct.storable_picture, ptr %33, i64 0, i32 20
  %48 = load i32, ptr %47, align 4, !tbaa !568
  %49 = ashr i32 %48, 1
  %50 = add nsw i32 %49, -1
  br label %51

51:                                               ; preds = %46, %26
  %52 = phi i32 [ %50, %46 ], [ %37, %26 ]
  %53 = or i32 %3, %2
  %54 = and i32 %53, 3
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %99

56:                                               ; preds = %51
  %57 = tail call i32 @llvm.smax.i32(i32 %31, i32 0)
  %58 = tail call i32 @llvm.smin.i32(i32 %57, i32 %35)
  %59 = sext i32 %58 to i64
  %60 = tail call i32 @llvm.smax.i32(i32 %31, i32 -1)
  %61 = add nsw i32 %60, 1
  %62 = tail call i32 @llvm.smin.i32(i32 %61, i32 %35)
  %63 = sext i32 %62 to i64
  %64 = tail call i32 @llvm.smax.i32(i32 %31, i32 -2)
  %65 = add nsw i32 %64, 2
  %66 = tail call i32 @llvm.smin.i32(i32 %65, i32 %35)
  %67 = sext i32 %66 to i64
  %68 = tail call i32 @llvm.smax.i32(i32 %31, i32 -3)
  %69 = add nsw i32 %68, 3
  %70 = tail call i32 @llvm.smin.i32(i32 %69, i32 %35)
  %71 = sext i32 %70 to i64
  br label %72

72:                                               ; preds = %72, %56
  %73 = phi i64 [ 0, %56 ], [ %97, %72 ]
  %74 = trunc i64 %73 to i32
  %75 = add i32 %32, %74
  %76 = tail call i32 @llvm.smax.i32(i32 %75, i32 0)
  %77 = tail call i32 @llvm.smin.i32(i32 %76, i32 %52)
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds ptr, ptr %28, i64 %78
  %80 = load ptr, ptr %79, align 8, !tbaa !13
  %81 = getelementptr inbounds i16, ptr %80, i64 %59
  %82 = load i16, ptr %81, align 2, !tbaa !40
  %83 = zext i16 %82 to i32
  %84 = getelementptr inbounds [4 x i32], ptr %5, i64 %73
  store i32 %83, ptr %84, align 4, !tbaa !18
  %85 = getelementptr inbounds i16, ptr %80, i64 %63
  %86 = load i16, ptr %85, align 2, !tbaa !40
  %87 = zext i16 %86 to i32
  %88 = getelementptr inbounds [4 x i32], ptr %5, i64 %73, i64 1
  store i32 %87, ptr %88, align 4, !tbaa !18
  %89 = getelementptr inbounds i16, ptr %80, i64 %67
  %90 = load i16, ptr %89, align 2, !tbaa !40
  %91 = zext i16 %90 to i32
  %92 = getelementptr inbounds [4 x i32], ptr %5, i64 %73, i64 2
  store i32 %91, ptr %92, align 4, !tbaa !18
  %93 = getelementptr inbounds i16, ptr %80, i64 %71
  %94 = load i16, ptr %93, align 2, !tbaa !40
  %95 = zext i16 %94 to i32
  %96 = getelementptr inbounds [4 x i32], ptr %5, i64 %73, i64 3
  store i32 %95, ptr %96, align 4, !tbaa !18
  %97 = add nuw nsw i64 %73, 1
  %98 = icmp eq i64 %97, 4
  br i1 %98, label %885, label %72, !llvm.loop !663

99:                                               ; preds = %51
  %100 = icmp eq i32 %30, 0
  br i1 %100, label %101, label %228

101:                                              ; preds = %99
  %102 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 107
  br label %103

103:                                              ; preds = %172, %101
  %104 = phi i64 [ 0, %101 ], [ %173, %172 ]
  %105 = trunc i64 %104 to i32
  %106 = add i32 %31, %105
  %107 = tail call i32 @llvm.smax.i32(i32 %106, i32 2)
  %108 = add nsw i32 %107, -2
  %109 = tail call i32 @llvm.smin.i32(i32 %108, i32 %35)
  %110 = tail call i32 @llvm.smax.i32(i32 %106, i32 1)
  %111 = add nsw i32 %110, -1
  %112 = tail call i32 @llvm.smin.i32(i32 %111, i32 %35)
  %113 = tail call i32 @llvm.smax.i32(i32 %106, i32 0)
  %114 = tail call i32 @llvm.smin.i32(i32 %113, i32 %35)
  %115 = tail call i32 @llvm.smax.i32(i32 %106, i32 -1)
  %116 = add nsw i32 %115, 1
  %117 = tail call i32 @llvm.smin.i32(i32 %116, i32 %35)
  %118 = tail call i32 @llvm.smax.i32(i32 %106, i32 -2)
  %119 = add nsw i32 %118, 2
  %120 = tail call i32 @llvm.smin.i32(i32 %119, i32 %35)
  %121 = tail call i32 @llvm.smax.i32(i32 %106, i32 -3)
  %122 = add nsw i32 %121, 3
  %123 = tail call i32 @llvm.smin.i32(i32 %122, i32 %35)
  %124 = sext i32 %109 to i64
  %125 = sext i32 %123 to i64
  %126 = sext i32 %112 to i64
  %127 = sext i32 %120 to i64
  %128 = sext i32 %114 to i64
  %129 = sext i32 %117 to i64
  br label %130

130:                                              ; preds = %130, %103
  %131 = phi i64 [ 0, %103 ], [ %170, %130 ]
  %132 = trunc i64 %131 to i32
  %133 = add i32 %32, %132
  %134 = tail call i32 @llvm.smax.i32(i32 %133, i32 0)
  %135 = tail call i32 @llvm.smin.i32(i32 %134, i32 %52)
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds ptr, ptr %28, i64 %136
  %138 = load ptr, ptr %137, align 8, !tbaa !13
  %139 = getelementptr inbounds i16, ptr %138, i64 %124
  %140 = load i16, ptr %139, align 2, !tbaa !40
  %141 = zext i16 %140 to i32
  %142 = getelementptr inbounds i16, ptr %138, i64 %125
  %143 = load i16, ptr %142, align 2, !tbaa !40
  %144 = zext i16 %143 to i32
  %145 = getelementptr inbounds i16, ptr %138, i64 %126
  %146 = load i16, ptr %145, align 2, !tbaa !40
  %147 = zext i16 %146 to i32
  %148 = getelementptr inbounds i16, ptr %138, i64 %127
  %149 = load i16, ptr %148, align 2, !tbaa !40
  %150 = zext i16 %149 to i32
  %151 = add nuw nsw i32 %150, %147
  %152 = mul nsw i32 %151, -5
  %153 = getelementptr inbounds i16, ptr %138, i64 %128
  %154 = load i16, ptr %153, align 2, !tbaa !40
  %155 = zext i16 %154 to i32
  %156 = getelementptr inbounds i16, ptr %138, i64 %129
  %157 = load i16, ptr %156, align 2, !tbaa !40
  %158 = zext i16 %157 to i32
  %159 = add nuw nsw i32 %158, %155
  %160 = mul nuw nsw i32 %159, 20
  %161 = load i32, ptr %102, align 4, !tbaa !77
  %162 = add nuw nsw i32 %141, 16
  %163 = add nuw nsw i32 %162, %144
  %164 = add nsw i32 %163, %152
  %165 = add nsw i32 %164, %160
  %166 = ashr i32 %165, 5
  %167 = tail call i32 @llvm.smax.i32(i32 %166, i32 0)
  %168 = tail call i32 @llvm.smin.i32(i32 %167, i32 %161)
  %169 = getelementptr inbounds [4 x i32], ptr %5, i64 %131, i64 %104
  store i32 %168, ptr %169, align 4, !tbaa !18
  %170 = add nuw nsw i64 %131, 1
  %171 = icmp eq i64 %170, 4
  br i1 %171, label %172, label %130, !llvm.loop !664

172:                                              ; preds = %130
  %.lcssa = phi ptr [ %138, %130 ]
  %173 = add nuw nsw i64 %104, 1
  %174 = icmp eq i64 %173, 4
  br i1 %174, label %175, label %103, !llvm.loop !665

175:                                              ; preds = %172
  %.lcssa.lcssa = phi ptr [ %.lcssa, %172 ]
  store ptr %.lcssa.lcssa, ptr @get_block.cur_lineY, align 8, !tbaa !13
  %176 = and i32 %2, 1
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %887, label %178

178:                                              ; preds = %175
  %179 = lshr i32 %29, 1
  %180 = add nsw i32 %179, %31
  %181 = tail call i32 @llvm.smax.i32(i32 %180, i32 0)
  %182 = tail call i32 @llvm.smin.i32(i32 %181, i32 %35)
  %183 = sext i32 %182 to i64
  %184 = add nsw i32 %31, 1
  %185 = add nsw i32 %184, %179
  %186 = tail call i32 @llvm.smax.i32(i32 %185, i32 0)
  %187 = tail call i32 @llvm.smin.i32(i32 %186, i32 %35)
  %188 = sext i32 %187 to i64
  %189 = add nsw i32 %31, 2
  %190 = add nsw i32 %189, %179
  %191 = tail call i32 @llvm.smax.i32(i32 %190, i32 0)
  %192 = tail call i32 @llvm.smin.i32(i32 %191, i32 %35)
  %193 = sext i32 %192 to i64
  %194 = add nsw i32 %31, 3
  %195 = add nsw i32 %194, %179
  %196 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %197 = tail call i32 @llvm.smin.i32(i32 %196, i32 %35)
  %198 = sext i32 %197 to i64
  br label %199

199:                                              ; preds = %199, %178
  %200 = phi i64 [ 0, %178 ], [ %226, %199 ]
  %201 = trunc i64 %200 to i32
  %202 = add i32 %32, %201
  %203 = tail call i32 @llvm.smax.i32(i32 %202, i32 0)
  %204 = tail call i32 @llvm.smin.i32(i32 %203, i32 %52)
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds ptr, ptr %28, i64 %205
  %207 = load ptr, ptr %206, align 8, !tbaa !13
  %208 = getelementptr inbounds [4 x i32], ptr %5, i64 %200
  %209 = getelementptr inbounds i16, ptr %207, i64 %183
  %210 = load i16, ptr %209, align 2, !tbaa !40
  %211 = getelementptr inbounds i16, ptr %207, i64 %188
  %212 = load i16, ptr %211, align 2, !tbaa !40
  %213 = getelementptr inbounds i16, ptr %207, i64 %193
  %214 = load i16, ptr %213, align 2, !tbaa !40
  %215 = getelementptr inbounds i16, ptr %207, i64 %198
  %216 = load i16, ptr %215, align 2, !tbaa !40
  %217 = load <4 x i32>, ptr %208, align 4, !tbaa !18
  %218 = insertelement <4 x i16> poison, i16 %210, i64 0
  %219 = insertelement <4 x i16> %218, i16 %212, i64 1
  %220 = insertelement <4 x i16> %219, i16 %214, i64 2
  %221 = insertelement <4 x i16> %220, i16 %216, i64 3
  %222 = zext <4 x i16> %221 to <4 x i32>
  %223 = add <4 x i32> %217, <i32 1, i32 1, i32 1, i32 1>
  %224 = add <4 x i32> %223, %222
  %225 = ashr <4 x i32> %224, <i32 1, i32 1, i32 1, i32 1>
  store <4 x i32> %225, ptr %208, align 4, !tbaa !18
  %226 = add nuw nsw i64 %200, 1
  %227 = icmp eq i64 %226, 4
  br i1 %227, label %885, label %199, !llvm.loop !666

228:                                              ; preds = %99
  switch i32 %29, label %531 [
    i32 0, label %229
    i32 2, label %365
  ]

229:                                              ; preds = %228
  %230 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 107
  br label %231

231:                                              ; preds = %310, %229
  %232 = phi i64 [ 0, %229 ], [ %311, %310 ]
  %233 = trunc i64 %232 to i32
  %234 = add i32 %32, %233
  %235 = tail call i32 @llvm.smax.i32(i32 %234, i32 2)
  %236 = add nsw i32 %235, -2
  %237 = tail call i32 @llvm.smin.i32(i32 %236, i32 %52)
  %238 = tail call i32 @llvm.smax.i32(i32 %234, i32 1)
  %239 = add nsw i32 %238, -1
  %240 = tail call i32 @llvm.smin.i32(i32 %239, i32 %52)
  %241 = tail call i32 @llvm.smax.i32(i32 %234, i32 0)
  %242 = tail call i32 @llvm.smin.i32(i32 %241, i32 %52)
  %243 = tail call i32 @llvm.smax.i32(i32 %234, i32 -1)
  %244 = add nsw i32 %243, 1
  %245 = tail call i32 @llvm.smin.i32(i32 %244, i32 %52)
  %246 = tail call i32 @llvm.smax.i32(i32 %234, i32 -2)
  %247 = add nsw i32 %246, 2
  %248 = tail call i32 @llvm.smin.i32(i32 %247, i32 %52)
  %249 = tail call i32 @llvm.smax.i32(i32 %234, i32 -3)
  %250 = add nsw i32 %249, 3
  %251 = tail call i32 @llvm.smin.i32(i32 %250, i32 %52)
  %252 = sext i32 %237 to i64
  %253 = getelementptr inbounds ptr, ptr %28, i64 %252
  %254 = load ptr, ptr %253, align 8, !tbaa !13
  %255 = sext i32 %251 to i64
  %256 = getelementptr inbounds ptr, ptr %28, i64 %255
  %257 = load ptr, ptr %256, align 8, !tbaa !13
  %258 = sext i32 %240 to i64
  %259 = getelementptr inbounds ptr, ptr %28, i64 %258
  %260 = load ptr, ptr %259, align 8, !tbaa !13
  %261 = sext i32 %248 to i64
  %262 = getelementptr inbounds ptr, ptr %28, i64 %261
  %263 = load ptr, ptr %262, align 8, !tbaa !13
  %264 = sext i32 %242 to i64
  %265 = getelementptr inbounds ptr, ptr %28, i64 %264
  %266 = load ptr, ptr %265, align 8, !tbaa !13
  %267 = sext i32 %245 to i64
  %268 = getelementptr inbounds ptr, ptr %28, i64 %267
  %269 = load ptr, ptr %268, align 8, !tbaa !13
  br label %270

270:                                              ; preds = %270, %231
  %271 = phi i64 [ 0, %231 ], [ %308, %270 ]
  %272 = trunc i64 %271 to i32
  %273 = add i32 %31, %272
  %274 = tail call i32 @llvm.smax.i32(i32 %273, i32 0)
  %275 = tail call i32 @llvm.smin.i32(i32 %274, i32 %35)
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds i16, ptr %254, i64 %276
  %278 = load i16, ptr %277, align 2, !tbaa !40
  %279 = zext i16 %278 to i32
  %280 = getelementptr inbounds i16, ptr %257, i64 %276
  %281 = load i16, ptr %280, align 2, !tbaa !40
  %282 = zext i16 %281 to i32
  %283 = getelementptr inbounds i16, ptr %260, i64 %276
  %284 = load i16, ptr %283, align 2, !tbaa !40
  %285 = zext i16 %284 to i32
  %286 = getelementptr inbounds i16, ptr %263, i64 %276
  %287 = load i16, ptr %286, align 2, !tbaa !40
  %288 = zext i16 %287 to i32
  %289 = add nuw nsw i32 %288, %285
  %290 = mul nsw i32 %289, -5
  %291 = getelementptr inbounds i16, ptr %266, i64 %276
  %292 = load i16, ptr %291, align 2, !tbaa !40
  %293 = zext i16 %292 to i32
  %294 = getelementptr inbounds i16, ptr %269, i64 %276
  %295 = load i16, ptr %294, align 2, !tbaa !40
  %296 = zext i16 %295 to i32
  %297 = add nuw nsw i32 %296, %293
  %298 = mul nuw nsw i32 %297, 20
  %299 = load i32, ptr %230, align 4, !tbaa !77
  %300 = add nuw nsw i32 %279, 16
  %301 = add nuw nsw i32 %300, %282
  %302 = add nsw i32 %301, %290
  %303 = add nsw i32 %302, %298
  %304 = ashr i32 %303, 5
  %305 = tail call i32 @llvm.smax.i32(i32 %304, i32 0)
  %306 = tail call i32 @llvm.smin.i32(i32 %305, i32 %299)
  %307 = getelementptr inbounds [4 x i32], ptr %5, i64 %232, i64 %271
  store i32 %306, ptr %307, align 4, !tbaa !18
  %308 = add nuw nsw i64 %271, 1
  %309 = icmp eq i64 %308, 4
  br i1 %309, label %310, label %270, !llvm.loop !667

310:                                              ; preds = %270
  %311 = add nuw nsw i64 %232, 1
  %312 = icmp eq i64 %311, 4
  br i1 %312, label %313, label %231, !llvm.loop !668

313:                                              ; preds = %310
  %314 = and i32 %3, 1
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %887, label %316

316:                                              ; preds = %313
  %317 = lshr i32 %30, 1
  %318 = add nsw i32 %317, %32
  %319 = tail call i32 @llvm.smax.i32(i32 %31, i32 0)
  %320 = tail call i32 @llvm.smin.i32(i32 %319, i32 %35)
  %321 = sext i32 %320 to i64
  %322 = tail call i32 @llvm.smax.i32(i32 %31, i32 -1)
  %323 = add nsw i32 %322, 1
  %324 = tail call i32 @llvm.smin.i32(i32 %323, i32 %35)
  %325 = sext i32 %324 to i64
  %326 = tail call i32 @llvm.smax.i32(i32 %31, i32 -2)
  %327 = add nsw i32 %326, 2
  %328 = tail call i32 @llvm.smin.i32(i32 %327, i32 %35)
  %329 = sext i32 %328 to i64
  %330 = tail call i32 @llvm.smax.i32(i32 %31, i32 -3)
  %331 = add nsw i32 %330, 3
  %332 = tail call i32 @llvm.smin.i32(i32 %331, i32 %35)
  %333 = sext i32 %332 to i64
  br label %334

334:                                              ; preds = %334, %316
  %335 = phi i64 [ 0, %316 ], [ %361, %334 ]
  %336 = trunc i64 %335 to i32
  %337 = add i32 %318, %336
  %338 = tail call i32 @llvm.smax.i32(i32 %337, i32 0)
  %339 = tail call i32 @llvm.smin.i32(i32 %338, i32 %52)
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds ptr, ptr %28, i64 %340
  %342 = load ptr, ptr %341, align 8, !tbaa !13
  %343 = getelementptr inbounds [4 x i32], ptr %5, i64 %335
  %344 = getelementptr inbounds i16, ptr %342, i64 %321
  %345 = load i16, ptr %344, align 2, !tbaa !40
  %346 = getelementptr inbounds i16, ptr %342, i64 %325
  %347 = load i16, ptr %346, align 2, !tbaa !40
  %348 = getelementptr inbounds i16, ptr %342, i64 %329
  %349 = load i16, ptr %348, align 2, !tbaa !40
  %350 = getelementptr inbounds i16, ptr %342, i64 %333
  %351 = load i16, ptr %350, align 2, !tbaa !40
  %352 = load <4 x i32>, ptr %343, align 4, !tbaa !18
  %353 = insertelement <4 x i16> poison, i16 %345, i64 0
  %354 = insertelement <4 x i16> %353, i16 %347, i64 1
  %355 = insertelement <4 x i16> %354, i16 %349, i64 2
  %356 = insertelement <4 x i16> %355, i16 %351, i64 3
  %357 = zext <4 x i16> %356 to <4 x i32>
  %358 = add <4 x i32> %352, <i32 1, i32 1, i32 1, i32 1>
  %359 = add <4 x i32> %358, %357
  %360 = ashr <4 x i32> %359, <i32 1, i32 1, i32 1, i32 1>
  store <4 x i32> %360, ptr %343, align 4, !tbaa !18
  %361 = add nuw nsw i64 %335, 1
  %362 = icmp eq i64 %361, 4
  br i1 %362, label %885, label %334, !llvm.loop !669

363:                                              ; preds = %430
  %.lcssa2.lcssa = phi ptr [ %.lcssa2, %430 ]
  store ptr %.lcssa2.lcssa, ptr @get_block.cur_lineY, align 8, !tbaa !13
  %364 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 107
  br label %435

365:                                              ; preds = %430, %228
  %366 = phi i64 [ %431, %430 ], [ 0, %228 ]
  %367 = trunc i64 %366 to i32
  %368 = add i32 %31, %367
  %369 = tail call i32 @llvm.smax.i32(i32 %368, i32 2)
  %370 = add nsw i32 %369, -2
  %371 = tail call i32 @llvm.smin.i32(i32 %370, i32 %35)
  %372 = tail call i32 @llvm.smax.i32(i32 %368, i32 1)
  %373 = add nsw i32 %372, -1
  %374 = tail call i32 @llvm.smin.i32(i32 %373, i32 %35)
  %375 = tail call i32 @llvm.smax.i32(i32 %368, i32 0)
  %376 = tail call i32 @llvm.smin.i32(i32 %375, i32 %35)
  %377 = tail call i32 @llvm.smax.i32(i32 %368, i32 -1)
  %378 = add nsw i32 %377, 1
  %379 = tail call i32 @llvm.smin.i32(i32 %378, i32 %35)
  %380 = tail call i32 @llvm.smax.i32(i32 %368, i32 -2)
  %381 = add nsw i32 %380, 2
  %382 = tail call i32 @llvm.smin.i32(i32 %381, i32 %35)
  %383 = tail call i32 @llvm.smax.i32(i32 %368, i32 -3)
  %384 = add nsw i32 %383, 3
  %385 = tail call i32 @llvm.smin.i32(i32 %384, i32 %35)
  %386 = sext i32 %371 to i64
  %387 = sext i32 %385 to i64
  %388 = sext i32 %374 to i64
  %389 = sext i32 %382 to i64
  %390 = sext i32 %376 to i64
  %391 = sext i32 %379 to i64
  br label %392

392:                                              ; preds = %392, %365
  %393 = phi i64 [ 0, %365 ], [ %428, %392 ]
  %394 = trunc i64 %393 to i32
  %395 = add i32 %32, %394
  %396 = tail call i32 @llvm.smax.i32(i32 %395, i32 2)
  %397 = add nsw i32 %396, -2
  %398 = tail call i32 @llvm.smin.i32(i32 %397, i32 %52)
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds ptr, ptr %28, i64 %399
  %401 = load ptr, ptr %400, align 8, !tbaa !13
  %402 = getelementptr inbounds i16, ptr %401, i64 %386
  %403 = load i16, ptr %402, align 2, !tbaa !40
  %404 = zext i16 %403 to i32
  %405 = getelementptr inbounds i16, ptr %401, i64 %387
  %406 = load i16, ptr %405, align 2, !tbaa !40
  %407 = zext i16 %406 to i32
  %408 = add nuw nsw i32 %407, %404
  %409 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %393, i64 %366
  %410 = getelementptr inbounds i16, ptr %401, i64 %388
  %411 = load i16, ptr %410, align 2, !tbaa !40
  %412 = zext i16 %411 to i32
  %413 = getelementptr inbounds i16, ptr %401, i64 %389
  %414 = load i16, ptr %413, align 2, !tbaa !40
  %415 = zext i16 %414 to i32
  %416 = add nuw nsw i32 %415, %412
  %417 = mul nsw i32 %416, -5
  %418 = add nsw i32 %417, %408
  %419 = getelementptr inbounds i16, ptr %401, i64 %390
  %420 = load i16, ptr %419, align 2, !tbaa !40
  %421 = zext i16 %420 to i32
  %422 = getelementptr inbounds i16, ptr %401, i64 %391
  %423 = load i16, ptr %422, align 2, !tbaa !40
  %424 = zext i16 %423 to i32
  %425 = add nuw nsw i32 %424, %421
  %426 = mul nuw nsw i32 %425, 20
  %427 = add nsw i32 %426, %418
  store i32 %427, ptr %409, align 4, !tbaa !18
  %428 = add nuw nsw i64 %393, 1
  %429 = icmp eq i64 %428, 9
  br i1 %429, label %430, label %392, !llvm.loop !670

430:                                              ; preds = %392
  %.lcssa2 = phi ptr [ %401, %392 ]
  %431 = add nuw nsw i64 %366, 1
  %432 = icmp eq i64 %431, 4
  br i1 %432, label %363, label %365, !llvm.loop !671

433:                                              ; preds = %442
  %434 = icmp eq i64 %437, 4
  br i1 %434, label %471, label %435, !llvm.loop !672

435:                                              ; preds = %433, %363
  %436 = phi i64 [ 0, %363 ], [ %437, %433 ]
  %437 = add nuw nsw i64 %436, 1
  %438 = add nuw nsw i64 %436, 2
  %439 = add nuw nsw i64 %436, 3
  %440 = add nuw nsw i64 %436, 4
  %441 = add nuw nsw i64 %436, 5
  br label %442

442:                                              ; preds = %442, %435
  %443 = phi i64 [ 0, %435 ], [ %469, %442 ]
  %444 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %436, i64 %443
  %445 = load i32, ptr %444, align 4, !tbaa !18
  %446 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %441, i64 %443
  %447 = load i32, ptr %446, align 4, !tbaa !18
  %448 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %437, i64 %443
  %449 = load i32, ptr %448, align 4, !tbaa !18
  %450 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %440, i64 %443
  %451 = load i32, ptr %450, align 4, !tbaa !18
  %452 = add nsw i32 %451, %449
  %453 = mul nsw i32 %452, -5
  %454 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %438, i64 %443
  %455 = load i32, ptr %454, align 4, !tbaa !18
  %456 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %439, i64 %443
  %457 = load i32, ptr %456, align 4, !tbaa !18
  %458 = add nsw i32 %457, %455
  %459 = mul nsw i32 %458, 20
  %460 = load i32, ptr %364, align 4, !tbaa !77
  %461 = add i32 %445, 512
  %462 = add i32 %461, %447
  %463 = add i32 %462, %453
  %464 = add i32 %463, %459
  %465 = ashr i32 %464, 10
  %466 = tail call i32 @llvm.smax.i32(i32 %465, i32 0)
  %467 = tail call i32 @llvm.smin.i32(i32 %466, i32 %460)
  %468 = getelementptr inbounds [4 x i32], ptr %5, i64 %436, i64 %443
  store i32 %467, ptr %468, align 4, !tbaa !18
  %469 = add nuw nsw i64 %443, 1
  %470 = icmp eq i64 %469, 4
  br i1 %470, label %433, label %442, !llvm.loop !673

471:                                              ; preds = %433
  %472 = and i32 %3, 1
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %887, label %474

474:                                              ; preds = %471
  %475 = lshr i32 %30, 1
  %476 = or i32 %475, 2
  %477 = zext i32 %476 to i64
  br label %478

478:                                              ; preds = %478, %474
  %479 = phi i64 [ 0, %474 ], [ %529, %478 ]
  %480 = add nuw nsw i64 %479, %477
  %481 = getelementptr inbounds [4 x i32], ptr %5, i64 %479
  %482 = load i32, ptr %481, align 4, !tbaa !18
  %483 = load i32, ptr %364, align 4, !tbaa !77
  %484 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %480
  %485 = load i32, ptr %484, align 4, !tbaa !18
  %486 = add nsw i32 %485, 16
  %487 = ashr i32 %486, 5
  %488 = tail call i32 @llvm.smax.i32(i32 %487, i32 0)
  %489 = tail call i32 @llvm.smin.i32(i32 %488, i32 %483)
  %490 = add i32 %482, 1
  %491 = add i32 %490, %489
  %492 = ashr i32 %491, 1
  store i32 %492, ptr %481, align 4, !tbaa !18
  %493 = getelementptr inbounds [4 x i32], ptr %5, i64 %479, i64 1
  %494 = load i32, ptr %493, align 4, !tbaa !18
  %495 = load i32, ptr %364, align 4, !tbaa !77
  %496 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %480, i64 1
  %497 = load i32, ptr %496, align 4, !tbaa !18
  %498 = add nsw i32 %497, 16
  %499 = ashr i32 %498, 5
  %500 = tail call i32 @llvm.smax.i32(i32 %499, i32 0)
  %501 = tail call i32 @llvm.smin.i32(i32 %500, i32 %495)
  %502 = add i32 %494, 1
  %503 = add i32 %502, %501
  %504 = ashr i32 %503, 1
  store i32 %504, ptr %493, align 4, !tbaa !18
  %505 = getelementptr inbounds [4 x i32], ptr %5, i64 %479, i64 2
  %506 = load i32, ptr %505, align 4, !tbaa !18
  %507 = load i32, ptr %364, align 4, !tbaa !77
  %508 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %480, i64 2
  %509 = load i32, ptr %508, align 4, !tbaa !18
  %510 = add nsw i32 %509, 16
  %511 = ashr i32 %510, 5
  %512 = tail call i32 @llvm.smax.i32(i32 %511, i32 0)
  %513 = tail call i32 @llvm.smin.i32(i32 %512, i32 %507)
  %514 = add i32 %506, 1
  %515 = add i32 %514, %513
  %516 = ashr i32 %515, 1
  store i32 %516, ptr %505, align 4, !tbaa !18
  %517 = getelementptr inbounds [4 x i32], ptr %5, i64 %479, i64 3
  %518 = load i32, ptr %517, align 4, !tbaa !18
  %519 = load i32, ptr %364, align 4, !tbaa !77
  %520 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %480, i64 3
  %521 = load i32, ptr %520, align 4, !tbaa !18
  %522 = add nsw i32 %521, 16
  %523 = ashr i32 %522, 5
  %524 = tail call i32 @llvm.smax.i32(i32 %523, i32 0)
  %525 = tail call i32 @llvm.smin.i32(i32 %524, i32 %519)
  %526 = add i32 %518, 1
  %527 = add i32 %526, %525
  %528 = ashr i32 %527, 1
  store i32 %528, ptr %517, align 4, !tbaa !18
  %529 = add nuw nsw i64 %479, 1
  %530 = icmp eq i64 %529, 4
  br i1 %530, label %887, label %478, !llvm.loop !674

531:                                              ; preds = %228
  %532 = icmp eq i32 %30, 2
  br i1 %532, label %540, label %533

533:                                              ; preds = %531
  %534 = icmp ne i32 %30, 1
  %535 = zext i1 %534 to i32
  %536 = add nsw i32 %32, %535
  %537 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 107
  br label %727

538:                                              ; preds = %615
  %539 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 107
  br label %618

540:                                              ; preds = %615, %531
  %541 = phi i64 [ %616, %615 ], [ 0, %531 ]
  %542 = trunc i64 %541 to i32
  %543 = add i32 %32, %542
  %544 = tail call i32 @llvm.smax.i32(i32 %543, i32 2)
  %545 = add nsw i32 %544, -2
  %546 = tail call i32 @llvm.smin.i32(i32 %545, i32 %52)
  %547 = tail call i32 @llvm.smax.i32(i32 %543, i32 1)
  %548 = add nsw i32 %547, -1
  %549 = tail call i32 @llvm.smin.i32(i32 %548, i32 %52)
  %550 = tail call i32 @llvm.smax.i32(i32 %543, i32 0)
  %551 = tail call i32 @llvm.smin.i32(i32 %550, i32 %52)
  %552 = tail call i32 @llvm.smax.i32(i32 %543, i32 -1)
  %553 = add nsw i32 %552, 1
  %554 = tail call i32 @llvm.smin.i32(i32 %553, i32 %52)
  %555 = tail call i32 @llvm.smax.i32(i32 %543, i32 -2)
  %556 = add nsw i32 %555, 2
  %557 = tail call i32 @llvm.smin.i32(i32 %556, i32 %52)
  %558 = tail call i32 @llvm.smax.i32(i32 %543, i32 -3)
  %559 = add nsw i32 %558, 3
  %560 = tail call i32 @llvm.smin.i32(i32 %559, i32 %52)
  %561 = sext i32 %546 to i64
  %562 = getelementptr inbounds ptr, ptr %28, i64 %561
  %563 = load ptr, ptr %562, align 8, !tbaa !13
  %564 = sext i32 %560 to i64
  %565 = getelementptr inbounds ptr, ptr %28, i64 %564
  %566 = load ptr, ptr %565, align 8, !tbaa !13
  %567 = sext i32 %549 to i64
  %568 = getelementptr inbounds ptr, ptr %28, i64 %567
  %569 = load ptr, ptr %568, align 8, !tbaa !13
  %570 = sext i32 %557 to i64
  %571 = getelementptr inbounds ptr, ptr %28, i64 %570
  %572 = load ptr, ptr %571, align 8, !tbaa !13
  %573 = sext i32 %551 to i64
  %574 = getelementptr inbounds ptr, ptr %28, i64 %573
  %575 = load ptr, ptr %574, align 8, !tbaa !13
  %576 = sext i32 %554 to i64
  %577 = getelementptr inbounds ptr, ptr %28, i64 %576
  %578 = load ptr, ptr %577, align 8, !tbaa !13
  br label %579

579:                                              ; preds = %579, %540
  %580 = phi i64 [ 0, %540 ], [ %613, %579 ]
  %581 = trunc i64 %580 to i32
  %582 = add i32 %31, %581
  %583 = tail call i32 @llvm.smax.i32(i32 %582, i32 2)
  %584 = add nsw i32 %583, -2
  %585 = tail call i32 @llvm.smin.i32(i32 %584, i32 %35)
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds i16, ptr %563, i64 %586
  %588 = load i16, ptr %587, align 2, !tbaa !40
  %589 = zext i16 %588 to i32
  %590 = getelementptr inbounds i16, ptr %566, i64 %586
  %591 = load i16, ptr %590, align 2, !tbaa !40
  %592 = zext i16 %591 to i32
  %593 = add nuw nsw i32 %592, %589
  %594 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %541, i64 %580
  %595 = getelementptr inbounds i16, ptr %569, i64 %586
  %596 = load i16, ptr %595, align 2, !tbaa !40
  %597 = zext i16 %596 to i32
  %598 = getelementptr inbounds i16, ptr %572, i64 %586
  %599 = load i16, ptr %598, align 2, !tbaa !40
  %600 = zext i16 %599 to i32
  %601 = add nuw nsw i32 %600, %597
  %602 = mul nsw i32 %601, -5
  %603 = add nsw i32 %602, %593
  %604 = getelementptr inbounds i16, ptr %575, i64 %586
  %605 = load i16, ptr %604, align 2, !tbaa !40
  %606 = zext i16 %605 to i32
  %607 = getelementptr inbounds i16, ptr %578, i64 %586
  %608 = load i16, ptr %607, align 2, !tbaa !40
  %609 = zext i16 %608 to i32
  %610 = add nuw nsw i32 %609, %606
  %611 = mul nuw nsw i32 %610, 20
  %612 = add nsw i32 %611, %603
  store i32 %612, ptr %594, align 4, !tbaa !18
  %613 = add nuw nsw i64 %580, 1
  %614 = icmp eq i64 %613, 9
  br i1 %614, label %615, label %579, !llvm.loop !675

615:                                              ; preds = %579
  %616 = add nuw nsw i64 %541, 1
  %617 = icmp eq i64 %616, 4
  br i1 %617, label %538, label %540, !llvm.loop !676

618:                                              ; preds = %655, %538
  %619 = phi i64 [ 0, %538 ], [ %656, %655 ]
  %620 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %619, i64 0
  %621 = load i32, ptr %620, align 4, !tbaa !18
  %622 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %619, i64 1
  %623 = load i32, ptr %622, align 4, !tbaa !18
  %624 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %619, i64 4
  %625 = load i32, ptr %624, align 4, !tbaa !18
  %626 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %619, i64 2
  %627 = load i32, ptr %626, align 4, !tbaa !18
  br label %628

628:                                              ; preds = %628, %618
  %629 = phi i32 [ %627, %618 ], [ %642, %628 ]
  %630 = phi i32 [ %625, %618 ], [ %636, %628 ]
  %631 = phi i32 [ %623, %618 ], [ %629, %628 ]
  %632 = phi i32 [ %621, %618 ], [ %631, %628 ]
  %633 = phi i64 [ 0, %618 ], [ %637, %628 ]
  %634 = add nuw nsw i64 %633, 5
  %635 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %619, i64 %634
  %636 = load i32, ptr %635, align 4, !tbaa !18
  %637 = add nuw nsw i64 %633, 1
  %638 = add nsw i32 %630, %631
  %639 = mul nsw i32 %638, -5
  %640 = add nuw nsw i64 %633, 3
  %641 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %619, i64 %640
  %642 = load i32, ptr %641, align 4, !tbaa !18
  %643 = add nsw i32 %642, %629
  %644 = mul nsw i32 %643, 20
  %645 = load i32, ptr %539, align 4, !tbaa !77
  %646 = add i32 %632, 512
  %647 = add i32 %646, %636
  %648 = add i32 %647, %639
  %649 = add i32 %648, %644
  %650 = ashr i32 %649, 10
  %651 = tail call i32 @llvm.smax.i32(i32 %650, i32 0)
  %652 = tail call i32 @llvm.smin.i32(i32 %651, i32 %645)
  %653 = getelementptr inbounds [4 x i32], ptr %5, i64 %619, i64 %633
  store i32 %652, ptr %653, align 4, !tbaa !18
  %654 = icmp eq i64 %637, 4
  br i1 %654, label %655, label %628, !llvm.loop !677

655:                                              ; preds = %628
  %656 = add nuw nsw i64 %619, 1
  %657 = icmp eq i64 %656, 4
  br i1 %657, label %658, label %618, !llvm.loop !678

658:                                              ; preds = %655
  %659 = and i32 %2, 1
  %660 = icmp eq i32 %659, 0
  br i1 %660, label %887, label %661

661:                                              ; preds = %658
  %662 = lshr i32 %29, 1
  %663 = or i32 %662, 2
  %664 = zext i32 %663 to i64
  %665 = add nuw nsw i32 %662, 3
  %666 = zext i32 %665 to i64
  %667 = or i32 %662, 4
  %668 = zext i32 %667 to i64
  %669 = add nuw nsw i32 %662, 5
  %670 = zext i32 %669 to i64
  br label %671

671:                                              ; preds = %671, %661
  %672 = phi i64 [ 0, %661 ], [ %721, %671 ]
  %673 = getelementptr inbounds [4 x i32], ptr %5, i64 %672
  %674 = load i32, ptr %673, align 4, !tbaa !18
  %675 = load i32, ptr %539, align 4, !tbaa !77
  %676 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %672, i64 %664
  %677 = load i32, ptr %676, align 4, !tbaa !18
  %678 = add nsw i32 %677, 16
  %679 = ashr i32 %678, 5
  %680 = tail call i32 @llvm.smax.i32(i32 %679, i32 0)
  %681 = tail call i32 @llvm.smin.i32(i32 %680, i32 %675)
  %682 = add i32 %674, 1
  %683 = add i32 %682, %681
  %684 = ashr i32 %683, 1
  store i32 %684, ptr %673, align 4, !tbaa !18
  %685 = getelementptr inbounds [4 x i32], ptr %5, i64 %672, i64 1
  %686 = load i32, ptr %685, align 4, !tbaa !18
  %687 = load i32, ptr %539, align 4, !tbaa !77
  %688 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %672, i64 %666
  %689 = load i32, ptr %688, align 4, !tbaa !18
  %690 = add nsw i32 %689, 16
  %691 = ashr i32 %690, 5
  %692 = tail call i32 @llvm.smax.i32(i32 %691, i32 0)
  %693 = tail call i32 @llvm.smin.i32(i32 %692, i32 %687)
  %694 = add i32 %686, 1
  %695 = add i32 %694, %693
  %696 = ashr i32 %695, 1
  store i32 %696, ptr %685, align 4, !tbaa !18
  %697 = getelementptr inbounds [4 x i32], ptr %5, i64 %672, i64 2
  %698 = load i32, ptr %697, align 4, !tbaa !18
  %699 = load i32, ptr %539, align 4, !tbaa !77
  %700 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %672, i64 %668
  %701 = load i32, ptr %700, align 4, !tbaa !18
  %702 = add nsw i32 %701, 16
  %703 = ashr i32 %702, 5
  %704 = tail call i32 @llvm.smax.i32(i32 %703, i32 0)
  %705 = tail call i32 @llvm.smin.i32(i32 %704, i32 %699)
  %706 = add i32 %698, 1
  %707 = add i32 %706, %705
  %708 = ashr i32 %707, 1
  store i32 %708, ptr %697, align 4, !tbaa !18
  %709 = getelementptr inbounds [4 x i32], ptr %5, i64 %672, i64 3
  %710 = load i32, ptr %709, align 4, !tbaa !18
  %711 = load i32, ptr %539, align 4, !tbaa !77
  %712 = getelementptr inbounds [9 x [9 x i32]], ptr %7, i64 0, i64 %672, i64 %670
  %713 = load i32, ptr %712, align 4, !tbaa !18
  %714 = add nsw i32 %713, 16
  %715 = ashr i32 %714, 5
  %716 = tail call i32 @llvm.smax.i32(i32 %715, i32 0)
  %717 = tail call i32 @llvm.smin.i32(i32 %716, i32 %711)
  %718 = add i32 %710, 1
  %719 = add i32 %718, %717
  %720 = ashr i32 %719, 1
  store i32 %720, ptr %709, align 4, !tbaa !18
  %721 = add nuw nsw i64 %672, 1
  %722 = icmp eq i64 %721, 4
  br i1 %722, label %887, label %671, !llvm.loop !679

723:                                              ; preds = %796
  %.lcssa1.lcssa = phi ptr [ %.lcssa1, %796 ]
  store ptr %.lcssa1.lcssa, ptr @get_block.cur_lineY, align 8, !tbaa !13
  %724 = icmp ne i32 %29, 1
  %725 = zext i1 %724 to i32
  %726 = add nsw i32 %31, %725
  br label %799

727:                                              ; preds = %796, %533
  %728 = phi i64 [ 0, %533 ], [ %797, %796 ]
  %729 = trunc i64 %728 to i32
  %730 = add i32 %31, %729
  %731 = tail call i32 @llvm.smax.i32(i32 %730, i32 2)
  %732 = add nsw i32 %731, -2
  %733 = tail call i32 @llvm.smin.i32(i32 %732, i32 %35)
  %734 = tail call i32 @llvm.smax.i32(i32 %730, i32 1)
  %735 = add nsw i32 %734, -1
  %736 = tail call i32 @llvm.smin.i32(i32 %735, i32 %35)
  %737 = tail call i32 @llvm.smax.i32(i32 %730, i32 0)
  %738 = tail call i32 @llvm.smin.i32(i32 %737, i32 %35)
  %739 = tail call i32 @llvm.smax.i32(i32 %730, i32 -1)
  %740 = add nsw i32 %739, 1
  %741 = tail call i32 @llvm.smin.i32(i32 %740, i32 %35)
  %742 = tail call i32 @llvm.smax.i32(i32 %730, i32 -2)
  %743 = add nsw i32 %742, 2
  %744 = tail call i32 @llvm.smin.i32(i32 %743, i32 %35)
  %745 = tail call i32 @llvm.smax.i32(i32 %730, i32 -3)
  %746 = add nsw i32 %745, 3
  %747 = tail call i32 @llvm.smin.i32(i32 %746, i32 %35)
  %748 = sext i32 %733 to i64
  %749 = sext i32 %747 to i64
  %750 = sext i32 %736 to i64
  %751 = sext i32 %744 to i64
  %752 = sext i32 %738 to i64
  %753 = sext i32 %741 to i64
  br label %754

754:                                              ; preds = %754, %727
  %755 = phi i64 [ 0, %727 ], [ %794, %754 ]
  %756 = trunc i64 %755 to i32
  %757 = add i32 %536, %756
  %758 = tail call i32 @llvm.smax.i32(i32 %757, i32 0)
  %759 = tail call i32 @llvm.smin.i32(i32 %758, i32 %52)
  %760 = sext i32 %759 to i64
  %761 = getelementptr inbounds ptr, ptr %28, i64 %760
  %762 = load ptr, ptr %761, align 8, !tbaa !13
  %763 = getelementptr inbounds i16, ptr %762, i64 %748
  %764 = load i16, ptr %763, align 2, !tbaa !40
  %765 = zext i16 %764 to i32
  %766 = getelementptr inbounds i16, ptr %762, i64 %749
  %767 = load i16, ptr %766, align 2, !tbaa !40
  %768 = zext i16 %767 to i32
  %769 = getelementptr inbounds i16, ptr %762, i64 %750
  %770 = load i16, ptr %769, align 2, !tbaa !40
  %771 = zext i16 %770 to i32
  %772 = getelementptr inbounds i16, ptr %762, i64 %751
  %773 = load i16, ptr %772, align 2, !tbaa !40
  %774 = zext i16 %773 to i32
  %775 = add nuw nsw i32 %774, %771
  %776 = mul nsw i32 %775, -5
  %777 = getelementptr inbounds i16, ptr %762, i64 %752
  %778 = load i16, ptr %777, align 2, !tbaa !40
  %779 = zext i16 %778 to i32
  %780 = getelementptr inbounds i16, ptr %762, i64 %753
  %781 = load i16, ptr %780, align 2, !tbaa !40
  %782 = zext i16 %781 to i32
  %783 = add nuw nsw i32 %782, %779
  %784 = mul nuw nsw i32 %783, 20
  %785 = load i32, ptr %537, align 4, !tbaa !77
  %786 = add nuw nsw i32 %765, 16
  %787 = add nuw nsw i32 %786, %768
  %788 = add nsw i32 %787, %776
  %789 = add nsw i32 %788, %784
  %790 = ashr i32 %789, 5
  %791 = tail call i32 @llvm.smax.i32(i32 %790, i32 0)
  %792 = tail call i32 @llvm.smin.i32(i32 %791, i32 %785)
  %793 = getelementptr inbounds [4 x i32], ptr %5, i64 %755, i64 %728
  store i32 %792, ptr %793, align 4, !tbaa !18
  %794 = add nuw nsw i64 %755, 1
  %795 = icmp eq i64 %794, 4
  br i1 %795, label %796, label %754, !llvm.loop !680

796:                                              ; preds = %754
  %.lcssa1 = phi ptr [ %762, %754 ]
  %797 = add nuw nsw i64 %728, 1
  %798 = icmp eq i64 %797, 4
  br i1 %798, label %723, label %727, !llvm.loop !681

799:                                              ; preds = %882, %723
  %800 = phi i64 [ 0, %723 ], [ %883, %882 ]
  %801 = trunc i64 %800 to i32
  %802 = add i32 %32, %801
  %803 = tail call i32 @llvm.smax.i32(i32 %802, i32 2)
  %804 = add nsw i32 %803, -2
  %805 = tail call i32 @llvm.smin.i32(i32 %804, i32 %52)
  %806 = tail call i32 @llvm.smax.i32(i32 %802, i32 1)
  %807 = add nsw i32 %806, -1
  %808 = tail call i32 @llvm.smin.i32(i32 %807, i32 %52)
  %809 = tail call i32 @llvm.smax.i32(i32 %802, i32 0)
  %810 = tail call i32 @llvm.smin.i32(i32 %809, i32 %52)
  %811 = tail call i32 @llvm.smax.i32(i32 %802, i32 -1)
  %812 = add nsw i32 %811, 1
  %813 = tail call i32 @llvm.smin.i32(i32 %812, i32 %52)
  %814 = tail call i32 @llvm.smax.i32(i32 %802, i32 -2)
  %815 = add nsw i32 %814, 2
  %816 = tail call i32 @llvm.smin.i32(i32 %815, i32 %52)
  %817 = tail call i32 @llvm.smax.i32(i32 %802, i32 -3)
  %818 = add nsw i32 %817, 3
  %819 = tail call i32 @llvm.smin.i32(i32 %818, i32 %52)
  %820 = sext i32 %805 to i64
  %821 = getelementptr inbounds ptr, ptr %28, i64 %820
  %822 = load ptr, ptr %821, align 8, !tbaa !13
  %823 = sext i32 %819 to i64
  %824 = getelementptr inbounds ptr, ptr %28, i64 %823
  %825 = load ptr, ptr %824, align 8, !tbaa !13
  %826 = sext i32 %808 to i64
  %827 = getelementptr inbounds ptr, ptr %28, i64 %826
  %828 = load ptr, ptr %827, align 8, !tbaa !13
  %829 = sext i32 %816 to i64
  %830 = getelementptr inbounds ptr, ptr %28, i64 %829
  %831 = load ptr, ptr %830, align 8, !tbaa !13
  %832 = sext i32 %810 to i64
  %833 = getelementptr inbounds ptr, ptr %28, i64 %832
  %834 = load ptr, ptr %833, align 8, !tbaa !13
  %835 = sext i32 %813 to i64
  %836 = getelementptr inbounds ptr, ptr %28, i64 %835
  %837 = load ptr, ptr %836, align 8, !tbaa !13
  br label %838

838:                                              ; preds = %838, %799
  %839 = phi i64 [ 0, %799 ], [ %880, %838 ]
  %840 = trunc i64 %839 to i32
  %841 = add i32 %726, %840
  %842 = tail call i32 @llvm.smax.i32(i32 %841, i32 0)
  %843 = tail call i32 @llvm.smin.i32(i32 %842, i32 %35)
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds i16, ptr %822, i64 %844
  %846 = load i16, ptr %845, align 2, !tbaa !40
  %847 = zext i16 %846 to i32
  %848 = getelementptr inbounds i16, ptr %825, i64 %844
  %849 = load i16, ptr %848, align 2, !tbaa !40
  %850 = zext i16 %849 to i32
  %851 = getelementptr inbounds i16, ptr %828, i64 %844
  %852 = load i16, ptr %851, align 2, !tbaa !40
  %853 = zext i16 %852 to i32
  %854 = getelementptr inbounds i16, ptr %831, i64 %844
  %855 = load i16, ptr %854, align 2, !tbaa !40
  %856 = zext i16 %855 to i32
  %857 = add nuw nsw i32 %856, %853
  %858 = mul nsw i32 %857, -5
  %859 = getelementptr inbounds i16, ptr %834, i64 %844
  %860 = load i16, ptr %859, align 2, !tbaa !40
  %861 = zext i16 %860 to i32
  %862 = getelementptr inbounds i16, ptr %837, i64 %844
  %863 = load i16, ptr %862, align 2, !tbaa !40
  %864 = zext i16 %863 to i32
  %865 = add nuw nsw i32 %864, %861
  %866 = mul nuw nsw i32 %865, 20
  %867 = getelementptr inbounds [4 x i32], ptr %5, i64 %800, i64 %839
  %868 = load i32, ptr %867, align 4, !tbaa !18
  %869 = load i32, ptr %537, align 4, !tbaa !77
  %870 = add nuw nsw i32 %847, 16
  %871 = add nuw nsw i32 %870, %850
  %872 = add nsw i32 %871, %858
  %873 = add nsw i32 %872, %866
  %874 = ashr i32 %873, 5
  %875 = tail call i32 @llvm.smax.i32(i32 %874, i32 0)
  %876 = tail call i32 @llvm.smin.i32(i32 %875, i32 %869)
  %877 = add i32 %868, 1
  %878 = add i32 %877, %876
  %879 = ashr i32 %878, 1
  store i32 %879, ptr %867, align 4, !tbaa !18
  %880 = add nuw nsw i64 %839, 1
  %881 = icmp eq i64 %880, 4
  br i1 %881, label %882, label %838, !llvm.loop !682

882:                                              ; preds = %838
  %883 = add nuw nsw i64 %800, 1
  %884 = icmp eq i64 %883, 4
  br i1 %884, label %887, label %799, !llvm.loop !683

885:                                              ; preds = %334, %199, %72
  %886 = phi ptr [ %80, %72 ], [ %207, %199 ], [ %342, %334 ]
  store ptr %886, ptr @get_block.cur_lineY, align 8, !tbaa !13
  br label %887

887:                                              ; preds = %885, %882, %671, %658, %478, %471, %313, %175, %21
  call void @llvm.lifetime.end.p0(i64 324, ptr nonnull %7) #48
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable
define internal void @init_old_slice() #18 {
  store i32 0, ptr @old_slice, align 4, !tbaa !604
  store i32 2147483647, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 9), align 4, !tbaa !601
  store i32 0, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 7), align 4, !tbaa !607
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 -1, i32 2147483647>, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 2), align 4, !tbaa !18
  store i32 2147483647, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 6), align 4, !tbaa !18
  store i32 2147483647, ptr getelementptr inbounds (%struct.old_slice_par, ptr @old_slice, i64 0, i32 6, i64 1), align 4, !tbaa !18
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @reset_wp_params(ptr nocapture noundef readonly %0) #9 {
  %2 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 75
  %3 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 76
  %4 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 77
  %5 = load ptr, ptr %4, align 8, !tbaa !483
  %6 = load ptr, ptr %5, align 8, !tbaa !13
  %7 = getelementptr inbounds ptr, ptr %5, i64 1
  %8 = load ptr, ptr %7, align 8, !tbaa !13
  br label %9

9:                                                ; preds = %25, %1
  %10 = phi i64 [ 0, %1 ], [ %26, %25 ]
  %11 = getelementptr inbounds ptr, ptr %6, i64 %10
  %12 = load ptr, ptr %11, align 8, !tbaa !13
  %13 = getelementptr inbounds ptr, ptr %8, i64 %10
  %14 = load ptr, ptr %13, align 8, !tbaa !13
  br label %15

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %23, %15 ]
  %17 = icmp eq i64 %16, 0
  %18 = select i1 %17, ptr %2, ptr %3
  %19 = load i32, ptr %18, align 4, !tbaa !18
  %20 = shl nuw i32 1, %19
  %21 = getelementptr inbounds i32, ptr %12, i64 %16
  store i32 %20, ptr %21, align 4, !tbaa !18
  %22 = getelementptr inbounds i32, ptr %14, i64 %16
  store i32 %20, ptr %22, align 4, !tbaa !18
  %23 = add nuw nsw i64 %16, 1
  %24 = icmp eq i64 %23, 3
  br i1 %24, label %25, label %15, !llvm.loop !684

25:                                               ; preds = %15
  %26 = add nuw nsw i64 %10, 1
  %27 = icmp eq i64 %26, 32
  br i1 %27, label %28, label %9, !llvm.loop !685

28:                                               ; preds = %25
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @Configure(i32 noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = load ptr, ptr @input, align 8, !tbaa !13
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(9) %3, ptr noundef nonnull align 1 dereferenceable(9) @.str.1.91, i64 9, i1 false) #46
  %4 = load ptr, ptr @input, align 8, !tbaa !13
  %5 = getelementptr inbounds %struct.inp_par, ptr %4, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(13) %5, ptr noundef nonnull align 1 dereferenceable(13) @.str.2.92, i64 13, i1 false) #46
  %6 = getelementptr inbounds %struct.inp_par, ptr %4, i64 0, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(13) %6, ptr noundef nonnull align 1 dereferenceable(13) @.str.3.93, i64 13, i1 false) #46
  %7 = getelementptr inbounds %struct.inp_par, ptr %4, i64 0, i32 3
  store i32 0, ptr %7, align 4, !tbaa !554
  %8 = getelementptr inbounds %struct.inp_par, ptr %4, i64 0, i32 4
  store i32 0, ptr %8, align 4, !tbaa !686
  %9 = getelementptr inbounds %struct.inp_par, ptr %4, i64 0, i32 5
  store i32 2, ptr %9, align 4, !tbaa !643
  %10 = getelementptr inbounds %struct.inp_par, ptr %4, i64 0, i32 7
  store i32 0, ptr %10, align 4, !tbaa !573
  %11 = icmp eq i32 %0, 2
  br i1 %11, label %12, label %25

12:                                               ; preds = %2
  %13 = getelementptr inbounds ptr, ptr %1, i64 1
  %14 = load ptr, ptr %13, align 8, !tbaa !13
  %15 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %14, ptr noundef nonnull dereferenceable(3) @.str.4.94, i64 noundef 2) #52
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = load ptr, ptr @stderr, align 8, !tbaa !13
  %19 = tail call i64 @fwrite(ptr nonnull @.str.95, i64 782, i64 1, ptr %18) #53
  tail call void @exit(i32 noundef -1) #51
  unreachable

20:                                               ; preds = %12
  %21 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %14, ptr noundef nonnull dereferenceable(3) @.str.5.96, i64 noundef 2) #52
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  store i32 1, ptr %10, align 4, !tbaa !573
  br label %51

24:                                               ; preds = %20
  tail call void @init_conf(ptr noundef nonnull %4, ptr noundef %14) #47
  br label %51

25:                                               ; preds = %2
  %26 = icmp sgt i32 %0, 2
  br i1 %26, label %27, label %51

27:                                               ; preds = %25
  %28 = getelementptr inbounds ptr, ptr %1, i64 1
  %29 = load ptr, ptr %28, align 8, !tbaa !13
  %30 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %29, ptr noundef nonnull dereferenceable(3) @.str.6.97, i64 noundef 2) #52
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = getelementptr inbounds ptr, ptr %1, i64 2
  %34 = load ptr, ptr %33, align 8, !tbaa !13
  %35 = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %4, ptr noundef nonnull dereferenceable(1) %34) #46
  %36 = load ptr, ptr %28, align 8, !tbaa !13
  br label %37

37:                                               ; preds = %32, %27
  %38 = phi ptr [ %36, %32 ], [ %29, %27 ]
  %39 = phi i32 [ 3, %32 ], [ 1, %27 ]
  %40 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %38, ptr noundef nonnull dereferenceable(3) @.str.4.94, i64 noundef 2) #52
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = load ptr, ptr @stderr, align 8, !tbaa !13
  %44 = tail call i64 @fwrite(ptr nonnull @.str.95, i64 782, i64 1, ptr %43) #53
  tail call void @exit(i32 noundef -1) #51
  unreachable

45:                                               ; preds = %37
  %46 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %38, ptr noundef nonnull dereferenceable(3) @.str.5.96, i64 noundef 2) #52
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = load ptr, ptr @input, align 8, !tbaa !13
  %50 = getelementptr inbounds %struct.inp_par, ptr %49, i64 0, i32 7
  store i32 1, ptr %50, align 4, !tbaa !573
  br label %51

51:                                               ; preds = %48, %45, %25, %24, %23
  %52 = phi ptr [ null, %48 ], [ null, %45 ], [ null, %25 ], [ %14, %24 ], [ null, %23 ]
  %53 = phi i32 [ %39, %48 ], [ %39, %45 ], [ 1, %25 ], [ 2, %24 ], [ 2, %23 ]
  %54 = icmp slt i32 %53, %0
  br i1 %54, label %55, label %135

55:                                               ; preds = %132, %51
  %56 = phi i32 [ %133, %132 ], [ %53, %51 ]
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds ptr, ptr %1, i64 %57
  %59 = load ptr, ptr %58, align 8, !tbaa !13
  %60 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %59, ptr noundef nonnull dereferenceable(3) @.str.4.94, i64 noundef 2) #52
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %55
  %63 = load ptr, ptr @stderr, align 8, !tbaa !13
  %64 = tail call i64 @fwrite(ptr nonnull @.str.95, i64 782, i64 1, ptr %63) #53
  tail call void @exit(i32 noundef -1) #51
  unreachable

65:                                               ; preds = %55
  %66 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %59, ptr noundef nonnull dereferenceable(3) @.str.5.96, i64 noundef 2) #52
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %65
  %69 = load ptr, ptr @input, align 8, !tbaa !13
  %70 = getelementptr inbounds %struct.inp_par, ptr %69, i64 0, i32 7
  store i32 1, ptr %70, align 4, !tbaa !573
  %71 = add nsw i32 %56, 1
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds ptr, ptr %1, i64 %72
  %74 = load ptr, ptr %73, align 8, !tbaa !13
  br label %75

75:                                               ; preds = %68, %65
  %76 = phi ptr [ %74, %68 ], [ %59, %65 ]
  %77 = phi i32 [ %71, %68 ], [ %56, %65 ]
  %78 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %76, ptr noundef nonnull dereferenceable(3) @.str.6.97, i64 noundef 2) #52
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %88

80:                                               ; preds = %75
  %81 = load ptr, ptr @input, align 8, !tbaa !13
  %82 = add nsw i32 %77, 1
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds ptr, ptr %1, i64 %83
  %85 = load ptr, ptr %84, align 8, !tbaa !13
  %86 = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %81, ptr noundef nonnull dereferenceable(1) %85) #46
  %87 = add nsw i32 %77, 2
  br label %132

88:                                               ; preds = %75
  %89 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %76, ptr noundef nonnull dereferenceable(3) @.str.7.98, i64 noundef 2) #52
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %100

91:                                               ; preds = %88
  %92 = load ptr, ptr @input, align 8, !tbaa !13
  %93 = getelementptr inbounds %struct.inp_par, ptr %92, i64 0, i32 1
  %94 = add nsw i32 %77, 1
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds ptr, ptr %1, i64 %95
  %97 = load ptr, ptr %96, align 8, !tbaa !13
  %98 = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %93, ptr noundef nonnull dereferenceable(1) %97) #46
  %99 = add nsw i32 %77, 2
  br label %132

100:                                              ; preds = %88
  %101 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %76, ptr noundef nonnull dereferenceable(3) @.str.8.99, i64 noundef 2) #52
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %112

103:                                              ; preds = %100
  %104 = load ptr, ptr @input, align 8, !tbaa !13
  %105 = getelementptr inbounds %struct.inp_par, ptr %104, i64 0, i32 2
  %106 = add nsw i32 %77, 1
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds ptr, ptr %1, i64 %107
  %109 = load ptr, ptr %108, align 8, !tbaa !13
  %110 = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %105, ptr noundef nonnull dereferenceable(1) %109) #46
  %111 = add nsw i32 %77, 2
  br label %132

112:                                              ; preds = %100
  %113 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %76, ptr noundef nonnull dereferenceable(3) @.str.9.100, i64 noundef 2) #52
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %124

115:                                              ; preds = %112
  %116 = add nsw i32 %77, 1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds ptr, ptr %1, i64 %117
  %119 = load ptr, ptr %118, align 8, !tbaa !13
  %120 = load ptr, ptr @input, align 8, !tbaa !13
  %121 = getelementptr inbounds %struct.inp_par, ptr %120, i64 0, i32 5
  %122 = tail call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef %119, ptr noundef nonnull @.str.10.101, ptr noundef nonnull %121) #46
  %123 = add nsw i32 %77, 2
  br label %132

124:                                              ; preds = %112
  %125 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %76, ptr noundef nonnull dereferenceable(4) @.str.11.102, i64 noundef 3) #52
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %124
  %128 = load ptr, ptr @input, align 8, !tbaa !13
  %129 = getelementptr inbounds %struct.inp_par, ptr %128, i64 0, i32 6
  store i32 1, ptr %129, align 4, !tbaa !648
  %130 = add nsw i32 %77, 1
  br label %132

131:                                              ; preds = %124
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(47) @errortext, ptr noundef nonnull align 1 dereferenceable(47) @.str.12.103, i64 47, i1 false)
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 300) #46
  br label %132

132:                                              ; preds = %131, %127, %115, %103, %91, %80
  %133 = phi i32 [ %87, %80 ], [ %99, %91 ], [ %111, %103 ], [ %123, %115 ], [ %130, %127 ], [ %77, %131 ]
  %134 = icmp slt i32 %133, %0
  br i1 %134, label %55, label %135, !llvm.loop !687

135:                                              ; preds = %132, %51
  %136 = load ptr, ptr @input, align 8, !tbaa !13
  %137 = getelementptr inbounds %struct.inp_par, ptr %136, i64 0, i32 1
  %138 = tail call i32 (ptr, i32, ...) @open64(ptr noundef nonnull %137, i32 noundef 577, i32 noundef 384) #46
  store i32 %138, ptr @p_out, align 4, !tbaa !18
  %139 = icmp eq i32 %138, -1
  br i1 %139, label %140, label %144

140:                                              ; preds = %135
  %141 = load ptr, ptr @input, align 8, !tbaa !13
  %142 = getelementptr inbounds %struct.inp_par, ptr %141, i64 0, i32 1
  %143 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.13.104, ptr noundef nonnull %142) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 500) #46
  br label %144

144:                                              ; preds = %140, %135
  %145 = load ptr, ptr @stdout, align 8, !tbaa !13
  %146 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %145, ptr noundef nonnull @.str.14.105, ptr noundef nonnull @.str.15.106, ptr noundef nonnull @.str.16.107) #47
  %147 = load ptr, ptr @stdout, align 8, !tbaa !13
  %148 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %147, ptr noundef nonnull @.str.17.108, ptr noundef %52) #47
  %149 = load ptr, ptr @stdout, align 8, !tbaa !13
  %150 = tail call i64 @fwrite(ptr nonnull @.str.18.109, i64 75, i64 1, ptr %149)
  %151 = load ptr, ptr @stdout, align 8, !tbaa !13
  %152 = load ptr, ptr @input, align 8, !tbaa !13
  %153 = tail call ptr @strrchr(ptr noundef nonnull dereferenceable(1) %152, i32 noundef 47) #52
  %154 = icmp eq ptr %153, null
  %155 = getelementptr inbounds i8, ptr %153, i64 1
  %156 = select i1 %154, ptr %152, ptr %155
  %157 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %151, ptr noundef nonnull @.str.19.110, ptr noundef %156) #47
  %158 = load ptr, ptr @stdout, align 8, !tbaa !13
  %159 = load ptr, ptr @input, align 8, !tbaa !13
  %160 = getelementptr inbounds %struct.inp_par, ptr %159, i64 0, i32 1
  %161 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %158, ptr noundef nonnull @.str.20.111, ptr noundef nonnull %160) #47
  %162 = load ptr, ptr @stdout, align 8, !tbaa !13
  %163 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %162, ptr noundef nonnull @.str.21.112, ptr noundef nonnull @.str.22.113) #47
  %164 = load ptr, ptr @input, align 8, !tbaa !13
  %165 = getelementptr inbounds %struct.inp_par, ptr %164, i64 0, i32 2
  %166 = tail call i32 (ptr, i32, ...) @open64(ptr noundef nonnull %165, i32 noundef 0) #46
  store i32 %166, ptr @p_ref, align 4, !tbaa !18
  %167 = icmp eq i32 %166, -1
  %168 = load ptr, ptr @stdout, align 8, !tbaa !13
  %169 = load ptr, ptr @input, align 8, !tbaa !13
  %170 = getelementptr inbounds %struct.inp_par, ptr %169, i64 0, i32 2
  %171 = tail call ptr @strrchr(ptr noundef nonnull dereferenceable(1) %170, i32 noundef 47) #52
  %172 = icmp eq ptr %171, null
  %173 = getelementptr inbounds i8, ptr %171, i64 1
  %174 = select i1 %172, ptr %170, ptr %173
  br i1 %167, label %175, label %179

175:                                              ; preds = %144
  %176 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %168, ptr noundef nonnull @.str.23.114, ptr noundef nonnull %174) #47
  %177 = load ptr, ptr @stdout, align 8, !tbaa !13
  %178 = tail call i64 @fwrite(ptr nonnull @.str.24.115, i64 71, i64 1, ptr %177)
  br label %181

179:                                              ; preds = %144
  %180 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %168, ptr noundef nonnull @.str.25.116, ptr noundef nonnull %174) #47
  br label %181

181:                                              ; preds = %179, %175
  %182 = load ptr, ptr @stdout, align 8, !tbaa !13
  %183 = tail call i64 @fwrite(ptr nonnull @.str.18.109, i64 75, i64 1, ptr %182)
  %184 = load ptr, ptr @stdout, align 8, !tbaa !13
  %185 = tail call i64 @fwrite(ptr nonnull @.str.26.117, i64 51, i64 1, ptr %184)
  %186 = load ptr, ptr @stdout, align 8, !tbaa !13
  %187 = tail call i64 @fwrite(ptr nonnull @.str.18.109, i64 75, i64 1, ptr %186)
  %188 = load ptr, ptr @stdout, align 8, !tbaa !13
  %189 = tail call i64 @fwrite(ptr nonnull @.str.27.118, i64 71, i64 1, ptr %188)
  %190 = load ptr, ptr @stdout, align 8, !tbaa !13
  %191 = tail call i64 @fwrite(ptr nonnull @.str.18.109, i64 75, i64 1, ptr %190)
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #38

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #4

; Function Attrs: nounwind optsize uwtable
define internal void @init_conf(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca [100 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #48
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #48
  call void @llvm.lifetime.start.p0(i64 100, ptr nonnull %5) #48
  %6 = tail call noalias ptr @fopen64(ptr noundef %1, ptr noundef nonnull @.str.32.119) #47
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.33.120, ptr noundef %1) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 300) #46
  br label %10

10:                                               ; preds = %8, %2
  %11 = tail call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.34.121, ptr noundef %0) #46
  %12 = tail call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %13 = getelementptr inbounds %struct.inp_par, ptr %0, i64 0, i32 1
  %14 = tail call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.34.121, ptr noundef nonnull %13) #46
  %15 = tail call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %16 = getelementptr inbounds %struct.inp_par, ptr %0, i64 0, i32 2
  %17 = tail call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.34.121, ptr noundef nonnull %16) #46
  %18 = tail call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %19 = getelementptr inbounds %struct.inp_par, ptr %0, i64 0, i32 6
  %20 = tail call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.10.101, ptr noundef nonnull %19) #46
  %21 = tail call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %22 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.10.101, ptr noundef nonnull %3) #46
  %23 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %24 = load i32, ptr %3, align 4, !tbaa !18
  switch i32 %24, label %29 [
    i32 0, label %25
    i32 1, label %27
  ]

25:                                               ; preds = %10
  %26 = getelementptr inbounds %struct.inp_par, ptr %0, i64 0, i32 3
  store i32 0, ptr %26, align 4, !tbaa !554
  br label %31

27:                                               ; preds = %10
  %28 = getelementptr inbounds %struct.inp_par, ptr %0, i64 0, i32 3
  store i32 1, ptr %28, align 4, !tbaa !554
  br label %31

29:                                               ; preds = %10
  %30 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.36.123, i32 noundef %24) #46
  call void @error(ptr noundef nonnull @errortext, i32 noundef 400) #46
  br label %31

31:                                               ; preds = %29, %27, %25
  %32 = getelementptr inbounds %struct.inp_par, ptr %0, i64 0, i32 4
  %33 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.37.124, ptr noundef nonnull %32) #46
  %34 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %35 = getelementptr inbounds %struct.inp_par, ptr %0, i64 0, i32 5
  %36 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.37.124, ptr noundef nonnull %35) #46
  %37 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %38 = load i32, ptr %35, align 4, !tbaa !643
  %39 = add i32 %38, -11
  %40 = icmp ult i32 %39, -10
  br i1 %40, label %41, label %43

41:                                               ; preds = %31
  %42 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.38.125, i32 noundef %38) #46
  call void @error(ptr noundef nonnull @errortext, i32 noundef 1) #46
  br label %43

43:                                               ; preds = %41, %31
  store i32 1, ptr %19, align 4, !tbaa !648
  %44 = getelementptr inbounds %struct.inp_par, ptr %0, i64 0, i32 8
  store i32 0, ptr %44, align 4, !tbaa !613
  %45 = load ptr, ptr @img, align 8, !tbaa !13
  %46 = getelementptr inbounds %struct.img_par, ptr %45, i64 0, i32 130
  store i32 0, ptr %46, align 4, !tbaa !364
  %47 = getelementptr inbounds %struct.inp_par, ptr %0, i64 0, i32 9
  store i32 2, ptr %47, align 4, !tbaa !688
  %48 = getelementptr inbounds %struct.img_par, ptr %45, i64 0, i32 128
  store i32 2, ptr %48, align 4, !tbaa !349
  %49 = getelementptr inbounds %struct.inp_par, ptr %0, i64 0, i32 10
  store i32 2, ptr %49, align 4, !tbaa !689
  %50 = getelementptr inbounds %struct.img_par, ptr %45, i64 0, i32 129
  store i32 2, ptr %50, align 8, !tbaa !331
  %51 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.39, ptr noundef nonnull %4) #46
  %52 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %53 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.39, ptr noundef nonnull %4) #46
  %54 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %55 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.39, ptr noundef nonnull %4) #46
  %56 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %57 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.34.121, ptr noundef nonnull %5) #46
  %58 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %59 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.10.101, ptr noundef nonnull %44) #46
  %60 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %61 = load i32, ptr %44, align 4, !tbaa !613
  %62 = load ptr, ptr @img, align 8, !tbaa !13
  %63 = getelementptr inbounds %struct.img_par, ptr %62, i64 0, i32 130
  store i32 %61, ptr %63, align 4, !tbaa !364
  %64 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.10.101, ptr noundef nonnull %47) #46
  %65 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %66 = load i32, ptr %47, align 4, !tbaa !688
  %67 = load ptr, ptr @img, align 8, !tbaa !13
  %68 = getelementptr inbounds %struct.img_par, ptr %67, i64 0, i32 128
  store i32 %66, ptr %68, align 4, !tbaa !349
  %69 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.10.101, ptr noundef nonnull %49) #46
  %70 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %71 = load i32, ptr %49, align 4, !tbaa !689
  %72 = load ptr, ptr @img, align 8, !tbaa !13
  %73 = getelementptr inbounds %struct.img_par, ptr %72, i64 0, i32 129
  store i32 %71, ptr %73, align 8, !tbaa !331
  %74 = getelementptr inbounds %struct.inp_par, ptr %0, i64 0, i32 7
  %75 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.37.124, ptr noundef nonnull %74) #46
  %76 = call i32 (ptr, ptr, ...) @__isoc99_fscanf(ptr noundef %6, ptr noundef nonnull @.str.35.122) #46
  %77 = call i32 @fclose(ptr noundef %6) #47
  call void @llvm.lifetime.end.p0(i64 100, ptr nonnull %5) #48
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #48
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @__isoc99_sscanf(ptr nocapture noundef readonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree optsize
declare noundef i32 @open64(ptr nocapture noundef readonly, i32 noundef, ...) local_unnamed_addr #27

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(argmem: read)
declare ptr @strrchr(ptr noundef, i32 noundef) local_unnamed_addr #38

; Function Attrs: optsize
declare i32 @__isoc99_fscanf(ptr noundef, ptr noundef, ...) local_unnamed_addr #34

; Function Attrs: nounwind optsize uwtable
define dso_local i32 @main(i32 noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = tail call noalias dereferenceable_or_null(3032) ptr @calloc(i64 noundef 1, i64 noundef 3032) #45
  store ptr %3, ptr @input, align 8, !tbaa !13
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @no_mem_exit(ptr noundef nonnull @.str.28.128) #46
  br label %6

6:                                                ; preds = %5, %2
  %7 = tail call noalias dereferenceable_or_null(64) ptr @calloc(i64 noundef 1, i64 noundef 64) #45
  store ptr %7, ptr @snr, align 8, !tbaa !13
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @no_mem_exit(ptr noundef nonnull @.str.29.131) #46
  br label %10

10:                                               ; preds = %9, %6
  %11 = tail call noalias dereferenceable_or_null(6112) ptr @calloc(i64 noundef 1, i64 noundef 6112) #45
  store ptr %11, ptr @img, align 8, !tbaa !13
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %10
  tail call void @no_mem_exit(ptr noundef nonnull @.str.30.132) #46
  br label %14

14:                                               ; preds = %13, %10
  tail call void @Configure(i32 noundef %0, ptr noundef %1) #47
  tail call void (...) @init_old_slice() #46
  %15 = load ptr, ptr @input, align 8, !tbaa !13
  %16 = getelementptr inbounds %struct.inp_par, ptr %15, i64 0, i32 3
  %17 = load i32, ptr %16, align 4, !tbaa !554
  switch i32 %17, label %20 [
    i32 0, label %18
    i32 1, label %19
  ]

18:                                               ; preds = %14
  tail call void @OpenBitstreamFile(ptr noundef nonnull %15) #46
  br label %22

19:                                               ; preds = %14
  tail call void @OpenRTPFile(ptr noundef nonnull %15) #46
  br label %22

20:                                               ; preds = %14
  %21 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.31.133, i32 noundef %17) #47
  br label %22

22:                                               ; preds = %20, %19, %18
  %23 = load ptr, ptr @input, align 8, !tbaa !13
  %24 = load ptr, ptr @img, align 8, !tbaa !13
  tail call void @malloc_slice(ptr noundef %23, ptr noundef %24) #47
  %25 = load ptr, ptr @img, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.img_par, ptr %25, i64 0, i32 93
  store i32 -1, ptr %26, align 4, !tbaa !690
  store ptr null, ptr @imgY_ref, align 8, !tbaa !13
  store ptr null, ptr @imgUV_ref, align 8, !tbaa !13
  %27 = getelementptr inbounds %struct.img_par, ptr %25, i64 0, i32 135
  store i32 0, ptr %27, align 8, !tbaa !556
  %28 = getelementptr inbounds %struct.img_par, ptr %25, i64 0, i32 136
  store i32 0, ptr %28, align 4, !tbaa !557
  %29 = getelementptr inbounds %struct.img_par, ptr %25, i64 0, i32 139
  store i32 2147483647, ptr %29, align 8, !tbaa !614
  store ptr null, ptr @dec_picture, align 8, !tbaa !13
  store i32 0, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 9), align 8, !tbaa !691
  store i32 0, ptr @g_nFrame, align 4, !tbaa !18
  tail call void (...) @init_out_buffer() #46
  %30 = load ptr, ptr @input, align 8, !tbaa !13
  %31 = getelementptr inbounds %struct.inp_par, ptr %30, i64 0, i32 4
  %32 = load i32, ptr %31, align 4, !tbaa !686
  %33 = load ptr, ptr @img, align 8, !tbaa !13
  %34 = getelementptr inbounds %struct.img_par, ptr %33, i64 0, i32 121
  store i32 %32, ptr %34, align 4, !tbaa !650
  %35 = getelementptr inbounds %struct.img_par, ptr %33, i64 0, i32 122
  store i32 0, ptr %35, align 8, !tbaa !649
  store i32 0, ptr %33, align 8, !tbaa !569
  %36 = getelementptr inbounds %struct.img_par, ptr %33, i64 0, i32 10
  store i32 2, ptr %36, align 4, !tbaa !137
  %37 = getelementptr inbounds %struct.img_par, ptr %33, i64 0, i32 46
  store ptr null, ptr %37, align 8, !tbaa !502
  %38 = load ptr, ptr @snr, align 8, !tbaa !13
  store i32 0, ptr %38, align 4, !tbaa !579
  store i32 0, ptr @Bframe_ctr, align 4, !tbaa !18
  store i64 0, ptr @tot_time, align 8, !tbaa !692
  br label %39

39:                                               ; preds = %61, %22
  %40 = phi i64 [ 0, %22 ], [ %62, %61 ]
  %41 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %22 ], [ %63, %61 ]
  %42 = icmp ult <4 x i64> %41, <i64 17, i64 17, i64 17, i64 17>
  %43 = extractelement <4 x i1> %42, i64 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = getelementptr inbounds [17 x i32], ptr @ref_flag, i64 0, i64 %40
  store i32 1, ptr %45, align 16, !tbaa !18
  br label %46

46:                                               ; preds = %44, %39
  %47 = extractelement <4 x i1> %42, i64 1
  br i1 %47, label %48, label %51

48:                                               ; preds = %46
  %49 = or i64 %40, 1
  %50 = getelementptr inbounds [17 x i32], ptr @ref_flag, i64 0, i64 %49
  store i32 1, ptr %50, align 4, !tbaa !18
  br label %51

51:                                               ; preds = %48, %46
  %52 = extractelement <4 x i1> %42, i64 2
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = or i64 %40, 2
  %55 = getelementptr inbounds [17 x i32], ptr @ref_flag, i64 0, i64 %54
  store i32 1, ptr %55, align 8, !tbaa !18
  br label %56

56:                                               ; preds = %53, %51
  %57 = extractelement <4 x i1> %42, i64 3
  br i1 %57, label %58, label %61

58:                                               ; preds = %56
  %59 = or i64 %40, 3
  %60 = getelementptr inbounds [17 x i32], ptr @ref_flag, i64 0, i64 %59
  store i32 1, ptr %60, align 4, !tbaa !18
  br label %61

61:                                               ; preds = %58, %56
  %62 = add i64 %40, 4
  %63 = add <4 x i64> %41, <i64 4, i64 4, i64 4, i64 4>
  %64 = icmp eq i64 %62, 20
  br i1 %64, label %65, label %39, !llvm.loop !693

65:                                               ; preds = %65, %61
  %66 = load ptr, ptr @img, align 8, !tbaa !13
  %67 = load ptr, ptr @input, align 8, !tbaa !13
  %68 = load ptr, ptr @snr, align 8, !tbaa !13
  %69 = tail call i32 @decode_one_frame(ptr noundef %66, ptr noundef %67, ptr noundef %68) #46
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %65, !llvm.loop !694

71:                                               ; preds = %65
  %72 = load ptr, ptr @input, align 8, !tbaa !13
  %73 = load ptr, ptr @img, align 8, !tbaa !13
  %74 = load ptr, ptr @snr, align 8, !tbaa !13
  tail call void @report(ptr noundef %72, ptr noundef %73, ptr noundef %74) #47
  %75 = load ptr, ptr @img, align 8, !tbaa !13
  tail call void @free_slice(ptr poison, ptr noundef %75) #47
  %76 = tail call i32 (...) @FmoFinit() #46
  tail call void @free_global_buffers() #47
  tail call void @flush_dpb() #46
  tail call void (...) @CloseBitstreamFile() #46
  %77 = load i32, ptr @p_out, align 4, !tbaa !18
  %78 = tail call i32 @close(i32 noundef %77) #46
  %79 = load i32, ptr @p_ref, align 4, !tbaa !18
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %83, label %81

81:                                               ; preds = %71
  %82 = tail call i32 @close(i32 noundef %79) #46
  br label %83

83:                                               ; preds = %81, %71
  %84 = load ptr, ptr @erc_errorVar, align 8, !tbaa !13
  tail call void @ercClose(ptr noundef %84) #46
  tail call void (...) @CleanUpPPS() #46
  tail call void @free_dpb() #46
  tail call void (...) @uninit_out_buffer() #46
  %85 = load ptr, ptr @Co_located, align 8, !tbaa !13
  tail call void @free_colocated(ptr noundef %85) #46
  %86 = load ptr, ptr @input, align 8, !tbaa !13
  tail call void @free(ptr noundef %86) #46
  %87 = load ptr, ptr @snr, align 8, !tbaa !13
  tail call void @free(ptr noundef %87) #46
  %88 = load ptr, ptr @img, align 8, !tbaa !13
  tail call void @free(ptr noundef %88) #46
  ret i32 0
}

; Function Attrs: nounwind optsize uwtable
define internal void @malloc_slice(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) #0 {
  %3 = tail call noalias dereferenceable_or_null(152) ptr @calloc(i64 noundef 1, i64 noundef 152) #45
  %4 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  store ptr %3, ptr %4, align 8, !tbaa !165
  %5 = icmp eq ptr %3, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.inp_par, ptr %0, i64 0, i32 3
  %8 = load i32, ptr %7, align 4, !tbaa !554
  %9 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.71.144, i32 noundef %8) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %10

10:                                               ; preds = %6, %2
  %11 = tail call ptr @create_contexts_MotionInfo() #46
  %12 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 10
  store ptr %11, ptr %12, align 8, !tbaa !166
  %13 = tail call ptr @create_contexts_TextureInfo() #46
  %14 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 11
  store ptr %13, ptr %14, align 8, !tbaa !196
  %15 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 6
  store i32 3, ptr %15, align 8, !tbaa !558
  %16 = tail call ptr @AllocPartition(i32 noundef 3) #47
  %17 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 9
  store ptr %16, ptr %17, align 8, !tbaa !214
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @report(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca [255 x i8], align 16
  %5 = alloca [4 x [4 x i8]], align 16
  %6 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 255, ptr nonnull %4) #48
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #48
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %5, ptr noundef nonnull align 16 dereferenceable(16) @__const.report.yuv_formats, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #48
  %7 = load ptr, ptr @input, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.inp_par, ptr %7, i64 0, i32 7
  %9 = load i32, ptr %8, align 4, !tbaa !573
  %10 = icmp eq i32 %9, 0
  %11 = load ptr, ptr @stdout, align 8, !tbaa !13
  br i1 %10, label %12, label %29

12:                                               ; preds = %3
  %13 = tail call i64 @fwrite(ptr nonnull @.str.40, i64 75, i64 1, ptr %11)
  %14 = load ptr, ptr @stdout, align 8, !tbaa !13
  %15 = getelementptr inbounds %struct.snr_par, ptr %2, i64 0, i32 7
  %16 = load float, ptr %15, align 4, !tbaa !695
  %17 = fpext float %16 to double
  %18 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %14, ptr noundef nonnull @.str.41, double noundef %17) #47
  %19 = load ptr, ptr @stdout, align 8, !tbaa !13
  %20 = getelementptr inbounds %struct.snr_par, ptr %2, i64 0, i32 8
  %21 = load float, ptr %20, align 4, !tbaa !696
  %22 = fpext float %21 to double
  %23 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %19, ptr noundef nonnull @.str.42, double noundef %22) #47
  %24 = load ptr, ptr @stdout, align 8, !tbaa !13
  %25 = getelementptr inbounds %struct.snr_par, ptr %2, i64 0, i32 9
  %26 = load float, ptr %25, align 4, !tbaa !659
  %27 = fpext float %26 to double
  %28 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %24, ptr noundef nonnull @.str.43, double noundef %27) #47
  br label %31

29:                                               ; preds = %3
  %30 = tail call i64 @fwrite(ptr nonnull @.str.47, i64 76, i64 1, ptr %11)
  br label %31

31:                                               ; preds = %29, %12
  %32 = load ptr, ptr @stdout, align 8, !tbaa !13
  %33 = tail call i64 @fwrite(ptr nonnull @.str.18.109, i64 75, i64 1, ptr %32)
  %34 = load ptr, ptr @stdout, align 8, !tbaa !13
  %35 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %34, ptr noundef nonnull @.str.44, ptr noundef nonnull @.str.45, ptr noundef nonnull @.str.15.106) #47
  %36 = load ptr, ptr @stdout, align 8, !tbaa !13
  %37 = tail call i32 @fputc(i32 10, ptr %36)
  store i64 27977503644020588, ptr %4, align 16
  %38 = call noalias ptr @fopen64(ptr noundef nonnull %4, ptr noundef nonnull @.str.32.119) #47
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %51

40:                                               ; preds = %31
  %41 = call noalias ptr @fopen64(ptr noundef nonnull %4, ptr noundef nonnull @.str.48) #47
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.49, ptr noundef nonnull %4) #46
  call void @error(ptr noundef nonnull @errortext, i32 noundef 500) #46
  br label %54

45:                                               ; preds = %40
  %46 = tail call i64 @fwrite(ptr nonnull @.str.50, i64 117, i64 1, ptr nonnull %41)
  %47 = tail call i64 @fwrite(ptr nonnull @.str.51, i64 93, i64 1, ptr nonnull %41)
  %48 = tail call i64 @fwrite(ptr nonnull @.str.52, i64 118, i64 1, ptr nonnull %41)
  %49 = tail call i64 @fwrite(ptr nonnull @.str.53, i64 118, i64 1, ptr nonnull %41)
  %50 = tail call i64 @fwrite(ptr nonnull @.str.50, i64 117, i64 1, ptr nonnull %41)
  br label %54

51:                                               ; preds = %31
  %52 = tail call i32 @fclose(ptr noundef nonnull %38) #47
  %53 = call noalias ptr @fopen64(ptr noundef nonnull %4, ptr noundef nonnull @.str.48) #47
  br label %54

54:                                               ; preds = %51, %45, %43
  %55 = phi ptr [ null, %43 ], [ %41, %45 ], [ %53, %51 ]
  %56 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.54, ptr noundef nonnull @.str.15.106, ptr noundef nonnull @.str.16.107) #47
  %57 = call i64 @time(ptr noundef null) #46
  store i64 %57, ptr %6, align 8, !tbaa !692
  %58 = call i64 @time(ptr noundef nonnull %6) #46
  %59 = call ptr @localtime(ptr noundef nonnull %6) #46
  %60 = call i64 @strftime(ptr noundef nonnull %4, i64 noundef 255, ptr noundef nonnull @.str.55, ptr noundef %59) #46
  %61 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.56, ptr noundef nonnull %4) #47
  %62 = call i64 @strftime(ptr noundef nonnull %4, i64 noundef 255, ptr noundef nonnull @.str.57, ptr noundef %59) #46
  %63 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.56, ptr noundef nonnull %4) #47
  %64 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.58.134, ptr noundef %0) #47
  %65 = load i32, ptr %1, align 8, !tbaa !569
  %66 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.59.135, i32 noundef %65) #47
  %67 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 11
  %68 = load i32, ptr %67, align 8, !tbaa !337
  %69 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 12
  %70 = load i32, ptr %69, align 4, !tbaa !338
  %71 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.60.136, i32 noundef %68, i32 noundef %70) #47
  %72 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 111
  %73 = load i32, ptr %72, align 4, !tbaa !697
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [4 x [4 x i8]], ptr %5, i64 0, i64 %74
  %76 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.61.137, ptr noundef nonnull %75) #47
  %77 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %78 = icmp eq ptr %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %54
  %80 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %77, i64 0, i32 3
  %81 = load i32, ptr %80, align 4, !tbaa !490
  %82 = icmp eq i32 %81, 0
  %83 = select i1 %82, ptr @.str.62.138, ptr @.str.63.139
  %84 = call i64 @fwrite(ptr nonnull %83, i64 7, i64 1, ptr %55)
  br label %85

85:                                               ; preds = %79, %54
  %86 = getelementptr inbounds %struct.snr_par, ptr %2, i64 0, i32 4
  %87 = load float, ptr %86, align 4, !tbaa !698
  %88 = fpext float %87 to double
  %89 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.64.140, double noundef %88) #47
  %90 = getelementptr inbounds %struct.snr_par, ptr %2, i64 0, i32 5
  %91 = load float, ptr %90, align 4, !tbaa !699
  %92 = fpext float %91 to double
  %93 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.64.140, double noundef %92) #47
  %94 = getelementptr inbounds %struct.snr_par, ptr %2, i64 0, i32 6
  %95 = load float, ptr %94, align 4, !tbaa !658
  %96 = fpext float %95 to double
  %97 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.64.140, double noundef %96) #47
  %98 = getelementptr inbounds %struct.snr_par, ptr %2, i64 0, i32 7
  %99 = load float, ptr %98, align 4, !tbaa !695
  %100 = fpext float %99 to double
  %101 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.64.140, double noundef %100) #47
  %102 = getelementptr inbounds %struct.snr_par, ptr %2, i64 0, i32 8
  %103 = load float, ptr %102, align 4, !tbaa !696
  %104 = fpext float %103 to double
  %105 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.64.140, double noundef %104) #47
  %106 = getelementptr inbounds %struct.snr_par, ptr %2, i64 0, i32 9
  %107 = load float, ptr %106, align 4, !tbaa !659
  %108 = fpext float %107 to double
  %109 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef nonnull @.str.65.141, double noundef %108) #47
  %110 = call i32 @fclose(ptr noundef %55) #47
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(12) %4, ptr noundef nonnull align 1 dereferenceable(12) @.str.66.142, i64 12, i1 false)
  %111 = call noalias ptr @fopen64(ptr noundef nonnull %4, ptr noundef nonnull @.str.48) #47
  %112 = load i32, ptr %1, align 8, !tbaa !569
  %113 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 6
  %114 = load i32, ptr %113, align 4, !tbaa !43
  %115 = load float, ptr %86, align 4, !tbaa !698
  %116 = fpext float %115 to double
  %117 = load float, ptr %90, align 4, !tbaa !699
  %118 = fpext float %117 to double
  %119 = load float, ptr %94, align 4, !tbaa !658
  %120 = fpext float %119 to double
  %121 = load float, ptr %98, align 4, !tbaa !695
  %122 = fpext float %121 to double
  %123 = load float, ptr %102, align 4, !tbaa !696
  %124 = fpext float %123 to double
  %125 = load float, ptr %106, align 4, !tbaa !659
  %126 = fpext float %125 to double
  %127 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %111, ptr noundef nonnull @.str.67.143, i32 noundef %112, i32 noundef 0, i32 noundef %114, double noundef %116, double noundef %118, double noundef %120, i32 noundef 0, double noundef 0.000000e+00, double noundef 0.000000e+00, double noundef 0.000000e+00, i32 noundef 0, double noundef %122, double noundef %124, double noundef %126, i32 noundef 0) #47
  %128 = call i32 @fclose(ptr noundef %111) #47
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #48
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #48
  call void @llvm.lifetime.end.p0(i64 255, ptr nonnull %4) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_slice(ptr nocapture readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 38
  %4 = load ptr, ptr %3, align 8, !tbaa !165
  %5 = getelementptr inbounds %struct.Slice, ptr %4, i64 0, i32 9
  %6 = load ptr, ptr %5, align 8, !tbaa !214
  tail call void @FreePartition(ptr noundef %6, i32 noundef 3) #47
  %7 = getelementptr inbounds %struct.Slice, ptr %4, i64 0, i32 10
  %8 = load ptr, ptr %7, align 8, !tbaa !166
  tail call void @delete_contexts_MotionInfo(ptr noundef %8) #46
  %9 = getelementptr inbounds %struct.Slice, ptr %4, i64 0, i32 11
  %10 = load ptr, ptr %9, align 8, !tbaa !196
  tail call void @delete_contexts_TextureInfo(ptr noundef %10) #46
  %11 = load ptr, ptr %3, align 8, !tbaa !165
  tail call void @free(ptr noundef %11) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_global_buffers() #0 {
  %1 = load ptr, ptr @imgY_ref, align 8, !tbaa !13
  tail call void @free_mem2Dpel(ptr noundef %1) #46
  %2 = load ptr, ptr @imgUV_ref, align 8, !tbaa !13
  %3 = icmp eq ptr %2, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %0
  tail call void @free_mem3Dpel(ptr noundef nonnull %2, i32 noundef 2) #46
  br label %5

5:                                                ; preds = %4, %0
  %6 = load ptr, ptr @img, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 32
  %8 = load ptr, ptr %7, align 8, !tbaa !617
  %9 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 93
  %10 = load i32, ptr %9, align 4, !tbaa !690
  tail call void @free_mem3Dint(ptr noundef %8, i32 noundef %10) #46
  %11 = load ptr, ptr @img, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.img_par, ptr %11, i64 0, i32 33
  %13 = load ptr, ptr %12, align 8, !tbaa !700
  tail call void @free_mem2Dint(ptr noundef %13) #46
  %14 = load ptr, ptr @img, align 8, !tbaa !13
  %15 = getelementptr inbounds %struct.img_par, ptr %14, i64 0, i32 39
  %16 = load ptr, ptr %15, align 8, !tbaa !84
  %17 = icmp eq ptr %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %5
  tail call void @free(ptr noundef nonnull %16) #46
  br label %19

19:                                               ; preds = %18, %5
  %20 = load ptr, ptr @PicPos, align 8, !tbaa !13
  tail call void @free_mem2Dint(ptr noundef %20) #46
  %21 = load ptr, ptr @img, align 8, !tbaa !13
  %22 = getelementptr inbounds %struct.img_par, ptr %21, i64 0, i32 4
  %23 = load ptr, ptr %22, align 8, !tbaa !56
  tail call void @free(ptr noundef %23) #46
  %24 = load ptr, ptr @img, align 8, !tbaa !13
  %25 = getelementptr inbounds %struct.img_par, ptr %24, i64 0, i32 30
  %26 = load ptr, ptr %25, align 8, !tbaa !50
  tail call void @free_mem2D(ptr noundef %26) #46
  %27 = load ptr, ptr @img, align 8, !tbaa !13
  %28 = getelementptr inbounds %struct.img_par, ptr %27, i64 0, i32 77
  %29 = load ptr, ptr %28, align 8, !tbaa !483
  tail call void @free_mem3Dint(ptr noundef %29, i32 noundef 2) #46
  %30 = load ptr, ptr @img, align 8, !tbaa !13
  %31 = getelementptr inbounds %struct.img_par, ptr %30, i64 0, i32 78
  %32 = load ptr, ptr %31, align 8, !tbaa !484
  tail call void @free_mem3Dint(ptr noundef %32, i32 noundef 6) #46
  %33 = load ptr, ptr @img, align 8, !tbaa !13
  %34 = getelementptr inbounds %struct.img_par, ptr %33, i64 0, i32 79
  %35 = load ptr, ptr %34, align 8, !tbaa !582
  tail call void @free_mem4Dint(ptr noundef %35, i32 noundef 6, i32 noundef 32) #46
  %36 = load ptr, ptr @img, align 8, !tbaa !13
  %37 = getelementptr inbounds %struct.img_par, ptr %36, i64 0, i32 107
  %38 = load i32, ptr %37, align 4, !tbaa !77
  %39 = getelementptr inbounds %struct.img_par, ptr %36, i64 0, i32 108
  %40 = load i32, ptr %39, align 8, !tbaa !103
  %41 = getelementptr inbounds %struct.img_par, ptr %36, i64 0, i32 31
  %42 = load ptr, ptr %41, align 8, !tbaa !652
  %43 = tail call i32 @llvm.smax.i32(i32 %38, i32 %40)
  %44 = xor i32 %43, -1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, ptr %42, i64 %45
  tail call void @free(ptr noundef %46) #46
  store i32 0, ptr @global_init_done, align 4, !tbaa !18
  ret void
}

; Function Attrs: optsize
declare i32 @close(i32 noundef) local_unnamed_addr #34

; Function Attrs: nounwind optsize uwtable
define internal void @FreePartition(ptr nocapture noundef %0, i32 noundef %1) #0 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %6

6:                                                ; preds = %6, %4
  %7 = phi i64 [ 0, %4 ], [ %13, %6 ]
  %8 = getelementptr inbounds %struct.datapartition, ptr %0, i64 %7
  %9 = load ptr, ptr %8, align 8, !tbaa !448
  %10 = getelementptr inbounds %struct.Bitstream, ptr %9, i64 0, i32 4
  %11 = load ptr, ptr %10, align 8, !tbaa !218
  tail call void @free(ptr noundef %11) #46
  %12 = load ptr, ptr %8, align 8, !tbaa !448
  tail call void @free(ptr noundef %12) #46
  %13 = add nuw nsw i64 %7, 1
  %14 = icmp eq i64 %13, %5
  br i1 %14, label %15, label %6, !llvm.loop !701

15:                                               ; preds = %6, %2
  tail call void @free(ptr noundef %0) #46
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @fputc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #4

; Function Attrs: nounwind optsize
declare ptr @localtime(ptr noundef) local_unnamed_addr #35

; Function Attrs: nounwind optsize
declare i64 @strftime(ptr noundef, i64 noundef, ptr noundef, ptr noundef) local_unnamed_addr #35

; Function Attrs: nounwind optsize uwtable
define internal noalias ptr @AllocPartition(i32 noundef %0) #0 {
  %2 = sext i32 %0 to i64
  %3 = tail call noalias ptr @calloc(i64 noundef %2, i64 noundef 56) #45
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(60) @errortext, ptr noundef nonnull align 1 dereferenceable(60) @.str.68.145, i64 60, i1 false)
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %6

6:                                                ; preds = %5, %1
  %7 = icmp sgt i32 %0, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %6
  %9 = zext i32 %0 to i64
  br label %10

10:                                               ; preds = %21, %8
  %11 = phi i64 [ 0, %8 ], [ %22, %21 ]
  %12 = getelementptr inbounds %struct.datapartition, ptr %3, i64 %11
  %13 = tail call noalias dereferenceable_or_null(32) ptr @calloc(i64 noundef 1, i64 noundef 32) #45
  store ptr %13, ptr %12, align 8, !tbaa !448
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(55) @errortext, ptr noundef nonnull align 1 dereferenceable(55) @.str.69.146, i64 55, i1 false)
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %16

16:                                               ; preds = %15, %10
  %17 = tail call noalias dereferenceable_or_null(8000000) ptr @calloc(i64 noundef 8000000, i64 noundef 1) #45
  %18 = getelementptr inbounds %struct.Bitstream, ptr %13, i64 0, i32 4
  store ptr %17, ptr %18, align 8, !tbaa !218
  %19 = icmp eq ptr %17, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(58) @errortext, ptr noundef nonnull align 1 dereferenceable(58) @.str.70.147, i64 58, i1 false)
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %21

21:                                               ; preds = %20, %16
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp eq i64 %22, %9
  br i1 %23, label %24, label %10, !llvm.loop !702

24:                                               ; preds = %21, %6
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @init_frext(ptr nocapture noundef %0) #21 {
  %2 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 101
  %3 = load i32, ptr %2, align 4, !tbaa !703
  %4 = mul i32 %3, 6
  %5 = add i32 %4, -48
  %6 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 103
  store i32 %5, ptr %6, align 4, !tbaa !117
  %7 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 102
  %8 = load i32, ptr %7, align 8, !tbaa !704
  %9 = icmp sgt i32 %3, %8
  %10 = load ptr, ptr @active_sps, align 8, !tbaa !13
  br i1 %9, label %16, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %10, i64 0, i32 8
  %13 = load i32, ptr %12, align 4, !tbaa !480
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %14, i32 %3, i32 %8
  br label %16

16:                                               ; preds = %11, %1
  %17 = phi i32 [ %3, %1 ], [ %15, %11 ]
  %18 = icmp sgt i32 %17, 8
  %19 = select i1 %18, i32 16, i32 8
  %20 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 100
  store i32 %19, ptr %20, align 8, !tbaa !641
  %21 = add nsw i32 %3, -1
  %22 = shl nuw i32 1, %21
  %23 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 105
  store i32 %22, ptr %23, align 4, !tbaa !61
  %24 = shl nsw i32 -1, %3
  %25 = xor i32 %24, -1
  %26 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 107
  store i32 %25, ptr %26, align 4, !tbaa !77
  %27 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 119
  %28 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 119, i64 0, i64 1
  store i32 16, ptr %28, align 4, !tbaa !18
  store i32 16, ptr %27, align 4, !tbaa !18
  %29 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %10, i64 0, i32 8
  %30 = load i32, ptr %29, align 4, !tbaa !480
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %55, label %32

32:                                               ; preds = %16
  %33 = mul i32 %8, 6
  %34 = add i32 %33, -48
  %35 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 104
  store i32 %34, ptr %35, align 8, !tbaa !705
  %36 = add nsw i32 %8, -1
  %37 = shl nuw i32 1, %36
  %38 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 106
  store i32 %37, ptr %38, align 8, !tbaa !94
  %39 = shl nsw i32 -1, %8
  %40 = xor i32 %39, -1
  %41 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 108
  store i32 %40, ptr %41, align 8, !tbaa !103
  %42 = shl nuw i32 1, %30
  %43 = and i32 %42, -2
  %44 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 113
  store i32 %43, ptr %44, align 4, !tbaa !93
  %45 = shl i32 %43, 1
  %46 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 114
  store i32 %45, ptr %46, align 8, !tbaa !706
  %47 = icmp ult i32 %30, 3
  %48 = select i1 %47, i32 8, i32 16
  %49 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 119, i64 2
  store i32 %48, ptr %49, align 4, !tbaa !18
  %50 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 119, i64 1
  store i32 %48, ptr %50, align 4, !tbaa !18
  %51 = load i32, ptr %29, align 4, !tbaa !480
  %52 = and i32 %51, -2
  %53 = icmp eq i32 %52, 2
  %54 = select i1 %53, i32 16, i32 8
  br label %62

55:                                               ; preds = %16
  %56 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 104
  store i32 0, ptr %56, align 8, !tbaa !705
  %57 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 108
  store i32 0, ptr %57, align 8, !tbaa !103
  %58 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 113
  store i32 0, ptr %58, align 4, !tbaa !93
  %59 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 114
  store i32 0, ptr %59, align 8, !tbaa !706
  %60 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 119, i64 2
  store i32 0, ptr %60, align 4, !tbaa !18
  %61 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 119, i64 1
  store i32 0, ptr %61, align 4, !tbaa !18
  br label %62

62:                                               ; preds = %55, %32
  %63 = phi i32 [ 0, %55 ], [ %48, %32 ]
  %64 = phi i32 [ 0, %55 ], [ %54, %32 ]
  %65 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 115
  store i32 %63, ptr %65, align 4
  %66 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 116
  store i32 %64, ptr %66, align 8
  %67 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 119, i64 2, i64 1
  store i32 %64, ptr %67, align 4
  %68 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 119, i64 1, i64 1
  store i32 %64, ptr %68, align 4
  %69 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 120
  %70 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 120, i64 0, i64 1
  store i32 4, ptr %70, align 4, !tbaa !18
  store i32 4, ptr %69, align 4, !tbaa !18
  %71 = lshr exact i32 %63, 2
  %72 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 120, i64 2
  store i32 %71, ptr %72, align 4, !tbaa !18
  %73 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 120, i64 1
  store i32 %71, ptr %73, align 4, !tbaa !18
  %74 = lshr exact i32 %64, 2
  %75 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 120, i64 2, i64 1
  store i32 %74, ptr %75, align 4, !tbaa !18
  %76 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 120, i64 1, i64 1
  store i32 %74, ptr %76, align 4, !tbaa !18
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @init_global_buffers() #0 {
  %1 = load i32, ptr @global_init_done, align 4, !tbaa !18
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %4, label %3

3:                                                ; preds = %0
  tail call void @free_global_buffers() #47
  br label %4

4:                                                ; preds = %3, %0
  %5 = load ptr, ptr @img, align 8, !tbaa !13
  %6 = getelementptr inbounds %struct.img_par, ptr %5, i64 0, i32 12
  %7 = load i32, ptr %6, align 4, !tbaa !338
  %8 = getelementptr inbounds %struct.img_par, ptr %5, i64 0, i32 11
  %9 = load i32, ptr %8, align 8, !tbaa !337
  %10 = tail call i32 @get_mem2Dpel(ptr noundef nonnull @imgY_ref, i32 noundef %7, i32 noundef %9) #46
  %11 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %11, i64 0, i32 8
  %13 = load i32, ptr %12, align 4, !tbaa !480
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %4
  %16 = load ptr, ptr @img, align 8, !tbaa !13
  %17 = getelementptr inbounds %struct.img_par, ptr %16, i64 0, i32 15
  %18 = load i32, ptr %17, align 8, !tbaa !340
  %19 = getelementptr inbounds %struct.img_par, ptr %16, i64 0, i32 13
  %20 = load i32, ptr %19, align 8, !tbaa !339
  %21 = tail call i32 @get_mem3Dpel(ptr noundef nonnull @imgUV_ref, i32 noundef 2, i32 noundef %18, i32 noundef %20) #46
  %22 = add nsw i32 %21, %10
  br label %24

23:                                               ; preds = %4
  store ptr null, ptr @imgUV_ref, align 8, !tbaa !13
  br label %24

24:                                               ; preds = %23, %15
  %25 = phi i32 [ %22, %15 ], [ %10, %23 ]
  %26 = load ptr, ptr @img, align 8, !tbaa !13
  %27 = getelementptr inbounds %struct.img_par, ptr %26, i64 0, i32 92
  %28 = load i32, ptr %27, align 8, !tbaa !501
  %29 = zext i32 %28 to i64
  %30 = tail call noalias ptr @calloc(i64 noundef %29, i64 noundef 408) #45
  %31 = getelementptr inbounds %struct.img_par, ptr %26, i64 0, i32 39
  store ptr %30, ptr %31, align 8, !tbaa !84
  %32 = icmp eq ptr %30, null
  br i1 %32, label %33, label %38

33:                                               ; preds = %24
  tail call void @no_mem_exit(ptr noundef nonnull @.str.72.148) #46
  %34 = load ptr, ptr @img, align 8, !tbaa !13
  %35 = getelementptr inbounds %struct.img_par, ptr %34, i64 0, i32 92
  %36 = load i32, ptr %35, align 8, !tbaa !501
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %33, %24
  %39 = phi i64 [ %37, %33 ], [ %29, %24 ]
  %40 = phi i32 [ %36, %33 ], [ %28, %24 ]
  %41 = phi ptr [ %34, %33 ], [ %26, %24 ]
  %42 = tail call noalias ptr @calloc(i64 noundef %39, i64 noundef 4) #45
  %43 = getelementptr inbounds %struct.img_par, ptr %41, i64 0, i32 4
  store ptr %42, ptr %43, align 8, !tbaa !56
  %44 = icmp eq ptr %42, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %38
  tail call void @no_mem_exit(ptr noundef nonnull @.str.73.149) #46
  %46 = load ptr, ptr @img, align 8, !tbaa !13
  %47 = getelementptr inbounds %struct.img_par, ptr %46, i64 0, i32 92
  %48 = load i32, ptr %47, align 8, !tbaa !501
  br label %49

49:                                               ; preds = %45, %38
  %50 = phi i32 [ %48, %45 ], [ %40, %38 ]
  %51 = add i32 %50, 1
  %52 = tail call i32 @get_mem2Dint(ptr noundef nonnull @PicPos, i32 noundef %51, i32 noundef 2) #46
  %53 = load ptr, ptr @img, align 8, !tbaa !13
  %54 = getelementptr inbounds %struct.img_par, ptr %53, i64 0, i32 92
  %55 = load i32, ptr %54, align 8, !tbaa !501
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %74, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds %struct.img_par, ptr %53, i64 0, i32 87
  %59 = load ptr, ptr @PicPos, align 8, !tbaa !13
  br label %60

60:                                               ; preds = %60, %57
  %61 = phi i64 [ 0, %57 ], [ %70, %60 ]
  %62 = load i32, ptr %58, align 4, !tbaa !422
  %63 = trunc i64 %61 to i32
  %64 = urem i32 %63, %62
  %65 = getelementptr inbounds ptr, ptr %59, i64 %61
  %66 = load ptr, ptr %65, align 8, !tbaa !13
  store i32 %64, ptr %66, align 4, !tbaa !18
  %67 = load i32, ptr %58, align 4, !tbaa !422
  %68 = udiv i32 %63, %67
  %69 = getelementptr inbounds i32, ptr %66, i64 1
  store i32 %68, ptr %69, align 4, !tbaa !18
  %70 = add nuw nsw i64 %61, 1
  %71 = load i32, ptr %54, align 8, !tbaa !501
  %72 = sext i32 %71 to i64
  %73 = icmp slt i64 %61, %72
  br i1 %73, label %60, label %74, !llvm.loop !707

74:                                               ; preds = %60, %49
  %75 = getelementptr inbounds %struct.img_par, ptr %53, i64 0, i32 30
  %76 = getelementptr inbounds %struct.img_par, ptr %53, i64 0, i32 89
  %77 = load i32, ptr %76, align 4, !tbaa !499
  %78 = shl i32 %77, 2
  %79 = getelementptr inbounds %struct.img_par, ptr %53, i64 0, i32 87
  %80 = load i32, ptr %79, align 4, !tbaa !422
  %81 = shl i32 %80, 2
  %82 = tail call i32 @get_mem2D(ptr noundef nonnull %75, i32 noundef %78, i32 noundef %81) #46
  %83 = load ptr, ptr @img, align 8, !tbaa !13
  %84 = getelementptr inbounds %struct.img_par, ptr %83, i64 0, i32 77
  %85 = tail call i32 @get_mem3Dint(ptr noundef nonnull %84, i32 noundef 2, i32 noundef 32, i32 noundef 3) #46
  %86 = load ptr, ptr @img, align 8, !tbaa !13
  %87 = getelementptr inbounds %struct.img_par, ptr %86, i64 0, i32 78
  %88 = tail call i32 @get_mem3Dint(ptr noundef nonnull %87, i32 noundef 6, i32 noundef 32, i32 noundef 3) #46
  %89 = load ptr, ptr @img, align 8, !tbaa !13
  %90 = getelementptr inbounds %struct.img_par, ptr %89, i64 0, i32 79
  %91 = tail call i32 @get_mem4Dint(ptr noundef nonnull %90, i32 noundef 6, i32 noundef 32, i32 noundef 32, i32 noundef 3) #46
  %92 = load ptr, ptr @img, align 8, !tbaa !13
  %93 = getelementptr inbounds %struct.img_par, ptr %92, i64 0, i32 32
  %94 = getelementptr inbounds %struct.img_par, ptr %92, i64 0, i32 92
  %95 = load i32, ptr %94, align 8, !tbaa !501
  %96 = getelementptr inbounds %struct.img_par, ptr %92, i64 0, i32 113
  %97 = load i32, ptr %96, align 4, !tbaa !93
  %98 = add nsw i32 %97, 4
  %99 = tail call i32 @get_mem3Dint(ptr noundef nonnull %93, i32 noundef %95, i32 noundef 4, i32 noundef %98) #46
  %100 = load ptr, ptr @img, align 8, !tbaa !13
  %101 = getelementptr inbounds %struct.img_par, ptr %100, i64 0, i32 33
  %102 = getelementptr inbounds %struct.img_par, ptr %100, i64 0, i32 89
  %103 = load i32, ptr %102, align 4, !tbaa !499
  %104 = getelementptr inbounds %struct.img_par, ptr %100, i64 0, i32 87
  %105 = load i32, ptr %104, align 4, !tbaa !422
  %106 = tail call i32 @get_mem2Dint(ptr noundef nonnull %101, i32 noundef %103, i32 noundef %105) #46
  %107 = load ptr, ptr @img, align 8, !tbaa !13
  %108 = getelementptr inbounds %struct.img_par, ptr %107, i64 0, i32 107
  %109 = load i32, ptr %108, align 4, !tbaa !77
  %110 = getelementptr inbounds %struct.img_par, ptr %107, i64 0, i32 108
  %111 = load i32, ptr %110, align 8, !tbaa !103
  %112 = icmp sgt i32 %109, %111
  br i1 %112, label %118, label %113

113:                                              ; preds = %74
  %114 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %115 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %114, i64 0, i32 8
  %116 = load i32, ptr %115, align 4, !tbaa !480
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %113, %74
  br label %119

119:                                              ; preds = %118, %113
  %120 = phi i32 [ %109, %118 ], [ %111, %113 ]
  %121 = shl i32 %120, 1
  %122 = add i32 %121, 2
  %123 = sext i32 %122 to i64
  %124 = tail call noalias ptr @calloc(i64 noundef %123, i64 noundef 4) #45
  %125 = getelementptr inbounds %struct.img_par, ptr %107, i64 0, i32 31
  store ptr %124, ptr %125, align 8, !tbaa !652
  %126 = icmp eq ptr %124, null
  br i1 %126, label %127, label %131

127:                                              ; preds = %119
  tail call void @no_mem_exit(ptr noundef nonnull @.str.74.150) #46
  %128 = load ptr, ptr @img, align 8, !tbaa !13
  %129 = getelementptr inbounds %struct.img_par, ptr %128, i64 0, i32 31
  %130 = load ptr, ptr %129, align 8, !tbaa !652
  br label %131

131:                                              ; preds = %127, %119
  %132 = phi ptr [ %130, %127 ], [ %124, %119 ]
  %133 = phi ptr [ %128, %127 ], [ %107, %119 ]
  %134 = ashr exact i32 %122, 1
  %135 = getelementptr inbounds %struct.img_par, ptr %133, i64 0, i32 31
  %136 = sext i32 %134 to i64
  %137 = getelementptr inbounds i32, ptr %132, i64 %136
  store ptr %137, ptr %135, align 8, !tbaa !652
  %138 = icmp sgt i32 %122, 0
  br i1 %138, label %139, label %151

139:                                              ; preds = %131
  %140 = tail call i32 @llvm.smax.i32(i32 %134, i32 1)
  %141 = zext i32 %140 to i64
  br label %142

142:                                              ; preds = %142, %139
  %143 = phi i64 [ 0, %139 ], [ %149, %142 ]
  %144 = mul nsw i64 %143, %143
  %145 = sub nsw i64 0, %143
  %146 = getelementptr inbounds i32, ptr %137, i64 %145
  %147 = trunc i64 %144 to i32
  store i32 %147, ptr %146, align 4, !tbaa !18
  %148 = getelementptr inbounds i32, ptr %137, i64 %143
  store i32 %147, ptr %148, align 4, !tbaa !18
  %149 = add nuw nsw i64 %143, 1
  %150 = icmp eq i64 %149, %141
  br i1 %150, label %151, label %142, !llvm.loop !708

151:                                              ; preds = %142, %131
  %152 = add nsw i32 %52, %25
  %153 = add nsw i32 %152, %82
  %154 = add nsw i32 %153, %85
  %155 = add nsw i32 %154, %88
  %156 = add nsw i32 %155, %91
  %157 = add nsw i32 %156, %99
  %158 = add nsw i32 %157, %106
  store i32 1, ptr @global_init_done, align 4, !tbaa !18
  %159 = getelementptr inbounds %struct.img_par, ptr %133, i64 0, i32 92
  %160 = load i32, ptr %159, align 8, !tbaa !501
  %161 = getelementptr inbounds %struct.img_par, ptr %133, i64 0, i32 93
  store i32 %160, ptr %161, align 4, !tbaa !690
  ret i32 %158
}

; Function Attrs: nounwind optsize uwtable
define internal void @DeblockPicture(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 31
  %4 = load i32, ptr %3, align 8, !tbaa !362
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %6, %2
  %7 = phi i32 [ %8, %6 ], [ 0, %2 ]
  tail call void @DeblockMb(ptr noundef %0, ptr noundef nonnull %1, i32 noundef %7) #47
  %8 = add nuw i32 %7, 1
  %9 = load i32, ptr %3, align 8, !tbaa !362
  %10 = icmp ult i32 %8, %9
  br i1 %10, label %6, label %11, !llvm.loop !709

11:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @DeblockMb(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca [16 x i8], align 16
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [4 x i32], align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #48
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #48
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #48
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #48
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %7, ptr noundef nonnull align 16 dereferenceable(16) @__const.DeblockMb.filterNon8x8LumaEdgesFlag, i64 16, i1 false)
  %8 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 32
  %9 = load ptr, ptr %8, align 8, !tbaa !47
  %10 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 33
  %11 = load ptr, ptr %10, align 8, !tbaa !82
  %12 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 45
  store i32 1, ptr %12, align 4, !tbaa !710
  call void @get_mb_pos(i32 noundef %2, ptr noundef nonnull %5, ptr noundef nonnull %6, i32 noundef 0) #46
  %13 = load i32, ptr %5, align 4, !tbaa !18
  %14 = icmp ne i32 %13, 0
  %15 = zext i1 %14 to i32
  %16 = load i32, ptr %6, align 4
  %17 = icmp ne i32 %16, 0
  %18 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %19 = load ptr, ptr %18, align 8, !tbaa !84
  %20 = sext i32 %2 to i64
  %21 = getelementptr inbounds %struct.macroblock, ptr %19, i64 %20, i32 30
  %22 = load i32, ptr %21, align 4, !tbaa !194
  %23 = icmp eq i32 %22, 0
  %24 = zext i1 %23 to i32
  %25 = getelementptr inbounds [4 x i32], ptr %7, i64 0, i64 3
  store i32 %24, ptr %25, align 4, !tbaa !18
  %26 = getelementptr inbounds [4 x i32], ptr %7, i64 0, i64 1
  store i32 %24, ptr %26, align 4, !tbaa !18
  %27 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 29
  %28 = load i32, ptr %27, align 8, !tbaa !564
  %29 = icmp ne i32 %28, 0
  %30 = icmp eq i32 %16, 16
  %31 = select i1 %29, i1 %30, i1 false
  br i1 %31, label %32, label %36

32:                                               ; preds = %3
  %33 = getelementptr inbounds %struct.macroblock, ptr %19, i64 %20, i32 20
  %34 = load i32, ptr %33, align 4, !tbaa !170
  %35 = icmp eq i32 %34, 0
  br label %36

36:                                               ; preds = %32, %3
  %37 = phi i1 [ %17, %3 ], [ %35, %32 ]
  %38 = load i32, ptr %1, align 8, !tbaa !570
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %36
  %41 = icmp eq i32 %28, 0
  br i1 %41, label %48, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %struct.macroblock, ptr %19, i64 %20, i32 20
  %44 = load i32, ptr %43, align 4, !tbaa !170
  %45 = freeze i32 %44
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %42, %36
  br label %48

48:                                               ; preds = %47, %42, %40
  %49 = phi i32 [ 2, %47 ], [ 4, %42 ], [ 4, %40 ]
  %50 = getelementptr inbounds %struct.macroblock, ptr %19, i64 %20, i32 16
  %51 = load i32, ptr %50, align 4, !tbaa !711
  switch i32 %51, label %67 [
    i32 1, label %161
    i32 2, label %52
  ]

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.macroblock, ptr %19, i64 %20, i32 26
  %54 = load i32, ptr %53, align 4, !tbaa !168
  %55 = icmp eq i32 %28, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.macroblock, ptr %19, i64 %20, i32 20
  %58 = load i32, ptr %57, align 4, !tbaa !170
  %59 = icmp ne i32 %58, 0
  %60 = and i32 %2, 1
  %61 = icmp eq i32 %60, 0
  %62 = or i1 %61, %59
  br i1 %62, label %63, label %67

63:                                               ; preds = %56, %52
  %64 = getelementptr inbounds %struct.macroblock, ptr %19, i64 %20, i32 27
  %65 = load i32, ptr %64, align 8, !tbaa !171
  %66 = icmp ne i32 %65, 0
  br label %67

67:                                               ; preds = %63, %56, %48
  %68 = phi i1 [ %66, %63 ], [ %37, %48 ], [ true, %56 ]
  %69 = phi i32 [ %54, %63 ], [ %15, %48 ], [ %54, %56 ]
  %70 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  store i32 %2, ptr %70, align 4, !tbaa !49
  call void @CheckAvailabilityOfNeighbors() #46
  %71 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 50
  %72 = getelementptr inbounds %struct.macroblock, ptr %19, i64 %20, i32 17
  %73 = getelementptr inbounds %struct.macroblock, ptr %19, i64 %20, i32 18
  %74 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 19
  %75 = icmp ne ptr %11, null
  %76 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 21
  %77 = getelementptr inbounds ptr, ptr %11, i64 1
  %78 = getelementptr inbounds %struct.macroblock, ptr %19, i64 %20, i32 20
  %79 = icmp ne i32 %69, 0
  br label %80

80:                                               ; preds = %160, %67
  %81 = phi i1 [ false, %67 ], [ true, %160 ]
  %82 = phi i1 [ true, %67 ], [ false, %160 ]
  %83 = phi i64 [ 0, %67 ], [ 1, %160 ]
  %84 = select i1 %81, i1 %68, i1 false
  br i1 %84, label %88, label %85

85:                                               ; preds = %80
  %86 = xor i1 %81, true
  %87 = select i1 %86, i1 %79, i1 false
  br label %88

88:                                               ; preds = %85, %80
  %89 = phi i1 [ %87, %85 ], [ true, %80 ]
  %90 = trunc i64 %83 to i32
  br label %91

91:                                               ; preds = %157, %88
  %92 = phi i64 [ 0, %88 ], [ %158, %157 ]
  %93 = icmp ne i64 %92, 0
  %94 = select i1 %93, i1 true, i1 %89
  br i1 %94, label %95, label %157

95:                                               ; preds = %91
  %96 = load i32, ptr %71, align 4, !tbaa !83
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [2 x [4 x [4 x i8]]], ptr @chroma_edge, i64 0, i64 %83, i64 %92, i64 %97
  %99 = load i8, ptr %98, align 1, !tbaa !14
  %100 = sext i8 %99 to i32
  %101 = trunc i64 %92 to i32
  call void @GetStrength(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %2, i32 noundef %90, i32 noundef %101, i32 noundef %49, ptr noundef nonnull %1) #47
  %102 = load i8, ptr %4, align 16, !tbaa !14
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %113

104:                                              ; preds = %104, %95
  %105 = phi i64 [ %107, %104 ], [ 1, %95 ]
  %106 = getelementptr inbounds [16 x i8], ptr %4, i64 0, i64 %105
  %107 = add nuw nsw i64 %105, 1
  %108 = load i8, ptr %106, align 1, !tbaa !14
  %109 = icmp ugt i64 %105, 14
  %110 = icmp ne i8 %108, 0
  %111 = select i1 %109, i1 true, i1 %110
  br i1 %111, label %112, label %104, !llvm.loop !712

112:                                              ; preds = %104
  %.lcssa = phi i1 [ %110, %104 ]
  br i1 %.lcssa, label %113, label %133

113:                                              ; preds = %112, %95
  %114 = getelementptr inbounds [4 x i32], ptr %7, i64 0, i64 %92
  %115 = load i32, ptr %114, align 4, !tbaa !18
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %113
  %118 = load i32, ptr %72, align 8, !tbaa !713
  %119 = load i32, ptr %73, align 4, !tbaa !714
  %120 = load i32, ptr %74, align 8, !tbaa !566
  call void @EdgeLoop(ptr noundef %9, ptr noundef nonnull %4, ptr noundef %0, i32 noundef %2, i32 noundef %118, i32 noundef %119, i32 noundef %90, i32 noundef %101, i32 noundef %120, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %1) #47
  br label %121

121:                                              ; preds = %117, %113
  %122 = icmp sgt i8 %99, -1
  %123 = select i1 %75, i1 %122, i1 false
  br i1 %123, label %124, label %133

124:                                              ; preds = %121
  %125 = load ptr, ptr %11, align 8, !tbaa !13
  %126 = load i32, ptr %72, align 8, !tbaa !713
  %127 = load i32, ptr %73, align 4, !tbaa !714
  %128 = load i32, ptr %76, align 8, !tbaa !311
  call void @EdgeLoop(ptr noundef %125, ptr noundef nonnull %4, ptr noundef %0, i32 noundef %2, i32 noundef %126, i32 noundef %127, i32 noundef %90, i32 noundef %100, i32 noundef %128, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %1) #47
  %129 = load ptr, ptr %77, align 8, !tbaa !13
  %130 = load i32, ptr %72, align 8, !tbaa !713
  %131 = load i32, ptr %73, align 4, !tbaa !714
  %132 = load i32, ptr %76, align 8, !tbaa !311
  call void @EdgeLoop(ptr noundef %129, ptr noundef nonnull %4, ptr noundef %0, i32 noundef %2, i32 noundef %130, i32 noundef %131, i32 noundef %90, i32 noundef %100, i32 noundef %132, i32 noundef 1, i32 noundef 1, ptr noundef nonnull %1) #47
  br label %133

133:                                              ; preds = %124, %121, %112
  %134 = or i1 %82, %93
  br i1 %134, label %157, label %135

135:                                              ; preds = %133
  %136 = load i32, ptr %78, align 4, !tbaa !170
  %137 = icmp eq i32 %136, 0
  %138 = load i8, ptr @mixedModeEdgeFlag, align 1
  %139 = icmp ne i8 %138, 0
  %140 = select i1 %137, i1 %139, i1 false
  br i1 %140, label %141, label %157

141:                                              ; preds = %135
  store i32 2, ptr %12, align 4, !tbaa !710
  call void @GetStrength(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %2, i32 noundef 1, i32 noundef 4, i32 noundef %49, ptr noundef nonnull %1) #47
  %142 = load i32, ptr %72, align 8, !tbaa !713
  %143 = load i32, ptr %73, align 4, !tbaa !714
  %144 = load i32, ptr %74, align 8, !tbaa !566
  call void @EdgeLoop(ptr noundef %9, ptr noundef nonnull %4, ptr noundef nonnull %0, i32 noundef %2, i32 noundef %142, i32 noundef %143, i32 noundef 1, i32 noundef 4, i32 noundef %144, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %1) #47
  %145 = icmp sgt i8 %99, -1
  %146 = select i1 %75, i1 %145, i1 false
  br i1 %146, label %147, label %156

147:                                              ; preds = %141
  %148 = load ptr, ptr %11, align 8, !tbaa !13
  %149 = load i32, ptr %72, align 8, !tbaa !713
  %150 = load i32, ptr %73, align 4, !tbaa !714
  %151 = load i32, ptr %76, align 8, !tbaa !311
  call void @EdgeLoop(ptr noundef %148, ptr noundef nonnull %4, ptr noundef nonnull %0, i32 noundef %2, i32 noundef %149, i32 noundef %150, i32 noundef 1, i32 noundef 4, i32 noundef %151, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %1) #47
  %152 = load ptr, ptr %77, align 8, !tbaa !13
  %153 = load i32, ptr %72, align 8, !tbaa !713
  %154 = load i32, ptr %73, align 4, !tbaa !714
  %155 = load i32, ptr %76, align 8, !tbaa !311
  call void @EdgeLoop(ptr noundef %152, ptr noundef nonnull %4, ptr noundef nonnull %0, i32 noundef %2, i32 noundef %153, i32 noundef %154, i32 noundef 1, i32 noundef 4, i32 noundef %155, i32 noundef 1, i32 noundef 1, ptr noundef nonnull %1) #47
  br label %156

156:                                              ; preds = %147, %141
  store i32 1, ptr %12, align 4, !tbaa !710
  br label %157

157:                                              ; preds = %156, %135, %133, %91
  %158 = add nuw nsw i64 %92, 1
  %159 = icmp eq i64 %158, 4
  br i1 %159, label %160, label %91, !llvm.loop !715

160:                                              ; preds = %157
  br i1 %82, label %80, label %161, !llvm.loop !716

161:                                              ; preds = %160, %48
  store i32 0, ptr %12, align 4, !tbaa !710
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #48
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @GetStrength(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, ptr nocapture noundef readonly %6) #0 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.pix_pos, align 4
  %11 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 39
  %12 = load ptr, ptr %11, align 8, !tbaa !371
  %13 = load ptr, ptr %12, align 8, !tbaa !13
  %14 = getelementptr inbounds ptr, ptr %12, i64 1
  %15 = load ptr, ptr %14, align 8, !tbaa !13
  %16 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 36
  %17 = load ptr, ptr %16, align 8, !tbaa !197
  %18 = load ptr, ptr %17, align 8, !tbaa !13
  %19 = getelementptr inbounds ptr, ptr %17, i64 1
  %20 = load ptr, ptr %19, align 8, !tbaa !13
  %21 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 37
  %22 = load ptr, ptr %21, align 8, !tbaa !717
  %23 = load ptr, ptr %22, align 8, !tbaa !13
  %24 = getelementptr inbounds ptr, ptr %22, i64 1
  %25 = load ptr, ptr %24, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #48
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #48
  %26 = add i32 %3, -1
  %27 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 39
  %28 = load ptr, ptr %27, align 8, !tbaa !84
  %29 = sext i32 %2 to i64
  %30 = icmp eq i32 %3, 0
  %31 = shl i32 %4, 2
  %32 = icmp slt i32 %4, 4
  %33 = select i1 %32, i32 %31, i32 1
  %34 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 2
  %35 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 3
  %36 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 1
  %37 = getelementptr inbounds %struct.macroblock, ptr %28, i64 %29, i32 20
  %38 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 45
  %39 = icmp eq i32 %4, 0
  %40 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 29
  %41 = getelementptr inbounds %struct.macroblock, ptr %28, i64 %29, i32 6
  %42 = getelementptr inbounds %struct.macroblock, ptr %28, i64 %29, i32 9
  %43 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 5
  %44 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 4
  br label %45

45:                                               ; preds = %363, %7
  %46 = phi i64 [ 0, %7 ], [ %364, %363 ]
  %47 = trunc i64 %46 to i32
  %48 = select i1 %30, i32 %31, i32 %47
  %49 = select i1 %30, i32 %47, i32 %33
  %50 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  %51 = add i32 %26, %48
  %52 = sub nsw i32 %49, %3
  call void %50(i32 noundef %2, i32 noundef %51, i32 noundef %52, i32 noundef 0, ptr noundef nonnull %10) #46
  %53 = load i32, ptr %34, align 4, !tbaa !188
  %54 = load i32, ptr %35, align 4, !tbaa !187
  %55 = load ptr, ptr %27, align 8, !tbaa !84
  %56 = load i32, ptr %36, align 4, !tbaa !57
  %57 = sext i32 %56 to i64
  %58 = load i32, ptr %37, align 4, !tbaa !170
  %59 = getelementptr inbounds %struct.macroblock, ptr %55, i64 %57, i32 20
  %60 = load i32, ptr %59, align 4, !tbaa !170
  %61 = icmp ne i32 %58, %60
  %62 = zext i1 %61 to i8
  store i8 %62, ptr @mixedModeEdgeFlag, align 1, !tbaa !14
  %63 = and i32 %49, -4
  %64 = ashr i32 %48, 2
  %65 = add nsw i32 %63, %64
  %66 = and i32 %54, -4
  %67 = ashr i32 %53, 2
  %68 = add nsw i32 %66, %67
  %69 = load i32, ptr %38, align 8, !tbaa !359
  %70 = add i32 %69, -3
  %71 = icmp ult i32 %70, 2
  br i1 %71, label %72, label %92

72:                                               ; preds = %45
  br i1 %39, label %73, label %89

73:                                               ; preds = %72
  %74 = load i32, ptr %40, align 8, !tbaa !564
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %73
  %77 = load i32, ptr %6, align 8, !tbaa !570
  %78 = icmp eq i32 %77, 0
  %79 = or i1 %78, %30
  br i1 %79, label %88, label %89

80:                                               ; preds = %73
  %81 = load i32, ptr %59, align 4, !tbaa !170
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %80
  %84 = load i32, ptr %37, align 4, !tbaa !170
  %85 = icmp eq i32 %84, 0
  %86 = or i1 %30, %85
  br i1 %86, label %88, label %89

87:                                               ; preds = %80
  br i1 %30, label %88, label %89

88:                                               ; preds = %87, %83, %76
  br label %89

89:                                               ; preds = %88, %87, %83, %76, %72
  %90 = phi i8 [ 4, %88 ], [ 3, %87 ], [ 3, %72 ], [ 3, %83 ], [ 3, %76 ]
  %91 = getelementptr inbounds i8, ptr %0, i64 %46
  store i8 %90, ptr %91, align 1, !tbaa !14
  br label %363

92:                                               ; preds = %45
  br i1 %39, label %93, label %109

93:                                               ; preds = %92
  %94 = load i32, ptr %40, align 8, !tbaa !564
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %93
  %97 = load i32, ptr %6, align 8, !tbaa !570
  %98 = icmp eq i32 %97, 0
  %99 = or i1 %98, %30
  br i1 %99, label %108, label %109

100:                                              ; preds = %93
  %101 = load i32, ptr %59, align 4, !tbaa !170
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %107

103:                                              ; preds = %100
  %104 = load i32, ptr %37, align 4, !tbaa !170
  %105 = icmp eq i32 %104, 0
  %106 = or i1 %30, %105
  br i1 %106, label %108, label %109

107:                                              ; preds = %100
  br i1 %30, label %108, label %109

108:                                              ; preds = %107, %103, %96
  br label %109

109:                                              ; preds = %108, %107, %103, %96, %92
  %110 = phi i8 [ 4, %108 ], [ 3, %107 ], [ 3, %92 ], [ 3, %103 ], [ 3, %96 ]
  %111 = getelementptr inbounds i8, ptr %0, i64 %46
  store i8 %110, ptr %111, align 1, !tbaa !14
  %112 = getelementptr inbounds %struct.macroblock, ptr %55, i64 %57, i32 6
  %113 = load i32, ptr %112, align 8, !tbaa !195
  switch i32 %113, label %114 [
    i32 9, label %363
    i32 10, label %363
    i32 13, label %363
    i32 14, label %363
  ]

114:                                              ; preds = %109
  %115 = load i32, ptr %41, align 8, !tbaa !195
  switch i32 %115, label %116 [
    i32 9, label %363
    i32 10, label %363
    i32 13, label %363
    i32 14, label %363
  ]

116:                                              ; preds = %114
  %117 = load i64, ptr %42, align 8, !tbaa !718
  %118 = zext i32 %65 to i64
  %119 = shl nuw i64 1, %118
  %120 = and i64 %117, %119
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %129

122:                                              ; preds = %116
  %123 = getelementptr inbounds %struct.macroblock, ptr %55, i64 %57, i32 9
  %124 = load i64, ptr %123, align 8, !tbaa !718
  %125 = zext i32 %68 to i64
  %126 = shl nuw i64 1, %125
  %127 = and i64 %124, %126
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %130, label %129

129:                                              ; preds = %122, %116
  store i8 2, ptr %111, align 1, !tbaa !14
  br label %363

130:                                              ; preds = %122
  %131 = load i8, ptr @mixedModeEdgeFlag, align 1, !tbaa !14
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %134, label %133

133:                                              ; preds = %130
  store i8 1, ptr %111, align 1, !tbaa !14
  br label %363

134:                                              ; preds = %130
  %135 = load ptr, ptr @get_mb_block_pos, align 8, !tbaa !13
  call void %135(i32 noundef %2, ptr noundef nonnull %8, ptr noundef nonnull %9) #46
  %136 = load i32, ptr %9, align 4, !tbaa !18
  %137 = shl i32 %136, 2
  %138 = ashr i32 %65, 2
  %139 = add nsw i32 %137, %138
  %140 = load i32, ptr %8, align 4, !tbaa !18
  %141 = shl i32 %140, 2
  %142 = and i32 %64, 3
  %143 = or i32 %141, %142
  %144 = load i32, ptr %43, align 4, !tbaa !59
  %145 = ashr i32 %144, 2
  %146 = load i32, ptr %44, align 4, !tbaa !60
  %147 = ashr i32 %146, 2
  %148 = sext i32 %139 to i64
  %149 = getelementptr inbounds ptr, ptr %18, i64 %148
  %150 = load ptr, ptr %149, align 8, !tbaa !13
  %151 = sext i32 %143 to i64
  %152 = getelementptr inbounds i8, ptr %150, i64 %151
  %153 = load i8, ptr %152, align 1, !tbaa !14
  %154 = icmp slt i8 %153, 0
  br i1 %154, label %160, label %155

155:                                              ; preds = %134
  %156 = getelementptr inbounds ptr, ptr %23, i64 %148
  %157 = load ptr, ptr %156, align 8, !tbaa !13
  %158 = getelementptr inbounds i64, ptr %157, i64 %151
  %159 = load i64, ptr %158, align 8, !tbaa !592
  br label %160

160:                                              ; preds = %155, %134
  %161 = phi i64 [ %159, %155 ], [ -9223372036854775808, %134 ]
  %162 = sext i32 %145 to i64
  %163 = getelementptr inbounds ptr, ptr %18, i64 %162
  %164 = load ptr, ptr %163, align 8, !tbaa !13
  %165 = sext i32 %147 to i64
  %166 = getelementptr inbounds i8, ptr %164, i64 %165
  %167 = load i8, ptr %166, align 1, !tbaa !14
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %174, label %169

169:                                              ; preds = %160
  %170 = getelementptr inbounds ptr, ptr %23, i64 %162
  %171 = load ptr, ptr %170, align 8, !tbaa !13
  %172 = getelementptr inbounds i64, ptr %171, i64 %165
  %173 = load i64, ptr %172, align 8, !tbaa !592
  br label %174

174:                                              ; preds = %169, %160
  %175 = phi i64 [ %173, %169 ], [ -9223372036854775808, %160 ]
  %176 = getelementptr inbounds ptr, ptr %20, i64 %148
  %177 = load ptr, ptr %176, align 8, !tbaa !13
  %178 = getelementptr inbounds i8, ptr %177, i64 %151
  %179 = load i8, ptr %178, align 1, !tbaa !14
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %186, label %181

181:                                              ; preds = %174
  %182 = getelementptr inbounds ptr, ptr %25, i64 %148
  %183 = load ptr, ptr %182, align 8, !tbaa !13
  %184 = getelementptr inbounds i64, ptr %183, i64 %151
  %185 = load i64, ptr %184, align 8, !tbaa !592
  br label %186

186:                                              ; preds = %181, %174
  %187 = phi i64 [ %185, %181 ], [ -9223372036854775808, %174 ]
  %188 = getelementptr inbounds ptr, ptr %20, i64 %162
  %189 = load ptr, ptr %188, align 8, !tbaa !13
  %190 = getelementptr inbounds i8, ptr %189, i64 %165
  %191 = load i8, ptr %190, align 1, !tbaa !14
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %198, label %193

193:                                              ; preds = %186
  %194 = getelementptr inbounds ptr, ptr %25, i64 %162
  %195 = load ptr, ptr %194, align 8, !tbaa !13
  %196 = getelementptr inbounds i64, ptr %195, i64 %165
  %197 = load i64, ptr %196, align 8, !tbaa !592
  br label %198

198:                                              ; preds = %193, %186
  %199 = phi i64 [ %197, %193 ], [ -9223372036854775808, %186 ]
  %200 = icmp eq i64 %161, %175
  %201 = icmp eq i64 %187, %199
  %202 = select i1 %200, i1 %201, i1 false
  br i1 %202, label %207, label %203

203:                                              ; preds = %198
  %204 = icmp eq i64 %161, %199
  %205 = icmp eq i64 %187, %175
  %206 = select i1 %204, i1 %205, i1 false
  br i1 %206, label %207, label %362

207:                                              ; preds = %203, %198
  store i8 0, ptr %111, align 1, !tbaa !14
  %208 = icmp eq i64 %161, %187
  %209 = getelementptr inbounds ptr, ptr %13, i64 %148
  %210 = load ptr, ptr %209, align 8, !tbaa !13
  %211 = getelementptr inbounds ptr, ptr %210, i64 %151
  %212 = load ptr, ptr %211, align 8, !tbaa !13
  %213 = load i16, ptr %212, align 2, !tbaa !40
  %214 = sext i16 %213 to i32
  br i1 %208, label %299, label %215

215:                                              ; preds = %207
  %216 = getelementptr inbounds i16, ptr %212, i64 1
  %217 = load i16, ptr %216, align 2, !tbaa !40
  %218 = sext i16 %217 to i32
  %219 = getelementptr inbounds ptr, ptr %15, i64 %148
  %220 = load ptr, ptr %219, align 8, !tbaa !13
  %221 = getelementptr inbounds ptr, ptr %220, i64 %151
  %222 = load ptr, ptr %221, align 8, !tbaa !13
  %223 = load i16, ptr %222, align 2, !tbaa !40
  %224 = sext i16 %223 to i32
  br i1 %200, label %225, label %262

225:                                              ; preds = %215
  %226 = getelementptr inbounds ptr, ptr %13, i64 %162
  %227 = load ptr, ptr %226, align 8, !tbaa !13
  %228 = getelementptr inbounds ptr, ptr %227, i64 %165
  %229 = load ptr, ptr %228, align 8, !tbaa !13
  %230 = load i16, ptr %229, align 2, !tbaa !40
  %231 = sext i16 %230 to i32
  %232 = sub nsw i32 %214, %231
  %233 = call i32 @llvm.abs.i32(i32 %232, i1 true)
  %234 = getelementptr inbounds i16, ptr %229, i64 1
  %235 = load i16, ptr %234, align 2, !tbaa !40
  %236 = sext i16 %235 to i32
  %237 = sub nsw i32 %218, %236
  %238 = call i32 @llvm.abs.i32(i32 %237, i1 true)
  %239 = icmp sge i32 %238, %5
  %240 = getelementptr inbounds ptr, ptr %15, i64 %162
  %241 = load ptr, ptr %240, align 8, !tbaa !13
  %242 = getelementptr inbounds ptr, ptr %241, i64 %165
  %243 = load ptr, ptr %242, align 8, !tbaa !13
  %244 = load i16, ptr %243, align 2, !tbaa !40
  %245 = sext i16 %244 to i32
  %246 = sub nsw i32 %224, %245
  %247 = call i32 @llvm.abs.i32(i32 %246, i1 true)
  %248 = or i32 %247, %233
  %249 = icmp ugt i32 %248, 3
  %250 = or i1 %239, %249
  %251 = getelementptr inbounds i16, ptr %222, i64 1
  %252 = load i16, ptr %251, align 2, !tbaa !40
  %253 = sext i16 %252 to i32
  %254 = getelementptr inbounds i16, ptr %243, i64 1
  %255 = load i16, ptr %254, align 2, !tbaa !40
  %256 = sext i16 %255 to i32
  %257 = sub nsw i32 %253, %256
  %258 = call i32 @llvm.abs.i32(i32 %257, i1 true)
  %259 = icmp sge i32 %258, %5
  %260 = or i1 %250, %259
  %261 = zext i1 %260 to i8
  store i8 %261, ptr %111, align 1, !tbaa !14
  br label %363

262:                                              ; preds = %215
  %263 = getelementptr inbounds ptr, ptr %15, i64 %162
  %264 = load ptr, ptr %263, align 8, !tbaa !13
  %265 = getelementptr inbounds ptr, ptr %264, i64 %165
  %266 = load ptr, ptr %265, align 8, !tbaa !13
  %267 = load i16, ptr %266, align 2, !tbaa !40
  %268 = sext i16 %267 to i32
  %269 = sub nsw i32 %214, %268
  %270 = call i32 @llvm.abs.i32(i32 %269, i1 true)
  %271 = getelementptr inbounds i16, ptr %266, i64 1
  %272 = load i16, ptr %271, align 2, !tbaa !40
  %273 = sext i16 %272 to i32
  %274 = sub nsw i32 %218, %273
  %275 = call i32 @llvm.abs.i32(i32 %274, i1 true)
  %276 = icmp sge i32 %275, %5
  %277 = getelementptr inbounds ptr, ptr %13, i64 %162
  %278 = load ptr, ptr %277, align 8, !tbaa !13
  %279 = getelementptr inbounds ptr, ptr %278, i64 %165
  %280 = load ptr, ptr %279, align 8, !tbaa !13
  %281 = load i16, ptr %280, align 2, !tbaa !40
  %282 = sext i16 %281 to i32
  %283 = sub nsw i32 %224, %282
  %284 = call i32 @llvm.abs.i32(i32 %283, i1 true)
  %285 = or i32 %284, %270
  %286 = icmp ugt i32 %285, 3
  %287 = or i1 %276, %286
  %288 = getelementptr inbounds i16, ptr %222, i64 1
  %289 = load i16, ptr %288, align 2, !tbaa !40
  %290 = sext i16 %289 to i32
  %291 = getelementptr inbounds i16, ptr %280, i64 1
  %292 = load i16, ptr %291, align 2, !tbaa !40
  %293 = sext i16 %292 to i32
  %294 = sub nsw i32 %290, %293
  %295 = call i32 @llvm.abs.i32(i32 %294, i1 true)
  %296 = icmp sge i32 %295, %5
  %297 = or i1 %287, %296
  %298 = zext i1 %297 to i8
  store i8 %298, ptr %111, align 1, !tbaa !14
  br label %363

299:                                              ; preds = %207
  %300 = getelementptr inbounds ptr, ptr %13, i64 %162
  %301 = load ptr, ptr %300, align 8, !tbaa !13
  %302 = getelementptr inbounds ptr, ptr %301, i64 %165
  %303 = load ptr, ptr %302, align 8, !tbaa !13
  %304 = load i16, ptr %303, align 2, !tbaa !40
  %305 = sext i16 %304 to i32
  %306 = sub nsw i32 %214, %305
  %307 = call i32 @llvm.abs.i32(i32 %306, i1 true)
  %308 = getelementptr inbounds i16, ptr %212, i64 1
  %309 = load i16, ptr %308, align 2, !tbaa !40
  %310 = sext i16 %309 to i32
  %311 = getelementptr inbounds i16, ptr %303, i64 1
  %312 = load i16, ptr %311, align 2, !tbaa !40
  %313 = sext i16 %312 to i32
  %314 = sub nsw i32 %310, %313
  %315 = call i32 @llvm.abs.i32(i32 %314, i1 true)
  %316 = icmp sge i32 %315, %5
  %317 = getelementptr inbounds ptr, ptr %15, i64 %148
  %318 = load ptr, ptr %317, align 8, !tbaa !13
  %319 = getelementptr inbounds ptr, ptr %318, i64 %151
  %320 = load ptr, ptr %319, align 8, !tbaa !13
  %321 = load i16, ptr %320, align 2, !tbaa !40
  %322 = sext i16 %321 to i32
  %323 = getelementptr inbounds ptr, ptr %15, i64 %162
  %324 = load ptr, ptr %323, align 8, !tbaa !13
  %325 = getelementptr inbounds ptr, ptr %324, i64 %165
  %326 = load ptr, ptr %325, align 8, !tbaa !13
  %327 = load i16, ptr %326, align 2, !tbaa !40
  %328 = sext i16 %327 to i32
  %329 = sub nsw i32 %322, %328
  %330 = call i32 @llvm.abs.i32(i32 %329, i1 true)
  %331 = or i32 %330, %307
  %332 = icmp ugt i32 %331, 3
  %333 = or i1 %316, %332
  %334 = getelementptr inbounds i16, ptr %320, i64 1
  %335 = load i16, ptr %334, align 2, !tbaa !40
  %336 = sext i16 %335 to i32
  %337 = getelementptr inbounds i16, ptr %326, i64 1
  %338 = load i16, ptr %337, align 2, !tbaa !40
  %339 = sext i16 %338 to i32
  %340 = sub nsw i32 %336, %339
  %341 = call i32 @llvm.abs.i32(i32 %340, i1 true)
  %342 = icmp sge i32 %341, %5
  %343 = or i1 %333, %342
  br i1 %343, label %344, label %359

344:                                              ; preds = %299
  %345 = sub nsw i32 %214, %328
  %346 = call i32 @llvm.abs.i32(i32 %345, i1 true)
  %347 = sub nsw i32 %310, %339
  %348 = call i32 @llvm.abs.i32(i32 %347, i1 true)
  %349 = icmp sge i32 %348, %5
  %350 = sub nsw i32 %322, %305
  %351 = call i32 @llvm.abs.i32(i32 %350, i1 true)
  %352 = or i32 %346, %351
  %353 = icmp ugt i32 %352, 3
  %354 = or i1 %353, %349
  %355 = sub nsw i32 %336, %313
  %356 = call i32 @llvm.abs.i32(i32 %355, i1 true)
  %357 = icmp sge i32 %356, %5
  %358 = or i1 %357, %354
  br label %359

359:                                              ; preds = %344, %299
  %360 = phi i1 [ false, %299 ], [ %358, %344 ]
  %361 = zext i1 %360 to i8
  store i8 %361, ptr %111, align 1, !tbaa !14
  br label %363

362:                                              ; preds = %203
  store i8 1, ptr %111, align 1, !tbaa !14
  br label %363

363:                                              ; preds = %362, %359, %262, %225, %133, %129, %114, %114, %114, %114, %109, %109, %109, %109, %89
  %364 = add nuw nsw i64 %46, 1
  %365 = icmp eq i64 %364, 16
  br i1 %365, label %366, label %45, !llvm.loop !719

366:                                              ; preds = %363
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @EdgeLoop(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9, i32 noundef %10, ptr nocapture noundef readonly %11) #0 {
  %13 = alloca %struct.pix_pos, align 4
  %14 = alloca %struct.pix_pos, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #48
  %15 = icmp ne i32 %9, 0
  %16 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 102
  %17 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 101
  %18 = select i1 %15, ptr %16, ptr %17
  %19 = load i32, ptr %18, align 4, !tbaa !18
  %20 = add nsw i32 %19, -8
  br i1 %15, label %21, label %29

21:                                               ; preds = %12
  %22 = sext i32 %6 to i64
  %23 = getelementptr inbounds %struct.storable_picture, ptr %11, i64 0, i32 50
  %24 = load i32, ptr %23, align 4, !tbaa !83
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [2 x [4 x i32]], ptr @EdgeLoop.pelnum_cr, i64 0, i64 %22, i64 %25
  %27 = load i32, ptr %26, align 4, !tbaa !18
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %386

29:                                               ; preds = %21, %12
  %30 = phi i32 [ %27, %21 ], [ 16, %12 ]
  %31 = icmp ne i32 %6, 0
  %32 = shl i32 %7, 2
  %33 = icmp slt i32 %7, 4
  %34 = select i1 %33, i32 %32, i32 1
  %35 = add i32 %6, -1
  %36 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 39
  %37 = sext i32 %3 to i64
  %38 = getelementptr inbounds %struct.pix_pos, ptr %13, i64 0, i32 1
  %39 = icmp eq i32 %30, 8
  %40 = and i1 %15, %39
  %41 = select i1 %31, i32 %8, i32 1
  %42 = getelementptr inbounds %struct.pix_pos, ptr %14, i64 0, i32 5
  %43 = getelementptr inbounds %struct.pix_pos, ptr %14, i64 0, i32 4
  %44 = getelementptr inbounds %struct.pix_pos, ptr %13, i64 0, i32 5
  %45 = getelementptr inbounds %struct.pix_pos, ptr %13, i64 0, i32 4
  %46 = sext i32 %10 to i64
  %47 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 107
  %48 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 108
  br label %49

49:                                               ; preds = %381, %29
  %50 = phi i32 [ 0, %29 ], [ %384, %381 ]
  %51 = phi i32 [ 0, %29 ], [ %383, %381 ]
  %52 = phi i32 [ 0, %29 ], [ %382, %381 ]
  %53 = select i1 %31, i32 %50, i32 %32
  %54 = select i1 %31, i32 %34, i32 %50
  %55 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  call void %55(i32 noundef %3, i32 noundef %53, i32 noundef %54, i32 noundef %9, ptr noundef nonnull %14) #46
  %56 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  %57 = add i32 %35, %53
  %58 = sub nsw i32 %54, %6
  call void %56(i32 noundef %3, i32 noundef %57, i32 noundef %58, i32 noundef %9, ptr noundef nonnull %13) #46
  %59 = load ptr, ptr %36, align 8, !tbaa !84
  %60 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %37
  %61 = load i32, ptr %38, align 4, !tbaa !57
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %62
  %64 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %37, i32 20
  %65 = load i32, ptr %64, align 4, !tbaa !170
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %49
  %68 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %62, i32 20
  %69 = load i32, ptr %68, align 4, !tbaa !170
  %70 = icmp ne i32 %69, 0
  br label %71

71:                                               ; preds = %67, %49
  %72 = phi i1 [ true, %49 ], [ %70, %67 ]
  %73 = zext i1 %72 to i8
  store i8 %73, ptr @fieldModeFilteringFlag, align 1, !tbaa !14
  br i1 %40, label %74, label %88

74:                                               ; preds = %71
  %75 = load i32, ptr %64, align 4, !tbaa !170
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %83, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %62, i32 20
  %79 = load i32, ptr %78, align 4, !tbaa !170
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = shl nuw i32 %50, 1
  br label %88

83:                                               ; preds = %77, %74
  %84 = shl nuw i32 %50, 1
  %85 = and i32 %84, -4
  %86 = and i32 %50, 1
  %87 = or i32 %85, %86
  br label %88

88:                                               ; preds = %83, %81, %71
  %89 = phi i32 [ %82, %81 ], [ %87, %83 ], [ %50, %71 ]
  %90 = load i32, ptr %13, align 4, !tbaa !52
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %37, i32 16
  %94 = load i32, ptr %93, align 4, !tbaa !711
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %381

96:                                               ; preds = %92, %88
  %97 = select i1 %31, i1 %72, i1 false
  br i1 %97, label %98, label %108

98:                                               ; preds = %96
  %99 = load i32, ptr %64, align 4, !tbaa !170
  %100 = icmp eq i32 %99, 0
  %101 = zext i1 %100 to i32
  %102 = shl nsw i32 %8, %101
  %103 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %62, i32 20
  %104 = load i32, ptr %103, align 4, !tbaa !170
  %105 = icmp eq i32 %104, 0
  %106 = zext i1 %105 to i32
  %107 = shl nsw i32 %8, %106
  br label %108

108:                                              ; preds = %98, %96
  %109 = phi i32 [ %102, %98 ], [ %41, %96 ]
  %110 = phi i32 [ %107, %98 ], [ %41, %96 ]
  %111 = load i32, ptr %42, align 4, !tbaa !59
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds ptr, ptr %0, i64 %112
  %114 = load ptr, ptr %113, align 8, !tbaa !13
  %115 = load i32, ptr %43, align 4, !tbaa !60
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i16, ptr %114, i64 %116
  %118 = load i32, ptr %44, align 4, !tbaa !59
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds ptr, ptr %0, i64 %119
  %121 = load ptr, ptr %120, align 8, !tbaa !13
  %122 = load i32, ptr %45, align 4, !tbaa !60
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i16, ptr %121, i64 %123
  br i1 %15, label %125, label %131

125:                                              ; preds = %108
  %126 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %62, i32 1, i64 %46
  %127 = load i32, ptr %126, align 4, !tbaa !18
  %128 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %37, i32 1, i64 %46
  %129 = load i32, ptr %128, align 4, !tbaa !18
  %130 = add nsw i32 %129, %127
  br label %135

131:                                              ; preds = %108
  %132 = load i32, ptr %63, align 8, !tbaa !720
  %133 = load i32, ptr %60, align 8, !tbaa !720
  %134 = add nsw i32 %133, %132
  br label %135

135:                                              ; preds = %131, %125
  %136 = phi i32 [ %130, %125 ], [ %134, %131 ]
  %137 = add nsw i32 %136, 1
  %138 = ashr i32 %137, 1
  %139 = add nsw i32 %138, %4
  %140 = call i32 @llvm.smax.i32(i32 %139, i32 0)
  %141 = call i32 @llvm.smin.i32(i32 %140, i32 51)
  %142 = add nsw i32 %138, %5
  %143 = call i32 @llvm.smax.i32(i32 %142, i32 0)
  %144 = call i32 @llvm.smin.i32(i32 %143, i32 51)
  %145 = zext i32 %141 to i64
  %146 = getelementptr inbounds [52 x i8], ptr @ALPHA_TABLE, i64 0, i64 %145
  %147 = load i8, ptr %146, align 1, !tbaa !14
  %148 = zext i8 %147 to i32
  %149 = shl i32 %148, %20
  %150 = zext i32 %144 to i64
  %151 = getelementptr inbounds [52 x i8], ptr @BETA_TABLE, i64 0, i64 %150
  %152 = load i8, ptr %151, align 1, !tbaa !14
  %153 = zext i8 %152 to i32
  %154 = shl i32 %153, %20
  %155 = getelementptr inbounds [52 x [5 x i8]], ptr @CLIP_TAB, i64 0, i64 %145
  %156 = load i16, ptr %124, align 2, !tbaa !40
  %157 = zext i16 %156 to i32
  %158 = load i16, ptr %117, align 2, !tbaa !40
  %159 = zext i16 %158 to i32
  %160 = sub nsw i32 0, %110
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i16, ptr %124, i64 %161
  %163 = load i16, ptr %162, align 2, !tbaa !40
  %164 = zext i16 %163 to i32
  %165 = sext i32 %109 to i64
  %166 = getelementptr inbounds i16, ptr %117, i64 %165
  %167 = load i16, ptr %166, align 2, !tbaa !40
  %168 = zext i16 %167 to i32
  %169 = shl nsw i32 %160, 1
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i16, ptr %124, i64 %170
  %172 = load i16, ptr %171, align 2, !tbaa !40
  %173 = zext i16 %172 to i32
  %174 = shl nsw i32 %109, 1
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i16, ptr %117, i64 %175
  %177 = load i16, ptr %176, align 2, !tbaa !40
  %178 = zext i16 %177 to i32
  %179 = mul i32 %110, -3
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i16, ptr %124, i64 %180
  %182 = load i16, ptr %181, align 2, !tbaa !40
  %183 = zext i16 %182 to i32
  %184 = mul nsw i32 %109, 3
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds i16, ptr %117, i64 %185
  %187 = load i16, ptr %186, align 2, !tbaa !40
  %188 = zext i16 %187 to i32
  %189 = sext i32 %89 to i64
  %190 = getelementptr inbounds i8, ptr %1, i64 %189
  %191 = load i8, ptr %190, align 1, !tbaa !14
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %381, label %193

193:                                              ; preds = %135
  %194 = sub nsw i32 %159, %157
  %195 = call i32 @llvm.abs.i32(i32 %194, i1 true)
  %196 = icmp slt i32 %195, %149
  br i1 %196, label %197, label %381

197:                                              ; preds = %193
  %198 = zext i8 %191 to i64
  %199 = getelementptr inbounds i8, ptr %155, i64 %198
  %200 = load i8, ptr %199, align 1, !tbaa !14
  %201 = zext i8 %200 to i32
  %202 = shl i32 %201, %20
  %203 = sub nsw i32 %159, %168
  %204 = call i32 @llvm.abs.i32(i32 %203, i1 true)
  %205 = sub nsw i32 %204, %154
  %206 = sub nsw i32 %157, %164
  %207 = call i32 @llvm.abs.i32(i32 %206, i1 true)
  %208 = sub nsw i32 %207, %154
  %209 = and i32 %205, %208
  %210 = icmp slt i32 %209, 0
  br i1 %210, label %211, label %381

211:                                              ; preds = %197
  br i1 %15, label %212, label %215

212:                                              ; preds = %211
  %213 = add nuw nsw i32 %159, %157
  %214 = icmp eq i8 %191, 4
  br i1 %214, label %226, label %320

215:                                              ; preds = %211
  %216 = sub nsw i32 %159, %178
  %217 = call i32 @llvm.abs.i32(i32 %216, i1 true)
  %218 = icmp slt i32 %217, %154
  %219 = zext i1 %218 to i32
  %220 = sub nsw i32 %157, %173
  %221 = call i32 @llvm.abs.i32(i32 %220, i1 true)
  %222 = icmp slt i32 %221, %154
  %223 = zext i1 %222 to i32
  %224 = add nuw nsw i32 %159, %157
  %225 = icmp eq i8 %191, 4
  br i1 %225, label %239, label %320

226:                                              ; preds = %212
  %227 = shl nuw nsw i32 %168, 1
  %228 = add nuw nsw i32 %159, 2
  %229 = add nuw nsw i32 %228, %164
  %230 = add nuw nsw i32 %229, %227
  %231 = lshr i32 %230, 2
  %232 = trunc i32 %231 to i16
  store i16 %232, ptr %117, align 2, !tbaa !40
  %233 = shl nuw nsw i32 %164, 1
  %234 = add nuw nsw i32 %157, 2
  %235 = add nuw nsw i32 %234, %233
  %236 = add nuw nsw i32 %235, %168
  %237 = lshr i32 %236, 2
  %238 = trunc i32 %237 to i16
  store i16 %238, ptr %124, align 2, !tbaa !40
  br label %381

239:                                              ; preds = %215
  %240 = ashr i32 %149, 2
  %241 = add nsw i32 %240, 2
  %242 = icmp slt i32 %195, %241
  %243 = zext i1 %242 to i32
  %244 = and i32 %219, %243
  %245 = and i32 %223, %243
  %246 = icmp eq i32 %244, 0
  br i1 %246, label %254, label %247

247:                                              ; preds = %239
  %248 = add nuw nsw i32 %224, %168
  %249 = shl nuw nsw i32 %248, 1
  %250 = add nuw nsw i32 %164, 4
  %251 = add nuw nsw i32 %250, %249
  %252 = add nuw nsw i32 %251, %178
  %253 = lshr i32 %252, 3
  br label %260

254:                                              ; preds = %239
  %255 = shl nuw nsw i32 %168, 1
  %256 = add nuw nsw i32 %159, 2
  %257 = add nuw nsw i32 %256, %164
  %258 = add nuw nsw i32 %257, %255
  %259 = lshr i32 %258, 2
  br label %260

260:                                              ; preds = %254, %247
  %261 = phi i32 [ %253, %247 ], [ %259, %254 ]
  %262 = trunc i32 %261 to i16
  store i16 %262, ptr %117, align 2, !tbaa !40
  %263 = icmp eq i32 %245, 0
  br i1 %263, label %271, label %264

264:                                              ; preds = %260
  %265 = add nuw nsw i32 %224, %164
  %266 = shl nuw nsw i32 %265, 1
  %267 = add nuw nsw i32 %168, 4
  %268 = add nuw nsw i32 %267, %266
  %269 = add nuw nsw i32 %268, %173
  %270 = lshr i32 %269, 3
  br label %277

271:                                              ; preds = %260
  %272 = shl nuw nsw i32 %164, 1
  %273 = add nuw nsw i32 %157, 2
  %274 = add nuw nsw i32 %273, %272
  %275 = add nuw nsw i32 %274, %168
  %276 = lshr i32 %275, 2
  br label %277

277:                                              ; preds = %271, %264
  %278 = phi i32 [ %270, %264 ], [ %276, %271 ]
  %279 = trunc i32 %278 to i16
  store i16 %279, ptr %124, align 2, !tbaa !40
  br i1 %246, label %286, label %280

280:                                              ; preds = %277
  %281 = add nuw nsw i32 %157, 2
  %282 = add nuw nsw i32 %281, %159
  %283 = add nuw nsw i32 %282, %168
  %284 = add nuw nsw i32 %283, %178
  %285 = lshr i32 %284, 2
  br label %286

286:                                              ; preds = %280, %277
  %287 = phi i32 [ %285, %280 ], [ %168, %277 ]
  %288 = trunc i32 %287 to i16
  store i16 %288, ptr %166, align 2, !tbaa !40
  br i1 %263, label %295, label %289

289:                                              ; preds = %286
  %290 = add nuw nsw i32 %157, 2
  %291 = add nuw nsw i32 %290, %159
  %292 = add nuw nsw i32 %291, %164
  %293 = add nuw nsw i32 %292, %173
  %294 = lshr i32 %293, 2
  br label %295

295:                                              ; preds = %289, %286
  %296 = phi i32 [ %294, %289 ], [ %164, %286 ]
  %297 = trunc i32 %296 to i16
  store i16 %297, ptr %162, align 2, !tbaa !40
  br i1 %246, label %306, label %298

298:                                              ; preds = %295
  %299 = add nuw nsw i32 %188, %178
  %300 = shl nuw nsw i32 %299, 1
  %301 = add nuw nsw i32 %224, 4
  %302 = add nuw nsw i32 %301, %168
  %303 = add nuw nsw i32 %302, %178
  %304 = add nuw nsw i32 %303, %300
  %305 = lshr i32 %304, 3
  br label %306

306:                                              ; preds = %298, %295
  %307 = phi i32 [ %305, %298 ], [ %178, %295 ]
  %308 = trunc i32 %307 to i16
  store i16 %308, ptr %176, align 2, !tbaa !40
  br i1 %263, label %317, label %309

309:                                              ; preds = %306
  %310 = add nuw nsw i32 %183, %173
  %311 = shl nuw nsw i32 %310, 1
  %312 = add nuw nsw i32 %164, 4
  %313 = add nuw nsw i32 %312, %224
  %314 = add nuw nsw i32 %313, %173
  %315 = add nuw nsw i32 %314, %311
  %316 = lshr i32 %315, 3
  br label %317

317:                                              ; preds = %309, %306
  %318 = phi i32 [ %316, %309 ], [ %173, %306 ]
  %319 = trunc i32 %318 to i16
  store i16 %319, ptr %171, align 2, !tbaa !40
  br label %381

320:                                              ; preds = %215, %212
  %321 = phi i32 [ %224, %215 ], [ %213, %212 ]
  %322 = phi i32 [ %223, %215 ], [ %51, %212 ]
  %323 = phi i32 [ %219, %215 ], [ %52, %212 ]
  %324 = add nsw i32 %202, 1
  %325 = add nsw i32 %322, %202
  %326 = add nsw i32 %325, %323
  %327 = select i1 %15, i32 %324, i32 %326
  %328 = sub nsw i32 0, %327
  %329 = shl nsw i32 %194, 2
  %330 = add nuw nsw i32 %164, 4
  %331 = sub nsw i32 %330, %168
  %332 = add nsw i32 %331, %329
  %333 = ashr i32 %332, 3
  %334 = call i32 @llvm.smax.i32(i32 %333, i32 %328)
  %335 = call i32 @llvm.smin.i32(i32 %334, i32 %327)
  %336 = add nsw i32 %335, %157
  %337 = call i32 @llvm.smax.i32(i32 %336, i32 0)
  %338 = sub nsw i32 %159, %335
  %339 = call i32 @llvm.smax.i32(i32 %338, i32 0)
  br i1 %15, label %375, label %340

340:                                              ; preds = %320
  %341 = load i32, ptr %47, align 4, !tbaa !77
  %342 = call i32 @llvm.smin.i32(i32 %337, i32 %341)
  %343 = trunc i32 %342 to i16
  store i16 %343, ptr %124, align 2, !tbaa !40
  %344 = call i32 @llvm.smin.i32(i32 %339, i32 %341)
  %345 = trunc i32 %344 to i16
  store i16 %345, ptr %117, align 2, !tbaa !40
  %346 = icmp eq i32 %322, 0
  br i1 %346, label %360, label %347

347:                                              ; preds = %340
  %348 = sub nsw i32 0, %202
  %349 = add nuw nsw i32 %321, 1
  %350 = lshr i32 %349, 1
  %351 = shl nuw nsw i32 %164, 1
  %352 = sub nsw i32 %173, %351
  %353 = add nsw i32 %352, %350
  %354 = ashr i32 %353, 1
  %355 = call i32 @llvm.smax.i32(i32 %354, i32 %348)
  %356 = call i32 @llvm.smin.i32(i32 %355, i32 %202)
  %357 = load i16, ptr %162, align 2, !tbaa !40
  %358 = trunc i32 %356 to i16
  %359 = add i16 %357, %358
  store i16 %359, ptr %162, align 2, !tbaa !40
  br label %360

360:                                              ; preds = %347, %340
  %361 = icmp eq i32 %323, 0
  br i1 %361, label %381, label %362

362:                                              ; preds = %360
  %363 = sub nsw i32 0, %202
  %364 = add nuw nsw i32 %321, 1
  %365 = lshr i32 %364, 1
  %366 = shl nuw nsw i32 %168, 1
  %367 = sub nsw i32 %178, %366
  %368 = add nsw i32 %367, %365
  %369 = ashr i32 %368, 1
  %370 = call i32 @llvm.smax.i32(i32 %369, i32 %363)
  %371 = call i32 @llvm.smin.i32(i32 %370, i32 %202)
  %372 = load i16, ptr %166, align 2, !tbaa !40
  %373 = trunc i32 %371 to i16
  %374 = add i16 %372, %373
  store i16 %374, ptr %166, align 2, !tbaa !40
  br label %381

375:                                              ; preds = %320
  %376 = load i32, ptr %48, align 8, !tbaa !103
  %377 = call i32 @llvm.smin.i32(i32 %337, i32 %376)
  %378 = trunc i32 %377 to i16
  store i16 %378, ptr %124, align 2, !tbaa !40
  %379 = call i32 @llvm.smin.i32(i32 %339, i32 %376)
  %380 = trunc i32 %379 to i16
  store i16 %380, ptr %117, align 2, !tbaa !40
  br label %381

381:                                              ; preds = %375, %362, %360, %317, %226, %197, %193, %135, %92
  %382 = phi i32 [ %52, %226 ], [ %244, %317 ], [ %323, %375 ], [ 1, %362 ], [ 0, %360 ], [ %52, %197 ], [ %52, %193 ], [ %52, %135 ], [ %52, %92 ]
  %383 = phi i32 [ %51, %226 ], [ %245, %317 ], [ %322, %375 ], [ %322, %362 ], [ %322, %360 ], [ %51, %197 ], [ %51, %193 ], [ %51, %135 ], [ %51, %92 ]
  %384 = add nuw nsw i32 %50, 1
  %385 = icmp eq i32 %384, %30
  br i1 %385, label %386, label %49, !llvm.loop !721

386:                                              ; preds = %381, %21
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @start_macroblock(ptr nocapture noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %4 = load ptr, ptr %3, align 8, !tbaa !84
  %5 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !49
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 44
  %9 = load i32, ptr %8, align 8, !tbaa !189
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 17
  br i1 %10, label %22, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 11
  %14 = load i32, ptr %13, align 8, !tbaa !337
  %15 = sdiv i32 %14, 8
  %16 = urem i32 %6, %15
  %17 = udiv i32 %6, %15
  %18 = shl i32 %17, 1
  %19 = and i32 %16, 1
  %20 = or i32 %19, %18
  %21 = sdiv i32 %16, 2
  store i32 %21, ptr %11, align 8, !tbaa !299
  br label %29

22:                                               ; preds = %2
  %23 = load ptr, ptr @PicPos, align 8, !tbaa !13
  %24 = getelementptr inbounds ptr, ptr %23, i64 %7
  %25 = load ptr, ptr %24, align 8, !tbaa !13
  %26 = load i32, ptr %25, align 4, !tbaa !18
  store i32 %26, ptr %11, align 8, !tbaa !299
  %27 = getelementptr inbounds i32, ptr %25, i64 1
  %28 = load i32, ptr %27, align 4, !tbaa !18
  br label %29

29:                                               ; preds = %22, %12
  %30 = phi i32 [ %26, %22 ], [ %21, %12 ]
  %31 = phi i32 [ %28, %22 ], [ %20, %12 ]
  %32 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 16
  store i32 %31, ptr %32, align 4
  %33 = shl nsw i32 %31, 2
  %34 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  store i32 %33, ptr %34, align 4, !tbaa !301
  %35 = shl nsw i32 %31, 4
  %36 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 19
  store i32 %35, ptr %36, align 8, !tbaa !722
  %37 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 116
  %38 = load i32, ptr %37, align 8, !tbaa !86
  %39 = mul nsw i32 %38, %31
  %40 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 21
  store i32 %39, ptr %40, align 8, !tbaa !302
  %41 = shl nsw i32 %30, 2
  %42 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  store i32 %41, ptr %42, align 4, !tbaa !303
  %43 = shl nsw i32 %30, 4
  %44 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 20
  store i32 %43, ptr %44, align 4, !tbaa !723
  %45 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 115
  %46 = load i32, ptr %45, align 4, !tbaa !85
  %47 = mul nsw i32 %46, %30
  %48 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 23
  store i32 %47, ptr %48, align 8, !tbaa !304
  %49 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 3
  %50 = load i32, ptr %49, align 4, !tbaa !175
  %51 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %7, i32 2
  store i32 %50, ptr %51, align 4, !tbaa !176
  %52 = icmp sgt i32 %50, 49
  br i1 %52, label %53, label %58

53:                                               ; preds = %29
  %54 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 17
  tail call void @error(ptr noundef nonnull @.str.155, i32 noundef 200) #46
  %55 = load i32, ptr %49, align 4, !tbaa !175
  %56 = load i32, ptr %32, align 4, !tbaa !300
  %57 = load i32, ptr %54, align 8, !tbaa !299
  br label %58

58:                                               ; preds = %53, %29
  %59 = phi i32 [ %57, %53 ], [ %30, %29 ]
  %60 = phi i32 [ %56, %53 ], [ %31, %29 ]
  %61 = phi i32 [ %55, %53 ], [ %50, %29 ]
  %62 = trunc i32 %61 to i16
  %63 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %64 = getelementptr inbounds %struct.storable_picture, ptr %63, i64 0, i32 35
  %65 = load ptr, ptr %64, align 8, !tbaa !724
  %66 = sext i32 %60 to i64
  %67 = getelementptr inbounds ptr, ptr %65, i64 %66
  %68 = load ptr, ptr %67, align 8, !tbaa !13
  %69 = sext i32 %59 to i64
  %70 = getelementptr inbounds i16, ptr %68, i64 %69
  store i16 %62, ptr %70, align 2, !tbaa !40
  %71 = getelementptr inbounds %struct.storable_picture, ptr %63, i64 0, i32 18
  %72 = load i16, ptr %71, align 4, !tbaa !725
  %73 = sext i16 %72 to i32
  %74 = icmp sgt i32 %61, %73
  br i1 %74, label %75, label %76

75:                                               ; preds = %58
  store i16 %62, ptr %71, align 4, !tbaa !725
  br label %76

76:                                               ; preds = %75, %58
  %77 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %7
  tail call void @CheckAvailabilityOfNeighbors() #46
  %78 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 6
  %79 = load i32, ptr %78, align 4, !tbaa !43
  store i32 %79, ptr %77, align 8, !tbaa !720
  %80 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %7, i32 6
  store i32 0, ptr %80, align 8, !tbaa !195
  %81 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %7, i32 3
  store i32 0, ptr %81, align 8, !tbaa !726
  %82 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %7, i32 8
  store i32 0, ptr %82, align 4, !tbaa !199
  %83 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %7, i32 9
  store i64 0, ptr %83, align 8, !tbaa !718
  %84 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %7, i32 19
  store i32 0, ptr %84, align 8, !tbaa !90
  %85 = mul nuw nsw i64 %7, 408
  %86 = add nuw nsw i64 %85, 44
  %87 = getelementptr i8, ptr %4, i64 %86
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(256) %87, i8 0, i64 256, i1 false)
  %88 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %7, i32 10
  store i64 0, ptr %88, align 8, !tbaa !205
  %89 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(1024) %89, i8 0, i64 1024, i1 false)
  %90 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %91 = load ptr, ptr %90, align 8, !tbaa !165
  %92 = getelementptr inbounds %struct.Slice, ptr %91, i64 0, i32 21
  %93 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %7, i32 16
  %94 = load <2 x i32>, ptr %92, align 8, !tbaa !18
  store <2 x i32> %94, ptr %93, align 4, !tbaa !18
  %95 = getelementptr inbounds %struct.Slice, ptr %91, i64 0, i32 23
  %96 = load i32, ptr %95, align 8, !tbaa !498
  %97 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %7, i32 18
  store i32 %96, ptr %97, align 4, !tbaa !714
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @exit_macroblock(ptr noundef %0, ptr nocapture noundef readnone %1, i32 noundef %2) #0 {
  %4 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !550
  %6 = add i32 %5, 1
  store i32 %6, ptr %4, align 8, !tbaa !550
  %7 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 91
  %8 = load i32, ptr %7, align 4, !tbaa !439
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %32, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !49
  %13 = tail call i32 @FmoGetNextMBNr(i32 noundef %12) #46
  store i32 %13, ptr %11, align 4, !tbaa !49
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %32, label %15

15:                                               ; preds = %10
  %16 = load ptr, ptr @nal_startcode_follows, align 8, !tbaa !13
  %17 = tail call i32 %16(ptr noundef nonnull %0, i32 noundef %2) #46
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %32, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %21 = load i32, ptr %20, align 4, !tbaa !137
  switch i32 %21, label %22 [
    i32 2, label %32
    i32 4, label %32
  ]

22:                                               ; preds = %19
  %23 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %24 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %23, i64 0, i32 3
  %25 = load i32, ptr %24, align 4, !tbaa !490
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 34
  %29 = load i32, ptr %28, align 8, !tbaa !590
  %30 = icmp slt i32 %29, 1
  %31 = zext i1 %30 to i32
  br label %32

32:                                               ; preds = %27, %22, %19, %19, %15, %10, %3
  %33 = phi i32 [ 1, %3 ], [ 1, %10 ], [ 0, %15 ], [ 1, %19 ], [ 1, %19 ], [ 1, %22 ], [ %31, %27 ]
  ret i32 %33
}

; Function Attrs: mustprogress nofree nosync nounwind optsize willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal void @interpret_mb_mode_P(ptr nocapture noundef %0) #39 {
  %2 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %3 = load ptr, ptr %2, align 8, !tbaa !84
  %4 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !49
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 6
  %8 = load i32, ptr %7, align 8, !tbaa !195
  %9 = icmp slt i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  %12 = trunc i32 %8 to i8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(4) %11, i8 %12, i64 4, i1 false)
  %13 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14
  store i32 0, ptr %13, align 4
  br label %41

14:                                               ; preds = %1
  %15 = and i32 %8, -2
  %16 = icmp eq i32 %15, 4
  br i1 %16, label %17, label %21

17:                                               ; preds = %14
  %18 = icmp eq i32 %8, 5
  store i32 8, ptr %7, align 8, !tbaa !195
  %19 = zext i1 %18 to i32
  %20 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 24
  store i32 %19, ptr %20, align 4, !tbaa !727
  br label %41

21:                                               ; preds = %14
  switch i32 %8, label %30 [
    i32 6, label %22
    i32 31, label %25
  ]

22:                                               ; preds = %21
  store i32 9, ptr %7, align 8, !tbaa !195
  %23 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  store i32 185273099, ptr %23, align 8
  %24 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14
  store i32 -1, ptr %24, align 4
  br label %41

25:                                               ; preds = %21
  store i32 14, ptr %7, align 8, !tbaa !195
  %26 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 8
  store i32 -1, ptr %26, align 4, !tbaa !199
  %27 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 12
  store i32 0, ptr %27, align 4, !tbaa !728
  %28 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  store i32 0, ptr %28, align 8
  %29 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14
  store i32 -1, ptr %29, align 4
  br label %41

30:                                               ; preds = %21
  store i32 10, ptr %7, align 8, !tbaa !195
  %31 = add nsw i32 %8, -7
  %32 = lshr i32 %31, 2
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds [6 x i32], ptr @__const.interpret_mb_mode_SI.ICBPTAB, i64 0, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !18
  %36 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 8
  store i32 %35, ptr %36, align 4, !tbaa !199
  %37 = and i32 %31, 3
  %38 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 12
  store i32 %37, ptr %38, align 4, !tbaa !728
  %39 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  store i32 0, ptr %39, align 8
  %40 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14
  store i32 -1, ptr %40, align 4
  br label %41

41:                                               ; preds = %30, %25, %22, %17, %10
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal void @interpret_mb_mode_I(ptr nocapture noundef readonly %0) #10 {
  %2 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %3 = load ptr, ptr %2, align 8, !tbaa !84
  %4 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !49
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 6
  %8 = load i32, ptr %7, align 8, !tbaa !195
  switch i32 %8, label %13 [
    i32 0, label %9
    i32 25, label %10
  ]

9:                                                ; preds = %1
  store i32 9, ptr %7, align 8, !tbaa !195
  br label %22

10:                                               ; preds = %1
  store i32 14, ptr %7, align 8, !tbaa !195
  %11 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 8
  store i32 -1, ptr %11, align 4, !tbaa !199
  %12 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 12
  store i32 0, ptr %12, align 4, !tbaa !728
  br label %22

13:                                               ; preds = %1
  store i32 10, ptr %7, align 8, !tbaa !195
  %14 = add nsw i32 %8, -1
  %15 = ashr i32 %14, 2
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [6 x i32], ptr @__const.interpret_mb_mode_SI.ICBPTAB, i64 0, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !18
  %19 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 8
  store i32 %18, ptr %19, align 4, !tbaa !199
  %20 = and i32 %14, 3
  %21 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 12
  store i32 %20, ptr %21, align 4, !tbaa !728
  br label %22

22:                                               ; preds = %13, %10, %9
  %23 = phi i32 [ 0, %10 ], [ 0, %13 ], [ 185273099, %9 ]
  %24 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  store i32 %23, ptr %24, align 8
  %25 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14
  store i32 -1, ptr %25, align 4
  ret void
}

; Function Attrs: nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @interpret_mb_mode_B(ptr nocapture noundef readonly %0) #25 {
  %2 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %3 = load ptr, ptr %2, align 8, !tbaa !84
  %4 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !49
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 6
  %8 = load i32, ptr %7, align 8, !tbaa !195
  switch i32 %8, label %15 [
    i32 0, label %9
    i32 23, label %12
  ]

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  store i32 0, ptr %10, align 8
  %11 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14
  store i32 33686018, ptr %11, align 4
  br label %74

12:                                               ; preds = %1
  %13 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  store i32 185273099, ptr %13, align 8
  %14 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14
  store i32 -1, ptr %14, align 4
  br label %74

15:                                               ; preds = %1
  %16 = add i32 %8, -24
  %17 = icmp ult i32 %16, 24
  br i1 %17, label %18, label %28

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  store i32 0, ptr %19, align 8
  %20 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14
  store i32 -1, ptr %20, align 4
  %21 = lshr i32 %16, 2
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [6 x i32], ptr @__const.interpret_mb_mode_SI.ICBPTAB, i64 0, i64 %22
  %24 = load i32, ptr %23, align 4, !tbaa !18
  %25 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 8
  store i32 %24, ptr %25, align 4, !tbaa !199
  %26 = and i32 %8, 3
  %27 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 12
  store i32 %26, ptr %27, align 4, !tbaa !728
  br label %74

28:                                               ; preds = %15
  %29 = icmp eq i32 %8, 22
  br i1 %29, label %74, label %30

30:                                               ; preds = %28
  %31 = icmp slt i32 %8, 4
  br i1 %31, label %32, label %39

32:                                               ; preds = %30
  %33 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  store i32 16843009, ptr %33, align 8
  %34 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14
  %35 = sext i32 %8 to i64
  %36 = getelementptr inbounds [12 x i32], ptr @interpret_mb_mode_B.offset2pdir16x16, i64 0, i64 %35
  %37 = load i32, ptr %36, align 4, !tbaa !18
  %38 = trunc i32 %37 to i8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(4) %34, i8 %38, i64 4, i1 false)
  br label %74

39:                                               ; preds = %30
  %40 = icmp eq i32 %8, 48
  br i1 %40, label %41, label %46

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  store i32 0, ptr %42, align 8
  %43 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14
  store i32 -1, ptr %43, align 4
  %44 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 8
  store i32 -1, ptr %44, align 4, !tbaa !199
  %45 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 12
  store i32 0, ptr %45, align 4, !tbaa !728
  br label %74

46:                                               ; preds = %39
  %47 = and i32 %8, 1
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  %50 = zext i32 %8 to i64
  br i1 %48, label %51, label %64

51:                                               ; preds = %46
  store i32 33686018, ptr %49, align 8
  br label %52

52:                                               ; preds = %52, %51
  %53 = phi i64 [ 0, %51 ], [ %62, %52 ]
  %54 = lshr exact i64 %53, 1
  %55 = and i64 %54, 2147483647
  %56 = getelementptr inbounds [22 x [2 x i32]], ptr @interpret_mb_mode_B.offset2pdir16x8, i64 0, i64 %50, i64 %55
  %57 = load i32, ptr %56, align 4, !tbaa !18
  %58 = trunc i32 %57 to i8
  %59 = insertelement <2 x i8> undef, i8 %58, i64 0
  %60 = shufflevector <2 x i8> %59, <2 x i8> poison, <2 x i32> zeroinitializer
  %61 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14, i64 %53
  store <2 x i8> %60, ptr %61, align 1, !tbaa !14
  %62 = add nuw i64 %53, 2
  %63 = icmp eq i64 %62, 4
  br i1 %63, label %74, label %52, !llvm.loop !729

64:                                               ; preds = %46
  store i32 50529027, ptr %49, align 8
  br label %65

65:                                               ; preds = %65, %64
  %66 = phi i64 [ 0, %64 ], [ %72, %65 ]
  %67 = and i64 %66, 1
  %68 = getelementptr inbounds [22 x [2 x i32]], ptr @interpret_mb_mode_B.offset2pdir8x16, i64 0, i64 %50, i64 %67
  %69 = load i32, ptr %68, align 4, !tbaa !18
  %70 = trunc i32 %69 to i8
  %71 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14, i64 %66
  store i8 %70, ptr %71, align 1, !tbaa !14
  %72 = add nuw nsw i64 %66, 1
  %73 = icmp eq i64 %72, 4
  br i1 %73, label %74, label %65, !llvm.loop !730

74:                                               ; preds = %65, %52, %41, %32, %28, %18, %12, %9
  %75 = phi i32 [ 0, %9 ], [ 9, %12 ], [ 10, %18 ], [ 1, %32 ], [ 14, %41 ], [ 8, %28 ], [ 2, %52 ], [ 3, %65 ]
  store i32 %75, ptr %7, align 8, !tbaa !195
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal void @interpret_mb_mode_SI(ptr nocapture noundef readonly %0) #10 {
  %2 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %3 = load ptr, ptr %2, align 8, !tbaa !84
  %4 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !49
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 6
  %8 = load i32, ptr %7, align 8, !tbaa !195
  switch i32 %8, label %31 [
    i32 0, label %9
    i32 1, label %23
    i32 26, label %26
  ]

9:                                                ; preds = %1
  store i32 12, ptr %7, align 8, !tbaa !195
  %10 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  store i32 185273099, ptr %10, align 8
  %11 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14
  store i32 -1, ptr %11, align 4
  %12 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 33
  %13 = load ptr, ptr %12, align 8, !tbaa !700
  %14 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 16
  %15 = load i32, ptr %14, align 4, !tbaa !300
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds ptr, ptr %13, i64 %16
  %18 = load ptr, ptr %17, align 8, !tbaa !13
  %19 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 17
  %20 = load i32, ptr %19, align 8, !tbaa !299
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, ptr %18, i64 %21
  store i32 1, ptr %22, align 4, !tbaa !18
  br label %43

23:                                               ; preds = %1
  store i32 9, ptr %7, align 8, !tbaa !195
  %24 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  store i32 185273099, ptr %24, align 8
  %25 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14
  store i32 -1, ptr %25, align 4
  br label %43

26:                                               ; preds = %1
  store i32 14, ptr %7, align 8, !tbaa !195
  %27 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 8
  store i32 -1, ptr %27, align 4, !tbaa !199
  %28 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 12
  store i32 0, ptr %28, align 4, !tbaa !728
  %29 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  store i32 0, ptr %29, align 8
  %30 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14
  store i32 -1, ptr %30, align 4
  br label %43

31:                                               ; preds = %1
  store i32 10, ptr %7, align 8, !tbaa !195
  %32 = add nsw i32 %8, -1
  %33 = ashr i32 %32, 2
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [6 x i32], ptr @__const.interpret_mb_mode_SI.ICBPTAB, i64 0, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !18
  %37 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 8
  store i32 %36, ptr %37, align 4, !tbaa !199
  %38 = add i32 %8, 2
  %39 = and i32 %38, 3
  %40 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 12
  store i32 %39, ptr %40, align 4, !tbaa !728
  %41 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 13
  store i32 0, ptr %41, align 8
  %42 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 14
  store i32 -1, ptr %42, align 4
  br label %43

43:                                               ; preds = %31, %26, %23, %9
  ret void
}

; Function Attrs: nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @init_macroblock(ptr nocapture noundef readonly %0) #25 {
  %2 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  %3 = load i32, ptr %2, align 4, !tbaa !301
  %4 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  %5 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 30
  %6 = sext i32 %3 to i64
  %7 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %8 = load i32, ptr %4, align 4, !tbaa !303
  br label %9

9:                                                ; preds = %77, %1
  %10 = phi i32 [ %8, %1 ], [ %57, %77 ]
  %11 = phi ptr [ %7, %1 ], [ %58, %77 ]
  %12 = phi i64 [ %6, %1 ], [ %78, %77 ]
  %13 = getelementptr inbounds %struct.storable_picture, ptr %11, i64 0, i32 39
  %14 = load ptr, ptr %13, align 8, !tbaa !371
  %15 = load ptr, ptr %14, align 8, !tbaa !13
  %16 = getelementptr inbounds ptr, ptr %15, i64 %12
  %17 = load ptr, ptr %16, align 8, !tbaa !13
  %18 = sext i32 %10 to i64
  %19 = getelementptr inbounds ptr, ptr %17, i64 %18
  %20 = load ptr, ptr %19, align 8, !tbaa !13
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %20, i8 0, i64 16, i1 false)
  %21 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %22 = getelementptr inbounds %struct.storable_picture, ptr %21, i64 0, i32 39
  %23 = load ptr, ptr %22, align 8, !tbaa !371
  %24 = getelementptr inbounds ptr, ptr %23, i64 1
  %25 = load ptr, ptr %24, align 8, !tbaa !13
  %26 = getelementptr inbounds ptr, ptr %25, i64 %12
  %27 = load ptr, ptr %26, align 8, !tbaa !13
  %28 = load i32, ptr %4, align 4, !tbaa !303
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds ptr, ptr %27, i64 %29
  %31 = load ptr, ptr %30, align 8, !tbaa !13
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %31, i8 0, i64 16, i1 false)
  %32 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %33 = getelementptr inbounds %struct.storable_picture, ptr %32, i64 0, i32 36
  %34 = load ptr, ptr %33, align 8, !tbaa !197
  %35 = load ptr, ptr %34, align 8, !tbaa !13
  %36 = getelementptr inbounds ptr, ptr %35, i64 %12
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  %38 = load i32, ptr %4, align 4, !tbaa !303
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, ptr %37, i64 %39
  store i32 -1, ptr %40, align 1
  %41 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %42 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 36
  %43 = load ptr, ptr %42, align 8, !tbaa !197
  %44 = getelementptr inbounds ptr, ptr %43, i64 1
  %45 = load ptr, ptr %44, align 8, !tbaa !13
  %46 = getelementptr inbounds ptr, ptr %45, i64 %12
  %47 = load ptr, ptr %46, align 8, !tbaa !13
  %48 = load i32, ptr %4, align 4, !tbaa !303
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, ptr %47, i64 %49
  store i32 -1, ptr %50, align 1
  %51 = load ptr, ptr %5, align 8, !tbaa !50
  %52 = getelementptr inbounds ptr, ptr %51, i64 %12
  %53 = load ptr, ptr %52, align 8, !tbaa !13
  %54 = load i32, ptr %4, align 4, !tbaa !303
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, ptr %53, i64 %55
  store i32 33686018, ptr %56, align 1
  %57 = load i32, ptr %4, align 4, !tbaa !303
  %58 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %59 = getelementptr inbounds %struct.storable_picture, ptr %58, i64 0, i32 37
  %60 = load ptr, ptr %59, align 8, !tbaa !717
  %61 = load ptr, ptr %60, align 8, !tbaa !13
  %62 = getelementptr inbounds ptr, ptr %61, i64 %12
  %63 = load ptr, ptr %62, align 8, !tbaa !13
  %64 = getelementptr inbounds ptr, ptr %60, i64 1
  %65 = load ptr, ptr %64, align 8, !tbaa !13
  %66 = getelementptr inbounds ptr, ptr %65, i64 %12
  %67 = load ptr, ptr %66, align 8, !tbaa !13
  %68 = sext i32 %57 to i64
  %69 = add i32 %57, 4
  br label %70

70:                                               ; preds = %70, %9
  %71 = phi i64 [ %68, %9 ], [ %74, %70 ]
  %72 = getelementptr inbounds i64, ptr %63, i64 %71
  store i64 -9223372036854775808, ptr %72, align 8, !tbaa !592
  %73 = getelementptr inbounds i64, ptr %67, i64 %71
  store i64 -9223372036854775808, ptr %73, align 8, !tbaa !592
  %74 = add nsw i64 %71, 1
  %75 = trunc i64 %74 to i32
  %76 = icmp eq i32 %69, %75
  br i1 %76, label %77, label %70, !llvm.loop !731

77:                                               ; preds = %70
  %78 = add nsw i64 %12, 1
  %79 = load i32, ptr %2, align 4, !tbaa !301
  %80 = add nsw i32 %79, 3
  %81 = sext i32 %80 to i64
  %82 = icmp slt i64 %12, %81
  br i1 %82, label %9, label %83, !llvm.loop !732

83:                                               ; preds = %77
  ret void
}

; Function Attrs: nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @reset_coeffs() #25 {
  %1 = load ptr, ptr @img, align 8, !tbaa !13
  br label %2

2:                                                ; preds = %19, %0
  %3 = phi ptr [ %1, %0 ], [ %21, %19 ]
  %4 = phi i64 [ 0, %0 ], [ %22, %19 ]
  %5 = getelementptr inbounds %struct.img_par, ptr %3, i64 0, i32 113
  %6 = load i32, ptr %5, align 4, !tbaa !93
  %7 = icmp sgt i32 %6, -4
  br i1 %7, label %8, label %19

8:                                                ; preds = %8, %2
  %9 = phi i64 [ %12, %8 ], [ 0, %2 ]
  %10 = phi ptr [ %13, %8 ], [ %3, %2 ]
  %11 = getelementptr inbounds %struct.img_par, ptr %10, i64 0, i32 28, i64 %4, i64 %9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %11, i8 0, i64 64, i1 false)
  %12 = add nuw nsw i64 %9, 1
  %13 = load ptr, ptr @img, align 8, !tbaa !13
  %14 = getelementptr inbounds %struct.img_par, ptr %13, i64 0, i32 113
  %15 = load i32, ptr %14, align 4, !tbaa !93
  %16 = add nsw i32 %15, 3
  %17 = sext i32 %16 to i64
  %18 = icmp slt i64 %9, %17
  br i1 %18, label %8, label %19, !llvm.loop !733

19:                                               ; preds = %8, %2
  %20 = phi i32 [ %6, %2 ], [ %15, %8 ]
  %21 = phi ptr [ %3, %2 ], [ %13, %8 ]
  %22 = add nuw nsw i64 %4, 1
  %23 = icmp eq i64 %22, 4
  br i1 %23, label %24, label %2, !llvm.loop !734

24:                                               ; preds = %19
  %.lcssa1 = phi i32 [ %20, %19 ]
  %.lcssa = phi ptr [ %21, %19 ]
  %25 = getelementptr inbounds %struct.img_par, ptr %.lcssa, i64 0, i32 32
  %26 = load ptr, ptr %25, align 8, !tbaa !617
  %27 = getelementptr inbounds %struct.img_par, ptr %.lcssa, i64 0, i32 1
  %28 = load i32, ptr %27, align 4, !tbaa !49
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8, !tbaa !13
  %32 = load ptr, ptr %31, align 8, !tbaa !13
  %33 = shl i32 %.lcssa1, 2
  %34 = add i32 %33, 16
  %35 = sext i32 %34 to i64
  %36 = shl nsw i64 %35, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %32, i8 0, i64 %36, i1 false)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal void @field_flag_inference() #10 {
  %1 = load ptr, ptr @img, align 8, !tbaa !13
  %2 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 39
  %3 = load ptr, ptr %2, align 8, !tbaa !84
  %4 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !49
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 26
  %8 = load i32, ptr %7, align 4, !tbaa !168
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %0
  %11 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 22
  br label %18

12:                                               ; preds = %0
  %13 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 27
  %14 = load i32, ptr %13, align 8, !tbaa !171
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 23
  br label %18

18:                                               ; preds = %16, %10
  %19 = phi ptr [ %17, %16 ], [ %11, %10 ]
  %20 = load i32, ptr %19, align 4, !tbaa !18
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %21, i32 20
  %23 = load i32, ptr %22, align 4, !tbaa !170
  br label %24

24:                                               ; preds = %18, %12
  %25 = phi i32 [ 0, %12 ], [ %23, %18 ]
  %26 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 20
  store i32 %25, ptr %26, align 4, !tbaa !170
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @read_one_macroblock(ptr noundef %0, ptr nocapture noundef readnone %1) #0 {
  %3 = alloca %struct.syntaxelement, align 8
  %4 = alloca [2 x i16], align 4
  %5 = alloca %struct.pix_pos, align 4
  %6 = alloca %struct.pix_pos, align 4
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #48
  %7 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %8 = load ptr, ptr %7, align 8, !tbaa !84
  %9 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 4, !tbaa !49
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11
  %13 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %14 = load ptr, ptr %13, align 8, !tbaa !165
  %15 = getelementptr inbounds %struct.Slice, ptr %14, i64 0, i32 7
  %16 = load i32, ptr %15, align 4, !tbaa !213
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [0 x [20 x i32]], ptr @assignSE2partition, i64 0, i64 %17
  %19 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 44
  %20 = load i32, ptr %19, align 8, !tbaa !189
  %21 = icmp eq i32 %20, 0
  %22 = and i32 %10, 1
  %23 = icmp eq i32 %22, 0
  %24 = select i1 %21, i1 true, i1 %23
  br i1 %24, label %40, label %25

25:                                               ; preds = %2
  %26 = add i32 %10, -1
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %27
  %29 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %30 = load i32, ptr %29, align 4, !tbaa !137
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %37, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %27, i32 6
  %34 = load i32, ptr %33, align 8, !tbaa !195
  %35 = icmp eq i32 %34, 0
  %36 = zext i1 %35 to i32
  br label %44

37:                                               ; preds = %25
  %38 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %27, i32 21
  %39 = load i32, ptr %38, align 8, !tbaa !183
  br label %44

40:                                               ; preds = %2
  br i1 %23, label %50, label %41

41:                                               ; preds = %40
  %42 = add i32 %10, -1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %41, %37, %32
  %45 = phi i64 [ %43, %41 ], [ %27, %32 ], [ %27, %37 ]
  %46 = phi ptr [ null, %41 ], [ %28, %32 ], [ %28, %37 ]
  %47 = phi i32 [ 0, %41 ], [ %36, %32 ], [ %39, %37 ]
  %48 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %45, i32 20
  %49 = load i32, ptr %48, align 4, !tbaa !170
  br label %50

50:                                               ; preds = %44, %40
  %51 = phi i32 [ %49, %44 ], [ 0, %40 ]
  %52 = phi ptr [ %46, %44 ], [ null, %40 ]
  %53 = phi i32 [ %47, %44 ], [ 0, %40 ]
  %54 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 20
  store i32 %51, ptr %54, align 4, !tbaa !170
  %55 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 6
  %56 = load i32, ptr %55, align 4, !tbaa !43
  store i32 %56, ptr %12, align 8, !tbaa !720
  %57 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 104
  %58 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  br label %59

59:                                               ; preds = %77, %50
  %60 = phi i1 [ true, %50 ], [ false, %77 ]
  %61 = phi i64 [ 0, %50 ], [ 1, %77 ]
  %62 = load i32, ptr %57, align 8, !tbaa !705
  %63 = sub nsw i32 0, %62
  %64 = load i32, ptr %55, align 4, !tbaa !43
  %65 = getelementptr inbounds %struct.storable_picture, ptr %58, i64 0, i32 58, i64 %61
  %66 = load i32, ptr %65, align 4, !tbaa !18
  %67 = add nsw i32 %66, %64
  %68 = tail call i32 @llvm.smax.i32(i32 %67, i32 %63)
  %69 = tail call i32 @llvm.smin.i32(i32 %68, i32 51)
  %70 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 1, i64 %61
  %71 = icmp slt i32 %69, 0
  br i1 %71, label %77, label %72

72:                                               ; preds = %59
  %73 = zext i32 %69 to i64
  %74 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %73
  %75 = load i8, ptr %74, align 1, !tbaa !14
  %76 = zext i8 %75 to i32
  br label %77

77:                                               ; preds = %72, %59
  %78 = phi i32 [ %76, %72 ], [ %69, %59 ]
  store i32 %78, ptr %70, align 4, !tbaa !18
  br i1 %60, label %59, label %79, !llvm.loop !735

79:                                               ; preds = %77
  store i32 2, ptr %3, align 8, !tbaa !736
  %80 = getelementptr inbounds %struct.Slice, ptr %14, i64 0, i32 9
  %81 = load ptr, ptr %80, align 8, !tbaa !214
  %82 = getelementptr inbounds i32, ptr %18, i64 2
  %83 = load i32, ptr %82, align 4, !tbaa !18
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %struct.datapartition, ptr %81, i64 %84
  %86 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %87 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %86, i64 0, i32 3
  %88 = load i32, ptr %87, align 4, !tbaa !490
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %79
  %91 = load ptr, ptr %85, align 8, !tbaa !448
  %92 = getelementptr inbounds %struct.Bitstream, ptr %91, i64 0, i32 5
  %93 = load i32, ptr %92, align 8, !tbaa !560
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %90, %79
  %96 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  store ptr @linfo_ue, ptr %96, align 8, !tbaa !737
  br label %97

97:                                               ; preds = %95, %90
  %98 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %99 = load i32, ptr %98, align 4, !tbaa !137
  switch i32 %99, label %146 [
    i32 2, label %100
    i32 4, label %100
  ]

100:                                              ; preds = %97, %97
  %101 = load i32, ptr %19, align 8, !tbaa !189
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %128, label %103

103:                                              ; preds = %100
  %104 = load i32, ptr %9, align 4, !tbaa !49
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %128

107:                                              ; preds = %103
  %108 = load ptr, ptr %85, align 8, !tbaa !448
  br i1 %89, label %113, label %109

109:                                              ; preds = %107
  %110 = getelementptr inbounds %struct.Bitstream, ptr %108, i64 0, i32 5
  %111 = load i32, ptr %110, align 8, !tbaa !560
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %109, %107
  %114 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 3
  store i32 1, ptr %114, align 4, !tbaa !212
  %115 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %3, ptr noundef %108) #46
  br label %121

116:                                              ; preds = %109
  %117 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readFieldModeInfo_CABAC, ptr %117, align 8, !tbaa !211
  %118 = getelementptr inbounds %struct.datapartition, ptr %81, i64 %84, i32 2
  %119 = load ptr, ptr %118, align 8, !tbaa !738
  %120 = call i32 %119(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef nonnull %85) #46
  br label %121

121:                                              ; preds = %116, %113
  %122 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %123 = load i32, ptr %122, align 4, !tbaa !173
  %124 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 20
  store i32 %123, ptr %124, align 4, !tbaa !170
  %125 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %126 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %125, i64 0, i32 3
  %127 = load i32, ptr %126, align 4, !tbaa !490
  br label %128

128:                                              ; preds = %121, %103, %100
  %129 = phi i32 [ %127, %121 ], [ %88, %103 ], [ %88, %100 ]
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void (...) @CheckAvailabilityOfNeighborsCABAC() #46
  br label %132

132:                                              ; preds = %131, %128
  %133 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readMB_typeInfo_CABAC, ptr %133, align 8, !tbaa !211
  %134 = getelementptr inbounds %struct.datapartition, ptr %81, i64 %84, i32 2
  %135 = load ptr, ptr %134, align 8, !tbaa !738
  %136 = call i32 %135(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %85) #46
  %137 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %138 = load i32, ptr %137, align 4, !tbaa !173
  %139 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 6
  store i32 %138, ptr %139, align 8, !tbaa !195
  %140 = load ptr, ptr %85, align 8, !tbaa !448
  %141 = getelementptr inbounds %struct.Bitstream, ptr %140, i64 0, i32 5
  %142 = load i32, ptr %141, align 8, !tbaa !560
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %344

144:                                              ; preds = %132
  %145 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 15
  store i32 0, ptr %145, align 8, !tbaa !565
  br label %344

146:                                              ; preds = %97
  %147 = icmp eq i32 %88, 1
  br i1 %147, label %148, label %225

148:                                              ; preds = %146
  %149 = load i32, ptr %19, align 8, !tbaa !189
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %158, label %151

151:                                              ; preds = %148
  %152 = load i32, ptr %9, align 4, !tbaa !49
  %153 = and i32 %152, 1
  %154 = icmp eq i32 %153, 0
  %155 = icmp ne i32 %53, 0
  %156 = select i1 %154, i1 true, i1 %155
  br i1 %156, label %157, label %158

157:                                              ; preds = %151
  tail call void @field_flag_inference() #47
  br label %158

158:                                              ; preds = %157, %151, %148
  tail call void (...) @CheckAvailabilityOfNeighborsCABAC() #46
  %159 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readMB_skip_flagInfo_CABAC, ptr %159, align 8, !tbaa !211
  %160 = getelementptr inbounds %struct.datapartition, ptr %81, i64 %84, i32 2
  %161 = load ptr, ptr %160, align 8, !tbaa !738
  %162 = call i32 %161(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %85) #46
  %163 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %164 = load i32, ptr %163, align 4, !tbaa !173
  %165 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 6
  store i32 %164, ptr %165, align 8, !tbaa !195
  %166 = icmp eq i32 %164, 0
  %167 = zext i1 %166 to i32
  %168 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 21
  store i32 %167, ptr %168, align 8, !tbaa !183
  %169 = load i32, ptr %98, align 4, !tbaa !137
  %170 = icmp eq i32 %169, 1
  br i1 %170, label %171, label %175

171:                                              ; preds = %158
  %172 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 2
  %173 = load i32, ptr %172, align 8, !tbaa !179
  %174 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 8
  store i32 %173, ptr %174, align 4, !tbaa !199
  br label %175

175:                                              ; preds = %171, %158
  %176 = load ptr, ptr %85, align 8, !tbaa !448
  %177 = getelementptr inbounds %struct.Bitstream, ptr %176, i64 0, i32 5
  %178 = load i32, ptr %177, align 8, !tbaa !560
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %175
  %181 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 15
  store i32 0, ptr %181, align 8, !tbaa !565
  br label %182

182:                                              ; preds = %180, %175
  %183 = load i32, ptr %163, align 4
  %184 = icmp eq i32 %183, 0
  %185 = select i1 %170, i1 %184, i1 false
  %186 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 2
  %187 = load i32, ptr %186, align 8
  %188 = icmp eq i32 %187, 0
  %189 = select i1 %185, i1 %188, i1 false
  br i1 %189, label %190, label %192

190:                                              ; preds = %182
  %191 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 34
  store i32 0, ptr %191, align 8, !tbaa !590
  br label %192

192:                                              ; preds = %190, %182
  %193 = load i32, ptr %19, align 8, !tbaa !189
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %212, label %195

195:                                              ; preds = %192
  %196 = load i32, ptr %9, align 4, !tbaa !49
  %197 = and i32 %196, 1
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %195
  br i1 %166, label %210, label %205

200:                                              ; preds = %195
  %201 = getelementptr inbounds %struct.macroblock, ptr %52, i64 0, i32 21
  %202 = load i32, ptr %201, align 8, !tbaa !183
  %203 = icmp eq i32 %202, 0
  %204 = select i1 %203, i1 true, i1 %166
  br i1 %204, label %212, label %205

205:                                              ; preds = %200, %199
  store ptr @readFieldModeInfo_CABAC, ptr %159, align 8, !tbaa !211
  %206 = load ptr, ptr %160, align 8, !tbaa !738
  %207 = call i32 %206(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef nonnull %85) #46
  %208 = load i32, ptr %163, align 4, !tbaa !173
  %209 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 20
  store i32 %208, ptr %209, align 4, !tbaa !170
  br label %212

210:                                              ; preds = %199
  %211 = call i32 @check_next_mb_and_get_field_mode_CABAC(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef nonnull %85) #46
  br label %212

212:                                              ; preds = %210, %205, %200, %192
  call void (...) @CheckAvailabilityOfNeighborsCABAC() #46
  %213 = load i32, ptr %165, align 8, !tbaa !195
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %344, label %215

215:                                              ; preds = %212
  store ptr @readMB_typeInfo_CABAC, ptr %159, align 8, !tbaa !211
  %216 = load ptr, ptr %160, align 8, !tbaa !738
  %217 = call i32 %216(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef nonnull %85) #46
  %218 = load i32, ptr %163, align 4, !tbaa !173
  store i32 %218, ptr %165, align 8, !tbaa !195
  %219 = load ptr, ptr %85, align 8, !tbaa !448
  %220 = getelementptr inbounds %struct.Bitstream, ptr %219, i64 0, i32 5
  %221 = load i32, ptr %220, align 8, !tbaa !560
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %344

223:                                              ; preds = %215
  %224 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 15
  store i32 0, ptr %224, align 8, !tbaa !565
  br label %344

225:                                              ; preds = %146
  %226 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 34
  %227 = load i32, ptr %226, align 8, !tbaa !590
  %228 = icmp eq i32 %227, -1
  br i1 %228, label %229, label %235

229:                                              ; preds = %225
  %230 = getelementptr inbounds %struct.datapartition, ptr %81, i64 %84, i32 2
  %231 = load ptr, ptr %230, align 8, !tbaa !738
  %232 = call i32 %231(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %85) #46
  %233 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %234 = load i32, ptr %233, align 4, !tbaa !173
  store i32 %234, ptr %226, align 8, !tbaa !590
  br label %235

235:                                              ; preds = %229, %225
  %236 = phi i32 [ %234, %229 ], [ %227, %225 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %279

238:                                              ; preds = %235
  %239 = load i32, ptr %19, align 8, !tbaa !189
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %254, label %241

241:                                              ; preds = %238
  %242 = load i32, ptr %9, align 4, !tbaa !49
  %243 = and i32 %242, 1
  %244 = icmp ne i32 %243, 0
  %245 = icmp eq i32 %53, 0
  %246 = select i1 %244, i1 %245, i1 false
  br i1 %246, label %254, label %247

247:                                              ; preds = %241
  %248 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 3
  store i32 1, ptr %248, align 4, !tbaa !212
  %249 = load ptr, ptr %85, align 8, !tbaa !448
  %250 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %3, ptr noundef %249) #46
  %251 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %252 = load i32, ptr %251, align 4, !tbaa !173
  %253 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 20
  store i32 %252, ptr %253, align 4, !tbaa !170
  br label %254

254:                                              ; preds = %247, %241, %238
  %255 = getelementptr inbounds %struct.datapartition, ptr %81, i64 %84, i32 2
  %256 = load ptr, ptr %255, align 8, !tbaa !738
  %257 = call i32 %256(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %85) #46
  %258 = load i32, ptr %98, align 4, !tbaa !137
  switch i32 %258, label %259 [
    i32 0, label %262
    i32 3, label %262
  ]

259:                                              ; preds = %254
  %260 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %261 = load i32, ptr %260, align 4, !tbaa !173
  br label %266

262:                                              ; preds = %254, %254
  %263 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %264 = load i32, ptr %263, align 4, !tbaa !173
  %265 = add nsw i32 %264, 1
  store i32 %265, ptr %263, align 4, !tbaa !173
  br label %266

266:                                              ; preds = %262, %259
  %267 = phi i32 [ %261, %259 ], [ %265, %262 ]
  %268 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 6
  store i32 %267, ptr %268, align 8, !tbaa !195
  %269 = load ptr, ptr %85, align 8, !tbaa !448
  %270 = getelementptr inbounds %struct.Bitstream, ptr %269, i64 0, i32 5
  %271 = load i32, ptr %270, align 8, !tbaa !560
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %275

273:                                              ; preds = %266
  %274 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 15
  store i32 0, ptr %274, align 8, !tbaa !565
  br label %275

275:                                              ; preds = %273, %266
  %276 = load i32, ptr %226, align 8, !tbaa !590
  %277 = add nsw i32 %276, -1
  store i32 %277, ptr %226, align 8, !tbaa !590
  %278 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 21
  store i32 0, ptr %278, align 8, !tbaa !183
  br label %344

279:                                              ; preds = %235
  %280 = add nsw i32 %236, -1
  store i32 %280, ptr %226, align 8, !tbaa !590
  %281 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 6
  store i32 0, ptr %281, align 8, !tbaa !195
  %282 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 15
  store i32 0, ptr %282, align 8, !tbaa !565
  %283 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 21
  store i32 1, ptr %283, align 8, !tbaa !183
  %284 = load i32, ptr %19, align 8, !tbaa !189
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %344, label %286

286:                                              ; preds = %279
  %287 = icmp eq i32 %280, 0
  br i1 %287, label %288, label %303

288:                                              ; preds = %286
  %289 = load i32, ptr %9, align 4, !tbaa !49
  %290 = and i32 %289, 1
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %344

292:                                              ; preds = %288
  %293 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 3
  store i32 1, ptr %293, align 4, !tbaa !212
  %294 = load ptr, ptr %85, align 8, !tbaa !448
  %295 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %3, ptr noundef %294) #46
  %296 = load ptr, ptr %85, align 8, !tbaa !448
  %297 = getelementptr inbounds %struct.Bitstream, ptr %296, i64 0, i32 2
  %298 = load i32, ptr %297, align 8, !tbaa !450
  %299 = add nsw i32 %298, -1
  store i32 %299, ptr %297, align 8, !tbaa !450
  %300 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %301 = load i32, ptr %300, align 4, !tbaa !173
  %302 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 20
  store i32 %301, ptr %302, align 4, !tbaa !170
  br label %344

303:                                              ; preds = %286
  %304 = icmp sgt i32 %236, 1
  br i1 %304, label %305, label %344

305:                                              ; preds = %303
  %306 = load i32, ptr %9, align 4, !tbaa !49
  %307 = and i32 %306, 1
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %344

309:                                              ; preds = %305
  %310 = add i32 %306, -2
  %311 = call i32 @mb_is_available(i32 noundef %310, i32 noundef %306) #46
  %312 = icmp eq i32 %311, 0
  %313 = load i32, ptr %9, align 4, !tbaa !49
  %314 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 87
  %315 = load i32, ptr %314, align 4, !tbaa !422
  %316 = shl i32 %315, 1
  br i1 %312, label %327, label %317

317:                                              ; preds = %309
  %318 = urem i32 %313, %316
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %327, label %320

320:                                              ; preds = %317
  %321 = load ptr, ptr %7, align 8, !tbaa !84
  %322 = add i32 %313, -2
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds %struct.macroblock, ptr %321, i64 %323, i32 20
  %325 = load i32, ptr %324, align 4, !tbaa !170
  %326 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 20
  store i32 %325, ptr %326, align 4, !tbaa !170
  br label %344

327:                                              ; preds = %317, %309
  %328 = sub i32 %313, %316
  %329 = call i32 @mb_is_available(i32 noundef %328, i32 noundef %313) #46
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %342, label %331

331:                                              ; preds = %327
  %332 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 87
  %333 = load ptr, ptr %7, align 8, !tbaa !84
  %334 = load i32, ptr %9, align 4, !tbaa !49
  %335 = load i32, ptr %332, align 4, !tbaa !422
  %336 = shl i32 %335, 1
  %337 = sub i32 %334, %336
  %338 = zext i32 %337 to i64
  %339 = getelementptr inbounds %struct.macroblock, ptr %333, i64 %338, i32 20
  %340 = load i32, ptr %339, align 4, !tbaa !170
  %341 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 20
  store i32 %340, ptr %341, align 4, !tbaa !170
  br label %344

342:                                              ; preds = %327
  %343 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 20
  store i32 0, ptr %343, align 4, !tbaa !170
  br label %344

344:                                              ; preds = %342, %331, %320, %305, %303, %292, %288, %279, %275, %223, %215, %212, %144, %132
  %345 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 20
  %346 = load i32, ptr %345, align 4, !tbaa !170
  %347 = trunc i32 %346 to i8
  %348 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %349 = getelementptr inbounds %struct.storable_picture, ptr %348, i64 0, i32 34
  %350 = load ptr, ptr %349, align 8, !tbaa !538
  %351 = load i32, ptr %9, align 4, !tbaa !49
  %352 = zext i32 %351 to i64
  %353 = getelementptr inbounds i8, ptr %350, i64 %352
  store i8 %347, ptr %353, align 1, !tbaa !14
  %354 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 33
  %355 = load ptr, ptr %354, align 8, !tbaa !700
  %356 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 16
  %357 = load i32, ptr %356, align 4, !tbaa !300
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds ptr, ptr %355, i64 %358
  %360 = load ptr, ptr %359, align 8, !tbaa !13
  %361 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 17
  %362 = load i32, ptr %361, align 8, !tbaa !299
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds i32, ptr %360, i64 %363
  store i32 0, ptr %364, align 4, !tbaa !18
  %365 = load i32, ptr %98, align 4, !tbaa !137
  switch i32 %365, label %371 [
    i32 0, label %366
    i32 2, label %367
    i32 1, label %368
    i32 3, label %369
    i32 4, label %370
  ]

366:                                              ; preds = %344
  call void @interpret_mb_mode_P(ptr noundef nonnull %0) #47
  br label %371

367:                                              ; preds = %344
  call void @interpret_mb_mode_I(ptr noundef nonnull %0) #47
  br label %371

368:                                              ; preds = %344
  call void @interpret_mb_mode_B(ptr noundef nonnull %0) #47
  br label %371

369:                                              ; preds = %344
  call void @interpret_mb_mode_P(ptr noundef nonnull %0) #47
  br label %371

370:                                              ; preds = %344
  call void @interpret_mb_mode_SI(ptr noundef nonnull %0) #47
  br label %371

371:                                              ; preds = %370, %369, %368, %367, %366, %344
  %372 = load i32, ptr %19, align 8, !tbaa !189
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %381, label %374

374:                                              ; preds = %371
  %375 = load i32, ptr %345, align 4, !tbaa !170
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %381, label %377

377:                                              ; preds = %374
  %378 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 47
  %379 = load <2 x i32>, ptr %378, align 8, !tbaa !18
  %380 = shl <2 x i32> %379, <i32 1, i32 1>
  store <2 x i32> %380, ptr %378, align 8, !tbaa !18
  br label %381

381:                                              ; preds = %377, %374, %371
  %382 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 6
  %383 = load i32, ptr %382, align 8, !tbaa !195
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %397

385:                                              ; preds = %381
  %386 = load i32, ptr %98, align 4, !tbaa !137
  %387 = icmp eq i32 %386, 1
  br i1 %387, label %388, label %393

388:                                              ; preds = %385
  %389 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %390 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %389, i64 0, i32 31
  %391 = load i32, ptr %390, align 4, !tbaa !739
  %392 = icmp ne i32 %391, 0
  br label %393

393:                                              ; preds = %388, %385
  %394 = phi i1 [ %392, %388 ], [ true, %385 ]
  %395 = zext i1 %394 to i32
  %396 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 31
  store i32 %395, ptr %396, align 8, !tbaa !740
  br label %498

397:                                              ; preds = %381
  %398 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 31
  store i32 1, ptr %398, align 8, !tbaa !740
  %399 = icmp eq i32 %383, 8
  br i1 %399, label %400, label %458

400:                                              ; preds = %397
  store i32 2, ptr %3, align 8, !tbaa !736
  %401 = load ptr, ptr %80, align 8, !tbaa !214
  %402 = load i32, ptr %82, align 4, !tbaa !18
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds %struct.datapartition, ptr %401, i64 %403
  %405 = getelementptr inbounds %struct.datapartition, ptr %401, i64 %403, i32 2
  %406 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  %407 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  %408 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  br label %409

409:                                              ; preds = %449, %400
  %410 = phi i64 [ 0, %400 ], [ %454, %449 ]
  %411 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %412 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %411, i64 0, i32 3
  %413 = load i32, ptr %412, align 4, !tbaa !490
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %420, label %415

415:                                              ; preds = %409
  %416 = load ptr, ptr %404, align 8, !tbaa !448
  %417 = getelementptr inbounds %struct.Bitstream, ptr %416, i64 0, i32 5
  %418 = load i32, ptr %417, align 8, !tbaa !560
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %421, label %420

420:                                              ; preds = %415, %409
  store ptr @linfo_ue, ptr %407, align 8, !tbaa !737
  br label %422

421:                                              ; preds = %415
  store ptr @readB8_typeInfo_CABAC, ptr %406, align 8, !tbaa !211
  br label %422

422:                                              ; preds = %421, %420
  %423 = load ptr, ptr %405, align 8, !tbaa !738
  %424 = call i32 %423(ptr noundef nonnull %3, ptr noundef %0, ptr noundef %404) #46
  %425 = load i32, ptr %408, align 4, !tbaa !173
  %426 = load i32, ptr %98, align 4, !tbaa !137
  %427 = icmp eq i32 %426, 1
  %428 = sext i32 %425 to i64
  %429 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 13, i64 %410
  %430 = getelementptr inbounds [14 x i32], ptr @SetB8Mode.b_v2b8, i64 0, i64 %428
  %431 = getelementptr inbounds [14 x i32], ptr @SetB8Mode.b_v2pd, i64 0, i64 %428
  %432 = getelementptr inbounds [5 x i32], ptr @SetB8Mode.p_v2b8, i64 0, i64 %428
  %433 = getelementptr inbounds [5 x i32], ptr @SetB8Mode.p_v2pd, i64 0, i64 %428
  %434 = select i1 %427, ptr %430, ptr %432
  %435 = select i1 %427, ptr %431, ptr %433
  %436 = load i32, ptr %434, align 4, !tbaa !18
  %437 = trunc i32 %436 to i8
  store i8 %437, ptr %429, align 1
  %438 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 14, i64 %410
  %439 = load i32, ptr %435, align 4, !tbaa !18
  %440 = trunc i32 %439 to i8
  store i8 %440, ptr %438, align 1, !tbaa !14
  %441 = icmp eq i8 %437, 0
  br i1 %441, label %442, label %447

442:                                              ; preds = %422
  %443 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %444 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %443, i64 0, i32 31
  %445 = load i32, ptr %444, align 4, !tbaa !739
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %449

447:                                              ; preds = %442, %422
  %448 = icmp eq i8 %437, 4
  br label %449

449:                                              ; preds = %447, %442
  %450 = phi i1 [ true, %442 ], [ %448, %447 ]
  %451 = zext i1 %450 to i32
  %452 = load i32, ptr %398, align 8, !tbaa !740
  %453 = and i32 %452, %451
  store i32 %453, ptr %398, align 8, !tbaa !740
  %454 = add nuw nsw i64 %410, 1
  %455 = icmp eq i64 %454, 4
  br i1 %455, label %456, label %409, !llvm.loop !741

456:                                              ; preds = %449
  call void @init_macroblock(ptr noundef nonnull %0) #47
  call void @readMotionInfoFromNAL(ptr noundef nonnull %0, ptr poison) #47
  %457 = load i32, ptr %382, align 8, !tbaa !195
  br label %458

458:                                              ; preds = %456, %397
  %459 = phi i32 [ %457, %456 ], [ %383, %397 ]
  %460 = icmp eq i32 %459, 9
  br i1 %460, label %461, label %498

461:                                              ; preds = %458
  %462 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 109
  %463 = load i32, ptr %462, align 4, !tbaa !742
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %498, label %465

465:                                              ; preds = %461
  store i32 0, ptr %3, align 8, !tbaa !736
  %466 = load ptr, ptr %80, align 8, !tbaa !214
  %467 = load i32, ptr %18, align 4, !tbaa !18
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds %struct.datapartition, ptr %466, i64 %468
  %470 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readMB_transform_size_flag_CABAC, ptr %470, align 8, !tbaa !211
  %471 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %472 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %471, i64 0, i32 3
  %473 = load i32, ptr %472, align 4, !tbaa !490
  %474 = icmp eq i32 %473, 0
  %475 = load ptr, ptr %469, align 8, !tbaa !448
  br i1 %474, label %480, label %476

476:                                              ; preds = %465
  %477 = getelementptr inbounds %struct.Bitstream, ptr %475, i64 0, i32 5
  %478 = load i32, ptr %477, align 8, !tbaa !560
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %483, label %480

480:                                              ; preds = %476, %465
  %481 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 3
  store i32 1, ptr %481, align 4, !tbaa !212
  %482 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %3, ptr noundef %475) #46
  br label %487

483:                                              ; preds = %476
  %484 = getelementptr inbounds %struct.datapartition, ptr %466, i64 %468, i32 2
  %485 = load ptr, ptr %484, align 8, !tbaa !738
  %486 = call i32 %485(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef nonnull %469) #46
  br label %487

487:                                              ; preds = %483, %480
  %488 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %489 = load i32, ptr %488, align 4, !tbaa !173
  %490 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 30
  store i32 %489, ptr %490, align 4, !tbaa !194
  %491 = icmp eq i32 %489, 0
  br i1 %491, label %500, label %492

492:                                              ; preds = %487
  store i32 13, ptr %382, align 8, !tbaa !195
  %493 = mul nuw nsw i64 %11, 408
  %494 = add nuw nsw i64 %493, 328
  %495 = getelementptr i8, ptr %8, i64 %494
  store i32 218959117, ptr %495, align 1
  %496 = add nuw nsw i64 %493, 332
  %497 = getelementptr i8, ptr %8, i64 %496
  store i32 -1, ptr %497, align 1
  br label %500

498:                                              ; preds = %461, %458, %393
  %499 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 30
  store i32 0, ptr %499, align 4, !tbaa !194
  br label %500

500:                                              ; preds = %498, %492, %487
  %501 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %502 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %501, i64 0, i32 30
  %503 = load i32, ptr %502, align 4, !tbaa !54
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %526, label %505

505:                                              ; preds = %500
  %506 = load i32, ptr %98, align 4, !tbaa !137
  %507 = icmp ult i32 %506, 2
  br i1 %507, label %508, label %526

508:                                              ; preds = %505
  %509 = load i32, ptr %382, align 8, !tbaa !195
  %510 = add i32 %509, -9
  %511 = icmp ult i32 %510, 6
  br i1 %511, label %518, label %512

512:                                              ; preds = %518, %508
  %513 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  %514 = load ptr, ptr %513, align 8, !tbaa !56
  %515 = load i32, ptr %9, align 4, !tbaa !49
  %516 = zext i32 %515 to i64
  %517 = getelementptr inbounds i32, ptr %514, i64 %516
  store i32 0, ptr %517, align 4, !tbaa !18
  br label %526

518:                                              ; preds = %508
  %519 = trunc i32 %510 to i8
  %520 = lshr i8 59, %519
  %521 = and i8 %520, 1
  %522 = icmp eq i8 %521, 0
  br i1 %522, label %512, label %523

523:                                              ; preds = %518
  %524 = sext i32 %510 to i64
  %525 = getelementptr inbounds [6 x i32], ptr @switch.table.read_one_macroblock, i64 0, i64 %524
  br label %526

526:                                              ; preds = %523, %512, %505, %500
  %527 = phi ptr [ %525, %523 ], [ %382, %500 ], [ %382, %512 ], [ %382, %505 ]
  %528 = load i32, ptr %527, align 4
  switch i32 %528, label %548 [
    i32 9, label %529
    i32 10, label %529
    i32 14, label %529
    i32 13, label %529
    i32 12, label %529
    i32 8, label %811
  ]

529:                                              ; preds = %526, %526, %526, %526, %526
  %530 = load ptr, ptr %80, align 8, !tbaa !214
  %531 = getelementptr inbounds i32, ptr %18, i64 6
  %532 = load i32, ptr %531, align 4, !tbaa !18
  %533 = sext i32 %532 to i64
  %534 = getelementptr inbounds %struct.datapartition, ptr %530, i64 %533
  %535 = load ptr, ptr %534, align 8, !tbaa !448
  %536 = getelementptr inbounds %struct.Bitstream, ptr %535, i64 0, i32 5
  %537 = load i32, ptr %536, align 8, !tbaa !560
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %548, label %539

539:                                              ; preds = %529
  %540 = load i32, ptr %0, align 8, !tbaa !569
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %548, label %542

542:                                              ; preds = %539
  store i32 0, ptr %382, align 8, !tbaa !195
  %543 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 15
  store i32 1, ptr %543, align 8, !tbaa !565
  %544 = mul nuw nsw i64 %11, 408
  %545 = add nuw nsw i64 %544, 328
  %546 = getelementptr i8, ptr %8, i64 %545
  store i32 0, ptr %546, align 1
  %547 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 14, i64 0
  store <4 x i8> zeroinitializer, ptr %547, align 1, !tbaa !14
  br label %548

548:                                              ; preds = %542, %539, %529, %526
  call void @init_macroblock(ptr noundef %0) #47
  %549 = load i32, ptr %382, align 8, !tbaa !195
  switch i32 %549, label %811 [
    i32 0, label %550
    i32 14, label %815
  ]

550:                                              ; preds = %548
  %551 = load i32, ptr %98, align 4, !tbaa !137
  switch i32 %551, label %811 [
    i32 1, label %552
    i32 0, label %563
    i32 3, label %563
  ]

552:                                              ; preds = %550
  %553 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 34
  %554 = load i32, ptr %553, align 8, !tbaa !590
  %555 = icmp sgt i32 %554, -1
  br i1 %555, label %556, label %811

556:                                              ; preds = %552
  %557 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 8
  store i32 0, ptr %557, align 4, !tbaa !199
  call void @reset_coeffs() #47
  %558 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %559 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %558, i64 0, i32 3
  %560 = load i32, ptr %559, align 4, !tbaa !490
  %561 = icmp eq i32 %560, 1
  br i1 %561, label %562, label %820

562:                                              ; preds = %556
  store i32 -1, ptr %553, align 8, !tbaa !590
  br label %820

563:                                              ; preds = %550, %550
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #48
  %564 = load i32, ptr %19, align 8, !tbaa !189
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %566, label %568

566:                                              ; preds = %563
  %567 = load i32, ptr %9, align 4, !tbaa !49
  br label %576

568:                                              ; preds = %563
  %569 = load i32, ptr %345, align 4, !tbaa !170
  %570 = icmp eq i32 %569, 0
  %571 = load i32, ptr %9, align 4, !tbaa !49
  br i1 %570, label %576, label %572

572:                                              ; preds = %568
  %573 = and i32 %571, 1
  %574 = icmp eq i32 %573, 0
  %575 = select i1 %574, i64 2, i64 4
  br label %576

576:                                              ; preds = %572, %568, %566
  %577 = phi i32 [ %571, %572 ], [ %571, %568 ], [ %567, %566 ]
  %578 = phi i64 [ %575, %572 ], [ 0, %568 ], [ 0, %566 ]
  %579 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %580 = getelementptr inbounds %struct.storable_picture, ptr %579, i64 0, i32 39
  %581 = load ptr, ptr %580, align 8, !tbaa !371
  %582 = load ptr, ptr %581, align 8, !tbaa !13
  call void @getLuma4x4Neighbour(i32 noundef %577, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %5) #46
  %583 = load i32, ptr %9, align 4, !tbaa !49
  call void @getLuma4x4Neighbour(i32 noundef %583, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %6) #46
  %584 = load i32, ptr %5, align 4, !tbaa !52
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %627, label %586

586:                                              ; preds = %576
  %587 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 5
  %588 = load i32, ptr %587, align 4, !tbaa !59
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds ptr, ptr %582, i64 %589
  %591 = load ptr, ptr %590, align 8, !tbaa !13
  %592 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 4
  %593 = load i32, ptr %592, align 4, !tbaa !60
  %594 = sext i32 %593 to i64
  %595 = getelementptr inbounds ptr, ptr %591, i64 %594
  %596 = load ptr, ptr %595, align 8, !tbaa !13
  %597 = getelementptr inbounds i16, ptr %596, i64 1
  %598 = load i16, ptr %597, align 2, !tbaa !40
  %599 = sext i16 %598 to i32
  %600 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %601 = getelementptr inbounds %struct.storable_picture, ptr %600, i64 0, i32 36
  %602 = load ptr, ptr %601, align 8, !tbaa !197
  %603 = load ptr, ptr %602, align 8, !tbaa !13
  %604 = getelementptr inbounds ptr, ptr %603, i64 %589
  %605 = load ptr, ptr %604, align 8, !tbaa !13
  %606 = getelementptr inbounds i8, ptr %605, i64 %594
  %607 = load i8, ptr %606, align 1, !tbaa !14
  %608 = sext i8 %607 to i32
  %609 = load i32, ptr %345, align 4, !tbaa !170
  %610 = icmp eq i32 %609, 0
  %611 = load ptr, ptr %7, align 8, !tbaa !84
  %612 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 1
  %613 = load i32, ptr %612, align 4, !tbaa !57
  %614 = sext i32 %613 to i64
  %615 = getelementptr inbounds %struct.macroblock, ptr %611, i64 %614, i32 20
  %616 = load i32, ptr %615, align 4, !tbaa !170
  %617 = icmp eq i32 %616, 0
  br i1 %610, label %623, label %618

618:                                              ; preds = %586
  br i1 %617, label %619, label %627

619:                                              ; preds = %618
  %620 = sdiv i16 %598, 2
  %621 = sext i16 %620 to i32
  %622 = shl nsw i32 %608, 1
  br label %627

623:                                              ; preds = %586
  br i1 %617, label %627, label %624

624:                                              ; preds = %623
  %625 = shl nsw i32 %599, 1
  %626 = ashr i32 %608, 1
  br label %627

627:                                              ; preds = %624, %623, %619, %618, %576
  %628 = phi i32 [ %625, %624 ], [ %599, %623 ], [ 0, %576 ], [ %621, %619 ], [ %599, %618 ]
  %629 = phi i32 [ %626, %624 ], [ %608, %623 ], [ 0, %576 ], [ %622, %619 ], [ %608, %618 ]
  %630 = load i32, ptr %6, align 4, !tbaa !52
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %673, label %632

632:                                              ; preds = %627
  %633 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 5
  %634 = load i32, ptr %633, align 4, !tbaa !59
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds ptr, ptr %582, i64 %635
  %637 = load ptr, ptr %636, align 8, !tbaa !13
  %638 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 4
  %639 = load i32, ptr %638, align 4, !tbaa !60
  %640 = sext i32 %639 to i64
  %641 = getelementptr inbounds ptr, ptr %637, i64 %640
  %642 = load ptr, ptr %641, align 8, !tbaa !13
  %643 = getelementptr inbounds i16, ptr %642, i64 1
  %644 = load i16, ptr %643, align 2, !tbaa !40
  %645 = sext i16 %644 to i32
  %646 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %647 = getelementptr inbounds %struct.storable_picture, ptr %646, i64 0, i32 36
  %648 = load ptr, ptr %647, align 8, !tbaa !197
  %649 = load ptr, ptr %648, align 8, !tbaa !13
  %650 = getelementptr inbounds ptr, ptr %649, i64 %635
  %651 = load ptr, ptr %650, align 8, !tbaa !13
  %652 = getelementptr inbounds i8, ptr %651, i64 %640
  %653 = load i8, ptr %652, align 1, !tbaa !14
  %654 = sext i8 %653 to i32
  %655 = load i32, ptr %345, align 4, !tbaa !170
  %656 = icmp eq i32 %655, 0
  %657 = load ptr, ptr %7, align 8, !tbaa !84
  %658 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 1
  %659 = load i32, ptr %658, align 4, !tbaa !57
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds %struct.macroblock, ptr %657, i64 %660, i32 20
  %662 = load i32, ptr %661, align 4, !tbaa !170
  %663 = icmp eq i32 %662, 0
  br i1 %656, label %669, label %664

664:                                              ; preds = %632
  br i1 %663, label %665, label %673

665:                                              ; preds = %664
  %666 = sdiv i16 %644, 2
  %667 = sext i16 %666 to i32
  %668 = shl nsw i32 %654, 1
  br label %673

669:                                              ; preds = %632
  br i1 %663, label %673, label %670

670:                                              ; preds = %669
  %671 = shl nsw i32 %645, 1
  %672 = ashr i32 %654, 1
  br label %673

673:                                              ; preds = %670, %669, %665, %664, %627
  %674 = phi i32 [ %671, %670 ], [ %645, %669 ], [ 0, %627 ], [ %667, %665 ], [ %645, %664 ]
  %675 = phi i32 [ %672, %670 ], [ %654, %669 ], [ 0, %627 ], [ %668, %665 ], [ %654, %664 ]
  br i1 %585, label %694, label %676

676:                                              ; preds = %673
  %677 = icmp eq i32 %629, 0
  br i1 %677, label %678, label %694

678:                                              ; preds = %676
  %679 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 5
  %680 = load i32, ptr %679, align 4, !tbaa !59
  %681 = sext i32 %680 to i64
  %682 = getelementptr inbounds ptr, ptr %582, i64 %681
  %683 = load ptr, ptr %682, align 8, !tbaa !13
  %684 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 4
  %685 = load i32, ptr %684, align 4, !tbaa !60
  %686 = sext i32 %685 to i64
  %687 = getelementptr inbounds ptr, ptr %683, i64 %686
  %688 = load ptr, ptr %687, align 8, !tbaa !13
  %689 = load i16, ptr %688, align 2, !tbaa !40
  %690 = icmp eq i16 %689, 0
  br i1 %690, label %691, label %694

691:                                              ; preds = %678
  %692 = icmp eq i32 %628, 0
  %693 = zext i1 %692 to i32
  br label %694

694:                                              ; preds = %691, %678, %676, %673
  %695 = phi i32 [ 1, %673 ], [ 0, %678 ], [ 0, %676 ], [ %693, %691 ]
  br i1 %631, label %713, label %696

696:                                              ; preds = %694
  %697 = icmp eq i32 %675, 0
  br i1 %697, label %698, label %713

698:                                              ; preds = %696
  %699 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 5
  %700 = load i32, ptr %699, align 4, !tbaa !59
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds ptr, ptr %582, i64 %701
  %703 = load ptr, ptr %702, align 8, !tbaa !13
  %704 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 4
  %705 = load i32, ptr %704, align 4, !tbaa !60
  %706 = sext i32 %705 to i64
  %707 = getelementptr inbounds ptr, ptr %703, i64 %706
  %708 = load ptr, ptr %707, align 8, !tbaa !13
  %709 = load i16, ptr %708, align 2, !tbaa !40
  %710 = icmp eq i16 %709, 0
  %711 = icmp eq i32 %674, 0
  %712 = select i1 %710, i1 %711, i1 false
  br label %713

713:                                              ; preds = %698, %696, %694
  %714 = phi i1 [ true, %694 ], [ false, %696 ], [ %712, %698 ]
  %715 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %11, i32 8
  store i32 0, ptr %715, align 4, !tbaa !199
  call void @reset_coeffs() #47
  %716 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  %717 = load i32, ptr %716, align 4, !tbaa !301
  %718 = icmp ne i32 %695, 0
  %719 = select i1 %714, i1 true, i1 %718
  br i1 %719, label %720, label %735

720:                                              ; preds = %713
  %721 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  %722 = sext i32 %717 to i64
  %723 = add nsw i32 %717, 3
  %724 = sext i32 %723 to i64
  br label %725

725:                                              ; preds = %725, %720
  %726 = phi i64 [ %722, %720 ], [ %733, %725 ]
  %727 = getelementptr inbounds ptr, ptr %582, i64 %726
  %728 = load ptr, ptr %727, align 8, !tbaa !13
  %729 = load i32, ptr %721, align 4, !tbaa !303
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds ptr, ptr %728, i64 %730
  %732 = load ptr, ptr %731, align 8, !tbaa !13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %732, i8 0, i64 16, i1 false)
  %733 = add nsw i64 %726, 1
  %734 = icmp slt i64 %726, %724
  br i1 %734, label %725, label %763, !llvm.loop !743

735:                                              ; preds = %713
  %736 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %737 = getelementptr inbounds %struct.storable_picture, ptr %736, i64 0, i32 36
  %738 = load ptr, ptr %737, align 8, !tbaa !197
  %739 = getelementptr inbounds %struct.storable_picture, ptr %736, i64 0, i32 39
  %740 = load ptr, ptr %739, align 8, !tbaa !371
  call fastcc void @SetMotionVectorPredictor(ptr noundef nonnull %0, ptr noundef nonnull %4, i8 noundef signext 0, i8 noundef zeroext 0, ptr noundef %738, ptr noundef %740, i32 noundef 0, i32 noundef 0, i32 noundef 16, i32 noundef 16) #47
  %741 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  %742 = load i32, ptr %741, align 4, !tbaa !303
  %743 = sext i32 %742 to i64
  %744 = sext i32 %717 to i64
  %745 = load i32, ptr %4, align 4, !tbaa !40
  %746 = add nsw i32 %742, 3
  %747 = sext i32 %746 to i64
  %748 = add nsw i32 %717, 3
  %749 = sext i32 %748 to i64
  br label %750

750:                                              ; preds = %760, %735
  %751 = phi i64 [ %744, %735 ], [ %761, %760 ]
  %752 = getelementptr inbounds ptr, ptr %582, i64 %751
  %753 = load ptr, ptr %752, align 8, !tbaa !13
  br label %754

754:                                              ; preds = %754, %750
  %755 = phi i64 [ %743, %750 ], [ %758, %754 ]
  %756 = getelementptr inbounds ptr, ptr %753, i64 %755
  %757 = load ptr, ptr %756, align 8, !tbaa !13
  store i32 %745, ptr %757, align 2, !tbaa !40
  %758 = add nsw i64 %755, 1
  %759 = icmp slt i64 %755, %747
  br i1 %759, label %754, label %760, !llvm.loop !744

760:                                              ; preds = %754
  %761 = add nsw i64 %751, 1
  %762 = icmp slt i64 %751, %749
  br i1 %762, label %750, label %763, !llvm.loop !745

763:                                              ; preds = %760, %725
  %764 = phi i64 [ %722, %725 ], [ %744, %760 ]
  %765 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  %766 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 3
  %767 = add nsw i32 %717, 3
  %768 = sext i32 %767 to i64
  br label %769

769:                                              ; preds = %807, %763
  %770 = phi i64 [ %764, %763 ], [ %808, %807 ]
  %771 = load i32, ptr %765, align 4, !tbaa !303
  %772 = sext i32 %771 to i64
  %773 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %774 = getelementptr inbounds %struct.storable_picture, ptr %773, i64 0, i32 36
  %775 = load ptr, ptr %774, align 8, !tbaa !197
  %776 = load ptr, ptr %775, align 8, !tbaa !13
  %777 = getelementptr inbounds ptr, ptr %776, i64 %770
  %778 = load ptr, ptr %777, align 8, !tbaa !13
  br label %779

779:                                              ; preds = %779, %769
  %780 = phi ptr [ %778, %769 ], [ %790, %779 ]
  %781 = phi i64 [ %772, %769 ], [ %802, %779 ]
  %782 = getelementptr inbounds i8, ptr %780, i64 %781
  store i8 0, ptr %782, align 1, !tbaa !14
  %783 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %784 = load i32, ptr %766, align 4, !tbaa !175
  %785 = sext i32 %784 to i64
  %786 = getelementptr inbounds %struct.storable_picture, ptr %783, i64 0, i32 36
  %787 = load ptr, ptr %786, align 8, !tbaa !197
  %788 = load ptr, ptr %787, align 8, !tbaa !13
  %789 = getelementptr inbounds ptr, ptr %788, i64 %770
  %790 = load ptr, ptr %789, align 8, !tbaa !13
  %791 = getelementptr inbounds i8, ptr %790, i64 %781
  %792 = load i8, ptr %791, align 1, !tbaa !14
  %793 = sext i8 %792 to i64
  %794 = getelementptr inbounds %struct.storable_picture, ptr %783, i64 0, i32 5, i64 %785, i64 %578, i64 %793
  %795 = load i64, ptr %794, align 8, !tbaa !592
  %796 = getelementptr inbounds %struct.storable_picture, ptr %783, i64 0, i32 37
  %797 = load ptr, ptr %796, align 8, !tbaa !717
  %798 = load ptr, ptr %797, align 8, !tbaa !13
  %799 = getelementptr inbounds ptr, ptr %798, i64 %770
  %800 = load ptr, ptr %799, align 8, !tbaa !13
  %801 = getelementptr inbounds i64, ptr %800, i64 %781
  store i64 %795, ptr %801, align 8, !tbaa !592
  %802 = add nsw i64 %781, 1
  %803 = load i32, ptr %765, align 4, !tbaa !303
  %804 = add nsw i32 %803, 3
  %805 = sext i32 %804 to i64
  %806 = icmp slt i64 %781, %805
  br i1 %806, label %779, label %807, !llvm.loop !746

807:                                              ; preds = %779
  %808 = add nsw i64 %770, 1
  %809 = icmp slt i64 %770, %768
  br i1 %809, label %769, label %810, !llvm.loop !747

810:                                              ; preds = %807
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #48
  br label %820

811:                                              ; preds = %552, %550, %548, %526
  call void @read_ipred_modes(ptr noundef %0, ptr poison) #47
  %812 = load i32, ptr %382, align 8, !tbaa !195
  switch i32 %812, label %813 [
    i32 9, label %814
    i32 10, label %814
    i32 13, label %814
    i32 0, label %814
    i32 14, label %814
    i32 8, label %814
  ]

813:                                              ; preds = %811
  call void @readMotionInfoFromNAL(ptr noundef %0, ptr poison) #47
  br label %814

814:                                              ; preds = %813, %811, %811, %811, %811, %811, %811
  call void @readCBPandCoeffsFromNAL(ptr noundef %0, ptr noundef %1) #47
  br label %820

815:                                              ; preds = %548
  %816 = load ptr, ptr %80, align 8, !tbaa !214
  %817 = load i32, ptr %82, align 4, !tbaa !18
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds %struct.datapartition, ptr %816, i64 %818
  call void @readIPCMcoeffsFromNAL(ptr noundef %0, ptr poison, ptr noundef %819) #47
  br label %820

820:                                              ; preds = %815, %814, %810, %562, %556
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #48
  ret i32 1
}

; Function Attrs: nounwind optsize uwtable
define internal void @readMotionInfoFromNAL(ptr noundef %0, ptr nocapture readnone %1) #0 {
  %3 = alloca %struct.syntaxelement, align 8
  %4 = alloca [2 x i16], align 2
  %5 = alloca %struct.pix_pos, align 4
  %6 = alloca %struct.pix_pos, align 4
  %7 = alloca %struct.pix_pos, align 4
  %8 = alloca %struct.pix_pos, align 4
  %9 = alloca [2 x i16], align 4
  %10 = alloca [2 x i16], align 4
  %11 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %12 = load ptr, ptr %11, align 8, !tbaa !84
  %13 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %14 = load i32, ptr %13, align 4, !tbaa !49
  %15 = zext i32 %14 to i64
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #48
  %16 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %17 = load ptr, ptr %16, align 8, !tbaa !165
  %18 = getelementptr inbounds %struct.Slice, ptr %17, i64 0, i32 7
  %19 = load i32, ptr %18, align 4, !tbaa !213
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [0 x [20 x i32]], ptr @assignSE2partition, i64 0, i64 %20
  %22 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %23 = load i32, ptr %22, align 4, !tbaa !137
  %24 = icmp eq i32 %23, 1
  %25 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 6
  %26 = load i32, ptr %25, align 8, !tbaa !195
  %27 = icmp eq i32 %26, 8
  %28 = select i1 %27, i32 4, i32 %26
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [8 x [2 x i32]], ptr @BLOCK_STEP, i64 0, i64 %29
  %31 = load i32, ptr %30, align 8, !tbaa !18
  %32 = getelementptr inbounds [8 x [2 x i32]], ptr @BLOCK_STEP, i64 0, i64 %29, i64 1
  %33 = load i32, ptr %32, align 4, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #48
  %34 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 44
  %35 = load i32, ptr %34, align 8, !tbaa !189
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %2
  %38 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 20
  %39 = load i32, ptr %38, align 4, !tbaa !170
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %55, label %41

41:                                               ; preds = %37
  %42 = and i32 %14, 1
  %43 = icmp eq i32 %42, 0
  %44 = load ptr, ptr @Co_located, align 8, !tbaa !13
  br i1 %43, label %50, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.colocated_params, ptr %44, i64 0, i32 17
  %47 = getelementptr inbounds %struct.colocated_params, ptr %44, i64 0, i32 16
  %48 = getelementptr inbounds %struct.colocated_params, ptr %44, i64 0, i32 14
  %49 = getelementptr inbounds %struct.colocated_params, ptr %44, i64 0, i32 15
  br label %61

50:                                               ; preds = %41
  %51 = getelementptr inbounds %struct.colocated_params, ptr %44, i64 0, i32 12
  %52 = getelementptr inbounds %struct.colocated_params, ptr %44, i64 0, i32 11
  %53 = getelementptr inbounds %struct.colocated_params, ptr %44, i64 0, i32 9
  %54 = getelementptr inbounds %struct.colocated_params, ptr %44, i64 0, i32 10
  br label %61

55:                                               ; preds = %37, %2
  %56 = load ptr, ptr @Co_located, align 8, !tbaa !13
  %57 = getelementptr inbounds %struct.colocated_params, ptr %56, i64 0, i32 7
  %58 = getelementptr inbounds %struct.colocated_params, ptr %56, i64 0, i32 6
  %59 = getelementptr inbounds %struct.colocated_params, ptr %56, i64 0, i32 4
  %60 = getelementptr inbounds %struct.colocated_params, ptr %56, i64 0, i32 5
  br label %61

61:                                               ; preds = %55, %50, %45
  %62 = phi i32 [ 4, %45 ], [ 2, %50 ], [ 0, %55 ]
  %63 = phi ptr [ %46, %45 ], [ %51, %50 ], [ %57, %55 ]
  %64 = phi ptr [ %47, %45 ], [ %52, %50 ], [ %58, %55 ]
  %65 = phi ptr [ %48, %45 ], [ %53, %50 ], [ %59, %55 ]
  %66 = phi ptr [ %49, %45 ], [ %54, %50 ], [ %60, %55 ]
  %67 = load ptr, ptr %66, align 8, !tbaa !13
  %68 = load ptr, ptr %65, align 8, !tbaa !13
  %69 = load ptr, ptr %64, align 8, !tbaa !13
  %70 = load ptr, ptr %63, align 8, !tbaa !13
  %71 = and i1 %24, %27
  br i1 %71, label %72, label %1203

72:                                               ; preds = %61
  %73 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 9
  %74 = load i32, ptr %73, align 8, !tbaa !465
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  %78 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 20
  %79 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  %80 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 47
  %81 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 36
  %82 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 3
  br label %1032

83:                                               ; preds = %72
  br i1 %36, label %98, label %84

84:                                               ; preds = %83
  %85 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 20
  %86 = load i32, ptr %85, align 4, !tbaa !170
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %84
  %89 = and i32 %14, 1
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  %92 = load i32, ptr %91, align 4, !tbaa !301
  br i1 %90, label %96, label %93

93:                                               ; preds = %88
  %94 = add nsw i32 %92, -4
  %95 = ashr i32 %94, 1
  br label %101

96:                                               ; preds = %88
  %97 = ashr i32 %92, 1
  br label %101

98:                                               ; preds = %84, %83
  %99 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  %100 = load i32, ptr %99, align 4, !tbaa !301
  br label %101

101:                                              ; preds = %98, %96, %93
  %102 = phi i32 [ %100, %98 ], [ %95, %93 ], [ %97, %96 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #48
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #48
  store i32 0, ptr %9, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #48
  store i32 0, ptr %10, align 4
  call void @getLuma4x4Neighbour(i32 noundef %14, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %5) #46
  %103 = load i32, ptr %13, align 4, !tbaa !49
  call void @getLuma4x4Neighbour(i32 noundef %103, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %6) #46
  %104 = load i32, ptr %13, align 4, !tbaa !49
  call void @getLuma4x4Neighbour(i32 noundef %104, i32 noundef 16, i32 noundef -1, ptr noundef nonnull %8) #46
  %105 = load i32, ptr %13, align 4, !tbaa !49
  call void @getLuma4x4Neighbour(i32 noundef %105, i32 noundef -1, i32 noundef -1, ptr noundef nonnull %7) #46
  %106 = load i32, ptr %34, align 8, !tbaa !189
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %263

108:                                              ; preds = %101
  %109 = load i32, ptr %5, align 4, !tbaa !52
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %127, label %111

111:                                              ; preds = %108
  %112 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %113 = getelementptr inbounds %struct.storable_picture, ptr %112, i64 0, i32 36
  %114 = load ptr, ptr %113, align 8, !tbaa !197
  %115 = load ptr, ptr %114, align 8, !tbaa !13
  %116 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 5
  %117 = load i32, ptr %116, align 4, !tbaa !59
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds ptr, ptr %115, i64 %118
  %120 = load ptr, ptr %119, align 8, !tbaa !13
  %121 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 4
  %122 = load i32, ptr %121, align 4, !tbaa !60
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, ptr %120, i64 %123
  %125 = load i8, ptr %124, align 1, !tbaa !14
  %126 = sext i8 %125 to i32
  br label %127

127:                                              ; preds = %111, %108
  %128 = phi i32 [ %126, %111 ], [ -1, %108 ]
  %129 = load i32, ptr %6, align 4, !tbaa !52
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %147, label %131

131:                                              ; preds = %127
  %132 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %133 = getelementptr inbounds %struct.storable_picture, ptr %132, i64 0, i32 36
  %134 = load ptr, ptr %133, align 8, !tbaa !197
  %135 = load ptr, ptr %134, align 8, !tbaa !13
  %136 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 5
  %137 = load i32, ptr %136, align 4, !tbaa !59
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds ptr, ptr %135, i64 %138
  %140 = load ptr, ptr %139, align 8, !tbaa !13
  %141 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 4
  %142 = load i32, ptr %141, align 4, !tbaa !60
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds i8, ptr %140, i64 %143
  %145 = load i8, ptr %144, align 1, !tbaa !14
  %146 = sext i8 %145 to i32
  br label %147

147:                                              ; preds = %131, %127
  %148 = phi i32 [ %146, %131 ], [ -1, %127 ]
  %149 = load i32, ptr %7, align 4, !tbaa !52
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %167, label %151

151:                                              ; preds = %147
  %152 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %153 = getelementptr inbounds %struct.storable_picture, ptr %152, i64 0, i32 36
  %154 = load ptr, ptr %153, align 8, !tbaa !197
  %155 = load ptr, ptr %154, align 8, !tbaa !13
  %156 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %157 = load i32, ptr %156, align 4, !tbaa !59
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds ptr, ptr %155, i64 %158
  %160 = load ptr, ptr %159, align 8, !tbaa !13
  %161 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %162 = load i32, ptr %161, align 4, !tbaa !60
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i8, ptr %160, i64 %163
  %165 = load i8, ptr %164, align 1, !tbaa !14
  %166 = sext i8 %165 to i32
  br label %167

167:                                              ; preds = %151, %147
  %168 = phi i32 [ %166, %151 ], [ -1, %147 ]
  %169 = load i32, ptr %8, align 4, !tbaa !52
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %187, label %171

171:                                              ; preds = %167
  %172 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %173 = getelementptr inbounds %struct.storable_picture, ptr %172, i64 0, i32 36
  %174 = load ptr, ptr %173, align 8, !tbaa !197
  %175 = load ptr, ptr %174, align 8, !tbaa !13
  %176 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 5
  %177 = load i32, ptr %176, align 4, !tbaa !59
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds ptr, ptr %175, i64 %178
  %180 = load ptr, ptr %179, align 8, !tbaa !13
  %181 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 4
  %182 = load i32, ptr %181, align 4, !tbaa !60
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i8, ptr %180, i64 %183
  %185 = load i8, ptr %184, align 1, !tbaa !14
  %186 = sext i8 %185 to i32
  br label %187

187:                                              ; preds = %171, %167
  %188 = phi i32 [ %186, %171 ], [ %168, %167 ]
  br i1 %110, label %206, label %189

189:                                              ; preds = %187
  %190 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %191 = getelementptr inbounds %struct.storable_picture, ptr %190, i64 0, i32 36
  %192 = load ptr, ptr %191, align 8, !tbaa !197
  %193 = getelementptr inbounds ptr, ptr %192, i64 1
  %194 = load ptr, ptr %193, align 8, !tbaa !13
  %195 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 5
  %196 = load i32, ptr %195, align 4, !tbaa !59
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds ptr, ptr %194, i64 %197
  %199 = load ptr, ptr %198, align 8, !tbaa !13
  %200 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 4
  %201 = load i32, ptr %200, align 4, !tbaa !60
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds i8, ptr %199, i64 %202
  %204 = load i8, ptr %203, align 1, !tbaa !14
  %205 = sext i8 %204 to i32
  br label %206

206:                                              ; preds = %189, %187
  %207 = phi i32 [ %205, %189 ], [ -1, %187 ]
  br i1 %130, label %225, label %208

208:                                              ; preds = %206
  %209 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %210 = getelementptr inbounds %struct.storable_picture, ptr %209, i64 0, i32 36
  %211 = load ptr, ptr %210, align 8, !tbaa !197
  %212 = getelementptr inbounds ptr, ptr %211, i64 1
  %213 = load ptr, ptr %212, align 8, !tbaa !13
  %214 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 5
  %215 = load i32, ptr %214, align 4, !tbaa !59
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds ptr, ptr %213, i64 %216
  %218 = load ptr, ptr %217, align 8, !tbaa !13
  %219 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 4
  %220 = load i32, ptr %219, align 4, !tbaa !60
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds i8, ptr %218, i64 %221
  %223 = load i8, ptr %222, align 1, !tbaa !14
  %224 = sext i8 %223 to i32
  br label %225

225:                                              ; preds = %208, %206
  %226 = phi i32 [ %224, %208 ], [ -1, %206 ]
  br i1 %150, label %244, label %227

227:                                              ; preds = %225
  %228 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %229 = getelementptr inbounds %struct.storable_picture, ptr %228, i64 0, i32 36
  %230 = load ptr, ptr %229, align 8, !tbaa !197
  %231 = getelementptr inbounds ptr, ptr %230, i64 1
  %232 = load ptr, ptr %231, align 8, !tbaa !13
  %233 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %234 = load i32, ptr %233, align 4, !tbaa !59
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds ptr, ptr %232, i64 %235
  %237 = load ptr, ptr %236, align 8, !tbaa !13
  %238 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %239 = load i32, ptr %238, align 4, !tbaa !60
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i8, ptr %237, i64 %240
  %242 = load i8, ptr %241, align 1, !tbaa !14
  %243 = sext i8 %242 to i32
  br label %244

244:                                              ; preds = %227, %225
  %245 = phi i32 [ %243, %227 ], [ -1, %225 ]
  br i1 %170, label %770, label %246

246:                                              ; preds = %244
  %247 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %248 = getelementptr inbounds %struct.storable_picture, ptr %247, i64 0, i32 36
  %249 = load ptr, ptr %248, align 8, !tbaa !197
  %250 = getelementptr inbounds ptr, ptr %249, i64 1
  %251 = load ptr, ptr %250, align 8, !tbaa !13
  %252 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 5
  %253 = load i32, ptr %252, align 4, !tbaa !59
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds ptr, ptr %251, i64 %254
  %256 = load ptr, ptr %255, align 8, !tbaa !13
  %257 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 4
  %258 = load i32, ptr %257, align 4, !tbaa !60
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds i8, ptr %256, i64 %259
  %261 = load i8, ptr %260, align 1, !tbaa !14
  %262 = sext i8 %261 to i32
  br label %770

263:                                              ; preds = %101
  %264 = load ptr, ptr %11, align 8, !tbaa !84
  %265 = load i32, ptr %13, align 4, !tbaa !49
  %266 = zext i32 %265 to i64
  %267 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %266, i32 20
  %268 = load i32, ptr %267, align 4, !tbaa !170
  %269 = icmp eq i32 %268, 0
  %270 = load i32, ptr %5, align 4, !tbaa !52
  %271 = icmp eq i32 %270, 0
  br i1 %269, label %521, label %272

272:                                              ; preds = %263
  br i1 %271, label %301, label %273

273:                                              ; preds = %272
  %274 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 1
  %275 = load i32, ptr %274, align 4, !tbaa !57
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %276, i32 20
  %278 = load i32, ptr %277, align 4, !tbaa !170
  %279 = icmp ne i32 %278, 0
  %280 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %281 = getelementptr inbounds %struct.storable_picture, ptr %280, i64 0, i32 36
  %282 = load ptr, ptr %281, align 8, !tbaa !197
  %283 = load ptr, ptr %282, align 8, !tbaa !13
  %284 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 5
  %285 = load i32, ptr %284, align 4, !tbaa !59
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds ptr, ptr %283, i64 %286
  %288 = load ptr, ptr %287, align 8, !tbaa !13
  %289 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 4
  %290 = load i32, ptr %289, align 4, !tbaa !60
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds i8, ptr %288, i64 %291
  %293 = load i8, ptr %292, align 1, !tbaa !14
  %294 = icmp slt i8 %293, 0
  %295 = select i1 %279, i1 true, i1 %294
  br i1 %295, label %296, label %298

296:                                              ; preds = %273
  %297 = sext i8 %293 to i32
  br label %301

298:                                              ; preds = %273
  %299 = zext i8 %293 to i32
  %300 = shl nuw nsw i32 %299, 1
  br label %301

301:                                              ; preds = %298, %296, %272
  %302 = phi i32 [ %297, %296 ], [ %300, %298 ], [ -1, %272 ]
  %303 = load i32, ptr %6, align 4, !tbaa !52
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %333, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 1
  %307 = load i32, ptr %306, align 4, !tbaa !57
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %308, i32 20
  %310 = load i32, ptr %309, align 4, !tbaa !170
  %311 = icmp ne i32 %310, 0
  %312 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %313 = getelementptr inbounds %struct.storable_picture, ptr %312, i64 0, i32 36
  %314 = load ptr, ptr %313, align 8, !tbaa !197
  %315 = load ptr, ptr %314, align 8, !tbaa !13
  %316 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 5
  %317 = load i32, ptr %316, align 4, !tbaa !59
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds ptr, ptr %315, i64 %318
  %320 = load ptr, ptr %319, align 8, !tbaa !13
  %321 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 4
  %322 = load i32, ptr %321, align 4, !tbaa !60
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds i8, ptr %320, i64 %323
  %325 = load i8, ptr %324, align 1, !tbaa !14
  %326 = icmp slt i8 %325, 0
  %327 = select i1 %311, i1 true, i1 %326
  br i1 %327, label %328, label %330

328:                                              ; preds = %305
  %329 = sext i8 %325 to i32
  br label %333

330:                                              ; preds = %305
  %331 = zext i8 %325 to i32
  %332 = shl nuw nsw i32 %331, 1
  br label %333

333:                                              ; preds = %330, %328, %301
  %334 = phi i32 [ %329, %328 ], [ %332, %330 ], [ -1, %301 ]
  %335 = load i32, ptr %7, align 4, !tbaa !52
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %365, label %337

337:                                              ; preds = %333
  %338 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 1
  %339 = load i32, ptr %338, align 4, !tbaa !57
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %340, i32 20
  %342 = load i32, ptr %341, align 4, !tbaa !170
  %343 = icmp ne i32 %342, 0
  %344 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %345 = getelementptr inbounds %struct.storable_picture, ptr %344, i64 0, i32 36
  %346 = load ptr, ptr %345, align 8, !tbaa !197
  %347 = load ptr, ptr %346, align 8, !tbaa !13
  %348 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %349 = load i32, ptr %348, align 4, !tbaa !59
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds ptr, ptr %347, i64 %350
  %352 = load ptr, ptr %351, align 8, !tbaa !13
  %353 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %354 = load i32, ptr %353, align 4, !tbaa !60
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds i8, ptr %352, i64 %355
  %357 = load i8, ptr %356, align 1, !tbaa !14
  %358 = icmp slt i8 %357, 0
  %359 = select i1 %343, i1 true, i1 %358
  br i1 %359, label %360, label %362

360:                                              ; preds = %337
  %361 = sext i8 %357 to i32
  br label %365

362:                                              ; preds = %337
  %363 = zext i8 %357 to i32
  %364 = shl nuw nsw i32 %363, 1
  br label %365

365:                                              ; preds = %362, %360, %333
  %366 = phi i32 [ %361, %360 ], [ %364, %362 ], [ -1, %333 ]
  %367 = load i32, ptr %8, align 4, !tbaa !52
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %397, label %369

369:                                              ; preds = %365
  %370 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 1
  %371 = load i32, ptr %370, align 4, !tbaa !57
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %372, i32 20
  %374 = load i32, ptr %373, align 4, !tbaa !170
  %375 = icmp ne i32 %374, 0
  %376 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %377 = getelementptr inbounds %struct.storable_picture, ptr %376, i64 0, i32 36
  %378 = load ptr, ptr %377, align 8, !tbaa !197
  %379 = load ptr, ptr %378, align 8, !tbaa !13
  %380 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 5
  %381 = load i32, ptr %380, align 4, !tbaa !59
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds ptr, ptr %379, i64 %382
  %384 = load ptr, ptr %383, align 8, !tbaa !13
  %385 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 4
  %386 = load i32, ptr %385, align 4, !tbaa !60
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds i8, ptr %384, i64 %387
  %389 = load i8, ptr %388, align 1, !tbaa !14
  %390 = icmp slt i8 %389, 0
  %391 = select i1 %375, i1 true, i1 %390
  br i1 %391, label %392, label %394

392:                                              ; preds = %369
  %393 = sext i8 %389 to i32
  br label %397

394:                                              ; preds = %369
  %395 = zext i8 %389 to i32
  %396 = shl nuw nsw i32 %395, 1
  br label %397

397:                                              ; preds = %394, %392, %365
  %398 = phi i32 [ %393, %392 ], [ %396, %394 ], [ %366, %365 ]
  br i1 %271, label %428, label %399

399:                                              ; preds = %397
  %400 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 1
  %401 = load i32, ptr %400, align 4, !tbaa !57
  %402 = sext i32 %401 to i64
  %403 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %402, i32 20
  %404 = load i32, ptr %403, align 4, !tbaa !170
  %405 = icmp ne i32 %404, 0
  %406 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %407 = getelementptr inbounds %struct.storable_picture, ptr %406, i64 0, i32 36
  %408 = load ptr, ptr %407, align 8, !tbaa !197
  %409 = getelementptr inbounds ptr, ptr %408, i64 1
  %410 = load ptr, ptr %409, align 8, !tbaa !13
  %411 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 5
  %412 = load i32, ptr %411, align 4, !tbaa !59
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds ptr, ptr %410, i64 %413
  %415 = load ptr, ptr %414, align 8, !tbaa !13
  %416 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 4
  %417 = load i32, ptr %416, align 4, !tbaa !60
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds i8, ptr %415, i64 %418
  %420 = load i8, ptr %419, align 1, !tbaa !14
  %421 = icmp slt i8 %420, 0
  %422 = select i1 %405, i1 true, i1 %421
  br i1 %422, label %423, label %425

423:                                              ; preds = %399
  %424 = sext i8 %420 to i32
  br label %428

425:                                              ; preds = %399
  %426 = zext i8 %420 to i32
  %427 = shl nuw nsw i32 %426, 1
  br label %428

428:                                              ; preds = %425, %423, %397
  %429 = phi i32 [ %424, %423 ], [ %427, %425 ], [ -1, %397 ]
  br i1 %304, label %459, label %430

430:                                              ; preds = %428
  %431 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 1
  %432 = load i32, ptr %431, align 4, !tbaa !57
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %433, i32 20
  %435 = load i32, ptr %434, align 4, !tbaa !170
  %436 = icmp ne i32 %435, 0
  %437 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %438 = getelementptr inbounds %struct.storable_picture, ptr %437, i64 0, i32 36
  %439 = load ptr, ptr %438, align 8, !tbaa !197
  %440 = getelementptr inbounds ptr, ptr %439, i64 1
  %441 = load ptr, ptr %440, align 8, !tbaa !13
  %442 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 5
  %443 = load i32, ptr %442, align 4, !tbaa !59
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds ptr, ptr %441, i64 %444
  %446 = load ptr, ptr %445, align 8, !tbaa !13
  %447 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 4
  %448 = load i32, ptr %447, align 4, !tbaa !60
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds i8, ptr %446, i64 %449
  %451 = load i8, ptr %450, align 1, !tbaa !14
  %452 = icmp slt i8 %451, 0
  %453 = select i1 %436, i1 true, i1 %452
  br i1 %453, label %454, label %456

454:                                              ; preds = %430
  %455 = sext i8 %451 to i32
  br label %459

456:                                              ; preds = %430
  %457 = zext i8 %451 to i32
  %458 = shl nuw nsw i32 %457, 1
  br label %459

459:                                              ; preds = %456, %454, %428
  %460 = phi i32 [ %455, %454 ], [ %458, %456 ], [ -1, %428 ]
  br i1 %336, label %490, label %461

461:                                              ; preds = %459
  %462 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 1
  %463 = load i32, ptr %462, align 4, !tbaa !57
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %464, i32 20
  %466 = load i32, ptr %465, align 4, !tbaa !170
  %467 = icmp ne i32 %466, 0
  %468 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %469 = getelementptr inbounds %struct.storable_picture, ptr %468, i64 0, i32 36
  %470 = load ptr, ptr %469, align 8, !tbaa !197
  %471 = getelementptr inbounds ptr, ptr %470, i64 1
  %472 = load ptr, ptr %471, align 8, !tbaa !13
  %473 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %474 = load i32, ptr %473, align 4, !tbaa !59
  %475 = sext i32 %474 to i64
  %476 = getelementptr inbounds ptr, ptr %472, i64 %475
  %477 = load ptr, ptr %476, align 8, !tbaa !13
  %478 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %479 = load i32, ptr %478, align 4, !tbaa !60
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds i8, ptr %477, i64 %480
  %482 = load i8, ptr %481, align 1, !tbaa !14
  %483 = icmp slt i8 %482, 0
  %484 = select i1 %467, i1 true, i1 %483
  br i1 %484, label %485, label %487

485:                                              ; preds = %461
  %486 = sext i8 %482 to i32
  br label %490

487:                                              ; preds = %461
  %488 = zext i8 %482 to i32
  %489 = shl nuw nsw i32 %488, 1
  br label %490

490:                                              ; preds = %487, %485, %459
  %491 = phi i32 [ %486, %485 ], [ %489, %487 ], [ -1, %459 ]
  br i1 %368, label %770, label %492

492:                                              ; preds = %490
  %493 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 1
  %494 = load i32, ptr %493, align 4, !tbaa !57
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %495, i32 20
  %497 = load i32, ptr %496, align 4, !tbaa !170
  %498 = icmp ne i32 %497, 0
  %499 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %500 = getelementptr inbounds %struct.storable_picture, ptr %499, i64 0, i32 36
  %501 = load ptr, ptr %500, align 8, !tbaa !197
  %502 = getelementptr inbounds ptr, ptr %501, i64 1
  %503 = load ptr, ptr %502, align 8, !tbaa !13
  %504 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 5
  %505 = load i32, ptr %504, align 4, !tbaa !59
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds ptr, ptr %503, i64 %506
  %508 = load ptr, ptr %507, align 8, !tbaa !13
  %509 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 4
  %510 = load i32, ptr %509, align 4, !tbaa !60
  %511 = sext i32 %510 to i64
  %512 = getelementptr inbounds i8, ptr %508, i64 %511
  %513 = load i8, ptr %512, align 1, !tbaa !14
  %514 = icmp slt i8 %513, 0
  %515 = select i1 %498, i1 true, i1 %514
  br i1 %515, label %516, label %518

516:                                              ; preds = %492
  %517 = sext i8 %513 to i32
  br label %770

518:                                              ; preds = %492
  %519 = zext i8 %513 to i32
  %520 = shl nuw nsw i32 %519, 1
  br label %770

521:                                              ; preds = %263
  br i1 %271, label %550, label %522

522:                                              ; preds = %521
  %523 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 1
  %524 = load i32, ptr %523, align 4, !tbaa !57
  %525 = sext i32 %524 to i64
  %526 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %525, i32 20
  %527 = load i32, ptr %526, align 4, !tbaa !170
  %528 = icmp ne i32 %527, 0
  %529 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %530 = getelementptr inbounds %struct.storable_picture, ptr %529, i64 0, i32 36
  %531 = load ptr, ptr %530, align 8, !tbaa !197
  %532 = load ptr, ptr %531, align 8, !tbaa !13
  %533 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 5
  %534 = load i32, ptr %533, align 4, !tbaa !59
  %535 = sext i32 %534 to i64
  %536 = getelementptr inbounds ptr, ptr %532, i64 %535
  %537 = load ptr, ptr %536, align 8, !tbaa !13
  %538 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 4
  %539 = load i32, ptr %538, align 4, !tbaa !60
  %540 = sext i32 %539 to i64
  %541 = getelementptr inbounds i8, ptr %537, i64 %540
  %542 = load i8, ptr %541, align 1, !tbaa !14
  %543 = icmp slt i8 %542, 0
  %544 = select i1 %528, i1 true, i1 %543
  br i1 %544, label %545, label %548

545:                                              ; preds = %522
  %546 = ashr i8 %542, 1
  %547 = sext i8 %546 to i32
  br label %550

548:                                              ; preds = %522
  %549 = zext i8 %542 to i32
  br label %550

550:                                              ; preds = %548, %545, %521
  %551 = phi i32 [ %547, %545 ], [ %549, %548 ], [ -1, %521 ]
  %552 = load i32, ptr %6, align 4, !tbaa !52
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %582, label %554

554:                                              ; preds = %550
  %555 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 1
  %556 = load i32, ptr %555, align 4, !tbaa !57
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %557, i32 20
  %559 = load i32, ptr %558, align 4, !tbaa !170
  %560 = icmp ne i32 %559, 0
  %561 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %562 = getelementptr inbounds %struct.storable_picture, ptr %561, i64 0, i32 36
  %563 = load ptr, ptr %562, align 8, !tbaa !197
  %564 = load ptr, ptr %563, align 8, !tbaa !13
  %565 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 5
  %566 = load i32, ptr %565, align 4, !tbaa !59
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds ptr, ptr %564, i64 %567
  %569 = load ptr, ptr %568, align 8, !tbaa !13
  %570 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 4
  %571 = load i32, ptr %570, align 4, !tbaa !60
  %572 = sext i32 %571 to i64
  %573 = getelementptr inbounds i8, ptr %569, i64 %572
  %574 = load i8, ptr %573, align 1, !tbaa !14
  %575 = icmp slt i8 %574, 0
  %576 = select i1 %560, i1 true, i1 %575
  br i1 %576, label %577, label %580

577:                                              ; preds = %554
  %578 = ashr i8 %574, 1
  %579 = sext i8 %578 to i32
  br label %582

580:                                              ; preds = %554
  %581 = zext i8 %574 to i32
  br label %582

582:                                              ; preds = %580, %577, %550
  %583 = phi i32 [ %579, %577 ], [ %581, %580 ], [ -1, %550 ]
  %584 = load i32, ptr %7, align 4, !tbaa !52
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %614, label %586

586:                                              ; preds = %582
  %587 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 1
  %588 = load i32, ptr %587, align 4, !tbaa !57
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %589, i32 20
  %591 = load i32, ptr %590, align 4, !tbaa !170
  %592 = icmp ne i32 %591, 0
  %593 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %594 = getelementptr inbounds %struct.storable_picture, ptr %593, i64 0, i32 36
  %595 = load ptr, ptr %594, align 8, !tbaa !197
  %596 = load ptr, ptr %595, align 8, !tbaa !13
  %597 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %598 = load i32, ptr %597, align 4, !tbaa !59
  %599 = sext i32 %598 to i64
  %600 = getelementptr inbounds ptr, ptr %596, i64 %599
  %601 = load ptr, ptr %600, align 8, !tbaa !13
  %602 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %603 = load i32, ptr %602, align 4, !tbaa !60
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds i8, ptr %601, i64 %604
  %606 = load i8, ptr %605, align 1, !tbaa !14
  %607 = icmp slt i8 %606, 0
  %608 = select i1 %592, i1 true, i1 %607
  br i1 %608, label %609, label %612

609:                                              ; preds = %586
  %610 = ashr i8 %606, 1
  %611 = sext i8 %610 to i32
  br label %614

612:                                              ; preds = %586
  %613 = zext i8 %606 to i32
  br label %614

614:                                              ; preds = %612, %609, %582
  %615 = phi i32 [ %611, %609 ], [ %613, %612 ], [ -1, %582 ]
  %616 = load i32, ptr %8, align 4, !tbaa !52
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %646, label %618

618:                                              ; preds = %614
  %619 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 1
  %620 = load i32, ptr %619, align 4, !tbaa !57
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %621, i32 20
  %623 = load i32, ptr %622, align 4, !tbaa !170
  %624 = icmp ne i32 %623, 0
  %625 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %626 = getelementptr inbounds %struct.storable_picture, ptr %625, i64 0, i32 36
  %627 = load ptr, ptr %626, align 8, !tbaa !197
  %628 = load ptr, ptr %627, align 8, !tbaa !13
  %629 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 5
  %630 = load i32, ptr %629, align 4, !tbaa !59
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds ptr, ptr %628, i64 %631
  %633 = load ptr, ptr %632, align 8, !tbaa !13
  %634 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 4
  %635 = load i32, ptr %634, align 4, !tbaa !60
  %636 = sext i32 %635 to i64
  %637 = getelementptr inbounds i8, ptr %633, i64 %636
  %638 = load i8, ptr %637, align 1, !tbaa !14
  %639 = icmp slt i8 %638, 0
  %640 = select i1 %624, i1 true, i1 %639
  br i1 %640, label %641, label %644

641:                                              ; preds = %618
  %642 = ashr i8 %638, 1
  %643 = sext i8 %642 to i32
  br label %646

644:                                              ; preds = %618
  %645 = zext i8 %638 to i32
  br label %646

646:                                              ; preds = %644, %641, %614
  %647 = phi i32 [ %643, %641 ], [ %645, %644 ], [ %615, %614 ]
  br i1 %271, label %677, label %648

648:                                              ; preds = %646
  %649 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 1
  %650 = load i32, ptr %649, align 4, !tbaa !57
  %651 = sext i32 %650 to i64
  %652 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %651, i32 20
  %653 = load i32, ptr %652, align 4, !tbaa !170
  %654 = icmp ne i32 %653, 0
  %655 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %656 = getelementptr inbounds %struct.storable_picture, ptr %655, i64 0, i32 36
  %657 = load ptr, ptr %656, align 8, !tbaa !197
  %658 = getelementptr inbounds ptr, ptr %657, i64 1
  %659 = load ptr, ptr %658, align 8, !tbaa !13
  %660 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 5
  %661 = load i32, ptr %660, align 4, !tbaa !59
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds ptr, ptr %659, i64 %662
  %664 = load ptr, ptr %663, align 8, !tbaa !13
  %665 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 4
  %666 = load i32, ptr %665, align 4, !tbaa !60
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds i8, ptr %664, i64 %667
  %669 = load i8, ptr %668, align 1, !tbaa !14
  %670 = icmp slt i8 %669, 0
  %671 = select i1 %654, i1 true, i1 %670
  br i1 %671, label %672, label %675

672:                                              ; preds = %648
  %673 = ashr i8 %669, 1
  %674 = sext i8 %673 to i32
  br label %677

675:                                              ; preds = %648
  %676 = zext i8 %669 to i32
  br label %677

677:                                              ; preds = %675, %672, %646
  %678 = phi i32 [ %674, %672 ], [ %676, %675 ], [ -1, %646 ]
  br i1 %553, label %708, label %679

679:                                              ; preds = %677
  %680 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 1
  %681 = load i32, ptr %680, align 4, !tbaa !57
  %682 = sext i32 %681 to i64
  %683 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %682, i32 20
  %684 = load i32, ptr %683, align 4, !tbaa !170
  %685 = icmp ne i32 %684, 0
  %686 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %687 = getelementptr inbounds %struct.storable_picture, ptr %686, i64 0, i32 36
  %688 = load ptr, ptr %687, align 8, !tbaa !197
  %689 = getelementptr inbounds ptr, ptr %688, i64 1
  %690 = load ptr, ptr %689, align 8, !tbaa !13
  %691 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 5
  %692 = load i32, ptr %691, align 4, !tbaa !59
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds ptr, ptr %690, i64 %693
  %695 = load ptr, ptr %694, align 8, !tbaa !13
  %696 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 4
  %697 = load i32, ptr %696, align 4, !tbaa !60
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds i8, ptr %695, i64 %698
  %700 = load i8, ptr %699, align 1, !tbaa !14
  %701 = icmp slt i8 %700, 0
  %702 = select i1 %685, i1 true, i1 %701
  br i1 %702, label %703, label %706

703:                                              ; preds = %679
  %704 = ashr i8 %700, 1
  %705 = sext i8 %704 to i32
  br label %708

706:                                              ; preds = %679
  %707 = zext i8 %700 to i32
  br label %708

708:                                              ; preds = %706, %703, %677
  %709 = phi i32 [ %705, %703 ], [ %707, %706 ], [ -1, %677 ]
  br i1 %585, label %739, label %710

710:                                              ; preds = %708
  %711 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 1
  %712 = load i32, ptr %711, align 4, !tbaa !57
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %713, i32 20
  %715 = load i32, ptr %714, align 4, !tbaa !170
  %716 = icmp ne i32 %715, 0
  %717 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %718 = getelementptr inbounds %struct.storable_picture, ptr %717, i64 0, i32 36
  %719 = load ptr, ptr %718, align 8, !tbaa !197
  %720 = getelementptr inbounds ptr, ptr %719, i64 1
  %721 = load ptr, ptr %720, align 8, !tbaa !13
  %722 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %723 = load i32, ptr %722, align 4, !tbaa !59
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds ptr, ptr %721, i64 %724
  %726 = load ptr, ptr %725, align 8, !tbaa !13
  %727 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %728 = load i32, ptr %727, align 4, !tbaa !60
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds i8, ptr %726, i64 %729
  %731 = load i8, ptr %730, align 1, !tbaa !14
  %732 = icmp slt i8 %731, 0
  %733 = select i1 %716, i1 true, i1 %732
  br i1 %733, label %734, label %737

734:                                              ; preds = %710
  %735 = ashr i8 %731, 1
  %736 = sext i8 %735 to i32
  br label %739

737:                                              ; preds = %710
  %738 = zext i8 %731 to i32
  br label %739

739:                                              ; preds = %737, %734, %708
  %740 = phi i32 [ %736, %734 ], [ %738, %737 ], [ -1, %708 ]
  br i1 %617, label %770, label %741

741:                                              ; preds = %739
  %742 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 1
  %743 = load i32, ptr %742, align 4, !tbaa !57
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds %struct.macroblock, ptr %264, i64 %744, i32 20
  %746 = load i32, ptr %745, align 4, !tbaa !170
  %747 = icmp ne i32 %746, 0
  %748 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %749 = getelementptr inbounds %struct.storable_picture, ptr %748, i64 0, i32 36
  %750 = load ptr, ptr %749, align 8, !tbaa !197
  %751 = getelementptr inbounds ptr, ptr %750, i64 1
  %752 = load ptr, ptr %751, align 8, !tbaa !13
  %753 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 5
  %754 = load i32, ptr %753, align 4, !tbaa !59
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds ptr, ptr %752, i64 %755
  %757 = load ptr, ptr %756, align 8, !tbaa !13
  %758 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 4
  %759 = load i32, ptr %758, align 4, !tbaa !60
  %760 = sext i32 %759 to i64
  %761 = getelementptr inbounds i8, ptr %757, i64 %760
  %762 = load i8, ptr %761, align 1, !tbaa !14
  %763 = icmp slt i8 %762, 0
  %764 = select i1 %747, i1 true, i1 %763
  br i1 %764, label %765, label %768

765:                                              ; preds = %741
  %766 = ashr i8 %762, 1
  %767 = sext i8 %766 to i32
  br label %770

768:                                              ; preds = %741
  %769 = zext i8 %762 to i32
  br label %770

770:                                              ; preds = %768, %765, %739, %518, %516, %490, %246, %244
  %771 = phi i32 [ %128, %244 ], [ %128, %246 ], [ %302, %490 ], [ %302, %516 ], [ %302, %518 ], [ %551, %739 ], [ %551, %765 ], [ %551, %768 ]
  %772 = phi i32 [ %148, %244 ], [ %148, %246 ], [ %334, %490 ], [ %334, %516 ], [ %334, %518 ], [ %583, %739 ], [ %583, %765 ], [ %583, %768 ]
  %773 = phi i32 [ %188, %244 ], [ %188, %246 ], [ %398, %490 ], [ %398, %516 ], [ %398, %518 ], [ %647, %739 ], [ %647, %765 ], [ %647, %768 ]
  %774 = phi i32 [ %207, %244 ], [ %207, %246 ], [ %429, %490 ], [ %429, %516 ], [ %429, %518 ], [ %678, %739 ], [ %678, %765 ], [ %678, %768 ]
  %775 = phi i32 [ %226, %244 ], [ %226, %246 ], [ %460, %490 ], [ %460, %516 ], [ %460, %518 ], [ %709, %739 ], [ %709, %765 ], [ %709, %768 ]
  %776 = phi i32 [ %245, %244 ], [ %262, %246 ], [ %491, %490 ], [ %517, %516 ], [ %520, %518 ], [ %740, %739 ], [ %767, %765 ], [ %769, %768 ]
  %777 = icmp sgt i32 %771, -1
  %778 = icmp sgt i32 %772, -1
  %779 = select i1 %777, i1 %778, i1 false
  br i1 %779, label %780, label %782

780:                                              ; preds = %770
  %781 = call i32 @llvm.smin.i32(i32 %771, i32 %772)
  br label %784

782:                                              ; preds = %770
  %783 = call i32 @llvm.smax.i32(i32 %771, i32 %772)
  br label %784

784:                                              ; preds = %782, %780
  %785 = phi i32 [ %781, %780 ], [ %783, %782 ]
  %786 = shl i32 %785, 24
  %787 = ashr exact i32 %786, 24
  %788 = icmp sgt i32 %786, -16777216
  %789 = icmp sgt i32 %773, -1
  %790 = select i1 %788, i1 %789, i1 false
  br i1 %790, label %791, label %793

791:                                              ; preds = %784
  %792 = call i32 @llvm.smin.i32(i32 %787, i32 %773)
  br label %795

793:                                              ; preds = %784
  %794 = call i32 @llvm.smax.i32(i32 %787, i32 %773)
  br label %795

795:                                              ; preds = %793, %791
  %796 = phi i32 [ %792, %791 ], [ %794, %793 ]
  %797 = trunc i32 %796 to i8
  %798 = icmp sgt i32 %774, -1
  %799 = icmp sgt i32 %775, -1
  %800 = select i1 %798, i1 %799, i1 false
  br i1 %800, label %801, label %803

801:                                              ; preds = %795
  %802 = call i32 @llvm.smin.i32(i32 %774, i32 %775)
  br label %805

803:                                              ; preds = %795
  %804 = call i32 @llvm.smax.i32(i32 %774, i32 %775)
  br label %805

805:                                              ; preds = %803, %801
  %806 = phi i32 [ %802, %801 ], [ %804, %803 ]
  %807 = shl i32 %806, 24
  %808 = ashr exact i32 %807, 24
  %809 = icmp sgt i32 %807, -16777216
  %810 = icmp sgt i32 %776, -1
  %811 = select i1 %809, i1 %810, i1 false
  br i1 %811, label %812, label %814

812:                                              ; preds = %805
  %813 = call i32 @llvm.smin.i32(i32 %808, i32 %776)
  br label %816

814:                                              ; preds = %805
  %815 = call i32 @llvm.smax.i32(i32 %808, i32 %776)
  br label %816

816:                                              ; preds = %814, %812
  %817 = phi i32 [ %813, %812 ], [ %815, %814 ]
  %818 = trunc i32 %817 to i8
  %819 = shl i32 %796, 24
  %820 = icmp sgt i32 %819, -16777216
  br i1 %820, label %821, label %827

821:                                              ; preds = %816
  %822 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %823 = getelementptr inbounds %struct.storable_picture, ptr %822, i64 0, i32 36
  %824 = load ptr, ptr %823, align 8, !tbaa !197
  %825 = getelementptr inbounds %struct.storable_picture, ptr %822, i64 0, i32 39
  %826 = load ptr, ptr %825, align 8, !tbaa !371
  call fastcc void @SetMotionVectorPredictor(ptr noundef nonnull %0, ptr noundef nonnull %9, i8 noundef signext %797, i8 noundef zeroext 0, ptr noundef %824, ptr noundef %826, i32 noundef 0, i32 noundef 0, i32 noundef 16, i32 noundef 16) #47
  br label %827

827:                                              ; preds = %821, %816
  %828 = shl i32 %817, 24
  %829 = icmp sgt i32 %828, -16777216
  br i1 %829, label %830, label %839

830:                                              ; preds = %827
  %831 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %832 = getelementptr inbounds %struct.storable_picture, ptr %831, i64 0, i32 36
  %833 = load ptr, ptr %832, align 8, !tbaa !197
  %834 = getelementptr inbounds %struct.storable_picture, ptr %831, i64 0, i32 39
  %835 = load ptr, ptr %834, align 8, !tbaa !371
  call fastcc void @SetMotionVectorPredictor(ptr noundef nonnull %0, ptr noundef nonnull %10, i8 noundef signext %818, i8 noundef zeroext 1, ptr noundef %833, ptr noundef %835, i32 noundef 0, i32 noundef 0, i32 noundef 16, i32 noundef 16) #47
  %836 = load i16, ptr %10, align 4
  %837 = getelementptr inbounds [2 x i16], ptr %10, i64 0, i64 1
  %838 = load i16, ptr %837, align 2
  br label %839

839:                                              ; preds = %830, %827
  %840 = phi i16 [ %838, %830 ], [ 0, %827 ]
  %841 = phi i16 [ %836, %830 ], [ 0, %827 ]
  %842 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  %843 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  %844 = and i32 %828, %819
  %845 = icmp sgt i32 %844, -1
  %846 = icmp eq i8 %797, 0
  %847 = or i32 %62, 1
  %848 = zext i32 %847 to i64
  %849 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %848
  %850 = load i16, ptr %9, align 4
  %851 = getelementptr inbounds [2 x i16], ptr %9, i64 0, i64 1
  %852 = load i16, ptr %851, align 2
  %853 = icmp eq i32 %828, 0
  %854 = sext i32 %102 to i64
  br label %855

855:                                              ; preds = %1027, %839
  %856 = phi i64 [ 0, %839 ], [ %1028, %1027 ]
  %857 = phi i32 [ 0, %839 ], [ %1029, %1027 ]
  %858 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 %856
  %859 = load i8, ptr %858, align 1, !tbaa !14
  %860 = icmp eq i8 %859, 0
  br i1 %860, label %861, label %1027

861:                                              ; preds = %855
  %862 = shl nuw i32 %857, 1
  %863 = and i32 %862, 2
  %864 = add nuw i64 %856, 2
  %865 = and i64 %856, 9223372036854775806
  %866 = trunc i64 %856 to i32
  %867 = shl i32 %866, 1
  %868 = and i32 %867, 2
  %869 = and i64 %864, 4294967294
  %870 = or i32 %863, 1
  br label %871

871:                                              ; preds = %1024, %861
  %872 = phi i64 [ %865, %861 ], [ %1025, %1024 ]
  %873 = add nsw i64 %872, %854
  %874 = getelementptr inbounds ptr, ptr %70, i64 %873
  br label %875

875:                                              ; preds = %1021, %871
  %876 = phi i32 [ %868, %871 ], [ %1022, %1021 ]
  %877 = load i32, ptr %842, align 4, !tbaa !301
  %878 = sext i32 %877 to i64
  %879 = add nsw i64 %872, %878
  %880 = load i32, ptr %843, align 4, !tbaa !303
  %881 = add nsw i32 %880, %876
  br i1 %820, label %882, label %916

882:                                              ; preds = %875
  br i1 %846, label %885, label %883

883:                                              ; preds = %882
  %884 = sext i32 %881 to i64
  br label %906

885:                                              ; preds = %882
  %886 = load ptr, ptr %874, align 8, !tbaa !13
  %887 = sext i32 %881 to i64
  %888 = getelementptr inbounds i8, ptr %886, i64 %887
  %889 = load i8, ptr %888, align 1, !tbaa !14
  %890 = icmp eq i8 %889, 0
  br i1 %890, label %891, label %906

891:                                              ; preds = %885
  %892 = load ptr, ptr %849, align 8, !tbaa !13
  %893 = load ptr, ptr %892, align 8, !tbaa !13
  %894 = getelementptr inbounds %struct.storable_picture, ptr %893, i64 0, i32 14
  %895 = load i32, ptr %894, align 4, !tbaa !356
  %896 = icmp eq i32 %895, 0
  br i1 %896, label %897, label %906

897:                                              ; preds = %891
  %898 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %899 = getelementptr inbounds %struct.storable_picture, ptr %898, i64 0, i32 39
  %900 = load ptr, ptr %899, align 8, !tbaa !371
  %901 = load ptr, ptr %900, align 8, !tbaa !13
  %902 = getelementptr inbounds ptr, ptr %901, i64 %879
  %903 = load ptr, ptr %902, align 8, !tbaa !13
  %904 = getelementptr inbounds ptr, ptr %903, i64 %887
  %905 = load ptr, ptr %904, align 8, !tbaa !13
  store i16 0, ptr %905, align 2, !tbaa !40
  br label %926

906:                                              ; preds = %891, %885, %883
  %907 = phi i64 [ %884, %883 ], [ %887, %891 ], [ %887, %885 ]
  %908 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %909 = getelementptr inbounds %struct.storable_picture, ptr %908, i64 0, i32 39
  %910 = load ptr, ptr %909, align 8, !tbaa !371
  %911 = load ptr, ptr %910, align 8, !tbaa !13
  %912 = getelementptr inbounds ptr, ptr %911, i64 %879
  %913 = load ptr, ptr %912, align 8, !tbaa !13
  %914 = getelementptr inbounds ptr, ptr %913, i64 %907
  %915 = load ptr, ptr %914, align 8, !tbaa !13
  store i16 %850, ptr %915, align 2, !tbaa !40
  br label %926

916:                                              ; preds = %875
  %917 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %918 = getelementptr inbounds %struct.storable_picture, ptr %917, i64 0, i32 39
  %919 = load ptr, ptr %918, align 8, !tbaa !371
  %920 = load ptr, ptr %919, align 8, !tbaa !13
  %921 = getelementptr inbounds ptr, ptr %920, i64 %879
  %922 = load ptr, ptr %921, align 8, !tbaa !13
  %923 = sext i32 %881 to i64
  %924 = getelementptr inbounds ptr, ptr %922, i64 %923
  %925 = load ptr, ptr %924, align 8, !tbaa !13
  store i16 0, ptr %925, align 2, !tbaa !40
  br label %926

926:                                              ; preds = %916, %906, %897
  %927 = phi ptr [ %905, %897 ], [ %915, %906 ], [ %925, %916 ]
  %928 = phi i16 [ 0, %897 ], [ %852, %906 ], [ 0, %916 ]
  %929 = phi ptr [ %898, %897 ], [ %908, %906 ], [ %917, %916 ]
  %930 = phi i64 [ %887, %897 ], [ %907, %906 ], [ %923, %916 ]
  %931 = phi i8 [ 0, %897 ], [ %797, %906 ], [ -1, %916 ]
  %932 = getelementptr inbounds i16, ptr %927, i64 1
  store i16 %928, ptr %932, align 2, !tbaa !40
  %933 = getelementptr inbounds %struct.storable_picture, ptr %929, i64 0, i32 36
  %934 = load ptr, ptr %933, align 8, !tbaa !197
  %935 = load ptr, ptr %934, align 8, !tbaa !13
  %936 = getelementptr inbounds ptr, ptr %935, i64 %879
  %937 = load ptr, ptr %936, align 8, !tbaa !13
  %938 = getelementptr inbounds i8, ptr %937, i64 %930
  store i8 %931, ptr %938, align 1, !tbaa !14
  br i1 %829, label %939, label %976

939:                                              ; preds = %926
  br i1 %853, label %942, label %940

940:                                              ; preds = %939
  %941 = sext i32 %881 to i64
  br label %965

942:                                              ; preds = %939
  %943 = load ptr, ptr %874, align 8, !tbaa !13
  %944 = sext i32 %881 to i64
  %945 = getelementptr inbounds i8, ptr %943, i64 %944
  %946 = load i8, ptr %945, align 1, !tbaa !14
  %947 = icmp eq i8 %946, 0
  br i1 %947, label %948, label %965

948:                                              ; preds = %942
  %949 = load ptr, ptr %849, align 8, !tbaa !13
  %950 = load ptr, ptr %949, align 8, !tbaa !13
  %951 = getelementptr inbounds %struct.storable_picture, ptr %950, i64 0, i32 14
  %952 = load i32, ptr %951, align 4, !tbaa !356
  %953 = icmp eq i32 %952, 0
  br i1 %953, label %954, label %965

954:                                              ; preds = %948
  %955 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %956 = getelementptr inbounds %struct.storable_picture, ptr %955, i64 0, i32 39
  %957 = load ptr, ptr %956, align 8, !tbaa !371
  %958 = getelementptr inbounds ptr, ptr %957, i64 1
  %959 = load ptr, ptr %958, align 8, !tbaa !13
  %960 = getelementptr inbounds ptr, ptr %959, i64 %879
  %961 = load ptr, ptr %960, align 8, !tbaa !13
  %962 = getelementptr inbounds ptr, ptr %961, i64 %944
  %963 = load ptr, ptr %962, align 8, !tbaa !13
  store i16 0, ptr %963, align 2, !tbaa !40
  %964 = getelementptr inbounds i16, ptr %963, i64 1
  store i16 0, ptr %964, align 2, !tbaa !40
  br label %1011

965:                                              ; preds = %948, %942, %940
  %966 = phi i64 [ %941, %940 ], [ %944, %948 ], [ %944, %942 ]
  %967 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %968 = getelementptr inbounds %struct.storable_picture, ptr %967, i64 0, i32 39
  %969 = load ptr, ptr %968, align 8, !tbaa !371
  %970 = getelementptr inbounds ptr, ptr %969, i64 1
  %971 = load ptr, ptr %970, align 8, !tbaa !13
  %972 = getelementptr inbounds ptr, ptr %971, i64 %879
  %973 = load ptr, ptr %972, align 8, !tbaa !13
  %974 = getelementptr inbounds ptr, ptr %973, i64 %966
  %975 = load ptr, ptr %974, align 8, !tbaa !13
  store i16 %841, ptr %975, align 2, !tbaa !40
  br label %987

976:                                              ; preds = %926
  %977 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %978 = getelementptr inbounds %struct.storable_picture, ptr %977, i64 0, i32 39
  %979 = load ptr, ptr %978, align 8, !tbaa !371
  %980 = getelementptr inbounds ptr, ptr %979, i64 1
  %981 = load ptr, ptr %980, align 8, !tbaa !13
  %982 = getelementptr inbounds ptr, ptr %981, i64 %879
  %983 = load ptr, ptr %982, align 8, !tbaa !13
  %984 = sext i32 %881 to i64
  %985 = getelementptr inbounds ptr, ptr %983, i64 %984
  %986 = load ptr, ptr %985, align 8, !tbaa !13
  store i16 0, ptr %986, align 2, !tbaa !40
  br label %987

987:                                              ; preds = %976, %965
  %988 = phi ptr [ %975, %965 ], [ %986, %976 ]
  %989 = phi i16 [ %840, %965 ], [ 0, %976 ]
  %990 = phi ptr [ %967, %965 ], [ %977, %976 ]
  %991 = phi i64 [ %966, %965 ], [ %984, %976 ]
  %992 = phi i8 [ %818, %965 ], [ -1, %976 ]
  %993 = getelementptr inbounds i16, ptr %988, i64 1
  store i16 %989, ptr %993, align 2, !tbaa !40
  %994 = getelementptr inbounds %struct.storable_picture, ptr %990, i64 0, i32 36
  %995 = load ptr, ptr %994, align 8, !tbaa !197
  %996 = getelementptr inbounds ptr, ptr %995, i64 1
  %997 = load ptr, ptr %996, align 8, !tbaa !13
  %998 = getelementptr inbounds ptr, ptr %997, i64 %879
  %999 = load ptr, ptr %998, align 8, !tbaa !13
  %1000 = getelementptr inbounds i8, ptr %999, i64 %991
  store i8 %992, ptr %1000, align 1, !tbaa !14
  br i1 %845, label %1021, label %1001

1001:                                             ; preds = %987
  %1002 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1003 = getelementptr inbounds %struct.storable_picture, ptr %1002, i64 0, i32 36
  %1004 = load ptr, ptr %1003, align 8, !tbaa !197
  %1005 = load ptr, ptr %1004, align 8, !tbaa !13
  %1006 = getelementptr inbounds ptr, ptr %1005, i64 %879
  %1007 = load ptr, ptr %1006, align 8, !tbaa !13
  %1008 = sext i32 %881 to i64
  %1009 = getelementptr inbounds i8, ptr %1007, i64 %1008
  store i8 0, ptr %1009, align 1, !tbaa !14
  %1010 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  br label %1011

1011:                                             ; preds = %1001, %954
  %1012 = phi ptr [ %955, %954 ], [ %1010, %1001 ]
  %1013 = phi i64 [ %944, %954 ], [ %1008, %1001 ]
  %1014 = getelementptr inbounds %struct.storable_picture, ptr %1012, i64 0, i32 36
  %1015 = load ptr, ptr %1014, align 8, !tbaa !197
  %1016 = getelementptr inbounds ptr, ptr %1015, i64 1
  %1017 = load ptr, ptr %1016, align 8, !tbaa !13
  %1018 = getelementptr inbounds ptr, ptr %1017, i64 %879
  %1019 = load ptr, ptr %1018, align 8, !tbaa !13
  %1020 = getelementptr inbounds i8, ptr %1019, i64 %1013
  store i8 0, ptr %1020, align 1, !tbaa !14
  br label %1021

1021:                                             ; preds = %1011, %987
  %1022 = add nuw nsw i32 %876, 1
  %1023 = icmp eq i32 %876, %870
  br i1 %1023, label %1024, label %875, !llvm.loop !748

1024:                                             ; preds = %1021
  %1025 = add nuw nsw i64 %872, 1
  %1026 = icmp eq i64 %1025, %869
  br i1 %1026, label %1027, label %871, !llvm.loop !749

1027:                                             ; preds = %1024, %855
  %1028 = add nuw nsw i64 %856, 1
  %1029 = add nuw nsw i32 %857, 1
  %1030 = icmp eq i64 %1028, 4
  br i1 %1030, label %1031, label %855, !llvm.loop !750

1031:                                             ; preds = %1027
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #48
  br label %1203

1032:                                             ; preds = %1199, %76
  %1033 = phi i64 [ 0, %76 ], [ %1200, %1199 ]
  %1034 = phi i32 [ 0, %76 ], [ %1201, %1199 ]
  %1035 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 %1033
  %1036 = load i8, ptr %1035, align 1, !tbaa !14
  %1037 = icmp eq i8 %1036, 0
  br i1 %1037, label %1038, label %1199

1038:                                             ; preds = %1032
  %1039 = shl nuw i32 %1034, 1
  %1040 = and i32 %1039, 2
  %1041 = trunc i64 %1033 to i32
  %1042 = and i32 %1041, 2147483646
  %1043 = trunc i64 %1033 to i32
  %1044 = shl i32 %1043, 1
  %1045 = and i32 %1044, 2
  %1046 = or i32 %1040, 1
  %1047 = or i32 %1041, 1
  br label %1048

1048:                                             ; preds = %1196, %1038
  %1049 = phi i32 [ %1042, %1038 ], [ %1197, %1196 ]
  br label %1050

1050:                                             ; preds = %1167, %1048
  %1051 = phi i32 [ %1045, %1048 ], [ %1194, %1167 ]
  %1052 = load i32, ptr %34, align 8, !tbaa !189
  %1053 = icmp eq i32 %1052, 0
  br i1 %1053, label %1070, label %1054

1054:                                             ; preds = %1050
  %1055 = load i32, ptr %78, align 4, !tbaa !170
  %1056 = icmp eq i32 %1055, 0
  br i1 %1056, label %1070, label %1057

1057:                                             ; preds = %1054
  %1058 = load i32, ptr %13, align 4, !tbaa !49
  %1059 = and i32 %1058, 1
  %1060 = icmp eq i32 %1059, 0
  %1061 = select i1 %1060, i64 2, i64 4
  %1062 = and i32 %1058, 1
  %1063 = icmp eq i32 %1062, 0
  %1064 = load i32, ptr %79, align 4, !tbaa !301
  br i1 %1063, label %1068, label %1065

1065:                                             ; preds = %1057
  %1066 = add nsw i32 %1064, -4
  %1067 = ashr i32 %1066, 1
  br label %1072

1068:                                             ; preds = %1057
  %1069 = ashr i32 %1064, 1
  br label %1072

1070:                                             ; preds = %1054, %1050
  %1071 = load i32, ptr %79, align 4, !tbaa !301
  br label %1072

1072:                                             ; preds = %1070, %1068, %1065
  %1073 = phi i32 [ %1071, %1070 ], [ %1064, %1065 ], [ %1064, %1068 ]
  %1074 = phi i64 [ 0, %1070 ], [ %1061, %1065 ], [ %1061, %1068 ]
  %1075 = phi i32 [ %1071, %1070 ], [ %1067, %1065 ], [ %1069, %1068 ]
  %1076 = load ptr, ptr %68, align 8, !tbaa !13
  %1077 = add nsw i32 %1075, %1049
  %1078 = sext i32 %1077 to i64
  %1079 = getelementptr inbounds ptr, ptr %1076, i64 %1078
  %1080 = load ptr, ptr %1079, align 8, !tbaa !13
  %1081 = load i32, ptr %77, align 4, !tbaa !303
  %1082 = add nsw i32 %1081, %1051
  %1083 = sext i32 %1082 to i64
  %1084 = getelementptr inbounds i8, ptr %1080, i64 %1083
  %1085 = load i8, ptr %1084, align 1, !tbaa !14
  %1086 = icmp eq i8 %1085, -1
  %1087 = zext i1 %1086 to i64
  %1088 = getelementptr inbounds ptr, ptr %68, i64 %1087
  %1089 = load ptr, ptr %1088, align 8, !tbaa !13
  %1090 = getelementptr inbounds ptr, ptr %1089, i64 %1078
  %1091 = load ptr, ptr %1090, align 8, !tbaa !13
  %1092 = getelementptr inbounds i8, ptr %1091, i64 %1083
  %1093 = load i8, ptr %1092, align 1, !tbaa !14
  %1094 = icmp eq i8 %1093, -1
  br i1 %1094, label %1167, label %1095

1095:                                             ; preds = %1072
  %1096 = load i32, ptr %80, align 8, !tbaa !466
  %1097 = getelementptr inbounds [6 x i32], ptr @listXsize, i64 0, i64 %1074
  %1098 = load i32, ptr %1097, align 8, !tbaa !18
  %1099 = tail call i32 @llvm.smin.i32(i32 %1096, i32 %1098)
  %1100 = icmp sgt i32 %1099, 0
  br i1 %1100, label %1101, label %1162

1101:                                             ; preds = %1095
  %1102 = load i32, ptr %81, align 8, !tbaa !206
  %1103 = icmp ne i32 %1102, 0
  %1104 = load ptr, ptr @listX, align 16
  %1105 = getelementptr inbounds ptr, ptr %67, i64 %1087
  %1106 = load ptr, ptr @dec_picture, align 8
  %1107 = zext i32 %1099 to i64
  br label %1108

1108:                                             ; preds = %1146, %1101
  %1109 = phi i64 [ %1148, %1146 ], [ 0, %1101 ]
  br i1 %1053, label %1113, label %1110

1110:                                             ; preds = %1108
  %1111 = load i32, ptr %78, align 4, !tbaa !170
  %1112 = icmp ne i32 %1111, 0
  br label %1113

1113:                                             ; preds = %1110, %1108
  %1114 = phi i1 [ false, %1108 ], [ %1112, %1110 ]
  %1115 = select i1 %1103, i1 true, i1 %1114
  br i1 %1115, label %1135, label %1116

1116:                                             ; preds = %1113
  %1117 = getelementptr inbounds ptr, ptr %1104, i64 %1109
  %1118 = load ptr, ptr %1117, align 8, !tbaa !13
  %1119 = getelementptr inbounds %struct.storable_picture, ptr %1118, i64 0, i32 2
  %1120 = load i32, ptr %1119, align 8, !tbaa !593
  %1121 = shl nsw i32 %1120, 1
  %1122 = sext i32 %1121 to i64
  %1123 = load ptr, ptr %1105, align 8, !tbaa !13
  %1124 = getelementptr inbounds ptr, ptr %1123, i64 %1078
  %1125 = load ptr, ptr %1124, align 8, !tbaa !13
  %1126 = getelementptr inbounds i64, ptr %1125, i64 %1083
  %1127 = load i64, ptr %1126, align 8, !tbaa !592
  %1128 = icmp eq i64 %1127, %1122
  br i1 %1128, label %1160, label %1129

1129:                                             ; preds = %1116
  %1130 = getelementptr inbounds %struct.storable_picture, ptr %1118, i64 0, i32 3
  %1131 = load i32, ptr %1130, align 4, !tbaa !594
  %1132 = shl nsw i32 %1131, 1
  %1133 = sext i32 %1132 to i64
  %1134 = icmp eq i64 %1127, %1133
  br label %1146

1135:                                             ; preds = %1113
  %1136 = load i32, ptr %82, align 4, !tbaa !175
  %1137 = sext i32 %1136 to i64
  %1138 = getelementptr inbounds %struct.storable_picture, ptr %1106, i64 0, i32 5, i64 %1137, i64 %1074, i64 %1109
  %1139 = load i64, ptr %1138, align 8, !tbaa !592
  %1140 = load ptr, ptr %1105, align 8, !tbaa !13
  %1141 = getelementptr inbounds ptr, ptr %1140, i64 %1078
  %1142 = load ptr, ptr %1141, align 8, !tbaa !13
  %1143 = getelementptr inbounds i64, ptr %1142, i64 %1083
  %1144 = load i64, ptr %1143, align 8, !tbaa !592
  %1145 = icmp eq i64 %1139, %1144
  br label %1146

1146:                                             ; preds = %1135, %1129
  %1147 = phi i1 [ %1134, %1129 ], [ %1145, %1135 ]
  %1148 = add nuw nsw i64 %1109, 1
  %1149 = icmp uge i64 %1148, %1107
  %1150 = select i1 %1147, i1 true, i1 %1149
  br i1 %1150, label %1151, label %1108, !llvm.loop !751

1151:                                             ; preds = %1146
  %.lcssa6 = phi i1 [ %1147, %1146 ]
  %.lcssa5 = phi i64 [ %1109, %1146 ]
  %1152 = trunc i64 %.lcssa5 to i32
  %1153 = select i1 %.lcssa6, i32 %1152, i32 -135792468
  %1154 = icmp eq i32 %1153, -135792468
  br i1 %1154, label %1155, label %1162

1155:                                             ; preds = %1151
  tail call void @error(ptr noundef nonnull @.str.3.170, i32 noundef -1111) #46
  %1156 = load i32, ptr %79, align 4, !tbaa !301
  %1157 = load i32, ptr %77, align 4, !tbaa !303
  %1158 = add nsw i32 %1157, %1051
  %1159 = sext i32 %1158 to i64
  br label %1162

1160:                                             ; preds = %1116
  %.lcssa4 = phi i64 [ %1109, %1116 ]
  %1161 = trunc i64 %.lcssa4 to i32
  br label %1162

1162:                                             ; preds = %1160, %1155, %1151, %1095
  %1163 = phi i64 [ %1083, %1160 ], [ %1159, %1155 ], [ %1083, %1151 ], [ %1083, %1095 ]
  %1164 = phi i32 [ %1073, %1160 ], [ %1156, %1155 ], [ %1073, %1151 ], [ %1073, %1095 ]
  %1165 = phi i32 [ %1161, %1160 ], [ -135792468, %1155 ], [ %1153, %1151 ], [ -1, %1095 ]
  %1166 = trunc i32 %1165 to i8
  br label %1167

1167:                                             ; preds = %1162, %1072
  %1168 = phi i32 [ %1164, %1162 ], [ %1073, %1072 ]
  %1169 = phi i64 [ %1163, %1162 ], [ %1083, %1072 ]
  %1170 = phi i8 [ %1166, %1162 ], [ 0, %1072 ]
  %1171 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1172 = getelementptr inbounds %struct.storable_picture, ptr %1171, i64 0, i32 36
  %1173 = load ptr, ptr %1172, align 8, !tbaa !197
  %1174 = load ptr, ptr %1173, align 8, !tbaa !13
  %1175 = add nsw i32 %1168, %1049
  %1176 = sext i32 %1175 to i64
  %1177 = getelementptr inbounds ptr, ptr %1174, i64 %1176
  %1178 = load ptr, ptr %1177, align 8, !tbaa !13
  %1179 = getelementptr inbounds i8, ptr %1178, i64 %1169
  store i8 %1170, ptr %1179, align 1, !tbaa !14
  %1180 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1181 = getelementptr inbounds %struct.storable_picture, ptr %1180, i64 0, i32 36
  %1182 = load ptr, ptr %1181, align 8, !tbaa !197
  %1183 = getelementptr inbounds ptr, ptr %1182, i64 1
  %1184 = load ptr, ptr %1183, align 8, !tbaa !13
  %1185 = load i32, ptr %79, align 4, !tbaa !301
  %1186 = add nsw i32 %1185, %1049
  %1187 = sext i32 %1186 to i64
  %1188 = getelementptr inbounds ptr, ptr %1184, i64 %1187
  %1189 = load ptr, ptr %1188, align 8, !tbaa !13
  %1190 = load i32, ptr %77, align 4, !tbaa !303
  %1191 = add nsw i32 %1190, %1051
  %1192 = sext i32 %1191 to i64
  %1193 = getelementptr inbounds i8, ptr %1189, i64 %1192
  store i8 0, ptr %1193, align 1, !tbaa !14
  %1194 = add nuw nsw i32 %1051, 1
  %1195 = icmp eq i32 %1051, %1046
  br i1 %1195, label %1196, label %1050, !llvm.loop !752

1196:                                             ; preds = %1167
  %1197 = add nuw nsw i32 %1049, 1
  %1198 = icmp eq i32 %1049, %1047
  br i1 %1198, label %1199, label %1048, !llvm.loop !753

1199:                                             ; preds = %1196, %1032
  %1200 = add nuw nsw i64 %1033, 1
  %1201 = add nuw nsw i32 %1034, 1
  %1202 = icmp eq i64 %1200, 4
  br i1 %1202, label %1203, label %1032, !llvm.loop !754

1203:                                             ; preds = %1199, %1031, %61
  %1204 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 47
  %1205 = load i32, ptr %1204, align 8, !tbaa !466
  %1206 = icmp sgt i32 %1205, 1
  br i1 %1206, label %1212, label %1207

1207:                                             ; preds = %1203
  %1208 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  %1209 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  %1210 = sext i32 %31 to i64
  %1211 = sext i32 %33 to i64
  br label %1331

1212:                                             ; preds = %1203
  %1213 = icmp eq i32 %1205, 2
  store i32 3, ptr %3, align 8, !tbaa !736
  %1214 = getelementptr inbounds %struct.Slice, ptr %17, i64 0, i32 9
  %1215 = load ptr, ptr %1214, align 8, !tbaa !214
  %1216 = getelementptr inbounds i32, ptr %21, i64 3
  %1217 = load i32, ptr %1216, align 4, !tbaa !18
  %1218 = sext i32 %1217 to i64
  %1219 = getelementptr inbounds %struct.datapartition, ptr %1215, i64 %1218
  %1220 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1221 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1220, i64 0, i32 3
  %1222 = load i32, ptr %1221, align 4, !tbaa !490
  %1223 = icmp eq i32 %1222, 0
  br i1 %1223, label %1229, label %1224

1224:                                             ; preds = %1212
  %1225 = load ptr, ptr %1219, align 8, !tbaa !448
  %1226 = getelementptr inbounds %struct.Bitstream, ptr %1225, i64 0, i32 5
  %1227 = load i32, ptr %1226, align 8, !tbaa !560
  %1228 = icmp eq i32 %1227, 0
  br i1 %1228, label %1231, label %1229

1229:                                             ; preds = %1224, %1212
  %1230 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  store ptr @linfo_ue, ptr %1230, align 8, !tbaa !737
  br label %1233

1231:                                             ; preds = %1224
  %1232 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readRefFrame_CABAC, ptr %1232, align 8, !tbaa !211
  br label %1233

1233:                                             ; preds = %1231, %1229
  %1234 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 40
  %1235 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 41
  %1236 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 24
  %1237 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 6
  %1238 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 2
  %1239 = getelementptr inbounds %struct.datapartition, ptr %1215, i64 %1218, i32 2
  %1240 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 3
  %1241 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %1242 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  %1243 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  %1244 = sext i32 %31 to i64
  %1245 = sext i32 %33 to i64
  br label %1246

1246:                                             ; preds = %1327, %1233
  %1247 = phi i64 [ 0, %1233 ], [ %1328, %1327 ]
  %1248 = trunc i64 %1247 to i32
  %1249 = and i32 %1248, -2
  %1250 = add i32 %33, %1248
  br label %1251

1251:                                             ; preds = %1324, %1246
  %1252 = phi i32 [ 0, %1246 ], [ %1325, %1324 ]
  %1253 = ashr i32 %1252, 1
  %1254 = add nsw i32 %1253, %1249
  %1255 = sext i32 %1254 to i64
  %1256 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 14, i64 %1255
  %1257 = load i8, ptr %1256, align 1, !tbaa !14
  switch i8 %1257, label %1324 [
    i8 0, label %1258
    i8 2, label %1258
  ]

1258:                                             ; preds = %1251, %1251
  %1259 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 %1255
  %1260 = load i8, ptr %1259, align 1, !tbaa !14
  %1261 = icmp eq i8 %1260, 0
  br i1 %1261, label %1324, label %1262

1262:                                             ; preds = %1258
  store i32 %1252, ptr %1234, align 8, !tbaa !185
  store i32 %1248, ptr %1235, align 4, !tbaa !186
  %1263 = load i32, ptr %25, align 8, !tbaa !195
  %1264 = icmp ne i32 %1263, 8
  %1265 = select i1 %1264, i1 true, i1 %24
  br i1 %1265, label %1269, label %1266

1266:                                             ; preds = %1262
  %1267 = load i32, ptr %1236, align 4, !tbaa !727
  %1268 = icmp eq i32 %1267, 0
  br i1 %1268, label %1269, label %1298

1269:                                             ; preds = %1266, %1262
  %1270 = load i8, ptr %1259, align 1, !tbaa !14
  %1271 = icmp sgt i8 %1270, 3
  %1272 = zext i1 %1271 to i32
  store i32 %1272, ptr %1237, align 8, !tbaa !190
  %1273 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1274 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1273, i64 0, i32 3
  %1275 = load i32, ptr %1274, align 4, !tbaa !490
  %1276 = icmp eq i32 %1275, 0
  br i1 %1276, label %1283, label %1277

1277:                                             ; preds = %1269
  %1278 = load ptr, ptr %1219, align 8, !tbaa !448
  %1279 = getelementptr inbounds %struct.Bitstream, ptr %1278, i64 0, i32 5
  %1280 = load i32, ptr %1279, align 8, !tbaa !560
  %1281 = icmp ne i32 %1280, 0
  %1282 = and i1 %1213, %1281
  br i1 %1282, label %1286, label %1291

1283:                                             ; preds = %1269
  br i1 %1213, label %1284, label %1291

1284:                                             ; preds = %1283
  %1285 = load ptr, ptr %1219, align 8, !tbaa !448
  br label %1286

1286:                                             ; preds = %1284, %1277
  %1287 = phi ptr [ %1285, %1284 ], [ %1278, %1277 ]
  store i32 1, ptr %1240, align 4, !tbaa !212
  %1288 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %3, ptr noundef %1287) #46
  %1289 = load i32, ptr %1241, align 4, !tbaa !173
  %1290 = sub nsw i32 1, %1289
  store i32 %1290, ptr %1241, align 4, !tbaa !173
  br label %1295

1291:                                             ; preds = %1283, %1277
  store i32 0, ptr %1238, align 8, !tbaa !179
  %1292 = load ptr, ptr %1239, align 8, !tbaa !738
  %1293 = call i32 %1292(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %1219) #46
  %1294 = load i32, ptr %1241, align 4, !tbaa !173
  br label %1295

1295:                                             ; preds = %1291, %1286
  %1296 = phi i32 [ %1294, %1291 ], [ %1290, %1286 ]
  %1297 = trunc i32 %1296 to i8
  br label %1298

1298:                                             ; preds = %1295, %1266
  %1299 = phi i8 [ %1297, %1295 ], [ 0, %1266 ]
  %1300 = load i32, ptr %1242, align 4, !tbaa !301
  %1301 = add nsw i32 %1300, %1248
  %1302 = add i32 %1250, %1300
  %1303 = icmp slt i32 %1301, %1302
  br i1 %1303, label %1304, label %1324

1304:                                             ; preds = %1298
  %1305 = sext i32 %1300 to i64
  %1306 = add nsw i64 %1247, %1305
  br label %1307

1307:                                             ; preds = %1307, %1304
  %1308 = phi i64 [ %1306, %1304 ], [ %1319, %1307 ]
  %1309 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1310 = getelementptr inbounds %struct.storable_picture, ptr %1309, i64 0, i32 36
  %1311 = load ptr, ptr %1310, align 8, !tbaa !197
  %1312 = load ptr, ptr %1311, align 8, !tbaa !13
  %1313 = getelementptr inbounds ptr, ptr %1312, i64 %1308
  %1314 = load ptr, ptr %1313, align 8, !tbaa !13
  %1315 = load i32, ptr %1243, align 4, !tbaa !303
  %1316 = add nsw i32 %1315, %1252
  %1317 = sext i32 %1316 to i64
  %1318 = getelementptr inbounds i8, ptr %1314, i64 %1317
  call void @llvm.memset.p0.i64(ptr align 1 %1318, i8 %1299, i64 %1244, i1 false)
  %1319 = add nsw i64 %1308, 1
  %1320 = load i32, ptr %1242, align 4, !tbaa !301
  %1321 = add i32 %1250, %1320
  %1322 = sext i32 %1321 to i64
  %1323 = icmp slt i64 %1319, %1322
  br i1 %1323, label %1307, label %1324, !llvm.loop !755

1324:                                             ; preds = %1307, %1298, %1258, %1251
  %1325 = add nsw i32 %1252, %31
  %1326 = icmp slt i32 %1325, 4
  br i1 %1326, label %1251, label %1327, !llvm.loop !756

1327:                                             ; preds = %1324
  %1328 = add i64 %1247, %1245
  %1329 = trunc i64 %1328 to i32
  %1330 = icmp slt i32 %1329, 4
  br i1 %1330, label %1246, label %1379, !llvm.loop !757

1331:                                             ; preds = %1375, %1207
  %1332 = phi i64 [ 0, %1207 ], [ %1376, %1375 ]
  %1333 = trunc i64 %1332 to i32
  %1334 = and i32 %1333, -2
  %1335 = add nsw i32 %33, %1333
  br label %1336

1336:                                             ; preds = %1372, %1331
  %1337 = phi i32 [ 0, %1331 ], [ %1373, %1372 ]
  %1338 = ashr i32 %1337, 1
  %1339 = add nsw i32 %1338, %1334
  %1340 = sext i32 %1339 to i64
  %1341 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 14, i64 %1340
  %1342 = load i8, ptr %1341, align 1, !tbaa !14
  switch i8 %1342, label %1372 [
    i8 0, label %1343
    i8 2, label %1343
  ]

1343:                                             ; preds = %1336, %1336
  %1344 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 %1340
  %1345 = load i8, ptr %1344, align 1, !tbaa !14
  %1346 = icmp eq i8 %1345, 0
  br i1 %1346, label %1372, label %1347

1347:                                             ; preds = %1343
  %1348 = load i32, ptr %1208, align 4, !tbaa !301
  %1349 = add nsw i32 %1348, %1333
  %1350 = add i32 %1335, %1348
  %1351 = icmp slt i32 %1349, %1350
  br i1 %1351, label %1352, label %1372

1352:                                             ; preds = %1347
  %1353 = sext i32 %1348 to i64
  %1354 = add nsw i64 %1332, %1353
  br label %1355

1355:                                             ; preds = %1355, %1352
  %1356 = phi i64 [ %1354, %1352 ], [ %1367, %1355 ]
  %1357 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1358 = getelementptr inbounds %struct.storable_picture, ptr %1357, i64 0, i32 36
  %1359 = load ptr, ptr %1358, align 8, !tbaa !197
  %1360 = load ptr, ptr %1359, align 8, !tbaa !13
  %1361 = getelementptr inbounds ptr, ptr %1360, i64 %1356
  %1362 = load ptr, ptr %1361, align 8, !tbaa !13
  %1363 = load i32, ptr %1209, align 4, !tbaa !303
  %1364 = add nsw i32 %1363, %1337
  %1365 = sext i32 %1364 to i64
  %1366 = getelementptr inbounds i8, ptr %1362, i64 %1365
  call void @llvm.memset.p0.i64(ptr align 1 %1366, i8 0, i64 %1210, i1 false)
  %1367 = add nsw i64 %1356, 1
  %1368 = load i32, ptr %1208, align 4, !tbaa !301
  %1369 = add i32 %1335, %1368
  %1370 = sext i32 %1369 to i64
  %1371 = icmp slt i64 %1367, %1370
  br i1 %1371, label %1355, label %1372, !llvm.loop !758

1372:                                             ; preds = %1355, %1347, %1343, %1336
  %1373 = add nsw i32 %1337, %31
  %1374 = icmp slt i32 %1373, 4
  br i1 %1374, label %1336, label %1375, !llvm.loop !759

1375:                                             ; preds = %1372
  %1376 = add i64 %1332, %1211
  %1377 = trunc i64 %1376 to i32
  %1378 = icmp slt i32 %1377, 4
  br i1 %1378, label %1331, label %1379, !llvm.loop !760

1379:                                             ; preds = %1375, %1327
  %1380 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 48
  %1381 = load i32, ptr %1380, align 4, !tbaa !467
  %1382 = icmp sgt i32 %1381, 1
  br i1 %1382, label %1388, label %1383

1383:                                             ; preds = %1379
  %1384 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  %1385 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  %1386 = sext i32 %31 to i64
  %1387 = sext i32 %33 to i64
  br label %1500

1388:                                             ; preds = %1379
  %1389 = icmp eq i32 %1381, 2
  store i32 3, ptr %3, align 8, !tbaa !736
  %1390 = getelementptr inbounds %struct.Slice, ptr %17, i64 0, i32 9
  %1391 = load ptr, ptr %1390, align 8, !tbaa !214
  %1392 = getelementptr inbounds i32, ptr %21, i64 3
  %1393 = load i32, ptr %1392, align 4, !tbaa !18
  %1394 = sext i32 %1393 to i64
  %1395 = getelementptr inbounds %struct.datapartition, ptr %1391, i64 %1394
  %1396 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1397 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1396, i64 0, i32 3
  %1398 = load i32, ptr %1397, align 4, !tbaa !490
  %1399 = icmp eq i32 %1398, 0
  br i1 %1399, label %1405, label %1400

1400:                                             ; preds = %1388
  %1401 = load ptr, ptr %1395, align 8, !tbaa !448
  %1402 = getelementptr inbounds %struct.Bitstream, ptr %1401, i64 0, i32 5
  %1403 = load i32, ptr %1402, align 8, !tbaa !560
  %1404 = icmp eq i32 %1403, 0
  br i1 %1404, label %1407, label %1405

1405:                                             ; preds = %1400, %1388
  %1406 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  store ptr @linfo_ue, ptr %1406, align 8, !tbaa !737
  br label %1409

1407:                                             ; preds = %1400
  %1408 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readRefFrame_CABAC, ptr %1408, align 8, !tbaa !211
  br label %1409

1409:                                             ; preds = %1407, %1405
  %1410 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 40
  %1411 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 41
  %1412 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 6
  %1413 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 2
  %1414 = getelementptr inbounds %struct.datapartition, ptr %1391, i64 %1394, i32 2
  %1415 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 3
  %1416 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %1417 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  %1418 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  %1419 = sext i32 %31 to i64
  %1420 = sext i32 %33 to i64
  br label %1421

1421:                                             ; preds = %1496, %1409
  %1422 = phi i64 [ 0, %1409 ], [ %1497, %1496 ]
  %1423 = trunc i64 %1422 to i32
  %1424 = and i32 %1423, -2
  %1425 = add i32 %33, %1423
  br label %1426

1426:                                             ; preds = %1493, %1421
  %1427 = phi i32 [ 0, %1421 ], [ %1494, %1493 ]
  %1428 = ashr i32 %1427, 1
  %1429 = add nsw i32 %1428, %1424
  %1430 = sext i32 %1429 to i64
  %1431 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 14, i64 %1430
  %1432 = load i8, ptr %1431, align 1, !tbaa !14
  %1433 = add i8 %1432, -1
  %1434 = icmp ult i8 %1433, 2
  br i1 %1434, label %1435, label %1493

1435:                                             ; preds = %1426
  %1436 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 %1430
  %1437 = load i8, ptr %1436, align 1, !tbaa !14
  %1438 = icmp eq i8 %1437, 0
  br i1 %1438, label %1493, label %1439

1439:                                             ; preds = %1435
  store i32 %1427, ptr %1410, align 8, !tbaa !185
  store i32 %1423, ptr %1411, align 4, !tbaa !186
  %1440 = load i8, ptr %1436, align 1, !tbaa !14
  %1441 = icmp sgt i8 %1440, 3
  %1442 = zext i1 %1441 to i32
  store i32 %1442, ptr %1412, align 8, !tbaa !190
  %1443 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1444 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1443, i64 0, i32 3
  %1445 = load i32, ptr %1444, align 4, !tbaa !490
  %1446 = icmp eq i32 %1445, 0
  br i1 %1446, label %1453, label %1447

1447:                                             ; preds = %1439
  %1448 = load ptr, ptr %1395, align 8, !tbaa !448
  %1449 = getelementptr inbounds %struct.Bitstream, ptr %1448, i64 0, i32 5
  %1450 = load i32, ptr %1449, align 8, !tbaa !560
  %1451 = icmp ne i32 %1450, 0
  %1452 = and i1 %1389, %1451
  br i1 %1452, label %1456, label %1461

1453:                                             ; preds = %1439
  br i1 %1389, label %1454, label %1461

1454:                                             ; preds = %1453
  %1455 = load ptr, ptr %1395, align 8, !tbaa !448
  br label %1456

1456:                                             ; preds = %1454, %1447
  %1457 = phi ptr [ %1455, %1454 ], [ %1448, %1447 ]
  store i32 1, ptr %1415, align 4, !tbaa !212
  %1458 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %3, ptr noundef %1457) #46
  %1459 = load i32, ptr %1416, align 4, !tbaa !173
  %1460 = sub nsw i32 1, %1459
  store i32 %1460, ptr %1416, align 4, !tbaa !173
  br label %1465

1461:                                             ; preds = %1453, %1447
  store i32 1, ptr %1413, align 8, !tbaa !179
  %1462 = load ptr, ptr %1414, align 8, !tbaa !738
  %1463 = call i32 %1462(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %1395) #46
  %1464 = load i32, ptr %1416, align 4, !tbaa !173
  br label %1465

1465:                                             ; preds = %1461, %1456
  %1466 = phi i32 [ %1464, %1461 ], [ %1460, %1456 ]
  %1467 = trunc i32 %1466 to i8
  %1468 = load i32, ptr %1417, align 4, !tbaa !301
  %1469 = add nsw i32 %1468, %1423
  %1470 = add i32 %1425, %1468
  %1471 = icmp slt i32 %1469, %1470
  br i1 %1471, label %1472, label %1493

1472:                                             ; preds = %1465
  %1473 = sext i32 %1468 to i64
  %1474 = add nsw i64 %1422, %1473
  br label %1475

1475:                                             ; preds = %1475, %1472
  %1476 = phi i64 [ %1474, %1472 ], [ %1488, %1475 ]
  %1477 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1478 = getelementptr inbounds %struct.storable_picture, ptr %1477, i64 0, i32 36
  %1479 = load ptr, ptr %1478, align 8, !tbaa !197
  %1480 = getelementptr inbounds ptr, ptr %1479, i64 1
  %1481 = load ptr, ptr %1480, align 8, !tbaa !13
  %1482 = getelementptr inbounds ptr, ptr %1481, i64 %1476
  %1483 = load ptr, ptr %1482, align 8, !tbaa !13
  %1484 = load i32, ptr %1418, align 4, !tbaa !303
  %1485 = add nsw i32 %1484, %1427
  %1486 = sext i32 %1485 to i64
  %1487 = getelementptr inbounds i8, ptr %1483, i64 %1486
  call void @llvm.memset.p0.i64(ptr align 1 %1487, i8 %1467, i64 %1419, i1 false)
  %1488 = add nsw i64 %1476, 1
  %1489 = load i32, ptr %1417, align 4, !tbaa !301
  %1490 = add i32 %1425, %1489
  %1491 = sext i32 %1490 to i64
  %1492 = icmp slt i64 %1488, %1491
  br i1 %1492, label %1475, label %1493, !llvm.loop !761

1493:                                             ; preds = %1475, %1465, %1435, %1426
  %1494 = add nsw i32 %1427, %31
  %1495 = icmp slt i32 %1494, 4
  br i1 %1495, label %1426, label %1496, !llvm.loop !762

1496:                                             ; preds = %1493
  %1497 = add i64 %1422, %1420
  %1498 = trunc i64 %1497 to i32
  %1499 = icmp slt i32 %1498, 4
  br i1 %1499, label %1421, label %1551, !llvm.loop !763

1500:                                             ; preds = %1547, %1383
  %1501 = phi i64 [ 0, %1383 ], [ %1548, %1547 ]
  %1502 = trunc i64 %1501 to i32
  %1503 = and i32 %1502, -2
  %1504 = add nsw i32 %33, %1502
  br label %1505

1505:                                             ; preds = %1544, %1500
  %1506 = phi i32 [ 0, %1500 ], [ %1545, %1544 ]
  %1507 = ashr i32 %1506, 1
  %1508 = add nsw i32 %1507, %1503
  %1509 = sext i32 %1508 to i64
  %1510 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 14, i64 %1509
  %1511 = load i8, ptr %1510, align 1, !tbaa !14
  %1512 = add i8 %1511, -1
  %1513 = icmp ult i8 %1512, 2
  br i1 %1513, label %1514, label %1544

1514:                                             ; preds = %1505
  %1515 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 %1509
  %1516 = load i8, ptr %1515, align 1, !tbaa !14
  %1517 = icmp eq i8 %1516, 0
  br i1 %1517, label %1544, label %1518

1518:                                             ; preds = %1514
  %1519 = load i32, ptr %1384, align 4, !tbaa !301
  %1520 = add nsw i32 %1519, %1502
  %1521 = add i32 %1504, %1519
  %1522 = icmp slt i32 %1520, %1521
  br i1 %1522, label %1523, label %1544

1523:                                             ; preds = %1518
  %1524 = sext i32 %1519 to i64
  %1525 = add nsw i64 %1501, %1524
  br label %1526

1526:                                             ; preds = %1526, %1523
  %1527 = phi i64 [ %1525, %1523 ], [ %1539, %1526 ]
  %1528 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1529 = getelementptr inbounds %struct.storable_picture, ptr %1528, i64 0, i32 36
  %1530 = load ptr, ptr %1529, align 8, !tbaa !197
  %1531 = getelementptr inbounds ptr, ptr %1530, i64 1
  %1532 = load ptr, ptr %1531, align 8, !tbaa !13
  %1533 = getelementptr inbounds ptr, ptr %1532, i64 %1527
  %1534 = load ptr, ptr %1533, align 8, !tbaa !13
  %1535 = load i32, ptr %1385, align 4, !tbaa !303
  %1536 = add nsw i32 %1535, %1506
  %1537 = sext i32 %1536 to i64
  %1538 = getelementptr inbounds i8, ptr %1534, i64 %1537
  call void @llvm.memset.p0.i64(ptr align 1 %1538, i8 0, i64 %1386, i1 false)
  %1539 = add nsw i64 %1527, 1
  %1540 = load i32, ptr %1384, align 4, !tbaa !301
  %1541 = add i32 %1504, %1540
  %1542 = sext i32 %1541 to i64
  %1543 = icmp slt i64 %1539, %1542
  br i1 %1543, label %1526, label %1544, !llvm.loop !764

1544:                                             ; preds = %1526, %1518, %1514, %1505
  %1545 = add nsw i32 %1506, %31
  %1546 = icmp slt i32 %1545, 4
  br i1 %1546, label %1505, label %1547, !llvm.loop !765

1547:                                             ; preds = %1544
  %1548 = add i64 %1501, %1387
  %1549 = trunc i64 %1548 to i32
  %1550 = icmp slt i32 %1549, 4
  br i1 %1550, label %1500, label %1551, !llvm.loop !766

1551:                                             ; preds = %1547, %1496
  store i32 5, ptr %3, align 8, !tbaa !736
  %1552 = getelementptr inbounds %struct.Slice, ptr %17, i64 0, i32 9
  %1553 = load ptr, ptr %1552, align 8, !tbaa !214
  %1554 = getelementptr inbounds i32, ptr %21, i64 5
  %1555 = load i32, ptr %1554, align 4, !tbaa !18
  %1556 = sext i32 %1555 to i64
  %1557 = getelementptr inbounds %struct.datapartition, ptr %1553, i64 %1556
  %1558 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1559 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1558, i64 0, i32 3
  %1560 = load i32, ptr %1559, align 4, !tbaa !490
  %1561 = icmp eq i32 %1560, 0
  br i1 %1561, label %1567, label %1562

1562:                                             ; preds = %1551
  %1563 = load ptr, ptr %1557, align 8, !tbaa !448
  %1564 = getelementptr inbounds %struct.Bitstream, ptr %1563, i64 0, i32 5
  %1565 = load i32, ptr %1564, align 8, !tbaa !560
  %1566 = icmp eq i32 %1565, 0
  br i1 %1566, label %1569, label %1567

1567:                                             ; preds = %1562, %1551
  %1568 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  store ptr @linfo_se, ptr %1568, align 8, !tbaa !737
  br label %1571

1569:                                             ; preds = %1562
  %1570 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readMVD_CABAC, ptr %1570, align 8, !tbaa !211
  br label %1571

1571:                                             ; preds = %1569, %1567
  %1572 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  %1573 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  %1574 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 40
  %1575 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 41
  %1576 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 2
  %1577 = getelementptr inbounds %struct.datapartition, ptr %1553, i64 %1556, i32 2
  %1578 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %1579 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 7
  %1580 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 9
  %1581 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 20
  %1582 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 36
  %1583 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 3
  %1584 = sext i32 %31 to i64
  %1585 = sext i32 %33 to i64
  %1586 = icmp eq i32 %28, 0
  %1587 = icmp sgt i32 %31, 0
  br label %1588

1588:                                             ; preds = %1993, %1571
  %1589 = phi i64 [ 0, %1571 ], [ %1592, %1993 ]
  %1590 = trunc i64 %1589 to i32
  %1591 = and i32 %1590, -2
  %1592 = add i64 %1589, %1585
  %1593 = add i32 %33, %1590
  br label %1594

1594:                                             ; preds = %1990, %1588
  %1595 = phi i64 [ 0, %1588 ], [ %1991, %1990 ]
  %1596 = trunc i64 %1595 to i32
  %1597 = ashr i32 %1596, 1
  %1598 = add nsw i32 %1597, %1591
  %1599 = sext i32 %1598 to i64
  %1600 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 14, i64 %1599
  %1601 = load i8, ptr %1600, align 1, !tbaa !14
  switch i8 %1601, label %1697 [
    i8 0, label %1602
    i8 2, label %1602
  ]

1602:                                             ; preds = %1594, %1594
  %1603 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 %1599
  %1604 = load i8, ptr %1603, align 1, !tbaa !14
  %1605 = icmp eq i8 %1604, 0
  br i1 %1605, label %1701, label %1606

1606:                                             ; preds = %1602
  %1607 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1608 = getelementptr inbounds %struct.storable_picture, ptr %1607, i64 0, i32 36
  %1609 = load ptr, ptr %1608, align 8, !tbaa !197
  %1610 = load ptr, ptr %1609, align 8, !tbaa !13
  %1611 = load i32, ptr %1572, align 4, !tbaa !301
  %1612 = sext i32 %1611 to i64
  %1613 = add nsw i64 %1589, %1612
  %1614 = getelementptr inbounds ptr, ptr %1610, i64 %1613
  %1615 = load ptr, ptr %1614, align 8, !tbaa !13
  %1616 = load i32, ptr %1573, align 4, !tbaa !303
  %1617 = sext i32 %1616 to i64
  %1618 = add nsw i64 %1595, %1617
  %1619 = getelementptr inbounds i8, ptr %1615, i64 %1618
  %1620 = load i8, ptr %1619, align 1, !tbaa !14
  br i1 %1586, label %1990, label %1621

1621:                                             ; preds = %1606
  %1622 = sext i8 %1604 to i64
  %1623 = getelementptr inbounds [8 x [2 x i32]], ptr @BLOCK_STEP, i64 0, i64 %1622
  %1624 = load i32, ptr %1623, align 8, !tbaa !18
  %1625 = getelementptr inbounds [8 x [2 x i32]], ptr @BLOCK_STEP, i64 0, i64 %1622, i64 1
  %1626 = load i32, ptr %1625, align 4, !tbaa !18
  %1627 = add nsw i64 %1595, %1584
  %1628 = shl nsw i32 %1624, 2
  %1629 = shl nsw i32 %1626, 2
  %1630 = icmp sgt i32 %1624, 0
  %1631 = call i32 @llvm.smax.i32(i32 %1626, i32 1)
  %1632 = sext i32 %1624 to i64
  %1633 = sext i32 %1626 to i64
  %1634 = zext i32 %1631 to i64
  %1635 = zext i32 %1624 to i64
  br label %1636

1636:                                             ; preds = %1694, %1621
  %1637 = phi i64 [ %1589, %1621 ], [ %1695, %1694 ]
  %1638 = load i32, ptr %1572, align 4, !tbaa !301
  %1639 = sext i32 %1638 to i64
  %1640 = add nsw i64 %1637, %1639
  br i1 %1587, label %1641, label %1694

1641:                                             ; preds = %1636
  %1642 = trunc i64 %1637 to i32
  br label %1643

1643:                                             ; preds = %1691, %1641
  %1644 = phi i64 [ %1595, %1641 ], [ %1692, %1691 ]
  %1645 = load i32, ptr %1573, align 4, !tbaa !303
  %1646 = sext i32 %1645 to i64
  %1647 = add nsw i64 %1644, %1646
  %1648 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1649 = getelementptr inbounds %struct.storable_picture, ptr %1648, i64 0, i32 36
  %1650 = load ptr, ptr %1649, align 8, !tbaa !197
  %1651 = getelementptr inbounds %struct.storable_picture, ptr %1648, i64 0, i32 39
  %1652 = load ptr, ptr %1651, align 8, !tbaa !371
  %1653 = trunc i64 %1644 to i32
  call fastcc void @SetMotionVectorPredictor(ptr noundef %0, ptr noundef nonnull %4, i8 noundef signext %1620, i8 noundef zeroext 0, ptr noundef %1650, ptr noundef %1652, i32 noundef %1653, i32 noundef %1642, i32 noundef %1628, i32 noundef %1629) #47
  br label %1654

1654:                                             ; preds = %1690, %1643
  %1655 = phi i1 [ true, %1643 ], [ false, %1690 ]
  %1656 = phi i64 [ 0, %1643 ], [ 1, %1690 ]
  store i32 %1653, ptr %1574, align 8, !tbaa !185
  store i32 %1642, ptr %1575, align 4, !tbaa !186
  %1657 = trunc i64 %1656 to i32
  %1658 = shl nuw nsw i32 %1657, 1
  store i32 %1658, ptr %1576, align 8, !tbaa !179
  %1659 = load ptr, ptr %1577, align 8, !tbaa !738
  %1660 = call i32 %1659(ptr noundef nonnull %3, ptr noundef %0, ptr noundef %1557) #46
  %1661 = load i32, ptr %1578, align 4, !tbaa !173
  %1662 = getelementptr inbounds [2 x i16], ptr %4, i64 0, i64 %1656
  %1663 = load i16, ptr %1662, align 2, !tbaa !40
  %1664 = trunc i32 %1661 to i16
  %1665 = add i16 %1663, %1664
  %1666 = load ptr, ptr @dec_picture, align 8
  %1667 = getelementptr inbounds %struct.storable_picture, ptr %1666, i64 0, i32 39
  br label %1668

1668:                                             ; preds = %1687, %1654
  %1669 = phi i64 [ 0, %1654 ], [ %1688, %1687 ]
  br i1 %1630, label %1670, label %1687

1670:                                             ; preds = %1668
  %1671 = load ptr, ptr %1667, align 8, !tbaa !371
  %1672 = load ptr, ptr %1671, align 8, !tbaa !13
  %1673 = add nsw i64 %1640, %1669
  %1674 = getelementptr inbounds ptr, ptr %1672, i64 %1673
  %1675 = load ptr, ptr %1674, align 8, !tbaa !13
  %1676 = add nsw i64 %1669, %1637
  br label %1677

1677:                                             ; preds = %1677, %1670
  %1678 = phi i64 [ 0, %1670 ], [ %1685, %1677 ]
  %1679 = add nsw i64 %1647, %1678
  %1680 = getelementptr inbounds ptr, ptr %1675, i64 %1679
  %1681 = load ptr, ptr %1680, align 8, !tbaa !13
  %1682 = getelementptr inbounds i16, ptr %1681, i64 %1656
  store i16 %1665, ptr %1682, align 2, !tbaa !40
  %1683 = add nsw i64 %1678, %1644
  %1684 = getelementptr inbounds [4 x [4 x [2 x i32]]], ptr %1579, i64 0, i64 %1676, i64 %1683, i64 %1656
  store i32 %1661, ptr %1684, align 4, !tbaa !18
  %1685 = add nuw nsw i64 %1678, 1
  %1686 = icmp eq i64 %1685, %1635
  br i1 %1686, label %1687, label %1677, !llvm.loop !767

1687:                                             ; preds = %1677, %1668
  %1688 = add nuw nsw i64 %1669, 1
  %1689 = icmp eq i64 %1688, %1634
  br i1 %1689, label %1690, label %1668, !llvm.loop !768

1690:                                             ; preds = %1687
  br i1 %1655, label %1654, label %1691, !llvm.loop !769

1691:                                             ; preds = %1690
  %1692 = add i64 %1644, %1632
  %1693 = icmp slt i64 %1692, %1627
  br i1 %1693, label %1643, label %1694, !llvm.loop !770

1694:                                             ; preds = %1691, %1636
  %1695 = add i64 %1637, %1633
  %1696 = icmp slt i64 %1695, %1592
  br i1 %1696, label %1636, label %1990, !llvm.loop !771

1697:                                             ; preds = %1594
  %1698 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 %1599
  %1699 = load i8, ptr %1698, align 1, !tbaa !14
  %1700 = icmp eq i8 %1699, 0
  br i1 %1700, label %1701, label %1990

1701:                                             ; preds = %1697, %1602
  %1702 = load i32, ptr %1580, align 8, !tbaa !465
  %1703 = icmp eq i32 %1702, 0
  br i1 %1703, label %1704, label %1990

1704:                                             ; preds = %1701
  %1705 = load i32, ptr %34, align 8, !tbaa !189
  %1706 = icmp eq i32 %1705, 0
  br i1 %1706, label %1723, label %1707

1707:                                             ; preds = %1704
  %1708 = load i32, ptr %1581, align 4, !tbaa !170
  %1709 = icmp eq i32 %1708, 0
  br i1 %1709, label %1723, label %1710

1710:                                             ; preds = %1707
  %1711 = load i32, ptr %13, align 4, !tbaa !49
  %1712 = and i32 %1711, 1
  %1713 = icmp eq i32 %1712, 0
  %1714 = select i1 %1713, i64 2, i64 4
  %1715 = and i32 %1711, 1
  %1716 = icmp eq i32 %1715, 0
  %1717 = load i32, ptr %1572, align 4, !tbaa !301
  br i1 %1716, label %1721, label %1718

1718:                                             ; preds = %1710
  %1719 = add nsw i32 %1717, -4
  %1720 = ashr i32 %1719, 1
  br label %1725

1721:                                             ; preds = %1710
  %1722 = ashr i32 %1717, 1
  br label %1725

1723:                                             ; preds = %1707, %1704
  %1724 = load i32, ptr %1572, align 4, !tbaa !301
  br label %1725

1725:                                             ; preds = %1723, %1721, %1718
  %1726 = phi i32 [ %1724, %1723 ], [ %1717, %1718 ], [ %1717, %1721 ]
  %1727 = phi i64 [ 0, %1723 ], [ %1714, %1718 ], [ %1714, %1721 ]
  %1728 = phi i32 [ %1724, %1723 ], [ %1720, %1718 ], [ %1722, %1721 ]
  %1729 = load ptr, ptr %68, align 8, !tbaa !13
  %1730 = sext i32 %1728 to i64
  %1731 = add nsw i64 %1589, %1730
  %1732 = getelementptr inbounds ptr, ptr %1729, i64 %1731
  %1733 = load ptr, ptr %1732, align 8, !tbaa !13
  %1734 = load i32, ptr %1573, align 4, !tbaa !303
  %1735 = sext i32 %1734 to i64
  %1736 = add nsw i64 %1595, %1735
  %1737 = getelementptr inbounds i8, ptr %1733, i64 %1736
  %1738 = load i8, ptr %1737, align 1, !tbaa !14
  %1739 = icmp eq i8 %1738, -1
  %1740 = zext i1 %1739 to i64
  %1741 = getelementptr inbounds ptr, ptr %68, i64 %1740
  %1742 = load ptr, ptr %1741, align 8, !tbaa !13
  %1743 = getelementptr inbounds ptr, ptr %1742, i64 %1731
  %1744 = load ptr, ptr %1743, align 8, !tbaa !13
  %1745 = getelementptr inbounds i8, ptr %1744, i64 %1736
  %1746 = load i8, ptr %1745, align 1, !tbaa !14
  %1747 = icmp eq i8 %1746, -1
  br i1 %1747, label %1761, label %1748

1748:                                             ; preds = %1725
  %1749 = load i32, ptr %1204, align 8, !tbaa !466
  %1750 = getelementptr inbounds [6 x i32], ptr @listXsize, i64 0, i64 %1727
  %1751 = load i32, ptr %1750, align 8, !tbaa !18
  %1752 = call i32 @llvm.smin.i32(i32 %1749, i32 %1751)
  %1753 = icmp sgt i32 %1752, 0
  br i1 %1753, label %1754, label %1876

1754:                                             ; preds = %1748
  %1755 = load i32, ptr %1582, align 8, !tbaa !206
  %1756 = icmp ne i32 %1755, 0
  %1757 = load ptr, ptr @listX, align 16
  %1758 = getelementptr inbounds ptr, ptr %67, i64 %1740
  %1759 = load ptr, ptr @dec_picture, align 8
  %1760 = zext i32 %1752 to i64
  br label %1826

1761:                                             ; preds = %1725
  %1762 = add nsw i32 %1726, %1590
  %1763 = add i32 %1593, %1726
  %1764 = icmp slt i32 %1762, %1763
  br i1 %1764, label %1765, label %1990

1765:                                             ; preds = %1761
  %1766 = add i32 %31, %1596
  %1767 = sext i32 %1726 to i64
  %1768 = add nsw i64 %1589, %1767
  br label %1769

1769:                                             ; preds = %1819, %1765
  %1770 = phi i32 [ %1726, %1765 ], [ %1820, %1819 ]
  %1771 = phi i32 [ %1734, %1765 ], [ %1821, %1819 ]
  %1772 = phi i64 [ %1768, %1765 ], [ %1822, %1819 ]
  %1773 = add nsw i32 %1771, %1596
  %1774 = add i32 %1766, %1771
  %1775 = icmp slt i32 %1773, %1774
  br i1 %1775, label %1776, label %1819

1776:                                             ; preds = %1769
  %1777 = sext i32 %1771 to i64
  %1778 = add nsw i64 %1595, %1777
  br label %1779

1779:                                             ; preds = %1779, %1776
  %1780 = phi i64 [ %1778, %1776 ], [ %1812, %1779 ]
  %1781 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1782 = getelementptr inbounds %struct.storable_picture, ptr %1781, i64 0, i32 36
  %1783 = load ptr, ptr %1782, align 8, !tbaa !197
  %1784 = getelementptr inbounds ptr, ptr %1783, i64 1
  %1785 = load ptr, ptr %1784, align 8, !tbaa !13
  %1786 = getelementptr inbounds ptr, ptr %1785, i64 %1772
  %1787 = load ptr, ptr %1786, align 8, !tbaa !13
  %1788 = getelementptr inbounds i8, ptr %1787, i64 %1780
  store i8 0, ptr %1788, align 1, !tbaa !14
  %1789 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1790 = getelementptr inbounds %struct.storable_picture, ptr %1789, i64 0, i32 36
  %1791 = load ptr, ptr %1790, align 8, !tbaa !197
  %1792 = load ptr, ptr %1791, align 8, !tbaa !13
  %1793 = getelementptr inbounds ptr, ptr %1792, i64 %1772
  %1794 = load ptr, ptr %1793, align 8, !tbaa !13
  %1795 = getelementptr inbounds i8, ptr %1794, i64 %1780
  store i8 0, ptr %1795, align 1, !tbaa !14
  %1796 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1797 = getelementptr inbounds %struct.storable_picture, ptr %1796, i64 0, i32 39
  %1798 = load ptr, ptr %1797, align 8, !tbaa !371
  %1799 = load ptr, ptr %1798, align 8, !tbaa !13
  %1800 = getelementptr inbounds ptr, ptr %1799, i64 %1772
  %1801 = load ptr, ptr %1800, align 8, !tbaa !13
  %1802 = getelementptr inbounds ptr, ptr %1801, i64 %1780
  %1803 = load ptr, ptr %1802, align 8, !tbaa !13
  %1804 = getelementptr inbounds ptr, ptr %1798, i64 1
  %1805 = load ptr, ptr %1804, align 8, !tbaa !13
  %1806 = getelementptr inbounds ptr, ptr %1805, i64 %1772
  %1807 = load ptr, ptr %1806, align 8, !tbaa !13
  %1808 = getelementptr inbounds ptr, ptr %1807, i64 %1780
  %1809 = load ptr, ptr %1808, align 8, !tbaa !13
  store i16 0, ptr %1803, align 2, !tbaa !40
  store i16 0, ptr %1809, align 2, !tbaa !40
  %1810 = getelementptr inbounds i16, ptr %1803, i64 1
  store i16 0, ptr %1810, align 2, !tbaa !40
  %1811 = getelementptr inbounds i16, ptr %1809, i64 1
  store i16 0, ptr %1811, align 2, !tbaa !40
  %1812 = add nsw i64 %1780, 1
  %1813 = load i32, ptr %1573, align 4, !tbaa !303
  %1814 = add i32 %1766, %1813
  %1815 = sext i32 %1814 to i64
  %1816 = icmp slt i64 %1812, %1815
  br i1 %1816, label %1779, label %1817, !llvm.loop !772

1817:                                             ; preds = %1779
  %.lcssa3 = phi i32 [ %1813, %1779 ]
  %1818 = load i32, ptr %1572, align 4, !tbaa !301
  br label %1819

1819:                                             ; preds = %1817, %1769
  %1820 = phi i32 [ %1818, %1817 ], [ %1770, %1769 ]
  %1821 = phi i32 [ %.lcssa3, %1817 ], [ %1771, %1769 ]
  %1822 = add nsw i64 %1772, 1
  %1823 = add i32 %1593, %1820
  %1824 = sext i32 %1823 to i64
  %1825 = icmp slt i64 %1822, %1824
  br i1 %1825, label %1769, label %1990, !llvm.loop !773

1826:                                             ; preds = %1864, %1754
  %1827 = phi i64 [ %1866, %1864 ], [ 0, %1754 ]
  br i1 %1706, label %1831, label %1828

1828:                                             ; preds = %1826
  %1829 = load i32, ptr %1581, align 4, !tbaa !170
  %1830 = icmp ne i32 %1829, 0
  br label %1831

1831:                                             ; preds = %1828, %1826
  %1832 = phi i1 [ false, %1826 ], [ %1830, %1828 ]
  %1833 = select i1 %1756, i1 true, i1 %1832
  br i1 %1833, label %1853, label %1834

1834:                                             ; preds = %1831
  %1835 = getelementptr inbounds ptr, ptr %1757, i64 %1827
  %1836 = load ptr, ptr %1835, align 8, !tbaa !13
  %1837 = getelementptr inbounds %struct.storable_picture, ptr %1836, i64 0, i32 2
  %1838 = load i32, ptr %1837, align 8, !tbaa !593
  %1839 = shl nsw i32 %1838, 1
  %1840 = sext i32 %1839 to i64
  %1841 = load ptr, ptr %1758, align 8, !tbaa !13
  %1842 = getelementptr inbounds ptr, ptr %1841, i64 %1731
  %1843 = load ptr, ptr %1842, align 8, !tbaa !13
  %1844 = getelementptr inbounds i64, ptr %1843, i64 %1736
  %1845 = load i64, ptr %1844, align 8, !tbaa !592
  %1846 = icmp eq i64 %1845, %1840
  br i1 %1846, label %1874, label %1847

1847:                                             ; preds = %1834
  %1848 = getelementptr inbounds %struct.storable_picture, ptr %1836, i64 0, i32 3
  %1849 = load i32, ptr %1848, align 4, !tbaa !594
  %1850 = shl nsw i32 %1849, 1
  %1851 = sext i32 %1850 to i64
  %1852 = icmp eq i64 %1845, %1851
  br label %1864

1853:                                             ; preds = %1831
  %1854 = load i32, ptr %1583, align 4, !tbaa !175
  %1855 = sext i32 %1854 to i64
  %1856 = getelementptr inbounds %struct.storable_picture, ptr %1759, i64 0, i32 5, i64 %1855, i64 %1727, i64 %1827
  %1857 = load i64, ptr %1856, align 8, !tbaa !592
  %1858 = load ptr, ptr %1758, align 8, !tbaa !13
  %1859 = getelementptr inbounds ptr, ptr %1858, i64 %1731
  %1860 = load ptr, ptr %1859, align 8, !tbaa !13
  %1861 = getelementptr inbounds i64, ptr %1860, i64 %1736
  %1862 = load i64, ptr %1861, align 8, !tbaa !592
  %1863 = icmp eq i64 %1857, %1862
  br label %1864

1864:                                             ; preds = %1853, %1847
  %1865 = phi i1 [ %1852, %1847 ], [ %1863, %1853 ]
  %1866 = add nuw nsw i64 %1827, 1
  %1867 = icmp uge i64 %1866, %1760
  %1868 = select i1 %1865, i1 true, i1 %1867
  br i1 %1868, label %1869, label %1826, !llvm.loop !774

1869:                                             ; preds = %1864
  %.lcssa2 = phi i1 [ %1865, %1864 ]
  %.lcssa1 = phi i64 [ %1827, %1864 ]
  %1870 = trunc i64 %.lcssa1 to i32
  %1871 = select i1 %.lcssa2, i32 %1870, i32 -135792468
  %1872 = icmp eq i32 %1871, -135792468
  br i1 %1872, label %1873, label %1876

1873:                                             ; preds = %1869
  call void @error(ptr noundef nonnull @.str.3.170, i32 noundef -1111) #46
  br label %1876

1874:                                             ; preds = %1834
  %.lcssa = phi i64 [ %1827, %1834 ]
  %1875 = trunc i64 %.lcssa to i32
  br label %1876

1876:                                             ; preds = %1874, %1873, %1869, %1748
  %1877 = phi i32 [ -135792468, %1873 ], [ %1871, %1869 ], [ %1875, %1874 ], [ -1, %1748 ]
  br i1 %1586, label %1990, label %1878

1878:                                             ; preds = %1876
  %1879 = add i32 %31, %1596
  %1880 = sext i32 %1877 to i64
  %1881 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 26, i64 %1727, i64 %1880
  %1882 = trunc i32 %1877 to i8
  %1883 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %1727
  %1884 = getelementptr inbounds ptr, ptr %69, i64 %1740
  %1885 = load i32, ptr %1573, align 4, !tbaa !303
  br label %1886

1886:                                             ; preds = %1986, %1878
  %1887 = phi i32 [ %1885, %1878 ], [ %1987, %1986 ]
  %1888 = phi i64 [ %1589, %1878 ], [ %1988, %1986 ]
  %1889 = add nsw i32 %1887, %1596
  %1890 = add i32 %1879, %1887
  %1891 = icmp slt i32 %1889, %1890
  br i1 %1891, label %1892, label %1986

1892:                                             ; preds = %1886
  %1893 = add nsw i64 %1888, %1730
  %1894 = load i32, ptr %1572, align 4, !tbaa !301
  %1895 = sext i32 %1894 to i64
  %1896 = add nsw i64 %1888, %1895
  %1897 = sext i32 %1887 to i64
  %1898 = add nsw i64 %1595, %1897
  br label %1899

1899:                                             ; preds = %1980, %1892
  %1900 = phi i64 [ %1898, %1892 ], [ %1981, %1980 ]
  %1901 = load i32, ptr %1881, align 4, !tbaa !18
  %1902 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1903 = getelementptr inbounds %struct.storable_picture, ptr %1902, i64 0, i32 36
  %1904 = load ptr, ptr %1903, align 8, !tbaa !197
  %1905 = load ptr, ptr %1904, align 8, !tbaa !13
  %1906 = getelementptr inbounds ptr, ptr %1905, i64 %1896
  %1907 = load ptr, ptr %1906, align 8, !tbaa !13
  %1908 = getelementptr inbounds i8, ptr %1907, i64 %1900
  store i8 %1882, ptr %1908, align 1, !tbaa !14
  %1909 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1910 = getelementptr inbounds %struct.storable_picture, ptr %1909, i64 0, i32 36
  %1911 = load ptr, ptr %1910, align 8, !tbaa !197
  %1912 = getelementptr inbounds ptr, ptr %1911, i64 1
  %1913 = load ptr, ptr %1912, align 8, !tbaa !13
  %1914 = getelementptr inbounds ptr, ptr %1913, i64 %1896
  %1915 = load ptr, ptr %1914, align 8, !tbaa !13
  %1916 = getelementptr inbounds i8, ptr %1915, i64 %1900
  store i8 0, ptr %1916, align 1, !tbaa !14
  %1917 = icmp eq i32 %1901, 9999
  %1918 = load ptr, ptr @dec_picture, align 8
  %1919 = getelementptr inbounds %struct.storable_picture, ptr %1918, i64 0, i32 39
  br label %1920

1920:                                             ; preds = %1970, %1899
  %1921 = phi i1 [ true, %1899 ], [ false, %1970 ]
  %1922 = phi i64 [ 0, %1899 ], [ 1, %1970 ]
  br i1 %1917, label %1923, label %1926

1923:                                             ; preds = %1920
  %1924 = load ptr, ptr %1884, align 8, !tbaa !13
  %1925 = load ptr, ptr %1919, align 8, !tbaa !371
  br label %1935

1926:                                             ; preds = %1920
  %1927 = load ptr, ptr %1883, align 16, !tbaa !13
  %1928 = getelementptr inbounds ptr, ptr %1927, i64 %1880
  %1929 = load ptr, ptr %1928, align 8, !tbaa !13
  %1930 = getelementptr inbounds %struct.storable_picture, ptr %1929, i64 0, i32 14
  %1931 = load i32, ptr %1930, align 4, !tbaa !356
  %1932 = icmp eq i32 %1931, 0
  %1933 = load ptr, ptr %1884, align 8, !tbaa !13
  %1934 = load ptr, ptr %1919, align 8, !tbaa !371
  br i1 %1932, label %1950, label %1935

1935:                                             ; preds = %1926, %1923
  %1936 = phi ptr [ %1925, %1923 ], [ %1934, %1926 ]
  %1937 = phi ptr [ %1924, %1923 ], [ %1933, %1926 ]
  %1938 = getelementptr inbounds ptr, ptr %1937, i64 %1893
  %1939 = load ptr, ptr %1938, align 8, !tbaa !13
  %1940 = getelementptr inbounds ptr, ptr %1939, i64 %1900
  %1941 = load ptr, ptr %1940, align 8, !tbaa !13
  %1942 = getelementptr inbounds i16, ptr %1941, i64 %1922
  %1943 = load i16, ptr %1942, align 2, !tbaa !40
  %1944 = load ptr, ptr %1936, align 8, !tbaa !13
  %1945 = getelementptr inbounds ptr, ptr %1944, i64 %1896
  %1946 = load ptr, ptr %1945, align 8, !tbaa !13
  %1947 = getelementptr inbounds ptr, ptr %1946, i64 %1900
  %1948 = load ptr, ptr %1947, align 8, !tbaa !13
  %1949 = getelementptr inbounds i16, ptr %1948, i64 %1922
  store i16 %1943, ptr %1949, align 2, !tbaa !40
  br label %1970

1950:                                             ; preds = %1926
  %1951 = getelementptr inbounds ptr, ptr %1933, i64 %1893
  %1952 = load ptr, ptr %1951, align 8, !tbaa !13
  %1953 = getelementptr inbounds ptr, ptr %1952, i64 %1900
  %1954 = load ptr, ptr %1953, align 8, !tbaa !13
  %1955 = getelementptr inbounds i16, ptr %1954, i64 %1922
  %1956 = load i16, ptr %1955, align 2, !tbaa !40
  %1957 = sext i16 %1956 to i32
  %1958 = mul nsw i32 %1901, %1957
  %1959 = add nsw i32 %1958, 128
  %1960 = lshr i32 %1959, 8
  %1961 = trunc i32 %1960 to i16
  %1962 = load ptr, ptr %1934, align 8, !tbaa !13
  %1963 = getelementptr inbounds ptr, ptr %1962, i64 %1896
  %1964 = load ptr, ptr %1963, align 8, !tbaa !13
  %1965 = getelementptr inbounds ptr, ptr %1964, i64 %1900
  %1966 = load ptr, ptr %1965, align 8, !tbaa !13
  %1967 = getelementptr inbounds i16, ptr %1966, i64 %1922
  store i16 %1961, ptr %1967, align 2, !tbaa !40
  %1968 = load i16, ptr %1955, align 2, !tbaa !40
  %1969 = sub i16 %1961, %1968
  br label %1970

1970:                                             ; preds = %1950, %1935
  %1971 = phi ptr [ %1936, %1935 ], [ %1934, %1950 ]
  %1972 = phi i16 [ 0, %1935 ], [ %1969, %1950 ]
  %1973 = getelementptr inbounds ptr, ptr %1971, i64 1
  %1974 = load ptr, ptr %1973, align 8, !tbaa !13
  %1975 = getelementptr inbounds ptr, ptr %1974, i64 %1896
  %1976 = load ptr, ptr %1975, align 8, !tbaa !13
  %1977 = getelementptr inbounds ptr, ptr %1976, i64 %1900
  %1978 = load ptr, ptr %1977, align 8, !tbaa !13
  %1979 = getelementptr inbounds i16, ptr %1978, i64 %1922
  store i16 %1972, ptr %1979, align 2, !tbaa !40
  br i1 %1921, label %1920, label %1980, !llvm.loop !775

1980:                                             ; preds = %1970
  %1981 = add nsw i64 %1900, 1
  %1982 = load i32, ptr %1573, align 4, !tbaa !303
  %1983 = add i32 %1879, %1982
  %1984 = sext i32 %1983 to i64
  %1985 = icmp slt i64 %1981, %1984
  br i1 %1985, label %1899, label %1986, !llvm.loop !776

1986:                                             ; preds = %1980, %1886
  %1987 = phi i32 [ %1887, %1886 ], [ %1982, %1980 ]
  %1988 = add nsw i64 %1888, 1
  %1989 = icmp slt i64 %1988, %1592
  br i1 %1989, label %1886, label %1990, !llvm.loop !777

1990:                                             ; preds = %1986, %1876, %1819, %1761, %1701, %1697, %1694, %1606
  %1991 = add i64 %1595, %1584
  %1992 = icmp slt i64 %1991, 4
  br i1 %1992, label %1594, label %1993, !llvm.loop !778

1993:                                             ; preds = %1990
  %1994 = icmp slt i64 %1592, 4
  br i1 %1994, label %1588, label %1995, !llvm.loop !779

1995:                                             ; preds = %1993
  store i32 5, ptr %3, align 8, !tbaa !736
  %1996 = load ptr, ptr %1552, align 8, !tbaa !214
  %1997 = load i32, ptr %1554, align 4, !tbaa !18
  %1998 = sext i32 %1997 to i64
  %1999 = getelementptr inbounds %struct.datapartition, ptr %1996, i64 %1998
  %2000 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %2001 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %2000, i64 0, i32 3
  %2002 = load i32, ptr %2001, align 4, !tbaa !490
  %2003 = icmp eq i32 %2002, 0
  br i1 %2003, label %2009, label %2004

2004:                                             ; preds = %1995
  %2005 = load ptr, ptr %1999, align 8, !tbaa !448
  %2006 = getelementptr inbounds %struct.Bitstream, ptr %2005, i64 0, i32 5
  %2007 = load i32, ptr %2006, align 8, !tbaa !560
  %2008 = icmp eq i32 %2007, 0
  br i1 %2008, label %2011, label %2009

2009:                                             ; preds = %2004, %1995
  %2010 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  store ptr @linfo_se, ptr %2010, align 8, !tbaa !737
  br label %2013

2011:                                             ; preds = %2004
  %2012 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readMVD_CABAC, ptr %2012, align 8, !tbaa !211
  br label %2013

2013:                                             ; preds = %2011, %2009
  %2014 = getelementptr inbounds %struct.datapartition, ptr %1996, i64 %1998, i32 2
  %2015 = icmp sgt i32 %31, 0
  br label %2016

2016:                                             ; preds = %2132, %2013
  %2017 = phi i64 [ 0, %2013 ], [ %2020, %2132 ]
  %2018 = trunc i64 %2017 to i32
  %2019 = and i32 %2018, -2
  %2020 = add i64 %2017, %1585
  br label %2021

2021:                                             ; preds = %2129, %2016
  %2022 = phi i64 [ 0, %2016 ], [ %2130, %2129 ]
  %2023 = trunc i64 %2022 to i32
  %2024 = ashr i32 %2023, 1
  %2025 = add nsw i32 %2024, %2019
  %2026 = sext i32 %2025 to i64
  %2027 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 14, i64 %2026
  %2028 = load i8, ptr %2027, align 1, !tbaa !14
  %2029 = add i8 %2028, -1
  %2030 = icmp ult i8 %2029, 2
  br i1 %2030, label %2031, label %2129

2031:                                             ; preds = %2021
  %2032 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 %2026
  %2033 = load i8, ptr %2032, align 1, !tbaa !14
  %2034 = icmp eq i8 %2033, 0
  br i1 %2034, label %2129, label %2035

2035:                                             ; preds = %2031
  %2036 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %2037 = getelementptr inbounds %struct.storable_picture, ptr %2036, i64 0, i32 36
  %2038 = load ptr, ptr %2037, align 8, !tbaa !197
  %2039 = getelementptr inbounds ptr, ptr %2038, i64 1
  %2040 = load ptr, ptr %2039, align 8, !tbaa !13
  %2041 = load i32, ptr %1572, align 4, !tbaa !301
  %2042 = sext i32 %2041 to i64
  %2043 = add nsw i64 %2017, %2042
  %2044 = getelementptr inbounds ptr, ptr %2040, i64 %2043
  %2045 = load ptr, ptr %2044, align 8, !tbaa !13
  %2046 = load i32, ptr %1573, align 4, !tbaa !303
  %2047 = sext i32 %2046 to i64
  %2048 = add nsw i64 %2022, %2047
  %2049 = getelementptr inbounds i8, ptr %2045, i64 %2048
  %2050 = load i8, ptr %2049, align 1, !tbaa !14
  br i1 %1586, label %2129, label %2051

2051:                                             ; preds = %2035
  %2052 = sext i8 %2033 to i64
  %2053 = getelementptr inbounds [8 x [2 x i32]], ptr @BLOCK_STEP, i64 0, i64 %2052
  %2054 = load i32, ptr %2053, align 8, !tbaa !18
  %2055 = getelementptr inbounds [8 x [2 x i32]], ptr @BLOCK_STEP, i64 0, i64 %2052, i64 1
  %2056 = load i32, ptr %2055, align 4, !tbaa !18
  %2057 = add nsw i64 %2022, %1584
  %2058 = shl nsw i32 %2054, 2
  %2059 = shl nsw i32 %2056, 2
  %2060 = icmp sgt i32 %2054, 0
  %2061 = call i32 @llvm.smax.i32(i32 %2056, i32 1)
  %2062 = sext i32 %2054 to i64
  %2063 = sext i32 %2056 to i64
  %2064 = zext i32 %2061 to i64
  %2065 = zext i32 %2054 to i64
  br label %2066

2066:                                             ; preds = %2126, %2051
  %2067 = phi i64 [ %2017, %2051 ], [ %2127, %2126 ]
  %2068 = load i32, ptr %1572, align 4, !tbaa !301
  %2069 = sext i32 %2068 to i64
  %2070 = add nsw i64 %2067, %2069
  br i1 %2015, label %2071, label %2126

2071:                                             ; preds = %2066
  %2072 = trunc i64 %2067 to i32
  br label %2073

2073:                                             ; preds = %2123, %2071
  %2074 = phi i64 [ %2022, %2071 ], [ %2124, %2123 ]
  %2075 = load i32, ptr %1573, align 4, !tbaa !303
  %2076 = sext i32 %2075 to i64
  %2077 = add nsw i64 %2074, %2076
  %2078 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %2079 = getelementptr inbounds %struct.storable_picture, ptr %2078, i64 0, i32 36
  %2080 = load ptr, ptr %2079, align 8, !tbaa !197
  %2081 = getelementptr inbounds %struct.storable_picture, ptr %2078, i64 0, i32 39
  %2082 = load ptr, ptr %2081, align 8, !tbaa !371
  %2083 = trunc i64 %2074 to i32
  call fastcc void @SetMotionVectorPredictor(ptr noundef %0, ptr noundef nonnull %4, i8 noundef signext %2050, i8 noundef zeroext 1, ptr noundef %2080, ptr noundef %2082, i32 noundef %2083, i32 noundef %2072, i32 noundef %2058, i32 noundef %2059) #47
  br label %2084

2084:                                             ; preds = %2122, %2073
  %2085 = phi i1 [ true, %2073 ], [ false, %2122 ]
  %2086 = phi i64 [ 0, %2073 ], [ 1, %2122 ]
  store i32 %2083, ptr %1574, align 8, !tbaa !185
  store i32 %2072, ptr %1575, align 4, !tbaa !186
  %2087 = trunc i64 %2086 to i32
  %2088 = shl nuw nsw i32 %2087, 1
  %2089 = or i32 %2088, 1
  store i32 %2089, ptr %1576, align 8, !tbaa !179
  %2090 = load ptr, ptr %2014, align 8, !tbaa !738
  %2091 = call i32 %2090(ptr noundef nonnull %3, ptr noundef %0, ptr noundef %1999) #46
  %2092 = load i32, ptr %1578, align 4, !tbaa !173
  %2093 = getelementptr inbounds [2 x i16], ptr %4, i64 0, i64 %2086
  %2094 = load i16, ptr %2093, align 2, !tbaa !40
  %2095 = trunc i32 %2092 to i16
  %2096 = add i16 %2094, %2095
  %2097 = load ptr, ptr @dec_picture, align 8
  %2098 = getelementptr inbounds %struct.storable_picture, ptr %2097, i64 0, i32 39
  br label %2099

2099:                                             ; preds = %2119, %2084
  %2100 = phi i64 [ 0, %2084 ], [ %2120, %2119 ]
  br i1 %2060, label %2101, label %2119

2101:                                             ; preds = %2099
  %2102 = load ptr, ptr %2098, align 8, !tbaa !371
  %2103 = getelementptr inbounds ptr, ptr %2102, i64 1
  %2104 = load ptr, ptr %2103, align 8, !tbaa !13
  %2105 = add nsw i64 %2070, %2100
  %2106 = getelementptr inbounds ptr, ptr %2104, i64 %2105
  %2107 = load ptr, ptr %2106, align 8, !tbaa !13
  %2108 = add nsw i64 %2100, %2067
  br label %2109

2109:                                             ; preds = %2109, %2101
  %2110 = phi i64 [ 0, %2101 ], [ %2117, %2109 ]
  %2111 = add nsw i64 %2077, %2110
  %2112 = getelementptr inbounds ptr, ptr %2107, i64 %2111
  %2113 = load ptr, ptr %2112, align 8, !tbaa !13
  %2114 = getelementptr inbounds i16, ptr %2113, i64 %2086
  store i16 %2096, ptr %2114, align 2, !tbaa !40
  %2115 = add nsw i64 %2110, %2074
  %2116 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 7, i64 1, i64 %2108, i64 %2115, i64 %2086
  store i32 %2092, ptr %2116, align 4, !tbaa !18
  %2117 = add nuw nsw i64 %2110, 1
  %2118 = icmp eq i64 %2117, %2065
  br i1 %2118, label %2119, label %2109, !llvm.loop !780

2119:                                             ; preds = %2109, %2099
  %2120 = add nuw nsw i64 %2100, 1
  %2121 = icmp eq i64 %2120, %2064
  br i1 %2121, label %2122, label %2099, !llvm.loop !781

2122:                                             ; preds = %2119
  br i1 %2085, label %2084, label %2123, !llvm.loop !782

2123:                                             ; preds = %2122
  %2124 = add i64 %2074, %2062
  %2125 = icmp slt i64 %2124, %2057
  br i1 %2125, label %2073, label %2126, !llvm.loop !783

2126:                                             ; preds = %2123, %2066
  %2127 = add i64 %2067, %2063
  %2128 = icmp slt i64 %2127, %2020
  br i1 %2128, label %2066, label %2129, !llvm.loop !784

2129:                                             ; preds = %2126, %2035, %2031, %2021
  %2130 = add i64 %2022, %1584
  %2131 = icmp slt i64 %2130, 4
  br i1 %2131, label %2021, label %2132, !llvm.loop !785

2132:                                             ; preds = %2129
  %2133 = icmp slt i64 %2020, 4
  br i1 %2133, label %2016, label %2134, !llvm.loop !786

2134:                                             ; preds = %2132
  %2135 = load i32, ptr %1572, align 4, !tbaa !301
  %2136 = load i32, ptr %1573, align 4, !tbaa !303
  %2137 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %2138 = getelementptr inbounds %struct.storable_picture, ptr %2137, i64 0, i32 36
  %2139 = load ptr, ptr %2138, align 8, !tbaa !197
  %2140 = load ptr, ptr %2139, align 8, !tbaa !13
  %2141 = getelementptr inbounds ptr, ptr %2139, i64 1
  %2142 = load ptr, ptr %2141, align 8, !tbaa !13
  %2143 = getelementptr inbounds %struct.storable_picture, ptr %2137, i64 0, i32 37
  %2144 = zext i32 %62 to i64
  %2145 = or i32 %62, 1
  %2146 = zext i32 %2145 to i64
  %2147 = sext i32 %2136 to i64
  %2148 = sext i32 %2135 to i64
  %2149 = add nsw i32 %2136, 3
  %2150 = sext i32 %2149 to i64
  %2151 = add nsw i32 %2135, 3
  %2152 = sext i32 %2151 to i64
  %2153 = load ptr, ptr %2143, align 8, !tbaa !717
  %2154 = load ptr, ptr %2153, align 8, !tbaa !13
  %2155 = getelementptr inbounds ptr, ptr %2153, i64 1
  %2156 = load ptr, ptr %2155, align 8, !tbaa !13
  br label %2157

2157:                                             ; preds = %2195, %2134
  %2158 = phi i64 [ %2148, %2134 ], [ %2196, %2195 ]
  %2159 = getelementptr inbounds ptr, ptr %2140, i64 %2158
  %2160 = load ptr, ptr %2159, align 8, !tbaa !13
  %2161 = getelementptr inbounds ptr, ptr %2142, i64 %2158
  %2162 = load ptr, ptr %2161, align 8, !tbaa !13
  %2163 = getelementptr inbounds ptr, ptr %2154, i64 %2158
  %2164 = load ptr, ptr %2163, align 8, !tbaa !13
  %2165 = getelementptr inbounds ptr, ptr %2156, i64 %2158
  %2166 = load ptr, ptr %2165, align 8, !tbaa !13
  br label %2167

2167:                                             ; preds = %2190, %2157
  %2168 = phi i64 [ %2147, %2157 ], [ %2193, %2190 ]
  %2169 = getelementptr inbounds i8, ptr %2160, i64 %2168
  %2170 = load i8, ptr %2169, align 1, !tbaa !14
  %2171 = icmp sgt i8 %2170, -1
  br i1 %2171, label %2172, label %2178

2172:                                             ; preds = %2167
  %2173 = load i32, ptr %1583, align 4, !tbaa !175
  %2174 = sext i32 %2173 to i64
  %2175 = zext i8 %2170 to i64
  %2176 = getelementptr inbounds %struct.storable_picture, ptr %2137, i64 0, i32 5, i64 %2174, i64 %2144, i64 %2175
  %2177 = load i64, ptr %2176, align 8, !tbaa !592
  br label %2178

2178:                                             ; preds = %2172, %2167
  %2179 = phi i64 [ %2177, %2172 ], [ -9223372036854775808, %2167 ]
  %2180 = getelementptr inbounds i64, ptr %2164, i64 %2168
  store i64 %2179, ptr %2180, align 8, !tbaa !592
  %2181 = getelementptr inbounds i8, ptr %2162, i64 %2168
  %2182 = load i8, ptr %2181, align 1, !tbaa !14
  %2183 = icmp sgt i8 %2182, -1
  br i1 %2183, label %2184, label %2190

2184:                                             ; preds = %2178
  %2185 = load i32, ptr %1583, align 4, !tbaa !175
  %2186 = sext i32 %2185 to i64
  %2187 = zext i8 %2182 to i64
  %2188 = getelementptr inbounds %struct.storable_picture, ptr %2137, i64 0, i32 5, i64 %2186, i64 %2146, i64 %2187
  %2189 = load i64, ptr %2188, align 8, !tbaa !592
  br label %2190

2190:                                             ; preds = %2184, %2178
  %2191 = phi i64 [ %2189, %2184 ], [ -9223372036854775808, %2178 ]
  %2192 = getelementptr inbounds i64, ptr %2166, i64 %2168
  store i64 %2191, ptr %2192, align 8, !tbaa !592
  %2193 = add nsw i64 %2168, 1
  %2194 = icmp slt i64 %2168, %2150
  br i1 %2194, label %2167, label %2195, !llvm.loop !787

2195:                                             ; preds = %2190
  %2196 = add nsw i64 %2158, 1
  %2197 = icmp slt i64 %2158, %2152
  br i1 %2197, label %2157, label %2198, !llvm.loop !788

2198:                                             ; preds = %2195
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #48
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal fastcc void @SetMotionVectorPredictor(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, i8 noundef signext %2, i8 noundef zeroext %3, ptr nocapture noundef readonly %4, ptr nocapture noundef readonly %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #0 {
  %11 = alloca %struct.pix_pos, align 4
  %12 = alloca %struct.pix_pos, align 4
  %13 = alloca %struct.pix_pos, align 4
  %14 = alloca %struct.pix_pos, align 4
  %15 = shl nsw i32 %6, 2
  %16 = shl nsw i32 %7, 2
  %17 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %18 = load i32, ptr %17, align 4, !tbaa !49
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #48
  %19 = add nsw i32 %15, -1
  call void @getLuma4x4Neighbour(i32 noundef %18, i32 noundef %19, i32 noundef %16, ptr noundef nonnull %11) #46
  %20 = add nsw i32 %16, -1
  call void @getLuma4x4Neighbour(i32 noundef %18, i32 noundef %15, i32 noundef %20, ptr noundef nonnull %12) #46
  %21 = add nsw i32 %15, %8
  call void @getLuma4x4Neighbour(i32 noundef %18, i32 noundef %21, i32 noundef %20, ptr noundef nonnull %13) #46
  call void @getLuma4x4Neighbour(i32 noundef %18, i32 noundef %19, i32 noundef %20, ptr noundef nonnull %14) #46
  %22 = icmp sgt i32 %7, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %10
  %24 = icmp slt i32 %6, 2
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = icmp eq i32 %7, 2
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = icmp eq i32 %8, 16
  br i1 %28, label %36, label %33

29:                                               ; preds = %25
  %30 = icmp eq i32 %21, 8
  br i1 %30, label %36, label %33

31:                                               ; preds = %23
  %32 = icmp eq i32 %21, 16
  br i1 %32, label %36, label %33

33:                                               ; preds = %31, %29, %27, %10
  %34 = load i32, ptr %13, align 4, !tbaa !52
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33, %31, %29, %27
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(24) %13, ptr noundef nonnull align 4 dereferenceable(24) %14, i64 24, i1 false), !tbaa.struct !789
  br label %37

37:                                               ; preds = %36, %33
  %38 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 44
  %39 = load i32, ptr %38, align 8, !tbaa !189
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %97

41:                                               ; preds = %37
  %42 = load i32, ptr %11, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %41
  %45 = zext i8 %3 to i64
  %46 = getelementptr inbounds ptr, ptr %4, i64 %45
  %47 = load ptr, ptr %46, align 8, !tbaa !13
  %48 = getelementptr inbounds %struct.pix_pos, ptr %11, i64 0, i32 5
  %49 = load i32, ptr %48, align 4, !tbaa !59
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds ptr, ptr %47, i64 %50
  %52 = load ptr, ptr %51, align 8, !tbaa !13
  %53 = getelementptr inbounds %struct.pix_pos, ptr %11, i64 0, i32 4
  %54 = load i32, ptr %53, align 4, !tbaa !60
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, ptr %52, i64 %55
  %57 = load i8, ptr %56, align 1, !tbaa !14
  %58 = sext i8 %57 to i32
  br label %59

59:                                               ; preds = %44, %41
  %60 = phi i32 [ %58, %44 ], [ -1, %41 ]
  %61 = load i32, ptr %12, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %78, label %63

63:                                               ; preds = %59
  %64 = zext i8 %3 to i64
  %65 = getelementptr inbounds ptr, ptr %4, i64 %64
  %66 = load ptr, ptr %65, align 8, !tbaa !13
  %67 = getelementptr inbounds %struct.pix_pos, ptr %12, i64 0, i32 5
  %68 = load i32, ptr %67, align 4, !tbaa !59
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds ptr, ptr %66, i64 %69
  %71 = load ptr, ptr %70, align 8, !tbaa !13
  %72 = getelementptr inbounds %struct.pix_pos, ptr %12, i64 0, i32 4
  %73 = load i32, ptr %72, align 4, !tbaa !60
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, ptr %71, i64 %74
  %76 = load i8, ptr %75, align 1, !tbaa !14
  %77 = sext i8 %76 to i32
  br label %78

78:                                               ; preds = %63, %59
  %79 = phi i32 [ %77, %63 ], [ -1, %59 ]
  %80 = load i32, ptr %13, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %269, label %82

82:                                               ; preds = %78
  %83 = zext i8 %3 to i64
  %84 = getelementptr inbounds ptr, ptr %4, i64 %83
  %85 = load ptr, ptr %84, align 8, !tbaa !13
  %86 = getelementptr inbounds %struct.pix_pos, ptr %13, i64 0, i32 5
  %87 = load i32, ptr %86, align 4, !tbaa !59
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds ptr, ptr %85, i64 %88
  %90 = load ptr, ptr %89, align 8, !tbaa !13
  %91 = getelementptr inbounds %struct.pix_pos, ptr %13, i64 0, i32 4
  %92 = load i32, ptr %91, align 4, !tbaa !60
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, ptr %90, i64 %93
  %95 = load i8, ptr %94, align 1, !tbaa !14
  %96 = sext i8 %95 to i32
  br label %269

97:                                               ; preds = %37
  %98 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %99 = load ptr, ptr %98, align 8, !tbaa !84
  %100 = load i32, ptr %17, align 4, !tbaa !49
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %struct.macroblock, ptr %99, i64 %101, i32 20
  %103 = load i32, ptr %102, align 4, !tbaa !170
  %104 = icmp eq i32 %103, 0
  %105 = load i32, ptr %11, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %104, label %185, label %107

107:                                              ; preds = %97
  br i1 %106, label %131, label %108

108:                                              ; preds = %107
  %109 = getelementptr inbounds %struct.pix_pos, ptr %11, i64 0, i32 1
  %110 = load i32, ptr %109, align 4, !tbaa !57
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %struct.macroblock, ptr %99, i64 %111, i32 20
  %113 = load i32, ptr %112, align 4, !tbaa !170
  %114 = icmp eq i32 %113, 0
  %115 = zext i8 %3 to i64
  %116 = getelementptr inbounds ptr, ptr %4, i64 %115
  %117 = load ptr, ptr %116, align 8, !tbaa !13
  %118 = getelementptr inbounds %struct.pix_pos, ptr %11, i64 0, i32 5
  %119 = load i32, ptr %118, align 4, !tbaa !59
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds ptr, ptr %117, i64 %120
  %122 = load ptr, ptr %121, align 8, !tbaa !13
  %123 = getelementptr inbounds %struct.pix_pos, ptr %11, i64 0, i32 4
  %124 = load i32, ptr %123, align 4, !tbaa !60
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, ptr %122, i64 %125
  %127 = load i8, ptr %126, align 1, !tbaa !14
  %128 = sext i8 %127 to i32
  %129 = zext i1 %114 to i32
  %130 = shl nsw i32 %128, %129
  br label %131

131:                                              ; preds = %108, %107
  %132 = phi i32 [ -1, %107 ], [ %130, %108 ]
  %133 = load i32, ptr %12, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %158, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.pix_pos, ptr %12, i64 0, i32 1
  %137 = load i32, ptr %136, align 4, !tbaa !57
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds %struct.macroblock, ptr %99, i64 %138, i32 20
  %140 = load i32, ptr %139, align 4, !tbaa !170
  %141 = icmp eq i32 %140, 0
  %142 = zext i8 %3 to i64
  %143 = getelementptr inbounds ptr, ptr %4, i64 %142
  %144 = load ptr, ptr %143, align 8, !tbaa !13
  %145 = getelementptr inbounds %struct.pix_pos, ptr %12, i64 0, i32 5
  %146 = load i32, ptr %145, align 4, !tbaa !59
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds ptr, ptr %144, i64 %147
  %149 = load ptr, ptr %148, align 8, !tbaa !13
  %150 = getelementptr inbounds %struct.pix_pos, ptr %12, i64 0, i32 4
  %151 = load i32, ptr %150, align 4, !tbaa !60
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i8, ptr %149, i64 %152
  %154 = load i8, ptr %153, align 1, !tbaa !14
  %155 = sext i8 %154 to i32
  %156 = zext i1 %141 to i32
  %157 = shl nsw i32 %155, %156
  br label %158

158:                                              ; preds = %135, %131
  %159 = phi i32 [ -1, %131 ], [ %157, %135 ]
  %160 = load i32, ptr %13, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %269, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %struct.pix_pos, ptr %13, i64 0, i32 1
  %164 = load i32, ptr %163, align 4, !tbaa !57
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds %struct.macroblock, ptr %99, i64 %165, i32 20
  %167 = load i32, ptr %166, align 4, !tbaa !170
  %168 = icmp eq i32 %167, 0
  %169 = zext i8 %3 to i64
  %170 = getelementptr inbounds ptr, ptr %4, i64 %169
  %171 = load ptr, ptr %170, align 8, !tbaa !13
  %172 = getelementptr inbounds %struct.pix_pos, ptr %13, i64 0, i32 5
  %173 = load i32, ptr %172, align 4, !tbaa !59
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds ptr, ptr %171, i64 %174
  %176 = load ptr, ptr %175, align 8, !tbaa !13
  %177 = getelementptr inbounds %struct.pix_pos, ptr %13, i64 0, i32 4
  %178 = load i32, ptr %177, align 4, !tbaa !60
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i8, ptr %176, i64 %179
  %181 = load i8, ptr %180, align 1, !tbaa !14
  %182 = sext i8 %181 to i32
  %183 = zext i1 %168 to i32
  %184 = shl nsw i32 %182, %183
  br label %269

185:                                              ; preds = %97
  br i1 %106, label %211, label %186

186:                                              ; preds = %185
  %187 = getelementptr inbounds %struct.pix_pos, ptr %11, i64 0, i32 1
  %188 = load i32, ptr %187, align 4, !tbaa !57
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds %struct.macroblock, ptr %99, i64 %189, i32 20
  %191 = load i32, ptr %190, align 4, !tbaa !170
  %192 = icmp eq i32 %191, 0
  %193 = zext i8 %3 to i64
  %194 = getelementptr inbounds ptr, ptr %4, i64 %193
  %195 = load ptr, ptr %194, align 8, !tbaa !13
  %196 = getelementptr inbounds %struct.pix_pos, ptr %11, i64 0, i32 5
  %197 = load i32, ptr %196, align 4, !tbaa !59
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds ptr, ptr %195, i64 %198
  %200 = load ptr, ptr %199, align 8, !tbaa !13
  %201 = getelementptr inbounds %struct.pix_pos, ptr %11, i64 0, i32 4
  %202 = load i32, ptr %201, align 4, !tbaa !60
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, ptr %200, i64 %203
  %205 = load i8, ptr %204, align 1, !tbaa !14
  br i1 %192, label %209, label %206

206:                                              ; preds = %186
  %207 = ashr i8 %205, 1
  %208 = sext i8 %207 to i32
  br label %211

209:                                              ; preds = %186
  %210 = sext i8 %205 to i32
  br label %211

211:                                              ; preds = %209, %206, %185
  %212 = phi i32 [ %208, %206 ], [ %210, %209 ], [ -1, %185 ]
  %213 = load i32, ptr %12, align 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %240, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %struct.pix_pos, ptr %12, i64 0, i32 1
  %217 = load i32, ptr %216, align 4, !tbaa !57
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds %struct.macroblock, ptr %99, i64 %218, i32 20
  %220 = load i32, ptr %219, align 4, !tbaa !170
  %221 = icmp eq i32 %220, 0
  %222 = zext i8 %3 to i64
  %223 = getelementptr inbounds ptr, ptr %4, i64 %222
  %224 = load ptr, ptr %223, align 8, !tbaa !13
  %225 = getelementptr inbounds %struct.pix_pos, ptr %12, i64 0, i32 5
  %226 = load i32, ptr %225, align 4, !tbaa !59
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds ptr, ptr %224, i64 %227
  %229 = load ptr, ptr %228, align 8, !tbaa !13
  %230 = getelementptr inbounds %struct.pix_pos, ptr %12, i64 0, i32 4
  %231 = load i32, ptr %230, align 4, !tbaa !60
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds i8, ptr %229, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !14
  br i1 %221, label %238, label %235

235:                                              ; preds = %215
  %236 = ashr i8 %234, 1
  %237 = sext i8 %236 to i32
  br label %240

238:                                              ; preds = %215
  %239 = sext i8 %234 to i32
  br label %240

240:                                              ; preds = %238, %235, %211
  %241 = phi i32 [ %237, %235 ], [ %239, %238 ], [ -1, %211 ]
  %242 = load i32, ptr %13, align 4
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %269, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds %struct.pix_pos, ptr %13, i64 0, i32 1
  %246 = load i32, ptr %245, align 4, !tbaa !57
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds %struct.macroblock, ptr %99, i64 %247, i32 20
  %249 = load i32, ptr %248, align 4, !tbaa !170
  %250 = icmp eq i32 %249, 0
  %251 = zext i8 %3 to i64
  %252 = getelementptr inbounds ptr, ptr %4, i64 %251
  %253 = load ptr, ptr %252, align 8, !tbaa !13
  %254 = getelementptr inbounds %struct.pix_pos, ptr %13, i64 0, i32 5
  %255 = load i32, ptr %254, align 4, !tbaa !59
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds ptr, ptr %253, i64 %256
  %258 = load ptr, ptr %257, align 8, !tbaa !13
  %259 = getelementptr inbounds %struct.pix_pos, ptr %13, i64 0, i32 4
  %260 = load i32, ptr %259, align 4, !tbaa !60
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i8, ptr %258, i64 %261
  %263 = load i8, ptr %262, align 1, !tbaa !14
  br i1 %250, label %267, label %264

264:                                              ; preds = %244
  %265 = ashr i8 %263, 1
  %266 = sext i8 %265 to i32
  br label %269

267:                                              ; preds = %244
  %268 = sext i8 %263 to i32
  br label %269

269:                                              ; preds = %267, %264, %240, %162, %158, %82, %78
  %270 = phi i32 [ 0, %78 ], [ %80, %82 ], [ 0, %158 ], [ 0, %240 ], [ %242, %264 ], [ %242, %267 ], [ %160, %162 ]
  %271 = phi i32 [ %61, %78 ], [ %61, %82 ], [ %133, %158 ], [ %213, %240 ], [ %213, %264 ], [ %213, %267 ], [ %133, %162 ]
  %272 = phi i32 [ %42, %78 ], [ %42, %82 ], [ %105, %158 ], [ %105, %240 ], [ %105, %264 ], [ %105, %267 ], [ %105, %162 ]
  %273 = phi i32 [ %60, %78 ], [ %60, %82 ], [ %132, %158 ], [ %212, %240 ], [ %212, %264 ], [ %212, %267 ], [ %132, %162 ]
  %274 = phi i32 [ %79, %78 ], [ %79, %82 ], [ %159, %158 ], [ %241, %240 ], [ %241, %264 ], [ %241, %267 ], [ %159, %162 ]
  %275 = phi i32 [ -1, %78 ], [ %96, %82 ], [ -1, %158 ], [ -1, %240 ], [ %266, %264 ], [ %268, %267 ], [ %184, %162 ]
  %276 = sext i8 %2 to i32
  %277 = icmp eq i32 %273, %276
  %278 = xor i1 %277, true
  %279 = icmp eq i32 %274, %276
  %280 = select i1 %278, i1 true, i1 %279
  %281 = icmp eq i32 %275, %276
  %282 = select i1 %280, i1 true, i1 %281
  br i1 %282, label %283, label %294

283:                                              ; preds = %269
  %284 = xor i1 %279, true
  %285 = select i1 %277, i1 true, i1 %284
  %286 = select i1 %285, i1 true, i1 %281
  %287 = xor i1 %286, true
  %288 = or i1 %277, %287
  %289 = select i1 %286, i32 0, i32 2
  br i1 %288, label %294, label %290

290:                                              ; preds = %283
  %291 = icmp ne i32 %274, %276
  %292 = select i1 %291, i1 %281, i1 false
  %293 = select i1 %292, i32 3, i32 0
  br label %294

294:                                              ; preds = %290, %283, %269
  %295 = phi i32 [ 1, %269 ], [ %289, %283 ], [ %293, %290 ]
  %296 = icmp eq i32 %8, 8
  %297 = icmp eq i32 %9, 16
  %298 = and i1 %296, %297
  br i1 %298, label %299, label %305

299:                                              ; preds = %294
  %300 = icmp eq i32 %6, 0
  br i1 %300, label %301, label %303

301:                                              ; preds = %299
  %302 = select i1 %277, i32 1, i32 %295
  br label %315

303:                                              ; preds = %299
  %304 = select i1 %281, i32 3, i32 %295
  br label %315

305:                                              ; preds = %294
  %306 = icmp eq i32 %8, 16
  %307 = icmp eq i32 %9, 8
  %308 = and i1 %306, %307
  br i1 %308, label %309, label %315

309:                                              ; preds = %305
  %310 = icmp eq i32 %7, 0
  br i1 %310, label %311, label %313

311:                                              ; preds = %309
  %312 = select i1 %279, i32 2, i32 %295
  br label %315

313:                                              ; preds = %309
  %314 = select i1 %277, i32 1, i32 %295
  br label %315

315:                                              ; preds = %313, %311, %305, %303, %301
  %316 = phi i32 [ %295, %305 ], [ %302, %301 ], [ %304, %303 ], [ %312, %311 ], [ %314, %313 ]
  %317 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %318 = icmp eq i32 %272, 0
  %319 = getelementptr inbounds %struct.pix_pos, ptr %11, i64 0, i32 1
  %320 = load i32, ptr %319, align 4
  %321 = sext i32 %320 to i64
  %322 = zext i8 %3 to i64
  %323 = getelementptr inbounds ptr, ptr %5, i64 %322
  %324 = getelementptr inbounds %struct.pix_pos, ptr %11, i64 0, i32 5
  %325 = load i32, ptr %324, align 4
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds %struct.pix_pos, ptr %11, i64 0, i32 4
  %328 = load i32, ptr %327, align 4
  %329 = sext i32 %328 to i64
  %330 = icmp eq i32 %271, 0
  %331 = getelementptr inbounds %struct.pix_pos, ptr %12, i64 0, i32 1
  %332 = load i32, ptr %331, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds %struct.pix_pos, ptr %12, i64 0, i32 5
  %335 = load i32, ptr %334, align 4
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds %struct.pix_pos, ptr %12, i64 0, i32 4
  %338 = load i32, ptr %337, align 4
  %339 = sext i32 %338 to i64
  %340 = icmp eq i32 %270, 0
  %341 = getelementptr inbounds %struct.pix_pos, ptr %13, i64 0, i32 1
  %342 = load i32, ptr %341, align 4
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds %struct.pix_pos, ptr %13, i64 0, i32 5
  %345 = load i32, ptr %344, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds %struct.pix_pos, ptr %13, i64 0, i32 4
  %348 = load i32, ptr %347, align 4
  %349 = sext i32 %348 to i64
  %350 = or i32 %271, %270
  %351 = icmp eq i32 %350, 0
  br i1 %318, label %360, label %352

352:                                              ; preds = %315
  %353 = load ptr, ptr %323, align 8, !tbaa !13
  %354 = getelementptr inbounds ptr, ptr %353, i64 %326
  %355 = load ptr, ptr %354, align 8, !tbaa !13
  %356 = getelementptr inbounds ptr, ptr %355, i64 %329
  %357 = load ptr, ptr %356, align 8, !tbaa !13
  %358 = load i16, ptr %357, align 2, !tbaa !40
  %359 = sext i16 %358 to i32
  br label %360

360:                                              ; preds = %352, %315
  %361 = phi i32 [ %359, %352 ], [ 0, %315 ]
  br i1 %330, label %370, label %362

362:                                              ; preds = %360
  %363 = load ptr, ptr %323, align 8, !tbaa !13
  %364 = getelementptr inbounds ptr, ptr %363, i64 %336
  %365 = load ptr, ptr %364, align 8, !tbaa !13
  %366 = getelementptr inbounds ptr, ptr %365, i64 %339
  %367 = load ptr, ptr %366, align 8, !tbaa !13
  %368 = load i16, ptr %367, align 2, !tbaa !40
  %369 = sext i16 %368 to i32
  br label %370

370:                                              ; preds = %362, %360
  %371 = phi i32 [ %369, %362 ], [ 0, %360 ]
  br i1 %340, label %380, label %372

372:                                              ; preds = %370
  %373 = load ptr, ptr %323, align 8, !tbaa !13
  %374 = getelementptr inbounds ptr, ptr %373, i64 %346
  %375 = load ptr, ptr %374, align 8, !tbaa !13
  %376 = getelementptr inbounds ptr, ptr %375, i64 %349
  %377 = load ptr, ptr %376, align 8, !tbaa !13
  %378 = load i16, ptr %377, align 2, !tbaa !40
  %379 = sext i16 %378 to i32
  br label %380

380:                                              ; preds = %372, %370
  %381 = phi i32 [ 0, %370 ], [ %379, %372 ]
  switch i32 %316, label %395 [
    i32 0, label %382
    i32 1, label %392
    i32 2, label %393
    i32 3, label %394
  ]

382:                                              ; preds = %380
  br i1 %351, label %395, label %383

383:                                              ; preds = %382
  %384 = call i32 @llvm.smin.i32(i32 %371, i32 %381)
  %385 = call i32 @llvm.smin.i32(i32 %361, i32 %384)
  %386 = call i32 @llvm.smax.i32(i32 %371, i32 %381)
  %387 = call i32 @llvm.smax.i32(i32 %361, i32 %386)
  %388 = add nsw i32 %371, %361
  %389 = add nsw i32 %388, %381
  %390 = add nsw i32 %387, %385
  %391 = sub nsw i32 %389, %390
  br label %395

392:                                              ; preds = %380
  br label %395

393:                                              ; preds = %380
  br label %395

394:                                              ; preds = %380
  br label %395

395:                                              ; preds = %394, %393, %392, %383, %382, %380
  %396 = phi i32 [ 0, %380 ], [ %381, %394 ], [ %371, %393 ], [ %361, %392 ], [ %391, %383 ], [ %361, %382 ]
  %397 = trunc i32 %396 to i16
  store i16 %397, ptr %1, align 2, !tbaa !40
  br i1 %40, label %505, label %398

398:                                              ; preds = %395
  %399 = load ptr, ptr %317, align 8, !tbaa !84
  %400 = load i32, ptr %17, align 4, !tbaa !49
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds %struct.macroblock, ptr %399, i64 %401, i32 20
  %403 = load i32, ptr %402, align 4, !tbaa !170
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %458, label %405

405:                                              ; preds = %398
  br i1 %318, label %422, label %406

406:                                              ; preds = %405
  %407 = getelementptr inbounds %struct.macroblock, ptr %399, i64 %321, i32 20
  %408 = load i32, ptr %407, align 4, !tbaa !170
  %409 = icmp eq i32 %408, 0
  %410 = load ptr, ptr %323, align 8, !tbaa !13
  %411 = getelementptr inbounds ptr, ptr %410, i64 %326
  %412 = load ptr, ptr %411, align 8, !tbaa !13
  %413 = getelementptr inbounds ptr, ptr %412, i64 %329
  %414 = load ptr, ptr %413, align 8, !tbaa !13
  %415 = getelementptr inbounds i16, ptr %414, i64 1
  %416 = load i16, ptr %415, align 2, !tbaa !40
  br i1 %409, label %419, label %417

417:                                              ; preds = %406
  %418 = sext i16 %416 to i32
  br label %422

419:                                              ; preds = %406
  %420 = sdiv i16 %416, 2
  %421 = sext i16 %420 to i32
  br label %422

422:                                              ; preds = %419, %417, %405
  %423 = phi i32 [ %418, %417 ], [ %421, %419 ], [ 0, %405 ]
  br i1 %330, label %440, label %424

424:                                              ; preds = %422
  %425 = getelementptr inbounds %struct.macroblock, ptr %399, i64 %333, i32 20
  %426 = load i32, ptr %425, align 4, !tbaa !170
  %427 = icmp eq i32 %426, 0
  %428 = load ptr, ptr %323, align 8, !tbaa !13
  %429 = getelementptr inbounds ptr, ptr %428, i64 %336
  %430 = load ptr, ptr %429, align 8, !tbaa !13
  %431 = getelementptr inbounds ptr, ptr %430, i64 %339
  %432 = load ptr, ptr %431, align 8, !tbaa !13
  %433 = getelementptr inbounds i16, ptr %432, i64 1
  %434 = load i16, ptr %433, align 2, !tbaa !40
  br i1 %427, label %437, label %435

435:                                              ; preds = %424
  %436 = sext i16 %434 to i32
  br label %440

437:                                              ; preds = %424
  %438 = sdiv i16 %434, 2
  %439 = sext i16 %438 to i32
  br label %440

440:                                              ; preds = %437, %435, %422
  %441 = phi i32 [ %436, %435 ], [ %439, %437 ], [ 0, %422 ]
  br i1 %340, label %537, label %442

442:                                              ; preds = %440
  %443 = getelementptr inbounds %struct.macroblock, ptr %399, i64 %343, i32 20
  %444 = load i32, ptr %443, align 4, !tbaa !170
  %445 = icmp eq i32 %444, 0
  %446 = load ptr, ptr %323, align 8, !tbaa !13
  %447 = getelementptr inbounds ptr, ptr %446, i64 %346
  %448 = load ptr, ptr %447, align 8, !tbaa !13
  %449 = getelementptr inbounds ptr, ptr %448, i64 %349
  %450 = load ptr, ptr %449, align 8, !tbaa !13
  %451 = getelementptr inbounds i16, ptr %450, i64 1
  %452 = load i16, ptr %451, align 2, !tbaa !40
  br i1 %445, label %455, label %453

453:                                              ; preds = %442
  %454 = sext i16 %452 to i32
  br label %537

455:                                              ; preds = %442
  %456 = sdiv i16 %452, 2
  %457 = sext i16 %456 to i32
  br label %537

458:                                              ; preds = %398
  br i1 %318, label %473, label %459

459:                                              ; preds = %458
  %460 = getelementptr inbounds %struct.macroblock, ptr %399, i64 %321, i32 20
  %461 = load i32, ptr %460, align 4, !tbaa !170
  %462 = icmp ne i32 %461, 0
  %463 = load ptr, ptr %323, align 8, !tbaa !13
  %464 = getelementptr inbounds ptr, ptr %463, i64 %326
  %465 = load ptr, ptr %464, align 8, !tbaa !13
  %466 = getelementptr inbounds ptr, ptr %465, i64 %329
  %467 = load ptr, ptr %466, align 8, !tbaa !13
  %468 = getelementptr inbounds i16, ptr %467, i64 1
  %469 = load i16, ptr %468, align 2, !tbaa !40
  %470 = sext i16 %469 to i32
  %471 = zext i1 %462 to i32
  %472 = shl nsw i32 %470, %471
  br label %473

473:                                              ; preds = %459, %458
  %474 = phi i32 [ 0, %458 ], [ %472, %459 ]
  br i1 %330, label %489, label %475

475:                                              ; preds = %473
  %476 = getelementptr inbounds %struct.macroblock, ptr %399, i64 %333, i32 20
  %477 = load i32, ptr %476, align 4, !tbaa !170
  %478 = icmp ne i32 %477, 0
  %479 = load ptr, ptr %323, align 8, !tbaa !13
  %480 = getelementptr inbounds ptr, ptr %479, i64 %336
  %481 = load ptr, ptr %480, align 8, !tbaa !13
  %482 = getelementptr inbounds ptr, ptr %481, i64 %339
  %483 = load ptr, ptr %482, align 8, !tbaa !13
  %484 = getelementptr inbounds i16, ptr %483, i64 1
  %485 = load i16, ptr %484, align 2, !tbaa !40
  %486 = sext i16 %485 to i32
  %487 = zext i1 %478 to i32
  %488 = shl nsw i32 %486, %487
  br label %489

489:                                              ; preds = %475, %473
  %490 = phi i32 [ 0, %473 ], [ %488, %475 ]
  br i1 %340, label %537, label %491

491:                                              ; preds = %489
  %492 = getelementptr inbounds %struct.macroblock, ptr %399, i64 %343, i32 20
  %493 = load i32, ptr %492, align 4, !tbaa !170
  %494 = icmp ne i32 %493, 0
  %495 = load ptr, ptr %323, align 8, !tbaa !13
  %496 = getelementptr inbounds ptr, ptr %495, i64 %346
  %497 = load ptr, ptr %496, align 8, !tbaa !13
  %498 = getelementptr inbounds ptr, ptr %497, i64 %349
  %499 = load ptr, ptr %498, align 8, !tbaa !13
  %500 = getelementptr inbounds i16, ptr %499, i64 1
  %501 = load i16, ptr %500, align 2, !tbaa !40
  %502 = sext i16 %501 to i32
  %503 = zext i1 %494 to i32
  %504 = shl nsw i32 %502, %503
  br label %537

505:                                              ; preds = %395
  br i1 %318, label %515, label %506

506:                                              ; preds = %505
  %507 = load ptr, ptr %323, align 8, !tbaa !13
  %508 = getelementptr inbounds ptr, ptr %507, i64 %326
  %509 = load ptr, ptr %508, align 8, !tbaa !13
  %510 = getelementptr inbounds ptr, ptr %509, i64 %329
  %511 = load ptr, ptr %510, align 8, !tbaa !13
  %512 = getelementptr inbounds i16, ptr %511, i64 1
  %513 = load i16, ptr %512, align 2, !tbaa !40
  %514 = sext i16 %513 to i32
  br label %515

515:                                              ; preds = %506, %505
  %516 = phi i32 [ %514, %506 ], [ 0, %505 ]
  br i1 %330, label %526, label %517

517:                                              ; preds = %515
  %518 = load ptr, ptr %323, align 8, !tbaa !13
  %519 = getelementptr inbounds ptr, ptr %518, i64 %336
  %520 = load ptr, ptr %519, align 8, !tbaa !13
  %521 = getelementptr inbounds ptr, ptr %520, i64 %339
  %522 = load ptr, ptr %521, align 8, !tbaa !13
  %523 = getelementptr inbounds i16, ptr %522, i64 1
  %524 = load i16, ptr %523, align 2, !tbaa !40
  %525 = sext i16 %524 to i32
  br label %526

526:                                              ; preds = %517, %515
  %527 = phi i32 [ %525, %517 ], [ 0, %515 ]
  br i1 %340, label %537, label %528

528:                                              ; preds = %526
  %529 = load ptr, ptr %323, align 8, !tbaa !13
  %530 = getelementptr inbounds ptr, ptr %529, i64 %346
  %531 = load ptr, ptr %530, align 8, !tbaa !13
  %532 = getelementptr inbounds ptr, ptr %531, i64 %349
  %533 = load ptr, ptr %532, align 8, !tbaa !13
  %534 = getelementptr inbounds i16, ptr %533, i64 1
  %535 = load i16, ptr %534, align 2, !tbaa !40
  %536 = sext i16 %535 to i32
  br label %537

537:                                              ; preds = %528, %526, %491, %489, %455, %453, %440
  %538 = phi i32 [ %516, %526 ], [ %516, %528 ], [ %423, %440 ], [ %423, %453 ], [ %423, %455 ], [ %474, %489 ], [ %474, %491 ]
  %539 = phi i32 [ %527, %526 ], [ %527, %528 ], [ %441, %440 ], [ %441, %453 ], [ %441, %455 ], [ %490, %489 ], [ %490, %491 ]
  %540 = phi i32 [ 0, %526 ], [ %536, %528 ], [ 0, %440 ], [ %454, %453 ], [ %457, %455 ], [ 0, %489 ], [ %504, %491 ]
  switch i32 %316, label %554 [
    i32 0, label %544
    i32 1, label %543
    i32 2, label %542
    i32 3, label %541
  ]

541:                                              ; preds = %537
  br label %554

542:                                              ; preds = %537
  br label %554

543:                                              ; preds = %537
  br label %554

544:                                              ; preds = %537
  br i1 %351, label %554, label %545

545:                                              ; preds = %544
  %546 = call i32 @llvm.smin.i32(i32 %539, i32 %540)
  %547 = call i32 @llvm.smin.i32(i32 %538, i32 %546)
  %548 = call i32 @llvm.smax.i32(i32 %539, i32 %540)
  %549 = call i32 @llvm.smax.i32(i32 %538, i32 %548)
  %550 = add i32 %539, %538
  %551 = add i32 %550, %540
  %552 = add i32 %549, %547
  %553 = sub i32 %551, %552
  br label %554

554:                                              ; preds = %545, %544, %543, %542, %541, %537
  %555 = phi i32 [ %396, %537 ], [ %540, %541 ], [ %539, %542 ], [ %538, %543 ], [ %553, %545 ], [ %538, %544 ]
  %556 = trunc i32 %555 to i16
  %557 = getelementptr inbounds i16, ptr %1, i64 1
  store i16 %556, ptr %557, align 2, !tbaa !40
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @read_ipred_modes(ptr noundef %0, ptr nocapture readnone %1) #0 {
  %3 = alloca %struct.syntaxelement, align 8
  %4 = alloca %struct.pix_pos, align 4
  %5 = alloca %struct.pix_pos, align 4
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #48
  %6 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %7 = load ptr, ptr %6, align 8, !tbaa !84
  %8 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !49
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.macroblock, ptr %7, i64 %10, i32 6
  %12 = load i32, ptr %11, align 8, !tbaa !195
  %13 = add i32 %12, -9
  %14 = icmp ult i32 %13, 6
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = sext i32 %13 to i64
  %17 = getelementptr inbounds [6 x i32], ptr @switch.table.readCBPandCoeffsFromNAL.14, i64 0, i64 %16
  %18 = load i32, ptr %17, align 4
  br label %19

19:                                               ; preds = %15, %2
  %20 = phi i32 [ %18, %15 ], [ 0, %2 ]
  %21 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %22 = load ptr, ptr %21, align 8, !tbaa !165
  %23 = getelementptr inbounds %struct.Slice, ptr %22, i64 0, i32 7
  %24 = load i32, ptr %23, align 4, !tbaa !213
  %25 = sext i32 %24 to i64
  store i32 4, ptr %3, align 8, !tbaa !736
  %26 = getelementptr inbounds %struct.Slice, ptr %22, i64 0, i32 9
  %27 = load ptr, ptr %26, align 8, !tbaa !214
  %28 = getelementptr inbounds [0 x [20 x i32]], ptr @assignSE2partition, i64 0, i64 %25, i64 4
  %29 = load i32, ptr %28, align 4, !tbaa !18
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.datapartition, ptr %27, i64 %30
  %32 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %33 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %32, i64 0, i32 3
  %34 = load i32, ptr %33, align 4, !tbaa !490
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %19
  %37 = load ptr, ptr %31, align 8, !tbaa !448
  %38 = getelementptr inbounds %struct.Bitstream, ptr %37, i64 0, i32 5
  %39 = load i32, ptr %38, align 8, !tbaa !560
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readIntraPredMode_CABAC, ptr %42, align 8, !tbaa !211
  br label %43

43:                                               ; preds = %41, %36, %19
  %44 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  %45 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  %46 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 6
  %47 = getelementptr inbounds %struct.datapartition, ptr %27, i64 %30, i32 2
  %48 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  %49 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %50 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 1
  %51 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %52 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 33
  %53 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 5
  %54 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 4
  %55 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 5
  %56 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 4
  %57 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 30
  %58 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  br label %59

59:                                               ; preds = %240, %43
  %60 = phi i64 [ %241, %240 ], [ 0, %43 ]
  %61 = phi i32 [ 1, %240 ], [ %20, %43 ]
  br label %62

62:                                               ; preds = %237, %59
  %63 = phi i64 [ %238, %237 ], [ %60, %59 ]
  %64 = getelementptr inbounds %struct.macroblock, ptr %7, i64 %10, i32 13, i64 %63
  %65 = load i8, ptr %64, align 1, !tbaa !14
  switch i8 %65, label %237 [
    i8 11, label %66
    i8 13, label %66
  ]

66:                                               ; preds = %62, %62
  %.lcssa2 = phi i64 [ %63, %62 ], [ %63, %62 ]
  %.lcssa = phi i8 [ %65, %62 ], [ %65, %62 ]
  %67 = icmp eq i8 %.lcssa, 13
  %68 = select i1 %67, i32 2, i32 1
  %69 = trunc i64 %.lcssa2 to i32
  %70 = and i32 %69, 2
  %71 = trunc i64 %.lcssa2 to i32
  %72 = shl i32 %71, 1
  %73 = and i32 %72, 2
  %74 = zext i32 %68 to i64
  %75 = trunc i64 %.lcssa2 to i32
  %76 = shl i32 %75, 2
  br label %77

77:                                               ; preds = %234, %66
  %78 = phi i32 [ 0, %66 ], [ %235, %234 ]
  %79 = add nuw nsw i32 %78, %70
  %80 = load i32, ptr %44, align 4, !tbaa !301
  %81 = add nsw i32 %80, %79
  %82 = shl nuw nsw i32 %78, 1
  %83 = add nuw nsw i32 %82, %76
  %84 = shl nuw nsw i32 %79, 2
  %85 = add nsw i32 %84, -1
  %86 = sext i32 %81 to i64
  br label %87

87:                                               ; preds = %231, %77
  %88 = phi i32 [ 0, %77 ], [ %232, %231 ]
  %89 = add nuw nsw i32 %88, %73
  %90 = load i32, ptr %45, align 4, !tbaa !303
  %91 = add nsw i32 %90, %89
  %92 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %93 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %92, i64 0, i32 3
  %94 = load i32, ptr %93, align 4, !tbaa !490
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %101, label %96

96:                                               ; preds = %87
  %97 = load ptr, ptr %31, align 8, !tbaa !448
  %98 = getelementptr inbounds %struct.Bitstream, ptr %97, i64 0, i32 5
  %99 = load i32, ptr %98, align 8, !tbaa !560
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %96, %87
  %102 = call i32 @readSyntaxElement_Intra4x4PredictionMode(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %31) #46
  br label %107

103:                                              ; preds = %96
  %104 = add nuw nsw i32 %83, %88
  store i32 %104, ptr %46, align 8, !tbaa !190
  %105 = load ptr, ptr %47, align 8, !tbaa !738
  %106 = call i32 %105(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef nonnull %31) #46
  br label %107

107:                                              ; preds = %103, %101
  %108 = load i32, ptr %8, align 4, !tbaa !49
  %109 = shl nuw nsw i32 %89, 2
  %110 = add nsw i32 %109, -1
  call void @getLuma4x4Neighbour(i32 noundef %108, i32 noundef %110, i32 noundef %84, ptr noundef nonnull %4) #46
  %111 = load i32, ptr %8, align 4, !tbaa !49
  call void @getLuma4x4Neighbour(i32 noundef %111, i32 noundef %109, i32 noundef %85, ptr noundef nonnull %5) #46
  %112 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %113 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %112, i64 0, i32 30
  %114 = load i32, ptr %113, align 4, !tbaa !54
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %137, label %116

116:                                              ; preds = %107
  %117 = load i32, ptr %4, align 4, !tbaa !52
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %116
  %120 = load ptr, ptr %48, align 8, !tbaa !56
  %121 = load i32, ptr %49, align 4, !tbaa !57
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i32, ptr %120, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !18
  br label %125

125:                                              ; preds = %119, %116
  %126 = phi i32 [ %124, %119 ], [ 0, %116 ]
  store i32 %126, ptr %4, align 4, !tbaa !52
  %127 = load i32, ptr %5, align 4, !tbaa !52
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %135, label %129

129:                                              ; preds = %125
  %130 = load ptr, ptr %48, align 8, !tbaa !56
  %131 = load i32, ptr %50, align 4, !tbaa !57
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i32, ptr %130, i64 %132
  %134 = load i32, ptr %133, align 4, !tbaa !18
  br label %135

135:                                              ; preds = %129, %125
  %136 = phi i32 [ %134, %129 ], [ 0, %125 ]
  store i32 %136, ptr %5, align 4, !tbaa !52
  br label %137

137:                                              ; preds = %135, %107
  %138 = load i32, ptr %11, align 8, !tbaa !195
  %139 = icmp eq i32 %138, 9
  br i1 %139, label %140, label %173

140:                                              ; preds = %137
  %141 = load i32, ptr %51, align 4, !tbaa !137
  %142 = icmp eq i32 %141, 4
  br i1 %142, label %143, label %173

143:                                              ; preds = %140
  %144 = load i32, ptr %4, align 4, !tbaa !52
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %158, label %146

146:                                              ; preds = %143
  %147 = load ptr, ptr %52, align 8, !tbaa !700
  %148 = load i32, ptr %53, align 4, !tbaa !59
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds ptr, ptr %147, i64 %149
  %151 = load ptr, ptr %150, align 8, !tbaa !13
  %152 = load i32, ptr %54, align 4, !tbaa !60
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i32, ptr %151, i64 %153
  %155 = load i32, ptr %154, align 4, !tbaa !18
  %156 = icmp ne i32 %155, 0
  %157 = zext i1 %156 to i32
  br label %158

158:                                              ; preds = %146, %143
  %159 = phi i32 [ 0, %143 ], [ %157, %146 ]
  %160 = load i32, ptr %5, align 4, !tbaa !52
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %173, label %162

162:                                              ; preds = %158
  %163 = load ptr, ptr %52, align 8, !tbaa !700
  %164 = load i32, ptr %55, align 4, !tbaa !59
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds ptr, ptr %163, i64 %165
  %167 = load ptr, ptr %166, align 8, !tbaa !13
  %168 = load i32, ptr %56, align 4, !tbaa !60
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i32, ptr %167, i64 %169
  %171 = load i32, ptr %170, align 4, !tbaa !18
  %172 = icmp eq i32 %171, 0
  br label %173

173:                                              ; preds = %162, %158, %140, %137
  %174 = phi i32 [ %159, %158 ], [ 0, %140 ], [ 0, %137 ], [ %159, %162 ]
  %175 = phi i1 [ true, %158 ], [ true, %140 ], [ true, %137 ], [ %172, %162 ]
  %176 = load i32, ptr %5, align 4, !tbaa !52
  %177 = icmp ne i32 %176, 0
  %178 = and i1 %175, %177
  br i1 %178, label %179, label %190

179:                                              ; preds = %173
  %180 = load ptr, ptr %57, align 8, !tbaa !50
  %181 = load i32, ptr %55, align 4, !tbaa !59
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds ptr, ptr %180, i64 %182
  %184 = load ptr, ptr %183, align 8, !tbaa !13
  %185 = load i32, ptr %56, align 4, !tbaa !60
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i8, ptr %184, i64 %186
  %188 = load i8, ptr %187, align 1, !tbaa !14
  %189 = zext i8 %188 to i32
  br label %190

190:                                              ; preds = %179, %173
  %191 = phi i32 [ %189, %179 ], [ -1, %173 ]
  %192 = load i32, ptr %4, align 4, !tbaa !52
  %193 = icmp ne i32 %192, 0
  %194 = icmp eq i32 %174, 0
  %195 = and i1 %194, %193
  br i1 %195, label %196, label %207

196:                                              ; preds = %190
  %197 = load ptr, ptr %57, align 8, !tbaa !50
  %198 = load i32, ptr %53, align 4, !tbaa !59
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds ptr, ptr %197, i64 %199
  %201 = load ptr, ptr %200, align 8, !tbaa !13
  %202 = load i32, ptr %54, align 4, !tbaa !60
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, ptr %201, i64 %203
  %205 = load i8, ptr %204, align 1, !tbaa !14
  %206 = zext i8 %205 to i32
  br label %207

207:                                              ; preds = %196, %190
  %208 = phi i32 [ %206, %196 ], [ -1, %190 ]
  %209 = icmp slt i32 %191, 0
  %210 = icmp slt i32 %208, 0
  %211 = select i1 %209, i1 true, i1 %210
  %212 = call i32 @llvm.smin.i32(i32 %191, i32 %208)
  %213 = select i1 %211, i32 2, i32 %212
  %214 = load i32, ptr %58, align 4, !tbaa !173
  %215 = icmp eq i32 %214, -1
  %216 = icmp sge i32 %214, %213
  %217 = zext i1 %216 to i32
  %218 = add nuw nsw i32 %214, %217
  %219 = select i1 %215, i32 %213, i32 %218
  %220 = sext i32 %91 to i64
  %221 = trunc i32 %219 to i8
  br label %222

222:                                              ; preds = %222, %207
  %223 = phi i64 [ 0, %207 ], [ %229, %222 ]
  %224 = load ptr, ptr %57, align 8, !tbaa !50
  %225 = add nsw i64 %223, %86
  %226 = getelementptr inbounds ptr, ptr %224, i64 %225
  %227 = load ptr, ptr %226, align 8, !tbaa !13
  %228 = getelementptr inbounds i8, ptr %227, i64 %220
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %228, i8 %221, i64 %74, i1 false)
  %229 = add nuw nsw i64 %223, 1
  %230 = icmp eq i64 %229, %74
  br i1 %230, label %231, label %222, !llvm.loop !790

231:                                              ; preds = %222
  %232 = add nuw nsw i32 %88, %68
  %233 = icmp ult i32 %232, 2
  br i1 %233, label %87, label %234, !llvm.loop !791

234:                                              ; preds = %231
  %235 = add nuw nsw i32 %68, %78
  %236 = icmp ult i32 %235, 2
  br i1 %236, label %77, label %240, !llvm.loop !792

237:                                              ; preds = %62
  %238 = add nuw nsw i64 %63, 1
  %239 = icmp eq i64 %238, 4
  br i1 %239, label %243, label %62, !llvm.loop !793

240:                                              ; preds = %234
  %241 = add nuw nsw i64 %.lcssa2, 1
  %242 = icmp eq i64 %241, 4
  br i1 %242, label %245, label %59, !llvm.loop !793

243:                                              ; preds = %237
  %.lcssa5 = phi i32 [ %61, %237 ]
  %244 = icmp eq i32 %.lcssa5, 0
  br i1 %244, label %276, label %245

245:                                              ; preds = %243, %240
  %246 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %247 = getelementptr inbounds %struct.storable_picture, ptr %246, i64 0, i32 50
  %248 = load i32, ptr %247, align 4, !tbaa !83
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %276, label %250

250:                                              ; preds = %245
  store i32 4, ptr %3, align 8, !tbaa !736
  %251 = load ptr, ptr %26, align 8, !tbaa !214
  %252 = load i32, ptr %28, align 4, !tbaa !18
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds %struct.datapartition, ptr %251, i64 %253
  %255 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %256 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %255, i64 0, i32 3
  %257 = load i32, ptr %256, align 4, !tbaa !490
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %264, label %259

259:                                              ; preds = %250
  %260 = load ptr, ptr %254, align 8, !tbaa !448
  %261 = getelementptr inbounds %struct.Bitstream, ptr %260, i64 0, i32 5
  %262 = load i32, ptr %261, align 8, !tbaa !560
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %266, label %264

264:                                              ; preds = %259, %250
  %265 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  store ptr @linfo_ue, ptr %265, align 8, !tbaa !737
  br label %268

266:                                              ; preds = %259
  %267 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readCIPredMode_CABAC, ptr %267, align 8, !tbaa !211
  br label %268

268:                                              ; preds = %266, %264
  %269 = getelementptr inbounds %struct.datapartition, ptr %251, i64 %253, i32 2
  %270 = load ptr, ptr %269, align 8, !tbaa !738
  %271 = call i32 %270(ptr noundef nonnull %3, ptr noundef %0, ptr noundef %254) #46
  %272 = load i32, ptr %58, align 4, !tbaa !173
  %273 = getelementptr inbounds %struct.macroblock, ptr %7, i64 %10, i32 19
  store i32 %272, ptr %273, align 8, !tbaa !90
  %274 = icmp ugt i32 %272, 3
  br i1 %274, label %275, label %276

275:                                              ; preds = %268
  call void @error(ptr noundef nonnull @.str.2.169, i32 noundef 600) #46
  br label %276

276:                                              ; preds = %275, %268, %245, %243
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #48
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @readCBPandCoeffsFromNAL(ptr noundef %0, ptr nocapture noundef readnone %1) #0 {
  %3 = alloca %struct.syntaxelement, align 8
  %4 = alloca [16 x i32], align 16
  %5 = alloca [16 x i32], align 16
  %6 = alloca i32, align 4
  %7 = alloca [2 x i32], align 4
  %8 = alloca [2 x i32], align 4
  %9 = alloca [4 x i32], align 16
  %10 = alloca [4 x i32], align 16
  %11 = alloca [4 x i32], align 16
  %12 = alloca [2 x [4 x i32]], align 16
  %13 = alloca [2 x [4 x i32]], align 16
  %14 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %15 = load i32, ptr %14, align 4, !tbaa !49
  %16 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %17 = load ptr, ptr %16, align 8, !tbaa !84
  %18 = sext i32 %15 to i64
  %19 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #48
  %20 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %21 = load ptr, ptr %20, align 8, !tbaa !165
  %22 = getelementptr inbounds %struct.Slice, ptr %21, i64 0, i32 7
  %23 = load i32, ptr %22, align 4, !tbaa !213
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [0 x [20 x i32]], ptr @assignSE2partition, i64 0, i64 %24
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %4) #48
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %5) #48
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #48
  %26 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 6
  %27 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 103
  %28 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %29 = load i32, ptr %28, align 4, !tbaa !137
  %30 = icmp eq i32 %29, 3
  br i1 %30, label %31, label %37

31:                                               ; preds = %2
  %32 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 6
  %33 = load i32, ptr %32, align 8, !tbaa !195
  %34 = add i32 %33, -9
  %35 = and i32 %34, -6
  %36 = icmp ne i32 %35, 0
  br label %43

37:                                               ; preds = %2
  %38 = icmp eq i32 %29, 4
  %39 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 6
  %40 = load i32, ptr %39, align 8, !tbaa !195
  %41 = icmp eq i32 %40, 12
  %42 = select i1 %38, i1 %41, i1 false
  br label %43

43:                                               ; preds = %37, %31
  %44 = phi i32 [ %33, %31 ], [ %40, %37 ]
  %45 = phi i1 [ %36, %31 ], [ %42, %37 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #48
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #48
  %46 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 6
  %47 = icmp ult i32 %44, 15
  %48 = trunc i32 %44 to i15
  %49 = lshr i15 -2560, %48
  %50 = and i15 %49, 1
  %51 = icmp ne i15 %50, 0
  %52 = select i1 %47, i1 %51, i1 false
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #48
  %53 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %54 = getelementptr inbounds %struct.storable_picture, ptr %53, i64 0, i32 50
  %55 = load i32, ptr %54, align 4, !tbaa !83
  %56 = add nsw i32 %55, -1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %10) #48
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11) #48
  %57 = load i32, ptr %26, align 4, !tbaa !43
  %58 = load i32, ptr %27, align 4, !tbaa !117
  %59 = sub i32 0, %58
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %61, label %65

61:                                               ; preds = %43
  %62 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 112
  %63 = load i32, ptr %62, align 8, !tbaa !118
  %64 = icmp eq i32 %63, 1
  br label %65

65:                                               ; preds = %61, %43
  %66 = phi i1 [ false, %43 ], [ %64, %61 ]
  %67 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 36
  %68 = load i32, ptr %67, align 8, !tbaa !206
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 20
  %72 = load i32, ptr %71, align 4, !tbaa !170
  %73 = freeze i32 %72
  %74 = icmp eq i32 %73, 0
  %75 = select i1 %74, ptr @SNGL_SCAN8x8, ptr @FIELD_SCAN8x8
  %76 = select i1 %74, ptr @SNGL_SCAN, ptr @FIELD_SCAN
  br label %77

77:                                               ; preds = %70, %65
  %78 = phi ptr [ @FIELD_SCAN8x8, %65 ], [ %75, %70 ]
  %79 = phi ptr [ @FIELD_SCAN, %65 ], [ %76, %70 ]
  br i1 %30, label %80, label %83

80:                                               ; preds = %77
  %81 = icmp ne i32 %44, 10
  %82 = select i1 %81, i1 true, i1 %45
  br label %83

83:                                               ; preds = %80, %77
  %84 = phi i1 [ %45, %77 ], [ %82, %80 ]
  %85 = icmp eq i32 %55, 0
  br i1 %85, label %101, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 104
  %88 = load i32, ptr %87, align 8, !tbaa !705
  %89 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 1, i64 0
  %90 = load i32, ptr %89, align 4, !tbaa !18
  %91 = add nsw i32 %88, %90
  %92 = sdiv i32 %91, 6
  store i32 %92, ptr %7, align 4, !tbaa !18
  %93 = srem i32 %91, 6
  store i32 %93, ptr %8, align 4, !tbaa !18
  %94 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 1, i64 1
  %95 = load i32, ptr %94, align 4, !tbaa !18
  %96 = add nsw i32 %88, %95
  %97 = sdiv i32 %96, 6
  %98 = getelementptr inbounds [2 x i32], ptr %7, i64 0, i64 1
  store i32 %97, ptr %98, align 4, !tbaa !18
  %99 = srem i32 %96, 6
  %100 = getelementptr inbounds [2 x i32], ptr %8, i64 0, i64 1
  store i32 %99, ptr %100, align 4, !tbaa !18
  br label %101

101:                                              ; preds = %86, %83
  switch i32 %44, label %103 [
    i32 10, label %245
    i32 14, label %245
    i32 9, label %102
    i32 12, label %102
    i32 13, label %102
  ]

102:                                              ; preds = %101, %101, %101
  br label %103

103:                                              ; preds = %102, %101
  %104 = phi i32 [ 6, %102 ], [ 11, %101 ]
  store i32 %104, ptr %3, align 8, !tbaa !736
  %105 = getelementptr inbounds %struct.Slice, ptr %21, i64 0, i32 9
  %106 = load ptr, ptr %105, align 8, !tbaa !214
  %107 = zext i32 %104 to i64
  %108 = getelementptr inbounds i32, ptr %25, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !18
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds %struct.datapartition, ptr %106, i64 %110
  %112 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %113 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %112, i64 0, i32 3
  %114 = load i32, ptr %113, align 4, !tbaa !490
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %103
  %117 = load ptr, ptr %111, align 8, !tbaa !448
  %118 = getelementptr inbounds %struct.Bitstream, ptr %117, i64 0, i32 5
  %119 = load i32, ptr %118, align 8, !tbaa !560
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %131, label %121

121:                                              ; preds = %116, %103
  %122 = add i32 %44, -9
  %123 = icmp ult i32 %122, 5
  br i1 %123, label %124, label %128

124:                                              ; preds = %121
  %125 = sext i32 %122 to i64
  %126 = getelementptr inbounds [5 x ptr], ptr @switch.table.readCBPandCoeffsFromNAL, i64 0, i64 %125
  %127 = load ptr, ptr %126, align 8
  br label %128

128:                                              ; preds = %124, %121
  %129 = phi ptr [ @linfo_cbp_inter, %121 ], [ %127, %124 ]
  %130 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  store ptr %129, ptr %130, align 8, !tbaa !737
  br label %133

131:                                              ; preds = %116
  %132 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readCBP_CABAC, ptr %132, align 8, !tbaa !211
  br label %133

133:                                              ; preds = %131, %128
  %134 = getelementptr inbounds %struct.datapartition, ptr %106, i64 %110, i32 2
  %135 = load ptr, ptr %134, align 8, !tbaa !738
  %136 = call i32 %135(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %111) #46
  %137 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %138 = load i32, ptr %137, align 4, !tbaa !173
  %139 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 8
  store i32 %138, ptr %139, align 4, !tbaa !199
  %140 = load i32, ptr %46, align 8, !tbaa !195
  %141 = add i32 %140, -1
  %142 = icmp ult i32 %141, 3
  br i1 %142, label %157, label %143

143:                                              ; preds = %133
  %144 = icmp eq i32 %140, 0
  br i1 %144, label %145, label %153

145:                                              ; preds = %143
  %146 = load i32, ptr %28, align 4, !tbaa !137
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %148, label %153

148:                                              ; preds = %145
  %149 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %150 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %149, i64 0, i32 31
  %151 = load i32, ptr %150, align 4, !tbaa !739
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148, %145, %143
  %154 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 31
  %155 = load i32, ptr %154, align 8, !tbaa !740
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %191, label %157

157:                                              ; preds = %153, %133
  switch i32 %140, label %158 [
    i32 13, label %191
    i32 9, label %191
  ]

158:                                              ; preds = %157, %148
  %159 = and i32 %138, 15
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %191, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 109
  %163 = load i32, ptr %162, align 4, !tbaa !742
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %193, label %165

165:                                              ; preds = %161
  store i32 0, ptr %3, align 8, !tbaa !736
  %166 = load ptr, ptr %105, align 8, !tbaa !214
  %167 = load i32, ptr %25, align 4, !tbaa !18
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds %struct.datapartition, ptr %166, i64 %168
  %170 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readMB_transform_size_flag_CABAC, ptr %170, align 8, !tbaa !211
  %171 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %172 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %171, i64 0, i32 3
  %173 = load i32, ptr %172, align 4, !tbaa !490
  %174 = icmp eq i32 %173, 0
  %175 = load ptr, ptr %169, align 8, !tbaa !448
  br i1 %174, label %180, label %176

176:                                              ; preds = %165
  %177 = getelementptr inbounds %struct.Bitstream, ptr %175, i64 0, i32 5
  %178 = load i32, ptr %177, align 8, !tbaa !560
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %176, %165
  %181 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 3
  store i32 1, ptr %181, align 4, !tbaa !212
  %182 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %3, ptr noundef %175) #46
  br label %187

183:                                              ; preds = %176
  %184 = getelementptr inbounds %struct.datapartition, ptr %166, i64 %168, i32 2
  %185 = load ptr, ptr %184, align 8, !tbaa !738
  %186 = call i32 %185(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef nonnull %169) #46
  br label %187

187:                                              ; preds = %183, %180
  %188 = load i32, ptr %137, align 4, !tbaa !173
  %189 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 30
  store i32 %188, ptr %189, align 4, !tbaa !194
  %190 = load i32, ptr %46, align 8, !tbaa !195
  br label %193

191:                                              ; preds = %158, %157, %157, %153
  %192 = icmp eq i32 %138, 0
  br i1 %192, label %248, label %193

193:                                              ; preds = %191, %187, %161
  %194 = phi i32 [ %140, %161 ], [ %190, %187 ], [ %140, %191 ]
  %195 = add i32 %194, -9
  %196 = and i32 %195, -6
  %197 = icmp eq i32 %196, 0
  %198 = select i1 %197, i32 17, i32 16
  store i32 %198, ptr %3, align 8, !tbaa !736
  %199 = load ptr, ptr %105, align 8, !tbaa !214
  %200 = zext i32 %198 to i64
  %201 = getelementptr inbounds i32, ptr %25, i64 %200
  %202 = load i32, ptr %201, align 4, !tbaa !18
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds %struct.datapartition, ptr %199, i64 %203
  %205 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %206 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %205, i64 0, i32 3
  %207 = load i32, ptr %206, align 4, !tbaa !490
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %214, label %209

209:                                              ; preds = %193
  %210 = load ptr, ptr %204, align 8, !tbaa !448
  %211 = getelementptr inbounds %struct.Bitstream, ptr %210, i64 0, i32 5
  %212 = load i32, ptr %211, align 8, !tbaa !560
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %216, label %214

214:                                              ; preds = %209, %193
  %215 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  store ptr @linfo_se, ptr %215, align 8, !tbaa !737
  br label %218

216:                                              ; preds = %209
  %217 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readDquant_CABAC, ptr %217, align 8, !tbaa !211
  br label %218

218:                                              ; preds = %216, %214
  %219 = getelementptr inbounds %struct.datapartition, ptr %199, i64 %203, i32 2
  %220 = load ptr, ptr %219, align 8, !tbaa !738
  %221 = call i32 %220(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %204) #46
  %222 = load i32, ptr %137, align 4, !tbaa !173
  %223 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 3
  store i32 %222, ptr %223, align 8, !tbaa !726
  %224 = load i32, ptr %27, align 4, !tbaa !117
  %225 = sdiv i32 %224, 2
  %226 = sub nsw i32 -26, %225
  %227 = icmp slt i32 %222, %226
  %228 = add nsw i32 %225, 25
  %229 = icmp sgt i32 %222, %228
  %230 = select i1 %227, i1 true, i1 %229
  br i1 %230, label %231, label %234

231:                                              ; preds = %218
  call void @error(ptr noundef nonnull @.str.5.163, i32 noundef 500) #46
  %232 = load i32, ptr %223, align 8, !tbaa !726
  %233 = load i32, ptr %27, align 4, !tbaa !117
  br label %234

234:                                              ; preds = %231, %218
  %235 = phi i32 [ %224, %218 ], [ %233, %231 ]
  %236 = phi i32 [ %222, %218 ], [ %232, %231 ]
  %237 = load i32, ptr %26, align 4, !tbaa !43
  %238 = shl nsw i32 %235, 1
  %239 = add i32 %237, 52
  %240 = add i32 %239, %236
  %241 = add nsw i32 %240, %238
  %242 = add nsw i32 %235, 52
  %243 = srem i32 %241, %242
  %244 = sub nsw i32 %243, %235
  store i32 %244, ptr %26, align 4, !tbaa !43
  br label %248

245:                                              ; preds = %101, %101
  %246 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 8
  %247 = load i32, ptr %246, align 4, !tbaa !199
  br label %248

248:                                              ; preds = %245, %234, %191
  %249 = phi i32 [ %247, %245 ], [ %138, %234 ], [ 0, %191 ]
  %250 = getelementptr i8, ptr %0, i64 2408
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(256) %250, i8 0, i64 256, i1 false)
  %251 = getelementptr i8, ptr %0, i64 3176
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(256) %251, i8 0, i64 256, i1 false)
  %252 = getelementptr i8, ptr %0, i64 3944
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(256) %252, i8 0, i64 256, i1 false)
  %253 = getelementptr i8, ptr %0, i64 4712
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(256) %253, i8 0, i64 256, i1 false)
  %254 = load i32, ptr %46, align 8, !tbaa !195
  switch i32 %254, label %400 [
    i32 10, label %255
    i32 14, label %255
  ]

255:                                              ; preds = %248, %248
  store i32 17, ptr %3, align 8, !tbaa !736
  %256 = getelementptr inbounds %struct.Slice, ptr %21, i64 0, i32 9
  %257 = load ptr, ptr %256, align 8, !tbaa !214
  %258 = getelementptr inbounds i32, ptr %25, i64 17
  %259 = load i32, ptr %258, align 4, !tbaa !18
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds %struct.datapartition, ptr %257, i64 %260
  %262 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %263 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %262, i64 0, i32 3
  %264 = load i32, ptr %263, align 4, !tbaa !490
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %271, label %266

266:                                              ; preds = %255
  %267 = load ptr, ptr %261, align 8, !tbaa !448
  %268 = getelementptr inbounds %struct.Bitstream, ptr %267, i64 0, i32 5
  %269 = load i32, ptr %268, align 8, !tbaa !560
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %273, label %271

271:                                              ; preds = %266, %255
  %272 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  store ptr @linfo_se, ptr %272, align 8, !tbaa !737
  br label %275

273:                                              ; preds = %266
  %274 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readDquant_CABAC, ptr %274, align 8, !tbaa !211
  br label %275

275:                                              ; preds = %273, %271
  %276 = getelementptr inbounds %struct.datapartition, ptr %257, i64 %260, i32 2
  %277 = load ptr, ptr %276, align 8, !tbaa !738
  %278 = call i32 %277(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %261) #46
  %279 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %280 = load i32, ptr %279, align 4, !tbaa !173
  %281 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 3
  store i32 %280, ptr %281, align 8, !tbaa !726
  %282 = load i32, ptr %27, align 4, !tbaa !117
  %283 = sdiv i32 %282, 2
  %284 = sub nsw i32 -26, %283
  %285 = icmp slt i32 %280, %284
  %286 = add nsw i32 %283, 25
  %287 = icmp sgt i32 %280, %286
  %288 = select i1 %285, i1 true, i1 %287
  br i1 %288, label %289, label %292

289:                                              ; preds = %275
  call void @error(ptr noundef nonnull @.str.5.163, i32 noundef 500) #46
  %290 = load i32, ptr %281, align 8, !tbaa !726
  %291 = load i32, ptr %27, align 4, !tbaa !117
  br label %292

292:                                              ; preds = %289, %275
  %293 = phi i32 [ %282, %275 ], [ %291, %289 ]
  %294 = phi i32 [ %280, %275 ], [ %290, %289 ]
  %295 = load i32, ptr %26, align 4, !tbaa !43
  %296 = shl nsw i32 %293, 1
  %297 = add i32 %295, 52
  %298 = add i32 %297, %294
  %299 = add nsw i32 %298, %296
  %300 = add nsw i32 %293, 52
  %301 = srem i32 %299, %300
  %302 = sub nsw i32 %301, %293
  store i32 %302, ptr %26, align 4, !tbaa !43
  %303 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 30
  %304 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  %305 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  br label %306

306:                                              ; preds = %322, %292
  %307 = phi i32 [ 0, %292 ], [ %323, %322 ]
  br label %308

308:                                              ; preds = %308, %306
  %309 = phi i32 [ 0, %306 ], [ %320, %308 ]
  %310 = load ptr, ptr %303, align 8, !tbaa !50
  %311 = load i32, ptr %304, align 4, !tbaa !301
  %312 = add nsw i32 %311, %309
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds ptr, ptr %310, i64 %313
  %315 = load ptr, ptr %314, align 8, !tbaa !13
  %316 = load i32, ptr %305, align 4, !tbaa !303
  %317 = add nsw i32 %316, %307
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds i8, ptr %315, i64 %318
  store i8 2, ptr %319, align 1, !tbaa !14
  %320 = add nuw nsw i32 %309, 1
  %321 = icmp eq i32 %320, 4
  br i1 %321, label %322, label %308, !llvm.loop !794

322:                                              ; preds = %308
  %323 = add nuw nsw i32 %307, 1
  %324 = icmp eq i32 %323, 4
  br i1 %324, label %325, label %306, !llvm.loop !795

325:                                              ; preds = %322
  %326 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %327 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %326, i64 0, i32 3
  %328 = load i32, ptr %327, align 4, !tbaa !490
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %358

330:                                              ; preds = %325
  call void @readCoeff4x4_CAVLC(ptr noundef nonnull %0, ptr poison, i32 noundef 1, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef nonnull %6) #47
  %331 = load i32, ptr %6, align 4, !tbaa !18
  %332 = icmp sgt i32 %331, 0
  br i1 %332, label %333, label %398

333:                                              ; preds = %330
  %334 = zext i32 %331 to i64
  br label %335

335:                                              ; preds = %354, %333
  %336 = phi i64 [ 0, %333 ], [ %356, %354 ]
  %337 = phi i32 [ -1, %333 ], [ %355, %354 ]
  %338 = getelementptr inbounds [16 x i32], ptr %4, i64 0, i64 %336
  %339 = load i32, ptr %338, align 4, !tbaa !18
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %354, label %341

341:                                              ; preds = %335
  %342 = getelementptr inbounds [16 x i32], ptr %5, i64 0, i64 %336
  %343 = load i32, ptr %342, align 4, !tbaa !18
  %344 = add i32 %337, 1
  %345 = add i32 %344, %343
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds [2 x i8], ptr %79, i64 %346
  %348 = load i8, ptr %347, align 2, !tbaa !14
  %349 = getelementptr inbounds [2 x i8], ptr %79, i64 %346, i64 1
  %350 = load i8, ptr %349, align 1, !tbaa !14
  %351 = zext i8 %348 to i64
  %352 = zext i8 %350 to i64
  %353 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %351, i64 %352
  store i32 %339, ptr %353, align 8, !tbaa !18
  br label %354

354:                                              ; preds = %341, %335
  %355 = phi i32 [ %345, %341 ], [ %337, %335 ]
  %356 = add nuw nsw i64 %336, 1
  %357 = icmp eq i64 %356, %334
  br i1 %357, label %398, label %335, !llvm.loop !796

358:                                              ; preds = %325
  %359 = load ptr, ptr %256, align 8, !tbaa !214
  %360 = getelementptr inbounds i32, ptr %25, i64 7
  %361 = load i32, ptr %360, align 4, !tbaa !18
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds %struct.datapartition, ptr %359, i64 %362
  %364 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 6
  store i32 0, ptr %364, align 8, !tbaa !190
  store i32 7, ptr %3, align 8, !tbaa !736
  %365 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 42
  store i32 1, ptr %365, align 8, !tbaa !204
  %366 = load ptr, ptr %363, align 8, !tbaa !448
  %367 = getelementptr inbounds %struct.Bitstream, ptr %366, i64 0, i32 5
  %368 = load i32, ptr %367, align 8, !tbaa !560
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %372, label %370

370:                                              ; preds = %358
  %371 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  store ptr @linfo_levrun_inter, ptr %371, align 8, !tbaa !737
  br label %374

372:                                              ; preds = %358
  %373 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  store ptr @readRunLevel_CABAC, ptr %373, align 8, !tbaa !211
  br label %374

374:                                              ; preds = %372, %370
  %375 = getelementptr inbounds %struct.datapartition, ptr %359, i64 %362, i32 2
  %376 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 2
  br label %377

377:                                              ; preds = %384, %374
  %378 = phi i32 [ 0, %374 ], [ %396, %384 ]
  %379 = phi i32 [ -1, %374 ], [ %387, %384 ]
  %380 = load ptr, ptr %375, align 8, !tbaa !738
  %381 = call i32 %380(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef nonnull %363) #46
  %382 = load i32, ptr %279, align 4, !tbaa !173
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %398, label %384

384:                                              ; preds = %377
  %385 = load i32, ptr %376, align 8, !tbaa !179
  %386 = add i32 %379, 1
  %387 = add i32 %386, %385
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds [2 x i8], ptr %79, i64 %388
  %390 = load i8, ptr %389, align 2, !tbaa !14
  %391 = getelementptr inbounds [2 x i8], ptr %79, i64 %388, i64 1
  %392 = load i8, ptr %391, align 1, !tbaa !14
  %393 = zext i8 %390 to i64
  %394 = zext i8 %392 to i64
  %395 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %393, i64 %394
  store i32 %382, ptr %395, align 8, !tbaa !18
  %396 = add nuw nsw i32 %378, 1
  %397 = icmp ult i32 %378, 16
  br i1 %397, label %377, label %398, !llvm.loop !797

398:                                              ; preds = %384, %377, %354, %330
  br i1 %66, label %400, label %399

399:                                              ; preds = %398
  call void @itrans_2(ptr noundef %0) #46
  br label %400

400:                                              ; preds = %399, %398, %248
  %401 = load i32, ptr %26, align 4, !tbaa !43
  store i32 %401, ptr %19, align 8, !tbaa !720
  %402 = load ptr, ptr @img, align 8, !tbaa !13
  %403 = getelementptr inbounds %struct.img_par, ptr %402, i64 0, i32 104
  %404 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  br label %405

405:                                              ; preds = %422, %400
  %406 = phi i1 [ true, %400 ], [ false, %422 ]
  %407 = phi i64 [ 0, %400 ], [ 1, %422 ]
  %408 = load i32, ptr %403, align 8, !tbaa !705
  %409 = sub nsw i32 0, %408
  %410 = getelementptr inbounds %struct.storable_picture, ptr %404, i64 0, i32 58, i64 %407
  %411 = load i32, ptr %410, align 4, !tbaa !18
  %412 = add nsw i32 %411, %401
  %413 = call i32 @llvm.smax.i32(i32 %412, i32 %409)
  %414 = call i32 @llvm.smin.i32(i32 %413, i32 51)
  %415 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 1, i64 %407
  %416 = icmp slt i32 %414, 0
  br i1 %416, label %422, label %417

417:                                              ; preds = %405
  %418 = zext i32 %414 to i64
  %419 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %418
  %420 = load i8, ptr %419, align 1, !tbaa !14
  %421 = zext i8 %420 to i32
  br label %422

422:                                              ; preds = %417, %405
  %423 = phi i32 [ %421, %417 ], [ %414, %405 ]
  store i32 %423, ptr %415, align 4, !tbaa !18
  br i1 %406, label %405, label %424, !llvm.loop !798

424:                                              ; preds = %422
  %425 = load i32, ptr %26, align 4, !tbaa !43
  %426 = load i32, ptr %27, align 4, !tbaa !117
  %427 = add nsw i32 %426, %425
  %428 = sdiv i32 %427, 6
  %429 = srem i32 %427, 6
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @InvLevelScale4x4Luma_Intra, i64 0, i64 %430
  %432 = getelementptr inbounds [6 x [4 x [4 x i32]]], ptr @InvLevelScale4x4Luma_Inter, i64 0, i64 %430
  %433 = select i1 %52, ptr %431, ptr %432
  %434 = getelementptr inbounds [6 x [8 x [8 x i32]]], ptr @InvLevelScale8x8Luma_Intra, i64 0, i64 %430
  %435 = getelementptr inbounds [6 x [8 x [8 x i32]]], ptr @InvLevelScale8x8Luma_Inter, i64 0, i64 %430
  %436 = select i1 %52, ptr %434, ptr %435
  %437 = getelementptr inbounds %struct.storable_picture, ptr %404, i64 0, i32 50
  %438 = load i32, ptr %437, align 4, !tbaa !83
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %455, label %440

440:                                              ; preds = %424
  %441 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 104
  %442 = load i32, ptr %441, align 8, !tbaa !705
  %443 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 1, i64 0
  %444 = load i32, ptr %443, align 4, !tbaa !18
  %445 = add nsw i32 %442, %444
  %446 = sdiv i32 %445, 6
  store i32 %446, ptr %7, align 4, !tbaa !18
  %447 = srem i32 %445, 6
  store i32 %447, ptr %8, align 4, !tbaa !18
  %448 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 1, i64 1
  %449 = load i32, ptr %448, align 4, !tbaa !18
  %450 = add nsw i32 %442, %449
  %451 = sdiv i32 %450, 6
  %452 = getelementptr inbounds [2 x i32], ptr %7, i64 0, i64 1
  store i32 %451, ptr %452, align 4, !tbaa !18
  %453 = srem i32 %450, 6
  %454 = getelementptr inbounds [2 x i32], ptr %8, i64 0, i64 1
  store i32 %453, ptr %454, align 4, !tbaa !18
  br label %455

455:                                              ; preds = %440, %424
  %456 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 30
  %457 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 40
  %458 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 41
  %459 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 42
  %460 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 6
  %461 = getelementptr inbounds %struct.Slice, ptr %21, i64 0, i32 9
  %462 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 9
  %463 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  %464 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %465 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 2
  %466 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 9
  %467 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 32
  br label %468

468:                                              ; preds = %826, %455
  %469 = phi i64 [ 2, %455 ], [ %827, %826 ]
  %470 = phi i1 [ true, %455 ], [ false, %826 ]
  %471 = phi i64 [ 0, %455 ], [ 2, %826 ]
  %472 = shl nuw nsw i64 %471, 2
  br label %473

473:                                              ; preds = %823, %468
  %474 = phi i64 [ 0, %468 ], [ %824, %823 ]
  %475 = phi i64 [ 2, %468 ], [ %825, %823 ]
  %476 = phi i1 [ true, %468 ], [ false, %823 ]
  %477 = phi i64 [ 0, %468 ], [ 2, %823 ]
  %478 = lshr exact i64 %477, 1
  %479 = or i64 %478, %471
  %480 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %481 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %480, i64 0, i32 3
  %482 = load i32, ptr %481, align 4, !tbaa !490
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %484, label %674

484:                                              ; preds = %473
  %485 = trunc i64 %479 to i32
  %486 = shl nuw nsw i32 1, %485
  %487 = and i32 %486, %249
  %488 = icmp eq i32 %487, 0
  %489 = or i64 %477, %472
  %490 = trunc i64 %489 to i32
  %491 = shl i32 51, %490
  %492 = zext i32 %491 to i64
  %493 = shl nuw nsw i64 %477, 2
  br label %494

494:                                              ; preds = %671, %484
  %495 = phi i64 [ %471, %484 ], [ %672, %671 ]
  %496 = sub nuw nsw i64 %495, %471
  %497 = shl nsw i64 %496, 1
  %498 = add nsw i64 %497, %474
  %499 = shl i64 %495, 2
  %500 = trunc i64 %495 to i32
  br label %501

501:                                              ; preds = %668, %494
  %502 = phi i64 [ %477, %494 ], [ %669, %668 ]
  br i1 %488, label %659, label %503

503:                                              ; preds = %501
  %504 = load i32, ptr %46, align 8, !tbaa !195
  %505 = and i32 %504, -5
  %506 = icmp eq i32 %505, 10
  %507 = select i1 %506, i32 2, i32 0
  %508 = trunc i64 %502 to i32
  call void @readCoeff4x4_CAVLC(ptr noundef %0, ptr poison, i32 noundef %507, i32 noundef %508, i32 noundef %500, ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef nonnull %6) #47
  %509 = load i32, ptr %46, align 8, !tbaa !195
  %510 = and i32 %509, -5
  %511 = icmp ne i32 %510, 10
  %512 = sext i1 %511 to i32
  %513 = load i32, ptr %456, align 4, !tbaa !194
  %514 = icmp eq i32 %513, 0
  %515 = load i32, ptr %6, align 4, !tbaa !18
  %516 = icmp sgt i32 %515, 0
  br i1 %66, label %595, label %517

517:                                              ; preds = %503
  br i1 %514, label %522, label %518

518:                                              ; preds = %517
  br i1 %516, label %519, label %668

519:                                              ; preds = %518
  %520 = add nsw i64 %498, %502
  %521 = zext i32 %515 to i64
  br label %558

522:                                              ; preds = %517
  br i1 %516, label %523, label %668

523:                                              ; preds = %522
  %524 = add nuw nsw i64 %502, %499
  %525 = shl nuw i64 1, %524
  %526 = zext i32 %515 to i64
  br label %527

527:                                              ; preds = %554, %523
  %528 = phi i64 [ 0, %523 ], [ %556, %554 ]
  %529 = phi i32 [ %512, %523 ], [ %555, %554 ]
  %530 = getelementptr inbounds [16 x i32], ptr %4, i64 0, i64 %528
  %531 = load i32, ptr %530, align 4, !tbaa !18
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %554, label %533

533:                                              ; preds = %527
  %534 = getelementptr inbounds [16 x i32], ptr %5, i64 0, i64 %528
  %535 = load i32, ptr %534, align 4, !tbaa !18
  %536 = add i32 %529, 1
  %537 = add i32 %536, %535
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds [2 x i8], ptr %79, i64 %538
  %540 = load i8, ptr %539, align 2, !tbaa !14
  %541 = getelementptr inbounds [2 x i8], ptr %79, i64 %538, i64 1
  %542 = load i8, ptr %541, align 1, !tbaa !14
  %543 = load i64, ptr %466, align 8, !tbaa !718
  %544 = or i64 %543, %525
  store i64 %544, ptr %466, align 8, !tbaa !718
  %545 = zext i8 %542 to i64
  %546 = zext i8 %540 to i64
  %547 = getelementptr inbounds [4 x i32], ptr %433, i64 %545, i64 %546
  %548 = load i32, ptr %547, align 4, !tbaa !18
  %549 = mul nsw i32 %548, %531
  %550 = shl i32 %549, %428
  %551 = add nsw i32 %550, 8
  %552 = ashr i32 %551, 4
  %553 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %502, i64 %495, i64 %545, i64 %546
  store i32 %552, ptr %553, align 4, !tbaa !18
  br label %554

554:                                              ; preds = %533, %527
  %555 = phi i32 [ %537, %533 ], [ %529, %527 ]
  %556 = add nuw nsw i64 %528, 1
  %557 = icmp eq i64 %556, %526
  br i1 %557, label %668, label %527, !llvm.loop !799

558:                                              ; preds = %591, %519
  %559 = phi i64 [ 0, %519 ], [ %593, %591 ]
  %560 = phi i32 [ %512, %519 ], [ %592, %591 ]
  %561 = getelementptr inbounds [16 x i32], ptr %4, i64 0, i64 %559
  %562 = load i32, ptr %561, align 4, !tbaa !18
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %591, label %564

564:                                              ; preds = %558
  %565 = getelementptr inbounds [16 x i32], ptr %5, i64 0, i64 %559
  %566 = load i32, ptr %565, align 4, !tbaa !18
  %567 = add i32 %560, 1
  %568 = add i32 %567, %566
  %569 = load i64, ptr %466, align 8, !tbaa !718
  %570 = or i64 %569, %492
  store i64 %570, ptr %466, align 8, !tbaa !718
  %571 = shl i32 %568, 2
  %572 = sext i32 %571 to i64
  %573 = add nsw i64 %520, %572
  %574 = getelementptr inbounds [2 x i8], ptr %78, i64 %573
  %575 = load i8, ptr %574, align 2, !tbaa !14
  %576 = zext i8 %575 to i64
  %577 = getelementptr inbounds [2 x i8], ptr %78, i64 %573, i64 1
  %578 = load i8, ptr %577, align 1, !tbaa !14
  %579 = zext i8 %578 to i64
  %580 = zext i8 %578 to i64
  %581 = zext i8 %575 to i64
  %582 = getelementptr inbounds [8 x i32], ptr %436, i64 %580, i64 %581
  %583 = load i32, ptr %582, align 4, !tbaa !18
  %584 = mul nsw i32 %583, %562
  %585 = shl i32 %584, %428
  %586 = add nsw i32 %585, 32
  %587 = ashr i32 %586, 6
  %588 = add nuw nsw i64 %472, %579
  %589 = add nuw nsw i64 %493, %576
  %590 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %588, i64 %589
  store i32 %587, ptr %590, align 4, !tbaa !18
  br label %591

591:                                              ; preds = %564, %558
  %592 = phi i32 [ %568, %564 ], [ %560, %558 ]
  %593 = add nuw nsw i64 %559, 1
  %594 = icmp eq i64 %593, %521
  br i1 %594, label %668, label %558, !llvm.loop !800

595:                                              ; preds = %503
  br i1 %514, label %600, label %596

596:                                              ; preds = %595
  br i1 %516, label %597, label %668

597:                                              ; preds = %596
  %598 = add nsw i64 %498, %502
  %599 = zext i32 %515 to i64
  br label %630

600:                                              ; preds = %595
  br i1 %516, label %601, label %668

601:                                              ; preds = %600
  %602 = add nuw nsw i64 %502, %499
  %603 = shl nuw i64 1, %602
  %604 = zext i32 %515 to i64
  br label %605

605:                                              ; preds = %626, %601
  %606 = phi i64 [ 0, %601 ], [ %628, %626 ]
  %607 = phi i32 [ %512, %601 ], [ %627, %626 ]
  %608 = getelementptr inbounds [16 x i32], ptr %4, i64 0, i64 %606
  %609 = load i32, ptr %608, align 4, !tbaa !18
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %626, label %611

611:                                              ; preds = %605
  %612 = getelementptr inbounds [16 x i32], ptr %5, i64 0, i64 %606
  %613 = load i32, ptr %612, align 4, !tbaa !18
  %614 = add i32 %607, 1
  %615 = add i32 %614, %613
  %616 = sext i32 %615 to i64
  %617 = getelementptr inbounds [2 x i8], ptr %79, i64 %616
  %618 = load i8, ptr %617, align 2, !tbaa !14
  %619 = getelementptr inbounds [2 x i8], ptr %79, i64 %616, i64 1
  %620 = load i8, ptr %619, align 1, !tbaa !14
  %621 = load i64, ptr %466, align 8, !tbaa !718
  %622 = or i64 %621, %603
  store i64 %622, ptr %466, align 8, !tbaa !718
  %623 = zext i8 %620 to i64
  %624 = zext i8 %618 to i64
  %625 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %502, i64 %495, i64 %623, i64 %624
  store i32 %609, ptr %625, align 4, !tbaa !18
  br label %626

626:                                              ; preds = %611, %605
  %627 = phi i32 [ %615, %611 ], [ %607, %605 ]
  %628 = add nuw nsw i64 %606, 1
  %629 = icmp eq i64 %628, %604
  br i1 %629, label %668, label %605, !llvm.loop !801

630:                                              ; preds = %655, %597
  %631 = phi i64 [ 0, %597 ], [ %657, %655 ]
  %632 = phi i32 [ %512, %597 ], [ %656, %655 ]
  %633 = getelementptr inbounds [16 x i32], ptr %4, i64 0, i64 %631
  %634 = load i32, ptr %633, align 4, !tbaa !18
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %655, label %636

636:                                              ; preds = %630
  %637 = getelementptr inbounds [16 x i32], ptr %5, i64 0, i64 %631
  %638 = load i32, ptr %637, align 4, !tbaa !18
  %639 = add i32 %632, 1
  %640 = add i32 %639, %638
  %641 = load i64, ptr %466, align 8, !tbaa !718
  %642 = or i64 %641, %492
  store i64 %642, ptr %466, align 8, !tbaa !718
  %643 = shl nsw i32 %640, 2
  %644 = sext i32 %643 to i64
  %645 = add nsw i64 %598, %644
  %646 = getelementptr inbounds [2 x i8], ptr %78, i64 %645
  %647 = load i8, ptr %646, align 2, !tbaa !14
  %648 = zext i8 %647 to i64
  %649 = getelementptr inbounds [2 x i8], ptr %78, i64 %645, i64 1
  %650 = load i8, ptr %649, align 1, !tbaa !14
  %651 = zext i8 %650 to i64
  %652 = add nuw nsw i64 %472, %651
  %653 = add nuw nsw i64 %493, %648
  %654 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %652, i64 %653
  store i32 %634, ptr %654, align 4, !tbaa !18
  br label %655

655:                                              ; preds = %636, %630
  %656 = phi i32 [ %640, %636 ], [ %632, %630 ]
  %657 = add nuw nsw i64 %631, 1
  %658 = icmp eq i64 %657, %599
  br i1 %658, label %668, label %630, !llvm.loop !802

659:                                              ; preds = %501
  %660 = load ptr, ptr %467, align 8, !tbaa !617
  %661 = load i32, ptr %14, align 4, !tbaa !49
  %662 = zext i32 %661 to i64
  %663 = getelementptr inbounds ptr, ptr %660, i64 %662
  %664 = load ptr, ptr %663, align 8, !tbaa !13
  %665 = getelementptr inbounds ptr, ptr %664, i64 %502
  %666 = load ptr, ptr %665, align 8, !tbaa !13
  %667 = getelementptr inbounds i32, ptr %666, i64 %495
  store i32 0, ptr %667, align 4, !tbaa !18
  br label %668

668:                                              ; preds = %659, %655, %626, %600, %596, %591, %554, %522, %518
  %669 = add nuw nsw i64 %502, 1
  %670 = icmp eq i64 %669, %475
  br i1 %670, label %671, label %501, !llvm.loop !803

671:                                              ; preds = %668
  %672 = add nuw nsw i64 %495, 1
  %673 = icmp eq i64 %672, %469
  br i1 %673, label %823, label %494, !llvm.loop !804

674:                                              ; preds = %473
  %675 = load i32, ptr %456, align 4, !tbaa !194
  %676 = icmp eq i32 %675, 0
  %677 = trunc i64 %479 to i32
  br i1 %676, label %678, label %682

678:                                              ; preds = %674
  %679 = shl nuw nsw i32 1, %677
  %680 = and i32 %679, %249
  %681 = icmp eq i32 %680, 0
  br label %683

682:                                              ; preds = %674
  call void @readLumaCoeff8x8_CABAC(ptr noundef %0, ptr poison, i32 noundef %677) #47
  br label %823

683:                                              ; preds = %820, %678
  %684 = phi i64 [ %471, %678 ], [ %821, %820 ]
  %685 = shl i64 %684, 2
  %686 = trunc i64 %684 to i32
  br label %687

687:                                              ; preds = %817, %683
  %688 = phi i64 [ %477, %683 ], [ %818, %817 ]
  %689 = load i32, ptr %46, align 8, !tbaa !195
  %690 = and i32 %689, -5
  %691 = icmp eq i32 %690, 10
  %692 = zext i1 %691 to i32
  %693 = trunc i64 %688 to i32
  store i32 %693, ptr %457, align 8, !tbaa !185
  store i32 %686, ptr %458, align 4, !tbaa !186
  br i1 %681, label %817, label %694

694:                                              ; preds = %687
  %695 = xor i1 %691, true
  %696 = sext i1 %695 to i32
  %697 = add i32 %689, -9
  %698 = icmp ult i32 %697, 6
  br i1 %698, label %699, label %703

699:                                              ; preds = %694
  %700 = sext i32 %697 to i64
  %701 = getelementptr inbounds [6 x i32], ptr @switch.table.readCBPandCoeffsFromNAL.14, i64 0, i64 %700
  %702 = load i32, ptr %701, align 4
  br label %703

703:                                              ; preds = %699, %694
  %704 = phi i32 [ %702, %699 ], [ 0, %694 ]
  store i32 %704, ptr %459, align 8, !tbaa !204
  %705 = add nuw nsw i64 %688, %685
  %706 = shl nuw i64 1, %705
  br i1 %66, label %765, label %707

707:                                              ; preds = %743, %703
  %708 = phi i32 [ %763, %743 ], [ %692, %703 ]
  %709 = phi i32 [ %746, %743 ], [ %696, %703 ]
  %710 = load i32, ptr %46, align 8, !tbaa !195
  %711 = and i32 %710, -5
  %712 = icmp eq i32 %711, 10
  %713 = select i1 %712, i32 1, i32 5
  store i32 %713, ptr %460, align 8, !tbaa !190
  %714 = load i32, ptr %459, align 8, !tbaa !204
  %715 = icmp eq i32 %714, 0
  %716 = icmp eq i32 %708, 0
  %717 = select i1 %716, i32 7, i32 9
  %718 = select i1 %716, i32 12, i32 14
  %719 = select i1 %715, i32 %718, i32 %717
  store i32 %719, ptr %3, align 8, !tbaa !736
  %720 = load ptr, ptr %461, align 8, !tbaa !214
  %721 = zext i32 %719 to i64
  %722 = getelementptr inbounds i32, ptr %25, i64 %721
  %723 = load i32, ptr %722, align 4, !tbaa !18
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds %struct.datapartition, ptr %720, i64 %724
  %726 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %727 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %726, i64 0, i32 3
  %728 = load i32, ptr %727, align 4, !tbaa !490
  %729 = icmp eq i32 %728, 0
  br i1 %729, label %735, label %730

730:                                              ; preds = %707
  %731 = load ptr, ptr %725, align 8, !tbaa !448
  %732 = getelementptr inbounds %struct.Bitstream, ptr %731, i64 0, i32 5
  %733 = load i32, ptr %732, align 8, !tbaa !560
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %736, label %735

735:                                              ; preds = %730, %707
  store ptr @linfo_levrun_inter, ptr %463, align 8, !tbaa !737
  br label %737

736:                                              ; preds = %730
  store ptr @readRunLevel_CABAC, ptr %462, align 8, !tbaa !211
  br label %737

737:                                              ; preds = %736, %735
  %738 = getelementptr inbounds %struct.datapartition, ptr %720, i64 %724, i32 2
  %739 = load ptr, ptr %738, align 8, !tbaa !738
  %740 = call i32 %739(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %725) #46
  %741 = load i32, ptr %464, align 4, !tbaa !173
  %742 = icmp eq i32 %741, 0
  br i1 %742, label %817, label %743

743:                                              ; preds = %737
  %744 = load i32, ptr %465, align 8, !tbaa !179
  %745 = add i32 %709, 1
  %746 = add i32 %745, %744
  %747 = sext i32 %746 to i64
  %748 = getelementptr inbounds [2 x i8], ptr %79, i64 %747
  %749 = load i8, ptr %748, align 2, !tbaa !14
  %750 = getelementptr inbounds [2 x i8], ptr %79, i64 %747, i64 1
  %751 = load i8, ptr %750, align 1, !tbaa !14
  %752 = load i64, ptr %466, align 8, !tbaa !718
  %753 = or i64 %752, %706
  store i64 %753, ptr %466, align 8, !tbaa !718
  %754 = zext i8 %751 to i64
  %755 = zext i8 %749 to i64
  %756 = getelementptr inbounds [4 x i32], ptr %433, i64 %754, i64 %755
  %757 = load i32, ptr %756, align 4, !tbaa !18
  %758 = mul nsw i32 %757, %741
  %759 = shl i32 %758, %428
  %760 = add nsw i32 %759, 8
  %761 = ashr i32 %760, 4
  %762 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %688, i64 %684, i64 %754, i64 %755
  store i32 %761, ptr %762, align 4, !tbaa !18
  %763 = add nuw nsw i32 %708, 1
  %764 = icmp ult i32 %708, 16
  br i1 %764, label %707, label %817, !llvm.loop !805

765:                                              ; preds = %801, %703
  %766 = phi i32 [ %815, %801 ], [ %692, %703 ]
  %767 = phi i32 [ %804, %801 ], [ %696, %703 ]
  %768 = load i32, ptr %46, align 8, !tbaa !195
  %769 = and i32 %768, -5
  %770 = icmp eq i32 %769, 10
  %771 = select i1 %770, i32 1, i32 5
  store i32 %771, ptr %460, align 8, !tbaa !190
  %772 = load i32, ptr %459, align 8, !tbaa !204
  %773 = icmp eq i32 %772, 0
  %774 = icmp eq i32 %766, 0
  %775 = select i1 %774, i32 7, i32 9
  %776 = select i1 %774, i32 12, i32 14
  %777 = select i1 %773, i32 %776, i32 %775
  store i32 %777, ptr %3, align 8, !tbaa !736
  %778 = load ptr, ptr %461, align 8, !tbaa !214
  %779 = zext i32 %777 to i64
  %780 = getelementptr inbounds i32, ptr %25, i64 %779
  %781 = load i32, ptr %780, align 4, !tbaa !18
  %782 = sext i32 %781 to i64
  %783 = getelementptr inbounds %struct.datapartition, ptr %778, i64 %782
  %784 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %785 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %784, i64 0, i32 3
  %786 = load i32, ptr %785, align 4, !tbaa !490
  %787 = icmp eq i32 %786, 0
  br i1 %787, label %793, label %788

788:                                              ; preds = %765
  %789 = load ptr, ptr %783, align 8, !tbaa !448
  %790 = getelementptr inbounds %struct.Bitstream, ptr %789, i64 0, i32 5
  %791 = load i32, ptr %790, align 8, !tbaa !560
  %792 = icmp eq i32 %791, 0
  br i1 %792, label %794, label %793

793:                                              ; preds = %788, %765
  store ptr @linfo_levrun_inter, ptr %463, align 8, !tbaa !737
  br label %795

794:                                              ; preds = %788
  store ptr @readRunLevel_CABAC, ptr %462, align 8, !tbaa !211
  br label %795

795:                                              ; preds = %794, %793
  %796 = getelementptr inbounds %struct.datapartition, ptr %778, i64 %782, i32 2
  %797 = load ptr, ptr %796, align 8, !tbaa !738
  %798 = call i32 %797(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %783) #46
  %799 = load i32, ptr %464, align 4, !tbaa !173
  %800 = icmp eq i32 %799, 0
  br i1 %800, label %817, label %801

801:                                              ; preds = %795
  %802 = load i32, ptr %465, align 8, !tbaa !179
  %803 = add i32 %767, 1
  %804 = add i32 %803, %802
  %805 = sext i32 %804 to i64
  %806 = getelementptr inbounds [2 x i8], ptr %79, i64 %805
  %807 = load i8, ptr %806, align 2, !tbaa !14
  %808 = getelementptr inbounds [2 x i8], ptr %79, i64 %805, i64 1
  %809 = load i8, ptr %808, align 1, !tbaa !14
  %810 = load i64, ptr %466, align 8, !tbaa !718
  %811 = or i64 %810, %706
  store i64 %811, ptr %466, align 8, !tbaa !718
  %812 = zext i8 %809 to i64
  %813 = zext i8 %807 to i64
  %814 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %688, i64 %684, i64 %812, i64 %813
  store i32 %799, ptr %814, align 4, !tbaa !18
  %815 = add nuw nsw i32 %766, 1
  %816 = icmp ult i32 %766, 16
  br i1 %816, label %765, label %817, !llvm.loop !806

817:                                              ; preds = %801, %795, %743, %737, %687
  %818 = add nuw nsw i64 %688, 1
  %819 = icmp eq i64 %818, %475
  br i1 %819, label %820, label %687, !llvm.loop !807

820:                                              ; preds = %817
  %821 = add nuw nsw i64 %684, 1
  %822 = icmp eq i64 %821, %469
  br i1 %822, label %823, label %683, !llvm.loop !808

823:                                              ; preds = %820, %682, %671
  %824 = add nsw i64 %474, -2
  %825 = add nuw nsw i64 %475, 2
  br i1 %476, label %473, label %826, !llvm.loop !809

826:                                              ; preds = %823
  %827 = add nuw nsw i64 %469, 2
  br i1 %470, label %468, label %828, !llvm.loop !810

828:                                              ; preds = %826
  %829 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %830 = getelementptr inbounds %struct.storable_picture, ptr %829, i64 0, i32 50
  %831 = load i32, ptr %830, align 4, !tbaa !83
  %832 = icmp eq i32 %831, 0
  br i1 %832, label %1770, label %833

833:                                              ; preds = %828
  %834 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 113
  %835 = load i32, ptr %834, align 4, !tbaa !93
  %836 = icmp sgt i32 %835, 0
  br i1 %836, label %837, label %850

837:                                              ; preds = %844, %833
  %838 = phi i64 [ %845, %844 ], [ 4, %833 ]
  br label %839

839:                                              ; preds = %839, %837
  %840 = phi i64 [ 0, %837 ], [ %842, %839 ]
  %841 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %840, i64 %838
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %841, i8 0, i64 64, i1 false)
  %842 = add nuw nsw i64 %840, 1
  %843 = icmp eq i64 %842, 4
  br i1 %843, label %844, label %839, !llvm.loop !811

844:                                              ; preds = %839
  %845 = add nuw nsw i64 %838, 1
  %846 = load i32, ptr %834, align 4, !tbaa !93
  %847 = add nsw i32 %846, 3
  %848 = sext i32 %847 to i64
  %849 = icmp slt i64 %838, %848
  br i1 %849, label %837, label %850, !llvm.loop !812

850:                                              ; preds = %844, %833
  %851 = icmp sgt i32 %249, 15
  br i1 %851, label %852, label %1506

852:                                              ; preds = %850
  %853 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 104
  %854 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 43
  %855 = getelementptr inbounds [2 x [4 x i32]], ptr %12, i64 0, i64 1
  %856 = getelementptr inbounds [4 x i32], ptr %12, i64 0, i64 1
  %857 = getelementptr inbounds [2 x [4 x i32]], ptr %12, i64 0, i64 1, i64 1
  %858 = getelementptr inbounds [4 x i32], ptr %13, i64 0, i64 1
  %859 = getelementptr inbounds [4 x i32], ptr %12, i64 0, i64 2
  %860 = getelementptr inbounds [2 x [4 x i32]], ptr %12, i64 0, i64 1, i64 2
  %861 = getelementptr inbounds [4 x i32], ptr %13, i64 0, i64 2
  %862 = getelementptr inbounds [4 x i32], ptr %12, i64 0, i64 3
  %863 = getelementptr inbounds [2 x [4 x i32]], ptr %12, i64 0, i64 1, i64 3
  %864 = getelementptr inbounds [4 x i32], ptr %13, i64 0, i64 3
  %865 = getelementptr inbounds [2 x [4 x i32]], ptr %13, i64 0, i64 1
  %866 = getelementptr inbounds [2 x [4 x i32]], ptr %13, i64 0, i64 1, i64 1
  %867 = getelementptr inbounds [2 x [4 x i32]], ptr %13, i64 0, i64 1, i64 2
  %868 = getelementptr inbounds [2 x [4 x i32]], ptr %13, i64 0, i64 1, i64 3
  %869 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 29
  %870 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 114
  %871 = select i1 %84, i1 true, i1 %66
  %872 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 29, i64 1
  %873 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 29, i64 2
  %874 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 29, i64 3
  %875 = getelementptr inbounds [4 x i32], ptr %9, i64 0, i64 1
  %876 = getelementptr inbounds [4 x i32], ptr %9, i64 0, i64 2
  %877 = getelementptr inbounds [4 x i32], ptr %9, i64 0, i64 3
  %878 = select i1 %52, ptr @InvLevelScale4x4Chroma_Intra, ptr @InvLevelScale4x4Chroma_Inter
  br label %879

879:                                              ; preds = %1502, %852
  %880 = phi i1 [ true, %852 ], [ false, %1502 ]
  %881 = phi i64 [ 0, %852 ], [ 2, %1502 ]
  %882 = phi i64 [ 4, %852 ], [ %1503, %1502 ]
  %883 = lshr exact i64 %881, 1
  %884 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %885 = getelementptr inbounds %struct.storable_picture, ptr %884, i64 0, i32 50
  %886 = load i32, ptr %885, align 4, !tbaa !83
  switch i32 %886, label %1269 [
    i32 1, label %887
    i32 2, label %1047
  ]

887:                                              ; preds = %879
  %888 = getelementptr inbounds [2 x i32], ptr %8, i64 0, i64 %883
  %889 = load i32, ptr %888, align 4, !tbaa !18
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]], ptr %878, i64 0, i64 %883, i64 %890
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %869, i8 0, i64 16, i1 false)
  %892 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %893 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %892, i64 0, i32 3
  %894 = load i32, ptr %893, align 4, !tbaa !490
  %895 = icmp eq i32 %894, 0
  br i1 %895, label %905, label %896

896:                                              ; preds = %887
  %897 = load i32, ptr %870, align 8, !tbaa !706
  %898 = icmp sgt i32 %897, -1
  br i1 %898, label %899, label %987

899:                                              ; preds = %896
  %900 = trunc i64 %881 to i32
  %901 = shl nuw nsw i32 %900, 1
  %902 = shl nuw nsw i32 983040, %901
  %903 = zext i32 %902 to i64
  %904 = trunc i64 %881 to i32
  br label %933

905:                                              ; preds = %887
  call void @readCoeff4x4_CAVLC(ptr noundef nonnull %0, ptr poison, i32 noundef 6, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef nonnull %6) #47
  %906 = load i32, ptr %6, align 4, !tbaa !18
  %907 = icmp sgt i32 %906, 0
  br i1 %907, label %908, label %987

908:                                              ; preds = %905
  %909 = trunc i64 %881 to i32
  %910 = shl nuw nsw i32 %909, 1
  %911 = shl nuw nsw i32 983040, %910
  %912 = zext i32 %911 to i64
  %913 = zext i32 %906 to i64
  br label %914

914:                                              ; preds = %929, %908
  %915 = phi i64 [ 0, %908 ], [ %931, %929 ]
  %916 = phi i32 [ -1, %908 ], [ %930, %929 ]
  %917 = getelementptr inbounds [16 x i32], ptr %4, i64 0, i64 %915
  %918 = load i32, ptr %917, align 4, !tbaa !18
  %919 = icmp eq i32 %918, 0
  br i1 %919, label %929, label %920

920:                                              ; preds = %914
  %921 = load i64, ptr %466, align 8, !tbaa !718
  %922 = or i64 %921, %912
  store i64 %922, ptr %466, align 8, !tbaa !718
  %923 = getelementptr inbounds [16 x i32], ptr %5, i64 0, i64 %915
  %924 = load i32, ptr %923, align 4, !tbaa !18
  %925 = add i32 %916, 1
  %926 = add i32 %925, %924
  %927 = sext i32 %926 to i64
  %928 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 29, i64 %927
  store i32 %918, ptr %928, align 4, !tbaa !18
  br label %929

929:                                              ; preds = %920, %914
  %930 = phi i32 [ %926, %920 ], [ %916, %914 ]
  %931 = add nuw nsw i64 %915, 1
  %932 = icmp eq i64 %931, %913
  br i1 %932, label %987, label %914, !llvm.loop !813

933:                                              ; preds = %976, %899
  %934 = phi i32 [ 0, %899 ], [ %984, %976 ]
  %935 = phi i32 [ -1, %899 ], [ %981, %976 ]
  store i32 6, ptr %460, align 8, !tbaa !190
  %936 = load i32, ptr %46, align 8, !tbaa !195
  %937 = add i32 %936, -9
  %938 = icmp ult i32 %937, 6
  br i1 %938, label %939, label %943

939:                                              ; preds = %933
  %940 = sext i32 %937 to i64
  %941 = getelementptr inbounds [6 x i32], ptr @switch.table.readCBPandCoeffsFromNAL.11, i64 0, i64 %940
  %942 = load i32, ptr %941, align 4
  br label %943

943:                                              ; preds = %939, %933
  %944 = phi i32 [ 13, %933 ], [ %942, %939 ]
  store i32 %944, ptr %3, align 8, !tbaa !736
  %945 = add i32 %936, -9
  %946 = icmp ult i32 %945, 6
  br i1 %946, label %947, label %951

947:                                              ; preds = %943
  %948 = sext i32 %945 to i64
  %949 = getelementptr inbounds [6 x i32], ptr @switch.table.readCBPandCoeffsFromNAL.14, i64 0, i64 %948
  %950 = load i32, ptr %949, align 4
  br label %951

951:                                              ; preds = %947, %943
  %952 = phi i32 [ %950, %947 ], [ 0, %943 ]
  store i32 %952, ptr %459, align 8, !tbaa !204
  store i32 %904, ptr %854, align 4, !tbaa !203
  %953 = load ptr, ptr %461, align 8, !tbaa !214
  %954 = zext i32 %944 to i64
  %955 = getelementptr inbounds i32, ptr %25, i64 %954
  %956 = load i32, ptr %955, align 4, !tbaa !18
  %957 = sext i32 %956 to i64
  %958 = getelementptr inbounds %struct.datapartition, ptr %953, i64 %957
  %959 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %960 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %959, i64 0, i32 3
  %961 = load i32, ptr %960, align 4, !tbaa !490
  %962 = icmp eq i32 %961, 0
  br i1 %962, label %968, label %963

963:                                              ; preds = %951
  %964 = load ptr, ptr %958, align 8, !tbaa !448
  %965 = getelementptr inbounds %struct.Bitstream, ptr %964, i64 0, i32 5
  %966 = load i32, ptr %965, align 8, !tbaa !560
  %967 = icmp eq i32 %966, 0
  br i1 %967, label %969, label %968

968:                                              ; preds = %963, %951
  store ptr @linfo_levrun_c2x2, ptr %463, align 8, !tbaa !737
  br label %970

969:                                              ; preds = %963
  store ptr @readRunLevel_CABAC, ptr %462, align 8, !tbaa !211
  br label %970

970:                                              ; preds = %969, %968
  %971 = getelementptr inbounds %struct.datapartition, ptr %953, i64 %957, i32 2
  %972 = load ptr, ptr %971, align 8, !tbaa !738
  %973 = call i32 %972(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %958) #46
  %974 = load i32, ptr %464, align 4, !tbaa !173
  %975 = icmp eq i32 %974, 0
  br i1 %975, label %987, label %976

976:                                              ; preds = %970
  %977 = load i32, ptr %465, align 8, !tbaa !179
  %978 = load i64, ptr %466, align 8, !tbaa !718
  %979 = or i64 %978, %903
  store i64 %979, ptr %466, align 8, !tbaa !718
  %980 = add i32 %935, 1
  %981 = add i32 %980, %977
  %982 = sext i32 %981 to i64
  %983 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 29, i64 %982
  store i32 %974, ptr %983, align 4, !tbaa !18
  %984 = add nuw nsw i32 %934, 1
  %985 = load i32, ptr %870, align 8, !tbaa !706
  %986 = icmp slt i32 %934, %985
  br i1 %986, label %933, label %987, !llvm.loop !814

987:                                              ; preds = %976, %970, %929, %905, %896
  %988 = load i32, ptr %869, align 8, !tbaa !18
  br i1 %871, label %989, label %998

989:                                              ; preds = %987
  %990 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %881, i64 4
  store i32 %988, ptr %990, align 8, !tbaa !18
  %991 = load i32, ptr %872, align 4, !tbaa !18
  %992 = or i64 %881, 1
  %993 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %992, i64 4
  store i32 %991, ptr %993, align 8, !tbaa !18
  %994 = load i32, ptr %873, align 8, !tbaa !18
  %995 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %881, i64 5
  store i32 %994, ptr %995, align 8, !tbaa !18
  %996 = load i32, ptr %874, align 4, !tbaa !18
  %997 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %992, i64 5
  store i32 %996, ptr %997, align 8, !tbaa !18
  br label %1502

998:                                              ; preds = %987
  %999 = load i32, ptr %872, align 4, !tbaa !18
  %1000 = add nsw i32 %999, %988
  %1001 = load i32, ptr %873, align 8, !tbaa !18
  %1002 = load i32, ptr %874, align 4, !tbaa !18
  %1003 = add i32 %1002, %1001
  %1004 = add i32 %1003, %1000
  store i32 %1004, ptr %9, align 16, !tbaa !18
  %1005 = add i32 %988, %1001
  %1006 = add i32 %999, %1002
  %1007 = sub i32 %1005, %1006
  store i32 %1007, ptr %875, align 4, !tbaa !18
  %1008 = sub i32 %1000, %1003
  store i32 %1008, ptr %876, align 8, !tbaa !18
  %1009 = add i32 %999, %1001
  %1010 = sub i32 %988, %1009
  %1011 = add nsw i32 %1010, %1002
  store i32 %1011, ptr %877, align 4, !tbaa !18
  %1012 = load i32, ptr %870, align 8, !tbaa !706
  %1013 = icmp sgt i32 %1012, 0
  br i1 %1013, label %1014, label %1037

1014:                                             ; preds = %998
  %1015 = getelementptr inbounds [2 x i32], ptr %7, i64 0, i64 %883
  %1016 = load i32, ptr %1015, align 4, !tbaa !18
  %1017 = icmp slt i32 %1016, 5
  %1018 = add nsw i32 %1016, -5
  %1019 = sub nsw i32 5, %1016
  %1020 = zext i32 %1012 to i64
  %1021 = load i32, ptr %891, align 16, !tbaa !18
  br label %1022

1022:                                             ; preds = %1022, %1014
  %1023 = phi i64 [ 0, %1014 ], [ %1030, %1022 ]
  %1024 = getelementptr inbounds [4 x i32], ptr %9, i64 0, i64 %1023
  %1025 = load i32, ptr %1024, align 4, !tbaa !18
  %1026 = mul nsw i32 %1021, %1025
  %1027 = ashr i32 %1026, %1019
  %1028 = shl i32 %1026, %1018
  %1029 = select i1 %1017, i32 %1027, i32 %1028
  store i32 %1029, ptr %1024, align 4, !tbaa !18
  %1030 = add nuw nsw i64 %1023, 1
  %1031 = icmp eq i64 %1030, %1020
  br i1 %1031, label %1032, label %1022, !llvm.loop !815

1032:                                             ; preds = %1022
  %1033 = load i32, ptr %9, align 16, !tbaa !18
  %1034 = load i32, ptr %875, align 4, !tbaa !18
  %1035 = load i32, ptr %876, align 8, !tbaa !18
  %1036 = load i32, ptr %877, align 4, !tbaa !18
  br label %1037

1037:                                             ; preds = %1032, %998
  %1038 = phi i32 [ %1036, %1032 ], [ %1011, %998 ]
  %1039 = phi i32 [ %1035, %1032 ], [ %1008, %998 ]
  %1040 = phi i32 [ %1034, %1032 ], [ %1007, %998 ]
  %1041 = phi i32 [ %1033, %1032 ], [ %1004, %998 ]
  %1042 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %881, i64 4
  store i32 %1041, ptr %1042, align 8, !tbaa !18
  %1043 = or i64 %881, 1
  %1044 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1043, i64 4
  store i32 %1040, ptr %1044, align 8, !tbaa !18
  %1045 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %881, i64 5
  store i32 %1039, ptr %1045, align 8, !tbaa !18
  %1046 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1043, i64 5
  store i32 %1038, ptr %1046, align 8, !tbaa !18
  br label %1502

1047:                                             ; preds = %879
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #48
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(32) %12, i8 0, i64 32, i1 false)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #48
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(32) %13, i8 0, i64 32, i1 false)
  %1048 = getelementptr inbounds %struct.macroblock, ptr %17, i64 %18, i32 1, i64 %883
  %1049 = load i32, ptr %1048, align 4, !tbaa !18
  %1050 = add nsw i32 %1049, 3
  %1051 = load i32, ptr %853, align 8, !tbaa !705
  %1052 = add nsw i32 %1050, %1051
  %1053 = sdiv i32 %1052, 6
  %1054 = srem i32 %1052, 6
  %1055 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1056 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1055, i64 0, i32 3
  %1057 = load i32, ptr %1056, align 4, !tbaa !490
  %1058 = icmp eq i32 %1057, 0
  br i1 %1058, label %1063, label %1059

1059:                                             ; preds = %1047
  %1060 = shl nuw nsw i64 %881, 2
  %1061 = shl nuw nsw i64 16711680, %1060
  %1062 = trunc i64 %881 to i32
  br label %1095

1063:                                             ; preds = %1047
  call void @readCoeff4x4_CAVLC(ptr noundef nonnull %0, ptr poison, i32 noundef 6, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef nonnull %6) #47
  %1064 = load i32, ptr %6, align 4, !tbaa !18
  %1065 = icmp sgt i32 %1064, 0
  br i1 %1065, label %1066, label %1154

1066:                                             ; preds = %1063
  %1067 = shl nuw nsw i64 %881, 2
  %1068 = shl nuw nsw i64 16711680, %1067
  %1069 = zext i32 %1064 to i64
  br label %1070

1070:                                             ; preds = %1091, %1066
  %1071 = phi i64 [ 0, %1066 ], [ %1093, %1091 ]
  %1072 = phi i32 [ -1, %1066 ], [ %1092, %1091 ]
  %1073 = getelementptr inbounds [16 x i32], ptr %4, i64 0, i64 %1071
  %1074 = load i32, ptr %1073, align 4, !tbaa !18
  %1075 = icmp eq i32 %1074, 0
  br i1 %1075, label %1091, label %1076

1076:                                             ; preds = %1070
  %1077 = load i64, ptr %466, align 8, !tbaa !718
  %1078 = or i64 %1077, %1068
  store i64 %1078, ptr %466, align 8, !tbaa !718
  %1079 = getelementptr inbounds [16 x i32], ptr %5, i64 0, i64 %1071
  %1080 = load i32, ptr %1079, align 4, !tbaa !18
  %1081 = add i32 %1072, 1
  %1082 = add i32 %1081, %1080
  %1083 = sext i32 %1082 to i64
  %1084 = getelementptr inbounds [8 x [2 x i8]], ptr @SCAN_YUV422, i64 0, i64 %1083
  %1085 = load i8, ptr %1084, align 2, !tbaa !14
  %1086 = getelementptr inbounds [8 x [2 x i8]], ptr @SCAN_YUV422, i64 0, i64 %1083, i64 1
  %1087 = load i8, ptr %1086, align 1, !tbaa !14
  %1088 = zext i8 %1085 to i64
  %1089 = zext i8 %1087 to i64
  %1090 = getelementptr inbounds [2 x [4 x i32]], ptr %12, i64 0, i64 %1088, i64 %1089
  store i32 %1074, ptr %1090, align 4, !tbaa !18
  br label %1091

1091:                                             ; preds = %1076, %1070
  %1092 = phi i32 [ %1082, %1076 ], [ %1072, %1070 ]
  %1093 = add nuw nsw i64 %1071, 1
  %1094 = icmp eq i64 %1093, %1069
  br i1 %1094, label %1154, label %1070, !llvm.loop !816

1095:                                             ; preds = %1138, %1059
  %1096 = phi i32 [ 0, %1059 ], [ %1152, %1138 ]
  %1097 = phi i32 [ -1, %1059 ], [ %1143, %1138 ]
  store i32 8, ptr %460, align 8, !tbaa !190
  %1098 = load i32, ptr %46, align 8, !tbaa !195
  %1099 = add i32 %1098, -9
  %1100 = icmp ult i32 %1099, 6
  br i1 %1100, label %1101, label %1105

1101:                                             ; preds = %1095
  %1102 = sext i32 %1099 to i64
  %1103 = getelementptr inbounds [6 x i32], ptr @switch.table.readCBPandCoeffsFromNAL.11, i64 0, i64 %1102
  %1104 = load i32, ptr %1103, align 4
  br label %1105

1105:                                             ; preds = %1101, %1095
  %1106 = phi i32 [ 13, %1095 ], [ %1104, %1101 ]
  store i32 %1106, ptr %3, align 8, !tbaa !736
  %1107 = add i32 %1098, -9
  %1108 = icmp ult i32 %1107, 6
  br i1 %1108, label %1109, label %1113

1109:                                             ; preds = %1105
  %1110 = sext i32 %1107 to i64
  %1111 = getelementptr inbounds [6 x i32], ptr @switch.table.readCBPandCoeffsFromNAL.14, i64 0, i64 %1110
  %1112 = load i32, ptr %1111, align 4
  br label %1113

1113:                                             ; preds = %1109, %1105
  %1114 = phi i32 [ %1112, %1109 ], [ 0, %1105 ]
  store i32 %1114, ptr %459, align 8, !tbaa !204
  store i32 %1062, ptr %854, align 4, !tbaa !203
  %1115 = load ptr, ptr %461, align 8, !tbaa !214
  %1116 = zext i32 %1106 to i64
  %1117 = getelementptr inbounds i32, ptr %25, i64 %1116
  %1118 = load i32, ptr %1117, align 4, !tbaa !18
  %1119 = sext i32 %1118 to i64
  %1120 = getelementptr inbounds %struct.datapartition, ptr %1115, i64 %1119
  %1121 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1122 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1121, i64 0, i32 3
  %1123 = load i32, ptr %1122, align 4, !tbaa !490
  %1124 = icmp eq i32 %1123, 0
  br i1 %1124, label %1130, label %1125

1125:                                             ; preds = %1113
  %1126 = load ptr, ptr %1120, align 8, !tbaa !448
  %1127 = getelementptr inbounds %struct.Bitstream, ptr %1126, i64 0, i32 5
  %1128 = load i32, ptr %1127, align 8, !tbaa !560
  %1129 = icmp eq i32 %1128, 0
  br i1 %1129, label %1131, label %1130

1130:                                             ; preds = %1125, %1113
  store ptr @linfo_levrun_c2x2, ptr %463, align 8, !tbaa !737
  br label %1132

1131:                                             ; preds = %1125
  store ptr @readRunLevel_CABAC, ptr %462, align 8, !tbaa !211
  br label %1132

1132:                                             ; preds = %1131, %1130
  %1133 = getelementptr inbounds %struct.datapartition, ptr %1115, i64 %1119, i32 2
  %1134 = load ptr, ptr %1133, align 8, !tbaa !738
  %1135 = call i32 %1134(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %1120) #46
  %1136 = load i32, ptr %464, align 4, !tbaa !173
  %1137 = icmp eq i32 %1136, 0
  br i1 %1137, label %1154, label %1138

1138:                                             ; preds = %1132
  %1139 = load i32, ptr %465, align 8, !tbaa !179
  %1140 = load i64, ptr %466, align 8, !tbaa !718
  %1141 = or i64 %1140, %1061
  store i64 %1141, ptr %466, align 8, !tbaa !718
  %1142 = add i32 %1097, 1
  %1143 = add i32 %1142, %1139
  %1144 = sext i32 %1143 to i64
  %1145 = getelementptr inbounds [8 x [2 x i8]], ptr @SCAN_YUV422, i64 0, i64 %1144
  %1146 = load i8, ptr %1145, align 2, !tbaa !14
  %1147 = getelementptr inbounds [8 x [2 x i8]], ptr @SCAN_YUV422, i64 0, i64 %1144, i64 1
  %1148 = load i8, ptr %1147, align 1, !tbaa !14
  %1149 = zext i8 %1146 to i64
  %1150 = zext i8 %1148 to i64
  %1151 = getelementptr inbounds [2 x [4 x i32]], ptr %12, i64 0, i64 %1149, i64 %1150
  store i32 %1136, ptr %1151, align 4, !tbaa !18
  %1152 = add nuw nsw i32 %1096, 1
  %1153 = icmp ult i32 %1096, 8
  br i1 %1153, label %1095, label %1154, !llvm.loop !817

1154:                                             ; preds = %1138, %1132, %1091, %1063
  br i1 %66, label %1172, label %1155

1155:                                             ; preds = %1154
  %1156 = load i32, ptr %12, align 16, !tbaa !18
  %1157 = load i32, ptr %855, align 16, !tbaa !18
  %1158 = add nsw i32 %1157, %1156
  store i32 %1158, ptr %13, align 16, !tbaa !18
  %1159 = load i32, ptr %856, align 4, !tbaa !18
  %1160 = load i32, ptr %857, align 4, !tbaa !18
  %1161 = add nsw i32 %1160, %1159
  store i32 %1161, ptr %858, align 4, !tbaa !18
  %1162 = load i32, ptr %859, align 8, !tbaa !18
  %1163 = load i32, ptr %860, align 8, !tbaa !18
  %1164 = add nsw i32 %1163, %1162
  store i32 %1164, ptr %861, align 8, !tbaa !18
  %1165 = load i32, ptr %862, align 4, !tbaa !18
  %1166 = load i32, ptr %863, align 4, !tbaa !18
  %1167 = add nsw i32 %1166, %1165
  store i32 %1167, ptr %864, align 4, !tbaa !18
  %1168 = sub nsw i32 %1156, %1157
  store i32 %1168, ptr %865, align 16, !tbaa !18
  %1169 = sub nsw i32 %1159, %1160
  store i32 %1169, ptr %866, align 4, !tbaa !18
  %1170 = sub nsw i32 %1162, %1163
  store i32 %1170, ptr %867, align 8, !tbaa !18
  %1171 = sub nsw i32 %1165, %1166
  store i32 %1171, ptr %868, align 4, !tbaa !18
  br label %1186

1172:                                             ; preds = %1184, %1154
  %1173 = phi i1 [ false, %1184 ], [ true, %1154 ]
  %1174 = phi i64 [ 1, %1184 ], [ 0, %1154 ]
  %1175 = or i64 %1174, %881
  br label %1176

1176:                                             ; preds = %1176, %1172
  %1177 = phi i64 [ 0, %1172 ], [ %1182, %1176 ]
  %1178 = getelementptr inbounds [2 x [4 x i32]], ptr %12, i64 0, i64 %1174, i64 %1177
  %1179 = load i32, ptr %1178, align 4, !tbaa !18
  %1180 = add nuw nsw i64 %1177, 4
  %1181 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1175, i64 %1180
  store i32 %1179, ptr %1181, align 8, !tbaa !18
  %1182 = add nuw nsw i64 %1177, 1
  %1183 = icmp eq i64 %1182, 4
  br i1 %1183, label %1184, label %1176, !llvm.loop !818

1184:                                             ; preds = %1176
  br i1 %1173, label %1172, label %1185, !llvm.loop !819

1185:                                             ; preds = %1184
  br i1 %66, label %1268, label %1186

1186:                                             ; preds = %1185, %1155
  %1187 = icmp slt i32 %1052, 24
  %1188 = sext i32 %1054 to i64
  %1189 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]], ptr @InvLevelScale4x4Chroma_Inter, i64 0, i64 %883, i64 %1188
  %1190 = add nsw i32 %1053, -4
  %1191 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]], ptr @InvLevelScale4x4Chroma_Intra, i64 0, i64 %883, i64 %1188
  %1192 = sub nsw i32 3, %1053
  %1193 = shl nuw i32 1, %1192
  %1194 = sub nsw i32 4, %1053
  br label %1195

1195:                                             ; preds = %1267, %1186
  %1196 = phi i1 [ true, %1186 ], [ false, %1267 ]
  %1197 = phi i64 [ 0, %1186 ], [ 1, %1267 ]
  %1198 = shl nuw nsw i64 %1197, 4
  %1199 = getelementptr i8, ptr %13, i64 %1198
  %1200 = or i64 %1197, %881
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %10, ptr noundef nonnull align 16 dereferenceable(16) %1199, i64 16, i1 false), !tbaa !18
  %1201 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1200
  %1202 = load <4 x i32>, ptr %10, align 16, !tbaa !18
  %1203 = shufflevector <4 x i32> %1202, <4 x i32> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %1204 = add nsw <4 x i32> %1202, %1203
  %1205 = sub nsw <4 x i32> %1202, %1203
  %1206 = shufflevector <4 x i32> %1204, <4 x i32> %1205, <4 x i32> <i32 2, i32 4, i32 5, i32 3>
  store <4 x i32> %1206, ptr %11, align 16, !tbaa !18
  br label %1207

1207:                                             ; preds = %1263, %1195
  %1208 = phi i1 [ true, %1195 ], [ false, %1263 ]
  %1209 = phi i64 [ 0, %1195 ], [ 1, %1263 ]
  %1210 = xor i64 %1209, 3
  %1211 = getelementptr inbounds [4 x i32], ptr %11, i64 0, i64 %1209
  %1212 = load i32, ptr %1211, align 4, !tbaa !18
  %1213 = getelementptr inbounds [4 x i32], ptr %11, i64 0, i64 %1210
  %1214 = load i32, ptr %1213, align 4, !tbaa !18
  %1215 = add nsw i32 %1214, %1212
  %1216 = or i64 %1209, 4
  %1217 = getelementptr inbounds [4 x [4 x i32]], ptr %1201, i64 %1216
  %1218 = sub nsw i32 %1212, %1214
  %1219 = xor i64 %1209, 7
  %1220 = getelementptr inbounds [4 x [4 x i32]], ptr %1201, i64 %1219
  br i1 %1187, label %1221, label %1244

1221:                                             ; preds = %1207
  br i1 %52, label %1222, label %1233

1222:                                             ; preds = %1221
  %1223 = load i32, ptr %1191, align 16, !tbaa !18
  %1224 = mul nsw i32 %1215, %1223
  %1225 = add nsw i32 %1224, %1193
  %1226 = ashr i32 %1225, %1194
  %1227 = add nsw i32 %1226, 2
  %1228 = ashr i32 %1227, 2
  store i32 %1228, ptr %1217, align 4, !tbaa !18
  %1229 = load i32, ptr %1191, align 16, !tbaa !18
  %1230 = mul nsw i32 %1229, %1218
  %1231 = add nsw i32 %1230, %1193
  %1232 = ashr i32 %1231, %1194
  br label %1263

1233:                                             ; preds = %1221
  %1234 = load i32, ptr %1189, align 16, !tbaa !18
  %1235 = mul nsw i32 %1215, %1234
  %1236 = add nsw i32 %1235, %1193
  %1237 = ashr i32 %1236, %1194
  %1238 = add nsw i32 %1237, 2
  %1239 = ashr i32 %1238, 2
  store i32 %1239, ptr %1217, align 4, !tbaa !18
  %1240 = load i32, ptr %1189, align 16, !tbaa !18
  %1241 = mul nsw i32 %1240, %1218
  %1242 = add nsw i32 %1241, %1193
  %1243 = ashr i32 %1242, %1194
  br label %1263

1244:                                             ; preds = %1207
  br i1 %52, label %1245, label %1254

1245:                                             ; preds = %1244
  %1246 = load i32, ptr %1191, align 16, !tbaa !18
  %1247 = mul nsw i32 %1215, %1246
  %1248 = shl i32 %1247, %1190
  %1249 = add nsw i32 %1248, 2
  %1250 = ashr i32 %1249, 2
  store i32 %1250, ptr %1217, align 4, !tbaa !18
  %1251 = load i32, ptr %1191, align 16, !tbaa !18
  %1252 = mul nsw i32 %1251, %1218
  %1253 = shl i32 %1252, %1190
  br label %1263

1254:                                             ; preds = %1244
  %1255 = load i32, ptr %1189, align 16, !tbaa !18
  %1256 = mul nsw i32 %1215, %1255
  %1257 = shl i32 %1256, %1190
  %1258 = add nsw i32 %1257, 2
  %1259 = ashr i32 %1258, 2
  store i32 %1259, ptr %1217, align 4, !tbaa !18
  %1260 = load i32, ptr %1189, align 16, !tbaa !18
  %1261 = mul nsw i32 %1260, %1218
  %1262 = shl i32 %1261, %1190
  br label %1263

1263:                                             ; preds = %1254, %1245, %1233, %1222
  %1264 = phi i32 [ %1243, %1233 ], [ %1232, %1222 ], [ %1262, %1254 ], [ %1253, %1245 ]
  %1265 = add nsw i32 %1264, 2
  %1266 = ashr i32 %1265, 2
  store i32 %1266, ptr %1220, align 4, !tbaa !18
  br i1 %1208, label %1207, label %1267, !llvm.loop !820

1267:                                             ; preds = %1263
  br i1 %1196, label %1195, label %1268, !llvm.loop !821

1268:                                             ; preds = %1267, %1185
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #48
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #48
  br label %1502

1269:                                             ; preds = %879
  %1270 = shl nuw nsw i64 %881, 1
  %1271 = add nuw nsw i64 %1270, 4
  %1272 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1273 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1272, i64 0, i32 3
  %1274 = load i32, ptr %1273, align 4, !tbaa !490
  %1275 = icmp eq i32 %1274, 0
  br i1 %1275, label %1280, label %1276

1276:                                             ; preds = %1269
  %1277 = shl nuw nsw i64 %881, 3
  %1278 = shl nuw nsw i64 4294901760, %1277
  %1279 = trunc i64 %881 to i32
  br label %1313

1280:                                             ; preds = %1269
  call void @readCoeff4x4_CAVLC(ptr noundef %0, ptr poison, i32 noundef 6, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef nonnull %6) #47
  %1281 = load i32, ptr %6, align 4, !tbaa !18
  %1282 = icmp sgt i32 %1281, 0
  br i1 %1282, label %1283, label %1373

1283:                                             ; preds = %1280
  %1284 = shl nuw nsw i64 %881, 3
  %1285 = shl nuw nsw i64 4294901760, %1284
  %1286 = zext i32 %1281 to i64
  br label %1287

1287:                                             ; preds = %1309, %1283
  %1288 = phi i64 [ 0, %1283 ], [ %1311, %1309 ]
  %1289 = phi i32 [ -1, %1283 ], [ %1310, %1309 ]
  %1290 = getelementptr inbounds [16 x i32], ptr %4, i64 0, i64 %1288
  %1291 = load i32, ptr %1290, align 4, !tbaa !18
  %1292 = icmp eq i32 %1291, 0
  br i1 %1292, label %1309, label %1293

1293:                                             ; preds = %1287
  %1294 = load i64, ptr %466, align 8, !tbaa !718
  %1295 = or i64 %1294, %1285
  store i64 %1295, ptr %466, align 8, !tbaa !718
  %1296 = getelementptr inbounds [16 x i32], ptr %5, i64 0, i64 %1288
  %1297 = load i32, ptr %1296, align 4, !tbaa !18
  %1298 = add i32 %1289, 1
  %1299 = add i32 %1298, %1297
  %1300 = sext i32 %1299 to i64
  %1301 = getelementptr inbounds [16 x [2 x i8]], ptr @SNGL_SCAN, i64 0, i64 %1300
  %1302 = load i8, ptr %1301, align 2, !tbaa !14
  %1303 = getelementptr inbounds [16 x [2 x i8]], ptr @SNGL_SCAN, i64 0, i64 %1300, i64 1
  %1304 = load i8, ptr %1303, align 1, !tbaa !14
  %1305 = zext i8 %1304 to i64
  %1306 = zext i8 %1302 to i64
  %1307 = add nuw nsw i64 %1271, %1305
  %1308 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1306, i64 %1307
  store i32 %1291, ptr %1308, align 8, !tbaa !18
  br label %1309

1309:                                             ; preds = %1293, %1287
  %1310 = phi i32 [ %1299, %1293 ], [ %1289, %1287 ]
  %1311 = add nuw nsw i64 %1288, 1
  %1312 = icmp eq i64 %1311, %1286
  br i1 %1312, label %1373, label %1287, !llvm.loop !822

1313:                                             ; preds = %1356, %1276
  %1314 = phi i32 [ 0, %1276 ], [ %1371, %1356 ]
  %1315 = phi i32 [ -1, %1276 ], [ %1361, %1356 ]
  store i32 9, ptr %460, align 8, !tbaa !190
  %1316 = load i32, ptr %46, align 8, !tbaa !195
  %1317 = add i32 %1316, -9
  %1318 = icmp ult i32 %1317, 6
  br i1 %1318, label %1319, label %1323

1319:                                             ; preds = %1313
  %1320 = sext i32 %1317 to i64
  %1321 = getelementptr inbounds [6 x i32], ptr @switch.table.readCBPandCoeffsFromNAL.11, i64 0, i64 %1320
  %1322 = load i32, ptr %1321, align 4
  br label %1323

1323:                                             ; preds = %1319, %1313
  %1324 = phi i32 [ 13, %1313 ], [ %1322, %1319 ]
  store i32 %1324, ptr %3, align 8, !tbaa !736
  %1325 = add i32 %1316, -9
  %1326 = icmp ult i32 %1325, 6
  br i1 %1326, label %1327, label %1331

1327:                                             ; preds = %1323
  %1328 = sext i32 %1325 to i64
  %1329 = getelementptr inbounds [6 x i32], ptr @switch.table.readCBPandCoeffsFromNAL.14, i64 0, i64 %1328
  %1330 = load i32, ptr %1329, align 4
  br label %1331

1331:                                             ; preds = %1327, %1323
  %1332 = phi i32 [ %1330, %1327 ], [ 0, %1323 ]
  store i32 %1332, ptr %459, align 8, !tbaa !204
  store i32 %1279, ptr %854, align 4, !tbaa !203
  %1333 = load ptr, ptr %461, align 8, !tbaa !214
  %1334 = zext i32 %1324 to i64
  %1335 = getelementptr inbounds i32, ptr %25, i64 %1334
  %1336 = load i32, ptr %1335, align 4, !tbaa !18
  %1337 = sext i32 %1336 to i64
  %1338 = getelementptr inbounds %struct.datapartition, ptr %1333, i64 %1337
  %1339 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1340 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1339, i64 0, i32 3
  %1341 = load i32, ptr %1340, align 4, !tbaa !490
  %1342 = icmp eq i32 %1341, 0
  br i1 %1342, label %1348, label %1343

1343:                                             ; preds = %1331
  %1344 = load ptr, ptr %1338, align 8, !tbaa !448
  %1345 = getelementptr inbounds %struct.Bitstream, ptr %1344, i64 0, i32 5
  %1346 = load i32, ptr %1345, align 8, !tbaa !560
  %1347 = icmp eq i32 %1346, 0
  br i1 %1347, label %1349, label %1348

1348:                                             ; preds = %1343, %1331
  store ptr @linfo_levrun_c2x2, ptr %463, align 8, !tbaa !737
  br label %1350

1349:                                             ; preds = %1343
  store ptr @readRunLevel_CABAC, ptr %462, align 8, !tbaa !211
  br label %1350

1350:                                             ; preds = %1349, %1348
  %1351 = getelementptr inbounds %struct.datapartition, ptr %1333, i64 %1337, i32 2
  %1352 = load ptr, ptr %1351, align 8, !tbaa !738
  %1353 = call i32 %1352(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %1338) #46
  %1354 = load i32, ptr %464, align 4, !tbaa !173
  %1355 = icmp eq i32 %1354, 0
  br i1 %1355, label %1373, label %1356

1356:                                             ; preds = %1350
  %1357 = load i32, ptr %465, align 8, !tbaa !179
  %1358 = load i64, ptr %466, align 8, !tbaa !718
  %1359 = or i64 %1358, %1278
  store i64 %1359, ptr %466, align 8, !tbaa !718
  %1360 = add i32 %1315, 1
  %1361 = add i32 %1360, %1357
  %1362 = sext i32 %1361 to i64
  %1363 = getelementptr inbounds [16 x [2 x i8]], ptr @SNGL_SCAN, i64 0, i64 %1362
  %1364 = load i8, ptr %1363, align 2, !tbaa !14
  %1365 = getelementptr inbounds [16 x [2 x i8]], ptr @SNGL_SCAN, i64 0, i64 %1362, i64 1
  %1366 = load i8, ptr %1365, align 1, !tbaa !14
  %1367 = zext i8 %1366 to i64
  %1368 = zext i8 %1364 to i64
  %1369 = add nuw nsw i64 %1271, %1367
  %1370 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1368, i64 %1369
  store i32 %1354, ptr %1370, align 8, !tbaa !18
  %1371 = add nuw nsw i32 %1314, 1
  %1372 = icmp ult i32 %1314, 16
  br i1 %1372, label %1313, label %1373, !llvm.loop !823

1373:                                             ; preds = %1356, %1350, %1309, %1280
  %1374 = or i64 %1270, 8
  br i1 %66, label %1502, label %1390

1375:                                             ; preds = %1420
  %.lcssa = phi <4 x i32> [ %1403, %1420 ]
  store <4 x i32> %.lcssa, ptr %10, align 16, !tbaa !18
  %1376 = getelementptr inbounds [2 x i32], ptr %7, i64 0, i64 %883
  %1377 = load i32, ptr %1376, align 4, !tbaa !18
  %1378 = icmp slt i32 %1377, 4
  %1379 = getelementptr inbounds [2 x i32], ptr %8, i64 0, i64 %883
  %1380 = add nsw i32 %1377, -4
  %1381 = sub nsw i32 3, %1377
  %1382 = shl nuw i32 1, %1381
  %1383 = sub nsw i32 4, %1377
  %1384 = load i32, ptr %1379, align 4, !tbaa !18
  %1385 = sext i32 %1384 to i64
  %1386 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]], ptr @InvLevelScale4x4Chroma_Inter, i64 0, i64 %883, i64 %1385
  %1387 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]], ptr @InvLevelScale4x4Chroma_Intra, i64 0, i64 %883, i64 %1385
  %1388 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]], ptr @InvLevelScale4x4Chroma_Inter, i64 0, i64 %883, i64 %1385
  %1389 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]], ptr @InvLevelScale4x4Chroma_Intra, i64 0, i64 %883, i64 %1385
  br label %1423

1390:                                             ; preds = %1420, %1373
  %1391 = phi i64 [ %1421, %1420 ], [ %882, %1373 ]
  %1392 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 0, i64 %1391
  %1393 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 1, i64 %1391
  %1394 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 2, i64 %1391
  %1395 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 3, i64 %1391
  %1396 = load i32, ptr %1392, align 8, !tbaa !18
  %1397 = load i32, ptr %1393, align 8, !tbaa !18
  %1398 = load i32, ptr %1394, align 8, !tbaa !18
  %1399 = load i32, ptr %1395, align 8, !tbaa !18
  %1400 = insertelement <4 x i32> poison, i32 %1396, i64 0
  %1401 = insertelement <4 x i32> %1400, i32 %1397, i64 1
  %1402 = insertelement <4 x i32> %1401, i32 %1398, i64 2
  %1403 = insertelement <4 x i32> %1402, i32 %1399, i64 3
  %1404 = shufflevector <4 x i32> %1403, <4 x i32> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %1405 = add nsw <4 x i32> %1403, %1404
  %1406 = sub nsw <4 x i32> %1403, %1404
  %1407 = shufflevector <4 x i32> %1405, <4 x i32> %1406, <4 x i32> <i32 2, i32 4, i32 5, i32 3>
  store <4 x i32> %1407, ptr %11, align 16, !tbaa !18
  br label %1408

1408:                                             ; preds = %1408, %1390
  %1409 = phi i1 [ true, %1390 ], [ false, %1408 ]
  %1410 = phi i64 [ 0, %1390 ], [ 1, %1408 ]
  %1411 = xor i64 %1410, 3
  %1412 = getelementptr inbounds [4 x i32], ptr %11, i64 0, i64 %1410
  %1413 = load i32, ptr %1412, align 4, !tbaa !18
  %1414 = getelementptr inbounds [4 x i32], ptr %11, i64 0, i64 %1411
  %1415 = load i32, ptr %1414, align 4, !tbaa !18
  %1416 = add nsw i32 %1415, %1413
  %1417 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1410, i64 %1391
  store i32 %1416, ptr %1417, align 8, !tbaa !18
  %1418 = sub nsw i32 %1413, %1415
  %1419 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1411, i64 %1391
  store i32 %1418, ptr %1419, align 8, !tbaa !18
  br i1 %1409, label %1408, label %1420, !llvm.loop !824

1420:                                             ; preds = %1408
  %1421 = add nuw nsw i64 %1391, 1
  %1422 = icmp ult i64 %1421, %1374
  br i1 %1422, label %1390, label %1375, !llvm.loop !825

1423:                                             ; preds = %1499, %1375
  %1424 = phi i64 [ 0, %1375 ], [ %1500, %1499 ]
  br label %1425

1425:                                             ; preds = %1425, %1423
  %1426 = phi i64 [ 0, %1423 ], [ %1431, %1425 ]
  %1427 = add nuw nsw i64 %1426, %1271
  %1428 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1424, i64 %1427
  %1429 = load i32, ptr %1428, align 8, !tbaa !18
  %1430 = getelementptr inbounds [4 x i32], ptr %10, i64 0, i64 %1426
  store i32 %1429, ptr %1430, align 4, !tbaa !18
  %1431 = add nuw nsw i64 %1426, 1
  %1432 = icmp eq i64 %1431, 4
  br i1 %1432, label %1433, label %1425, !llvm.loop !826

1433:                                             ; preds = %1425
  %1434 = load <4 x i32>, ptr %10, align 16, !tbaa !18
  %1435 = shufflevector <4 x i32> %1434, <4 x i32> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %1436 = add nsw <4 x i32> %1434, %1435
  %1437 = sub nsw <4 x i32> %1434, %1435
  %1438 = shufflevector <4 x i32> %1436, <4 x i32> %1437, <4 x i32> <i32 2, i32 4, i32 5, i32 3>
  store <4 x i32> %1438, ptr %11, align 16, !tbaa !18
  br label %1439

1439:                                             ; preds = %1495, %1433
  %1440 = phi i1 [ true, %1433 ], [ false, %1495 ]
  %1441 = phi i64 [ 0, %1433 ], [ 1, %1495 ]
  %1442 = xor i64 %1441, 3
  %1443 = getelementptr inbounds [4 x i32], ptr %11, i64 0, i64 %1441
  %1444 = load i32, ptr %1443, align 4, !tbaa !18
  %1445 = getelementptr inbounds [4 x i32], ptr %11, i64 0, i64 %1442
  %1446 = load i32, ptr %1445, align 4, !tbaa !18
  %1447 = add nsw i32 %1446, %1444
  %1448 = or i64 %1441, %1271
  %1449 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1424, i64 %1448
  %1450 = sub nsw i32 %1444, %1446
  %1451 = or i64 %1442, %1271
  %1452 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1424, i64 %1451
  br i1 %1378, label %1453, label %1476

1453:                                             ; preds = %1439
  br i1 %52, label %1454, label %1465

1454:                                             ; preds = %1453
  %1455 = load i32, ptr %1389, align 16, !tbaa !18
  %1456 = mul nsw i32 %1455, %1447
  %1457 = add nsw i32 %1456, %1382
  %1458 = ashr i32 %1457, %1383
  %1459 = add nsw i32 %1458, 2
  %1460 = ashr i32 %1459, 2
  store i32 %1460, ptr %1449, align 8, !tbaa !18
  %1461 = load i32, ptr %1389, align 16, !tbaa !18
  %1462 = mul nsw i32 %1461, %1450
  %1463 = add nsw i32 %1462, %1382
  %1464 = ashr i32 %1463, %1383
  br label %1495

1465:                                             ; preds = %1453
  %1466 = load i32, ptr %1388, align 16, !tbaa !18
  %1467 = mul nsw i32 %1466, %1447
  %1468 = add nsw i32 %1467, %1382
  %1469 = ashr i32 %1468, %1383
  %1470 = add nsw i32 %1469, 2
  %1471 = ashr i32 %1470, 2
  store i32 %1471, ptr %1449, align 8, !tbaa !18
  %1472 = load i32, ptr %1388, align 16, !tbaa !18
  %1473 = mul nsw i32 %1472, %1450
  %1474 = add nsw i32 %1473, %1382
  %1475 = ashr i32 %1474, %1383
  br label %1495

1476:                                             ; preds = %1439
  br i1 %52, label %1477, label %1486

1477:                                             ; preds = %1476
  %1478 = load i32, ptr %1387, align 16, !tbaa !18
  %1479 = mul nsw i32 %1478, %1447
  %1480 = shl i32 %1479, %1380
  %1481 = add nsw i32 %1480, 2
  %1482 = ashr i32 %1481, 2
  store i32 %1482, ptr %1449, align 8, !tbaa !18
  %1483 = load i32, ptr %1387, align 16, !tbaa !18
  %1484 = mul nsw i32 %1483, %1450
  %1485 = shl i32 %1484, %1380
  br label %1495

1486:                                             ; preds = %1476
  %1487 = load i32, ptr %1386, align 16, !tbaa !18
  %1488 = mul nsw i32 %1487, %1447
  %1489 = shl i32 %1488, %1380
  %1490 = add nsw i32 %1489, 2
  %1491 = ashr i32 %1490, 2
  store i32 %1491, ptr %1449, align 8, !tbaa !18
  %1492 = load i32, ptr %1386, align 16, !tbaa !18
  %1493 = mul nsw i32 %1492, %1450
  %1494 = shl i32 %1493, %1380
  br label %1495

1495:                                             ; preds = %1486, %1477, %1465, %1454
  %1496 = phi i32 [ %1475, %1465 ], [ %1464, %1454 ], [ %1494, %1486 ], [ %1485, %1477 ]
  %1497 = add nsw i32 %1496, 2
  %1498 = ashr i32 %1497, 2
  store i32 %1498, ptr %1452, align 8, !tbaa !18
  br i1 %1440, label %1439, label %1499, !llvm.loop !827

1499:                                             ; preds = %1495
  %1500 = add nuw nsw i64 %1424, 1
  %1501 = icmp ugt i64 %1424, 2
  br i1 %1501, label %1502, label %1423, !llvm.loop !828

1502:                                             ; preds = %1499, %1373, %1268, %1037, %989
  %1503 = add nuw nsw i64 %882, 4
  br i1 %880, label %879, label %1504, !llvm.loop !829

1504:                                             ; preds = %1502
  %1505 = icmp slt i32 %249, 32
  br i1 %1505, label %1506, label %1524

1506:                                             ; preds = %1504, %850
  br label %1507

1507:                                             ; preds = %1507, %1506
  %1508 = phi i64 [ %1520, %1507 ], [ 0, %1506 ]
  %1509 = load ptr, ptr %467, align 8, !tbaa !617
  %1510 = load i32, ptr %14, align 4, !tbaa !49
  %1511 = zext i32 %1510 to i64
  %1512 = getelementptr inbounds ptr, ptr %1509, i64 %1511
  %1513 = load ptr, ptr %1512, align 8, !tbaa !13
  %1514 = getelementptr inbounds ptr, ptr %1513, i64 %1508
  %1515 = load ptr, ptr %1514, align 8, !tbaa !13
  %1516 = getelementptr inbounds i32, ptr %1515, i64 4
  %1517 = load i32, ptr %834, align 4, !tbaa !93
  %1518 = sext i32 %1517 to i64
  %1519 = shl nsw i64 %1518, 2
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %1516, i8 0, i64 %1519, i1 false)
  %1520 = add nuw nsw i64 %1508, 1
  %1521 = icmp eq i64 %1520, 4
  br i1 %1521, label %1522, label %1507, !llvm.loop !830

1522:                                             ; preds = %1507
  %1523 = icmp sgt i32 %249, 31
  br i1 %1523, label %1524, label %1770

1524:                                             ; preds = %1522, %1504
  %1525 = load i32, ptr %834, align 4, !tbaa !93
  %1526 = icmp sgt i32 %1525, 0
  br i1 %1526, label %1527, label %1770

1527:                                             ; preds = %1524
  %1528 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 43
  %1529 = sext i32 %56 to i64
  %1530 = select i1 %52, ptr @InvLevelScale4x4Chroma_Intra, ptr @InvLevelScale4x4Chroma_Inter
  br label %1531

1531:                                             ; preds = %1765, %1527
  %1532 = phi i64 [ 0, %1527 ], [ %1766, %1765 ]
  %1533 = phi i32 [ %1525, %1527 ], [ %1767, %1765 ]
  %1534 = ashr i32 %1533, 1
  %1535 = sext i32 %1534 to i64
  %1536 = icmp sge i64 %1532, %1535
  %1537 = zext i1 %1536 to i32
  %1538 = zext i1 %1536 to i64
  %1539 = getelementptr inbounds [2 x i32], ptr %8, i64 0, i64 %1538
  %1540 = load i32, ptr %1539, align 4, !tbaa !18
  %1541 = sext i32 %1540 to i64
  %1542 = getelementptr inbounds [2 x [6 x [4 x [4 x i32]]]], ptr %1530, i64 0, i64 %1538, i64 %1541
  store i32 %1537, ptr %1528, align 4, !tbaa !203
  %1543 = getelementptr inbounds [2 x i32], ptr %7, i64 0, i64 %1538
  br label %1544

1544:                                             ; preds = %1762, %1531
  %1545 = phi i64 [ 0, %1531 ], [ %1763, %1762 ]
  %1546 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %1529, i64 %1532, i64 %1545
  %1547 = load i8, ptr %1546, align 1, !tbaa !14
  %1548 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %1529, i64 %1532, i64 %1545
  %1549 = load i8, ptr %1548, align 1, !tbaa !14
  %1550 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1551 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1550, i64 0, i32 3
  %1552 = load i32, ptr %1551, align 4, !tbaa !490
  %1553 = icmp eq i32 %1552, 0
  br i1 %1553, label %1554, label %1634

1554:                                             ; preds = %1544
  %1555 = zext i8 %1549 to i32
  %1556 = zext i8 %1547 to i32
  call void @readCoeff4x4_CAVLC(ptr noundef %0, ptr poison, i32 noundef 7, i32 noundef %1556, i32 noundef %1555, ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef nonnull %6) #47
  %1557 = load i32, ptr %6, align 4, !tbaa !18
  %1558 = icmp sgt i32 %1557, 0
  br i1 %66, label %1565, label %1559

1559:                                             ; preds = %1554
  br i1 %1558, label %1560, label %1762

1560:                                             ; preds = %1559
  %1561 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %1532, i64 %1545
  %1562 = zext i8 %1547 to i64
  %1563 = zext i8 %1549 to i64
  %1564 = zext i32 %1557 to i64
  br label %1571

1565:                                             ; preds = %1554
  br i1 %1558, label %1566, label %1762

1566:                                             ; preds = %1565
  %1567 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %1532, i64 %1545
  %1568 = zext i8 %1547 to i64
  %1569 = zext i8 %1549 to i64
  %1570 = zext i32 %1557 to i64
  br label %1606

1571:                                             ; preds = %1602, %1560
  %1572 = phi i64 [ 0, %1560 ], [ %1604, %1602 ]
  %1573 = phi i32 [ 0, %1560 ], [ %1603, %1602 ]
  %1574 = getelementptr inbounds [16 x i32], ptr %4, i64 0, i64 %1572
  %1575 = load i32, ptr %1574, align 4, !tbaa !18
  %1576 = icmp eq i32 %1575, 0
  br i1 %1576, label %1602, label %1577

1577:                                             ; preds = %1571
  %1578 = load i8, ptr %1561, align 1, !tbaa !14
  %1579 = zext i8 %1578 to i64
  %1580 = shl nuw i64 1, %1579
  %1581 = load i64, ptr %466, align 8, !tbaa !718
  %1582 = or i64 %1580, %1581
  store i64 %1582, ptr %466, align 8, !tbaa !718
  %1583 = getelementptr inbounds [16 x i32], ptr %5, i64 0, i64 %1572
  %1584 = load i32, ptr %1583, align 4, !tbaa !18
  %1585 = add i32 %1573, 1
  %1586 = add i32 %1585, %1584
  %1587 = sext i32 %1586 to i64
  %1588 = getelementptr inbounds [2 x i8], ptr %79, i64 %1587
  %1589 = load i8, ptr %1588, align 2, !tbaa !14
  %1590 = getelementptr inbounds [2 x i8], ptr %79, i64 %1587, i64 1
  %1591 = load i8, ptr %1590, align 1, !tbaa !14
  %1592 = zext i8 %1591 to i64
  %1593 = zext i8 %1589 to i64
  %1594 = getelementptr inbounds [4 x i32], ptr %1542, i64 %1592, i64 %1593
  %1595 = load i32, ptr %1594, align 4, !tbaa !18
  %1596 = mul nsw i32 %1595, %1575
  %1597 = load i32, ptr %1543, align 4, !tbaa !18
  %1598 = shl i32 %1596, %1597
  %1599 = add nsw i32 %1598, 8
  %1600 = ashr i32 %1599, 4
  %1601 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1562, i64 %1563, i64 %1592, i64 %1593
  store i32 %1600, ptr %1601, align 4, !tbaa !18
  br label %1602

1602:                                             ; preds = %1577, %1571
  %1603 = phi i32 [ %1586, %1577 ], [ %1573, %1571 ]
  %1604 = add nuw nsw i64 %1572, 1
  %1605 = icmp eq i64 %1604, %1564
  br i1 %1605, label %1762, label %1571, !llvm.loop !831

1606:                                             ; preds = %1630, %1566
  %1607 = phi i64 [ 0, %1566 ], [ %1632, %1630 ]
  %1608 = phi i32 [ 0, %1566 ], [ %1631, %1630 ]
  %1609 = getelementptr inbounds [16 x i32], ptr %4, i64 0, i64 %1607
  %1610 = load i32, ptr %1609, align 4, !tbaa !18
  %1611 = icmp eq i32 %1610, 0
  br i1 %1611, label %1630, label %1612

1612:                                             ; preds = %1606
  %1613 = load i8, ptr %1567, align 1, !tbaa !14
  %1614 = zext i8 %1613 to i64
  %1615 = shl nuw i64 1, %1614
  %1616 = load i64, ptr %466, align 8, !tbaa !718
  %1617 = or i64 %1615, %1616
  store i64 %1617, ptr %466, align 8, !tbaa !718
  %1618 = getelementptr inbounds [16 x i32], ptr %5, i64 0, i64 %1607
  %1619 = load i32, ptr %1618, align 4, !tbaa !18
  %1620 = add i32 %1608, 1
  %1621 = add i32 %1620, %1619
  %1622 = sext i32 %1621 to i64
  %1623 = getelementptr inbounds [2 x i8], ptr %79, i64 %1622
  %1624 = load i8, ptr %1623, align 2, !tbaa !14
  %1625 = getelementptr inbounds [2 x i8], ptr %79, i64 %1622, i64 1
  %1626 = load i8, ptr %1625, align 1, !tbaa !14
  %1627 = zext i8 %1626 to i64
  %1628 = zext i8 %1624 to i64
  %1629 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1568, i64 %1569, i64 %1627, i64 %1628
  store i32 %1610, ptr %1629, align 4, !tbaa !18
  br label %1630

1630:                                             ; preds = %1612, %1606
  %1631 = phi i32 [ %1621, %1612 ], [ %1608, %1606 ]
  %1632 = add nuw nsw i64 %1607, 1
  %1633 = icmp eq i64 %1632, %1570
  br i1 %1633, label %1762, label %1606, !llvm.loop !832

1634:                                             ; preds = %1544
  %1635 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %1529, i64 %1532, i64 %1545
  %1636 = load i8, ptr %1635, align 1, !tbaa !14
  %1637 = lshr i8 %1636, 2
  %1638 = zext i8 %1637 to i32
  store i32 %1638, ptr %458, align 4, !tbaa !186
  %1639 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %1529, i64 %1532, i64 %1545
  %1640 = load i8, ptr %1639, align 1, !tbaa !14
  %1641 = lshr i8 %1640, 2
  %1642 = zext i8 %1641 to i32
  store i32 %1642, ptr %457, align 8, !tbaa !185
  store i32 7, ptr %460, align 8, !tbaa !190
  %1643 = load i32, ptr %46, align 8, !tbaa !195
  %1644 = add i32 %1643, -9
  %1645 = icmp ult i32 %1644, 6
  br i1 %1645, label %1646, label %1650

1646:                                             ; preds = %1634
  %1647 = sext i32 %1644 to i64
  %1648 = getelementptr inbounds [6 x i32], ptr @switch.table.readCBPandCoeffsFromNAL.13, i64 0, i64 %1647
  %1649 = load i32, ptr %1648, align 4
  br label %1650

1650:                                             ; preds = %1646, %1634
  %1651 = phi i32 [ 15, %1634 ], [ %1649, %1646 ]
  store i32 %1651, ptr %3, align 8, !tbaa !736
  %1652 = add i32 %1643, -9
  %1653 = icmp ult i32 %1652, 6
  br i1 %1653, label %1654, label %1658

1654:                                             ; preds = %1650
  %1655 = sext i32 %1652 to i64
  %1656 = getelementptr inbounds [6 x i32], ptr @switch.table.readCBPandCoeffsFromNAL.14, i64 0, i64 %1655
  %1657 = load i32, ptr %1656, align 4
  br label %1658

1658:                                             ; preds = %1654, %1650
  %1659 = phi i32 [ %1657, %1654 ], [ 0, %1650 ]
  store i32 %1659, ptr %459, align 8, !tbaa !204
  %1660 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %1532, i64 %1545
  %1661 = zext i8 %1547 to i64
  %1662 = zext i8 %1549 to i64
  br i1 %66, label %1716, label %1663

1663:                                             ; preds = %1690, %1658
  %1664 = phi i32 [ %1714, %1690 ], [ 0, %1658 ]
  %1665 = phi i32 [ %1698, %1690 ], [ 0, %1658 ]
  %1666 = load ptr, ptr %461, align 8, !tbaa !214
  %1667 = load i32, ptr %3, align 8, !tbaa !736
  %1668 = sext i32 %1667 to i64
  %1669 = getelementptr inbounds i32, ptr %25, i64 %1668
  %1670 = load i32, ptr %1669, align 4, !tbaa !18
  %1671 = sext i32 %1670 to i64
  %1672 = getelementptr inbounds %struct.datapartition, ptr %1666, i64 %1671
  %1673 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1674 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1673, i64 0, i32 3
  %1675 = load i32, ptr %1674, align 4, !tbaa !490
  %1676 = icmp eq i32 %1675, 0
  br i1 %1676, label %1682, label %1677

1677:                                             ; preds = %1663
  %1678 = load ptr, ptr %1672, align 8, !tbaa !448
  %1679 = getelementptr inbounds %struct.Bitstream, ptr %1678, i64 0, i32 5
  %1680 = load i32, ptr %1679, align 8, !tbaa !560
  %1681 = icmp eq i32 %1680, 0
  br i1 %1681, label %1683, label %1682

1682:                                             ; preds = %1677, %1663
  store ptr @linfo_levrun_inter, ptr %463, align 8, !tbaa !737
  br label %1684

1683:                                             ; preds = %1677
  store ptr @readRunLevel_CABAC, ptr %462, align 8, !tbaa !211
  br label %1684

1684:                                             ; preds = %1683, %1682
  %1685 = getelementptr inbounds %struct.datapartition, ptr %1666, i64 %1671, i32 2
  %1686 = load ptr, ptr %1685, align 8, !tbaa !738
  %1687 = call i32 %1686(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %1672) #46
  %1688 = load i32, ptr %464, align 4, !tbaa !173
  %1689 = icmp eq i32 %1688, 0
  br i1 %1689, label %1762, label %1690

1690:                                             ; preds = %1684
  %1691 = load i32, ptr %465, align 8, !tbaa !179
  %1692 = load i8, ptr %1660, align 1, !tbaa !14
  %1693 = zext i8 %1692 to i64
  %1694 = shl nuw i64 1, %1693
  %1695 = load i64, ptr %466, align 8, !tbaa !718
  %1696 = or i64 %1694, %1695
  store i64 %1696, ptr %466, align 8, !tbaa !718
  %1697 = add i32 %1665, 1
  %1698 = add i32 %1697, %1691
  %1699 = sext i32 %1698 to i64
  %1700 = getelementptr inbounds [2 x i8], ptr %79, i64 %1699
  %1701 = load i8, ptr %1700, align 2, !tbaa !14
  %1702 = getelementptr inbounds [2 x i8], ptr %79, i64 %1699, i64 1
  %1703 = load i8, ptr %1702, align 1, !tbaa !14
  %1704 = zext i8 %1703 to i64
  %1705 = zext i8 %1701 to i64
  %1706 = getelementptr inbounds [4 x i32], ptr %1542, i64 %1704, i64 %1705
  %1707 = load i32, ptr %1706, align 4, !tbaa !18
  %1708 = mul nsw i32 %1707, %1688
  %1709 = load i32, ptr %1543, align 4, !tbaa !18
  %1710 = shl i32 %1708, %1709
  %1711 = add nsw i32 %1710, 8
  %1712 = ashr i32 %1711, 4
  %1713 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1661, i64 %1662, i64 %1704, i64 %1705
  store i32 %1712, ptr %1713, align 4, !tbaa !18
  %1714 = add nuw nsw i32 %1664, 1
  %1715 = icmp ult i32 %1664, 15
  br i1 %1715, label %1663, label %1762, !llvm.loop !833

1716:                                             ; preds = %1743, %1658
  %1717 = phi i32 [ %1760, %1743 ], [ 0, %1658 ]
  %1718 = phi i32 [ %1751, %1743 ], [ 0, %1658 ]
  %1719 = load ptr, ptr %461, align 8, !tbaa !214
  %1720 = load i32, ptr %3, align 8, !tbaa !736
  %1721 = sext i32 %1720 to i64
  %1722 = getelementptr inbounds i32, ptr %25, i64 %1721
  %1723 = load i32, ptr %1722, align 4, !tbaa !18
  %1724 = sext i32 %1723 to i64
  %1725 = getelementptr inbounds %struct.datapartition, ptr %1719, i64 %1724
  %1726 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1727 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1726, i64 0, i32 3
  %1728 = load i32, ptr %1727, align 4, !tbaa !490
  %1729 = icmp eq i32 %1728, 0
  br i1 %1729, label %1735, label %1730

1730:                                             ; preds = %1716
  %1731 = load ptr, ptr %1725, align 8, !tbaa !448
  %1732 = getelementptr inbounds %struct.Bitstream, ptr %1731, i64 0, i32 5
  %1733 = load i32, ptr %1732, align 8, !tbaa !560
  %1734 = icmp eq i32 %1733, 0
  br i1 %1734, label %1736, label %1735

1735:                                             ; preds = %1730, %1716
  store ptr @linfo_levrun_inter, ptr %463, align 8, !tbaa !737
  br label %1737

1736:                                             ; preds = %1730
  store ptr @readRunLevel_CABAC, ptr %462, align 8, !tbaa !211
  br label %1737

1737:                                             ; preds = %1736, %1735
  %1738 = getelementptr inbounds %struct.datapartition, ptr %1719, i64 %1724, i32 2
  %1739 = load ptr, ptr %1738, align 8, !tbaa !738
  %1740 = call i32 %1739(ptr noundef nonnull %3, ptr noundef nonnull %0, ptr noundef %1725) #46
  %1741 = load i32, ptr %464, align 4, !tbaa !173
  %1742 = icmp eq i32 %1741, 0
  br i1 %1742, label %1762, label %1743

1743:                                             ; preds = %1737
  %1744 = load i32, ptr %465, align 8, !tbaa !179
  %1745 = load i8, ptr %1660, align 1, !tbaa !14
  %1746 = zext i8 %1745 to i64
  %1747 = shl nuw i64 1, %1746
  %1748 = load i64, ptr %466, align 8, !tbaa !718
  %1749 = or i64 %1747, %1748
  store i64 %1749, ptr %466, align 8, !tbaa !718
  %1750 = add i32 %1718, 1
  %1751 = add i32 %1750, %1744
  %1752 = sext i32 %1751 to i64
  %1753 = getelementptr inbounds [2 x i8], ptr %79, i64 %1752
  %1754 = load i8, ptr %1753, align 2, !tbaa !14
  %1755 = getelementptr inbounds [2 x i8], ptr %79, i64 %1752, i64 1
  %1756 = load i8, ptr %1755, align 1, !tbaa !14
  %1757 = zext i8 %1756 to i64
  %1758 = zext i8 %1754 to i64
  %1759 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %1661, i64 %1662, i64 %1757, i64 %1758
  store i32 %1741, ptr %1759, align 4, !tbaa !18
  %1760 = add nuw nsw i32 %1717, 1
  %1761 = icmp ult i32 %1717, 15
  br i1 %1761, label %1716, label %1762, !llvm.loop !834

1762:                                             ; preds = %1743, %1737, %1690, %1684, %1630, %1602, %1565, %1559
  %1763 = add nuw nsw i64 %1545, 1
  %1764 = icmp eq i64 %1763, 4
  br i1 %1764, label %1765, label %1544, !llvm.loop !835

1765:                                             ; preds = %1762
  %1766 = add nuw nsw i64 %1532, 1
  %1767 = load i32, ptr %834, align 4, !tbaa !93
  %1768 = sext i32 %1767 to i64
  %1769 = icmp slt i64 %1766, %1768
  br i1 %1769, label %1531, label %1770, !llvm.loop !836

1770:                                             ; preds = %1765, %1524, %1522, %828
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #48
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10) #48
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #48
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #48
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #48
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %5) #48
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #48
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @readIPCMcoeffsFromNAL(ptr nocapture noundef %0, ptr nocapture readnone %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca %struct.syntaxelement, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %4) #48
  %5 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %6 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %5, i64 0, i32 3
  %7 = load i32, ptr %6, align 4, !tbaa !490
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %111

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.syntaxelement, ptr %4, i64 0, i32 3
  store i32 8, ptr %10, align 4, !tbaa !212
  %11 = getelementptr inbounds %struct.syntaxelement, ptr %4, i64 0, i32 1
  br label %12

12:                                               ; preds = %29, %9
  %13 = phi i32 [ 0, %9 ], [ %30, %29 ]
  %14 = lshr i32 %13, 2
  %15 = zext i32 %14 to i64
  %16 = and i32 %13, 3
  %17 = zext i32 %16 to i64
  br label %18

18:                                               ; preds = %18, %12
  %19 = phi i32 [ 0, %12 ], [ %27, %18 ]
  %20 = load ptr, ptr %2, align 8, !tbaa !448
  call void @readIPCMBytes_CABAC(ptr noundef nonnull %4, ptr noundef %20) #46
  %21 = load i32, ptr %11, align 4, !tbaa !173
  %22 = lshr i32 %19, 2
  %23 = zext i32 %22 to i64
  %24 = and i32 %19, 3
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %15, i64 %23, i64 %17, i64 %25
  store i32 %21, ptr %26, align 4, !tbaa !18
  %27 = add nuw nsw i32 %19, 1
  %28 = icmp eq i32 %27, 16
  br i1 %28, label %29, label %18, !llvm.loop !837

29:                                               ; preds = %18
  %30 = add nuw nsw i32 %13, 1
  %31 = icmp eq i32 %30, 16
  br i1 %31, label %32, label %12, !llvm.loop !838

32:                                               ; preds = %29
  %33 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %34 = getelementptr inbounds %struct.storable_picture, ptr %33, i64 0, i32 50
  %35 = load i32, ptr %34, align 4, !tbaa !83
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %110, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 116
  %39 = load i32, ptr %38, align 8, !tbaa !86
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %110

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 115
  %43 = load i32, ptr %42, align 4, !tbaa !85
  br label %44

44:                                               ; preds = %74, %41
  %45 = phi i32 [ %39, %41 ], [ %75, %74 ]
  %46 = phi i32 [ %43, %41 ], [ %76, %74 ]
  %47 = phi i32 [ 0, %41 ], [ %77, %74 ]
  %48 = icmp sgt i32 %46, 0
  br i1 %48, label %49, label %74

49:                                               ; preds = %44
  %50 = lshr i32 %47, 2
  %51 = zext i32 %50 to i64
  %52 = and i32 %47, 3
  %53 = zext i32 %52 to i64
  br label %59

54:                                               ; preds = %74
  %.lcssa2 = phi i32 [ %75, %74 ]
  %55 = icmp sgt i32 %.lcssa2, 0
  br i1 %55, label %56, label %110

56:                                               ; preds = %54
  %57 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 115
  %58 = load i32, ptr %57, align 4, !tbaa !85
  br label %79

59:                                               ; preds = %59, %49
  %60 = phi i32 [ 0, %49 ], [ %69, %59 ]
  %61 = load ptr, ptr %2, align 8, !tbaa !448
  call void @readIPCMBytes_CABAC(ptr noundef nonnull %4, ptr noundef %61) #46
  %62 = load i32, ptr %11, align 4, !tbaa !173
  %63 = lshr i32 %60, 2
  %64 = add nuw nsw i32 %63, 4
  %65 = zext i32 %64 to i64
  %66 = and i32 %60, 3
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %51, i64 %65, i64 %53, i64 %67
  store i32 %62, ptr %68, align 4, !tbaa !18
  %69 = add nuw nsw i32 %60, 1
  %70 = load i32, ptr %42, align 4, !tbaa !85
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %59, label %72, !llvm.loop !839

72:                                               ; preds = %59
  %.lcssa1 = phi i32 [ %70, %59 ]
  %73 = load i32, ptr %38, align 8, !tbaa !86
  br label %74

74:                                               ; preds = %72, %44
  %75 = phi i32 [ %73, %72 ], [ %45, %44 ]
  %76 = phi i32 [ %.lcssa1, %72 ], [ %46, %44 ]
  %77 = add nuw nsw i32 %47, 1
  %78 = icmp slt i32 %77, %75
  br i1 %78, label %44, label %54, !llvm.loop !840

79:                                               ; preds = %105, %56
  %80 = phi i32 [ %.lcssa2, %56 ], [ %106, %105 ]
  %81 = phi i32 [ %58, %56 ], [ %107, %105 ]
  %82 = phi i32 [ 0, %56 ], [ %108, %105 ]
  %83 = icmp sgt i32 %81, 0
  br i1 %83, label %84, label %105

84:                                               ; preds = %79
  %85 = lshr i32 %82, 2
  %86 = add nuw nsw i32 %85, 2
  %87 = zext i32 %86 to i64
  %88 = and i32 %82, 3
  %89 = zext i32 %88 to i64
  br label %90

90:                                               ; preds = %90, %84
  %91 = phi i32 [ 0, %84 ], [ %100, %90 ]
  %92 = load ptr, ptr %2, align 8, !tbaa !448
  call void @readIPCMBytes_CABAC(ptr noundef nonnull %4, ptr noundef %92) #46
  %93 = load i32, ptr %11, align 4, !tbaa !173
  %94 = lshr i32 %91, 2
  %95 = add nuw nsw i32 %94, 4
  %96 = zext i32 %95 to i64
  %97 = and i32 %91, 3
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %87, i64 %96, i64 %89, i64 %98
  store i32 %93, ptr %99, align 4, !tbaa !18
  %100 = add nuw nsw i32 %91, 1
  %101 = load i32, ptr %57, align 4, !tbaa !85
  %102 = icmp slt i32 %100, %101
  br i1 %102, label %90, label %103, !llvm.loop !841

103:                                              ; preds = %90
  %.lcssa = phi i32 [ %101, %90 ]
  %104 = load i32, ptr %38, align 8, !tbaa !86
  br label %105

105:                                              ; preds = %103, %79
  %106 = phi i32 [ %104, %103 ], [ %80, %79 ]
  %107 = phi i32 [ %.lcssa, %103 ], [ %81, %79 ]
  %108 = add nuw nsw i32 %82, 1
  %109 = icmp slt i32 %108, %106
  br i1 %109, label %79, label %110, !llvm.loop !842

110:                                              ; preds = %105, %54, %37, %32
  call void @init_decoding_engine_IPCM(ptr noundef %0) #47
  br label %229

111:                                              ; preds = %3
  %112 = load ptr, ptr %2, align 8, !tbaa !448
  %113 = getelementptr inbounds %struct.Bitstream, ptr %112, i64 0, i32 2
  %114 = load i32, ptr %113, align 8, !tbaa !450
  %115 = srem i32 %114, 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %111
  %118 = sub nsw i32 8, %115
  %119 = getelementptr inbounds %struct.syntaxelement, ptr %4, i64 0, i32 3
  store i32 %118, ptr %119, align 4, !tbaa !212
  %120 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %4, ptr noundef nonnull %112) #46
  br label %121

121:                                              ; preds = %117, %111
  %122 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 101
  %123 = load i32, ptr %122, align 4, !tbaa !703
  %124 = getelementptr inbounds %struct.syntaxelement, ptr %4, i64 0, i32 3
  store i32 %123, ptr %124, align 4, !tbaa !212
  %125 = getelementptr inbounds %struct.syntaxelement, ptr %4, i64 0, i32 1
  br label %126

126:                                              ; preds = %144, %121
  %127 = phi i32 [ 0, %121 ], [ %145, %144 ]
  %128 = lshr i32 %127, 2
  %129 = zext i32 %128 to i64
  %130 = and i32 %127, 3
  %131 = zext i32 %130 to i64
  br label %132

132:                                              ; preds = %132, %126
  %133 = phi i32 [ 0, %126 ], [ %142, %132 ]
  %134 = load ptr, ptr %2, align 8, !tbaa !448
  %135 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %4, ptr noundef %134) #46
  %136 = load i32, ptr %125, align 4, !tbaa !173
  %137 = lshr i32 %133, 2
  %138 = zext i32 %137 to i64
  %139 = and i32 %133, 3
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %129, i64 %138, i64 %131, i64 %140
  store i32 %136, ptr %141, align 4, !tbaa !18
  %142 = add nuw nsw i32 %133, 1
  %143 = icmp eq i32 %142, 16
  br i1 %143, label %144, label %132, !llvm.loop !843

144:                                              ; preds = %132
  %145 = add nuw nsw i32 %127, 1
  %146 = icmp eq i32 %145, 16
  br i1 %146, label %147, label %126, !llvm.loop !844

147:                                              ; preds = %144
  %148 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 102
  %149 = load i32, ptr %148, align 8, !tbaa !704
  store i32 %149, ptr %124, align 4, !tbaa !212
  %150 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %151 = getelementptr inbounds %struct.storable_picture, ptr %150, i64 0, i32 50
  %152 = load i32, ptr %151, align 4, !tbaa !83
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %229, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 116
  %156 = load i32, ptr %155, align 8, !tbaa !86
  %157 = icmp sgt i32 %156, 0
  br i1 %157, label %158, label %229

158:                                              ; preds = %154
  %159 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 115
  %160 = load i32, ptr %159, align 4, !tbaa !85
  br label %161

161:                                              ; preds = %192, %158
  %162 = phi i32 [ %156, %158 ], [ %193, %192 ]
  %163 = phi i32 [ %160, %158 ], [ %194, %192 ]
  %164 = phi i32 [ 0, %158 ], [ %195, %192 ]
  %165 = icmp sgt i32 %163, 0
  br i1 %165, label %166, label %192

166:                                              ; preds = %161
  %167 = lshr i32 %164, 2
  %168 = zext i32 %167 to i64
  %169 = and i32 %164, 3
  %170 = zext i32 %169 to i64
  br label %176

171:                                              ; preds = %192
  %.lcssa5 = phi i32 [ %193, %192 ]
  %172 = icmp sgt i32 %.lcssa5, 0
  br i1 %172, label %173, label %229

173:                                              ; preds = %171
  %174 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 115
  %175 = load i32, ptr %174, align 4, !tbaa !85
  br label %197

176:                                              ; preds = %176, %166
  %177 = phi i32 [ 0, %166 ], [ %187, %176 ]
  %178 = load ptr, ptr %2, align 8, !tbaa !448
  %179 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %4, ptr noundef %178) #46
  %180 = load i32, ptr %125, align 4, !tbaa !173
  %181 = lshr i32 %177, 2
  %182 = add nuw nsw i32 %181, 4
  %183 = zext i32 %182 to i64
  %184 = and i32 %177, 3
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %168, i64 %183, i64 %170, i64 %185
  store i32 %180, ptr %186, align 4, !tbaa !18
  %187 = add nuw nsw i32 %177, 1
  %188 = load i32, ptr %159, align 4, !tbaa !85
  %189 = icmp slt i32 %187, %188
  br i1 %189, label %176, label %190, !llvm.loop !845

190:                                              ; preds = %176
  %.lcssa4 = phi i32 [ %188, %176 ]
  %191 = load i32, ptr %155, align 8, !tbaa !86
  br label %192

192:                                              ; preds = %190, %161
  %193 = phi i32 [ %191, %190 ], [ %162, %161 ]
  %194 = phi i32 [ %.lcssa4, %190 ], [ %163, %161 ]
  %195 = add nuw nsw i32 %164, 1
  %196 = icmp slt i32 %195, %193
  br i1 %196, label %161, label %171, !llvm.loop !846

197:                                              ; preds = %224, %173
  %198 = phi i32 [ %.lcssa5, %173 ], [ %225, %224 ]
  %199 = phi i32 [ %175, %173 ], [ %226, %224 ]
  %200 = phi i32 [ 0, %173 ], [ %227, %224 ]
  %201 = icmp sgt i32 %199, 0
  br i1 %201, label %202, label %224

202:                                              ; preds = %197
  %203 = lshr i32 %200, 2
  %204 = add nuw nsw i32 %203, 2
  %205 = zext i32 %204 to i64
  %206 = and i32 %200, 3
  %207 = zext i32 %206 to i64
  br label %208

208:                                              ; preds = %208, %202
  %209 = phi i32 [ 0, %202 ], [ %219, %208 ]
  %210 = load ptr, ptr %2, align 8, !tbaa !448
  %211 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %4, ptr noundef %210) #46
  %212 = load i32, ptr %125, align 4, !tbaa !173
  %213 = lshr i32 %209, 2
  %214 = add nuw nsw i32 %213, 4
  %215 = zext i32 %214 to i64
  %216 = and i32 %209, 3
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %205, i64 %215, i64 %207, i64 %217
  store i32 %212, ptr %218, align 4, !tbaa !18
  %219 = add nuw nsw i32 %209, 1
  %220 = load i32, ptr %174, align 4, !tbaa !85
  %221 = icmp slt i32 %219, %220
  br i1 %221, label %208, label %222, !llvm.loop !847

222:                                              ; preds = %208
  %.lcssa3 = phi i32 [ %220, %208 ]
  %223 = load i32, ptr %155, align 8, !tbaa !86
  br label %224

224:                                              ; preds = %222, %197
  %225 = phi i32 [ %223, %222 ], [ %198, %197 ]
  %226 = phi i32 [ %.lcssa3, %222 ], [ %199, %197 ]
  %227 = add nuw nsw i32 %200, 1
  %228 = icmp slt i32 %227, %225
  br i1 %228, label %197, label %229, !llvm.loop !848

229:                                              ; preds = %224, %171, %154, %147, %110
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %4) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @init_decoding_engine_IPCM(ptr nocapture noundef readonly %0) #0 {
  %2 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %3 = load ptr, ptr %2, align 8, !tbaa !165
  %4 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 7
  %5 = load i32, ptr %4, align 4, !tbaa !213
  switch i32 %5, label %7 [
    i32 0, label %9
    i32 1, label %6
  ]

6:                                                ; preds = %1
  br label %9

7:                                                ; preds = %1
  %8 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.162)
  tail call void @exit(i32 noundef 1) #51
  unreachable

9:                                                ; preds = %6, %1
  %10 = phi i64 [ 3, %6 ], [ 1, %1 ]
  %11 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 9
  %12 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  br label %13

13:                                               ; preds = %13, %9
  %14 = phi i64 [ 0, %9 ], [ %23, %13 ]
  %15 = load ptr, ptr %11, align 8, !tbaa !214
  %16 = getelementptr inbounds %struct.datapartition, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8, !tbaa !448
  %18 = load i32, ptr %17, align 8, !tbaa !215
  %19 = getelementptr inbounds %struct.datapartition, ptr %15, i64 %14, i32 1
  %20 = getelementptr inbounds %struct.Bitstream, ptr %17, i64 0, i32 4
  %21 = load ptr, ptr %20, align 8, !tbaa !218
  %22 = load i32, ptr %12, align 4, !tbaa !137
  tail call void @arideco_start_decoding(ptr noundef nonnull %19, ptr noundef %21, i32 noundef %18, ptr noundef nonnull %17, i32 noundef %22) #46
  %23 = add nuw nsw i64 %14, 1
  %24 = icmp eq i64 %23, %10
  br i1 %24, label %25, label %13, !llvm.loop !849

25:                                               ; preds = %13
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @readCoeff4x4_CAVLC(ptr nocapture noundef readonly %0, ptr nocapture readnone %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, ptr nocapture noundef writeonly %5, ptr nocapture noundef writeonly %6, ptr nocapture noundef writeonly %7) #0 {
  %9 = alloca %struct.syntaxelement, align 8
  %10 = alloca [15 x i8], align 1
  %11 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !49
  %13 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %14 = load ptr, ptr %13, align 8, !tbaa !84
  %15 = sext i32 %12 to i64
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %9) #48
  %16 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %17 = load ptr, ptr %16, align 8, !tbaa !165
  %18 = getelementptr inbounds %struct.Slice, ptr %17, i64 0, i32 7
  %19 = load i32, ptr %18, align 4, !tbaa !213
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [0 x [20 x i32]], ptr @assignSE2partition, i64 0, i64 %20
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %10) #48
  switch i32 %2, label %37 [
    i32 0, label %22
    i32 1, label %39
    i32 2, label %26
    i32 6, label %27
    i32 7, label %33
  ]

22:                                               ; preds = %8
  %23 = getelementptr inbounds %struct.macroblock, ptr %14, i64 %15, i32 6
  %24 = load i32, ptr %23, align 8, !tbaa !195
  switch i32 %24, label %39 [
    i32 9, label %25
    i32 10, label %25
    i32 14, label %25
    i32 13, label %25
    i32 12, label %25
  ]

25:                                               ; preds = %22, %22, %22, %22, %22
  br label %39

26:                                               ; preds = %8
  br label %39

27:                                               ; preds = %8
  %28 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 114
  %29 = load i32, ptr %28, align 8, !tbaa !706
  %30 = getelementptr inbounds %struct.macroblock, ptr %14, i64 %15, i32 6
  %31 = load i32, ptr %30, align 8, !tbaa !195
  switch i32 %31, label %39 [
    i32 9, label %32
    i32 10, label %32
    i32 14, label %32
    i32 13, label %32
    i32 12, label %32
  ]

32:                                               ; preds = %27, %27, %27, %27, %27
  br label %39

33:                                               ; preds = %8
  %34 = getelementptr inbounds %struct.macroblock, ptr %14, i64 %15, i32 6
  %35 = load i32, ptr %34, align 8, !tbaa !195
  switch i32 %35, label %39 [
    i32 9, label %36
    i32 10, label %36
    i32 14, label %36
    i32 13, label %36
    i32 12, label %36
  ]

36:                                               ; preds = %33, %33, %33, %33, %33
  br label %39

37:                                               ; preds = %8
  tail call void @error(ptr noundef nonnull @.str.4.168, i32 noundef 600) #46
  %38 = load i32, ptr %11, align 4, !tbaa !49
  br label %39

39:                                               ; preds = %37, %36, %33, %32, %27, %26, %25, %22, %8
  %40 = phi i32 [ %38, %37 ], [ %12, %26 ], [ %12, %8 ], [ %12, %22 ], [ %12, %25 ], [ %12, %27 ], [ %12, %32 ], [ %12, %33 ], [ %12, %36 ]
  %41 = phi i1 [ true, %37 ], [ true, %26 ], [ true, %8 ], [ true, %22 ], [ true, %25 ], [ false, %27 ], [ false, %32 ], [ true, %33 ], [ true, %36 ]
  %42 = phi i1 [ true, %37 ], [ true, %26 ], [ true, %8 ], [ true, %22 ], [ true, %25 ], [ true, %27 ], [ true, %32 ], [ false, %33 ], [ false, %36 ]
  %43 = phi i32 [ 0, %37 ], [ 9, %26 ], [ 7, %8 ], [ 14, %22 ], [ 9, %25 ], [ 13, %27 ], [ 8, %32 ], [ 15, %33 ], [ 10, %36 ]
  %44 = phi i32 [ 0, %37 ], [ 15, %26 ], [ 16, %8 ], [ 16, %22 ], [ 16, %25 ], [ %29, %27 ], [ %29, %32 ], [ 15, %33 ], [ 15, %36 ]
  store i32 %43, ptr %9, align 8, !tbaa !736
  %45 = getelementptr inbounds %struct.Slice, ptr %17, i64 0, i32 9
  %46 = load ptr, ptr %45, align 8, !tbaa !214
  %47 = zext i32 %43 to i64
  %48 = getelementptr inbounds i32, ptr %21, i64 %47
  %49 = load i32, ptr %48, align 4, !tbaa !18
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %struct.datapartition, ptr %46, i64 %50
  %52 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 32
  %53 = load ptr, ptr %52, align 8, !tbaa !617
  %54 = zext i32 %40 to i64
  %55 = getelementptr inbounds ptr, ptr %53, i64 %54
  %56 = load ptr, ptr %55, align 8, !tbaa !13
  %57 = sext i32 %3 to i64
  %58 = getelementptr inbounds ptr, ptr %56, i64 %57
  %59 = load ptr, ptr %58, align 8, !tbaa !13
  %60 = sext i32 %4 to i64
  %61 = getelementptr inbounds i32, ptr %59, i64 %60
  store i32 0, ptr %61, align 4, !tbaa !18
  br i1 %41, label %62, label %89

62:                                               ; preds = %39
  br i1 %42, label %63, label %65

63:                                               ; preds = %62
  %64 = tail call i32 @predict_nnz(ptr noundef nonnull %0, i32 noundef %3, i32 noundef %4) #47
  br label %67

65:                                               ; preds = %62
  %66 = tail call i32 @predict_nnz_chroma(ptr noundef nonnull %0, i32 noundef %3, i32 noundef %4) #47
  br label %67

67:                                               ; preds = %65, %63
  %68 = phi i32 [ %66, %65 ], [ %64, %63 ]
  %69 = icmp slt i32 %68, 2
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  %71 = icmp ult i32 %68, 4
  br i1 %71, label %75, label %72

72:                                               ; preds = %70
  %73 = icmp ult i32 %68, 8
  %74 = select i1 %73, i32 2, i32 3
  br label %75

75:                                               ; preds = %72, %70, %67
  %76 = phi i32 [ 0, %67 ], [ 1, %70 ], [ %74, %72 ]
  %77 = getelementptr inbounds %struct.syntaxelement, ptr %9, i64 0, i32 1
  store i32 %76, ptr %77, align 4, !tbaa !173
  %78 = call i32 @readSyntaxElement_NumCoeffTrailingOnes(ptr noundef nonnull %9, ptr noundef %51, ptr noundef nonnull %10) #46
  %79 = load <2 x i32>, ptr %77, align 4, !tbaa !18
  %80 = load ptr, ptr %52, align 8, !tbaa !617
  %81 = load i32, ptr %11, align 4, !tbaa !49
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds ptr, ptr %80, i64 %82
  %84 = load ptr, ptr %83, align 8, !tbaa !13
  %85 = getelementptr inbounds ptr, ptr %84, i64 %57
  %86 = load ptr, ptr %85, align 8, !tbaa !13
  %87 = getelementptr inbounds i32, ptr %86, i64 %60
  %88 = extractelement <2 x i32> %79, i64 0
  store i32 %88, ptr %87, align 4, !tbaa !18
  br label %93

89:                                               ; preds = %39
  %90 = call i32 @readSyntaxElement_NumCoeffTrailingOnesChromaDC(ptr noundef nonnull %9, ptr noundef %51) #46
  %91 = getelementptr inbounds %struct.syntaxelement, ptr %9, i64 0, i32 1
  %92 = load <2 x i32>, ptr %91, align 4, !tbaa !18
  br label %93

93:                                               ; preds = %89, %75
  %94 = phi <2 x i32> [ %92, %89 ], [ %79, %75 ]
  %95 = icmp sgt i32 %44, 0
  br i1 %95, label %96, label %104

96:                                               ; preds = %93
  %97 = zext i32 %44 to i64
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i64 [ 0, %96 ], [ %102, %98 ]
  %100 = getelementptr inbounds i32, ptr %5, i64 %99
  store i32 0, ptr %100, align 4, !tbaa !18
  %101 = getelementptr inbounds i32, ptr %6, i64 %99
  store i32 0, ptr %101, align 4, !tbaa !18
  %102 = add nuw nsw i64 %99, 1
  %103 = icmp eq i64 %102, %97
  br i1 %103, label %104, label %98, !llvm.loop !850

104:                                              ; preds = %98, %93
  %105 = extractelement <2 x i32> %94, i64 0
  store i32 %105, ptr %7, align 4, !tbaa !18
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %269, label %107

107:                                              ; preds = %104
  %108 = extractelement <2 x i32> %94, i64 1
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %107
  %111 = add nsw i32 %105, -1
  %112 = sub nuw nsw i32 %111, %108
  br label %186

113:                                              ; preds = %107
  %114 = getelementptr inbounds %struct.syntaxelement, ptr %9, i64 0, i32 3
  store i32 %108, ptr %114, align 4, !tbaa !212
  %115 = load ptr, ptr %51, align 8, !tbaa !448
  %116 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %9, ptr noundef %115) #46
  %117 = getelementptr inbounds %struct.syntaxelement, ptr %9, i64 0, i32 4
  %118 = load i32, ptr %117, align 8, !tbaa !219
  %119 = add i32 %105, -1
  %120 = sub nsw i32 %119, %108
  %121 = icmp sgt i32 %108, 0
  br i1 %121, label %122, label %186

122:                                              ; preds = %113
  %123 = sext i32 %119 to i64
  %124 = sext i32 %120 to i64
  %125 = add nsw i64 %123, -1
  %126 = call i64 @llvm.smin.i64(i64 %124, i64 %125)
  %127 = sub i64 %123, %126
  %128 = add i64 %127, 3
  %129 = and i64 %128, -4
  %130 = add i64 %127, -1
  %131 = insertelement <4 x i64> poison, i64 %130, i64 0
  %132 = shufflevector <4 x i64> %131, <4 x i64> poison, <4 x i32> zeroinitializer
  %133 = shufflevector <2 x i32> %94, <2 x i32> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %134 = add <4 x i32> %133, <i32 0, i32 -1, i32 -2, i32 -3>
  br label %135

135:                                              ; preds = %182, %122
  %136 = phi i64 [ 0, %122 ], [ %183, %182 ]
  %137 = phi <4 x i32> [ %134, %122 ], [ %184, %182 ]
  %138 = sub i64 %123, %136
  %139 = insertelement <4 x i64> poison, i64 %136, i64 0
  %140 = shufflevector <4 x i64> %139, <4 x i64> poison, <4 x i32> zeroinitializer
  %141 = or <4 x i64> %140, <i64 0, i64 1, i64 2, i64 3>
  %142 = icmp ule <4 x i64> %141, %132
  %143 = add nsw <4 x i32> %137, <i32 -1, i32 -1, i32 -1, i32 -1>
  %144 = extractelement <4 x i1> %142, i64 0
  br i1 %144, label %145, label %152

145:                                              ; preds = %135
  %146 = extractelement <4 x i32> %143, i64 0
  %147 = shl nuw i32 1, %146
  %148 = and i32 %147, %118
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds i32, ptr %5, i64 %138
  %151 = select i1 %149, i32 1, i32 -1
  store i32 %151, ptr %150, align 4, !tbaa !18
  br label %152

152:                                              ; preds = %145, %135
  %153 = extractelement <4 x i1> %142, i64 1
  br i1 %153, label %154, label %162

154:                                              ; preds = %152
  %155 = extractelement <4 x i32> %143, i64 1
  %156 = shl nuw i32 1, %155
  %157 = and i32 %156, %118
  %158 = add i64 %138, -1
  %159 = icmp eq i32 %157, 0
  %160 = getelementptr inbounds i32, ptr %5, i64 %158
  %161 = select i1 %159, i32 1, i32 -1
  store i32 %161, ptr %160, align 4, !tbaa !18
  br label %162

162:                                              ; preds = %154, %152
  %163 = extractelement <4 x i1> %142, i64 2
  br i1 %163, label %164, label %172

164:                                              ; preds = %162
  %165 = extractelement <4 x i32> %143, i64 2
  %166 = shl nuw i32 1, %165
  %167 = and i32 %166, %118
  %168 = add i64 %138, -2
  %169 = icmp eq i32 %167, 0
  %170 = getelementptr inbounds i32, ptr %5, i64 %168
  %171 = select i1 %169, i32 1, i32 -1
  store i32 %171, ptr %170, align 4, !tbaa !18
  br label %172

172:                                              ; preds = %164, %162
  %173 = extractelement <4 x i1> %142, i64 3
  br i1 %173, label %174, label %182

174:                                              ; preds = %172
  %175 = extractelement <4 x i32> %143, i64 3
  %176 = shl nuw i32 1, %175
  %177 = and i32 %176, %118
  %178 = add i64 %138, -3
  %179 = icmp eq i32 %177, 0
  %180 = getelementptr inbounds i32, ptr %5, i64 %178
  %181 = select i1 %179, i32 1, i32 -1
  store i32 %181, ptr %180, align 4, !tbaa !18
  br label %182

182:                                              ; preds = %174, %172
  %183 = add i64 %136, 4
  %184 = add <4 x i32> %137, <i32 -4, i32 -4, i32 -4, i32 -4>
  %185 = icmp eq i64 %183, %129
  br i1 %185, label %186, label %135, !llvm.loop !851

186:                                              ; preds = %182, %113, %110
  %187 = phi i32 [ %112, %110 ], [ %120, %113 ], [ %120, %182 ]
  %188 = phi i32 [ %111, %110 ], [ %119, %113 ], [ %119, %182 ]
  %189 = icmp sgt i32 %187, -1
  br i1 %189, label %190, label %234

190:                                              ; preds = %186
  %191 = icmp sgt i32 %105, 10
  %192 = icmp slt i32 %108, 3
  %193 = and i1 %191, %192
  %194 = zext i1 %193 to i32
  %195 = icmp slt i32 %105, 4
  %196 = icmp ne i32 %108, 3
  %197 = or i1 %195, %196
  %198 = zext i1 %197 to i32
  %199 = getelementptr inbounds %struct.syntaxelement, ptr %9, i64 0, i32 4
  %200 = zext i32 %187 to i64
  br label %201

201:                                              ; preds = %217, %190
  %202 = phi i64 [ %200, %190 ], [ %231, %217 ]
  %203 = phi i32 [ %198, %190 ], [ 0, %217 ]
  %204 = phi i32 [ %194, %190 ], [ %230, %217 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %208

206:                                              ; preds = %201
  %207 = call i32 @readSyntaxElement_Level_VLC0(ptr noundef nonnull %9, ptr noundef %51) #46
  br label %210

208:                                              ; preds = %201
  %209 = call i32 @readSyntaxElement_Level_VLCN(ptr noundef nonnull %9, i32 noundef %204, ptr noundef %51) #46
  br label %210

210:                                              ; preds = %208, %206
  %211 = icmp eq i32 %203, 0
  %212 = load i32, ptr %199, align 8, !tbaa !219
  br i1 %211, label %217, label %213

213:                                              ; preds = %210
  %214 = icmp slt i32 %212, 1
  %215 = select i1 %214, i32 -1, i32 1
  %216 = add nsw i32 %215, %212
  store i32 %216, ptr %199, align 8, !tbaa !219
  br label %217

217:                                              ; preds = %213, %210
  %218 = phi i32 [ %216, %213 ], [ %212, %210 ]
  %219 = getelementptr inbounds i32, ptr %5, i64 %202
  store i32 %218, ptr %219, align 4, !tbaa !18
  %220 = call i32 @llvm.abs.i32(i32 %218, i1 true)
  %221 = sext i32 %204 to i64
  %222 = getelementptr inbounds [7 x i32], ptr @readCoeff4x4_CAVLC.incVlc, i64 0, i64 %221
  %223 = load i32, ptr %222, align 4, !tbaa !18
  %224 = icmp sgt i32 %220, %223
  %225 = zext i1 %224 to i32
  %226 = add nsw i32 %204, %225
  %227 = icmp eq i64 %202, %200
  %228 = icmp ugt i32 %220, 3
  %229 = select i1 %227, i1 %228, i1 false
  %230 = select i1 %229, i32 2, i32 %226
  %231 = add nsw i64 %202, -1
  %232 = trunc i64 %202 to i32
  %233 = icmp sgt i32 %232, 0
  br i1 %233, label %201, label %234, !llvm.loop !852

234:                                              ; preds = %217, %186
  %235 = icmp slt i32 %105, %44
  br i1 %235, label %236, label %264

236:                                              ; preds = %234
  %237 = getelementptr inbounds %struct.syntaxelement, ptr %9, i64 0, i32 1
  store i32 %188, ptr %237, align 4, !tbaa !173
  br i1 %41, label %240, label %238

238:                                              ; preds = %236
  %239 = call i32 @readSyntaxElement_TotalZerosChromaDC(ptr noundef nonnull %9, ptr noundef %51) #46
  br label %242

240:                                              ; preds = %236
  %241 = call i32 @readSyntaxElement_TotalZeros(ptr noundef nonnull %9, ptr noundef %51) #46
  br label %242

242:                                              ; preds = %240, %238
  %243 = load i32, ptr %237, align 4, !tbaa !173
  %244 = icmp sgt i32 %243, 0
  %245 = icmp sgt i32 %105, 1
  %246 = and i1 %244, %245
  br i1 %246, label %247, label %264

247:                                              ; preds = %242
  %248 = zext i32 %105 to i64
  %249 = add nsw i64 %248, -1
  br label %250

250:                                              ; preds = %250, %247
  %251 = phi i64 [ %249, %247 ], [ %259, %250 ]
  %252 = phi i32 [ %243, %247 ], [ %258, %250 ]
  %253 = call i32 @llvm.smin.i32(i32 %252, i32 7)
  %254 = add nsw i32 %253, -1
  store i32 %254, ptr %237, align 4, !tbaa !173
  %255 = call i32 @readSyntaxElement_Run(ptr noundef nonnull %9, ptr noundef %51) #46
  %256 = load i32, ptr %237, align 4, !tbaa !173
  %257 = getelementptr inbounds i32, ptr %6, i64 %251
  store i32 %256, ptr %257, align 4, !tbaa !18
  %258 = sub nsw i32 %252, %256
  %259 = add nsw i64 %251, -1
  %260 = icmp ne i32 %258, 0
  %261 = trunc i64 %259 to i32
  %262 = icmp ne i32 %261, 0
  %263 = select i1 %260, i1 %262, i1 false
  br i1 %263, label %250, label %264, !llvm.loop !853

264:                                              ; preds = %250, %242, %234
  %265 = phi i32 [ %188, %242 ], [ %188, %234 ], [ %261, %250 ]
  %266 = phi i32 [ %243, %242 ], [ 0, %234 ], [ %258, %250 ]
  %267 = sext i32 %265 to i64
  %268 = getelementptr inbounds i32, ptr %6, i64 %267
  store i32 %266, ptr %268, align 4, !tbaa !18
  br label %269

269:                                              ; preds = %264, %104
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %10) #48
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %9) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @readLumaCoeff8x8_CABAC(ptr noundef %0, ptr nocapture readnone %1, i32 noundef %2) #0 {
  %4 = alloca %struct.syntaxelement, align 8
  %5 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !49
  %7 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %8 = load ptr, ptr %7, align 8, !tbaa !84
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 8
  %11 = load i32, ptr %10, align 4, !tbaa !199
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %4) #48
  %12 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %13 = load ptr, ptr %12, align 8, !tbaa !165
  %14 = getelementptr inbounds %struct.Slice, ptr %13, i64 0, i32 7
  %15 = load i32, ptr %14, align 4, !tbaa !213
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [0 x [20 x i32]], ptr @assignSE2partition, i64 0, i64 %16
  %18 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 6
  %19 = load i32, ptr %18, align 4, !tbaa !43
  %20 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 103
  %21 = load i32, ptr %20, align 4, !tbaa !117
  %22 = add nsw i32 %21, %19
  %23 = sdiv i32 %22, 6
  %24 = srem i32 %22, 6
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %3
  %27 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 112
  %28 = load i32, ptr %27, align 8, !tbaa !118
  %29 = icmp eq i32 %28, 1
  br label %30

30:                                               ; preds = %26, %3
  %31 = phi i1 [ false, %3 ], [ %29, %26 ]
  %32 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 6
  %33 = load i32, ptr %32, align 8, !tbaa !195
  %34 = add i32 %33, -9
  %35 = icmp ult i32 %34, 6
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  %37 = sext i32 %34 to i64
  %38 = getelementptr inbounds [6 x ptr], ptr @switch.table.readLumaCoeff8x8_CABAC, i64 0, i64 %37
  %39 = load ptr, ptr %38, align 8
  br label %40

40:                                               ; preds = %36, %30
  %41 = phi ptr [ %39, %36 ], [ @InvLevelScale8x8Luma_Inter, %30 ]
  %42 = sext i32 %24 to i64
  %43 = getelementptr inbounds [6 x [8 x [8 x i32]]], ptr %41, i64 0, i64 %42
  %44 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 36
  %45 = load i32, ptr %44, align 8, !tbaa !206
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 20
  %49 = load i32, ptr %48, align 4, !tbaa !170
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, ptr @SNGL_SCAN8x8, ptr @FIELD_SCAN8x8
  br label %52

52:                                               ; preds = %47, %40
  %53 = phi ptr [ @FIELD_SCAN8x8, %40 ], [ %51, %47 ]
  %54 = add i32 %33, -9
  %55 = icmp ult i32 %54, 6
  br i1 %55, label %59, label %56

56:                                               ; preds = %59, %52
  %57 = icmp eq i32 %33, 12
  %58 = zext i1 %57 to i32
  br label %64

59:                                               ; preds = %52
  %60 = trunc i32 %54 to i8
  %61 = lshr i8 51, %60
  %62 = and i8 %61, 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %56, label %64

64:                                               ; preds = %59, %56
  %65 = phi i32 [ %58, %56 ], [ 1, %59 ]
  %66 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 42
  store i32 %65, ptr %66, align 8, !tbaa !204
  %67 = shl nuw i32 1, %2
  %68 = and i32 %11, %67
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %176, label %70

70:                                               ; preds = %64
  %71 = and i32 %2, 1
  %72 = shl nuw nsw i32 %71, 3
  %73 = shl i32 %2, 2
  %74 = and i32 %73, -8
  %75 = shl nuw nsw i32 %71, 1
  %76 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 40
  store i32 %75, ptr %76, align 8, !tbaa !185
  %77 = ashr exact i32 %74, 2
  %78 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 41
  store i32 %77, ptr %78, align 4, !tbaa !186
  %79 = getelementptr inbounds %struct.syntaxelement, ptr %4, i64 0, i32 6
  %80 = getelementptr inbounds %struct.Slice, ptr %13, i64 0, i32 9
  %81 = getelementptr inbounds %struct.syntaxelement, ptr %4, i64 0, i32 9
  %82 = getelementptr inbounds %struct.syntaxelement, ptr %4, i64 0, i32 1
  %83 = getelementptr inbounds %struct.syntaxelement, ptr %4, i64 0, i32 2
  %84 = sub nsw i32 %73, %75
  %85 = shl i32 51, %84
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 9
  br i1 %31, label %136, label %88

88:                                               ; preds = %108, %70
  %89 = phi i32 [ %134, %108 ], [ 0, %70 ]
  %90 = phi i32 [ %111, %108 ], [ -1, %70 ]
  store i32 2, ptr %79, align 8, !tbaa !190
  %91 = load i32, ptr %66, align 8, !tbaa !204
  %92 = icmp eq i32 %91, 1
  %93 = icmp eq i32 %89, 0
  %94 = select i1 %93, i32 7, i32 9
  %95 = select i1 %93, i32 12, i32 14
  %96 = select i1 %92, i32 %94, i32 %95
  store i32 %96, ptr %4, align 8, !tbaa !736
  %97 = load ptr, ptr %80, align 8, !tbaa !214
  %98 = zext i32 %96 to i64
  %99 = getelementptr inbounds i32, ptr %17, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !18
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %struct.datapartition, ptr %97, i64 %101
  store ptr @readRunLevel_CABAC, ptr %81, align 8, !tbaa !211
  %103 = getelementptr inbounds %struct.datapartition, ptr %97, i64 %101, i32 2
  %104 = load ptr, ptr %103, align 8, !tbaa !738
  %105 = call i32 %104(ptr noundef nonnull %4, ptr noundef nonnull %0, ptr noundef %102) #46
  %106 = load i32, ptr %82, align 4, !tbaa !173
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %176, label %108

108:                                              ; preds = %88
  %109 = load i32, ptr %83, align 8, !tbaa !179
  %110 = add i32 %90, 1
  %111 = add i32 %110, %109
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [2 x i8], ptr %53, i64 %112
  %114 = load i8, ptr %113, align 1, !tbaa !14
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [2 x i8], ptr %53, i64 %112, i64 1
  %117 = load i8, ptr %116, align 1, !tbaa !14
  %118 = zext i8 %117 to i32
  %119 = load i64, ptr %87, align 8, !tbaa !718
  %120 = or i64 %119, %86
  store i64 %120, ptr %87, align 8, !tbaa !718
  %121 = zext i8 %117 to i64
  %122 = zext i8 %114 to i64
  %123 = getelementptr inbounds [8 x i32], ptr %43, i64 %121, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !18
  %125 = mul nsw i32 %124, %106
  %126 = shl i32 %125, %23
  %127 = add nsw i32 %126, 32
  %128 = ashr i32 %127, 6
  %129 = add nsw i32 %74, %118
  %130 = sext i32 %129 to i64
  %131 = add nuw nsw i32 %72, %115
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %130, i64 %132
  store i32 %128, ptr %133, align 4, !tbaa !18
  %134 = add nuw nsw i32 %89, 1
  %135 = icmp ult i32 %89, 64
  br i1 %135, label %88, label %176, !llvm.loop !854

136:                                              ; preds = %156, %70
  %137 = phi i32 [ %174, %156 ], [ 0, %70 ]
  %138 = phi i32 [ %159, %156 ], [ -1, %70 ]
  store i32 2, ptr %79, align 8, !tbaa !190
  %139 = load i32, ptr %66, align 8, !tbaa !204
  %140 = icmp eq i32 %139, 1
  %141 = icmp eq i32 %137, 0
  %142 = select i1 %141, i32 7, i32 9
  %143 = select i1 %141, i32 12, i32 14
  %144 = select i1 %140, i32 %142, i32 %143
  store i32 %144, ptr %4, align 8, !tbaa !736
  %145 = load ptr, ptr %80, align 8, !tbaa !214
  %146 = zext i32 %144 to i64
  %147 = getelementptr inbounds i32, ptr %17, i64 %146
  %148 = load i32, ptr %147, align 4, !tbaa !18
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds %struct.datapartition, ptr %145, i64 %149
  store ptr @readRunLevel_CABAC, ptr %81, align 8, !tbaa !211
  %151 = getelementptr inbounds %struct.datapartition, ptr %145, i64 %149, i32 2
  %152 = load ptr, ptr %151, align 8, !tbaa !738
  %153 = call i32 %152(ptr noundef nonnull %4, ptr noundef nonnull %0, ptr noundef %150) #46
  %154 = load i32, ptr %82, align 4, !tbaa !173
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %176, label %156

156:                                              ; preds = %136
  %157 = load i32, ptr %83, align 8, !tbaa !179
  %158 = add i32 %138, 1
  %159 = add i32 %158, %157
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [2 x i8], ptr %53, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !14
  %163 = zext i8 %162 to i32
  %164 = getelementptr inbounds [2 x i8], ptr %53, i64 %160, i64 1
  %165 = load i8, ptr %164, align 1, !tbaa !14
  %166 = zext i8 %165 to i32
  %167 = load i64, ptr %87, align 8, !tbaa !718
  %168 = or i64 %167, %86
  store i64 %168, ptr %87, align 8, !tbaa !718
  %169 = add nsw i32 %74, %166
  %170 = sext i32 %169 to i64
  %171 = add nuw nsw i32 %72, %163
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %170, i64 %172
  store i32 %154, ptr %173, align 4, !tbaa !18
  %174 = add nuw nsw i32 %137, 1
  %175 = icmp ult i32 %137, 64
  br i1 %175, label %136, label %176, !llvm.loop !855

176:                                              ; preds = %156, %136, %108, %88, %64
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %4) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @predict_nnz(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.pix_pos, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #48
  %5 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !49
  %7 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %8 = load ptr, ptr %7, align 8, !tbaa !84
  %9 = sext i32 %6 to i64
  %10 = shl i32 %1, 2
  %11 = add nsw i32 %10, -1
  %12 = shl i32 %2, 2
  call void @getLuma4x4Neighbour(i32 noundef %6, i32 noundef %11, i32 noundef %12, ptr noundef nonnull %4) #46
  %13 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 6
  %14 = load i32, ptr %13, align 8, !tbaa !195
  switch i32 %14, label %15 [
    i32 9, label %20
    i32 10, label %20
    i32 14, label %20
    i32 13, label %20
  ]

15:                                               ; preds = %3
  %16 = icmp eq i32 %14, 12
  %17 = load i32, ptr %4, align 4
  %18 = icmp ne i32 %17, 0
  %19 = select i1 %16, i1 %18, i1 false
  br i1 %19, label %23, label %46

20:                                               ; preds = %3, %3, %3, %3
  %21 = load i32, ptr %4, align 4, !tbaa !52
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %70, label %23

23:                                               ; preds = %20, %15
  %24 = phi i32 [ %17, %15 ], [ %21, %20 ]
  %25 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %25, i64 0, i32 30
  %27 = load i32, ptr %26, align 4, !tbaa !54
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %50, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %31 = load ptr, ptr %30, align 8, !tbaa !165
  %32 = getelementptr inbounds %struct.Slice, ptr %31, i64 0, i32 7
  %33 = load i32, ptr %32, align 4, !tbaa !213
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %50

35:                                               ; preds = %29
  %36 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  %37 = load ptr, ptr %36, align 8, !tbaa !56
  %38 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %39 = load i32, ptr %38, align 4, !tbaa !57
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, ptr %37, i64 %40
  %42 = load i32, ptr %41, align 4, !tbaa !18
  %43 = and i32 %24, %42
  store i32 %43, ptr %4, align 4, !tbaa !52
  %44 = icmp eq i32 %43, 0
  %45 = zext i1 %44 to i32
  br label %46

46:                                               ; preds = %35, %15
  %47 = phi i32 [ %43, %35 ], [ %17, %15 ]
  %48 = phi i32 [ %45, %35 ], [ 0, %15 ]
  %49 = icmp eq i32 %47, 0
  br i1 %49, label %70, label %50

50:                                               ; preds = %46, %29, %23
  %51 = phi i32 [ %48, %46 ], [ 0, %23 ], [ 0, %29 ]
  %52 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 32
  %53 = load ptr, ptr %52, align 8, !tbaa !617
  %54 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %55 = load i32, ptr %54, align 4, !tbaa !57
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds ptr, ptr %53, i64 %56
  %58 = load ptr, ptr %57, align 8, !tbaa !13
  %59 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 2
  %60 = load i32, ptr %59, align 4, !tbaa !188
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds ptr, ptr %58, i64 %61
  %63 = load ptr, ptr %62, align 8, !tbaa !13
  %64 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 3
  %65 = load i32, ptr %64, align 4, !tbaa !187
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i32, ptr %63, i64 %66
  %68 = load i32, ptr %67, align 4, !tbaa !18
  %69 = add nuw nsw i32 %51, 1
  br label %70

70:                                               ; preds = %50, %46, %20
  %71 = phi i32 [ %69, %50 ], [ %48, %46 ], [ 0, %20 ]
  %72 = phi i32 [ %68, %50 ], [ 0, %46 ], [ 0, %20 ]
  %73 = add nsw i32 %12, -1
  call void @getLuma4x4Neighbour(i32 noundef %6, i32 noundef %10, i32 noundef %73, ptr noundef nonnull %4) #46
  %74 = load i32, ptr %13, align 8, !tbaa !195
  switch i32 %74, label %75 [
    i32 9, label %80
    i32 10, label %80
    i32 14, label %80
    i32 13, label %80
  ]

75:                                               ; preds = %70
  %76 = icmp eq i32 %74, 12
  %77 = load i32, ptr %4, align 4
  %78 = icmp ne i32 %77, 0
  %79 = select i1 %76, i1 %78, i1 false
  br i1 %79, label %83, label %107

80:                                               ; preds = %70, %70, %70, %70
  %81 = load i32, ptr %4, align 4, !tbaa !52
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %132, label %83

83:                                               ; preds = %80, %75
  %84 = phi i32 [ %77, %75 ], [ %81, %80 ]
  %85 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %86 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %85, i64 0, i32 30
  %87 = load i32, ptr %86, align 4, !tbaa !54
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %111, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %91 = load ptr, ptr %90, align 8, !tbaa !165
  %92 = getelementptr inbounds %struct.Slice, ptr %91, i64 0, i32 7
  %93 = load i32, ptr %92, align 4, !tbaa !213
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %111

95:                                               ; preds = %89
  %96 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  %97 = load ptr, ptr %96, align 8, !tbaa !56
  %98 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %99 = load i32, ptr %98, align 4, !tbaa !57
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i32, ptr %97, i64 %100
  %102 = load i32, ptr %101, align 4, !tbaa !18
  %103 = and i32 %84, %102
  store i32 %103, ptr %4, align 4, !tbaa !52
  %104 = icmp eq i32 %103, 0
  %105 = zext i1 %104 to i32
  %106 = add nuw nsw i32 %71, %105
  br label %107

107:                                              ; preds = %95, %75
  %108 = phi i32 [ %103, %95 ], [ %77, %75 ]
  %109 = phi i32 [ %106, %95 ], [ %71, %75 ]
  %110 = icmp eq i32 %108, 0
  br i1 %110, label %132, label %111

111:                                              ; preds = %107, %89, %83
  %112 = phi i32 [ %109, %107 ], [ %71, %83 ], [ %71, %89 ]
  %113 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 32
  %114 = load ptr, ptr %113, align 8, !tbaa !617
  %115 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %116 = load i32, ptr %115, align 4, !tbaa !57
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds ptr, ptr %114, i64 %117
  %119 = load ptr, ptr %118, align 8, !tbaa !13
  %120 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 2
  %121 = load i32, ptr %120, align 4, !tbaa !188
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds ptr, ptr %119, i64 %122
  %124 = load ptr, ptr %123, align 8, !tbaa !13
  %125 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 3
  %126 = load i32, ptr %125, align 4, !tbaa !187
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i32, ptr %124, i64 %127
  %129 = load i32, ptr %128, align 4, !tbaa !18
  %130 = add nsw i32 %129, %72
  %131 = add nuw nsw i32 %112, 1
  br label %132

132:                                              ; preds = %111, %107, %80
  %133 = phi i32 [ %131, %111 ], [ %109, %107 ], [ %71, %80 ]
  %134 = phi i32 [ %130, %111 ], [ %72, %107 ], [ %72, %80 ]
  %135 = icmp eq i32 %133, 2
  %136 = add nsw i32 %134, 1
  %137 = ashr i32 %136, 1
  %138 = select i1 %135, i32 %137, i32 %134
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #48
  ret i32 %138
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @predict_nnz_chroma(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.pix_pos, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #48
  %5 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !49
  %7 = sext i32 %2 to i64
  %8 = getelementptr inbounds [12 x i32], ptr @predict_nnz_chroma.j_off_tab, i64 0, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !18
  %10 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %11 = load ptr, ptr %10, align 8, !tbaa !84
  %12 = sext i32 %6 to i64
  %13 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %14 = getelementptr inbounds %struct.storable_picture, ptr %13, i64 0, i32 50
  %15 = load i32, ptr %14, align 4, !tbaa !83
  %16 = icmp eq i32 %15, 3
  %17 = shl i32 %1, 2
  br i1 %16, label %136, label %18

18:                                               ; preds = %3
  %19 = and i32 %17, 4
  %20 = add nsw i32 %19, -1
  %21 = shl i32 %2, 2
  %22 = add i32 %21, -16
  call void @getChroma4x4Neighbour(i32 noundef %6, i32 noundef %20, i32 noundef %22, ptr noundef nonnull %4) #46
  %23 = getelementptr inbounds %struct.macroblock, ptr %11, i64 %12, i32 6
  %24 = load i32, ptr %23, align 8, !tbaa !195
  switch i32 %24, label %25 [
    i32 9, label %30
    i32 10, label %30
    i32 14, label %30
    i32 13, label %30
  ]

25:                                               ; preds = %18
  %26 = icmp eq i32 %24, 12
  %27 = load i32, ptr %4, align 4
  %28 = icmp ne i32 %27, 0
  %29 = select i1 %26, i1 %28, i1 false
  br i1 %29, label %33, label %56

30:                                               ; preds = %18, %18, %18, %18
  %31 = load i32, ptr %4, align 4, !tbaa !52
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %83, label %33

33:                                               ; preds = %30, %25
  %34 = phi i32 [ %27, %25 ], [ %31, %30 ]
  %35 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %36 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %35, i64 0, i32 30
  %37 = load i32, ptr %36, align 4, !tbaa !54
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %41 = load ptr, ptr %40, align 8, !tbaa !165
  %42 = getelementptr inbounds %struct.Slice, ptr %41, i64 0, i32 7
  %43 = load i32, ptr %42, align 4, !tbaa !213
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %60

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  %47 = load ptr, ptr %46, align 8, !tbaa !56
  %48 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %49 = load i32, ptr %48, align 4, !tbaa !57
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, ptr %47, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !18
  %53 = and i32 %34, %52
  store i32 %53, ptr %4, align 4, !tbaa !52
  %54 = icmp eq i32 %53, 0
  %55 = zext i1 %54 to i32
  br label %56

56:                                               ; preds = %45, %25
  %57 = phi i32 [ %53, %45 ], [ %27, %25 ]
  %58 = phi i32 [ %55, %45 ], [ 0, %25 ]
  %59 = icmp eq i32 %57, 0
  br i1 %59, label %83, label %60

60:                                               ; preds = %56, %39, %33
  %61 = phi i32 [ %58, %56 ], [ 0, %33 ], [ 0, %39 ]
  %62 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 32
  %63 = load ptr, ptr %62, align 8, !tbaa !617
  %64 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %65 = load i32, ptr %64, align 4, !tbaa !57
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds ptr, ptr %63, i64 %66
  %68 = load ptr, ptr %67, align 8, !tbaa !13
  %69 = and i32 %1, -2
  %70 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 2
  %71 = load i32, ptr %70, align 4, !tbaa !188
  %72 = add nsw i32 %71, %69
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds ptr, ptr %68, i64 %73
  %75 = load ptr, ptr %74, align 8, !tbaa !13
  %76 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 3
  %77 = load i32, ptr %76, align 4, !tbaa !187
  %78 = add nsw i32 %77, 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i32, ptr %75, i64 %79
  %81 = load i32, ptr %80, align 4, !tbaa !18
  %82 = add nuw nsw i32 %61, 1
  br label %83

83:                                               ; preds = %60, %56, %30
  %84 = phi i32 [ %82, %60 ], [ %58, %56 ], [ 0, %30 ]
  %85 = phi i32 [ %81, %60 ], [ 0, %56 ], [ 0, %30 ]
  %86 = add i32 %21, -17
  call void @getChroma4x4Neighbour(i32 noundef %6, i32 noundef %19, i32 noundef %86, ptr noundef nonnull %4) #46
  %87 = load i32, ptr %23, align 8, !tbaa !195
  switch i32 %87, label %88 [
    i32 9, label %93
    i32 10, label %93
    i32 14, label %93
    i32 13, label %93
  ]

88:                                               ; preds = %83
  %89 = icmp eq i32 %87, 12
  %90 = load i32, ptr %4, align 4
  %91 = icmp ne i32 %90, 0
  %92 = select i1 %89, i1 %91, i1 false
  br i1 %92, label %96, label %120

93:                                               ; preds = %83, %83, %83, %83
  %94 = load i32, ptr %4, align 4, !tbaa !52
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %263, label %96

96:                                               ; preds = %93, %88
  %97 = phi i32 [ %90, %88 ], [ %94, %93 ]
  %98 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %99 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %98, i64 0, i32 30
  %100 = load i32, ptr %99, align 4, !tbaa !54
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %124, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %104 = load ptr, ptr %103, align 8, !tbaa !165
  %105 = getelementptr inbounds %struct.Slice, ptr %104, i64 0, i32 7
  %106 = load i32, ptr %105, align 4, !tbaa !213
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %124

108:                                              ; preds = %102
  %109 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  %110 = load ptr, ptr %109, align 8, !tbaa !56
  %111 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %112 = load i32, ptr %111, align 4, !tbaa !57
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, ptr %110, i64 %113
  %115 = load i32, ptr %114, align 4, !tbaa !18
  %116 = and i32 %97, %115
  store i32 %116, ptr %4, align 4, !tbaa !52
  %117 = icmp eq i32 %116, 0
  %118 = zext i1 %117 to i32
  %119 = add nuw nsw i32 %84, %118
  br label %120

120:                                              ; preds = %108, %88
  %121 = phi i32 [ %116, %108 ], [ %90, %88 ]
  %122 = phi i32 [ %119, %108 ], [ %84, %88 ]
  %123 = icmp eq i32 %121, 0
  br i1 %123, label %263, label %124

124:                                              ; preds = %120, %102, %96
  %125 = phi i32 [ %122, %120 ], [ %84, %96 ], [ %84, %102 ]
  %126 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 32
  %127 = load ptr, ptr %126, align 8, !tbaa !617
  %128 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %129 = load i32, ptr %128, align 4, !tbaa !57
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds ptr, ptr %127, i64 %130
  %132 = and i32 %1, -2
  %133 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 2
  %134 = load i32, ptr %133, align 4, !tbaa !188
  %135 = add nsw i32 %134, %132
  br label %245

136:                                              ; preds = %3
  %137 = add nsw i32 %17, -1
  %138 = sub nsw i32 %2, %9
  %139 = shl i32 %138, 2
  call void @getChroma4x4Neighbour(i32 noundef %6, i32 noundef %137, i32 noundef %139, ptr noundef nonnull %4) #46
  %140 = getelementptr inbounds %struct.macroblock, ptr %11, i64 %12, i32 6
  %141 = load i32, ptr %140, align 8, !tbaa !195
  switch i32 %141, label %142 [
    i32 9, label %147
    i32 10, label %147
    i32 14, label %147
    i32 13, label %147
  ]

142:                                              ; preds = %136
  %143 = icmp eq i32 %141, 12
  %144 = load i32, ptr %4, align 4
  %145 = icmp ne i32 %144, 0
  %146 = select i1 %143, i1 %145, i1 false
  br i1 %146, label %150, label %171

147:                                              ; preds = %136, %136, %136, %136
  %148 = load i32, ptr %4, align 4, !tbaa !52
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %196, label %150

150:                                              ; preds = %147, %142
  %151 = phi i32 [ %144, %142 ], [ %148, %147 ]
  %152 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %153 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %152, i64 0, i32 30
  %154 = load i32, ptr %153, align 4, !tbaa !54
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %175, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %158 = load ptr, ptr %157, align 8, !tbaa !165
  %159 = getelementptr inbounds %struct.Slice, ptr %158, i64 0, i32 7
  %160 = load i32, ptr %159, align 4, !tbaa !213
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %162, label %175

162:                                              ; preds = %156
  %163 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  %164 = load ptr, ptr %163, align 8, !tbaa !56
  %165 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %166 = load i32, ptr %165, align 4, !tbaa !57
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i32, ptr %164, i64 %167
  %169 = load i32, ptr %168, align 4, !tbaa !18
  %170 = and i32 %151, %169
  store i32 %170, ptr %4, align 4, !tbaa !52
  br label %171

171:                                              ; preds = %162, %142
  %172 = phi i32 [ %170, %162 ], [ %144, %142 ]
  %173 = phi i32 [ -1, %162 ], [ 0, %142 ]
  %174 = icmp eq i32 %172, 0
  br i1 %174, label %196, label %175

175:                                              ; preds = %171, %156, %150
  %176 = phi i32 [ %173, %171 ], [ 0, %150 ], [ 0, %156 ]
  %177 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 32
  %178 = load ptr, ptr %177, align 8, !tbaa !617
  %179 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %180 = load i32, ptr %179, align 4, !tbaa !57
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds ptr, ptr %178, i64 %181
  %183 = load ptr, ptr %182, align 8, !tbaa !13
  %184 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 2
  %185 = load i32, ptr %184, align 4, !tbaa !188
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds ptr, ptr %183, i64 %186
  %188 = load ptr, ptr %187, align 8, !tbaa !13
  %189 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 3
  %190 = load i32, ptr %189, align 4, !tbaa !187
  %191 = add nsw i32 %190, %9
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i32, ptr %188, i64 %192
  %194 = load i32, ptr %193, align 4, !tbaa !18
  %195 = add nsw i32 %176, 1
  br label %196

196:                                              ; preds = %175, %171, %147
  %197 = phi i32 [ %195, %175 ], [ %173, %171 ], [ 0, %147 ]
  %198 = phi i32 [ %194, %175 ], [ 0, %171 ], [ 0, %147 ]
  %199 = add nsw i32 %139, -1
  call void @getChroma4x4Neighbour(i32 noundef %6, i32 noundef %17, i32 noundef %199, ptr noundef nonnull %4) #46
  %200 = load i32, ptr %140, align 8, !tbaa !195
  switch i32 %200, label %201 [
    i32 9, label %206
    i32 10, label %206
    i32 14, label %206
    i32 13, label %206
  ]

201:                                              ; preds = %196
  %202 = icmp eq i32 %200, 12
  %203 = load i32, ptr %4, align 4
  %204 = icmp ne i32 %203, 0
  %205 = select i1 %202, i1 %204, i1 false
  br i1 %205, label %209, label %231

206:                                              ; preds = %196, %196, %196, %196
  %207 = load i32, ptr %4, align 4, !tbaa !52
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %263, label %209

209:                                              ; preds = %206, %201
  %210 = phi i32 [ %203, %201 ], [ %207, %206 ]
  %211 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %212 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %211, i64 0, i32 30
  %213 = load i32, ptr %212, align 4, !tbaa !54
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %235, label %215

215:                                              ; preds = %209
  %216 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %217 = load ptr, ptr %216, align 8, !tbaa !165
  %218 = getelementptr inbounds %struct.Slice, ptr %217, i64 0, i32 7
  %219 = load i32, ptr %218, align 4, !tbaa !213
  %220 = icmp eq i32 %219, 1
  br i1 %220, label %221, label %235

221:                                              ; preds = %215
  %222 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  %223 = load ptr, ptr %222, align 8, !tbaa !56
  %224 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %225 = load i32, ptr %224, align 4, !tbaa !57
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds i32, ptr %223, i64 %226
  %228 = load i32, ptr %227, align 4, !tbaa !18
  %229 = and i32 %210, %228
  store i32 %229, ptr %4, align 4, !tbaa !52
  %230 = add nsw i32 %197, -1
  br label %231

231:                                              ; preds = %221, %201
  %232 = phi i32 [ %229, %221 ], [ %203, %201 ]
  %233 = phi i32 [ %230, %221 ], [ %197, %201 ]
  %234 = icmp eq i32 %232, 0
  br i1 %234, label %263, label %235

235:                                              ; preds = %231, %215, %209
  %236 = phi i32 [ %233, %231 ], [ %197, %209 ], [ %197, %215 ]
  %237 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 32
  %238 = load ptr, ptr %237, align 8, !tbaa !617
  %239 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %240 = load i32, ptr %239, align 4, !tbaa !57
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds ptr, ptr %238, i64 %241
  %243 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 2
  %244 = load i32, ptr %243, align 4, !tbaa !188
  br label %245

245:                                              ; preds = %235, %124
  %246 = phi i32 [ %244, %235 ], [ %135, %124 ]
  %247 = phi ptr [ %242, %235 ], [ %131, %124 ]
  %248 = phi i32 [ %9, %235 ], [ 4, %124 ]
  %249 = phi i32 [ %198, %235 ], [ %85, %124 ]
  %250 = phi i32 [ %236, %235 ], [ %125, %124 ]
  %251 = load ptr, ptr %247, align 8, !tbaa !13
  %252 = sext i32 %246 to i64
  %253 = getelementptr inbounds ptr, ptr %251, i64 %252
  %254 = load ptr, ptr %253, align 8, !tbaa !13
  %255 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 3
  %256 = load i32, ptr %255, align 4, !tbaa !187
  %257 = add nsw i32 %256, %248
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds i32, ptr %254, i64 %258
  %260 = load i32, ptr %259, align 4, !tbaa !18
  %261 = add nsw i32 %260, %249
  %262 = add nsw i32 %250, 1
  br label %263

263:                                              ; preds = %245, %231, %206, %120, %93
  %264 = phi i32 [ %122, %120 ], [ %233, %231 ], [ %84, %93 ], [ %197, %206 ], [ %262, %245 ]
  %265 = phi i32 [ %85, %120 ], [ %198, %231 ], [ %85, %93 ], [ %198, %206 ], [ %261, %245 ]
  %266 = icmp eq i32 %264, 2
  %267 = add nsw i32 %265, 1
  %268 = ashr i32 %267, 1
  %269 = select i1 %266, i32 %268, i32 %265
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #48
  ret i32 %269
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #12

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define internal void @CalculateQuant8Param() #15 {
  %1 = load ptr, ptr getelementptr inbounds ([8 x ptr], ptr @qmatrix, i64 0, i64 6), align 16, !tbaa !13
  %2 = load ptr, ptr getelementptr inbounds ([8 x ptr], ptr @qmatrix, i64 0, i64 7), align 8, !tbaa !13
  br label %3

3:                                                ; preds = %26, %0
  %4 = phi i64 [ 0, %0 ], [ %27, %26 ]
  br label %5

5:                                                ; preds = %23, %3
  %6 = phi i64 [ 0, %3 ], [ %24, %23 ]
  br label %7

7:                                                ; preds = %7, %5
  %8 = phi i64 [ 0, %5 ], [ %21, %7 ]
  %9 = shl nuw nsw i64 %8, 3
  %10 = add nuw nsw i64 %9, %6
  %11 = getelementptr inbounds [6 x [8 x [8 x i32]]], ptr @dequant_coef8, i64 0, i64 %4, i64 %6, i64 %8
  %12 = load i32, ptr %11, align 4, !tbaa !18
  %13 = getelementptr inbounds i32, ptr %1, i64 %10
  %14 = load i32, ptr %13, align 4, !tbaa !18
  %15 = mul nsw i32 %14, %12
  %16 = getelementptr inbounds [6 x [8 x [8 x i32]]], ptr @InvLevelScale8x8Luma_Intra, i64 0, i64 %4, i64 %8, i64 %6
  store i32 %15, ptr %16, align 4, !tbaa !18
  %17 = getelementptr inbounds i32, ptr %2, i64 %10
  %18 = load i32, ptr %17, align 4, !tbaa !18
  %19 = mul nsw i32 %18, %12
  %20 = getelementptr inbounds [6 x [8 x [8 x i32]]], ptr @InvLevelScale8x8Luma_Inter, i64 0, i64 %4, i64 %8, i64 %6
  store i32 %19, ptr %20, align 4, !tbaa !18
  %21 = add nuw nsw i64 %8, 1
  %22 = icmp eq i64 %21, 8
  br i1 %22, label %23, label %7, !llvm.loop !856

23:                                               ; preds = %7
  %24 = add nuw nsw i64 %6, 1
  %25 = icmp eq i64 %24, 8
  br i1 %25, label %26, label %5, !llvm.loop !857

26:                                               ; preds = %23
  %27 = add nuw nsw i64 %4, 1
  %28 = icmp eq i64 %27, 6
  br i1 %28, label %29, label %3, !llvm.loop !858

29:                                               ; preds = %26
  ret void
}

; Function Attrs: nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @decode_ipcm_mb(ptr nocapture noundef readonly %0) #25 {
  %2 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %3 = load ptr, ptr %2, align 8, !tbaa !84
  %4 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !49
  %6 = zext i32 %5 to i64
  %7 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.storable_picture, ptr %7, i64 0, i32 32
  %9 = load ptr, ptr %8, align 8, !tbaa !47
  %10 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 19
  %11 = load i32, ptr %10, align 8, !tbaa !722
  %12 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 20
  %13 = load i32, ptr %12, align 4, !tbaa !723
  %14 = sext i32 %13 to i64
  %15 = sext i32 %11 to i64
  br label %16

16:                                               ; preds = %36, %1
  %17 = phi i64 [ 0, %1 ], [ %37, %36 ]
  %18 = lshr i64 %17, 2
  %19 = and i64 %18, 1073741823
  %20 = and i64 %17, 3
  %21 = add nsw i64 %17, %15
  %22 = getelementptr inbounds ptr, ptr %9, i64 %21
  %23 = load ptr, ptr %22, align 8, !tbaa !13
  br label %24

24:                                               ; preds = %24, %16
  %25 = phi i64 [ 0, %16 ], [ %34, %24 ]
  %26 = lshr i64 %25, 2
  %27 = and i64 %26, 1073741823
  %28 = and i64 %25, 3
  %29 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %19, i64 %27, i64 %20, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !18
  %31 = trunc i32 %30 to i16
  %32 = add nsw i64 %25, %14
  %33 = getelementptr inbounds i16, ptr %23, i64 %32
  store i16 %31, ptr %33, align 2, !tbaa !40
  %34 = add nuw nsw i64 %25, 1
  %35 = icmp eq i64 %34, 16
  br i1 %35, label %36, label %24, !llvm.loop !859

36:                                               ; preds = %24
  %37 = add nuw nsw i64 %17, 1
  %38 = icmp eq i64 %37, 16
  br i1 %38, label %39, label %16, !llvm.loop !860

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6
  %41 = getelementptr inbounds %struct.storable_picture, ptr %7, i64 0, i32 50
  %42 = load i32, ptr %41, align 4, !tbaa !83
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 116
  %46 = load i32, ptr %45, align 8, !tbaa !86
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %133

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 115
  %50 = load i32, ptr %49, align 4, !tbaa !85
  %51 = icmp sgt i32 %50, 0
  %52 = getelementptr inbounds %struct.storable_picture, ptr %7, i64 0, i32 33
  %53 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 21
  %54 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 23
  %55 = zext i32 %50 to i64
  br label %56

56:                                               ; preds = %95, %48
  %57 = phi i32 [ 0, %48 ], [ %96, %95 ]
  br i1 %51, label %58, label %95

58:                                               ; preds = %56
  %59 = lshr i32 %57, 2
  %60 = zext i32 %59 to i64
  %61 = and i32 %57, 3
  %62 = zext i32 %61 to i64
  %63 = load ptr, ptr %52, align 8, !tbaa !82
  %64 = load ptr, ptr %63, align 8, !tbaa !13
  %65 = load i32, ptr %53, align 8, !tbaa !302
  %66 = add nsw i32 %65, %57
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds ptr, ptr %64, i64 %67
  %69 = load ptr, ptr %68, align 8, !tbaa !13
  %70 = load i32, ptr %54, align 8, !tbaa !304
  %71 = sext i32 %70 to i64
  br label %81

72:                                               ; preds = %95
  br i1 %47, label %73, label %133

73:                                               ; preds = %72
  %74 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 115
  %75 = load i32, ptr %74, align 4, !tbaa !85
  %76 = icmp sgt i32 %75, 0
  %77 = getelementptr inbounds %struct.storable_picture, ptr %7, i64 0, i32 33
  %78 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 21
  %79 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 23
  %80 = zext i32 %75 to i64
  br label %98

81:                                               ; preds = %81, %58
  %82 = phi i64 [ 0, %58 ], [ %93, %81 ]
  %83 = trunc i64 %82 to i32
  %84 = lshr i32 %83, 2
  %85 = add nuw nsw i32 %84, 4
  %86 = zext i32 %85 to i64
  %87 = and i64 %82, 3
  %88 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %60, i64 %86, i64 %62, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !18
  %90 = trunc i32 %89 to i16
  %91 = add nsw i64 %82, %71
  %92 = getelementptr inbounds i16, ptr %69, i64 %91
  store i16 %90, ptr %92, align 2, !tbaa !40
  %93 = add nuw nsw i64 %82, 1
  %94 = icmp eq i64 %93, %55
  br i1 %94, label %95, label %81, !llvm.loop !861

95:                                               ; preds = %81, %56
  %96 = add nuw nsw i32 %57, 1
  %97 = icmp eq i32 %96, %46
  br i1 %97, label %72, label %56, !llvm.loop !862

98:                                               ; preds = %130, %73
  %99 = phi i32 [ 0, %73 ], [ %131, %130 ]
  br i1 %76, label %100, label %130

100:                                              ; preds = %98
  %101 = lshr i32 %99, 2
  %102 = add nuw nsw i32 %101, 2
  %103 = zext i32 %102 to i64
  %104 = and i32 %99, 3
  %105 = zext i32 %104 to i64
  %106 = load ptr, ptr %77, align 8, !tbaa !82
  %107 = getelementptr inbounds ptr, ptr %106, i64 1
  %108 = load ptr, ptr %107, align 8, !tbaa !13
  %109 = load i32, ptr %78, align 8, !tbaa !302
  %110 = add nsw i32 %109, %99
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds ptr, ptr %108, i64 %111
  %113 = load ptr, ptr %112, align 8, !tbaa !13
  %114 = load i32, ptr %79, align 8, !tbaa !304
  %115 = sext i32 %114 to i64
  br label %116

116:                                              ; preds = %116, %100
  %117 = phi i64 [ 0, %100 ], [ %128, %116 ]
  %118 = trunc i64 %117 to i32
  %119 = lshr i32 %118, 2
  %120 = add nuw nsw i32 %119, 4
  %121 = zext i32 %120 to i64
  %122 = and i64 %117, 3
  %123 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 28, i64 %103, i64 %121, i64 %105, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !18
  %125 = trunc i32 %124 to i16
  %126 = add nsw i64 %117, %115
  %127 = getelementptr inbounds i16, ptr %113, i64 %126
  store i16 %125, ptr %127, align 2, !tbaa !40
  %128 = add nuw nsw i64 %117, 1
  %129 = icmp eq i64 %128, %80
  br i1 %129, label %130, label %116, !llvm.loop !863

130:                                              ; preds = %116, %98
  %131 = add nuw nsw i32 %99, 1
  %132 = icmp eq i32 %131, %46
  br i1 %132, label %133, label %98, !llvm.loop !864

133:                                              ; preds = %130, %72, %44, %39
  store i32 0, ptr %40, align 8, !tbaa !720
  %134 = load ptr, ptr @img, align 8, !tbaa !13
  %135 = getelementptr inbounds %struct.img_par, ptr %134, i64 0, i32 104
  br label %136

136:                                              ; preds = %152, %133
  %137 = phi i1 [ true, %133 ], [ false, %152 ]
  %138 = phi i64 [ 0, %133 ], [ 1, %152 ]
  %139 = load i32, ptr %135, align 8, !tbaa !705
  %140 = sub nsw i32 0, %139
  %141 = getelementptr inbounds %struct.storable_picture, ptr %7, i64 0, i32 58, i64 %138
  %142 = load i32, ptr %141, align 4, !tbaa !18
  %143 = tail call i32 @llvm.smax.i32(i32 %142, i32 %140)
  %144 = tail call i32 @llvm.smin.i32(i32 %143, i32 51)
  %145 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 1, i64 %138
  %146 = icmp slt i32 %144, 0
  br i1 %146, label %152, label %147

147:                                              ; preds = %136
  %148 = zext i32 %144 to i64
  %149 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %148
  %150 = load i8, ptr %149, align 1, !tbaa !14
  %151 = zext i8 %150 to i32
  br label %152

152:                                              ; preds = %147, %136
  %153 = phi i32 [ %151, %147 ], [ %144, %136 ]
  store i32 %153, ptr %145, align 4, !tbaa !18
  br i1 %137, label %136, label %154, !llvm.loop !798

154:                                              ; preds = %152
  %155 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 113
  %156 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 32
  %157 = load i32, ptr %155, align 4, !tbaa !93
  br label %158

158:                                              ; preds = %178, %154
  %159 = phi i32 [ %157, %154 ], [ %179, %178 ]
  %160 = phi i64 [ 0, %154 ], [ %180, %178 ]
  %161 = icmp sgt i32 %159, -4
  br i1 %161, label %162, label %178

162:                                              ; preds = %158
  %163 = load ptr, ptr %156, align 8, !tbaa !617
  br label %164

164:                                              ; preds = %164, %162
  %165 = phi i64 [ 0, %162 ], [ %173, %164 ]
  %166 = load i32, ptr %4, align 4, !tbaa !49
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds ptr, ptr %163, i64 %167
  %169 = load ptr, ptr %168, align 8, !tbaa !13
  %170 = getelementptr inbounds ptr, ptr %169, i64 %160
  %171 = load ptr, ptr %170, align 8, !tbaa !13
  %172 = getelementptr inbounds i32, ptr %171, i64 %165
  store i32 16, ptr %172, align 4, !tbaa !18
  %173 = add nuw nsw i64 %165, 1
  %174 = load i32, ptr %155, align 4, !tbaa !93
  %175 = add nsw i32 %174, 3
  %176 = sext i32 %175 to i64
  %177 = icmp slt i64 %165, %176
  br i1 %177, label %164, label %178, !llvm.loop !865

178:                                              ; preds = %164, %158
  %179 = phi i32 [ %159, %158 ], [ %174, %164 ]
  %180 = add nuw nsw i64 %160, 1
  %181 = icmp eq i64 %180, 4
  br i1 %181, label %182, label %158, !llvm.loop !866

182:                                              ; preds = %178
  %183 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 21
  store i32 0, ptr %183, align 8, !tbaa !183
  %184 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %6, i32 9
  store i64 65535, ptr %184, align 8, !tbaa !718
  store i32 0, ptr @last_dquant, align 4, !tbaa !18
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @decode_one_macroblock(ptr noundef %0, ptr nocapture noundef readnone %1) #0 {
  %3 = alloca [4 x [4 x i32]], align 16
  %4 = alloca [4 x [4 x i32]], align 16
  %5 = alloca [2 x i16], align 4
  %6 = alloca [2 x i16], align 4
  %7 = alloca %struct.pix_pos, align 4
  %8 = alloca %struct.pix_pos, align 4
  %9 = alloca %struct.pix_pos, align 4
  %10 = alloca %struct.pix_pos, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %3) #48
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %4) #48
  %11 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 39
  %12 = load ptr, ptr %11, align 8, !tbaa !84
  %13 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %14 = load i32, ptr %13, align 4, !tbaa !49
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 10
  %17 = load i32, ptr %16, align 4, !tbaa !137
  %18 = icmp eq i32 %17, 3
  br i1 %18, label %19, label %25

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 6
  %21 = load i32, ptr %20, align 8, !tbaa !195
  %22 = add i32 %21, -9
  %23 = and i32 %22, -6
  %24 = icmp ne i32 %23, 0
  br label %31

25:                                               ; preds = %2
  %26 = icmp eq i32 %17, 4
  br i1 %26, label %27, label %31

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 6
  %29 = load i32, ptr %28, align 8, !tbaa !195
  %30 = icmp eq i32 %29, 12
  br label %31

31:                                               ; preds = %27, %25, %19
  %32 = phi i1 [ false, %25 ], [ %30, %27 ], [ %24, %19 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #48
  store i32 0, ptr %5, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #48
  store i32 0, ptr %6, align 4
  %33 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 44
  %34 = load i32, ptr %33, align 8, !tbaa !189
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 20
  %38 = load i32, ptr %37, align 4, !tbaa !170
  %39 = icmp ne i32 %38, 0
  br label %40

40:                                               ; preds = %36, %31
  %41 = phi i1 [ false, %31 ], [ %39, %36 ]
  %42 = zext i1 %41 to i32
  %43 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 30
  %44 = load i32, ptr %43, align 4, !tbaa !194
  %45 = icmp eq i32 %44, 0
  %46 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %47 = getelementptr inbounds %struct.storable_picture, ptr %46, i64 0, i32 50
  %48 = load i32, ptr %47, align 4, !tbaa !83
  %49 = add nsw i32 %48, -1
  %50 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 6
  %51 = load i32, ptr %50, align 8, !tbaa !195
  br i1 %18, label %52, label %55

52:                                               ; preds = %40
  %53 = icmp ne i32 %51, 10
  %54 = select i1 %53, i1 true, i1 %32
  br label %55

55:                                               ; preds = %52, %40
  %56 = phi i1 [ %54, %52 ], [ %32, %40 ]
  %57 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 6
  %58 = icmp eq i32 %51, 14
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  tail call void @decode_ipcm_mb(ptr noundef nonnull %0) #47
  br label %3133

60:                                               ; preds = %55
  br i1 %41, label %61, label %89

61:                                               ; preds = %60
  %62 = and i32 %14, 1
  %63 = icmp eq i32 %62, 0
  %64 = load ptr, ptr @Co_located, align 8, !tbaa !13
  br i1 %63, label %70, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.colocated_params, ptr %64, i64 0, i32 17
  %67 = getelementptr inbounds %struct.colocated_params, ptr %64, i64 0, i32 16
  %68 = getelementptr inbounds %struct.colocated_params, ptr %64, i64 0, i32 14
  %69 = getelementptr inbounds %struct.colocated_params, ptr %64, i64 0, i32 15
  br label %75

70:                                               ; preds = %61
  %71 = getelementptr inbounds %struct.colocated_params, ptr %64, i64 0, i32 12
  %72 = getelementptr inbounds %struct.colocated_params, ptr %64, i64 0, i32 11
  %73 = getelementptr inbounds %struct.colocated_params, ptr %64, i64 0, i32 9
  %74 = getelementptr inbounds %struct.colocated_params, ptr %64, i64 0, i32 10
  br label %75

75:                                               ; preds = %70, %65
  %76 = phi i32 [ 4, %65 ], [ 2, %70 ]
  %77 = phi ptr [ %66, %65 ], [ %71, %70 ]
  %78 = phi ptr [ %67, %65 ], [ %72, %70 ]
  %79 = phi ptr [ %68, %65 ], [ %73, %70 ]
  %80 = phi ptr [ %69, %65 ], [ %74, %70 ]
  %81 = getelementptr inbounds %struct.storable_picture, ptr %46, i64 0, i32 22
  %82 = load i32, ptr %81, align 4, !tbaa !312
  %83 = ashr i32 %82, 1
  %84 = add nsw i32 %83, -1
  %85 = load ptr, ptr %80, align 8, !tbaa !13
  %86 = load ptr, ptr %79, align 8, !tbaa !13
  %87 = load ptr, ptr %78, align 8, !tbaa !13
  %88 = load ptr, ptr %77, align 8, !tbaa !13
  br i1 %35, label %102, label %143

89:                                               ; preds = %60
  %90 = load ptr, ptr @Co_located, align 8, !tbaa !13
  %91 = getelementptr inbounds %struct.colocated_params, ptr %90, i64 0, i32 7
  %92 = getelementptr inbounds %struct.colocated_params, ptr %90, i64 0, i32 6
  %93 = getelementptr inbounds %struct.colocated_params, ptr %90, i64 0, i32 4
  %94 = getelementptr inbounds %struct.colocated_params, ptr %90, i64 0, i32 5
  %95 = getelementptr inbounds %struct.storable_picture, ptr %46, i64 0, i32 22
  %96 = load i32, ptr %95, align 4, !tbaa !312
  %97 = add nsw i32 %96, -1
  %98 = load ptr, ptr %94, align 8, !tbaa !13
  %99 = load ptr, ptr %93, align 8, !tbaa !13
  %100 = load ptr, ptr %92, align 8, !tbaa !13
  %101 = load ptr, ptr %91, align 8, !tbaa !13
  br i1 %35, label %102, label %144

102:                                              ; preds = %89, %75
  %103 = phi ptr [ %101, %89 ], [ %88, %75 ]
  %104 = phi ptr [ %100, %89 ], [ %87, %75 ]
  %105 = phi ptr [ %99, %89 ], [ %86, %75 ]
  %106 = phi ptr [ %98, %89 ], [ %85, %75 ]
  %107 = phi i32 [ %97, %89 ], [ %84, %75 ]
  %108 = phi i32 [ 0, %89 ], [ %76, %75 ]
  %109 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 36
  %110 = zext i32 %108 to i64
  %111 = add nuw nsw i32 %108, 2
  %112 = zext i32 %111 to i64
  br label %113

113:                                              ; preds = %140, %102
  %114 = phi i64 [ %110, %102 ], [ %141, %140 ]
  %115 = getelementptr inbounds [6 x i32], ptr @listXsize, i64 0, i64 %114
  %116 = load i32, ptr %115, align 4, !tbaa !18
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %118, label %140

118:                                              ; preds = %113
  %119 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %114
  %120 = load ptr, ptr %119, align 8, !tbaa !13
  %121 = load i32, ptr %109, align 8, !tbaa !206
  br label %122

122:                                              ; preds = %135, %118
  %123 = phi i64 [ 0, %118 ], [ %136, %135 ]
  %124 = getelementptr inbounds ptr, ptr %120, i64 %123
  %125 = load ptr, ptr %124, align 8, !tbaa !13
  %126 = getelementptr inbounds %struct.storable_picture, ptr %125, i64 0, i32 27
  store i32 0, ptr %126, align 8, !tbaa !867
  switch i32 %121, label %135 [
    i32 1, label %127
    i32 2, label %130
  ]

127:                                              ; preds = %122
  %128 = load i32, ptr %125, align 8, !tbaa !570
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %135, label %133

130:                                              ; preds = %122
  %131 = load i32, ptr %125, align 8, !tbaa !570
  %132 = icmp eq i32 %131, 2
  br i1 %132, label %135, label %133

133:                                              ; preds = %130, %127
  %134 = phi i32 [ -2, %127 ], [ 2, %130 ]
  store i32 %134, ptr %126, align 8, !tbaa !867
  br label %135

135:                                              ; preds = %133, %130, %127, %122
  %136 = add nuw nsw i64 %123, 1
  %137 = load i32, ptr %115, align 4, !tbaa !18
  %138 = sext i32 %137 to i64
  %139 = icmp slt i64 %136, %138
  br i1 %139, label %122, label %140, !llvm.loop !868

140:                                              ; preds = %135, %113
  %141 = add nuw nsw i64 %114, 1
  %142 = icmp eq i64 %141, %112
  br i1 %142, label %208, label %113, !llvm.loop !869

143:                                              ; preds = %75
  br i1 %41, label %154, label %144

144:                                              ; preds = %143, %89
  %145 = phi i32 [ %76, %143 ], [ 0, %89 ]
  %146 = phi i32 [ %84, %143 ], [ %97, %89 ]
  %147 = phi ptr [ %85, %143 ], [ %98, %89 ]
  %148 = phi ptr [ %86, %143 ], [ %99, %89 ]
  %149 = phi ptr [ %87, %143 ], [ %100, %89 ]
  %150 = phi ptr [ %88, %143 ], [ %101, %89 ]
  %151 = zext i32 %145 to i64
  %152 = add nuw nsw i32 %145, 2
  %153 = zext i32 %152 to i64
  br label %188

154:                                              ; preds = %143
  %155 = and i32 %14, 1
  %156 = icmp eq i32 %155, 0
  %157 = zext i32 %76 to i64
  %158 = add nuw nsw i32 %76, 2
  %159 = zext i32 %158 to i64
  br label %160

160:                                              ; preds = %185, %154
  %161 = phi i64 [ %157, %154 ], [ %186, %185 ]
  %162 = getelementptr inbounds [6 x i32], ptr @listXsize, i64 0, i64 %161
  %163 = load i32, ptr %162, align 4, !tbaa !18
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %185

165:                                              ; preds = %160
  %166 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %161
  %167 = load ptr, ptr %166, align 8, !tbaa !13
  br label %168

168:                                              ; preds = %180, %165
  %169 = phi i64 [ 0, %165 ], [ %181, %180 ]
  %170 = getelementptr inbounds ptr, ptr %167, i64 %169
  %171 = load ptr, ptr %170, align 8, !tbaa !13
  %172 = getelementptr inbounds %struct.storable_picture, ptr %171, i64 0, i32 27
  store i32 0, ptr %172, align 8, !tbaa !867
  %173 = load i32, ptr %171, align 8, !tbaa !570
  br i1 %156, label %174, label %176

174:                                              ; preds = %168
  %175 = icmp eq i32 %173, 2
  br i1 %175, label %178, label %180

176:                                              ; preds = %168
  %177 = icmp eq i32 %173, 1
  br i1 %177, label %178, label %180

178:                                              ; preds = %176, %174
  %179 = phi i32 [ -2, %174 ], [ 2, %176 ]
  store i32 %179, ptr %172, align 8, !tbaa !867
  br label %180

180:                                              ; preds = %178, %176, %174
  %181 = add nuw nsw i64 %169, 1
  %182 = load i32, ptr %162, align 4, !tbaa !18
  %183 = sext i32 %182 to i64
  %184 = icmp slt i64 %181, %183
  br i1 %184, label %168, label %185, !llvm.loop !870

185:                                              ; preds = %180, %160
  %186 = add nuw nsw i64 %161, 1
  %187 = icmp eq i64 %186, %159
  br i1 %187, label %208, label %160, !llvm.loop !871

188:                                              ; preds = %205, %144
  %189 = phi i64 [ %151, %144 ], [ %206, %205 ]
  %190 = getelementptr inbounds [6 x i32], ptr @listXsize, i64 0, i64 %189
  %191 = load i32, ptr %190, align 4, !tbaa !18
  %192 = icmp sgt i32 %191, 0
  br i1 %192, label %193, label %205

193:                                              ; preds = %188
  %194 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %189
  %195 = load ptr, ptr %194, align 8, !tbaa !13
  br label %196

196:                                              ; preds = %196, %193
  %197 = phi i64 [ 0, %193 ], [ %201, %196 ]
  %198 = getelementptr inbounds ptr, ptr %195, i64 %197
  %199 = load ptr, ptr %198, align 8, !tbaa !13
  %200 = getelementptr inbounds %struct.storable_picture, ptr %199, i64 0, i32 27
  store i32 0, ptr %200, align 8, !tbaa !867
  %201 = add nuw nsw i64 %197, 1
  %202 = load i32, ptr %190, align 4, !tbaa !18
  %203 = sext i32 %202 to i64
  %204 = icmp slt i64 %201, %203
  br i1 %204, label %196, label %205, !llvm.loop !872

205:                                              ; preds = %196, %188
  %206 = add nuw nsw i64 %189, 1
  %207 = icmp eq i64 %206, %153
  br i1 %207, label %208, label %188, !llvm.loop !873

208:                                              ; preds = %205, %185, %140
  %209 = phi ptr [ %103, %140 ], [ %88, %185 ], [ %150, %205 ]
  %210 = phi ptr [ %104, %140 ], [ %87, %185 ], [ %149, %205 ]
  %211 = phi ptr [ %105, %140 ], [ %86, %185 ], [ %148, %205 ]
  %212 = phi ptr [ %106, %140 ], [ %85, %185 ], [ %147, %205 ]
  %213 = phi i32 [ %107, %140 ], [ %84, %185 ], [ %146, %205 ]
  %214 = phi i32 [ %108, %140 ], [ %76, %185 ], [ %145, %205 ]
  switch i32 %51, label %220 [
    i32 10, label %215
    i32 14, label %215
  ]

215:                                              ; preds = %208, %208
  %216 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 12
  %217 = load i32, ptr %216, align 4, !tbaa !728
  %218 = tail call i32 @intrapred_luma_16x16(ptr noundef %0, i32 noundef %217) #46
  %219 = load i32, ptr %16, align 4, !tbaa !137
  br label %220

220:                                              ; preds = %215, %208
  %221 = phi i32 [ %17, %208 ], [ %219, %215 ]
  %222 = icmp eq i32 %221, 1
  br i1 %222, label %223, label %930

223:                                              ; preds = %220
  %224 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 9
  %225 = load i32, ptr %224, align 8, !tbaa !465
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %930, label %227

227:                                              ; preds = %223
  %228 = load i32, ptr %57, align 8, !tbaa !195
  switch i32 %228, label %930 [
    i32 0, label %245
    i32 8, label %229
  ]

229:                                              ; preds = %227
  %230 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13
  %231 = load i8, ptr %230, align 8, !tbaa !14
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %245, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 1
  %235 = load i8, ptr %234, align 1, !tbaa !14
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %245, label %237

237:                                              ; preds = %233
  %238 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 2
  %239 = load i8, ptr %238, align 2, !tbaa !14
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %245, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 3
  %243 = load i8, ptr %242, align 1, !tbaa !14
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %245, label %930

245:                                              ; preds = %241, %237, %233, %229, %227
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #48
  %246 = load i32, ptr %13, align 4, !tbaa !49
  call void @getLuma4x4Neighbour(i32 noundef %246, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %7) #46
  %247 = load i32, ptr %13, align 4, !tbaa !49
  call void @getLuma4x4Neighbour(i32 noundef %247, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %8) #46
  %248 = load i32, ptr %13, align 4, !tbaa !49
  call void @getLuma4x4Neighbour(i32 noundef %248, i32 noundef 16, i32 noundef -1, ptr noundef nonnull %10) #46
  %249 = load i32, ptr %13, align 4, !tbaa !49
  call void @getLuma4x4Neighbour(i32 noundef %249, i32 noundef -1, i32 noundef -1, ptr noundef nonnull %9) #46
  %250 = load i32, ptr %33, align 8, !tbaa !189
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %399

252:                                              ; preds = %245
  %253 = load i32, ptr %7, align 4, !tbaa !52
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %252
  %256 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %257 = getelementptr inbounds %struct.storable_picture, ptr %256, i64 0, i32 36
  %258 = load ptr, ptr %257, align 8, !tbaa !197
  %259 = load ptr, ptr %258, align 8, !tbaa !13
  %260 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %261 = load i32, ptr %260, align 4, !tbaa !59
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds ptr, ptr %259, i64 %262
  %264 = load ptr, ptr %263, align 8, !tbaa !13
  %265 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %266 = load i32, ptr %265, align 4, !tbaa !60
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i8, ptr %264, i64 %267
  %269 = load i8, ptr %268, align 1, !tbaa !14
  br label %270

270:                                              ; preds = %255, %252
  %271 = phi i8 [ %269, %255 ], [ -1, %252 ]
  %272 = load i32, ptr %8, align 4, !tbaa !52
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %289, label %274

274:                                              ; preds = %270
  %275 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %276 = getelementptr inbounds %struct.storable_picture, ptr %275, i64 0, i32 36
  %277 = load ptr, ptr %276, align 8, !tbaa !197
  %278 = load ptr, ptr %277, align 8, !tbaa !13
  %279 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 5
  %280 = load i32, ptr %279, align 4, !tbaa !59
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds ptr, ptr %278, i64 %281
  %283 = load ptr, ptr %282, align 8, !tbaa !13
  %284 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 4
  %285 = load i32, ptr %284, align 4, !tbaa !60
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds i8, ptr %283, i64 %286
  %288 = load i8, ptr %287, align 1, !tbaa !14
  br label %289

289:                                              ; preds = %274, %270
  %290 = phi i8 [ %288, %274 ], [ -1, %270 ]
  %291 = load i32, ptr %9, align 4, !tbaa !52
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %308, label %293

293:                                              ; preds = %289
  %294 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %295 = getelementptr inbounds %struct.storable_picture, ptr %294, i64 0, i32 36
  %296 = load ptr, ptr %295, align 8, !tbaa !197
  %297 = load ptr, ptr %296, align 8, !tbaa !13
  %298 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 5
  %299 = load i32, ptr %298, align 4, !tbaa !59
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds ptr, ptr %297, i64 %300
  %302 = load ptr, ptr %301, align 8, !tbaa !13
  %303 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 4
  %304 = load i32, ptr %303, align 4, !tbaa !60
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i8, ptr %302, i64 %305
  %307 = load i8, ptr %306, align 1, !tbaa !14
  br label %308

308:                                              ; preds = %293, %289
  %309 = phi i8 [ %307, %293 ], [ -1, %289 ]
  %310 = load i32, ptr %10, align 4, !tbaa !52
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %327, label %312

312:                                              ; preds = %308
  %313 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %314 = getelementptr inbounds %struct.storable_picture, ptr %313, i64 0, i32 36
  %315 = load ptr, ptr %314, align 8, !tbaa !197
  %316 = load ptr, ptr %315, align 8, !tbaa !13
  %317 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 5
  %318 = load i32, ptr %317, align 4, !tbaa !59
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds ptr, ptr %316, i64 %319
  %321 = load ptr, ptr %320, align 8, !tbaa !13
  %322 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 4
  %323 = load i32, ptr %322, align 4, !tbaa !60
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds i8, ptr %321, i64 %324
  %326 = load i8, ptr %325, align 1, !tbaa !14
  br label %327

327:                                              ; preds = %312, %308
  %328 = phi i8 [ %326, %312 ], [ %309, %308 ]
  br i1 %254, label %345, label %329

329:                                              ; preds = %327
  %330 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %331 = getelementptr inbounds %struct.storable_picture, ptr %330, i64 0, i32 36
  %332 = load ptr, ptr %331, align 8, !tbaa !197
  %333 = getelementptr inbounds ptr, ptr %332, i64 1
  %334 = load ptr, ptr %333, align 8, !tbaa !13
  %335 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %336 = load i32, ptr %335, align 4, !tbaa !59
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds ptr, ptr %334, i64 %337
  %339 = load ptr, ptr %338, align 8, !tbaa !13
  %340 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %341 = load i32, ptr %340, align 4, !tbaa !60
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds i8, ptr %339, i64 %342
  %344 = load i8, ptr %343, align 1, !tbaa !14
  br label %345

345:                                              ; preds = %329, %327
  %346 = phi i8 [ %344, %329 ], [ -1, %327 ]
  br i1 %273, label %363, label %347

347:                                              ; preds = %345
  %348 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %349 = getelementptr inbounds %struct.storable_picture, ptr %348, i64 0, i32 36
  %350 = load ptr, ptr %349, align 8, !tbaa !197
  %351 = getelementptr inbounds ptr, ptr %350, i64 1
  %352 = load ptr, ptr %351, align 8, !tbaa !13
  %353 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 5
  %354 = load i32, ptr %353, align 4, !tbaa !59
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds ptr, ptr %352, i64 %355
  %357 = load ptr, ptr %356, align 8, !tbaa !13
  %358 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 4
  %359 = load i32, ptr %358, align 4, !tbaa !60
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds i8, ptr %357, i64 %360
  %362 = load i8, ptr %361, align 1, !tbaa !14
  br label %363

363:                                              ; preds = %347, %345
  %364 = phi i8 [ %362, %347 ], [ -1, %345 ]
  br i1 %292, label %381, label %365

365:                                              ; preds = %363
  %366 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %367 = getelementptr inbounds %struct.storable_picture, ptr %366, i64 0, i32 36
  %368 = load ptr, ptr %367, align 8, !tbaa !197
  %369 = getelementptr inbounds ptr, ptr %368, i64 1
  %370 = load ptr, ptr %369, align 8, !tbaa !13
  %371 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 5
  %372 = load i32, ptr %371, align 4, !tbaa !59
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds ptr, ptr %370, i64 %373
  %375 = load ptr, ptr %374, align 8, !tbaa !13
  %376 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 4
  %377 = load i32, ptr %376, align 4, !tbaa !60
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds i8, ptr %375, i64 %378
  %380 = load i8, ptr %379, align 1, !tbaa !14
  br label %381

381:                                              ; preds = %365, %363
  %382 = phi i8 [ %380, %365 ], [ -1, %363 ]
  br i1 %311, label %858, label %383

383:                                              ; preds = %381
  %384 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %385 = getelementptr inbounds %struct.storable_picture, ptr %384, i64 0, i32 36
  %386 = load ptr, ptr %385, align 8, !tbaa !197
  %387 = getelementptr inbounds ptr, ptr %386, i64 1
  %388 = load ptr, ptr %387, align 8, !tbaa !13
  %389 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 5
  %390 = load i32, ptr %389, align 4, !tbaa !59
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds ptr, ptr %388, i64 %391
  %393 = load ptr, ptr %392, align 8, !tbaa !13
  %394 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 4
  %395 = load i32, ptr %394, align 4, !tbaa !60
  %396 = sext i32 %395 to i64
  %397 = getelementptr inbounds i8, ptr %393, i64 %396
  %398 = load i8, ptr %397, align 1, !tbaa !14
  br label %858

399:                                              ; preds = %245
  %400 = load ptr, ptr %11, align 8, !tbaa !84
  %401 = load i32, ptr %13, align 4, !tbaa !49
  %402 = zext i32 %401 to i64
  %403 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %402, i32 20
  %404 = load i32, ptr %403, align 4, !tbaa !170
  %405 = icmp eq i32 %404, 0
  %406 = load i32, ptr %7, align 4, !tbaa !52
  %407 = icmp eq i32 %406, 0
  br i1 %405, label %633, label %408

408:                                              ; preds = %399
  br i1 %407, label %434, label %409

409:                                              ; preds = %408
  %410 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 1
  %411 = load i32, ptr %410, align 4, !tbaa !57
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %412, i32 20
  %414 = load i32, ptr %413, align 4, !tbaa !170
  %415 = icmp eq i32 %414, 0
  %416 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %417 = getelementptr inbounds %struct.storable_picture, ptr %416, i64 0, i32 36
  %418 = load ptr, ptr %417, align 8, !tbaa !197
  %419 = load ptr, ptr %418, align 8, !tbaa !13
  %420 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %421 = load i32, ptr %420, align 4, !tbaa !59
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds ptr, ptr %419, i64 %422
  %424 = load ptr, ptr %423, align 8, !tbaa !13
  %425 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %426 = load i32, ptr %425, align 4, !tbaa !60
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds i8, ptr %424, i64 %427
  %429 = load i8, ptr %428, align 1, !tbaa !14
  %430 = icmp sgt i8 %429, -1
  %431 = select i1 %415, i1 %430, i1 false
  %432 = zext i1 %431 to i8
  %433 = shl nuw i8 %429, %432
  br label %434

434:                                              ; preds = %409, %408
  %435 = phi i8 [ -1, %408 ], [ %433, %409 ]
  %436 = load i32, ptr %8, align 4, !tbaa !52
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %463, label %438

438:                                              ; preds = %434
  %439 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 1
  %440 = load i32, ptr %439, align 4, !tbaa !57
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %441, i32 20
  %443 = load i32, ptr %442, align 4, !tbaa !170
  %444 = icmp eq i32 %443, 0
  %445 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %446 = getelementptr inbounds %struct.storable_picture, ptr %445, i64 0, i32 36
  %447 = load ptr, ptr %446, align 8, !tbaa !197
  %448 = load ptr, ptr %447, align 8, !tbaa !13
  %449 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 5
  %450 = load i32, ptr %449, align 4, !tbaa !59
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds ptr, ptr %448, i64 %451
  %453 = load ptr, ptr %452, align 8, !tbaa !13
  %454 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 4
  %455 = load i32, ptr %454, align 4, !tbaa !60
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds i8, ptr %453, i64 %456
  %458 = load i8, ptr %457, align 1, !tbaa !14
  %459 = icmp sgt i8 %458, -1
  %460 = select i1 %444, i1 %459, i1 false
  %461 = zext i1 %460 to i8
  %462 = shl nuw i8 %458, %461
  br label %463

463:                                              ; preds = %438, %434
  %464 = phi i8 [ -1, %434 ], [ %462, %438 ]
  %465 = load i32, ptr %9, align 4, !tbaa !52
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %492, label %467

467:                                              ; preds = %463
  %468 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 1
  %469 = load i32, ptr %468, align 4, !tbaa !57
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %470, i32 20
  %472 = load i32, ptr %471, align 4, !tbaa !170
  %473 = icmp eq i32 %472, 0
  %474 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %475 = getelementptr inbounds %struct.storable_picture, ptr %474, i64 0, i32 36
  %476 = load ptr, ptr %475, align 8, !tbaa !197
  %477 = load ptr, ptr %476, align 8, !tbaa !13
  %478 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 5
  %479 = load i32, ptr %478, align 4, !tbaa !59
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds ptr, ptr %477, i64 %480
  %482 = load ptr, ptr %481, align 8, !tbaa !13
  %483 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 4
  %484 = load i32, ptr %483, align 4, !tbaa !60
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds i8, ptr %482, i64 %485
  %487 = load i8, ptr %486, align 1, !tbaa !14
  %488 = icmp sgt i8 %487, -1
  %489 = select i1 %473, i1 %488, i1 false
  %490 = zext i1 %489 to i8
  %491 = shl nuw i8 %487, %490
  br label %492

492:                                              ; preds = %467, %463
  %493 = phi i8 [ -1, %463 ], [ %491, %467 ]
  %494 = load i32, ptr %10, align 4, !tbaa !52
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %521, label %496

496:                                              ; preds = %492
  %497 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 1
  %498 = load i32, ptr %497, align 4, !tbaa !57
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %499, i32 20
  %501 = load i32, ptr %500, align 4, !tbaa !170
  %502 = icmp eq i32 %501, 0
  %503 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %504 = getelementptr inbounds %struct.storable_picture, ptr %503, i64 0, i32 36
  %505 = load ptr, ptr %504, align 8, !tbaa !197
  %506 = load ptr, ptr %505, align 8, !tbaa !13
  %507 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 5
  %508 = load i32, ptr %507, align 4, !tbaa !59
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds ptr, ptr %506, i64 %509
  %511 = load ptr, ptr %510, align 8, !tbaa !13
  %512 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 4
  %513 = load i32, ptr %512, align 4, !tbaa !60
  %514 = sext i32 %513 to i64
  %515 = getelementptr inbounds i8, ptr %511, i64 %514
  %516 = load i8, ptr %515, align 1, !tbaa !14
  %517 = icmp sgt i8 %516, -1
  %518 = select i1 %502, i1 %517, i1 false
  %519 = zext i1 %518 to i8
  %520 = shl nuw i8 %516, %519
  br label %521

521:                                              ; preds = %496, %492
  %522 = phi i8 [ %493, %492 ], [ %520, %496 ]
  br i1 %407, label %549, label %523

523:                                              ; preds = %521
  %524 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 1
  %525 = load i32, ptr %524, align 4, !tbaa !57
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %526, i32 20
  %528 = load i32, ptr %527, align 4, !tbaa !170
  %529 = icmp eq i32 %528, 0
  %530 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %531 = getelementptr inbounds %struct.storable_picture, ptr %530, i64 0, i32 36
  %532 = load ptr, ptr %531, align 8, !tbaa !197
  %533 = getelementptr inbounds ptr, ptr %532, i64 1
  %534 = load ptr, ptr %533, align 8, !tbaa !13
  %535 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %536 = load i32, ptr %535, align 4, !tbaa !59
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds ptr, ptr %534, i64 %537
  %539 = load ptr, ptr %538, align 8, !tbaa !13
  %540 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %541 = load i32, ptr %540, align 4, !tbaa !60
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds i8, ptr %539, i64 %542
  %544 = load i8, ptr %543, align 1, !tbaa !14
  %545 = icmp sgt i8 %544, -1
  %546 = select i1 %529, i1 %545, i1 false
  %547 = zext i1 %546 to i8
  %548 = shl nuw i8 %544, %547
  br label %549

549:                                              ; preds = %523, %521
  %550 = phi i8 [ -1, %521 ], [ %548, %523 ]
  br i1 %437, label %577, label %551

551:                                              ; preds = %549
  %552 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 1
  %553 = load i32, ptr %552, align 4, !tbaa !57
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %554, i32 20
  %556 = load i32, ptr %555, align 4, !tbaa !170
  %557 = icmp eq i32 %556, 0
  %558 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %559 = getelementptr inbounds %struct.storable_picture, ptr %558, i64 0, i32 36
  %560 = load ptr, ptr %559, align 8, !tbaa !197
  %561 = getelementptr inbounds ptr, ptr %560, i64 1
  %562 = load ptr, ptr %561, align 8, !tbaa !13
  %563 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 5
  %564 = load i32, ptr %563, align 4, !tbaa !59
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds ptr, ptr %562, i64 %565
  %567 = load ptr, ptr %566, align 8, !tbaa !13
  %568 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 4
  %569 = load i32, ptr %568, align 4, !tbaa !60
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds i8, ptr %567, i64 %570
  %572 = load i8, ptr %571, align 1, !tbaa !14
  %573 = icmp sgt i8 %572, -1
  %574 = select i1 %557, i1 %573, i1 false
  %575 = zext i1 %574 to i8
  %576 = shl nuw i8 %572, %575
  br label %577

577:                                              ; preds = %551, %549
  %578 = phi i8 [ -1, %549 ], [ %576, %551 ]
  br i1 %466, label %605, label %579

579:                                              ; preds = %577
  %580 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 1
  %581 = load i32, ptr %580, align 4, !tbaa !57
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %582, i32 20
  %584 = load i32, ptr %583, align 4, !tbaa !170
  %585 = icmp eq i32 %584, 0
  %586 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %587 = getelementptr inbounds %struct.storable_picture, ptr %586, i64 0, i32 36
  %588 = load ptr, ptr %587, align 8, !tbaa !197
  %589 = getelementptr inbounds ptr, ptr %588, i64 1
  %590 = load ptr, ptr %589, align 8, !tbaa !13
  %591 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 5
  %592 = load i32, ptr %591, align 4, !tbaa !59
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds ptr, ptr %590, i64 %593
  %595 = load ptr, ptr %594, align 8, !tbaa !13
  %596 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 4
  %597 = load i32, ptr %596, align 4, !tbaa !60
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds i8, ptr %595, i64 %598
  %600 = load i8, ptr %599, align 1, !tbaa !14
  %601 = icmp sgt i8 %600, -1
  %602 = select i1 %585, i1 %601, i1 false
  %603 = zext i1 %602 to i8
  %604 = shl nuw i8 %600, %603
  br label %605

605:                                              ; preds = %579, %577
  %606 = phi i8 [ -1, %577 ], [ %604, %579 ]
  br i1 %495, label %858, label %607

607:                                              ; preds = %605
  %608 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 1
  %609 = load i32, ptr %608, align 4, !tbaa !57
  %610 = sext i32 %609 to i64
  %611 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %610, i32 20
  %612 = load i32, ptr %611, align 4, !tbaa !170
  %613 = icmp eq i32 %612, 0
  %614 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %615 = getelementptr inbounds %struct.storable_picture, ptr %614, i64 0, i32 36
  %616 = load ptr, ptr %615, align 8, !tbaa !197
  %617 = getelementptr inbounds ptr, ptr %616, i64 1
  %618 = load ptr, ptr %617, align 8, !tbaa !13
  %619 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 5
  %620 = load i32, ptr %619, align 4, !tbaa !59
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds ptr, ptr %618, i64 %621
  %623 = load ptr, ptr %622, align 8, !tbaa !13
  %624 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 4
  %625 = load i32, ptr %624, align 4, !tbaa !60
  %626 = sext i32 %625 to i64
  %627 = getelementptr inbounds i8, ptr %623, i64 %626
  %628 = load i8, ptr %627, align 1, !tbaa !14
  %629 = icmp sgt i8 %628, -1
  %630 = select i1 %613, i1 %629, i1 false
  %631 = zext i1 %630 to i8
  %632 = shl nuw i8 %628, %631
  br label %858

633:                                              ; preds = %399
  br i1 %407, label %659, label %634

634:                                              ; preds = %633
  %635 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 1
  %636 = load i32, ptr %635, align 4, !tbaa !57
  %637 = sext i32 %636 to i64
  %638 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %637, i32 20
  %639 = load i32, ptr %638, align 4, !tbaa !170
  %640 = icmp ne i32 %639, 0
  %641 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %642 = getelementptr inbounds %struct.storable_picture, ptr %641, i64 0, i32 36
  %643 = load ptr, ptr %642, align 8, !tbaa !197
  %644 = load ptr, ptr %643, align 8, !tbaa !13
  %645 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %646 = load i32, ptr %645, align 4, !tbaa !59
  %647 = sext i32 %646 to i64
  %648 = getelementptr inbounds ptr, ptr %644, i64 %647
  %649 = load ptr, ptr %648, align 8, !tbaa !13
  %650 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %651 = load i32, ptr %650, align 4, !tbaa !60
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds i8, ptr %649, i64 %652
  %654 = load i8, ptr %653, align 1, !tbaa !14
  %655 = icmp slt i8 %654, 0
  %656 = select i1 %640, i1 true, i1 %655
  %657 = zext i1 %656 to i8
  %658 = ashr i8 %654, %657
  br label %659

659:                                              ; preds = %634, %633
  %660 = phi i8 [ -1, %633 ], [ %658, %634 ]
  %661 = load i32, ptr %8, align 4, !tbaa !52
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %688, label %663

663:                                              ; preds = %659
  %664 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 1
  %665 = load i32, ptr %664, align 4, !tbaa !57
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %666, i32 20
  %668 = load i32, ptr %667, align 4, !tbaa !170
  %669 = icmp ne i32 %668, 0
  %670 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %671 = getelementptr inbounds %struct.storable_picture, ptr %670, i64 0, i32 36
  %672 = load ptr, ptr %671, align 8, !tbaa !197
  %673 = load ptr, ptr %672, align 8, !tbaa !13
  %674 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 5
  %675 = load i32, ptr %674, align 4, !tbaa !59
  %676 = sext i32 %675 to i64
  %677 = getelementptr inbounds ptr, ptr %673, i64 %676
  %678 = load ptr, ptr %677, align 8, !tbaa !13
  %679 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 4
  %680 = load i32, ptr %679, align 4, !tbaa !60
  %681 = sext i32 %680 to i64
  %682 = getelementptr inbounds i8, ptr %678, i64 %681
  %683 = load i8, ptr %682, align 1, !tbaa !14
  %684 = icmp slt i8 %683, 0
  %685 = select i1 %669, i1 true, i1 %684
  %686 = zext i1 %685 to i8
  %687 = ashr i8 %683, %686
  br label %688

688:                                              ; preds = %663, %659
  %689 = phi i8 [ -1, %659 ], [ %687, %663 ]
  %690 = load i32, ptr %9, align 4, !tbaa !52
  %691 = icmp eq i32 %690, 0
  br i1 %691, label %717, label %692

692:                                              ; preds = %688
  %693 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 1
  %694 = load i32, ptr %693, align 4, !tbaa !57
  %695 = sext i32 %694 to i64
  %696 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %695, i32 20
  %697 = load i32, ptr %696, align 4, !tbaa !170
  %698 = icmp ne i32 %697, 0
  %699 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %700 = getelementptr inbounds %struct.storable_picture, ptr %699, i64 0, i32 36
  %701 = load ptr, ptr %700, align 8, !tbaa !197
  %702 = load ptr, ptr %701, align 8, !tbaa !13
  %703 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 5
  %704 = load i32, ptr %703, align 4, !tbaa !59
  %705 = sext i32 %704 to i64
  %706 = getelementptr inbounds ptr, ptr %702, i64 %705
  %707 = load ptr, ptr %706, align 8, !tbaa !13
  %708 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 4
  %709 = load i32, ptr %708, align 4, !tbaa !60
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds i8, ptr %707, i64 %710
  %712 = load i8, ptr %711, align 1, !tbaa !14
  %713 = icmp slt i8 %712, 0
  %714 = select i1 %698, i1 true, i1 %713
  %715 = zext i1 %714 to i8
  %716 = ashr i8 %712, %715
  br label %717

717:                                              ; preds = %692, %688
  %718 = phi i8 [ -1, %688 ], [ %716, %692 ]
  %719 = load i32, ptr %10, align 4, !tbaa !52
  %720 = icmp eq i32 %719, 0
  br i1 %720, label %746, label %721

721:                                              ; preds = %717
  %722 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 1
  %723 = load i32, ptr %722, align 4, !tbaa !57
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %724, i32 20
  %726 = load i32, ptr %725, align 4, !tbaa !170
  %727 = icmp ne i32 %726, 0
  %728 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %729 = getelementptr inbounds %struct.storable_picture, ptr %728, i64 0, i32 36
  %730 = load ptr, ptr %729, align 8, !tbaa !197
  %731 = load ptr, ptr %730, align 8, !tbaa !13
  %732 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 5
  %733 = load i32, ptr %732, align 4, !tbaa !59
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds ptr, ptr %731, i64 %734
  %736 = load ptr, ptr %735, align 8, !tbaa !13
  %737 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 4
  %738 = load i32, ptr %737, align 4, !tbaa !60
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds i8, ptr %736, i64 %739
  %741 = load i8, ptr %740, align 1, !tbaa !14
  %742 = icmp slt i8 %741, 0
  %743 = select i1 %727, i1 true, i1 %742
  %744 = zext i1 %743 to i8
  %745 = ashr i8 %741, %744
  br label %746

746:                                              ; preds = %721, %717
  %747 = phi i8 [ %718, %717 ], [ %745, %721 ]
  br i1 %407, label %774, label %748

748:                                              ; preds = %746
  %749 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 1
  %750 = load i32, ptr %749, align 4, !tbaa !57
  %751 = sext i32 %750 to i64
  %752 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %751, i32 20
  %753 = load i32, ptr %752, align 4, !tbaa !170
  %754 = icmp ne i32 %753, 0
  %755 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %756 = getelementptr inbounds %struct.storable_picture, ptr %755, i64 0, i32 36
  %757 = load ptr, ptr %756, align 8, !tbaa !197
  %758 = getelementptr inbounds ptr, ptr %757, i64 1
  %759 = load ptr, ptr %758, align 8, !tbaa !13
  %760 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %761 = load i32, ptr %760, align 4, !tbaa !59
  %762 = sext i32 %761 to i64
  %763 = getelementptr inbounds ptr, ptr %759, i64 %762
  %764 = load ptr, ptr %763, align 8, !tbaa !13
  %765 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %766 = load i32, ptr %765, align 4, !tbaa !60
  %767 = sext i32 %766 to i64
  %768 = getelementptr inbounds i8, ptr %764, i64 %767
  %769 = load i8, ptr %768, align 1, !tbaa !14
  %770 = icmp slt i8 %769, 0
  %771 = select i1 %754, i1 true, i1 %770
  %772 = zext i1 %771 to i8
  %773 = ashr i8 %769, %772
  br label %774

774:                                              ; preds = %748, %746
  %775 = phi i8 [ -1, %746 ], [ %773, %748 ]
  br i1 %662, label %802, label %776

776:                                              ; preds = %774
  %777 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 1
  %778 = load i32, ptr %777, align 4, !tbaa !57
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %779, i32 20
  %781 = load i32, ptr %780, align 4, !tbaa !170
  %782 = icmp ne i32 %781, 0
  %783 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %784 = getelementptr inbounds %struct.storable_picture, ptr %783, i64 0, i32 36
  %785 = load ptr, ptr %784, align 8, !tbaa !197
  %786 = getelementptr inbounds ptr, ptr %785, i64 1
  %787 = load ptr, ptr %786, align 8, !tbaa !13
  %788 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 5
  %789 = load i32, ptr %788, align 4, !tbaa !59
  %790 = sext i32 %789 to i64
  %791 = getelementptr inbounds ptr, ptr %787, i64 %790
  %792 = load ptr, ptr %791, align 8, !tbaa !13
  %793 = getelementptr inbounds %struct.pix_pos, ptr %8, i64 0, i32 4
  %794 = load i32, ptr %793, align 4, !tbaa !60
  %795 = sext i32 %794 to i64
  %796 = getelementptr inbounds i8, ptr %792, i64 %795
  %797 = load i8, ptr %796, align 1, !tbaa !14
  %798 = icmp slt i8 %797, 0
  %799 = select i1 %782, i1 true, i1 %798
  %800 = zext i1 %799 to i8
  %801 = ashr i8 %797, %800
  br label %802

802:                                              ; preds = %776, %774
  %803 = phi i8 [ -1, %774 ], [ %801, %776 ]
  br i1 %691, label %830, label %804

804:                                              ; preds = %802
  %805 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 1
  %806 = load i32, ptr %805, align 4, !tbaa !57
  %807 = sext i32 %806 to i64
  %808 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %807, i32 20
  %809 = load i32, ptr %808, align 4, !tbaa !170
  %810 = icmp ne i32 %809, 0
  %811 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %812 = getelementptr inbounds %struct.storable_picture, ptr %811, i64 0, i32 36
  %813 = load ptr, ptr %812, align 8, !tbaa !197
  %814 = getelementptr inbounds ptr, ptr %813, i64 1
  %815 = load ptr, ptr %814, align 8, !tbaa !13
  %816 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 5
  %817 = load i32, ptr %816, align 4, !tbaa !59
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds ptr, ptr %815, i64 %818
  %820 = load ptr, ptr %819, align 8, !tbaa !13
  %821 = getelementptr inbounds %struct.pix_pos, ptr %9, i64 0, i32 4
  %822 = load i32, ptr %821, align 4, !tbaa !60
  %823 = sext i32 %822 to i64
  %824 = getelementptr inbounds i8, ptr %820, i64 %823
  %825 = load i8, ptr %824, align 1, !tbaa !14
  %826 = icmp slt i8 %825, 0
  %827 = select i1 %810, i1 true, i1 %826
  %828 = zext i1 %827 to i8
  %829 = ashr i8 %825, %828
  br label %830

830:                                              ; preds = %804, %802
  %831 = phi i8 [ -1, %802 ], [ %829, %804 ]
  br i1 %720, label %858, label %832

832:                                              ; preds = %830
  %833 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 1
  %834 = load i32, ptr %833, align 4, !tbaa !57
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds %struct.macroblock, ptr %400, i64 %835, i32 20
  %837 = load i32, ptr %836, align 4, !tbaa !170
  %838 = icmp ne i32 %837, 0
  %839 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %840 = getelementptr inbounds %struct.storable_picture, ptr %839, i64 0, i32 36
  %841 = load ptr, ptr %840, align 8, !tbaa !197
  %842 = getelementptr inbounds ptr, ptr %841, i64 1
  %843 = load ptr, ptr %842, align 8, !tbaa !13
  %844 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 5
  %845 = load i32, ptr %844, align 4, !tbaa !59
  %846 = sext i32 %845 to i64
  %847 = getelementptr inbounds ptr, ptr %843, i64 %846
  %848 = load ptr, ptr %847, align 8, !tbaa !13
  %849 = getelementptr inbounds %struct.pix_pos, ptr %10, i64 0, i32 4
  %850 = load i32, ptr %849, align 4, !tbaa !60
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds i8, ptr %848, i64 %851
  %853 = load i8, ptr %852, align 1, !tbaa !14
  %854 = icmp slt i8 %853, 0
  %855 = select i1 %838, i1 true, i1 %854
  %856 = zext i1 %855 to i8
  %857 = ashr i8 %853, %856
  br label %858

858:                                              ; preds = %832, %830, %607, %605, %383, %381
  %859 = phi i8 [ %271, %381 ], [ %271, %383 ], [ %435, %605 ], [ %660, %830 ], [ %435, %607 ], [ %660, %832 ]
  %860 = phi i8 [ %290, %381 ], [ %290, %383 ], [ %464, %605 ], [ %689, %830 ], [ %464, %607 ], [ %689, %832 ]
  %861 = phi i8 [ %328, %381 ], [ %328, %383 ], [ %522, %605 ], [ %747, %830 ], [ %522, %607 ], [ %747, %832 ]
  %862 = phi i8 [ %346, %381 ], [ %346, %383 ], [ %550, %605 ], [ %775, %830 ], [ %550, %607 ], [ %775, %832 ]
  %863 = phi i8 [ %364, %381 ], [ %364, %383 ], [ %578, %605 ], [ %803, %830 ], [ %578, %607 ], [ %803, %832 ]
  %864 = phi i8 [ %382, %381 ], [ %398, %383 ], [ %606, %605 ], [ %831, %830 ], [ %632, %607 ], [ %857, %832 ]
  %865 = sext i8 %859 to i32
  %866 = icmp sgt i8 %859, -1
  %867 = sext i8 %860 to i32
  %868 = icmp sgt i8 %860, -1
  %869 = select i1 %866, i1 %868, i1 false
  br i1 %869, label %870, label %872

870:                                              ; preds = %858
  %871 = call i32 @llvm.smin.i32(i32 %865, i32 %867)
  br label %874

872:                                              ; preds = %858
  %873 = call i32 @llvm.smax.i32(i32 %865, i32 %867)
  br label %874

874:                                              ; preds = %872, %870
  %875 = phi i32 [ %871, %870 ], [ %873, %872 ]
  %876 = icmp sgt i32 %875, -1
  %877 = sext i8 %861 to i32
  %878 = icmp sgt i8 %861, -1
  %879 = select i1 %876, i1 %878, i1 false
  br i1 %879, label %880, label %882

880:                                              ; preds = %874
  %881 = call i32 @llvm.smin.i32(i32 %875, i32 %877)
  br label %884

882:                                              ; preds = %874
  %883 = call i32 @llvm.smax.i32(i32 %875, i32 %877)
  br label %884

884:                                              ; preds = %882, %880
  %885 = phi i32 [ %881, %880 ], [ %883, %882 ]
  %886 = trunc i32 %885 to i8
  %887 = sext i8 %862 to i32
  %888 = icmp sgt i8 %862, -1
  %889 = sext i8 %863 to i32
  %890 = icmp sgt i8 %863, -1
  %891 = select i1 %888, i1 %890, i1 false
  br i1 %891, label %892, label %894

892:                                              ; preds = %884
  %893 = call i32 @llvm.smin.i32(i32 %887, i32 %889)
  br label %896

894:                                              ; preds = %884
  %895 = call i32 @llvm.smax.i32(i32 %887, i32 %889)
  br label %896

896:                                              ; preds = %894, %892
  %897 = phi i32 [ %893, %892 ], [ %895, %894 ]
  %898 = icmp sgt i32 %897, -1
  %899 = sext i8 %864 to i32
  %900 = icmp sgt i8 %864, -1
  %901 = select i1 %898, i1 %900, i1 false
  br i1 %901, label %902, label %904

902:                                              ; preds = %896
  %903 = call i32 @llvm.smin.i32(i32 %897, i32 %899)
  br label %906

904:                                              ; preds = %896
  %905 = call i32 @llvm.smax.i32(i32 %897, i32 %899)
  br label %906

906:                                              ; preds = %904, %902
  %907 = phi i32 [ %903, %902 ], [ %905, %904 ]
  %908 = trunc i32 %907 to i8
  %909 = and i32 %885, 128
  %910 = icmp eq i32 %909, 0
  br i1 %910, label %911, label %917

911:                                              ; preds = %906
  %912 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %913 = getelementptr inbounds %struct.storable_picture, ptr %912, i64 0, i32 36
  %914 = load ptr, ptr %913, align 8, !tbaa !197
  %915 = getelementptr inbounds %struct.storable_picture, ptr %912, i64 0, i32 39
  %916 = load ptr, ptr %915, align 8, !tbaa !371
  call fastcc void @SetMotionVectorPredictor(ptr noundef nonnull %0, ptr noundef nonnull %5, i8 noundef signext %886, i8 noundef zeroext 0, ptr noundef %914, ptr noundef %916, i32 noundef 0, i32 noundef 0, i32 noundef 16, i32 noundef 16) #47
  br label %917

917:                                              ; preds = %911, %906
  %918 = and i32 %907, 128
  %919 = icmp eq i32 %918, 0
  br i1 %919, label %920, label %927

920:                                              ; preds = %917
  %921 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %922 = getelementptr inbounds %struct.storable_picture, ptr %921, i64 0, i32 36
  %923 = load ptr, ptr %922, align 8, !tbaa !197
  %924 = getelementptr inbounds %struct.storable_picture, ptr %921, i64 0, i32 39
  %925 = load ptr, ptr %924, align 8, !tbaa !371
  call fastcc void @SetMotionVectorPredictor(ptr noundef nonnull %0, ptr noundef nonnull %6, i8 noundef signext %908, i8 noundef zeroext 1, ptr noundef %923, ptr noundef %925, i32 noundef 0, i32 noundef 0, i32 noundef 16, i32 noundef 16) #47
  %926 = load <2 x i16>, ptr %6, align 4
  br label %927

927:                                              ; preds = %920, %917
  %928 = phi <2 x i16> [ %926, %920 ], [ zeroinitializer, %917 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #48
  %929 = load <2 x i16>, ptr %5, align 4
  br label %930

930:                                              ; preds = %927, %241, %227, %223, %220
  %931 = phi i8 [ %886, %927 ], [ -1, %241 ], [ -1, %223 ], [ -1, %220 ], [ -1, %227 ]
  %932 = phi i8 [ %908, %927 ], [ -1, %241 ], [ -1, %223 ], [ -1, %220 ], [ -1, %227 ]
  %933 = phi <2 x i16> [ %928, %927 ], [ zeroinitializer, %241 ], [ zeroinitializer, %223 ], [ zeroinitializer, %220 ], [ zeroinitializer, %227 ]
  %934 = phi <2 x i16> [ %929, %927 ], [ zeroinitializer, %241 ], [ zeroinitializer, %223 ], [ zeroinitializer, %220 ], [ zeroinitializer, %227 ]
  %935 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 22
  %936 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 18
  %937 = and i32 %14, 1
  %938 = icmp eq i32 %937, 0
  %939 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 82
  %940 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 77
  %941 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 78
  %942 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 107
  %943 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 75
  %944 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 9
  %945 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 20
  %946 = icmp sgt i8 %931, -1
  %947 = icmp eq i8 %931, 0
  %948 = add nuw nsw i32 %214, 1
  %949 = zext i32 %948 to i64
  %950 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %949
  %951 = icmp sgt i8 %932, -1
  %952 = icmp slt i8 %931, 0
  %953 = icmp eq i8 %932, 0
  %954 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 47
  %955 = zext i32 %214 to i64
  %956 = getelementptr inbounds [6 x i32], ptr @listXsize, i64 0, i64 %955
  %957 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 36
  %958 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 3
  %959 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %955
  %960 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 79
  %961 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 19
  %962 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 20
  br label %963

963:                                              ; preds = %2168, %930
  %964 = phi i64 [ 0, %930 ], [ %2174, %2168 ]
  %965 = phi i64 [ 4, %930 ], [ %2177, %2168 ]
  %966 = phi i64 [ 0, %930 ], [ %2176, %2168 ]
  %967 = phi i32 [ 0, %930 ], [ %2175, %2168 ]
  %968 = phi i32 [ -1, %930 ], [ %2173, %2168 ]
  %969 = phi i16 [ -1, %930 ], [ %2172, %2168 ]
  %970 = phi i16 [ -1, %930 ], [ %2171, %2168 ]
  %971 = phi i16 [ -1, %930 ], [ %2170, %2168 ]
  %972 = phi i16 [ -1, %930 ], [ %2169, %2168 ]
  %973 = and i64 %966, 9223372036854775800
  %974 = trunc i64 %966 to i32
  %975 = and i32 %974, -8
  %976 = add nuw nsw i32 %975, 8
  %977 = shl i32 %967, 3
  %978 = and i32 %977, 8
  %979 = zext i32 %978 to i64
  %980 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 %964
  %981 = load i8, ptr %980, align 1, !tbaa !14
  %982 = icmp eq i8 %981, 13
  br i1 %982, label %983, label %1018

983:                                              ; preds = %963
  %984 = trunc i64 %964 to i32
  %985 = shl i32 %984, 3
  %986 = and i32 %985, 8
  %987 = trunc i64 %964 to i32
  %988 = shl i32 %987, 2
  %989 = and i32 %988, 2147483640
  %990 = trunc i64 %964 to i32
  %991 = call i32 @intrapred8x8(ptr noundef %0, i32 noundef %990) #46
  call void @itrans8x8(ptr noundef %0, i32 noundef %986, i32 noundef %989) #46
  %992 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %993 = getelementptr inbounds %struct.storable_picture, ptr %992, i64 0, i32 32
  %994 = load ptr, ptr %993, align 8, !tbaa !47
  %995 = load i32, ptr %961, align 8, !tbaa !722
  %996 = load i32, ptr %962, align 4, !tbaa !723
  %997 = sext i32 %996 to i64
  %998 = sext i32 %995 to i64
  %999 = zext i32 %976 to i64
  br label %1000

1000:                                             ; preds = %1015, %983
  %1001 = phi i64 [ %973, %983 ], [ %1016, %1015 ]
  %1002 = add nsw i64 %1001, %998
  %1003 = getelementptr inbounds ptr, ptr %994, i64 %1002
  %1004 = load ptr, ptr %1003, align 8, !tbaa !13
  br label %1005

1005:                                             ; preds = %1005, %1000
  %1006 = phi i64 [ 0, %1000 ], [ %1013, %1005 ]
  %1007 = add i64 %1006, %979
  %1008 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %1001, i64 %1007
  %1009 = load <4 x i32>, ptr %1008, align 4, !tbaa !18
  %1010 = trunc <4 x i32> %1009 to <4 x i16>
  %1011 = add nsw i64 %1007, %997
  %1012 = getelementptr inbounds i16, ptr %1004, i64 %1011
  store <4 x i16> %1010, ptr %1012, align 2, !tbaa !40
  %1013 = add nuw i64 %1006, 4
  %1014 = icmp eq i64 %1013, 8
  br i1 %1014, label %1015, label %1005, !llvm.loop !874

1015:                                             ; preds = %1005
  %1016 = add nuw nsw i64 %1001, 1
  %1017 = icmp eq i64 %1016, %999
  br i1 %1017, label %2168, label %1000, !llvm.loop !875

1018:                                             ; preds = %2126, %963
  %1019 = phi i64 [ %2132, %2126 ], [ %966, %963 ]
  %1020 = phi i32 [ %2127, %2126 ], [ %968, %963 ]
  %1021 = phi i16 [ %2128, %2126 ], [ %969, %963 ]
  %1022 = phi i16 [ %2129, %2126 ], [ %970, %963 ]
  %1023 = phi i16 [ %2130, %2126 ], [ %971, %963 ]
  %1024 = phi i16 [ %2131, %2126 ], [ %972, %963 ]
  %1025 = getelementptr inbounds [16 x i8], ptr @decode_one_macroblock.decode_block_scan, i64 0, i64 %1019
  %1026 = load i8, ptr %1025, align 1, !tbaa !14
  %1027 = zext i8 %1026 to i32
  %1028 = and i32 %1027, 3
  %1029 = lshr i32 %1027, 2
  %1030 = and i32 %1029, 3
  %1031 = shl nuw nsw i32 %1028, 2
  %1032 = load i32, ptr %935, align 4, !tbaa !303
  %1033 = add nsw i32 %1028, %1032
  %1034 = shl nuw nsw i32 %1030, 2
  %1035 = load i32, ptr %936, align 4, !tbaa !301
  %1036 = add nsw i32 %1030, %1035
  %1037 = and i32 %1029, 2
  %1038 = lshr i32 %1028, 1
  %1039 = or i32 %1037, %1038
  %1040 = zext i32 %1039 to i64
  %1041 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 %1040
  %1042 = load i8, ptr %1041, align 1, !tbaa !14
  %1043 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 14, i64 %1040
  %1044 = load i8, ptr %1043, align 1, !tbaa !14
  %1045 = sext i8 %1044 to i32
  %1046 = icmp eq i8 %1042, 11
  br i1 %1046, label %1047, label %1050

1047:                                             ; preds = %1018
  %1048 = call i32 @intrapred(ptr noundef nonnull %0, i32 noundef %1031, i32 noundef %1034, i32 noundef %1033, i32 noundef %1036) #46
  %1049 = icmp eq i32 %1048, 1
  br i1 %1049, label %3133, label %2087

1050:                                             ; preds = %1018
  %1051 = load i32, ptr %57, align 8, !tbaa !195
  switch i32 %1051, label %1052 [
    i32 10, label %2077
    i32 14, label %2077
  ]

1052:                                             ; preds = %1050
  %1053 = icmp eq i8 %1044, 2
  br i1 %1053, label %1184, label %1054

1054:                                             ; preds = %1052
  %1055 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1056 = getelementptr inbounds %struct.storable_picture, ptr %1055, i64 0, i32 36
  %1057 = load ptr, ptr %1056, align 8, !tbaa !197
  %1058 = sext i8 %1044 to i64
  %1059 = getelementptr inbounds ptr, ptr %1057, i64 %1058
  %1060 = load ptr, ptr %1059, align 8, !tbaa !13
  %1061 = sext i32 %1036 to i64
  %1062 = getelementptr inbounds ptr, ptr %1060, i64 %1061
  %1063 = load ptr, ptr %1062, align 8, !tbaa !13
  %1064 = sext i32 %1033 to i64
  %1065 = getelementptr inbounds i8, ptr %1063, i64 %1064
  %1066 = load i8, ptr %1065, align 1, !tbaa !14
  %1067 = sext i8 %1066 to i16
  %1068 = getelementptr inbounds %struct.storable_picture, ptr %1055, i64 0, i32 39
  %1069 = load ptr, ptr %1068, align 8, !tbaa !371
  %1070 = getelementptr inbounds ptr, ptr %1069, i64 %1058
  %1071 = load ptr, ptr %1070, align 8, !tbaa !13
  %1072 = add nsw i32 %214, %1045
  %1073 = sext i32 %1072 to i64
  %1074 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %1073
  %1075 = load ptr, ptr %1074, align 8, !tbaa !13
  %1076 = shl nsw i32 %1033, 4
  %1077 = getelementptr inbounds ptr, ptr %1071, i64 %1061
  %1078 = load ptr, ptr %1077, align 8, !tbaa !13
  %1079 = getelementptr inbounds ptr, ptr %1078, i64 %1064
  %1080 = load ptr, ptr %1079, align 8, !tbaa !13
  %1081 = load i16, ptr %1080, align 2, !tbaa !40
  %1082 = sext i16 %1081 to i32
  %1083 = add nsw i32 %1076, %1082
  br i1 %41, label %1086, label %1084

1084:                                             ; preds = %1054
  %1085 = shl nsw i32 %1036, 4
  br label %1096

1086:                                             ; preds = %1054
  br i1 %938, label %1087, label %1091

1087:                                             ; preds = %1086
  %1088 = shl i32 %1035, 3
  %1089 = shl nuw nsw i32 %1030, 4
  %1090 = add i32 %1089, %1088
  br label %1096

1091:                                             ; preds = %1086
  %1092 = shl i32 %1035, 1
  %1093 = add i32 %1092, -8
  %1094 = add nsw i32 %1093, %1034
  %1095 = shl nsw i32 %1094, 2
  br label %1096

1096:                                             ; preds = %1091, %1087, %1084
  %1097 = phi i32 [ %1090, %1087 ], [ %1095, %1091 ], [ %1085, %1084 ]
  %1098 = getelementptr inbounds i16, ptr %1080, i64 1
  %1099 = load i16, ptr %1098, align 2, !tbaa !40
  %1100 = sext i16 %1099 to i32
  %1101 = add nsw i32 %1097, %1100
  %1102 = sext i8 %1066 to i32
  call void @get_block(i32 noundef %1102, ptr noundef %1075, i32 noundef %1083, i32 noundef %1101, ptr noundef nonnull %0, ptr noundef nonnull %3) #46
  %1103 = load i32, ptr %939, align 8, !tbaa !477
  %1104 = icmp eq i32 %1103, 0
  br i1 %1104, label %1105, label %1108

1105:                                             ; preds = %1096
  %1106 = zext i32 %1031 to i64
  %1107 = zext i32 %1034 to i64
  br label %1175

1108:                                             ; preds = %1096
  %1109 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1110 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1109, i64 0, i32 23
  %1111 = load i32, ptr %1110, align 8, !tbaa !475
  %1112 = icmp eq i32 %1111, 0
  br i1 %1112, label %1115, label %1113

1113:                                             ; preds = %1108
  %1114 = load i32, ptr %16, align 4, !tbaa !137
  switch i32 %1114, label %1115 [
    i32 0, label %1123
    i32 3, label %1123
  ]

1115:                                             ; preds = %1113, %1108
  %1116 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1109, i64 0, i32 24
  %1117 = load i32, ptr %1116, align 4, !tbaa !476
  %1118 = icmp eq i32 %1117, 1
  br i1 %1118, label %1119, label %1127

1119:                                             ; preds = %1115
  %1120 = load i32, ptr %16, align 4, !tbaa !137
  %1121 = icmp eq i32 %1120, 1
  %1122 = select i1 %1121, i1 %41, i1 false
  br i1 %1122, label %1124, label %1127

1123:                                             ; preds = %1113, %1113
  br i1 %41, label %1124, label %1127

1124:                                             ; preds = %1123, %1119
  %1125 = ashr i32 %1102, 1
  %1126 = trunc i32 %1125 to i16
  br label %1127

1127:                                             ; preds = %1124, %1123, %1119, %1115
  %1128 = phi i16 [ %1126, %1124 ], [ %1067, %1123 ], [ %1067, %1119 ], [ %1067, %1115 ]
  %1129 = load ptr, ptr %940, align 8, !tbaa !483
  %1130 = getelementptr inbounds ptr, ptr %1129, i64 %1058
  %1131 = load ptr, ptr %1130, align 8, !tbaa !13
  %1132 = sext i16 %1128 to i64
  %1133 = getelementptr inbounds ptr, ptr %1131, i64 %1132
  %1134 = load ptr, ptr %1133, align 8, !tbaa !13
  %1135 = load i32, ptr %1134, align 4, !tbaa !18
  %1136 = load ptr, ptr %941, align 8, !tbaa !484
  %1137 = getelementptr inbounds ptr, ptr %1136, i64 %1058
  %1138 = load ptr, ptr %1137, align 8, !tbaa !13
  %1139 = ashr i32 %1102, %42
  %1140 = sext i32 %1139 to i64
  %1141 = getelementptr inbounds ptr, ptr %1138, i64 %1140
  %1142 = load ptr, ptr %1141, align 8, !tbaa !13
  %1143 = load i32, ptr %1142, align 4, !tbaa !18
  %1144 = load i32, ptr %942, align 4, !tbaa !77
  %1145 = load i32, ptr %943, align 8, !tbaa !478
  %1146 = add nsw i32 %1145, -1
  %1147 = shl nuw i32 1, %1146
  %1148 = zext i32 %1031 to i64
  %1149 = zext i32 %1034 to i64
  %1150 = insertelement <4 x i32> poison, i32 %1135, i64 0
  %1151 = shufflevector <4 x i32> %1150, <4 x i32> poison, <4 x i32> zeroinitializer
  %1152 = insertelement <4 x i32> poison, i32 %1147, i64 0
  %1153 = shufflevector <4 x i32> %1152, <4 x i32> poison, <4 x i32> zeroinitializer
  %1154 = insertelement <4 x i32> poison, i32 %1145, i64 0
  %1155 = shufflevector <4 x i32> %1154, <4 x i32> poison, <4 x i32> zeroinitializer
  %1156 = insertelement <4 x i32> poison, i32 %1143, i64 0
  %1157 = shufflevector <4 x i32> %1156, <4 x i32> poison, <4 x i32> zeroinitializer
  %1158 = insertelement <4 x i32> poison, i32 %1144, i64 0
  %1159 = shufflevector <4 x i32> %1158, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1160

1160:                                             ; preds = %1160, %1127
  %1161 = phi i64 [ 0, %1127 ], [ %1173, %1160 ]
  %1162 = add nuw nsw i64 %1161, %1149
  %1163 = getelementptr inbounds [4 x [4 x i32]], ptr %3, i64 0, i64 %1161, i64 0
  %1164 = load <4 x i32>, ptr %1163, align 16, !tbaa !18
  %1165 = mul nsw <4 x i32> %1164, %1151
  %1166 = add nsw <4 x i32> %1153, %1165
  %1167 = ashr <4 x i32> %1166, %1155
  %1168 = add nsw <4 x i32> %1167, %1157
  %1169 = call <4 x i32> @llvm.smax.v4i32(<4 x i32> %1168, <4 x i32> zeroinitializer)
  %1170 = call <4 x i32> @llvm.smin.v4i32(<4 x i32> %1169, <4 x i32> %1159)
  %1171 = trunc <4 x i32> %1170 to <4 x i16>
  %1172 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1162, i64 %1148
  store <4 x i16> %1171, ptr %1172, align 2, !tbaa !40
  %1173 = add nuw nsw i64 %1161, 1
  %1174 = icmp eq i64 %1173, 4
  br i1 %1174, label %2077, label %1160, !llvm.loop !876

1175:                                             ; preds = %1175, %1105
  %1176 = phi i64 [ 0, %1105 ], [ %1182, %1175 ]
  %1177 = add nuw nsw i64 %1176, %1107
  %1178 = getelementptr inbounds [4 x [4 x i32]], ptr %3, i64 0, i64 %1176, i64 0
  %1179 = load <4 x i32>, ptr %1178, align 16, !tbaa !18
  %1180 = trunc <4 x i32> %1179 to <4 x i16>
  %1181 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1177, i64 %1106
  store <4 x i16> %1180, ptr %1181, align 2, !tbaa !40
  %1182 = add nuw nsw i64 %1176, 1
  %1183 = icmp eq i64 %1182, 4
  br i1 %1183, label %2077, label %1175, !llvm.loop !877

1184:                                             ; preds = %1052
  %1185 = icmp eq i8 %1042, 0
  %1186 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1187 = getelementptr inbounds %struct.storable_picture, ptr %1186, i64 0, i32 39
  %1188 = load ptr, ptr %1187, align 8, !tbaa !371
  %1189 = load ptr, ptr %1188, align 8, !tbaa !13
  %1190 = getelementptr inbounds ptr, ptr %1188, i64 1
  %1191 = load ptr, ptr %1190, align 8, !tbaa !13
  br i1 %1185, label %1210, label %1192

1192:                                             ; preds = %1184
  %1193 = getelementptr inbounds %struct.storable_picture, ptr %1186, i64 0, i32 36
  %1194 = load ptr, ptr %1193, align 8, !tbaa !197
  %1195 = load ptr, ptr %1194, align 8, !tbaa !13
  %1196 = sext i32 %1036 to i64
  %1197 = getelementptr inbounds ptr, ptr %1195, i64 %1196
  %1198 = load ptr, ptr %1197, align 8, !tbaa !13
  %1199 = sext i32 %1033 to i64
  %1200 = getelementptr inbounds i8, ptr %1198, i64 %1199
  %1201 = load i8, ptr %1200, align 1, !tbaa !14
  %1202 = sext i8 %1201 to i16
  %1203 = getelementptr inbounds ptr, ptr %1194, i64 1
  %1204 = load ptr, ptr %1203, align 8, !tbaa !13
  %1205 = getelementptr inbounds ptr, ptr %1204, i64 %1196
  %1206 = load ptr, ptr %1205, align 8, !tbaa !13
  %1207 = getelementptr inbounds i8, ptr %1206, i64 %1199
  %1208 = load i8, ptr %1207, align 1, !tbaa !14
  %1209 = sext i8 %1208 to i16
  br label %1725

1210:                                             ; preds = %1184
  %1211 = load i32, ptr %944, align 8, !tbaa !465
  %1212 = icmp eq i32 %1211, 0
  %1213 = load i32, ptr %33, align 8, !tbaa !189
  %1214 = icmp eq i32 %1213, 0
  br i1 %1212, label %1399, label %1215

1215:                                             ; preds = %1210
  br i1 %1214, label %1228, label %1216

1216:                                             ; preds = %1215
  %1217 = load i32, ptr %945, align 4, !tbaa !170
  %1218 = icmp eq i32 %1217, 0
  br i1 %1218, label %1228, label %1219

1219:                                             ; preds = %1216
  %1220 = load i32, ptr %13, align 4, !tbaa !49
  %1221 = and i32 %1220, 1
  %1222 = icmp eq i32 %1221, 0
  br i1 %1222, label %1226, label %1223

1223:                                             ; preds = %1219
  %1224 = add nsw i32 %1035, -4
  %1225 = ashr i32 %1224, 1
  br label %1228

1226:                                             ; preds = %1219
  %1227 = ashr i32 %1035, 1
  br label %1228

1228:                                             ; preds = %1226, %1223, %1216, %1215
  %1229 = phi i32 [ %1225, %1223 ], [ %1227, %1226 ], [ %1035, %1216 ], [ %1035, %1215 ]
  %1230 = add nsw i32 %1229, %1030
  br i1 %946, label %1231, label %1274

1231:                                             ; preds = %1228
  br i1 %947, label %1234, label %1232

1232:                                             ; preds = %1231
  %1233 = sext i32 %1033 to i64
  br label %1261

1234:                                             ; preds = %1231
  %1235 = sext i32 %1230 to i64
  %1236 = getelementptr inbounds ptr, ptr %209, i64 %1235
  %1237 = load ptr, ptr %1236, align 8, !tbaa !13
  %1238 = sext i32 %1033 to i64
  %1239 = getelementptr inbounds i8, ptr %1237, i64 %1238
  %1240 = load i8, ptr %1239, align 1, !tbaa !14
  %1241 = icmp eq i8 %1240, 0
  br i1 %1241, label %1242, label %1261

1242:                                             ; preds = %1234
  %1243 = load ptr, ptr %950, align 8, !tbaa !13
  %1244 = load ptr, ptr %1243, align 8, !tbaa !13
  %1245 = getelementptr inbounds %struct.storable_picture, ptr %1244, i64 0, i32 14
  %1246 = load i32, ptr %1245, align 4, !tbaa !356
  %1247 = icmp eq i32 %1246, 0
  br i1 %1247, label %1248, label %1261

1248:                                             ; preds = %1242
  %1249 = sext i32 %1036 to i64
  %1250 = getelementptr inbounds ptr, ptr %1189, i64 %1249
  %1251 = load ptr, ptr %1250, align 8, !tbaa !13
  %1252 = getelementptr inbounds ptr, ptr %1251, i64 %1238
  %1253 = load ptr, ptr %1252, align 8, !tbaa !13
  store i16 0, ptr %1253, align 2, !tbaa !40
  %1254 = getelementptr inbounds i16, ptr %1253, i64 1
  store i16 0, ptr %1254, align 2, !tbaa !40
  %1255 = getelementptr inbounds %struct.storable_picture, ptr %1186, i64 0, i32 36
  %1256 = load ptr, ptr %1255, align 8, !tbaa !197
  %1257 = load ptr, ptr %1256, align 8, !tbaa !13
  %1258 = getelementptr inbounds ptr, ptr %1257, i64 %1249
  %1259 = load ptr, ptr %1258, align 8, !tbaa !13
  %1260 = getelementptr inbounds i8, ptr %1259, i64 %1238
  store i8 0, ptr %1260, align 1, !tbaa !14
  br label %1292

1261:                                             ; preds = %1242, %1234, %1232
  %1262 = phi i64 [ %1233, %1232 ], [ %1238, %1242 ], [ %1238, %1234 ]
  %1263 = sext i32 %1036 to i64
  %1264 = getelementptr inbounds ptr, ptr %1189, i64 %1263
  %1265 = load ptr, ptr %1264, align 8, !tbaa !13
  %1266 = getelementptr inbounds ptr, ptr %1265, i64 %1262
  %1267 = load ptr, ptr %1266, align 8, !tbaa !13
  store <2 x i16> %934, ptr %1267, align 2, !tbaa !40
  %1268 = getelementptr inbounds %struct.storable_picture, ptr %1186, i64 0, i32 36
  %1269 = load ptr, ptr %1268, align 8, !tbaa !197
  %1270 = load ptr, ptr %1269, align 8, !tbaa !13
  %1271 = getelementptr inbounds ptr, ptr %1270, i64 %1263
  %1272 = load ptr, ptr %1271, align 8, !tbaa !13
  %1273 = getelementptr inbounds i8, ptr %1272, i64 %1262
  store i8 %931, ptr %1273, align 1, !tbaa !14
  br label %1292

1274:                                             ; preds = %1228
  %1275 = getelementptr inbounds %struct.storable_picture, ptr %1186, i64 0, i32 36
  %1276 = load ptr, ptr %1275, align 8, !tbaa !197
  %1277 = load ptr, ptr %1276, align 8, !tbaa !13
  %1278 = sext i32 %1036 to i64
  %1279 = getelementptr inbounds ptr, ptr %1277, i64 %1278
  %1280 = load ptr, ptr %1279, align 8, !tbaa !13
  %1281 = sext i32 %1033 to i64
  %1282 = getelementptr inbounds i8, ptr %1280, i64 %1281
  store i8 -1, ptr %1282, align 1, !tbaa !14
  %1283 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1284 = getelementptr inbounds %struct.storable_picture, ptr %1283, i64 0, i32 39
  %1285 = load ptr, ptr %1284, align 8, !tbaa !371
  %1286 = load ptr, ptr %1285, align 8, !tbaa !13
  %1287 = getelementptr inbounds ptr, ptr %1286, i64 %1278
  %1288 = load ptr, ptr %1287, align 8, !tbaa !13
  %1289 = getelementptr inbounds ptr, ptr %1288, i64 %1281
  %1290 = load ptr, ptr %1289, align 8, !tbaa !13
  store i16 0, ptr %1290, align 2, !tbaa !40
  %1291 = getelementptr inbounds i16, ptr %1290, i64 1
  store i16 0, ptr %1291, align 2, !tbaa !40
  br label %1292

1292:                                             ; preds = %1274, %1261, %1248
  br i1 %951, label %1293, label %1334

1293:                                             ; preds = %1292
  br i1 %953, label %1296, label %1294

1294:                                             ; preds = %1293
  %1295 = sext i32 %1033 to i64
  br label %1322

1296:                                             ; preds = %1293
  %1297 = sext i32 %1230 to i64
  %1298 = getelementptr inbounds ptr, ptr %209, i64 %1297
  %1299 = load ptr, ptr %1298, align 8, !tbaa !13
  %1300 = sext i32 %1033 to i64
  %1301 = getelementptr inbounds i8, ptr %1299, i64 %1300
  %1302 = load i8, ptr %1301, align 1, !tbaa !14
  %1303 = icmp eq i8 %1302, 0
  br i1 %1303, label %1304, label %1322

1304:                                             ; preds = %1296
  %1305 = load ptr, ptr %950, align 8, !tbaa !13
  %1306 = load ptr, ptr %1305, align 8, !tbaa !13
  %1307 = getelementptr inbounds %struct.storable_picture, ptr %1306, i64 0, i32 14
  %1308 = load i32, ptr %1307, align 4, !tbaa !356
  %1309 = icmp eq i32 %1308, 0
  br i1 %1309, label %1310, label %1322

1310:                                             ; preds = %1304
  %1311 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1312 = getelementptr inbounds %struct.storable_picture, ptr %1311, i64 0, i32 39
  %1313 = load ptr, ptr %1312, align 8, !tbaa !371
  %1314 = getelementptr inbounds ptr, ptr %1313, i64 1
  %1315 = load ptr, ptr %1314, align 8, !tbaa !13
  %1316 = sext i32 %1036 to i64
  %1317 = getelementptr inbounds ptr, ptr %1315, i64 %1316
  %1318 = load ptr, ptr %1317, align 8, !tbaa !13
  %1319 = getelementptr inbounds ptr, ptr %1318, i64 %1300
  %1320 = load ptr, ptr %1319, align 8, !tbaa !13
  store i16 0, ptr %1320, align 2, !tbaa !40
  %1321 = getelementptr inbounds i16, ptr %1320, i64 1
  store i16 0, ptr %1321, align 2, !tbaa !40
  br label %1363

1322:                                             ; preds = %1304, %1296, %1294
  %1323 = phi i64 [ %1295, %1294 ], [ %1300, %1304 ], [ %1300, %1296 ]
  %1324 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1325 = getelementptr inbounds %struct.storable_picture, ptr %1324, i64 0, i32 39
  %1326 = load ptr, ptr %1325, align 8, !tbaa !371
  %1327 = getelementptr inbounds ptr, ptr %1326, i64 1
  %1328 = load ptr, ptr %1327, align 8, !tbaa !13
  %1329 = sext i32 %1036 to i64
  %1330 = getelementptr inbounds ptr, ptr %1328, i64 %1329
  %1331 = load ptr, ptr %1330, align 8, !tbaa !13
  %1332 = getelementptr inbounds ptr, ptr %1331, i64 %1323
  %1333 = load ptr, ptr %1332, align 8, !tbaa !13
  store <2 x i16> %933, ptr %1333, align 2, !tbaa !40
  br label %1363

1334:                                             ; preds = %1292
  %1335 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1336 = getelementptr inbounds %struct.storable_picture, ptr %1335, i64 0, i32 39
  %1337 = load ptr, ptr %1336, align 8, !tbaa !371
  %1338 = getelementptr inbounds ptr, ptr %1337, i64 1
  %1339 = load ptr, ptr %1338, align 8, !tbaa !13
  %1340 = sext i32 %1036 to i64
  %1341 = getelementptr inbounds ptr, ptr %1339, i64 %1340
  %1342 = load ptr, ptr %1341, align 8, !tbaa !13
  %1343 = sext i32 %1033 to i64
  %1344 = getelementptr inbounds ptr, ptr %1342, i64 %1343
  %1345 = load ptr, ptr %1344, align 8, !tbaa !13
  store i16 0, ptr %1345, align 2, !tbaa !40
  %1346 = getelementptr inbounds i16, ptr %1345, i64 1
  store i16 0, ptr %1346, align 2, !tbaa !40
  %1347 = getelementptr inbounds %struct.storable_picture, ptr %1335, i64 0, i32 36
  %1348 = load ptr, ptr %1347, align 8, !tbaa !197
  %1349 = getelementptr inbounds ptr, ptr %1348, i64 1
  %1350 = load ptr, ptr %1349, align 8, !tbaa !13
  %1351 = getelementptr inbounds ptr, ptr %1350, i64 %1340
  %1352 = load ptr, ptr %1351, align 8, !tbaa !13
  %1353 = getelementptr inbounds i8, ptr %1352, i64 %1343
  store i8 -1, ptr %1353, align 1, !tbaa !14
  br i1 %952, label %1354, label %1375

1354:                                             ; preds = %1334
  %1355 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1356 = getelementptr inbounds %struct.storable_picture, ptr %1355, i64 0, i32 36
  %1357 = load ptr, ptr %1356, align 8, !tbaa !197
  %1358 = load ptr, ptr %1357, align 8, !tbaa !13
  %1359 = getelementptr inbounds ptr, ptr %1358, i64 %1340
  %1360 = load ptr, ptr %1359, align 8, !tbaa !13
  %1361 = getelementptr inbounds i8, ptr %1360, i64 %1343
  store i8 0, ptr %1361, align 1, !tbaa !14
  %1362 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  br label %1363

1363:                                             ; preds = %1354, %1322, %1310
  %1364 = phi ptr [ %1324, %1322 ], [ %1311, %1310 ], [ %1362, %1354 ]
  %1365 = phi i64 [ %1329, %1322 ], [ %1316, %1310 ], [ %1340, %1354 ]
  %1366 = phi i64 [ %1323, %1322 ], [ %1300, %1310 ], [ %1343, %1354 ]
  %1367 = phi i8 [ %932, %1322 ], [ 0, %1310 ], [ 0, %1354 ]
  %1368 = getelementptr inbounds %struct.storable_picture, ptr %1364, i64 0, i32 36
  %1369 = load ptr, ptr %1368, align 8, !tbaa !197
  %1370 = getelementptr inbounds ptr, ptr %1369, i64 1
  %1371 = load ptr, ptr %1370, align 8, !tbaa !13
  %1372 = getelementptr inbounds ptr, ptr %1371, i64 %1365
  %1373 = load ptr, ptr %1372, align 8, !tbaa !13
  %1374 = getelementptr inbounds i8, ptr %1373, i64 %1366
  store i8 %1367, ptr %1374, align 1, !tbaa !14
  br label %1375

1375:                                             ; preds = %1363, %1334
  %1376 = phi i64 [ %1343, %1334 ], [ %1366, %1363 ]
  %1377 = phi i64 [ %1340, %1334 ], [ %1365, %1363 ]
  %1378 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1379 = getelementptr inbounds %struct.storable_picture, ptr %1378, i64 0, i32 36
  %1380 = load ptr, ptr %1379, align 8, !tbaa !197
  %1381 = load ptr, ptr %1380, align 8, !tbaa !13
  %1382 = getelementptr inbounds ptr, ptr %1381, i64 %1377
  %1383 = load ptr, ptr %1382, align 8, !tbaa !13
  %1384 = getelementptr inbounds i8, ptr %1383, i64 %1376
  %1385 = load i8, ptr %1384, align 1, !tbaa !14
  %1386 = icmp eq i8 %1385, -1
  %1387 = select i1 %1386, i8 0, i8 %1385
  %1388 = sext i8 %1387 to i16
  %1389 = getelementptr inbounds ptr, ptr %1380, i64 1
  %1390 = load ptr, ptr %1389, align 8, !tbaa !13
  %1391 = getelementptr inbounds ptr, ptr %1390, i64 %1377
  %1392 = load ptr, ptr %1391, align 8, !tbaa !13
  %1393 = getelementptr inbounds i8, ptr %1392, i64 %1376
  %1394 = load i8, ptr %1393, align 1, !tbaa !14
  %1395 = icmp eq i8 %1394, -1
  br i1 %1395, label %1612, label %1396

1396:                                             ; preds = %1375
  %1397 = sext i8 %1394 to i16
  %1398 = select i1 %1386, i32 1, i32 2
  br label %1612

1399:                                             ; preds = %1210
  br i1 %1214, label %1412, label %1400

1400:                                             ; preds = %1399
  %1401 = load i32, ptr %945, align 4, !tbaa !170
  %1402 = icmp eq i32 %1401, 0
  br i1 %1402, label %1412, label %1403

1403:                                             ; preds = %1400
  %1404 = load i32, ptr %13, align 4, !tbaa !49
  %1405 = and i32 %1404, 1
  %1406 = icmp eq i32 %1405, 0
  br i1 %1406, label %1410, label %1407

1407:                                             ; preds = %1403
  %1408 = add nsw i32 %1035, -4
  %1409 = ashr i32 %1408, 1
  br label %1412

1410:                                             ; preds = %1403
  %1411 = ashr i32 %1035, 1
  br label %1412

1412:                                             ; preds = %1410, %1407, %1400, %1399
  %1413 = phi i32 [ %1409, %1407 ], [ %1411, %1410 ], [ %1035, %1400 ], [ %1035, %1399 ]
  %1414 = add nsw i32 %1413, %1030
  %1415 = load ptr, ptr %211, align 8, !tbaa !13
  %1416 = sext i32 %1414 to i64
  %1417 = getelementptr inbounds ptr, ptr %1415, i64 %1416
  %1418 = load ptr, ptr %1417, align 8, !tbaa !13
  %1419 = sext i32 %1033 to i64
  %1420 = getelementptr inbounds i8, ptr %1418, i64 %1419
  %1421 = load i8, ptr %1420, align 1, !tbaa !14
  %1422 = icmp eq i8 %1421, -1
  %1423 = zext i1 %1422 to i64
  %1424 = getelementptr inbounds ptr, ptr %211, i64 %1423
  %1425 = load ptr, ptr %1424, align 8, !tbaa !13
  %1426 = getelementptr inbounds ptr, ptr %1425, i64 %1416
  %1427 = load ptr, ptr %1426, align 8, !tbaa !13
  %1428 = getelementptr inbounds i8, ptr %1427, i64 %1419
  %1429 = load i8, ptr %1428, align 1, !tbaa !14
  %1430 = icmp eq i8 %1429, -1
  br i1 %1430, label %1443, label %1431

1431:                                             ; preds = %1412
  %1432 = load i32, ptr %954, align 8, !tbaa !466
  %1433 = load i32, ptr %956, align 4, !tbaa !18
  %1434 = call i32 @llvm.smin.i32(i32 %1432, i32 %1433)
  %1435 = icmp sgt i32 %1434, 0
  br i1 %1435, label %1436, label %1508

1436:                                             ; preds = %1431
  %1437 = load i32, ptr %957, align 8, !tbaa !206
  %1438 = icmp ne i32 %1437, 0
  %1439 = select i1 %1438, i1 true, i1 %41
  %1440 = load ptr, ptr @listX, align 16
  %1441 = getelementptr inbounds ptr, ptr %212, i64 %1423
  %1442 = zext i32 %1434 to i64
  br label %1469

1443:                                             ; preds = %1412
  %1444 = sext i32 %1036 to i64
  %1445 = getelementptr inbounds ptr, ptr %1189, i64 %1444
  %1446 = load ptr, ptr %1445, align 8, !tbaa !13
  %1447 = getelementptr inbounds ptr, ptr %1446, i64 %1419
  %1448 = load ptr, ptr %1447, align 8, !tbaa !13
  %1449 = getelementptr inbounds ptr, ptr %1191, i64 %1444
  %1450 = load ptr, ptr %1449, align 8, !tbaa !13
  %1451 = getelementptr inbounds ptr, ptr %1450, i64 %1419
  %1452 = load ptr, ptr %1451, align 8, !tbaa !13
  store i16 0, ptr %1448, align 2, !tbaa !40
  store i16 0, ptr %1452, align 2, !tbaa !40
  %1453 = getelementptr inbounds i16, ptr %1448, i64 1
  store i16 0, ptr %1453, align 2, !tbaa !40
  %1454 = getelementptr inbounds i16, ptr %1452, i64 1
  store i16 0, ptr %1454, align 2, !tbaa !40
  %1455 = getelementptr inbounds %struct.storable_picture, ptr %1186, i64 0, i32 36
  %1456 = load ptr, ptr %1455, align 8, !tbaa !197
  %1457 = load ptr, ptr %1456, align 8, !tbaa !13
  %1458 = getelementptr inbounds ptr, ptr %1457, i64 %1444
  %1459 = load ptr, ptr %1458, align 8, !tbaa !13
  %1460 = getelementptr inbounds i8, ptr %1459, i64 %1419
  store i8 0, ptr %1460, align 1, !tbaa !14
  %1461 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1462 = getelementptr inbounds %struct.storable_picture, ptr %1461, i64 0, i32 36
  %1463 = load ptr, ptr %1462, align 8, !tbaa !197
  %1464 = getelementptr inbounds ptr, ptr %1463, i64 1
  %1465 = load ptr, ptr %1464, align 8, !tbaa !13
  %1466 = getelementptr inbounds ptr, ptr %1465, i64 %1444
  %1467 = load ptr, ptr %1466, align 8, !tbaa !13
  %1468 = getelementptr inbounds i8, ptr %1467, i64 %1419
  store i8 0, ptr %1468, align 1, !tbaa !14
  br label %1612

1469:                                             ; preds = %1501, %1436
  %1470 = phi i64 [ 0, %1436 ], [ %1502, %1501 ]
  br i1 %1439, label %1490, label %1471

1471:                                             ; preds = %1469
  %1472 = getelementptr inbounds ptr, ptr %1440, i64 %1470
  %1473 = load ptr, ptr %1472, align 8, !tbaa !13
  %1474 = getelementptr inbounds %struct.storable_picture, ptr %1473, i64 0, i32 2
  %1475 = load i32, ptr %1474, align 8, !tbaa !593
  %1476 = shl nsw i32 %1475, 1
  %1477 = sext i32 %1476 to i64
  %1478 = load ptr, ptr %1441, align 8, !tbaa !13
  %1479 = getelementptr inbounds ptr, ptr %1478, i64 %1416
  %1480 = load ptr, ptr %1479, align 8, !tbaa !13
  %1481 = getelementptr inbounds i64, ptr %1480, i64 %1419
  %1482 = load i64, ptr %1481, align 8, !tbaa !592
  %1483 = icmp eq i64 %1482, %1477
  br i1 %1483, label %1506, label %1484

1484:                                             ; preds = %1471
  %1485 = getelementptr inbounds %struct.storable_picture, ptr %1473, i64 0, i32 3
  %1486 = load i32, ptr %1485, align 4, !tbaa !594
  %1487 = shl nsw i32 %1486, 1
  %1488 = sext i32 %1487 to i64
  %1489 = icmp eq i64 %1482, %1488
  br i1 %1489, label %1506, label %1501

1490:                                             ; preds = %1469
  %1491 = load i32, ptr %958, align 4, !tbaa !175
  %1492 = sext i32 %1491 to i64
  %1493 = getelementptr inbounds %struct.storable_picture, ptr %1186, i64 0, i32 5, i64 %1492, i64 %955, i64 %1470
  %1494 = load i64, ptr %1493, align 8, !tbaa !592
  %1495 = load ptr, ptr %1441, align 8, !tbaa !13
  %1496 = getelementptr inbounds ptr, ptr %1495, i64 %1416
  %1497 = load ptr, ptr %1496, align 8, !tbaa !13
  %1498 = getelementptr inbounds i64, ptr %1497, i64 %1419
  %1499 = load i64, ptr %1498, align 8, !tbaa !592
  %1500 = icmp eq i64 %1494, %1499
  br i1 %1500, label %1506, label %1501

1501:                                             ; preds = %1490, %1484
  %1502 = add nuw nsw i64 %1470, 1
  %1503 = icmp eq i64 %1502, %1442
  br i1 %1503, label %1504, label %1469, !llvm.loop !878

1504:                                             ; preds = %1501
  br i1 %1435, label %1505, label %1508

1505:                                             ; preds = %1504
  call void @error(ptr noundef nonnull @.str.3.170, i32 noundef -1111) #46
  br label %1508

1506:                                             ; preds = %1490, %1484, %1471
  %.lcssa13 = phi i64 [ %1470, %1490 ], [ %1470, %1484 ], [ %1470, %1471 ]
  %1507 = trunc i64 %.lcssa13 to i32
  br label %1508

1508:                                             ; preds = %1506, %1505, %1504, %1431
  %1509 = phi i32 [ -135792468, %1505 ], [ -135792468, %1504 ], [ 0, %1431 ], [ %1507, %1506 ]
  %1510 = sext i32 %1509 to i64
  %1511 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 26, i64 %955, i64 %1510
  %1512 = load i32, ptr %1511, align 4, !tbaa !18
  %1513 = icmp eq i32 %1512, 9999
  br i1 %1513, label %1514, label %1516

1514:                                             ; preds = %1508
  %1515 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  br label %1524

1516:                                             ; preds = %1508
  %1517 = load ptr, ptr %959, align 8, !tbaa !13
  %1518 = getelementptr inbounds ptr, ptr %1517, i64 %1510
  %1519 = load ptr, ptr %1518, align 8, !tbaa !13
  %1520 = getelementptr inbounds %struct.storable_picture, ptr %1519, i64 0, i32 14
  %1521 = load i32, ptr %1520, align 4, !tbaa !356
  %1522 = icmp eq i32 %1521, 0
  %1523 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  br i1 %1522, label %1550, label %1524

1524:                                             ; preds = %1516, %1514
  %1525 = phi ptr [ %1515, %1514 ], [ %1523, %1516 ]
  %1526 = getelementptr inbounds ptr, ptr %210, i64 %1423
  %1527 = load ptr, ptr %1526, align 8, !tbaa !13
  %1528 = getelementptr inbounds ptr, ptr %1527, i64 %1416
  %1529 = load ptr, ptr %1528, align 8, !tbaa !13
  %1530 = getelementptr inbounds ptr, ptr %1529, i64 %1419
  %1531 = load ptr, ptr %1530, align 8, !tbaa !13
  %1532 = load i16, ptr %1531, align 2, !tbaa !40
  %1533 = getelementptr inbounds %struct.storable_picture, ptr %1525, i64 0, i32 39
  %1534 = load ptr, ptr %1533, align 8, !tbaa !371
  %1535 = load ptr, ptr %1534, align 8, !tbaa !13
  %1536 = sext i32 %1036 to i64
  %1537 = getelementptr inbounds ptr, ptr %1535, i64 %1536
  %1538 = load ptr, ptr %1537, align 8, !tbaa !13
  %1539 = getelementptr inbounds ptr, ptr %1538, i64 %1419
  %1540 = load ptr, ptr %1539, align 8, !tbaa !13
  store i16 %1532, ptr %1540, align 2, !tbaa !40
  %1541 = getelementptr inbounds i16, ptr %1531, i64 1
  %1542 = load i16, ptr %1541, align 2, !tbaa !40
  %1543 = getelementptr inbounds i16, ptr %1540, i64 1
  store i16 %1542, ptr %1543, align 2, !tbaa !40
  %1544 = getelementptr inbounds ptr, ptr %1534, i64 1
  %1545 = load ptr, ptr %1544, align 8, !tbaa !13
  %1546 = getelementptr inbounds ptr, ptr %1545, i64 %1536
  %1547 = load ptr, ptr %1546, align 8, !tbaa !13
  %1548 = getelementptr inbounds ptr, ptr %1547, i64 %1419
  %1549 = load ptr, ptr %1548, align 8, !tbaa !13
  store i16 0, ptr %1549, align 2, !tbaa !40
  br label %1590

1550:                                             ; preds = %1516
  %1551 = getelementptr inbounds ptr, ptr %210, i64 %1423
  %1552 = load ptr, ptr %1551, align 8, !tbaa !13
  %1553 = getelementptr inbounds ptr, ptr %1552, i64 %1416
  %1554 = load ptr, ptr %1553, align 8, !tbaa !13
  %1555 = getelementptr inbounds ptr, ptr %1554, i64 %1419
  %1556 = load ptr, ptr %1555, align 8, !tbaa !13
  %1557 = load i16, ptr %1556, align 2, !tbaa !40
  %1558 = sext i16 %1557 to i32
  %1559 = mul nsw i32 %1512, %1558
  %1560 = add nsw i32 %1559, 128
  %1561 = lshr i32 %1560, 8
  %1562 = trunc i32 %1561 to i16
  %1563 = getelementptr inbounds %struct.storable_picture, ptr %1523, i64 0, i32 39
  %1564 = load ptr, ptr %1563, align 8, !tbaa !371
  %1565 = load ptr, ptr %1564, align 8, !tbaa !13
  %1566 = sext i32 %1036 to i64
  %1567 = getelementptr inbounds ptr, ptr %1565, i64 %1566
  %1568 = load ptr, ptr %1567, align 8, !tbaa !13
  %1569 = getelementptr inbounds ptr, ptr %1568, i64 %1419
  %1570 = load ptr, ptr %1569, align 8, !tbaa !13
  store i16 %1562, ptr %1570, align 2, !tbaa !40
  %1571 = getelementptr inbounds i16, ptr %1556, i64 1
  %1572 = load i16, ptr %1571, align 2, !tbaa !40
  %1573 = sext i16 %1572 to i32
  %1574 = mul nsw i32 %1512, %1573
  %1575 = add nsw i32 %1574, 128
  %1576 = lshr i32 %1575, 8
  %1577 = trunc i32 %1576 to i16
  %1578 = getelementptr inbounds i16, ptr %1570, i64 1
  store i16 %1577, ptr %1578, align 2, !tbaa !40
  %1579 = load i16, ptr %1556, align 2, !tbaa !40
  %1580 = sub i16 %1562, %1579
  %1581 = getelementptr inbounds ptr, ptr %1564, i64 1
  %1582 = load ptr, ptr %1581, align 8, !tbaa !13
  %1583 = getelementptr inbounds ptr, ptr %1582, i64 %1566
  %1584 = load ptr, ptr %1583, align 8, !tbaa !13
  %1585 = getelementptr inbounds ptr, ptr %1584, i64 %1419
  %1586 = load ptr, ptr %1585, align 8, !tbaa !13
  store i16 %1580, ptr %1586, align 2, !tbaa !40
  %1587 = load i16, ptr %1578, align 2, !tbaa !40
  %1588 = load i16, ptr %1571, align 2, !tbaa !40
  %1589 = sub i16 %1587, %1588
  br label %1590

1590:                                             ; preds = %1550, %1524
  %1591 = phi ptr [ %1586, %1550 ], [ %1549, %1524 ]
  %1592 = phi i16 [ %1589, %1550 ], [ 0, %1524 ]
  %1593 = phi i64 [ %1566, %1550 ], [ %1536, %1524 ]
  %1594 = phi ptr [ %1523, %1550 ], [ %1525, %1524 ]
  %1595 = getelementptr inbounds i16, ptr %1591, i64 1
  store i16 %1592, ptr %1595, align 2, !tbaa !40
  %1596 = trunc i32 %1509 to i8
  %1597 = getelementptr inbounds %struct.storable_picture, ptr %1594, i64 0, i32 36
  %1598 = load ptr, ptr %1597, align 8, !tbaa !197
  %1599 = load ptr, ptr %1598, align 8, !tbaa !13
  %1600 = getelementptr inbounds ptr, ptr %1599, i64 %1593
  %1601 = load ptr, ptr %1600, align 8, !tbaa !13
  %1602 = getelementptr inbounds i8, ptr %1601, i64 %1419
  store i8 %1596, ptr %1602, align 1, !tbaa !14
  %1603 = sext i8 %1596 to i16
  %1604 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1605 = getelementptr inbounds %struct.storable_picture, ptr %1604, i64 0, i32 36
  %1606 = load ptr, ptr %1605, align 8, !tbaa !197
  %1607 = getelementptr inbounds ptr, ptr %1606, i64 1
  %1608 = load ptr, ptr %1607, align 8, !tbaa !13
  %1609 = getelementptr inbounds ptr, ptr %1608, i64 %1593
  %1610 = load ptr, ptr %1609, align 8, !tbaa !13
  %1611 = getelementptr inbounds i8, ptr %1610, i64 %1419
  store i8 0, ptr %1611, align 1, !tbaa !14
  br label %1612

1612:                                             ; preds = %1590, %1443, %1396, %1375
  %1613 = phi i64 [ %1376, %1396 ], [ %1376, %1375 ], [ %1419, %1590 ], [ %1419, %1443 ]
  %1614 = phi i64 [ %1377, %1396 ], [ %1377, %1375 ], [ %1593, %1590 ], [ %1444, %1443 ]
  %1615 = phi i16 [ %1397, %1396 ], [ 0, %1375 ], [ 0, %1590 ], [ 0, %1443 ]
  %1616 = phi i16 [ %1388, %1396 ], [ %1388, %1375 ], [ %1603, %1590 ], [ 0, %1443 ]
  %1617 = phi i16 [ %1397, %1396 ], [ 0, %1375 ], [ 0, %1590 ], [ %1021, %1443 ]
  %1618 = phi i32 [ %1398, %1396 ], [ 0, %1375 ], [ %1020, %1590 ], [ %1020, %1443 ]
  %1619 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1620 = load i32, ptr %958, align 4, !tbaa !175
  %1621 = sext i32 %1620 to i64
  %1622 = getelementptr inbounds %struct.storable_picture, ptr %1619, i64 0, i32 36
  %1623 = load ptr, ptr %1622, align 8, !tbaa !197
  %1624 = load ptr, ptr %1623, align 8, !tbaa !13
  %1625 = getelementptr inbounds ptr, ptr %1624, i64 %1614
  %1626 = load ptr, ptr %1625, align 8, !tbaa !13
  %1627 = getelementptr inbounds i8, ptr %1626, i64 %1613
  %1628 = load i8, ptr %1627, align 1, !tbaa !14
  %1629 = sext i8 %1628 to i64
  %1630 = getelementptr inbounds %struct.storable_picture, ptr %1619, i64 0, i32 5, i64 %1621, i64 %955, i64 %1629
  %1631 = load i64, ptr %1630, align 8, !tbaa !592
  %1632 = getelementptr inbounds %struct.storable_picture, ptr %1619, i64 0, i32 37
  %1633 = load ptr, ptr %1632, align 8, !tbaa !717
  %1634 = load ptr, ptr %1633, align 8, !tbaa !13
  %1635 = getelementptr inbounds ptr, ptr %1634, i64 %1614
  %1636 = load ptr, ptr %1635, align 8, !tbaa !13
  %1637 = getelementptr inbounds i64, ptr %1636, i64 %1613
  store i64 %1631, ptr %1637, align 8, !tbaa !592
  %1638 = getelementptr inbounds ptr, ptr %1623, i64 1
  %1639 = load ptr, ptr %1638, align 8, !tbaa !13
  %1640 = getelementptr inbounds ptr, ptr %1639, i64 %1614
  %1641 = load ptr, ptr %1640, align 8, !tbaa !13
  %1642 = getelementptr inbounds i8, ptr %1641, i64 %1613
  %1643 = load i8, ptr %1642, align 1, !tbaa !14
  %1644 = sext i8 %1643 to i64
  %1645 = getelementptr inbounds %struct.storable_picture, ptr %1619, i64 0, i32 5, i64 %1621, i64 %949, i64 %1644
  %1646 = load i64, ptr %1645, align 8, !tbaa !592
  %1647 = getelementptr inbounds ptr, ptr %1633, i64 1
  %1648 = load ptr, ptr %1647, align 8, !tbaa !13
  %1649 = getelementptr inbounds ptr, ptr %1648, i64 %1614
  %1650 = load ptr, ptr %1649, align 8, !tbaa !13
  %1651 = getelementptr inbounds i64, ptr %1650, i64 %1613
  store i64 %1646, ptr %1651, align 8, !tbaa !592
  %1652 = load i32, ptr %944, align 8, !tbaa !465
  %1653 = icmp eq i32 %1652, 0
  br i1 %1653, label %1725, label %1654

1654:                                             ; preds = %1612
  %1655 = load i8, ptr %1627, align 1, !tbaa !14
  %1656 = icmp sgt i8 %1655, -1
  br i1 %1656, label %1657, label %1692

1657:                                             ; preds = %1654
  %1658 = shl nsw i32 %1033, 4
  %1659 = getelementptr inbounds ptr, ptr %1189, i64 %1614
  %1660 = load ptr, ptr %1659, align 8, !tbaa !13
  %1661 = getelementptr inbounds ptr, ptr %1660, i64 %1613
  %1662 = load ptr, ptr %1661, align 8, !tbaa !13
  %1663 = load i16, ptr %1662, align 2, !tbaa !40
  %1664 = sext i16 %1663 to i32
  %1665 = add nsw i32 %1658, %1664
  br i1 %41, label %1668, label %1666

1666:                                             ; preds = %1657
  %1667 = shl nsw i32 %1036, 4
  br label %1677

1668:                                             ; preds = %1657
  %1669 = load i32, ptr %936, align 4, !tbaa !301
  %1670 = shl i32 %1669, 3
  %1671 = shl nuw nsw i32 %1030, 4
  br i1 %938, label %1672, label %1674

1672:                                             ; preds = %1668
  %1673 = add i32 %1670, %1671
  br label %1677

1674:                                             ; preds = %1668
  %1675 = add nsw i32 %1671, -32
  %1676 = add i32 %1670, %1675
  br label %1677

1677:                                             ; preds = %1674, %1672, %1666
  %1678 = phi i32 [ %1673, %1672 ], [ %1676, %1674 ], [ %1667, %1666 ]
  %1679 = getelementptr inbounds i16, ptr %1662, i64 1
  %1680 = load i16, ptr %1679, align 2, !tbaa !40
  %1681 = sext i16 %1680 to i32
  %1682 = add nsw i32 %1678, %1681
  %1683 = sext i16 %1616 to i32
  %1684 = load ptr, ptr %959, align 8, !tbaa !13
  call void @get_block(i32 noundef %1683, ptr noundef %1684, i32 noundef %1665, i32 noundef %1682, ptr noundef nonnull %0, ptr noundef nonnull %3) #46
  %1685 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %1686 = getelementptr inbounds %struct.storable_picture, ptr %1685, i64 0, i32 36
  %1687 = load ptr, ptr %1686, align 8, !tbaa !197
  %1688 = getelementptr inbounds ptr, ptr %1687, i64 1
  %1689 = load ptr, ptr %1688, align 8, !tbaa !13
  %1690 = getelementptr inbounds ptr, ptr %1689, i64 %1614
  %1691 = load ptr, ptr %1690, align 8, !tbaa !13
  br label %1692

1692:                                             ; preds = %1677, %1654
  %1693 = phi ptr [ %1691, %1677 ], [ %1641, %1654 ]
  %1694 = getelementptr inbounds i8, ptr %1693, i64 %1613
  %1695 = load i8, ptr %1694, align 1, !tbaa !14
  %1696 = icmp sgt i8 %1695, -1
  br i1 %1696, label %1697, label %1772

1697:                                             ; preds = %1692
  %1698 = shl nsw i32 %1033, 4
  %1699 = getelementptr inbounds ptr, ptr %1191, i64 %1614
  %1700 = load ptr, ptr %1699, align 8, !tbaa !13
  %1701 = getelementptr inbounds ptr, ptr %1700, i64 %1613
  %1702 = load ptr, ptr %1701, align 8, !tbaa !13
  %1703 = load i16, ptr %1702, align 2, !tbaa !40
  %1704 = sext i16 %1703 to i32
  %1705 = add nsw i32 %1698, %1704
  br i1 %41, label %1708, label %1706

1706:                                             ; preds = %1697
  %1707 = shl nsw i32 %1036, 4
  br label %1717

1708:                                             ; preds = %1697
  %1709 = load i32, ptr %936, align 4, !tbaa !301
  %1710 = shl i32 %1709, 3
  %1711 = shl nuw nsw i32 %1030, 4
  br i1 %938, label %1712, label %1714

1712:                                             ; preds = %1708
  %1713 = add i32 %1710, %1711
  br label %1717

1714:                                             ; preds = %1708
  %1715 = add nsw i32 %1711, -32
  %1716 = add i32 %1710, %1715
  br label %1717

1717:                                             ; preds = %1714, %1712, %1706
  %1718 = phi i32 [ %1713, %1712 ], [ %1716, %1714 ], [ %1707, %1706 ]
  %1719 = getelementptr inbounds i16, ptr %1702, i64 1
  %1720 = load i16, ptr %1719, align 2, !tbaa !40
  %1721 = sext i16 %1720 to i32
  %1722 = add nsw i32 %1718, %1721
  %1723 = sext i16 %1615 to i32
  %1724 = load ptr, ptr %950, align 8, !tbaa !13
  call void @get_block(i32 noundef %1723, ptr noundef %1724, i32 noundef %1705, i32 noundef %1722, ptr noundef nonnull %0, ptr noundef nonnull %4) #46
  br label %1772

1725:                                             ; preds = %1612, %1192
  %1726 = phi i64 [ %1199, %1192 ], [ %1613, %1612 ]
  %1727 = phi i64 [ %1196, %1192 ], [ %1614, %1612 ]
  %1728 = phi i32 [ %1020, %1192 ], [ %1618, %1612 ]
  %1729 = phi i16 [ %1209, %1192 ], [ %1617, %1612 ]
  %1730 = phi i16 [ %1202, %1192 ], [ %1616, %1612 ]
  %1731 = phi i16 [ %1209, %1192 ], [ %1615, %1612 ]
  %1732 = shl nsw i32 %1033, 4
  %1733 = getelementptr inbounds ptr, ptr %1189, i64 %1727
  %1734 = load ptr, ptr %1733, align 8, !tbaa !13
  %1735 = getelementptr inbounds ptr, ptr %1734, i64 %1726
  %1736 = load ptr, ptr %1735, align 8, !tbaa !13
  %1737 = load i16, ptr %1736, align 2, !tbaa !40
  %1738 = sext i16 %1737 to i32
  %1739 = add nsw i32 %1732, %1738
  %1740 = getelementptr inbounds ptr, ptr %1191, i64 %1727
  %1741 = load ptr, ptr %1740, align 8, !tbaa !13
  %1742 = getelementptr inbounds ptr, ptr %1741, i64 %1726
  %1743 = load ptr, ptr %1742, align 8, !tbaa !13
  %1744 = load i16, ptr %1743, align 2, !tbaa !40
  %1745 = sext i16 %1744 to i32
  %1746 = add nsw i32 %1732, %1745
  br i1 %41, label %1749, label %1747

1747:                                             ; preds = %1725
  %1748 = shl nsw i32 %1036, 4
  br label %1758

1749:                                             ; preds = %1725
  %1750 = load i32, ptr %936, align 4, !tbaa !301
  %1751 = shl i32 %1750, 3
  %1752 = shl nuw nsw i32 %1030, 4
  br i1 %938, label %1753, label %1755

1753:                                             ; preds = %1749
  %1754 = add i32 %1751, %1752
  br label %1758

1755:                                             ; preds = %1749
  %1756 = add nsw i32 %1752, -32
  %1757 = add i32 %1751, %1756
  br label %1758

1758:                                             ; preds = %1755, %1753, %1747
  %1759 = phi i32 [ %1748, %1747 ], [ %1757, %1755 ], [ %1754, %1753 ]
  %1760 = getelementptr inbounds i16, ptr %1736, i64 1
  %1761 = load i16, ptr %1760, align 2, !tbaa !40
  %1762 = sext i16 %1761 to i32
  %1763 = add nsw i32 %1759, %1762
  %1764 = getelementptr inbounds i16, ptr %1743, i64 1
  %1765 = load i16, ptr %1764, align 2, !tbaa !40
  %1766 = sext i16 %1765 to i32
  %1767 = add nsw i32 %1759, %1766
  %1768 = sext i16 %1730 to i32
  %1769 = load ptr, ptr %959, align 8, !tbaa !13
  call void @get_block(i32 noundef %1768, ptr noundef %1769, i32 noundef %1739, i32 noundef %1763, ptr noundef nonnull %0, ptr noundef nonnull %3) #46
  %1770 = sext i16 %1731 to i32
  %1771 = load ptr, ptr %950, align 8, !tbaa !13
  call void @get_block(i32 noundef %1770, ptr noundef %1771, i32 noundef %1746, i32 noundef %1767, ptr noundef nonnull %0, ptr noundef nonnull %4) #46
  br i1 %1185, label %1772, label %1947

1772:                                             ; preds = %1758, %1717, %1692
  %1773 = phi i16 [ %1731, %1758 ], [ %1615, %1692 ], [ %1615, %1717 ]
  %1774 = phi i16 [ %1730, %1758 ], [ %1616, %1692 ], [ %1616, %1717 ]
  %1775 = phi i16 [ %1729, %1758 ], [ %1617, %1692 ], [ %1617, %1717 ]
  %1776 = phi i32 [ %1728, %1758 ], [ %1618, %1692 ], [ %1618, %1717 ]
  %1777 = load i32, ptr %944, align 8, !tbaa !465
  %1778 = icmp ne i32 %1777, 0
  %1779 = icmp eq i32 %1776, 0
  %1780 = select i1 %1778, i1 %1779, i1 false
  br i1 %1780, label %1781, label %1861

1781:                                             ; preds = %1772
  %1782 = load i32, ptr %939, align 8, !tbaa !477
  %1783 = icmp eq i32 %1782, 0
  br i1 %1783, label %1784, label %1787

1784:                                             ; preds = %1781
  %1785 = zext i32 %1031 to i64
  %1786 = zext i32 %1034 to i64
  br label %1852

1787:                                             ; preds = %1781
  %1788 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1789 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1788, i64 0, i32 23
  %1790 = load i32, ptr %1789, align 8, !tbaa !475
  %1791 = icmp eq i32 %1790, 0
  br i1 %1791, label %1794, label %1792

1792:                                             ; preds = %1787
  %1793 = load i32, ptr %16, align 4, !tbaa !137
  switch i32 %1793, label %1794 [
    i32 0, label %1802
    i32 3, label %1802
  ]

1794:                                             ; preds = %1792, %1787
  %1795 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1788, i64 0, i32 24
  %1796 = load i32, ptr %1795, align 4, !tbaa !476
  %1797 = icmp eq i32 %1796, 1
  br i1 %1797, label %1798, label %1805

1798:                                             ; preds = %1794
  %1799 = load i32, ptr %16, align 4, !tbaa !137
  %1800 = icmp eq i32 %1799, 1
  %1801 = select i1 %1800, i1 %41, i1 false
  br i1 %1801, label %1803, label %1805

1802:                                             ; preds = %1792, %1792
  br i1 %41, label %1803, label %1805

1803:                                             ; preds = %1802, %1798
  %1804 = ashr i16 %1774, 1
  br label %1805

1805:                                             ; preds = %1803, %1802, %1798, %1794
  %1806 = phi i16 [ %1804, %1803 ], [ %1774, %1802 ], [ %1774, %1798 ], [ %1774, %1794 ]
  %1807 = load ptr, ptr %940, align 8, !tbaa !483
  %1808 = load ptr, ptr %1807, align 8, !tbaa !13
  %1809 = sext i16 %1806 to i64
  %1810 = getelementptr inbounds ptr, ptr %1808, i64 %1809
  %1811 = load ptr, ptr %1810, align 8, !tbaa !13
  %1812 = load i32, ptr %1811, align 4, !tbaa !18
  %1813 = load ptr, ptr %941, align 8, !tbaa !484
  %1814 = load ptr, ptr %1813, align 8, !tbaa !13
  %1815 = sext i16 %1774 to i32
  %1816 = ashr i32 %1815, %42
  %1817 = sext i32 %1816 to i64
  %1818 = getelementptr inbounds ptr, ptr %1814, i64 %1817
  %1819 = load ptr, ptr %1818, align 8, !tbaa !13
  %1820 = load i32, ptr %1819, align 4, !tbaa !18
  %1821 = load i32, ptr %942, align 4, !tbaa !77
  %1822 = load i32, ptr %943, align 8, !tbaa !478
  %1823 = add nsw i32 %1822, -1
  %1824 = shl nuw i32 1, %1823
  %1825 = zext i32 %1031 to i64
  %1826 = zext i32 %1034 to i64
  %1827 = insertelement <4 x i32> poison, i32 %1812, i64 0
  %1828 = shufflevector <4 x i32> %1827, <4 x i32> poison, <4 x i32> zeroinitializer
  %1829 = insertelement <4 x i32> poison, i32 %1824, i64 0
  %1830 = shufflevector <4 x i32> %1829, <4 x i32> poison, <4 x i32> zeroinitializer
  %1831 = insertelement <4 x i32> poison, i32 %1822, i64 0
  %1832 = shufflevector <4 x i32> %1831, <4 x i32> poison, <4 x i32> zeroinitializer
  %1833 = insertelement <4 x i32> poison, i32 %1820, i64 0
  %1834 = shufflevector <4 x i32> %1833, <4 x i32> poison, <4 x i32> zeroinitializer
  %1835 = insertelement <4 x i32> poison, i32 %1821, i64 0
  %1836 = shufflevector <4 x i32> %1835, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1837

1837:                                             ; preds = %1837, %1805
  %1838 = phi i64 [ 0, %1805 ], [ %1850, %1837 ]
  %1839 = add nuw nsw i64 %1838, %1826
  %1840 = getelementptr inbounds [4 x [4 x i32]], ptr %3, i64 0, i64 %1838, i64 0
  %1841 = load <4 x i32>, ptr %1840, align 16, !tbaa !18
  %1842 = mul nsw <4 x i32> %1841, %1828
  %1843 = add nsw <4 x i32> %1830, %1842
  %1844 = ashr <4 x i32> %1843, %1832
  %1845 = add nsw <4 x i32> %1844, %1834
  %1846 = call <4 x i32> @llvm.smax.v4i32(<4 x i32> %1845, <4 x i32> zeroinitializer)
  %1847 = call <4 x i32> @llvm.smin.v4i32(<4 x i32> %1846, <4 x i32> %1836)
  %1848 = trunc <4 x i32> %1847 to <4 x i16>
  %1849 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1839, i64 %1825
  store <4 x i16> %1848, ptr %1849, align 2, !tbaa !40
  %1850 = add nuw nsw i64 %1838, 1
  %1851 = icmp eq i64 %1850, 4
  br i1 %1851, label %2077, label %1837, !llvm.loop !879

1852:                                             ; preds = %1852, %1784
  %1853 = phi i64 [ 0, %1784 ], [ %1859, %1852 ]
  %1854 = add nuw nsw i64 %1853, %1786
  %1855 = getelementptr inbounds [4 x [4 x i32]], ptr %3, i64 0, i64 %1853, i64 0
  %1856 = load <4 x i32>, ptr %1855, align 16, !tbaa !18
  %1857 = trunc <4 x i32> %1856 to <4 x i16>
  %1858 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1854, i64 %1785
  store <4 x i16> %1857, ptr %1858, align 2, !tbaa !40
  %1859 = add nuw nsw i64 %1853, 1
  %1860 = icmp eq i64 %1859, 4
  br i1 %1860, label %2077, label %1852, !llvm.loop !880

1861:                                             ; preds = %1772
  %1862 = icmp eq i32 %1776, 1
  %1863 = select i1 %1778, i1 %1862, i1 false
  %1864 = load i32, ptr %939, align 8, !tbaa !477
  %1865 = icmp eq i32 %1864, 0
  br i1 %1863, label %1866, label %1946

1866:                                             ; preds = %1861
  br i1 %1865, label %1867, label %1870

1867:                                             ; preds = %1866
  %1868 = zext i32 %1031 to i64
  %1869 = zext i32 %1034 to i64
  br label %1937

1870:                                             ; preds = %1866
  %1871 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1872 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1871, i64 0, i32 23
  %1873 = load i32, ptr %1872, align 8, !tbaa !475
  %1874 = icmp eq i32 %1873, 0
  br i1 %1874, label %1877, label %1875

1875:                                             ; preds = %1870
  %1876 = load i32, ptr %16, align 4, !tbaa !137
  switch i32 %1876, label %1877 [
    i32 0, label %1885
    i32 3, label %1885
  ]

1877:                                             ; preds = %1875, %1870
  %1878 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1871, i64 0, i32 24
  %1879 = load i32, ptr %1878, align 4, !tbaa !476
  %1880 = icmp eq i32 %1879, 1
  br i1 %1880, label %1881, label %1888

1881:                                             ; preds = %1877
  %1882 = load i32, ptr %16, align 4, !tbaa !137
  %1883 = icmp eq i32 %1882, 1
  %1884 = select i1 %1883, i1 %41, i1 false
  br i1 %1884, label %1886, label %1888

1885:                                             ; preds = %1875, %1875
  br i1 %41, label %1886, label %1888

1886:                                             ; preds = %1885, %1881
  %1887 = ashr i16 %1775, 1
  br label %1888

1888:                                             ; preds = %1886, %1885, %1881, %1877
  %1889 = phi i16 [ %1887, %1886 ], [ %1775, %1885 ], [ %1775, %1881 ], [ %1775, %1877 ]
  %1890 = load ptr, ptr %940, align 8, !tbaa !483
  %1891 = getelementptr inbounds ptr, ptr %1890, i64 1
  %1892 = load ptr, ptr %1891, align 8, !tbaa !13
  %1893 = sext i16 %1889 to i64
  %1894 = getelementptr inbounds ptr, ptr %1892, i64 %1893
  %1895 = load ptr, ptr %1894, align 8, !tbaa !13
  %1896 = load i32, ptr %1895, align 4, !tbaa !18
  %1897 = load ptr, ptr %941, align 8, !tbaa !484
  %1898 = getelementptr inbounds ptr, ptr %1897, i64 1
  %1899 = load ptr, ptr %1898, align 8, !tbaa !13
  %1900 = sext i16 %1773 to i32
  %1901 = ashr i32 %1900, %42
  %1902 = sext i32 %1901 to i64
  %1903 = getelementptr inbounds ptr, ptr %1899, i64 %1902
  %1904 = load ptr, ptr %1903, align 8, !tbaa !13
  %1905 = load i32, ptr %1904, align 4, !tbaa !18
  %1906 = load i32, ptr %942, align 4, !tbaa !77
  %1907 = load i32, ptr %943, align 8, !tbaa !478
  %1908 = add nsw i32 %1907, -1
  %1909 = shl nuw i32 1, %1908
  %1910 = zext i32 %1031 to i64
  %1911 = zext i32 %1034 to i64
  %1912 = insertelement <4 x i32> poison, i32 %1896, i64 0
  %1913 = shufflevector <4 x i32> %1912, <4 x i32> poison, <4 x i32> zeroinitializer
  %1914 = insertelement <4 x i32> poison, i32 %1909, i64 0
  %1915 = shufflevector <4 x i32> %1914, <4 x i32> poison, <4 x i32> zeroinitializer
  %1916 = insertelement <4 x i32> poison, i32 %1907, i64 0
  %1917 = shufflevector <4 x i32> %1916, <4 x i32> poison, <4 x i32> zeroinitializer
  %1918 = insertelement <4 x i32> poison, i32 %1905, i64 0
  %1919 = shufflevector <4 x i32> %1918, <4 x i32> poison, <4 x i32> zeroinitializer
  %1920 = insertelement <4 x i32> poison, i32 %1906, i64 0
  %1921 = shufflevector <4 x i32> %1920, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1922

1922:                                             ; preds = %1922, %1888
  %1923 = phi i64 [ 0, %1888 ], [ %1935, %1922 ]
  %1924 = add nuw nsw i64 %1923, %1911
  %1925 = getelementptr inbounds [4 x [4 x i32]], ptr %4, i64 0, i64 %1923, i64 0
  %1926 = load <4 x i32>, ptr %1925, align 16, !tbaa !18
  %1927 = mul nsw <4 x i32> %1926, %1913
  %1928 = add nsw <4 x i32> %1915, %1927
  %1929 = ashr <4 x i32> %1928, %1917
  %1930 = add nsw <4 x i32> %1929, %1919
  %1931 = call <4 x i32> @llvm.smax.v4i32(<4 x i32> %1930, <4 x i32> zeroinitializer)
  %1932 = call <4 x i32> @llvm.smin.v4i32(<4 x i32> %1931, <4 x i32> %1921)
  %1933 = trunc <4 x i32> %1932 to <4 x i16>
  %1934 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1924, i64 %1910
  store <4 x i16> %1933, ptr %1934, align 2, !tbaa !40
  %1935 = add nuw nsw i64 %1923, 1
  %1936 = icmp eq i64 %1935, 4
  br i1 %1936, label %2077, label %1922, !llvm.loop !881

1937:                                             ; preds = %1937, %1867
  %1938 = phi i64 [ 0, %1867 ], [ %1944, %1937 ]
  %1939 = add nuw nsw i64 %1938, %1869
  %1940 = getelementptr inbounds [4 x [4 x i32]], ptr %4, i64 0, i64 %1938, i64 0
  %1941 = load <4 x i32>, ptr %1940, align 16, !tbaa !18
  %1942 = trunc <4 x i32> %1941 to <4 x i16>
  %1943 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1939, i64 %1868
  store <4 x i16> %1942, ptr %1943, align 2, !tbaa !40
  %1944 = add nuw nsw i64 %1938, 1
  %1945 = icmp eq i64 %1944, 4
  br i1 %1945, label %2077, label %1937, !llvm.loop !882

1946:                                             ; preds = %1861
  br i1 %1865, label %1950, label %1963

1947:                                             ; preds = %1758
  %1948 = load i32, ptr %939, align 8, !tbaa !477
  %1949 = icmp eq i32 %1948, 0
  br i1 %1949, label %1950, label %1957

1950:                                             ; preds = %1947, %1946
  %1951 = phi i32 [ %1728, %1947 ], [ %1776, %1946 ]
  %1952 = phi i16 [ %1729, %1947 ], [ %1775, %1946 ]
  %1953 = phi i16 [ %1730, %1947 ], [ %1774, %1946 ]
  %1954 = phi i16 [ %1731, %1947 ], [ %1773, %1946 ]
  %1955 = zext i32 %1031 to i64
  %1956 = zext i32 %1034 to i64
  br label %2063

1957:                                             ; preds = %1947
  %1958 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1959 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1958, i64 0, i32 24
  %1960 = load i32, ptr %1959, align 4, !tbaa !476
  %1961 = icmp eq i32 %1960, 2
  %1962 = select i1 %1961, i32 %214, i32 0
  br label %1972

1963:                                             ; preds = %1946
  %1964 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %1965 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1964, i64 0, i32 24
  %1966 = load i32, ptr %1965, align 4, !tbaa !476
  %1967 = icmp eq i32 %1966, 2
  %1968 = select i1 %1967, i32 %214, i32 0
  br i1 %1185, label %1969, label %1972

1969:                                             ; preds = %1963
  %1970 = icmp eq i32 %1777, 0
  %1971 = select i1 %1970, i16 0, i16 %1775
  br label %1972

1972:                                             ; preds = %1969, %1963, %1957
  %1973 = phi i32 [ %1968, %1963 ], [ %1968, %1969 ], [ %1962, %1957 ]
  %1974 = phi i32 [ %1966, %1963 ], [ %1966, %1969 ], [ %1960, %1957 ]
  %1975 = phi ptr [ %1964, %1963 ], [ %1964, %1969 ], [ %1958, %1957 ]
  %1976 = phi i16 [ %1773, %1963 ], [ %1773, %1969 ], [ %1731, %1957 ]
  %1977 = phi i16 [ %1774, %1963 ], [ %1774, %1969 ], [ %1730, %1957 ]
  %1978 = phi i32 [ %1776, %1963 ], [ %1776, %1969 ], [ %1728, %1957 ]
  %1979 = phi i16 [ %1775, %1963 ], [ %1971, %1969 ], [ %1729, %1957 ]
  %1980 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1975, i64 0, i32 23
  %1981 = load i32, ptr %1980, align 8, !tbaa !475
  %1982 = icmp eq i32 %1981, 0
  br i1 %1982, label %1985, label %1983

1983:                                             ; preds = %1972
  %1984 = load i32, ptr %16, align 4, !tbaa !137
  switch i32 %1984, label %1985 [
    i32 0, label %1991
    i32 3, label %1991
  ]

1985:                                             ; preds = %1983, %1972
  %1986 = icmp eq i32 %1974, 1
  br i1 %1986, label %1987, label %1995

1987:                                             ; preds = %1985
  %1988 = load i32, ptr %16, align 4, !tbaa !137
  %1989 = icmp eq i32 %1988, 1
  %1990 = select i1 %1989, i1 %41, i1 false
  br i1 %1990, label %1992, label %1995

1991:                                             ; preds = %1983, %1983
  br i1 %41, label %1992, label %1995

1992:                                             ; preds = %1991, %1987
  %1993 = ashr i16 %1977, 1
  %1994 = ashr i16 %1979, 1
  br label %1995

1995:                                             ; preds = %1992, %1991, %1987, %1985
  %1996 = phi i16 [ %1993, %1992 ], [ %1977, %1991 ], [ %1977, %1987 ], [ %1977, %1985 ]
  %1997 = phi i16 [ %1994, %1992 ], [ %1979, %1991 ], [ %1979, %1987 ], [ %1979, %1985 ]
  %1998 = load ptr, ptr %960, align 8, !tbaa !582
  %1999 = zext i32 %1973 to i64
  %2000 = getelementptr inbounds ptr, ptr %1998, i64 %1999
  %2001 = load ptr, ptr %2000, align 8, !tbaa !13
  %2002 = sext i16 %1996 to i64
  %2003 = getelementptr inbounds ptr, ptr %2001, i64 %2002
  %2004 = load ptr, ptr %2003, align 8, !tbaa !13
  %2005 = sext i16 %1997 to i64
  %2006 = getelementptr inbounds ptr, ptr %2004, i64 %2005
  %2007 = load ptr, ptr %2006, align 8, !tbaa !13
  %2008 = load i32, ptr %2007, align 4, !tbaa !18
  %2009 = add nuw nsw i32 %1973, 1
  %2010 = zext i32 %2009 to i64
  %2011 = getelementptr inbounds ptr, ptr %1998, i64 %2010
  %2012 = load ptr, ptr %2011, align 8, !tbaa !13
  %2013 = getelementptr inbounds ptr, ptr %2012, i64 %2002
  %2014 = load ptr, ptr %2013, align 8, !tbaa !13
  %2015 = getelementptr inbounds ptr, ptr %2014, i64 %2005
  %2016 = load ptr, ptr %2015, align 8, !tbaa !13
  %2017 = load i32, ptr %2016, align 4, !tbaa !18
  %2018 = load ptr, ptr %941, align 8, !tbaa !484
  %2019 = getelementptr inbounds ptr, ptr %2018, i64 %1999
  %2020 = load ptr, ptr %2019, align 8, !tbaa !13
  %2021 = getelementptr inbounds ptr, ptr %2020, i64 %2002
  %2022 = load ptr, ptr %2021, align 8, !tbaa !13
  %2023 = load i32, ptr %2022, align 4, !tbaa !18
  %2024 = getelementptr inbounds ptr, ptr %2018, i64 %2010
  %2025 = load ptr, ptr %2024, align 8, !tbaa !13
  %2026 = getelementptr inbounds ptr, ptr %2025, i64 %2005
  %2027 = load ptr, ptr %2026, align 8, !tbaa !13
  %2028 = load i32, ptr %2027, align 4, !tbaa !18
  %2029 = add i32 %2023, 1
  %2030 = add i32 %2029, %2028
  %2031 = ashr i32 %2030, 1
  %2032 = load i32, ptr %942, align 4, !tbaa !77
  %2033 = load i32, ptr %943, align 8, !tbaa !478
  %2034 = add i32 %2033, 1
  %2035 = shl nuw i32 1, %2033
  %2036 = zext i32 %1034 to i64
  %2037 = zext i32 %1031 to i64
  br label %2038

2038:                                             ; preds = %2060, %1995
  %2039 = phi i64 [ 0, %1995 ], [ %2061, %2060 ]
  %2040 = add nuw nsw i64 %2039, %2037
  br label %2041

2041:                                             ; preds = %2041, %2038
  %2042 = phi i64 [ 0, %2038 ], [ %2058, %2041 ]
  %2043 = getelementptr inbounds [4 x [4 x i32]], ptr %3, i64 0, i64 %2042, i64 %2039
  %2044 = load i32, ptr %2043, align 4, !tbaa !18
  %2045 = mul nsw i32 %2044, %2008
  %2046 = getelementptr inbounds [4 x [4 x i32]], ptr %4, i64 0, i64 %2042, i64 %2039
  %2047 = load i32, ptr %2046, align 4, !tbaa !18
  %2048 = mul nsw i32 %2047, %2017
  %2049 = add nsw i32 %2048, %2045
  %2050 = add nsw i32 %2049, %2035
  %2051 = ashr i32 %2050, %2034
  %2052 = add nsw i32 %2051, %2031
  %2053 = call i32 @llvm.smax.i32(i32 %2052, i32 0)
  %2054 = call i32 @llvm.smin.i32(i32 %2053, i32 %2032)
  %2055 = trunc i32 %2054 to i16
  %2056 = add nuw nsw i64 %2042, %2036
  %2057 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %2056, i64 %2040
  store i16 %2055, ptr %2057, align 2, !tbaa !40
  %2058 = add nuw nsw i64 %2042, 1
  %2059 = icmp eq i64 %2058, 4
  br i1 %2059, label %2060, label %2041, !llvm.loop !883

2060:                                             ; preds = %2041
  %2061 = add nuw nsw i64 %2039, 1
  %2062 = icmp eq i64 %2061, 4
  br i1 %2062, label %2077, label %2038, !llvm.loop !884

2063:                                             ; preds = %2063, %1950
  %2064 = phi i64 [ 0, %1950 ], [ %2075, %2063 ]
  %2065 = add nuw nsw i64 %2064, %1956
  %2066 = getelementptr inbounds [4 x [4 x i32]], ptr %3, i64 0, i64 %2064, i64 0
  %2067 = load <4 x i32>, ptr %2066, align 16, !tbaa !18
  %2068 = getelementptr inbounds [4 x [4 x i32]], ptr %4, i64 0, i64 %2064, i64 0
  %2069 = load <4 x i32>, ptr %2068, align 16, !tbaa !18
  %2070 = add <4 x i32> %2067, <i32 1, i32 1, i32 1, i32 1>
  %2071 = add <4 x i32> %2070, %2069
  %2072 = lshr <4 x i32> %2071, <i32 1, i32 1, i32 1, i32 1>
  %2073 = trunc <4 x i32> %2072 to <4 x i16>
  %2074 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %2065, i64 %1955
  store <4 x i16> %2073, ptr %2074, align 2, !tbaa !40
  %2075 = add nuw nsw i64 %2064, 1
  %2076 = icmp eq i64 %2075, 4
  br i1 %2076, label %2077, label %2063, !llvm.loop !885

2077:                                             ; preds = %2063, %2060, %1937, %1922, %1852, %1837, %1175, %1160, %1050, %1050
  %2078 = phi i16 [ %1024, %1050 ], [ %1024, %1050 ], [ %1774, %1852 ], [ %1774, %1837 ], [ %1774, %1937 ], [ %1774, %1922 ], [ %1953, %2063 ], [ %1977, %2060 ], [ %1067, %1175 ], [ %1067, %1160 ]
  %2079 = phi i16 [ %1023, %1050 ], [ %1023, %1050 ], [ %1773, %1852 ], [ %1773, %1837 ], [ %1773, %1937 ], [ %1773, %1922 ], [ %1954, %2063 ], [ %1976, %2060 ], [ %1023, %1175 ], [ %1023, %1160 ]
  %2080 = phi i16 [ %1022, %1050 ], [ %1022, %1050 ], [ %1774, %1852 ], [ %1806, %1837 ], [ %1774, %1937 ], [ %1774, %1922 ], [ %1953, %2063 ], [ %1996, %2060 ], [ %1022, %1175 ], [ %1022, %1160 ]
  %2081 = phi i16 [ %1021, %1050 ], [ %1021, %1050 ], [ %1775, %1852 ], [ %1775, %1837 ], [ %1775, %1937 ], [ %1889, %1922 ], [ %1952, %2063 ], [ %1997, %2060 ], [ %1021, %1175 ], [ %1021, %1160 ]
  %2082 = phi i32 [ %1020, %1050 ], [ %1020, %1050 ], [ 0, %1852 ], [ 0, %1837 ], [ 1, %1937 ], [ 1, %1922 ], [ %1951, %2063 ], [ %1978, %2060 ], [ %1020, %1175 ], [ %1020, %1160 ]
  br i1 %56, label %2083, label %2087

2083:                                             ; preds = %2077
  %2084 = load i32, ptr %57, align 8, !tbaa !195
  switch i32 %2084, label %2085 [
    i32 10, label %2086
    i32 14, label %2086
  ]

2085:                                             ; preds = %2083
  call void @itrans_sp(ptr noundef nonnull %0, i32 noundef %1031, i32 noundef %1034, i32 noundef %1028, i32 noundef %1030) #46
  br label %2101

2086:                                             ; preds = %2083, %2083
  call void @itrans(ptr noundef nonnull %0, i32 noundef %1031, i32 noundef %1034, i32 noundef %1028, i32 noundef %1030, i32 noundef 0) #46
  br label %2101

2087:                                             ; preds = %2077, %1047
  %2088 = phi i32 [ %2082, %2077 ], [ %1020, %1047 ]
  %2089 = phi i16 [ %2081, %2077 ], [ %1021, %1047 ]
  %2090 = phi i16 [ %2080, %2077 ], [ %1022, %1047 ]
  %2091 = phi i16 [ %2079, %2077 ], [ %1023, %1047 ]
  %2092 = phi i16 [ %2078, %2077 ], [ %1024, %1047 ]
  br i1 %45, label %2093, label %2126

2093:                                             ; preds = %2087
  %2094 = load i32, ptr %16, align 4, !tbaa !137
  %2095 = icmp eq i32 %2094, 3
  br i1 %2095, label %2096, label %2100

2096:                                             ; preds = %2093
  %2097 = load i32, ptr %57, align 8, !tbaa !195
  %2098 = icmp eq i32 %2097, 10
  br i1 %2098, label %2100, label %2099

2099:                                             ; preds = %2096
  call void @itrans_sp(ptr noundef nonnull %0, i32 noundef %1031, i32 noundef %1034, i32 noundef %1028, i32 noundef %1030) #46
  br label %2102

2100:                                             ; preds = %2096, %2093
  call void @itrans(ptr noundef nonnull %0, i32 noundef %1031, i32 noundef %1034, i32 noundef %1028, i32 noundef %1030, i32 noundef 0) #46
  br label %2102

2101:                                             ; preds = %2086, %2085
  br i1 %45, label %2102, label %2126

2102:                                             ; preds = %2101, %2100, %2099
  %2103 = phi i16 [ %2078, %2101 ], [ %2092, %2100 ], [ %2092, %2099 ]
  %2104 = phi i16 [ %2079, %2101 ], [ %2091, %2100 ], [ %2091, %2099 ]
  %2105 = phi i16 [ %2080, %2101 ], [ %2090, %2100 ], [ %2090, %2099 ]
  %2106 = phi i16 [ %2081, %2101 ], [ %2089, %2100 ], [ %2089, %2099 ]
  %2107 = phi i32 [ %2082, %2101 ], [ %2088, %2100 ], [ %2088, %2099 ]
  %2108 = shl nsw i32 %1036, 2
  %2109 = shl nsw i32 %1033, 2
  %2110 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %2111 = getelementptr inbounds %struct.storable_picture, ptr %2110, i64 0, i32 32
  %2112 = load ptr, ptr %2111, align 8, !tbaa !47
  %2113 = sext i32 %2109 to i64
  %2114 = sext i32 %2108 to i64
  br label %2115

2115:                                             ; preds = %2115, %2102
  %2116 = phi i64 [ 0, %2102 ], [ %2124, %2115 ]
  %2117 = add nuw nsw i64 %2116, %2114
  %2118 = getelementptr inbounds ptr, ptr %2112, i64 %2117
  %2119 = load ptr, ptr %2118, align 8, !tbaa !13
  %2120 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %2116, i64 0
  %2121 = load <4 x i32>, ptr %2120, align 4, !tbaa !18
  %2122 = trunc <4 x i32> %2121 to <4 x i16>
  %2123 = getelementptr inbounds i16, ptr %2119, i64 %2113
  store <4 x i16> %2122, ptr %2123, align 2, !tbaa !40
  %2124 = add nuw nsw i64 %2116, 1
  %2125 = icmp eq i64 %2124, 4
  br i1 %2125, label %2126, label %2115, !llvm.loop !886

2126:                                             ; preds = %2115, %2101, %2087
  %2127 = phi i32 [ %2088, %2087 ], [ %2082, %2101 ], [ %2107, %2115 ]
  %2128 = phi i16 [ %2089, %2087 ], [ %2081, %2101 ], [ %2106, %2115 ]
  %2129 = phi i16 [ %2090, %2087 ], [ %2080, %2101 ], [ %2105, %2115 ]
  %2130 = phi i16 [ %2091, %2087 ], [ %2079, %2101 ], [ %2104, %2115 ]
  %2131 = phi i16 [ %2092, %2087 ], [ %2078, %2101 ], [ %2103, %2115 ]
  %2132 = add nuw nsw i64 %1019, 1
  %2133 = icmp eq i64 %2132, %965
  br i1 %2133, label %2134, label %1018, !llvm.loop !887

2134:                                             ; preds = %2126
  %.lcssa19 = phi i32 [ %2127, %2126 ]
  %.lcssa18 = phi i16 [ %2128, %2126 ]
  %.lcssa17 = phi i16 [ %2129, %2126 ]
  %.lcssa16 = phi i16 [ %2130, %2126 ]
  %.lcssa15 = phi i16 [ %2131, %2126 ]
  br i1 %45, label %2168, label %2135

2135:                                             ; preds = %2134
  %2136 = trunc i64 %964 to i32
  %2137 = shl i32 %2136, 3
  %2138 = and i32 %2137, 8
  %2139 = trunc i64 %964 to i32
  %2140 = shl i32 %2139, 2
  %2141 = and i32 %2140, 2147483640
  call void @itrans8x8(ptr noundef nonnull %0, i32 noundef %2138, i32 noundef %2141) #46
  %2142 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %2143 = getelementptr inbounds %struct.storable_picture, ptr %2142, i64 0, i32 32
  %2144 = load ptr, ptr %2143, align 8, !tbaa !47
  %2145 = load i32, ptr %961, align 8, !tbaa !722
  %2146 = load i32, ptr %962, align 4, !tbaa !723
  %2147 = sext i32 %2146 to i64
  %2148 = sext i32 %2145 to i64
  %2149 = zext i32 %976 to i64
  br label %2150

2150:                                             ; preds = %2165, %2135
  %2151 = phi i64 [ %973, %2135 ], [ %2166, %2165 ]
  %2152 = add nsw i64 %2151, %2148
  %2153 = getelementptr inbounds ptr, ptr %2144, i64 %2152
  %2154 = load ptr, ptr %2153, align 8, !tbaa !13
  br label %2155

2155:                                             ; preds = %2155, %2150
  %2156 = phi i64 [ 0, %2150 ], [ %2163, %2155 ]
  %2157 = add i64 %2156, %979
  %2158 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %2151, i64 %2157
  %2159 = load <4 x i32>, ptr %2158, align 4, !tbaa !18
  %2160 = trunc <4 x i32> %2159 to <4 x i16>
  %2161 = add nsw i64 %2157, %2147
  %2162 = getelementptr inbounds i16, ptr %2154, i64 %2161
  store <4 x i16> %2160, ptr %2162, align 2, !tbaa !40
  %2163 = add nuw i64 %2156, 4
  %2164 = icmp eq i64 %2163, 8
  br i1 %2164, label %2165, label %2155, !llvm.loop !888

2165:                                             ; preds = %2155
  %2166 = add nuw nsw i64 %2151, 1
  %2167 = icmp eq i64 %2166, %2149
  br i1 %2167, label %2168, label %2150, !llvm.loop !889

2168:                                             ; preds = %2165, %2134, %1015
  %2169 = phi i16 [ %.lcssa15, %2134 ], [ %972, %1015 ], [ %.lcssa15, %2165 ]
  %2170 = phi i16 [ %.lcssa16, %2134 ], [ %971, %1015 ], [ %.lcssa16, %2165 ]
  %2171 = phi i16 [ %.lcssa17, %2134 ], [ %970, %1015 ], [ %.lcssa17, %2165 ]
  %2172 = phi i16 [ %.lcssa18, %2134 ], [ %969, %1015 ], [ %.lcssa18, %2165 ]
  %2173 = phi i32 [ %.lcssa19, %2134 ], [ %968, %1015 ], [ %.lcssa19, %2165 ]
  %2174 = add nuw nsw i64 %964, 1
  %2175 = add nuw nsw i32 %967, 1
  %2176 = add nuw nsw i64 %966, 4
  %2177 = add nuw nsw i64 %965, 4
  %2178 = icmp eq i64 %2174, 4
  br i1 %2178, label %2179, label %963, !llvm.loop !890

2179:                                             ; preds = %2168
  %.lcssa23 = phi i16 [ %2169, %2168 ]
  %.lcssa22 = phi i16 [ %2170, %2168 ]
  %.lcssa21 = phi i16 [ %2171, %2168 ]
  %.lcssa20 = phi i16 [ %2172, %2168 ]
  %2180 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %2181 = getelementptr inbounds %struct.storable_picture, ptr %2180, i64 0, i32 50
  %2182 = load i32, ptr %2181, align 4, !tbaa !83
  %2183 = icmp eq i32 %2182, 0
  br i1 %2183, label %3133, label %2184

2184:                                             ; preds = %2179
  %2185 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 115
  %2186 = load i32, ptr %2185, align 4, !tbaa !85
  %2187 = sdiv i32 64, %2186
  %2188 = add nsw i32 %2187, -1
  %2189 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 116
  %2190 = load i32, ptr %2189, align 8, !tbaa !86
  %2191 = sdiv i32 64, %2190
  %2192 = add nsw i32 %2191, -1
  %2193 = mul nsw i32 %2191, %2187
  %2194 = ashr i32 %2193, 1
  %2195 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 113
  %2196 = sext i32 %49 to i64
  %2197 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 21
  %2198 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 23
  %2199 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 120, i64 1
  %2200 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 120, i64 1, i64 1
  %2201 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 14
  %2202 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 108
  %2203 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 81
  %2204 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 76
  br label %2205

2205:                                             ; preds = %3132, %2184
  %2206 = phi i1 [ true, %2184 ], [ false, %3132 ]
  %2207 = phi i64 [ 0, %2184 ], [ 1, %3132 ]
  %2208 = phi i32 [ 0, %2184 ], [ %3093, %3132 ]
  %2209 = phi i32 [ 0, %2184 ], [ %3092, %3132 ]
  %2210 = phi i16 [ %.lcssa20, %2184 ], [ %3091, %3132 ]
  %2211 = phi i16 [ %.lcssa21, %2184 ], [ %3090, %3132 ]
  %2212 = phi i16 [ %.lcssa22, %2184 ], [ %3089, %3132 ]
  %2213 = phi i16 [ %.lcssa23, %2184 ], [ %3088, %3132 ]
  %2214 = load i32, ptr %2195, align 4, !tbaa !93
  %2215 = ashr i32 %2214, 1
  %2216 = trunc i64 %2207 to i32
  %2217 = mul nuw nsw i32 %2215, %2216
  %2218 = load i32, ptr %57, align 8, !tbaa !195
  switch i32 %2218, label %2221 [
    i32 9, label %2219
    i32 10, label %2219
    i32 14, label %2219
    i32 13, label %2219
    i32 12, label %2219
  ]

2219:                                             ; preds = %2205, %2205, %2205, %2205, %2205
  call void @intrapred_chroma(ptr noundef nonnull %0, i32 noundef %2216) #46
  %2220 = load i32, ptr %2195, align 4, !tbaa !93
  br label %2221

2221:                                             ; preds = %2219, %2205
  %2222 = phi i32 [ %2220, %2219 ], [ %2214, %2205 ]
  %2223 = phi i1 [ true, %2219 ], [ false, %2205 ]
  %2224 = icmp sgt i32 %2222, 1
  br i1 %2224, label %2225, label %3087

2225:                                             ; preds = %2221
  %2226 = add nuw nsw i64 %2207, 1
  %2227 = sext i32 %2217 to i64
  br label %2228

2228:                                             ; preds = %3081, %2225
  %2229 = phi i64 [ 0, %2225 ], [ %3082, %3081 ]
  %2230 = phi i32 [ %2208, %2225 ], [ %.lcssa7, %3081 ]
  %2231 = phi i32 [ %2209, %2225 ], [ %.lcssa8, %3081 ]
  %2232 = phi i16 [ %2210, %2225 ], [ %.lcssa9, %3081 ]
  %2233 = phi i16 [ %2211, %2225 ], [ %.lcssa10, %3081 ]
  %2234 = phi i16 [ %2212, %2225 ], [ %.lcssa11, %3081 ]
  %2235 = phi i16 [ %2213, %2225 ], [ %.lcssa12, %3081 ]
  %2236 = add nsw i64 %2229, %2227
  br label %2237

2237:                                             ; preds = %3078, %2228
  %2238 = phi i64 [ 0, %2228 ], [ %3079, %3078 ]
  %2239 = phi i32 [ %2230, %2228 ], [ %3052, %3078 ]
  %2240 = phi i32 [ %2231, %2228 ], [ %3051, %3078 ]
  %2241 = phi i16 [ %2232, %2228 ], [ %3050, %3078 ]
  %2242 = phi i16 [ %2233, %2228 ], [ %3049, %3078 ]
  %2243 = phi i16 [ %2234, %2228 ], [ %3048, %3078 ]
  %2244 = phi i16 [ %2235, %2228 ], [ %3047, %3078 ]
  %2245 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %2196, i64 %2229, i64 %2238
  %2246 = load i8, ptr %2245, align 1, !tbaa !14
  %2247 = zext i8 %2246 to i32
  %2248 = load i32, ptr %2197, align 8, !tbaa !302
  %2249 = add nsw i32 %2248, %2247
  %2250 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %2196, i64 %2229, i64 %2238
  %2251 = load i8, ptr %2250, align 1, !tbaa !14
  %2252 = zext i8 %2251 to i32
  %2253 = load i32, ptr %2198, align 8, !tbaa !304
  %2254 = add nsw i32 %2253, %2252
  %2255 = getelementptr inbounds [3 x [4 x [4 x i32]]], ptr @block8x8_idx, i64 0, i64 %2196, i64 %2229, i64 %2238
  %2256 = load i32, ptr %2255, align 4, !tbaa !18
  %2257 = sext i32 %2256 to i64
  %2258 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 13, i64 %2257
  %2259 = load i8, ptr %2258, align 1, !tbaa !14
  %2260 = getelementptr inbounds %struct.macroblock, ptr %12, i64 %15, i32 14, i64 %2257
  %2261 = load i8, ptr %2260, align 1, !tbaa !14
  %2262 = sext i8 %2261 to i32
  br i1 %2223, label %3046, label %2263

2263:                                             ; preds = %2237
  %2264 = icmp eq i8 %2261, 2
  %2265 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %2266 = getelementptr inbounds %struct.storable_picture, ptr %2265, i64 0, i32 39
  %2267 = load ptr, ptr %2266, align 8, !tbaa !371
  br i1 %2264, label %2457, label %2268

2268:                                             ; preds = %2263
  %2269 = sext i8 %2261 to i64
  %2270 = getelementptr inbounds ptr, ptr %2267, i64 %2269
  %2271 = load ptr, ptr %2270, align 8, !tbaa !13
  %2272 = add nsw i32 %214, %2262
  %2273 = sext i32 %2272 to i64
  %2274 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %2273
  %2275 = load ptr, ptr %2274, align 8, !tbaa !13
  %2276 = load i32, ptr %2200, align 4, !tbaa !18
  %2277 = load i32, ptr %2199, align 4, !tbaa !18
  %2278 = getelementptr inbounds %struct.storable_picture, ptr %2265, i64 0, i32 36
  %2279 = load ptr, ptr %2278, align 8, !tbaa !197
  %2280 = getelementptr inbounds ptr, ptr %2279, i64 %2269
  %2281 = load ptr, ptr %2280, align 8, !tbaa !13
  %2282 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %2283 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %2282, i64 0, i32 8
  %2284 = load i32, ptr %2283, align 4, !tbaa !480
  %2285 = icmp eq i32 %2284, 1
  %2286 = load i32, ptr %2201, align 4, !tbaa !891
  %2287 = load i32, ptr %939, align 8, !tbaa !477
  %2288 = icmp eq i32 %2287, 0
  %2289 = ashr i32 %2248, 1
  %2290 = add nsw i32 %2289, %2247
  %2291 = zext i8 %2251 to i64
  %2292 = zext i8 %2246 to i64
  br label %2293

2293:                                             ; preds = %2454, %2268
  %2294 = phi i64 [ 0, %2268 ], [ %2455, %2454 ]
  %2295 = trunc i64 %2294 to i32
  %2296 = add nsw i32 %2249, %2295
  %2297 = sdiv i32 %2296, %2276
  br i1 %41, label %2298, label %2309

2298:                                             ; preds = %2293
  br i1 %938, label %2299, label %2302

2299:                                             ; preds = %2298
  %2300 = trunc i64 %2294 to i32
  %2301 = add i32 %2290, %2300
  br label %2309

2302:                                             ; preds = %2298
  %2303 = load i32, ptr %2189, align 8, !tbaa !86
  %2304 = sub nsw i32 %2248, %2303
  %2305 = ashr i32 %2304, 1
  %2306 = add nuw nsw i64 %2294, %2292
  %2307 = trunc i64 %2306 to i32
  %2308 = add i32 %2305, %2307
  br label %2309

2309:                                             ; preds = %2302, %2299, %2293
  %2310 = phi i32 [ %2301, %2299 ], [ %2308, %2302 ], [ %2296, %2293 ]
  %2311 = mul nsw i32 %2310, %2191
  %2312 = sext i32 %2297 to i64
  %2313 = getelementptr inbounds ptr, ptr %2281, i64 %2312
  %2314 = load ptr, ptr %2313, align 8, !tbaa !13
  %2315 = getelementptr inbounds ptr, ptr %2271, i64 %2312
  %2316 = load ptr, ptr %2315, align 8, !tbaa !13
  %2317 = load ptr, ptr @active_pps, align 8
  %2318 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %2317, i64 0, i32 23
  %2319 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %2317, i64 0, i32 24
  %2320 = add nuw nsw i64 %2294, %2292
  br label %2321

2321:                                             ; preds = %2447, %2309
  %2322 = phi i64 [ 0, %2309 ], [ %2452, %2447 ]
  %2323 = trunc i64 %2322 to i32
  %2324 = add nsw i32 %2254, %2323
  %2325 = sdiv i32 %2324, %2277
  %2326 = sext i32 %2325 to i64
  %2327 = getelementptr inbounds i8, ptr %2314, i64 %2326
  %2328 = load i8, ptr %2327, align 1, !tbaa !14
  %2329 = sext i8 %2328 to i16
  %2330 = mul nsw i32 %2324, %2187
  %2331 = getelementptr inbounds ptr, ptr %2316, i64 %2326
  %2332 = load ptr, ptr %2331, align 8, !tbaa !13
  %2333 = load i16, ptr %2332, align 2, !tbaa !40
  %2334 = sext i16 %2333 to i32
  %2335 = add nsw i32 %2330, %2334
  %2336 = getelementptr inbounds i16, ptr %2332, i64 1
  %2337 = load i16, ptr %2336, align 2, !tbaa !40
  %2338 = sext i16 %2337 to i32
  %2339 = add nsw i32 %2311, %2338
  br i1 %2285, label %2340, label %2347

2340:                                             ; preds = %2321
  %2341 = sext i8 %2328 to i64
  %2342 = getelementptr inbounds ptr, ptr %2275, i64 %2341
  %2343 = load ptr, ptr %2342, align 8, !tbaa !13
  %2344 = getelementptr inbounds %struct.storable_picture, ptr %2343, i64 0, i32 27
  %2345 = load i32, ptr %2344, align 8, !tbaa !867
  %2346 = add nsw i32 %2345, %2339
  br label %2347

2347:                                             ; preds = %2340, %2321
  %2348 = phi i32 [ %2346, %2340 ], [ %2339, %2321 ]
  %2349 = sdiv i32 %2335, %2187
  %2350 = call i32 @llvm.smax.i32(i32 %2349, i32 0)
  %2351 = call i32 @llvm.smin.i32(i32 %2350, i32 %2286)
  %2352 = sdiv i32 %2348, %2191
  %2353 = call i32 @llvm.smax.i32(i32 %2352, i32 0)
  %2354 = call i32 @llvm.smin.i32(i32 %2353, i32 %213)
  %2355 = add nsw i32 %2335, %2188
  %2356 = sdiv i32 %2355, %2187
  %2357 = call i32 @llvm.smax.i32(i32 %2356, i32 0)
  %2358 = call i32 @llvm.smin.i32(i32 %2357, i32 %2286)
  %2359 = add nsw i32 %2348, %2192
  %2360 = sdiv i32 %2359, %2191
  %2361 = call i32 @llvm.smax.i32(i32 %2360, i32 0)
  %2362 = call i32 @llvm.smin.i32(i32 %2361, i32 %213)
  %2363 = and i32 %2335, %2188
  %2364 = and i32 %2348, %2192
  %2365 = sub nsw i32 %2187, %2363
  %2366 = sub nsw i32 %2191, %2364
  %2367 = sext i8 %2328 to i64
  %2368 = getelementptr inbounds ptr, ptr %2275, i64 %2367
  %2369 = load ptr, ptr %2368, align 8, !tbaa !13
  %2370 = getelementptr inbounds %struct.storable_picture, ptr %2369, i64 0, i32 33
  %2371 = load ptr, ptr %2370, align 8, !tbaa !82
  %2372 = getelementptr inbounds ptr, ptr %2371, i64 %2207
  %2373 = load ptr, ptr %2372, align 8, !tbaa !13
  %2374 = sext i32 %2354 to i64
  %2375 = getelementptr inbounds ptr, ptr %2373, i64 %2374
  %2376 = load ptr, ptr %2375, align 8, !tbaa !13
  %2377 = sext i32 %2351 to i64
  %2378 = getelementptr inbounds i16, ptr %2376, i64 %2377
  %2379 = load i16, ptr %2378, align 2, !tbaa !40
  %2380 = zext i16 %2379 to i32
  %2381 = mul i32 %2365, %2380
  %2382 = sext i32 %2358 to i64
  %2383 = getelementptr inbounds i16, ptr %2376, i64 %2382
  %2384 = load i16, ptr %2383, align 2, !tbaa !40
  %2385 = zext i16 %2384 to i32
  %2386 = mul i32 %2363, %2385
  %2387 = sext i32 %2362 to i64
  %2388 = getelementptr inbounds ptr, ptr %2373, i64 %2387
  %2389 = load ptr, ptr %2388, align 8, !tbaa !13
  %2390 = getelementptr inbounds i16, ptr %2389, i64 %2377
  %2391 = load i16, ptr %2390, align 2, !tbaa !40
  %2392 = zext i16 %2391 to i32
  %2393 = mul i32 %2365, %2392
  %2394 = getelementptr inbounds i16, ptr %2389, i64 %2382
  %2395 = load i16, ptr %2394, align 2, !tbaa !40
  %2396 = zext i16 %2395 to i32
  %2397 = mul i32 %2363, %2396
  %2398 = add i32 %2397, %2393
  %2399 = mul i32 %2398, %2364
  %2400 = add i32 %2386, %2381
  %2401 = mul i32 %2400, %2366
  %2402 = add i32 %2401, %2194
  %2403 = add i32 %2402, %2399
  %2404 = sdiv i32 %2403, %2193
  br i1 %2288, label %2447, label %2405

2405:                                             ; preds = %2347
  %2406 = load i32, ptr %2318, align 8, !tbaa !475
  %2407 = icmp eq i32 %2406, 0
  br i1 %2407, label %2410, label %2408

2408:                                             ; preds = %2405
  %2409 = load i32, ptr %16, align 4, !tbaa !137
  switch i32 %2409, label %2410 [
    i32 0, label %2417
    i32 3, label %2417
  ]

2410:                                             ; preds = %2408, %2405
  %2411 = load i32, ptr %2319, align 4, !tbaa !476
  %2412 = icmp eq i32 %2411, 1
  br i1 %2412, label %2413, label %2421

2413:                                             ; preds = %2410
  %2414 = load i32, ptr %16, align 4, !tbaa !137
  %2415 = icmp eq i32 %2414, 1
  %2416 = select i1 %2415, i1 %41, i1 false
  br i1 %2416, label %2418, label %2421

2417:                                             ; preds = %2408, %2408
  br i1 %41, label %2418, label %2421

2418:                                             ; preds = %2417, %2413
  %2419 = ashr i8 %2328, 1
  %2420 = sext i8 %2419 to i16
  br label %2421

2421:                                             ; preds = %2418, %2417, %2413, %2410
  %2422 = phi i16 [ %2420, %2418 ], [ %2329, %2417 ], [ %2329, %2413 ], [ %2329, %2410 ]
  %2423 = load i32, ptr %2202, align 8, !tbaa !103
  %2424 = load ptr, ptr %940, align 8, !tbaa !483
  %2425 = getelementptr inbounds ptr, ptr %2424, i64 %2269
  %2426 = load ptr, ptr %2425, align 8, !tbaa !13
  %2427 = sext i16 %2422 to i64
  %2428 = getelementptr inbounds ptr, ptr %2426, i64 %2427
  %2429 = load ptr, ptr %2428, align 8, !tbaa !13
  %2430 = getelementptr inbounds i32, ptr %2429, i64 %2226
  %2431 = load i32, ptr %2430, align 4, !tbaa !18
  %2432 = mul nsw i32 %2431, %2404
  %2433 = load i32, ptr %2203, align 4, !tbaa !482
  %2434 = add nsw i32 %2432, %2433
  %2435 = load i32, ptr %2204, align 4, !tbaa !481
  %2436 = ashr i32 %2434, %2435
  %2437 = load ptr, ptr %941, align 8, !tbaa !484
  %2438 = getelementptr inbounds ptr, ptr %2437, i64 %2269
  %2439 = load ptr, ptr %2438, align 8, !tbaa !13
  %2440 = getelementptr inbounds ptr, ptr %2439, i64 %2427
  %2441 = load ptr, ptr %2440, align 8, !tbaa !13
  %2442 = getelementptr inbounds i32, ptr %2441, i64 %2226
  %2443 = load i32, ptr %2442, align 4, !tbaa !18
  %2444 = add nsw i32 %2443, %2436
  %2445 = call i32 @llvm.smax.i32(i32 %2444, i32 0)
  %2446 = call i32 @llvm.smin.i32(i32 %2445, i32 %2423)
  br label %2447

2447:                                             ; preds = %2421, %2347
  %2448 = phi i32 [ %2446, %2421 ], [ %2404, %2347 ]
  %2449 = trunc i32 %2448 to i16
  %2450 = add nuw nsw i64 %2322, %2291
  %2451 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %2320, i64 %2450
  store i16 %2449, ptr %2451, align 2, !tbaa !40
  %2452 = add nuw nsw i64 %2322, 1
  %2453 = icmp eq i64 %2452, 4
  br i1 %2453, label %2454, label %2321, !llvm.loop !892

2454:                                             ; preds = %2447
  %.lcssa = phi i16 [ %2329, %2447 ]
  %2455 = add nuw nsw i64 %2294, 1
  %2456 = icmp eq i64 %2455, 4
  br i1 %2456, label %3046, label %2293, !llvm.loop !893

2457:                                             ; preds = %2263
  %2458 = load ptr, ptr %2267, align 8, !tbaa !13
  %2459 = getelementptr inbounds ptr, ptr %2267, i64 1
  %2460 = load ptr, ptr %2459, align 8, !tbaa !13
  %2461 = load i32, ptr %2200, align 4, !tbaa !18
  %2462 = load i32, ptr %2199, align 4, !tbaa !18
  %2463 = icmp eq i8 %2259, 0
  %2464 = load i32, ptr %939, align 8, !tbaa !477
  %2465 = icmp eq i32 %2464, 0
  %2466 = getelementptr inbounds %struct.storable_picture, ptr %2265, i64 0, i32 36
  %2467 = ashr i32 %2248, 1
  %2468 = add nsw i32 %2467, %2247
  %2469 = zext i8 %2251 to i64
  %2470 = zext i8 %2246 to i64
  br label %2471

2471:                                             ; preds = %3043, %2457
  %2472 = phi i64 [ 0, %2457 ], [ %3044, %3043 ]
  %2473 = phi i32 [ %2239, %2457 ], [ %.lcssa1, %3043 ]
  %2474 = phi i32 [ %2240, %2457 ], [ %.lcssa2, %3043 ]
  %2475 = phi i16 [ %2241, %2457 ], [ %.lcssa5, %3043 ]
  %2476 = phi i16 [ %2242, %2457 ], [ %.lcssa6, %3043 ]
  %2477 = phi i16 [ %2243, %2457 ], [ %.lcssa3, %3043 ]
  %2478 = phi i16 [ %2244, %2457 ], [ %.lcssa4, %3043 ]
  %2479 = trunc i64 %2472 to i32
  %2480 = add nsw i32 %2249, %2479
  %2481 = sdiv i32 %2480, %2461
  br i1 %41, label %2482, label %2493

2482:                                             ; preds = %2471
  br i1 %938, label %2483, label %2486

2483:                                             ; preds = %2482
  %2484 = trunc i64 %2472 to i32
  %2485 = add i32 %2468, %2484
  br label %2493

2486:                                             ; preds = %2482
  %2487 = load i32, ptr %2189, align 8, !tbaa !86
  %2488 = sub nsw i32 %2248, %2487
  %2489 = ashr i32 %2488, 1
  %2490 = add nuw nsw i64 %2472, %2470
  %2491 = trunc i64 %2490 to i32
  %2492 = add i32 %2489, %2491
  br label %2493

2493:                                             ; preds = %2486, %2483, %2471
  %2494 = phi i32 [ %2485, %2483 ], [ %2492, %2486 ], [ %2480, %2471 ]
  %2495 = mul nsw i32 %2494, %2191
  %2496 = and i32 %2481, -2
  %2497 = sext i32 %2496 to i64
  %2498 = sext i32 %2481 to i64
  %2499 = getelementptr inbounds ptr, ptr %2458, i64 %2498
  %2500 = load ptr, ptr @active_sps, align 8
  %2501 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %2500, i64 0, i32 8
  %2502 = getelementptr inbounds ptr, ptr %2460, i64 %2498
  %2503 = load ptr, ptr @active_pps, align 8
  %2504 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %2503, i64 0, i32 23
  %2505 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %2503, i64 0, i32 24
  %2506 = add nuw nsw i64 %2472, %2470
  br label %2507

2507:                                             ; preds = %3034, %2493
  %2508 = phi i64 [ 0, %2493 ], [ %3041, %3034 ]
  %2509 = phi i32 [ %2473, %2493 ], [ %2887, %3034 ]
  %2510 = phi i32 [ %2474, %2493 ], [ %2886, %3034 ]
  %2511 = phi i16 [ %2475, %2493 ], [ %3037, %3034 ]
  %2512 = phi i16 [ %2476, %2493 ], [ %3036, %3034 ]
  %2513 = phi i16 [ %2477, %2493 ], [ %2882, %3034 ]
  %2514 = phi i16 [ %2478, %2493 ], [ %2881, %3034 ]
  %2515 = trunc i64 %2508 to i32
  %2516 = add nsw i32 %2254, %2515
  %2517 = sdiv i32 %2516, %2462
  br i1 %2463, label %2521, label %2518

2518:                                             ; preds = %2507
  %2519 = load ptr, ptr %2466, align 8, !tbaa !197
  %2520 = load i32, ptr %2501, align 4, !tbaa !480
  br label %2705

2521:                                             ; preds = %2507
  %2522 = load i32, ptr %944, align 8, !tbaa !465
  %2523 = icmp eq i32 %2522, 0
  %2524 = load ptr, ptr %2466, align 8, !tbaa !197
  %2525 = load i32, ptr %2501, align 4, !tbaa !480
  br i1 %2523, label %2705, label %2526

2526:                                             ; preds = %2521
  %2527 = load ptr, ptr %2524, align 8, !tbaa !13
  %2528 = getelementptr inbounds ptr, ptr %2527, i64 %2497
  %2529 = load ptr, ptr %2528, align 8, !tbaa !13
  %2530 = and i32 %2517, -2
  %2531 = sext i32 %2530 to i64
  %2532 = getelementptr inbounds i8, ptr %2529, i64 %2531
  %2533 = load i8, ptr %2532, align 1, !tbaa !14
  %2534 = icmp eq i8 %2533, -1
  %2535 = sext i8 %2533 to i16
  %2536 = select i1 %2534, i16 %2514, i16 %2535
  %2537 = select i1 %2534, i16 %2512, i16 %2535
  %2538 = getelementptr inbounds ptr, ptr %2524, i64 1
  %2539 = load ptr, ptr %2538, align 8, !tbaa !13
  %2540 = getelementptr inbounds ptr, ptr %2539, i64 %2497
  %2541 = load ptr, ptr %2540, align 8, !tbaa !13
  %2542 = getelementptr inbounds i8, ptr %2541, i64 %2531
  %2543 = load i8, ptr %2542, align 1, !tbaa !14
  %2544 = icmp ne i8 %2543, -1
  %2545 = sext i8 %2543 to i16
  %2546 = select i1 %2544, i16 %2545, i16 %2513
  %2547 = select i1 %2544, i16 %2545, i16 %2511
  %2548 = select i1 %2544, i1 %2534, i1 false
  %2549 = mul nsw i32 %2516, %2187
  br i1 %2548, label %2550, label %2552

2550:                                             ; preds = %2526
  %2551 = sext i32 %2517 to i64
  br label %2629

2552:                                             ; preds = %2526
  %2553 = load ptr, ptr %2499, align 8, !tbaa !13
  %2554 = sext i32 %2517 to i64
  %2555 = getelementptr inbounds ptr, ptr %2553, i64 %2554
  %2556 = load ptr, ptr %2555, align 8, !tbaa !13
  %2557 = load i16, ptr %2556, align 2, !tbaa !40
  %2558 = sext i16 %2557 to i32
  %2559 = add nsw i32 %2549, %2558
  %2560 = getelementptr inbounds i16, ptr %2556, i64 1
  %2561 = load i16, ptr %2560, align 2, !tbaa !40
  %2562 = sext i16 %2561 to i32
  %2563 = add nsw i32 %2495, %2562
  %2564 = icmp eq i32 %2525, 1
  %2565 = load ptr, ptr %959, align 8, !tbaa !13
  %2566 = sext i16 %2536 to i64
  %2567 = getelementptr inbounds ptr, ptr %2565, i64 %2566
  %2568 = load ptr, ptr %2567, align 8, !tbaa !13
  br i1 %2564, label %2569, label %2573

2569:                                             ; preds = %2552
  %2570 = getelementptr inbounds %struct.storable_picture, ptr %2568, i64 0, i32 27
  %2571 = load i32, ptr %2570, align 8, !tbaa !867
  %2572 = add nsw i32 %2571, %2563
  br label %2573

2573:                                             ; preds = %2569, %2552
  %2574 = phi i32 [ %2572, %2569 ], [ %2563, %2552 ]
  %2575 = load i32, ptr %2201, align 4, !tbaa !891
  %2576 = sdiv i32 %2559, %2187
  %2577 = call i32 @llvm.smax.i32(i32 %2576, i32 0)
  %2578 = call i32 @llvm.smin.i32(i32 %2577, i32 %2575)
  %2579 = sdiv i32 %2574, %2191
  %2580 = call i32 @llvm.smax.i32(i32 %2579, i32 0)
  %2581 = call i32 @llvm.smin.i32(i32 %2580, i32 %213)
  %2582 = add nsw i32 %2559, %2188
  %2583 = sdiv i32 %2582, %2187
  %2584 = call i32 @llvm.smax.i32(i32 %2583, i32 0)
  %2585 = call i32 @llvm.smin.i32(i32 %2584, i32 %2575)
  %2586 = add nsw i32 %2574, %2192
  %2587 = sdiv i32 %2586, %2191
  %2588 = call i32 @llvm.smax.i32(i32 %2587, i32 0)
  %2589 = call i32 @llvm.smin.i32(i32 %2588, i32 %213)
  %2590 = and i32 %2559, %2188
  %2591 = and i32 %2574, %2192
  %2592 = sub nsw i32 %2187, %2590
  %2593 = sub nsw i32 %2191, %2591
  %2594 = getelementptr inbounds %struct.storable_picture, ptr %2568, i64 0, i32 33
  %2595 = load ptr, ptr %2594, align 8, !tbaa !82
  %2596 = getelementptr inbounds ptr, ptr %2595, i64 %2207
  %2597 = load ptr, ptr %2596, align 8, !tbaa !13
  %2598 = sext i32 %2581 to i64
  %2599 = getelementptr inbounds ptr, ptr %2597, i64 %2598
  %2600 = load ptr, ptr %2599, align 8, !tbaa !13
  %2601 = sext i32 %2578 to i64
  %2602 = getelementptr inbounds i16, ptr %2600, i64 %2601
  %2603 = load i16, ptr %2602, align 2, !tbaa !40
  %2604 = zext i16 %2603 to i32
  %2605 = mul i32 %2592, %2604
  %2606 = sext i32 %2585 to i64
  %2607 = getelementptr inbounds i16, ptr %2600, i64 %2606
  %2608 = load i16, ptr %2607, align 2, !tbaa !40
  %2609 = zext i16 %2608 to i32
  %2610 = mul i32 %2590, %2609
  %2611 = sext i32 %2589 to i64
  %2612 = getelementptr inbounds ptr, ptr %2597, i64 %2611
  %2613 = load ptr, ptr %2612, align 8, !tbaa !13
  %2614 = getelementptr inbounds i16, ptr %2613, i64 %2601
  %2615 = load i16, ptr %2614, align 2, !tbaa !40
  %2616 = zext i16 %2615 to i32
  %2617 = mul i32 %2592, %2616
  %2618 = getelementptr inbounds i16, ptr %2613, i64 %2606
  %2619 = load i16, ptr %2618, align 2, !tbaa !40
  %2620 = zext i16 %2619 to i32
  %2621 = mul i32 %2590, %2620
  %2622 = add i32 %2621, %2617
  %2623 = mul i32 %2622, %2591
  %2624 = add i32 %2610, %2605
  %2625 = mul i32 %2624, %2593
  %2626 = add i32 %2625, %2194
  %2627 = add i32 %2626, %2623
  %2628 = sdiv i32 %2627, %2193
  br i1 %2544, label %2629, label %2880

2629:                                             ; preds = %2573, %2550
  %2630 = phi i64 [ %2551, %2550 ], [ %2554, %2573 ]
  %2631 = phi i32 [ %2510, %2550 ], [ %2628, %2573 ]
  %2632 = phi i32 [ 1, %2550 ], [ 2, %2573 ]
  %2633 = load ptr, ptr %2502, align 8, !tbaa !13
  %2634 = getelementptr inbounds ptr, ptr %2633, i64 %2630
  %2635 = load ptr, ptr %2634, align 8, !tbaa !13
  %2636 = load i16, ptr %2635, align 2, !tbaa !40
  %2637 = sext i16 %2636 to i32
  %2638 = add nsw i32 %2549, %2637
  %2639 = getelementptr inbounds i16, ptr %2635, i64 1
  %2640 = load i16, ptr %2639, align 2, !tbaa !40
  %2641 = sext i16 %2640 to i32
  %2642 = add nsw i32 %2495, %2641
  %2643 = icmp eq i32 %2525, 1
  %2644 = load ptr, ptr %950, align 8, !tbaa !13
  %2645 = sext i16 %2546 to i64
  %2646 = getelementptr inbounds ptr, ptr %2644, i64 %2645
  %2647 = load ptr, ptr %2646, align 8, !tbaa !13
  br i1 %2643, label %2648, label %2652

2648:                                             ; preds = %2629
  %2649 = getelementptr inbounds %struct.storable_picture, ptr %2647, i64 0, i32 27
  %2650 = load i32, ptr %2649, align 8, !tbaa !867
  %2651 = add nsw i32 %2650, %2642
  br label %2652

2652:                                             ; preds = %2648, %2629
  %2653 = phi i32 [ %2651, %2648 ], [ %2642, %2629 ]
  %2654 = load i32, ptr %2201, align 4, !tbaa !891
  %2655 = sdiv i32 %2638, %2187
  %2656 = call i32 @llvm.smax.i32(i32 %2655, i32 0)
  %2657 = call i32 @llvm.smin.i32(i32 %2656, i32 %2654)
  %2658 = sdiv i32 %2653, %2191
  %2659 = call i32 @llvm.smax.i32(i32 %2658, i32 0)
  %2660 = call i32 @llvm.smin.i32(i32 %2659, i32 %213)
  %2661 = add nsw i32 %2638, %2188
  %2662 = sdiv i32 %2661, %2187
  %2663 = call i32 @llvm.smax.i32(i32 %2662, i32 0)
  %2664 = call i32 @llvm.smin.i32(i32 %2663, i32 %2654)
  %2665 = add nsw i32 %2653, %2192
  %2666 = sdiv i32 %2665, %2191
  %2667 = call i32 @llvm.smax.i32(i32 %2666, i32 0)
  %2668 = call i32 @llvm.smin.i32(i32 %2667, i32 %213)
  %2669 = and i32 %2638, %2188
  %2670 = and i32 %2653, %2192
  %2671 = sub nsw i32 %2187, %2669
  %2672 = sub nsw i32 %2191, %2670
  %2673 = getelementptr inbounds %struct.storable_picture, ptr %2647, i64 0, i32 33
  %2674 = load ptr, ptr %2673, align 8, !tbaa !82
  %2675 = getelementptr inbounds ptr, ptr %2674, i64 %2207
  %2676 = load ptr, ptr %2675, align 8, !tbaa !13
  %2677 = sext i32 %2660 to i64
  %2678 = getelementptr inbounds ptr, ptr %2676, i64 %2677
  %2679 = load ptr, ptr %2678, align 8, !tbaa !13
  %2680 = sext i32 %2657 to i64
  %2681 = getelementptr inbounds i16, ptr %2679, i64 %2680
  %2682 = load i16, ptr %2681, align 2, !tbaa !40
  %2683 = zext i16 %2682 to i32
  %2684 = mul i32 %2671, %2683
  %2685 = sext i32 %2664 to i64
  %2686 = getelementptr inbounds i16, ptr %2679, i64 %2685
  %2687 = load i16, ptr %2686, align 2, !tbaa !40
  %2688 = zext i16 %2687 to i32
  %2689 = mul i32 %2669, %2688
  %2690 = sext i32 %2668 to i64
  %2691 = getelementptr inbounds ptr, ptr %2676, i64 %2690
  %2692 = load ptr, ptr %2691, align 8, !tbaa !13
  %2693 = getelementptr inbounds i16, ptr %2692, i64 %2680
  %2694 = load i16, ptr %2693, align 2, !tbaa !40
  %2695 = zext i16 %2694 to i32
  %2696 = mul i32 %2671, %2695
  %2697 = getelementptr inbounds i16, ptr %2692, i64 %2685
  %2698 = load i16, ptr %2697, align 2, !tbaa !40
  %2699 = zext i16 %2698 to i32
  %2700 = mul i32 %2669, %2699
  %2701 = add i32 %2700, %2696
  %2702 = mul i32 %2701, %2670
  %2703 = add i32 %2689, %2684
  %2704 = mul i32 %2703, %2672
  br label %2868

2705:                                             ; preds = %2521, %2518
  %2706 = phi i32 [ %2520, %2518 ], [ %2525, %2521 ]
  %2707 = phi ptr [ %2519, %2518 ], [ %2524, %2521 ]
  %2708 = load ptr, ptr %2707, align 8, !tbaa !13
  %2709 = getelementptr inbounds ptr, ptr %2708, i64 %2498
  %2710 = load ptr, ptr %2709, align 8, !tbaa !13
  %2711 = sext i32 %2517 to i64
  %2712 = getelementptr inbounds i8, ptr %2710, i64 %2711
  %2713 = load i8, ptr %2712, align 1, !tbaa !14
  %2714 = sext i8 %2713 to i16
  %2715 = getelementptr inbounds ptr, ptr %2707, i64 1
  %2716 = load ptr, ptr %2715, align 8, !tbaa !13
  %2717 = getelementptr inbounds ptr, ptr %2716, i64 %2498
  %2718 = load ptr, ptr %2717, align 8, !tbaa !13
  %2719 = getelementptr inbounds i8, ptr %2718, i64 %2711
  %2720 = load i8, ptr %2719, align 1, !tbaa !14
  %2721 = sext i8 %2720 to i16
  %2722 = mul nsw i32 %2516, %2187
  %2723 = load ptr, ptr %2499, align 8, !tbaa !13
  %2724 = getelementptr inbounds ptr, ptr %2723, i64 %2711
  %2725 = load ptr, ptr %2724, align 8, !tbaa !13
  %2726 = load i16, ptr %2725, align 2, !tbaa !40
  %2727 = sext i16 %2726 to i32
  %2728 = add nsw i32 %2722, %2727
  %2729 = getelementptr inbounds i16, ptr %2725, i64 1
  %2730 = load i16, ptr %2729, align 2, !tbaa !40
  %2731 = sext i16 %2730 to i32
  %2732 = add nsw i32 %2495, %2731
  %2733 = icmp eq i32 %2706, 1
  %2734 = load ptr, ptr %959, align 8, !tbaa !13
  %2735 = sext i8 %2713 to i64
  %2736 = getelementptr inbounds ptr, ptr %2734, i64 %2735
  %2737 = load ptr, ptr %2736, align 8, !tbaa !13
  br i1 %2733, label %2738, label %2742

2738:                                             ; preds = %2705
  %2739 = getelementptr inbounds %struct.storable_picture, ptr %2737, i64 0, i32 27
  %2740 = load i32, ptr %2739, align 8, !tbaa !867
  %2741 = add nsw i32 %2740, %2732
  br label %2742

2742:                                             ; preds = %2738, %2705
  %2743 = phi i32 [ %2741, %2738 ], [ %2732, %2705 ]
  %2744 = load i32, ptr %2201, align 4, !tbaa !891
  %2745 = sdiv i32 %2728, %2187
  %2746 = call i32 @llvm.smax.i32(i32 %2745, i32 0)
  %2747 = call i32 @llvm.smin.i32(i32 %2746, i32 %2744)
  %2748 = sdiv i32 %2743, %2191
  %2749 = call i32 @llvm.smax.i32(i32 %2748, i32 0)
  %2750 = call i32 @llvm.smin.i32(i32 %2749, i32 %213)
  %2751 = add nsw i32 %2728, %2188
  %2752 = sdiv i32 %2751, %2187
  %2753 = call i32 @llvm.smax.i32(i32 %2752, i32 0)
  %2754 = call i32 @llvm.smin.i32(i32 %2753, i32 %2744)
  %2755 = add nsw i32 %2743, %2192
  %2756 = sdiv i32 %2755, %2191
  %2757 = call i32 @llvm.smax.i32(i32 %2756, i32 0)
  %2758 = call i32 @llvm.smin.i32(i32 %2757, i32 %213)
  %2759 = and i32 %2728, %2188
  %2760 = and i32 %2743, %2192
  %2761 = sub nsw i32 %2187, %2759
  %2762 = sub nsw i32 %2191, %2760
  %2763 = getelementptr inbounds %struct.storable_picture, ptr %2737, i64 0, i32 33
  %2764 = load ptr, ptr %2763, align 8, !tbaa !82
  %2765 = getelementptr inbounds ptr, ptr %2764, i64 %2207
  %2766 = load ptr, ptr %2765, align 8, !tbaa !13
  %2767 = sext i32 %2750 to i64
  %2768 = getelementptr inbounds ptr, ptr %2766, i64 %2767
  %2769 = load ptr, ptr %2768, align 8, !tbaa !13
  %2770 = sext i32 %2747 to i64
  %2771 = getelementptr inbounds i16, ptr %2769, i64 %2770
  %2772 = load i16, ptr %2771, align 2, !tbaa !40
  %2773 = zext i16 %2772 to i32
  %2774 = mul i32 %2761, %2773
  %2775 = sext i32 %2754 to i64
  %2776 = getelementptr inbounds i16, ptr %2769, i64 %2775
  %2777 = load i16, ptr %2776, align 2, !tbaa !40
  %2778 = zext i16 %2777 to i32
  %2779 = mul i32 %2759, %2778
  %2780 = sext i32 %2758 to i64
  %2781 = getelementptr inbounds ptr, ptr %2766, i64 %2780
  %2782 = load ptr, ptr %2781, align 8, !tbaa !13
  %2783 = getelementptr inbounds i16, ptr %2782, i64 %2770
  %2784 = load i16, ptr %2783, align 2, !tbaa !40
  %2785 = zext i16 %2784 to i32
  %2786 = mul i32 %2761, %2785
  %2787 = getelementptr inbounds i16, ptr %2782, i64 %2775
  %2788 = load i16, ptr %2787, align 2, !tbaa !40
  %2789 = zext i16 %2788 to i32
  %2790 = mul i32 %2759, %2789
  %2791 = add i32 %2790, %2786
  %2792 = mul i32 %2791, %2760
  %2793 = add i32 %2779, %2774
  %2794 = mul i32 %2793, %2762
  %2795 = add i32 %2794, %2194
  %2796 = add i32 %2795, %2792
  %2797 = sdiv i32 %2796, %2193
  %2798 = load ptr, ptr %2502, align 8, !tbaa !13
  %2799 = getelementptr inbounds ptr, ptr %2798, i64 %2711
  %2800 = load ptr, ptr %2799, align 8, !tbaa !13
  %2801 = load i16, ptr %2800, align 2, !tbaa !40
  %2802 = sext i16 %2801 to i32
  %2803 = add nsw i32 %2722, %2802
  %2804 = getelementptr inbounds i16, ptr %2800, i64 1
  %2805 = load i16, ptr %2804, align 2, !tbaa !40
  %2806 = sext i16 %2805 to i32
  %2807 = add nsw i32 %2495, %2806
  %2808 = load ptr, ptr %950, align 8, !tbaa !13
  %2809 = sext i8 %2720 to i64
  %2810 = getelementptr inbounds ptr, ptr %2808, i64 %2809
  %2811 = load ptr, ptr %2810, align 8, !tbaa !13
  br i1 %2733, label %2812, label %2816

2812:                                             ; preds = %2742
  %2813 = getelementptr inbounds %struct.storable_picture, ptr %2811, i64 0, i32 27
  %2814 = load i32, ptr %2813, align 8, !tbaa !867
  %2815 = add nsw i32 %2814, %2807
  br label %2816

2816:                                             ; preds = %2812, %2742
  %2817 = phi i32 [ %2815, %2812 ], [ %2807, %2742 ]
  %2818 = sdiv i32 %2803, %2187
  %2819 = call i32 @llvm.smax.i32(i32 %2818, i32 0)
  %2820 = call i32 @llvm.smin.i32(i32 %2819, i32 %2744)
  %2821 = sdiv i32 %2817, %2191
  %2822 = call i32 @llvm.smax.i32(i32 %2821, i32 0)
  %2823 = call i32 @llvm.smin.i32(i32 %2822, i32 %213)
  %2824 = add nsw i32 %2803, %2188
  %2825 = sdiv i32 %2824, %2187
  %2826 = call i32 @llvm.smax.i32(i32 %2825, i32 0)
  %2827 = call i32 @llvm.smin.i32(i32 %2826, i32 %2744)
  %2828 = add nsw i32 %2817, %2192
  %2829 = sdiv i32 %2828, %2191
  %2830 = call i32 @llvm.smax.i32(i32 %2829, i32 0)
  %2831 = call i32 @llvm.smin.i32(i32 %2830, i32 %213)
  %2832 = and i32 %2803, %2188
  %2833 = and i32 %2817, %2192
  %2834 = sub nsw i32 %2187, %2832
  %2835 = sub nsw i32 %2191, %2833
  %2836 = getelementptr inbounds %struct.storable_picture, ptr %2811, i64 0, i32 33
  %2837 = load ptr, ptr %2836, align 8, !tbaa !82
  %2838 = getelementptr inbounds ptr, ptr %2837, i64 %2207
  %2839 = load ptr, ptr %2838, align 8, !tbaa !13
  %2840 = sext i32 %2823 to i64
  %2841 = getelementptr inbounds ptr, ptr %2839, i64 %2840
  %2842 = load ptr, ptr %2841, align 8, !tbaa !13
  %2843 = sext i32 %2820 to i64
  %2844 = getelementptr inbounds i16, ptr %2842, i64 %2843
  %2845 = load i16, ptr %2844, align 2, !tbaa !40
  %2846 = zext i16 %2845 to i32
  %2847 = mul i32 %2834, %2846
  %2848 = sext i32 %2827 to i64
  %2849 = getelementptr inbounds i16, ptr %2842, i64 %2848
  %2850 = load i16, ptr %2849, align 2, !tbaa !40
  %2851 = zext i16 %2850 to i32
  %2852 = mul i32 %2832, %2851
  %2853 = sext i32 %2831 to i64
  %2854 = getelementptr inbounds ptr, ptr %2839, i64 %2853
  %2855 = load ptr, ptr %2854, align 8, !tbaa !13
  %2856 = getelementptr inbounds i16, ptr %2855, i64 %2843
  %2857 = load i16, ptr %2856, align 2, !tbaa !40
  %2858 = zext i16 %2857 to i32
  %2859 = mul i32 %2834, %2858
  %2860 = getelementptr inbounds i16, ptr %2855, i64 %2848
  %2861 = load i16, ptr %2860, align 2, !tbaa !40
  %2862 = zext i16 %2861 to i32
  %2863 = mul i32 %2832, %2862
  %2864 = add i32 %2863, %2859
  %2865 = mul i32 %2864, %2833
  %2866 = add i32 %2852, %2847
  %2867 = mul i32 %2866, %2835
  br label %2868

2868:                                             ; preds = %2816, %2652
  %2869 = phi i32 [ %2704, %2652 ], [ %2867, %2816 ]
  %2870 = phi i32 [ %2702, %2652 ], [ %2865, %2816 ]
  %2871 = phi i16 [ %2536, %2652 ], [ %2714, %2816 ]
  %2872 = phi i16 [ %2546, %2652 ], [ %2721, %2816 ]
  %2873 = phi i16 [ %2537, %2652 ], [ %2714, %2816 ]
  %2874 = phi i16 [ %2547, %2652 ], [ %2721, %2816 ]
  %2875 = phi i32 [ %2632, %2652 ], [ 2, %2816 ]
  %2876 = phi i32 [ %2631, %2652 ], [ %2797, %2816 ]
  %2877 = add i32 %2869, %2194
  %2878 = add i32 %2877, %2870
  %2879 = sdiv i32 %2878, %2193
  br label %2880

2880:                                             ; preds = %2868, %2573
  %2881 = phi i16 [ %2536, %2573 ], [ %2871, %2868 ]
  %2882 = phi i16 [ %2513, %2573 ], [ %2872, %2868 ]
  %2883 = phi i16 [ %2537, %2573 ], [ %2873, %2868 ]
  %2884 = phi i16 [ %2511, %2573 ], [ %2874, %2868 ]
  %2885 = phi i32 [ 0, %2573 ], [ %2875, %2868 ]
  %2886 = phi i32 [ %2628, %2573 ], [ %2876, %2868 ]
  %2887 = phi i32 [ %2509, %2573 ], [ %2879, %2868 ]
  br i1 %2465, label %3022, label %2888

2888:                                             ; preds = %2880
  %2889 = load i32, ptr %2504, align 8, !tbaa !475
  %2890 = icmp eq i32 %2889, 0
  br i1 %2890, label %2893, label %2891

2891:                                             ; preds = %2888
  %2892 = load i32, ptr %16, align 4, !tbaa !137
  switch i32 %2892, label %2893 [
    i32 0, label %2900
    i32 3, label %2900
  ]

2893:                                             ; preds = %2891, %2888
  %2894 = load i32, ptr %2505, align 4, !tbaa !476
  %2895 = icmp eq i32 %2894, 1
  br i1 %2895, label %2896, label %2904

2896:                                             ; preds = %2893
  %2897 = load i32, ptr %16, align 4, !tbaa !137
  %2898 = icmp eq i32 %2897, 1
  %2899 = select i1 %2898, i1 %41, i1 false
  br i1 %2899, label %2901, label %2904

2900:                                             ; preds = %2891, %2891
  br i1 %41, label %2901, label %2904

2901:                                             ; preds = %2900, %2896
  %2902 = ashr i16 %2883, 1
  %2903 = ashr i16 %2884, 1
  br label %2904

2904:                                             ; preds = %2901, %2900, %2896, %2893
  %2905 = phi i16 [ %2902, %2901 ], [ %2883, %2900 ], [ %2883, %2896 ], [ %2883, %2893 ]
  %2906 = phi i16 [ %2903, %2901 ], [ %2884, %2900 ], [ %2884, %2896 ], [ %2884, %2893 ]
  %2907 = load i32, ptr %944, align 8, !tbaa !465
  %2908 = icmp ne i32 %2907, 0
  %2909 = icmp eq i32 %2885, 1
  %2910 = and i1 %2909, %2908
  br i1 %2910, label %2911, label %2939

2911:                                             ; preds = %2904
  %2912 = load i32, ptr %2202, align 8, !tbaa !103
  %2913 = load ptr, ptr %940, align 8, !tbaa !483
  %2914 = getelementptr inbounds ptr, ptr %2913, i64 1
  %2915 = load ptr, ptr %2914, align 8, !tbaa !13
  %2916 = sext i16 %2906 to i64
  %2917 = getelementptr inbounds ptr, ptr %2915, i64 %2916
  %2918 = load ptr, ptr %2917, align 8, !tbaa !13
  %2919 = getelementptr inbounds i32, ptr %2918, i64 %2226
  %2920 = load i32, ptr %2919, align 4, !tbaa !18
  %2921 = mul nsw i32 %2920, %2887
  %2922 = load i32, ptr %2203, align 4, !tbaa !482
  %2923 = add nsw i32 %2921, %2922
  %2924 = load i32, ptr %2204, align 4, !tbaa !481
  %2925 = ashr i32 %2923, %2924
  %2926 = load ptr, ptr %941, align 8, !tbaa !484
  %2927 = getelementptr inbounds ptr, ptr %2926, i64 1
  %2928 = load ptr, ptr %2927, align 8, !tbaa !13
  %2929 = sext i16 %2882 to i32
  %2930 = ashr i32 %2929, %42
  %2931 = sext i32 %2930 to i64
  %2932 = getelementptr inbounds ptr, ptr %2928, i64 %2931
  %2933 = load ptr, ptr %2932, align 8, !tbaa !13
  %2934 = getelementptr inbounds i32, ptr %2933, i64 %2226
  %2935 = load i32, ptr %2934, align 4, !tbaa !18
  %2936 = add nsw i32 %2935, %2925
  %2937 = call i32 @llvm.smax.i32(i32 %2936, i32 0)
  %2938 = call i32 @llvm.smin.i32(i32 %2937, i32 %2912)
  br label %3034

2939:                                             ; preds = %2904
  %2940 = icmp eq i32 %2885, 0
  %2941 = and i1 %2940, %2908
  br i1 %2941, label %2942, label %2968

2942:                                             ; preds = %2939
  %2943 = load i32, ptr %2202, align 8, !tbaa !103
  %2944 = load ptr, ptr %940, align 8, !tbaa !483
  %2945 = load ptr, ptr %2944, align 8, !tbaa !13
  %2946 = sext i16 %2905 to i64
  %2947 = getelementptr inbounds ptr, ptr %2945, i64 %2946
  %2948 = load ptr, ptr %2947, align 8, !tbaa !13
  %2949 = getelementptr inbounds i32, ptr %2948, i64 %2226
  %2950 = load i32, ptr %2949, align 4, !tbaa !18
  %2951 = mul nsw i32 %2950, %2886
  %2952 = load i32, ptr %2203, align 4, !tbaa !482
  %2953 = add nsw i32 %2951, %2952
  %2954 = load i32, ptr %2204, align 4, !tbaa !481
  %2955 = ashr i32 %2953, %2954
  %2956 = load ptr, ptr %941, align 8, !tbaa !484
  %2957 = load ptr, ptr %2956, align 8, !tbaa !13
  %2958 = sext i16 %2881 to i32
  %2959 = ashr i32 %2958, %42
  %2960 = sext i32 %2959 to i64
  %2961 = getelementptr inbounds ptr, ptr %2957, i64 %2960
  %2962 = load ptr, ptr %2961, align 8, !tbaa !13
  %2963 = getelementptr inbounds i32, ptr %2962, i64 %2226
  %2964 = load i32, ptr %2963, align 4, !tbaa !18
  %2965 = add nsw i32 %2964, %2955
  %2966 = call i32 @llvm.smax.i32(i32 %2965, i32 0)
  %2967 = call i32 @llvm.smin.i32(i32 %2966, i32 %2943)
  br label %3034

2968:                                             ; preds = %2939
  %2969 = load i32, ptr %2505, align 4, !tbaa !476
  %2970 = icmp eq i32 %2969, 2
  %2971 = select i1 %2970, i32 %214, i32 0
  %2972 = load ptr, ptr %960, align 8, !tbaa !582
  %2973 = zext i32 %2971 to i64
  %2974 = getelementptr inbounds ptr, ptr %2972, i64 %2973
  %2975 = load ptr, ptr %2974, align 8, !tbaa !13
  %2976 = sext i16 %2905 to i64
  %2977 = getelementptr inbounds ptr, ptr %2975, i64 %2976
  %2978 = load ptr, ptr %2977, align 8, !tbaa !13
  %2979 = sext i16 %2906 to i64
  %2980 = getelementptr inbounds ptr, ptr %2978, i64 %2979
  %2981 = load ptr, ptr %2980, align 8, !tbaa !13
  %2982 = getelementptr inbounds i32, ptr %2981, i64 %2226
  %2983 = load i32, ptr %2982, align 4, !tbaa !18
  %2984 = add nuw nsw i32 %2971, 1
  %2985 = zext i32 %2984 to i64
  %2986 = getelementptr inbounds ptr, ptr %2972, i64 %2985
  %2987 = load ptr, ptr %2986, align 8, !tbaa !13
  %2988 = getelementptr inbounds ptr, ptr %2987, i64 %2976
  %2989 = load ptr, ptr %2988, align 8, !tbaa !13
  %2990 = getelementptr inbounds ptr, ptr %2989, i64 %2979
  %2991 = load ptr, ptr %2990, align 8, !tbaa !13
  %2992 = getelementptr inbounds i32, ptr %2991, i64 %2226
  %2993 = load i32, ptr %2992, align 4, !tbaa !18
  %2994 = load i32, ptr %2202, align 8, !tbaa !103
  %2995 = mul nsw i32 %2983, %2886
  %2996 = mul nsw i32 %2993, %2887
  %2997 = add nsw i32 %2996, %2995
  %2998 = load i32, ptr %2204, align 4, !tbaa !481
  %2999 = shl nuw i32 1, %2998
  %3000 = add nsw i32 %2997, %2999
  %3001 = add i32 %2998, 1
  %3002 = ashr i32 %3000, %3001
  %3003 = load ptr, ptr %941, align 8, !tbaa !484
  %3004 = getelementptr inbounds ptr, ptr %3003, i64 %2973
  %3005 = load ptr, ptr %3004, align 8, !tbaa !13
  %3006 = getelementptr inbounds ptr, ptr %3005, i64 %2976
  %3007 = load ptr, ptr %3006, align 8, !tbaa !13
  %3008 = getelementptr inbounds i32, ptr %3007, i64 %2226
  %3009 = load i32, ptr %3008, align 4, !tbaa !18
  %3010 = getelementptr inbounds ptr, ptr %3003, i64 %2985
  %3011 = load ptr, ptr %3010, align 8, !tbaa !13
  %3012 = getelementptr inbounds ptr, ptr %3011, i64 %2979
  %3013 = load ptr, ptr %3012, align 8, !tbaa !13
  %3014 = getelementptr inbounds i32, ptr %3013, i64 %2226
  %3015 = load i32, ptr %3014, align 4, !tbaa !18
  %3016 = add i32 %3009, 1
  %3017 = add i32 %3016, %3015
  %3018 = ashr i32 %3017, 1
  %3019 = add nsw i32 %3018, %3002
  %3020 = call i32 @llvm.smax.i32(i32 %3019, i32 0)
  %3021 = call i32 @llvm.smin.i32(i32 %3020, i32 %2994)
  br label %3034

3022:                                             ; preds = %2880
  %3023 = load i32, ptr %944, align 8, !tbaa !465
  %3024 = icmp ne i32 %3023, 0
  %3025 = icmp eq i32 %2885, 1
  %3026 = and i1 %3025, %3024
  br i1 %3026, label %3034, label %3027

3027:                                             ; preds = %3022
  %3028 = icmp eq i32 %2885, 0
  %3029 = and i1 %3028, %3024
  br i1 %3029, label %3034, label %3030

3030:                                             ; preds = %3027
  %3031 = add i32 %2886, 1
  %3032 = add i32 %3031, %2887
  %3033 = lshr i32 %3032, 1
  br label %3034

3034:                                             ; preds = %3030, %3027, %3022, %2968, %2942, %2911
  %3035 = phi i32 [ %2967, %2942 ], [ %3021, %2968 ], [ %2938, %2911 ], [ %3033, %3030 ], [ %2887, %3022 ], [ %2886, %3027 ]
  %3036 = phi i16 [ %2905, %2942 ], [ %2905, %2968 ], [ %2905, %2911 ], [ %2883, %3030 ], [ %2883, %3022 ], [ %2883, %3027 ]
  %3037 = phi i16 [ %2906, %2942 ], [ %2906, %2968 ], [ %2906, %2911 ], [ %2884, %3030 ], [ %2884, %3022 ], [ %2884, %3027 ]
  %3038 = trunc i32 %3035 to i16
  %3039 = add nuw nsw i64 %2508, %2469
  %3040 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %2506, i64 %3039
  store i16 %3038, ptr %3040, align 2, !tbaa !40
  %3041 = add nuw nsw i64 %2508, 1
  %3042 = icmp eq i64 %3041, 4
  br i1 %3042, label %3043, label %2507, !llvm.loop !894

3043:                                             ; preds = %3034
  %.lcssa6 = phi i16 [ %3036, %3034 ]
  %.lcssa5 = phi i16 [ %3037, %3034 ]
  %.lcssa4 = phi i16 [ %2881, %3034 ]
  %.lcssa3 = phi i16 [ %2882, %3034 ]
  %.lcssa2 = phi i32 [ %2886, %3034 ]
  %.lcssa1 = phi i32 [ %2887, %3034 ]
  %3044 = add nuw nsw i64 %2472, 1
  %3045 = icmp eq i64 %3044, 4
  br i1 %3045, label %3046, label %2471, !llvm.loop !895

3046:                                             ; preds = %3043, %2454, %2237
  %3047 = phi i16 [ %2244, %2237 ], [ %.lcssa4, %3043 ], [ %.lcssa, %2454 ]
  %3048 = phi i16 [ %2243, %2237 ], [ %.lcssa3, %3043 ], [ %2243, %2454 ]
  %3049 = phi i16 [ %2242, %2237 ], [ %.lcssa6, %3043 ], [ %2242, %2454 ]
  %3050 = phi i16 [ %2241, %2237 ], [ %.lcssa5, %3043 ], [ %2241, %2454 ]
  %3051 = phi i32 [ %2240, %2237 ], [ %.lcssa2, %3043 ], [ %2240, %2454 ]
  %3052 = phi i32 [ %2239, %2237 ], [ %.lcssa1, %3043 ], [ %2239, %2454 ]
  br i1 %56, label %3078, label %3053

3053:                                             ; preds = %3046
  %3054 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %3055 = getelementptr inbounds %struct.storable_picture, ptr %3054, i64 0, i32 33
  %3056 = load ptr, ptr %3055, align 8, !tbaa !82
  %3057 = getelementptr inbounds ptr, ptr %3056, i64 %2207
  %3058 = load ptr, ptr %3057, align 8, !tbaa !13
  %3059 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %2196, i64 %2236, i64 %2238
  %3060 = load i8, ptr %3059, align 1, !tbaa !14
  %3061 = zext i8 %3060 to i32
  %3062 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %2196, i64 %2236, i64 %2238
  %3063 = load i8, ptr %3062, align 1, !tbaa !14
  %3064 = zext i8 %3063 to i32
  call void @itrans(ptr noundef nonnull %0, i32 noundef %2252, i32 noundef %2247, i32 noundef %3061, i32 noundef %3064, i32 noundef 1) #46
  %3065 = sext i32 %2254 to i64
  %3066 = sext i32 %2249 to i64
  br label %3067

3067:                                             ; preds = %3067, %3053
  %3068 = phi i64 [ 0, %3053 ], [ %3076, %3067 ]
  %3069 = add nsw i64 %3068, %3066
  %3070 = getelementptr inbounds ptr, ptr %3058, i64 %3069
  %3071 = load ptr, ptr %3070, align 8, !tbaa !13
  %3072 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %3068, i64 0
  %3073 = load <4 x i32>, ptr %3072, align 4, !tbaa !18
  %3074 = trunc <4 x i32> %3073 to <4 x i16>
  %3075 = getelementptr inbounds i16, ptr %3071, i64 %3065
  store <4 x i16> %3074, ptr %3075, align 2, !tbaa !40
  %3076 = add nuw nsw i64 %3068, 1
  %3077 = icmp eq i64 %3076, 4
  br i1 %3077, label %3078, label %3067, !llvm.loop !896

3078:                                             ; preds = %3067, %3046
  %3079 = add nuw nsw i64 %2238, 1
  %3080 = icmp eq i64 %3079, 4
  br i1 %3080, label %3081, label %2237, !llvm.loop !897

3081:                                             ; preds = %3078
  %.lcssa12 = phi i16 [ %3047, %3078 ]
  %.lcssa11 = phi i16 [ %3048, %3078 ]
  %.lcssa10 = phi i16 [ %3049, %3078 ]
  %.lcssa9 = phi i16 [ %3050, %3078 ]
  %.lcssa8 = phi i32 [ %3051, %3078 ]
  %.lcssa7 = phi i32 [ %3052, %3078 ]
  %3082 = add nuw nsw i64 %2229, 1
  %3083 = load i32, ptr %2195, align 4, !tbaa !93
  %3084 = ashr i32 %3083, 1
  %3085 = sext i32 %3084 to i64
  %3086 = icmp slt i64 %3082, %3085
  br i1 %3086, label %2228, label %3087, !llvm.loop !898

3087:                                             ; preds = %3081, %2221
  %3088 = phi i16 [ %2213, %2221 ], [ %.lcssa12, %3081 ]
  %3089 = phi i16 [ %2212, %2221 ], [ %.lcssa11, %3081 ]
  %3090 = phi i16 [ %2211, %2221 ], [ %.lcssa10, %3081 ]
  %3091 = phi i16 [ %2210, %2221 ], [ %.lcssa9, %3081 ]
  %3092 = phi i32 [ %2209, %2221 ], [ %.lcssa8, %3081 ]
  %3093 = phi i32 [ %2208, %2221 ], [ %.lcssa7, %3081 ]
  br i1 %56, label %3094, label %3132

3094:                                             ; preds = %3087
  %3095 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %3096 = getelementptr inbounds %struct.storable_picture, ptr %3095, i64 0, i32 33
  %3097 = load ptr, ptr %3096, align 8, !tbaa !82
  %3098 = getelementptr inbounds ptr, ptr %3097, i64 %2207
  %3099 = load ptr, ptr %3098, align 8, !tbaa !13
  %3100 = trunc i64 %2207 to i32
  %3101 = shl nuw nsw i32 %3100, 1
  call void @itrans_sp_chroma(ptr noundef nonnull %0, i32 noundef %3101) #46
  br label %3102

3102:                                             ; preds = %3129, %3094
  %3103 = phi i32 [ 4, %3094 ], [ %3130, %3129 ]
  %3104 = shl nuw nsw i32 %3103, 2
  %3105 = add nsw i32 %3104, -16
  %3106 = load i32, ptr %2197, align 8, !tbaa !302
  %3107 = add nsw i32 %3106, %3105
  %3108 = sext i32 %3107 to i64
  br label %3109

3109:                                             ; preds = %3128, %3102
  %3110 = phi i1 [ true, %3102 ], [ false, %3128 ]
  %3111 = phi i32 [ 0, %3102 ], [ 1, %3128 ]
  %3112 = shl nuw nsw i32 %3111, 2
  %3113 = load i32, ptr %2198, align 8, !tbaa !304
  %3114 = add nsw i32 %3113, %3112
  %3115 = or i32 %3111, %3101
  call void @itrans(ptr noundef nonnull %0, i32 noundef %3112, i32 noundef %3105, i32 noundef %3115, i32 noundef %3103, i32 noundef 1) #46
  %3116 = sext i32 %3114 to i64
  br label %3117

3117:                                             ; preds = %3117, %3109
  %3118 = phi i64 [ 0, %3109 ], [ %3126, %3117 ]
  %3119 = add nsw i64 %3118, %3108
  %3120 = getelementptr inbounds ptr, ptr %3099, i64 %3119
  %3121 = load ptr, ptr %3120, align 8, !tbaa !13
  %3122 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %3118, i64 0
  %3123 = load <4 x i32>, ptr %3122, align 4, !tbaa !18
  %3124 = trunc <4 x i32> %3123 to <4 x i16>
  %3125 = getelementptr inbounds i16, ptr %3121, i64 %3116
  store <4 x i16> %3124, ptr %3125, align 2, !tbaa !40
  %3126 = add nuw nsw i64 %3118, 1
  %3127 = icmp eq i64 %3126, 4
  br i1 %3127, label %3128, label %3117, !llvm.loop !899

3128:                                             ; preds = %3117
  br i1 %3110, label %3109, label %3129, !llvm.loop !900

3129:                                             ; preds = %3128
  %3130 = add nuw nsw i32 %3103, 1
  %3131 = icmp eq i32 %3130, 6
  br i1 %3131, label %3132, label %3102, !llvm.loop !901

3132:                                             ; preds = %3129, %3087
  br i1 %2206, label %2205, label %3133, !llvm.loop !902

3133:                                             ; preds = %3132, %2179, %1047, %59
  %3134 = phi i32 [ 0, %59 ], [ 0, %2179 ], [ 0, %3132 ], [ 1, %1047 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #48
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #48
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %3) #48
  ret i32 %3134
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @mb_is_available(i32 noundef %0, i32 noundef %1) #8 {
  %3 = icmp slt i32 %0, 0
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %6 = getelementptr inbounds %struct.storable_picture, ptr %5, i64 0, i32 31
  %7 = load i32, ptr %6, align 8, !tbaa !362
  %8 = icmp sgt i32 %7, %0
  br i1 %8, label %9, label %25

9:                                                ; preds = %4
  %10 = load ptr, ptr @img, align 8, !tbaa !13
  %11 = getelementptr inbounds %struct.img_par, ptr %10, i64 0, i32 45
  %12 = load i32, ptr %11, align 4, !tbaa !710
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %24

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.img_par, ptr %10, i64 0, i32 39
  %16 = load ptr, ptr %15, align 8, !tbaa !84
  %17 = zext i32 %0 to i64
  %18 = getelementptr inbounds %struct.macroblock, ptr %16, i64 %17, i32 2
  %19 = load i32, ptr %18, align 4, !tbaa !176
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds %struct.macroblock, ptr %16, i64 %20, i32 2
  %22 = load i32, ptr %21, align 4, !tbaa !176
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %14, %9
  br label %25

25:                                               ; preds = %24, %14, %4, %2
  %26 = phi i32 [ 1, %24 ], [ 0, %4 ], [ 0, %2 ], [ 0, %14 ]
  ret i32 %26
}

; Function Attrs: mustprogress nofree nosync nounwind optsize willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal void @CheckAvailabilityOfNeighbors() #39 {
  %1 = load ptr, ptr @img, align 8, !tbaa !13
  %2 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 1
  %3 = load i32, ptr %2, align 4, !tbaa !49
  %4 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 39
  %5 = load ptr, ptr %4, align 8, !tbaa !84
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, i8 0, i64 16, i1 false)
  %8 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %9 = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 29
  %10 = load i32, ptr %9, align 8, !tbaa !564
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %63, label %12

12:                                               ; preds = %0
  %13 = ashr i32 %3, 1
  %14 = and i32 %3, -2
  %15 = add i32 %14, -2
  %16 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 22
  store i32 %15, ptr %16, align 4, !tbaa !169
  %17 = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 30
  %18 = load i32, ptr %17, align 4, !tbaa !369
  %19 = sub i32 %13, %18
  %20 = shl i32 %19, 1
  %21 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 23
  store i32 %20, ptr %21, align 8, !tbaa !172
  %22 = add i32 %20, 2
  %23 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 24
  store i32 %22, ptr %23, align 4, !tbaa !903
  %24 = xor i32 %18, -1
  %25 = add i32 %13, %24
  %26 = shl i32 %25, 1
  %27 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 25
  store i32 %26, ptr %27, align 8, !tbaa !904
  %28 = tail call i32 @mb_is_available(i32 noundef %15, i32 noundef %3) #47, !range !562
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %12
  %31 = load ptr, ptr @PicPos, align 8, !tbaa !13
  %32 = sext i32 %13 to i64
  %33 = getelementptr inbounds ptr, ptr %31, i64 %32
  %34 = load ptr, ptr %33, align 8, !tbaa !13
  %35 = load i32, ptr %34, align 4, !tbaa !18
  %36 = icmp ne i32 %35, 0
  %37 = zext i1 %36 to i32
  br label %38

38:                                               ; preds = %30, %12
  %39 = phi i32 [ 0, %12 ], [ %37, %30 ]
  %40 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 26
  store i32 %39, ptr %40, align 4, !tbaa !168
  %41 = tail call i32 @mb_is_available(i32 noundef %20, i32 noundef %3) #47, !range !562
  %42 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 27
  store i32 %41, ptr %42, align 8, !tbaa !171
  %43 = tail call i32 @mb_is_available(i32 noundef %22, i32 noundef %3) #47, !range !562
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %38
  %46 = load ptr, ptr @PicPos, align 8, !tbaa !13
  %47 = add nsw i32 %13, 1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds ptr, ptr %46, i64 %48
  %50 = load ptr, ptr %49, align 8, !tbaa !13
  %51 = load i32, ptr %50, align 4, !tbaa !18
  %52 = icmp ne i32 %51, 0
  %53 = zext i1 %52 to i32
  br label %54

54:                                               ; preds = %45, %38
  %55 = phi i32 [ 0, %38 ], [ %53, %45 ]
  %56 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 28
  store i32 %55, ptr %56, align 4, !tbaa !905
  %57 = tail call i32 @mb_is_available(i32 noundef %26, i32 noundef %3) #47, !range !562
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %114, label %59

59:                                               ; preds = %54
  %60 = load ptr, ptr @PicPos, align 8, !tbaa !13
  %61 = sext i32 %13 to i64
  %62 = getelementptr inbounds ptr, ptr %60, i64 %61
  br label %108

63:                                               ; preds = %0
  %64 = add nsw i32 %3, -1
  %65 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 22
  store i32 %64, ptr %65, align 4, !tbaa !169
  %66 = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 30
  %67 = load i32, ptr %66, align 4, !tbaa !369
  %68 = sub i32 %3, %67
  %69 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 23
  store i32 %68, ptr %69, align 8, !tbaa !172
  %70 = add i32 %68, 1
  %71 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 24
  store i32 %70, ptr %71, align 4, !tbaa !903
  %72 = xor i32 %67, -1
  %73 = add i32 %3, %72
  %74 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 25
  store i32 %73, ptr %74, align 8, !tbaa !904
  %75 = tail call i32 @mb_is_available(i32 noundef %64, i32 noundef %3) #47, !range !562
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %84, label %77

77:                                               ; preds = %63
  %78 = load ptr, ptr @PicPos, align 8, !tbaa !13
  %79 = getelementptr inbounds ptr, ptr %78, i64 %6
  %80 = load ptr, ptr %79, align 8, !tbaa !13
  %81 = load i32, ptr %80, align 4, !tbaa !18
  %82 = icmp ne i32 %81, 0
  %83 = zext i1 %82 to i32
  br label %84

84:                                               ; preds = %77, %63
  %85 = phi i32 [ 0, %63 ], [ %83, %77 ]
  %86 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 26
  store i32 %85, ptr %86, align 4, !tbaa !168
  %87 = tail call i32 @mb_is_available(i32 noundef %68, i32 noundef %3) #47, !range !562
  %88 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 27
  store i32 %87, ptr %88, align 8, !tbaa !171
  %89 = tail call i32 @mb_is_available(i32 noundef %70, i32 noundef %3) #47, !range !562
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %100, label %91

91:                                               ; preds = %84
  %92 = load ptr, ptr @PicPos, align 8, !tbaa !13
  %93 = add nsw i32 %3, 1
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds ptr, ptr %92, i64 %94
  %96 = load ptr, ptr %95, align 8, !tbaa !13
  %97 = load i32, ptr %96, align 4, !tbaa !18
  %98 = icmp ne i32 %97, 0
  %99 = zext i1 %98 to i32
  br label %100

100:                                              ; preds = %91, %84
  %101 = phi i32 [ 0, %84 ], [ %99, %91 ]
  %102 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 28
  store i32 %101, ptr %102, align 4, !tbaa !905
  %103 = tail call i32 @mb_is_available(i32 noundef %73, i32 noundef %3) #47, !range !562
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %114, label %105

105:                                              ; preds = %100
  %106 = load ptr, ptr @PicPos, align 8, !tbaa !13
  %107 = getelementptr inbounds ptr, ptr %106, i64 %6
  br label %108

108:                                              ; preds = %105, %59
  %109 = phi ptr [ %107, %105 ], [ %62, %59 ]
  %110 = load ptr, ptr %109, align 8, !tbaa !13
  %111 = load i32, ptr %110, align 4, !tbaa !18
  %112 = icmp ne i32 %111, 0
  %113 = zext i1 %112 to i32
  br label %114

114:                                              ; preds = %108, %100, %54
  %115 = phi i32 [ 0, %54 ], [ 0, %100 ], [ %113, %108 ]
  %116 = getelementptr inbounds %struct.macroblock, ptr %5, i64 %6, i32 29
  store i32 %115, ptr %116, align 8, !tbaa !906
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @get_mb_block_pos_normal(i32 noundef %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef writeonly %2) #21 {
  %4 = load ptr, ptr @PicPos, align 8, !tbaa !13
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds ptr, ptr %4, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !13
  %8 = load i32, ptr %7, align 4, !tbaa !18
  store i32 %8, ptr %1, align 4, !tbaa !18
  %9 = getelementptr inbounds i32, ptr %7, i64 1
  %10 = load i32, ptr %9, align 4, !tbaa !18
  store i32 %10, ptr %2, align 4, !tbaa !18
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @get_mb_block_pos_mbaff(i32 noundef %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef writeonly %2) #21 {
  %4 = load ptr, ptr @PicPos, align 8, !tbaa !13
  %5 = ashr i32 %0, 1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %4, i64 %6
  %8 = load ptr, ptr %7, align 8, !tbaa !13
  %9 = load i32, ptr %8, align 4, !tbaa !18
  store i32 %9, ptr %1, align 4, !tbaa !18
  %10 = getelementptr inbounds i32, ptr %8, i64 1
  %11 = load i32, ptr %10, align 4, !tbaa !18
  %12 = shl i32 %11, 1
  %13 = and i32 %0, 1
  %14 = or i32 %12, %13
  store i32 %14, ptr %2, align 4, !tbaa !18
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @get_mb_pos(i32 noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load ptr, ptr @get_mb_block_pos, align 8, !tbaa !13
  tail call void %5(i32 noundef %0, ptr noundef %1, ptr noundef %2) #46
  %6 = load ptr, ptr @img, align 8, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 119, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !18
  %10 = load i32, ptr %1, align 4, !tbaa !18
  %11 = mul nsw i32 %10, %9
  store i32 %11, ptr %1, align 4, !tbaa !18
  %12 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 119, i64 %7, i64 1
  %13 = load i32, ptr %12, align 4, !tbaa !18
  %14 = load i32, ptr %2, align 4, !tbaa !18
  %15 = mul nsw i32 %14, %13
  store i32 %15, ptr %2, align 4, !tbaa !18
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @getNonAffNeighbour(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, ptr nocapture noundef %4) #21 {
  %6 = load ptr, ptr @img, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 39
  %8 = load ptr, ptr %7, align 8, !tbaa !84
  %9 = zext i32 %0 to i64
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 119, i64 %10
  %12 = load i32, ptr %11, align 4, !tbaa !18
  %13 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 119, i64 %10, i64 1
  %14 = load i32, ptr %13, align 4, !tbaa !18
  %15 = icmp slt i32 %1, 0
  br i1 %15, label %16, label %30

16:                                               ; preds = %5
  %17 = icmp slt i32 %2, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 25
  %20 = load i32, ptr %19, align 8, !tbaa !904
  %21 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %20, ptr %21, align 4, !tbaa !57
  %22 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 29
  br label %49

23:                                               ; preds = %16
  %24 = icmp sgt i32 %14, %2
  br i1 %24, label %25, label %54

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 22
  %27 = load i32, ptr %26, align 4, !tbaa !169
  %28 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %27, ptr %28, align 4, !tbaa !57
  %29 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 26
  br label %49

30:                                               ; preds = %5
  %31 = icmp sgt i32 %12, %1
  %32 = icmp slt i32 %2, 0
  br i1 %31, label %33, label %43

33:                                               ; preds = %30
  br i1 %32, label %34, label %39

34:                                               ; preds = %33
  %35 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 23
  %36 = load i32, ptr %35, align 8, !tbaa !172
  %37 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %36, ptr %37, align 4, !tbaa !57
  %38 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 27
  br label %49

39:                                               ; preds = %33
  %40 = icmp sgt i32 %14, %2
  br i1 %40, label %41, label %54

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %0, ptr %42, align 4, !tbaa !57
  store i32 1, ptr %4, align 4, !tbaa !52
  br label %62

43:                                               ; preds = %30
  br i1 %32, label %44, label %54

44:                                               ; preds = %43
  %45 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 24
  %46 = load i32, ptr %45, align 4, !tbaa !903
  %47 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %46, ptr %47, align 4, !tbaa !57
  %48 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 28
  br label %49

49:                                               ; preds = %44, %34, %25, %18
  %50 = phi ptr [ %38, %34 ], [ %48, %44 ], [ %22, %18 ], [ %29, %25 ]
  %51 = phi i32 [ %36, %34 ], [ %46, %44 ], [ %20, %18 ], [ %27, %25 ]
  %52 = load i32, ptr %50, align 4, !tbaa !18
  store i32 %52, ptr %4, align 4, !tbaa !52
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %62

54:                                               ; preds = %43, %39, %23
  store i32 0, ptr %4, align 4, !tbaa !52
  br label %55

55:                                               ; preds = %54, %49
  %56 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 45
  %57 = load i32, ptr %56, align 4, !tbaa !710
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %83, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %61 = load i32, ptr %60, align 4, !tbaa !57
  br label %62

62:                                               ; preds = %59, %49, %41
  %63 = phi i32 [ %61, %59 ], [ %0, %41 ], [ %51, %49 ]
  %64 = load ptr, ptr @PicPos, align 8, !tbaa !13
  %65 = sext i32 %63 to i64
  %66 = getelementptr inbounds ptr, ptr %64, i64 %65
  %67 = load ptr, ptr %66, align 8, !tbaa !13
  %68 = add nsw i32 %12, -1
  %69 = and i32 %68, %1
  %70 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 2
  store i32 %69, ptr %70, align 4, !tbaa !188
  %71 = add nsw i32 %14, -1
  %72 = and i32 %71, %2
  %73 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 3
  store i32 %72, ptr %73, align 4, !tbaa !187
  %74 = load i32, ptr %67, align 4, !tbaa !18
  %75 = mul nsw i32 %74, %12
  %76 = add nsw i32 %75, %69
  %77 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 4
  store i32 %76, ptr %77, align 4, !tbaa !60
  %78 = getelementptr inbounds i32, ptr %67, i64 1
  %79 = load i32, ptr %78, align 4, !tbaa !18
  %80 = mul nsw i32 %79, %14
  %81 = add nsw i32 %80, %72
  %82 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 5
  store i32 %81, ptr %82, align 4, !tbaa !59
  br label %83

83:                                               ; preds = %62, %55
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @getAffNeighbour(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4) #0 {
  %6 = load ptr, ptr @img, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 39
  %8 = load ptr, ptr %7, align 8, !tbaa !84
  %9 = zext i32 %0 to i64
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 119, i64 %10
  %12 = load i32, ptr %11, align 4, !tbaa !18
  %13 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 119, i64 %10, i64 1
  %14 = load i32, ptr %13, align 4, !tbaa !18
  store i32 0, ptr %4, align 4, !tbaa !52
  %15 = add nsw i32 %14, -1
  %16 = icmp sgt i32 %14, %2
  br i1 %16, label %17, label %286

17:                                               ; preds = %5
  %18 = add nsw i32 %12, -1
  %19 = icmp sle i32 %12, %1
  %20 = icmp sgt i32 %2, -1
  %21 = and i1 %20, %19
  br i1 %21, label %286, label %22

22:                                               ; preds = %17
  %23 = icmp slt i32 %1, 0
  br i1 %23, label %24, label %152

24:                                               ; preds = %22
  %25 = icmp slt i32 %2, 0
  %26 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 20
  %27 = load i32, ptr %26, align 4, !tbaa !170
  %28 = icmp eq i32 %27, 0
  %29 = and i32 %0, 1
  %30 = icmp eq i32 %29, 0
  br i1 %25, label %31, label %77

31:                                               ; preds = %24
  br i1 %28, label %32, label %56

32:                                               ; preds = %31
  br i1 %30, label %33, label %40

33:                                               ; preds = %32
  %34 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 25
  %35 = load i32, ptr %34, align 8, !tbaa !904
  %36 = add nsw i32 %35, 1
  %37 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %36, ptr %37, align 4, !tbaa !57
  %38 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 29
  %39 = load i32, ptr %38, align 8, !tbaa !906
  br label %254

40:                                               ; preds = %32
  %41 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 22
  %42 = load i32, ptr %41, align 4, !tbaa !169
  %43 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %42, ptr %43, align 4, !tbaa !57
  %44 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 26
  %45 = load i32, ptr %44, align 4, !tbaa !168
  store i32 %45, ptr %4, align 4, !tbaa !52
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %257, label %47

47:                                               ; preds = %40
  %48 = sext i32 %42 to i64
  %49 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %48, i32 20
  %50 = load i32, ptr %49, align 4, !tbaa !170
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %262, label %52

52:                                               ; preds = %47
  %53 = add nsw i32 %42, 1
  store i32 %53, ptr %43, align 4, !tbaa !57
  %54 = add nsw i32 %14, %2
  %55 = ashr i32 %54, 1
  br label %262

56:                                               ; preds = %31
  %57 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 25
  %58 = load i32, ptr %57, align 8, !tbaa !904
  br i1 %30, label %59, label %72

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %58, ptr %60, align 4, !tbaa !57
  %61 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 29
  %62 = load i32, ptr %61, align 8, !tbaa !906
  store i32 %62, ptr %4, align 4, !tbaa !52
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %257, label %64

64:                                               ; preds = %59
  %65 = sext i32 %58 to i64
  %66 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %65, i32 20
  %67 = load i32, ptr %66, align 4, !tbaa !170
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %262

69:                                               ; preds = %64
  %70 = add nsw i32 %58, 1
  store i32 %70, ptr %60, align 4, !tbaa !57
  %71 = shl nsw i32 %2, 1
  br label %262

72:                                               ; preds = %56
  %73 = add nsw i32 %58, 1
  %74 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %73, ptr %74, align 4, !tbaa !57
  %75 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 29
  %76 = load i32, ptr %75, align 8, !tbaa !906
  br label %254

77:                                               ; preds = %24
  %78 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 22
  %79 = load i32, ptr %78, align 4, !tbaa !169
  %80 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %79, ptr %80, align 4, !tbaa !57
  %81 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 26
  %82 = load i32, ptr %81, align 4, !tbaa !168
  store i32 %82, ptr %4, align 4, !tbaa !52
  %83 = icmp eq i32 %82, 0
  br i1 %28, label %84, label %117

84:                                               ; preds = %77
  br i1 %30, label %85, label %99

85:                                               ; preds = %84
  br i1 %83, label %257, label %86

86:                                               ; preds = %85
  %87 = sext i32 %79 to i64
  %88 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %87, i32 20
  %89 = load i32, ptr %88, align 4, !tbaa !170
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %262, label %91

91:                                               ; preds = %86
  %92 = and i32 %2, 1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %91
  %95 = lshr i32 %2, 1
  br label %262

96:                                               ; preds = %91
  %97 = add nsw i32 %79, 1
  store i32 %97, ptr %80, align 4, !tbaa !57
  %98 = lshr i32 %2, 1
  br label %262

99:                                               ; preds = %84
  br i1 %83, label %257, label %100

100:                                              ; preds = %99
  %101 = sext i32 %79 to i64
  %102 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %101, i32 20
  %103 = load i32, ptr %102, align 4, !tbaa !170
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %100
  %106 = add nsw i32 %79, 1
  store i32 %106, ptr %80, align 4, !tbaa !57
  br label %262

107:                                              ; preds = %100
  %108 = and i32 %2, 1
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %107
  %111 = add nuw nsw i32 %14, %2
  %112 = ashr i32 %111, 1
  br label %262

113:                                              ; preds = %107
  %114 = add nsw i32 %79, 1
  store i32 %114, ptr %80, align 4, !tbaa !57
  %115 = add nuw nsw i32 %14, %2
  %116 = ashr i32 %115, 1
  br label %262

117:                                              ; preds = %77
  br i1 %30, label %118, label %133

118:                                              ; preds = %117
  br i1 %83, label %257, label %119

119:                                              ; preds = %118
  %120 = sext i32 %79 to i64
  %121 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %120, i32 20
  %122 = load i32, ptr %121, align 4, !tbaa !170
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %262

124:                                              ; preds = %119
  %125 = lshr i32 %14, 1
  %126 = icmp ugt i32 %125, %2
  br i1 %126, label %127, label %129

127:                                              ; preds = %124
  %128 = shl nuw nsw i32 %2, 1
  br label %262

129:                                              ; preds = %124
  %130 = add nsw i32 %79, 1
  store i32 %130, ptr %80, align 4, !tbaa !57
  %131 = shl nuw i32 %2, 1
  %132 = sub nsw i32 %131, %14
  br label %262

133:                                              ; preds = %117
  br i1 %83, label %257, label %134

134:                                              ; preds = %133
  %135 = sext i32 %79 to i64
  %136 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %135, i32 20
  %137 = load i32, ptr %136, align 4, !tbaa !170
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %150

139:                                              ; preds = %134
  %140 = lshr i32 %14, 1
  %141 = icmp ugt i32 %140, %2
  br i1 %141, label %142, label %145

142:                                              ; preds = %139
  %143 = shl nuw nsw i32 %2, 1
  %144 = or i32 %143, 1
  br label %262

145:                                              ; preds = %139
  %146 = add nsw i32 %79, 1
  store i32 %146, ptr %80, align 4, !tbaa !57
  %147 = shl nuw i32 %2, 1
  %148 = or i32 %147, 1
  %149 = sub i32 %148, %14
  br label %262

150:                                              ; preds = %134
  %151 = add nsw i32 %79, 1
  store i32 %151, ptr %80, align 4, !tbaa !57
  br label %262

152:                                              ; preds = %22
  %153 = icmp sgt i32 %12, %1
  %154 = icmp slt i32 %2, 0
  br i1 %153, label %155, label %218

155:                                              ; preds = %152
  br i1 %154, label %156, label %205

156:                                              ; preds = %155
  %157 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 20
  %158 = load i32, ptr %157, align 4, !tbaa !170
  %159 = icmp eq i32 %158, 0
  %160 = and i32 %0, 1
  %161 = icmp eq i32 %160, 0
  br i1 %159, label %162, label %184

162:                                              ; preds = %156
  br i1 %161, label %163, label %181

163:                                              ; preds = %162
  %164 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 23
  %165 = load i32, ptr %164, align 8, !tbaa !172
  %166 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %165, ptr %166, align 4, !tbaa !57
  %167 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 27
  %168 = load i32, ptr %167, align 8, !tbaa !171
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %254, label %170

170:                                              ; preds = %163
  %171 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 45
  %172 = load i32, ptr %171, align 4, !tbaa !710
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %179

174:                                              ; preds = %170
  %175 = sext i32 %165 to i64
  %176 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %175, i32 20
  %177 = load i32, ptr %176, align 4, !tbaa !170
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %254

179:                                              ; preds = %174, %170
  %180 = add nsw i32 %165, 1
  store i32 %180, ptr %166, align 4, !tbaa !57
  br label %254

181:                                              ; preds = %162
  %182 = add i32 %0, -1
  %183 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %182, ptr %183, align 4, !tbaa !57
  store i32 1, ptr %4, align 4, !tbaa !52
  br label %262

184:                                              ; preds = %156
  %185 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 23
  %186 = load i32, ptr %185, align 8, !tbaa !172
  br i1 %161, label %187, label %200

187:                                              ; preds = %184
  %188 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %186, ptr %188, align 4, !tbaa !57
  %189 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 27
  %190 = load i32, ptr %189, align 8, !tbaa !171
  store i32 %190, ptr %4, align 4, !tbaa !52
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %257, label %192

192:                                              ; preds = %187
  %193 = sext i32 %186 to i64
  %194 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %193, i32 20
  %195 = load i32, ptr %194, align 4, !tbaa !170
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %262

197:                                              ; preds = %192
  %198 = add nsw i32 %186, 1
  store i32 %198, ptr %188, align 4, !tbaa !57
  %199 = shl nsw i32 %2, 1
  br label %262

200:                                              ; preds = %184
  %201 = add nsw i32 %186, 1
  %202 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %201, ptr %202, align 4, !tbaa !57
  %203 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 27
  %204 = load i32, ptr %203, align 8, !tbaa !171
  br label %254

205:                                              ; preds = %155
  %206 = icmp eq i32 %2, 0
  br i1 %206, label %207, label %216

207:                                              ; preds = %205
  %208 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 45
  %209 = load i32, ptr %208, align 4, !tbaa !710
  %210 = icmp eq i32 %209, 2
  br i1 %210, label %211, label %216

211:                                              ; preds = %207
  %212 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 23
  %213 = load i32, ptr %212, align 8, !tbaa !172
  %214 = add nsw i32 %213, 1
  %215 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %214, ptr %215, align 4, !tbaa !57
  store i32 1, ptr %4, align 4, !tbaa !52
  br label %262

216:                                              ; preds = %207, %205
  %217 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %0, ptr %217, align 4, !tbaa !57
  store i32 1, ptr %4, align 4, !tbaa !52
  br label %262

218:                                              ; preds = %152
  br i1 %154, label %219, label %257

219:                                              ; preds = %218
  %220 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 20
  %221 = load i32, ptr %220, align 4, !tbaa !170
  %222 = icmp eq i32 %221, 0
  %223 = and i32 %0, 1
  %224 = icmp eq i32 %223, 0
  br i1 %222, label %225, label %233

225:                                              ; preds = %219
  br i1 %224, label %226, label %257

226:                                              ; preds = %225
  %227 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 24
  %228 = load i32, ptr %227, align 4, !tbaa !903
  %229 = add nsw i32 %228, 1
  %230 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %229, ptr %230, align 4, !tbaa !57
  %231 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 28
  %232 = load i32, ptr %231, align 4, !tbaa !905
  br label %254

233:                                              ; preds = %219
  %234 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 24
  %235 = load i32, ptr %234, align 4, !tbaa !903
  br i1 %224, label %236, label %249

236:                                              ; preds = %233
  %237 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %235, ptr %237, align 4, !tbaa !57
  %238 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 28
  %239 = load i32, ptr %238, align 4, !tbaa !905
  store i32 %239, ptr %4, align 4, !tbaa !52
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %257, label %241

241:                                              ; preds = %236
  %242 = sext i32 %235 to i64
  %243 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %242, i32 20
  %244 = load i32, ptr %243, align 4, !tbaa !170
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %262

246:                                              ; preds = %241
  %247 = add nsw i32 %235, 1
  store i32 %247, ptr %237, align 4, !tbaa !57
  %248 = shl nsw i32 %2, 1
  br label %262

249:                                              ; preds = %233
  %250 = add nsw i32 %235, 1
  %251 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  store i32 %250, ptr %251, align 4, !tbaa !57
  %252 = getelementptr inbounds %struct.macroblock, ptr %8, i64 %9, i32 28
  %253 = load i32, ptr %252, align 4, !tbaa !905
  br label %254

254:                                              ; preds = %249, %226, %200, %179, %174, %163, %72, %33
  %255 = phi i32 [ %204, %200 ], [ %232, %226 ], [ %253, %249 ], [ %76, %72 ], [ %39, %33 ], [ %168, %174 ], [ %168, %179 ], [ %168, %163 ]
  store i32 %255, ptr %4, align 4, !tbaa !52
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %262

257:                                              ; preds = %254, %236, %225, %218, %187, %133, %118, %99, %85, %59, %40
  %258 = phi i32 [ %2, %254 ], [ -1, %187 ], [ -1, %236 ], [ -1, %59 ], [ -1, %40 ], [ -1, %99 ], [ -1, %85 ], [ -1, %133 ], [ -1, %118 ], [ -1, %218 ], [ -1, %225 ]
  %259 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 45
  %260 = load i32, ptr %259, align 4, !tbaa !710
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %286, label %262

262:                                              ; preds = %257, %254, %246, %241, %216, %211, %197, %192, %181, %150, %145, %142, %129, %127, %119, %113, %110, %105, %96, %94, %86, %69, %64, %52, %47
  %263 = phi i32 [ %258, %257 ], [ %2, %254 ], [ %2, %216 ], [ -1, %211 ], [ %2, %181 ], [ %71, %69 ], [ %55, %52 ], [ %128, %127 ], [ %132, %129 ], [ %2, %150 ], [ %144, %142 ], [ %149, %145 ], [ %95, %94 ], [ %98, %96 ], [ %112, %110 ], [ %116, %113 ], [ %2, %105 ], [ %199, %197 ], [ %248, %246 ], [ %2, %47 ], [ %2, %64 ], [ %2, %86 ], [ %2, %119 ], [ %2, %192 ], [ %2, %241 ]
  %264 = and i32 %18, %1
  %265 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 2
  store i32 %264, ptr %265, align 4, !tbaa !188
  %266 = and i32 %263, %15
  %267 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 3
  store i32 %266, ptr %267, align 4, !tbaa !187
  %268 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 1
  %269 = load i32, ptr %268, align 4, !tbaa !57
  %270 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 4
  %271 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 5
  %272 = load ptr, ptr @get_mb_block_pos, align 8, !tbaa !13
  tail call void %272(i32 noundef %269, ptr noundef nonnull %270, ptr noundef nonnull %271) #46
  %273 = load ptr, ptr @img, align 8, !tbaa !13
  %274 = getelementptr inbounds %struct.img_par, ptr %273, i64 0, i32 119, i64 %10
  %275 = load i32, ptr %274, align 4, !tbaa !18
  %276 = load i32, ptr %270, align 4, !tbaa !18
  %277 = mul nsw i32 %276, %275
  store i32 %277, ptr %270, align 4, !tbaa !18
  %278 = getelementptr inbounds %struct.img_par, ptr %273, i64 0, i32 119, i64 %10, i64 1
  %279 = load i32, ptr %278, align 4, !tbaa !18
  %280 = load i32, ptr %271, align 4, !tbaa !18
  %281 = mul nsw i32 %280, %279
  %282 = load i32, ptr %265, align 4, !tbaa !188
  %283 = add nsw i32 %282, %277
  store i32 %283, ptr %270, align 4, !tbaa !60
  %284 = load i32, ptr %267, align 4, !tbaa !187
  %285 = add nsw i32 %284, %281
  store i32 %285, ptr %271, align 4, !tbaa !59
  br label %286

286:                                              ; preds = %262, %257, %17, %5
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @getLuma4x4Neighbour(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) #0 {
  %5 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  tail call void %5(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef 0, ptr noundef %3) #46
  %6 = load i32, ptr %3, align 4, !tbaa !52
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.pix_pos, ptr %3, i64 0, i32 2
  %10 = load <4 x i32>, ptr %9, align 4, !tbaa !18
  %11 = ashr <4 x i32> %10, <i32 2, i32 2, i32 2, i32 2>
  store <4 x i32> %11, ptr %9, align 4, !tbaa !18
  br label %12

12:                                               ; preds = %8, %4
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @getChroma4x4Neighbour(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) #0 {
  %5 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  tail call void %5(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef 1, ptr noundef %3) #46
  %6 = load i32, ptr %3, align 4, !tbaa !52
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.pix_pos, ptr %3, i64 0, i32 2
  %10 = load <4 x i32>, ptr %9, align 4, !tbaa !18
  %11 = ashr <4 x i32> %10, <i32 2, i32 2, i32 2, i32 2>
  store <4 x i32> %11, ptr %9, align 4, !tbaa !18
  br label %12

12:                                               ; preds = %8, %4
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @getDpbSize() #0 {
  %1 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 27
  %3 = load i32, ptr %2, align 4, !tbaa !415
  %4 = add i32 %3, 1
  %5 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 28
  %6 = load i32, ptr %5, align 4, !tbaa !414
  %7 = add i32 %6, 1
  %8 = mul i32 %7, %4
  %9 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 29
  %10 = load i32, ptr %9, align 4, !tbaa !440
  %11 = icmp eq i32 %10, 0
  %12 = zext i1 %11 to i32
  %13 = shl i32 %8, %12
  %14 = mul i32 %13, 384
  %15 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 6
  %16 = load i32, ptr %15, align 4, !tbaa !907
  switch i32 %16, label %42 [
    i32 9, label %44
    i32 10, label %44
    i32 11, label %17
    i32 12, label %26
    i32 13, label %27
    i32 20, label %28
    i32 21, label %29
    i32 22, label %30
    i32 30, label %31
    i32 31, label %32
    i32 32, label %33
    i32 40, label %34
    i32 41, label %35
    i32 42, label %36
    i32 50, label %40
    i32 51, label %41
  ]

17:                                               ; preds = %0
  %18 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 1
  %19 = load i32, ptr %18, align 4, !tbaa !908
  %20 = icmp ult i32 %19, 100
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 5
  %23 = load i32, ptr %22, align 4, !tbaa !909
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %44, label %25

25:                                               ; preds = %21, %17
  br label %44

26:                                               ; preds = %0
  br label %44

27:                                               ; preds = %0
  br label %44

28:                                               ; preds = %0
  br label %44

29:                                               ; preds = %0
  br label %44

30:                                               ; preds = %0
  br label %44

31:                                               ; preds = %0
  br label %44

32:                                               ; preds = %0
  br label %44

33:                                               ; preds = %0
  br label %44

34:                                               ; preds = %0
  br label %44

35:                                               ; preds = %0
  br label %44

36:                                               ; preds = %0
  %37 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 1
  %38 = load i32, ptr %37, align 4, !tbaa !908
  switch i32 %38, label %39 [
    i32 100, label %44
    i32 110, label %44
    i32 122, label %44
    i32 144, label %44
  ]

39:                                               ; preds = %36
  br label %44

40:                                               ; preds = %0
  br label %44

41:                                               ; preds = %0
  br label %44

42:                                               ; preds = %0
  tail call void @error(ptr noundef nonnull @.str.195, i32 noundef 500) #46
  %43 = load ptr, ptr @active_sps, align 8, !tbaa !13
  br label %44

44:                                               ; preds = %42, %41, %40, %39, %36, %36, %36, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %21, %0, %0
  %45 = phi ptr [ %43, %42 ], [ %1, %41 ], [ %1, %40 ], [ %1, %39 ], [ %1, %35 ], [ %1, %34 ], [ %1, %33 ], [ %1, %32 ], [ %1, %31 ], [ %1, %30 ], [ %1, %29 ], [ %1, %28 ], [ %1, %27 ], [ %1, %26 ], [ %1, %25 ], [ %1, %0 ], [ %1, %0 ], [ %1, %21 ], [ %1, %36 ], [ %1, %36 ], [ %1, %36 ], [ %1, %36 ]
  %46 = phi i32 [ 0, %42 ], [ 70778880, %41 ], [ 42393600, %40 ], [ 12582912, %39 ], [ 12582912, %35 ], [ 12582912, %34 ], [ 7864320, %33 ], [ 6912000, %32 ], [ 3110400, %31 ], [ 3110400, %30 ], [ 1824768, %29 ], [ 912384, %28 ], [ 912384, %27 ], [ 912384, %26 ], [ 152064, %25 ], [ 152064, %0 ], [ 152064, %0 ], [ 345600, %21 ], [ 13369344, %36 ], [ 13369344, %36 ], [ 13369344, %36 ], [ 13369344, %36 ]
  %47 = sdiv i32 %46, %14
  %48 = tail call i32 @llvm.smin.i32(i32 %47, i32 16)
  %49 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %45, i64 0, i32 37
  %50 = load i32, ptr %49, align 4, !tbaa !910
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %67, label %52

52:                                               ; preds = %44
  %53 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %45, i64 0, i32 38, i32 26
  %54 = load i32, ptr %53, align 4, !tbaa !911
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %45, i64 0, i32 38, i32 33
  %58 = load i32, ptr %57, align 4, !tbaa !912
  %59 = icmp sgt i32 %58, %48
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  tail call void @error(ptr noundef nonnull @.str.1.196, i32 noundef 500) #46
  %61 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %62 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %61, i64 0, i32 38, i32 33
  %63 = load i32, ptr %62, align 4, !tbaa !912
  br label %64

64:                                               ; preds = %60, %56
  %65 = phi i32 [ %63, %60 ], [ %58, %56 ]
  %66 = tail call i32 @llvm.smax.i32(i32 %65, i32 1)
  br label %67

67:                                               ; preds = %64, %52, %44
  %68 = phi i32 [ %66, %64 ], [ %48, %52 ], [ %48, %44 ]
  ret i32 %68
}

; Function Attrs: nounwind optsize uwtable
define internal void @init_dpb() #0 {
  %1 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 9), align 8, !tbaa !691
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %4, label %3

3:                                                ; preds = %0
  tail call void @free_dpb() #47
  br label %4

4:                                                ; preds = %3, %0
  %5 = tail call i32 @getDpbSize() #47
  store i32 %5, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %6 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %6, i64 0, i32 25
  %8 = load i32, ptr %7, align 4, !tbaa !396
  store i32 %8, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 10), align 4, !tbaa !913
  %9 = icmp ult i32 %5, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  tail call void @error(ptr noundef nonnull @.str.3.201, i32 noundef 1000) #46
  %11 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i32 [ %11, %10 ], [ %5, %4 ]
  store i32 0, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  store ptr null, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 11), align 8, !tbaa !914
  store i32 0, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  store i32 0, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %14 = zext i32 %13 to i64
  %15 = tail call noalias ptr @calloc(i64 noundef %14, i64 noundef 8) #45
  store ptr %15, ptr @dpb, align 8, !tbaa !352
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  tail call void @no_mem_exit(ptr noundef nonnull @.str.4.202) #46
  %18 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %19 = zext i32 %18 to i64
  br label %20

20:                                               ; preds = %17, %12
  %21 = phi i64 [ %19, %17 ], [ %14, %12 ]
  %22 = phi i32 [ %18, %17 ], [ %13, %12 ]
  %23 = tail call noalias ptr @calloc(i64 noundef %21, i64 noundef 8) #45
  store ptr %23, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  tail call void @no_mem_exit(ptr noundef nonnull @.str.5.203) #46
  %26 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %27 = zext i32 %26 to i64
  br label %28

28:                                               ; preds = %25, %20
  %29 = phi i64 [ %27, %25 ], [ %21, %20 ]
  %30 = phi i32 [ %26, %25 ], [ %22, %20 ]
  %31 = tail call noalias ptr @calloc(i64 noundef %29, i64 noundef 8) #45
  store ptr %31, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  %32 = icmp eq ptr %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  tail call void @no_mem_exit(ptr noundef nonnull @.str.6.204) #46
  %34 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i32 [ %34, %33 ], [ %30, %28 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %51, label %38

38:                                               ; preds = %38, %35
  %39 = phi i64 [ %47, %38 ], [ 0, %35 ]
  %40 = tail call ptr @alloc_frame_store() #47
  %41 = load ptr, ptr @dpb, align 8, !tbaa !352
  %42 = getelementptr inbounds ptr, ptr %41, i64 %39
  store ptr %40, ptr %42, align 8, !tbaa !13
  %43 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %44 = getelementptr inbounds ptr, ptr %43, i64 %39
  store ptr null, ptr %44, align 8, !tbaa !13
  %45 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  %46 = getelementptr inbounds ptr, ptr %45, i64 %39
  store ptr null, ptr %46, align 8, !tbaa !13
  %47 = add nuw nsw i64 %39, 1
  %48 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %49 = zext i32 %48 to i64
  %50 = icmp ult i64 %47, %49
  br i1 %50, label %38, label %51, !llvm.loop !917

51:                                               ; preds = %38, %35
  br label %52

52:                                               ; preds = %58, %51
  %53 = phi i64 [ %59, %58 ], [ 0, %51 ]
  %54 = tail call noalias dereferenceable_or_null(264) ptr @calloc(i64 noundef 33, i64 noundef 8) #45
  %55 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %53
  store ptr %54, ptr %55, align 8, !tbaa !13
  %56 = icmp eq ptr %54, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %52
  tail call void @no_mem_exit(ptr noundef nonnull @.str.7.207) #46
  br label %58

58:                                               ; preds = %57, %52
  %59 = add nuw nsw i64 %53, 1
  %60 = icmp eq i64 %59, 6
  br i1 %60, label %61, label %52, !llvm.loop !918

61:                                               ; preds = %58
  %62 = load ptr, ptr @img, align 8, !tbaa !13
  %63 = getelementptr inbounds %struct.img_par, ptr %62, i64 0, i32 11
  %64 = load i32, ptr %63, align 8, !tbaa !337
  %65 = getelementptr inbounds %struct.img_par, ptr %62, i64 0, i32 12
  %66 = load i32, ptr %65, align 4, !tbaa !338
  %67 = getelementptr inbounds %struct.img_par, ptr %62, i64 0, i32 13
  %68 = load i32, ptr %67, align 8, !tbaa !339
  %69 = getelementptr inbounds %struct.img_par, ptr %62, i64 0, i32 15
  %70 = load i32, ptr %69, align 8, !tbaa !340
  %71 = tail call ptr @alloc_storable_picture(i32 noundef 0, i32 noundef %64, i32 noundef %66, i32 noundef %68, i32 noundef %70) #47
  store ptr %71, ptr @no_reference_picture, align 8, !tbaa !13
  %72 = getelementptr inbounds %struct.storable_picture, ptr %71, i64 0, i32 42
  store ptr %71, ptr %72, align 8, !tbaa !919
  %73 = getelementptr inbounds %struct.storable_picture, ptr %71, i64 0, i32 43
  store ptr %71, ptr %73, align 8, !tbaa !920
  %74 = getelementptr inbounds %struct.storable_picture, ptr %71, i64 0, i32 44
  store ptr %71, ptr %74, align 8, !tbaa !921
  br label %75

75:                                               ; preds = %84, %61
  %76 = phi i64 [ 0, %61 ], [ %86, %84 ]
  %77 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %76
  br label %78

78:                                               ; preds = %78, %75
  %79 = phi i64 [ 0, %75 ], [ %82, %78 ]
  %80 = load ptr, ptr %77, align 8, !tbaa !13
  %81 = getelementptr inbounds ptr, ptr %80, i64 %79
  store ptr null, ptr %81, align 8, !tbaa !13
  %82 = add nuw nsw i64 %79, 1
  %83 = icmp eq i64 %82, 33
  br i1 %83, label %84, label %78, !llvm.loop !922

84:                                               ; preds = %78
  %85 = getelementptr inbounds [6 x i32], ptr @listXsize, i64 0, i64 %76
  store i32 0, ptr %85, align 4, !tbaa !18
  %86 = add nuw nsw i64 %76, 1
  %87 = icmp eq i64 %86, 6
  br i1 %87, label %88, label %75, !llvm.loop !923

88:                                               ; preds = %84
  store i32 -2147483648, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 7), align 8, !tbaa !410
  %89 = load ptr, ptr @img, align 8, !tbaa !13
  %90 = getelementptr inbounds %struct.img_par, ptr %89, i64 0, i32 97
  store i32 0, ptr %90, align 4, !tbaa !517
  store i32 1, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 9), align 8, !tbaa !691
  %91 = getelementptr inbounds %struct.img_par, ptr %89, i64 0, i32 130
  %92 = load i32, ptr %91, align 4, !tbaa !364
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %88
  %95 = tail call ptr @alloc_frame_store() #47
  store ptr %95, ptr @last_out_fs, align 8, !tbaa !13
  br label %96

96:                                               ; preds = %94, %88
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_dpb() #0 {
  %1 = load ptr, ptr @dpb, align 8, !tbaa !352
  %2 = icmp eq ptr %1, null
  br i1 %2, label %19, label %3

3:                                                ; preds = %0
  %4 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %6, %3
  %7 = phi i64 [ %11, %6 ], [ 0, %3 ]
  %8 = load ptr, ptr @dpb, align 8, !tbaa !352
  %9 = getelementptr inbounds ptr, ptr %8, i64 %7
  %10 = load ptr, ptr %9, align 8, !tbaa !13
  tail call void @free_frame_store(ptr noundef %10) #47
  %11 = add nuw nsw i64 %7, 1
  %12 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %13 = zext i32 %12 to i64
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %6, label %15, !llvm.loop !924

15:                                               ; preds = %6
  %16 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %17

17:                                               ; preds = %15, %3
  %18 = phi ptr [ %16, %15 ], [ %1, %3 ]
  tail call void @free(ptr noundef %18) #46
  store ptr null, ptr @dpb, align 8, !tbaa !352
  br label %19

19:                                               ; preds = %17, %0
  %20 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %21 = icmp eq ptr %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  tail call void @free(ptr noundef nonnull %20) #46
  br label %23

23:                                               ; preds = %22, %19
  %24 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  %25 = icmp eq ptr %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  tail call void @free(ptr noundef nonnull %24) #46
  br label %27

27:                                               ; preds = %26, %23
  store i32 -2147483648, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 7), align 8, !tbaa !410
  br label %28

28:                                               ; preds = %34, %27
  %29 = phi i64 [ 0, %27 ], [ %35, %34 ]
  %30 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %29
  %31 = load ptr, ptr %30, align 8, !tbaa !13
  %32 = icmp eq ptr %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  tail call void @free(ptr noundef nonnull %31) #46
  store ptr null, ptr %30, align 8, !tbaa !13
  br label %34

34:                                               ; preds = %33, %28
  %35 = add nuw nsw i64 %29, 1
  %36 = icmp eq i64 %35, 6
  br i1 %36, label %37, label %28, !llvm.loop !925

37:                                               ; preds = %34
  store i32 0, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 9), align 8, !tbaa !691
  %38 = load ptr, ptr @img, align 8, !tbaa !13
  %39 = getelementptr inbounds %struct.img_par, ptr %38, i64 0, i32 130
  %40 = load i32, ptr %39, align 4, !tbaa !364
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  %43 = load ptr, ptr @last_out_fs, align 8, !tbaa !13
  tail call void @free_frame_store(ptr noundef %43) #47
  br label %44

44:                                               ; preds = %42, %37
  %45 = load ptr, ptr @no_reference_picture, align 8, !tbaa !13
  tail call void @free_storable_picture(ptr noundef %45) #47
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal noalias ptr @alloc_frame_store() #0 {
  %1 = tail call noalias dereferenceable_or_null(72) ptr @calloc(i64 noundef 1, i64 noundef 72) #45
  %2 = icmp eq ptr %1, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  tail call void @no_mem_exit(ptr noundef nonnull @.str.8.216) #46
  br label %4

4:                                                ; preds = %3, %0
  ret ptr %1
}

; Function Attrs: nounwind optsize uwtable
define internal ptr @alloc_storable_picture(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = tail call noalias dereferenceable_or_null(317104) ptr @calloc(i64 noundef 1, i64 noundef 317104) #45
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @no_mem_exit(ptr noundef nonnull @.str.9.214) #46
  br label %9

9:                                                ; preds = %8, %5
  %10 = icmp eq i32 %0, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %9
  %12 = sdiv i32 %2, 2
  %13 = sdiv i32 %4, 2
  br label %14

14:                                               ; preds = %11, %9
  %15 = phi i32 [ %13, %11 ], [ %4, %9 ]
  %16 = phi i32 [ %12, %11 ], [ %2, %9 ]
  %17 = mul nsw i32 %16, %1
  %18 = sdiv i32 %17, 256
  %19 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 31
  store i32 %18, ptr %19, align 8, !tbaa !362
  %20 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 32
  %21 = tail call i32 @get_mem2Dpel(ptr noundef nonnull %20, i32 noundef %16, i32 noundef %1) #46
  %22 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %23 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %22, i64 0, i32 8
  %24 = load i32, ptr %23, align 4, !tbaa !480
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %14
  %27 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 33
  %28 = tail call i32 @get_mem3Dpel(ptr noundef nonnull %27, i32 noundef 2, i32 noundef %15, i32 noundef %3) #46
  br label %29

29:                                               ; preds = %26, %14
  %30 = load i32, ptr %19, align 8, !tbaa !362
  %31 = zext i32 %30 to i64
  %32 = tail call noalias ptr @calloc(i64 noundef %31, i64 noundef 4) #45
  %33 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 34
  store ptr %32, ptr %33, align 8, !tbaa !538
  %34 = icmp eq ptr %32, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %29
  tail call void @no_mem_exit(ptr noundef nonnull @.str.10.215) #46
  br label %36

36:                                               ; preds = %35, %29
  %37 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 35
  %38 = sdiv i32 %16, 16
  %39 = sdiv i32 %1, 16
  %40 = tail call i32 @get_mem2Dshort(ptr noundef nonnull %37, i32 noundef %38, i32 noundef %39) #46
  %41 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 36
  %42 = sdiv i32 %16, 4
  %43 = sdiv i32 %1, 4
  %44 = tail call i32 @get_mem3D(ptr noundef nonnull %41, i32 noundef 2, i32 noundef %42, i32 noundef %43) #46
  %45 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 37
  %46 = tail call i32 @get_mem3Dint64(ptr noundef nonnull %45, i32 noundef 6, i32 noundef %42, i32 noundef %43) #46
  %47 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 38
  %48 = tail call i32 @get_mem3Dint64(ptr noundef nonnull %47, i32 noundef 6, i32 noundef %42, i32 noundef %43) #46
  %49 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 39
  %50 = tail call i32 @get_mem4Dshort(ptr noundef nonnull %49, i32 noundef 2, i32 noundef %42, i32 noundef %43, i32 noundef 2) #46
  %51 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 40
  %52 = tail call i32 @get_mem2D(ptr noundef nonnull %51, i32 noundef %42, i32 noundef %43) #46
  %53 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 41
  %54 = tail call i32 @get_mem2D(ptr noundef nonnull %53, i32 noundef %42, i32 noundef %43) #46
  %55 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 11
  %56 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 9
  store i32 0, ptr %56, align 8, !tbaa !343
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(30) %55, i8 0, i64 30, i1 false)
  store i32 %0, ptr %6, align 8, !tbaa !570
  %57 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 19
  store i32 %1, ptr %57, align 8, !tbaa !566
  %58 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 20
  store i32 %16, ptr %58, align 4, !tbaa !568
  %59 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 21
  store i32 %3, ptr %59, align 8, !tbaa !311
  %60 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 22
  store i32 %15, ptr %60, align 4, !tbaa !312
  %61 = add nsw i32 %1, -1
  %62 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 23
  store i32 %61, ptr %62, align 8, !tbaa !661
  %63 = add nsw i32 %16, -1
  %64 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 24
  store i32 %63, ptr %64, align 4, !tbaa !662
  %65 = add nsw i32 %3, -1
  %66 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 25
  store i32 %65, ptr %66, align 8, !tbaa !926
  %67 = add nsw i32 %15, -1
  %68 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 26
  store i32 %67, ptr %68, align 4, !tbaa !927
  %69 = load ptr, ptr @no_reference_picture, align 8, !tbaa !13
  %70 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 42
  store ptr %69, ptr %70, align 8, !tbaa !919
  %71 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 43
  store ptr %69, ptr %71, align 8, !tbaa !920
  %72 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 44
  store ptr %69, ptr %72, align 8, !tbaa !921
  %73 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 60
  store ptr null, ptr %73, align 8, !tbaa !623
  %74 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 28
  store i32 0, ptr %74, align 4, !tbaa !341
  %75 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 29
  store i32 0, ptr %75, align 8, !tbaa !564
  %76 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 1
  store i32 0, ptr %76, align 4, !tbaa !390
  %77 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 3
  store i32 0, ptr %77, align 4, !tbaa !594
  %78 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 2
  store i32 0, ptr %78, align 8, !tbaa !593
  ret ptr %6
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_frame_store(ptr noundef %0) #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %19, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  %5 = load ptr, ptr %4, align 8, !tbaa !355
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @free_storable_picture(ptr noundef nonnull %5) #47
  store ptr null, ptr %4, align 8, !tbaa !355
  br label %8

8:                                                ; preds = %7, %3
  %9 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  %10 = load ptr, ptr %9, align 8, !tbaa !928
  %11 = icmp eq ptr %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @free_storable_picture(ptr noundef nonnull %10) #47
  store ptr null, ptr %9, align 8, !tbaa !928
  br label %13

13:                                               ; preds = %12, %8
  %14 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  %15 = load ptr, ptr %14, align 8, !tbaa !929
  %16 = icmp eq ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @free_storable_picture(ptr noundef nonnull %15) #47
  br label %18

18:                                               ; preds = %17, %13
  tail call void @free(ptr noundef nonnull %0) #46
  br label %19

19:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_storable_picture(ptr noundef %0) #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %57, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 36
  %5 = load ptr, ptr %4, align 8, !tbaa !197
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @free_mem3D(ptr noundef nonnull %5, i32 noundef 2) #46
  store ptr null, ptr %4, align 8, !tbaa !197
  br label %8

8:                                                ; preds = %7, %3
  %9 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 37
  %10 = load ptr, ptr %9, align 8, !tbaa !717
  %11 = icmp eq ptr %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @free_mem3Dint64(ptr noundef nonnull %10, i32 noundef 6) #46
  store ptr null, ptr %9, align 8, !tbaa !717
  br label %13

13:                                               ; preds = %12, %8
  %14 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 38
  %15 = load ptr, ptr %14, align 8, !tbaa !930
  %16 = icmp eq ptr %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @free_mem3Dint64(ptr noundef nonnull %15, i32 noundef 6) #46
  store ptr null, ptr %14, align 8, !tbaa !930
  br label %18

18:                                               ; preds = %17, %13
  %19 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 39
  %20 = load ptr, ptr %19, align 8, !tbaa !371
  %21 = icmp eq ptr %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 20
  %24 = load i32, ptr %23, align 4, !tbaa !568
  %25 = sdiv i32 %24, 4
  tail call void @free_mem4Dshort(ptr noundef nonnull %20, i32 noundef 2, i32 noundef %25) #46
  store ptr null, ptr %19, align 8, !tbaa !371
  br label %26

26:                                               ; preds = %22, %18
  %27 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 40
  %28 = load ptr, ptr %27, align 8, !tbaa !931
  %29 = icmp eq ptr %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @free_mem2D(ptr noundef nonnull %28) #46
  store ptr null, ptr %27, align 8, !tbaa !931
  br label %31

31:                                               ; preds = %30, %26
  %32 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 41
  %33 = load ptr, ptr %32, align 8, !tbaa !932
  %34 = icmp eq ptr %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @free_mem2D(ptr noundef nonnull %33) #46
  store ptr null, ptr %32, align 8, !tbaa !932
  br label %36

36:                                               ; preds = %35, %31
  %37 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 32
  %38 = load ptr, ptr %37, align 8, !tbaa !47
  %39 = icmp eq ptr %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @free_mem2Dpel(ptr noundef nonnull %38) #46
  store ptr null, ptr %37, align 8, !tbaa !47
  br label %41

41:                                               ; preds = %40, %36
  %42 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 33
  %43 = load ptr, ptr %42, align 8, !tbaa !82
  %44 = icmp eq ptr %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  tail call void @free_mem3Dpel(ptr noundef nonnull %43, i32 noundef 2) #46
  store ptr null, ptr %42, align 8, !tbaa !82
  br label %46

46:                                               ; preds = %45, %41
  %47 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 34
  %48 = load ptr, ptr %47, align 8, !tbaa !538
  %49 = icmp eq ptr %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  tail call void @free(ptr noundef nonnull %48) #46
  store ptr null, ptr %47, align 8, !tbaa !538
  br label %51

51:                                               ; preds = %50, %46
  %52 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 35
  %53 = load ptr, ptr %52, align 8, !tbaa !724
  %54 = icmp eq ptr %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %51
  tail call void @free_mem2Dshort(ptr noundef nonnull %53) #46
  br label %56

56:                                               ; preds = %55, %51
  tail call void @free(ptr noundef nonnull %0) #46
  br label %57

57:                                               ; preds = %56, %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: read) uwtable
define internal i32 @is_short_ref(ptr nocapture noundef readonly %0) #28 {
  %2 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 15
  %3 = load i32, ptr %2, align 8, !tbaa !346
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 14
  %7 = load i32, ptr %6, align 4, !tbaa !356
  %8 = icmp eq i32 %7, 0
  %9 = zext i1 %8 to i32
  br label %10

10:                                               ; preds = %5, %1
  %11 = phi i32 [ 0, %1 ], [ %9, %5 ]
  ret i32 %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: read) uwtable
define internal i32 @is_long_ref(ptr nocapture noundef readonly %0) #28 {
  %2 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 15
  %3 = load i32, ptr %2, align 8, !tbaa !346
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 14
  %7 = load i32, ptr %6, align 4, !tbaa !356
  %8 = icmp ne i32 %7, 0
  %9 = zext i1 %8 to i32
  br label %10

10:                                               ; preds = %5, %1
  %11 = phi i32 [ 0, %1 ], [ %9, %5 ]
  ret i32 %11
}

; Function Attrs: nounwind optsize uwtable
define internal void @init_lists(i32 noundef %0, i32 noundef %1) #0 {
  %3 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %3, i64 0, i32 17
  %5 = load i32, ptr %4, align 4, !tbaa !382
  %6 = add i32 %5, 4
  %7 = shl nuw i32 1, %6
  %8 = icmp eq i32 %1, 0
  br i1 %8, label %9, label %70

9:                                                ; preds = %2
  %10 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %9
  %13 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %14 = load ptr, ptr @img, align 8
  %15 = getelementptr inbounds %struct.img_par, ptr %14, i64 0, i32 56
  %16 = zext i32 %10 to i64
  br label %23

17:                                               ; preds = %48, %9
  %18 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %153, label %20

20:                                               ; preds = %17
  %21 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  %22 = zext i32 %18 to i64
  br label %51

23:                                               ; preds = %48, %12
  %24 = phi i64 [ 0, %12 ], [ %49, %48 ]
  %25 = getelementptr inbounds ptr, ptr %13, i64 %24
  %26 = load ptr, ptr %25, align 8, !tbaa !13
  %27 = load i32, ptr %26, align 8, !tbaa !353
  %28 = icmp eq i32 %27, 3
  br i1 %28, label %29, label %48

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.frame_store, ptr %26, i64 0, i32 12
  %31 = load ptr, ptr %30, align 8, !tbaa !355
  %32 = getelementptr inbounds %struct.storable_picture, ptr %31, i64 0, i32 15
  %33 = load i32, ptr %32, align 8, !tbaa !346
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %struct.storable_picture, ptr %31, i64 0, i32 14
  %37 = load i32, ptr %36, align 4, !tbaa !356
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %48

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.frame_store, ptr %26, i64 0, i32 5
  %41 = load i32, ptr %40, align 4, !tbaa !385
  %42 = load i32, ptr %15, align 4, !tbaa !336
  %43 = icmp ugt i32 %41, %42
  %44 = select i1 %43, i32 %7, i32 0
  %45 = sub i32 %41, %44
  %46 = getelementptr inbounds %struct.frame_store, ptr %26, i64 0, i32 7
  store i32 %45, ptr %46, align 4
  %47 = getelementptr inbounds %struct.storable_picture, ptr %31, i64 0, i32 11
  store i32 %45, ptr %47, align 8, !tbaa !342
  br label %48

48:                                               ; preds = %39, %35, %29, %23
  %49 = add nuw nsw i64 %24, 1
  %50 = icmp eq i64 %49, %16
  br i1 %50, label %17, label %23, !llvm.loop !933

51:                                               ; preds = %67, %20
  %52 = phi i64 [ 0, %20 ], [ %68, %67 ]
  %53 = getelementptr inbounds ptr, ptr %21, i64 %52
  %54 = load ptr, ptr %53, align 8, !tbaa !13
  %55 = load i32, ptr %54, align 8, !tbaa !353
  %56 = icmp eq i32 %55, 3
  br i1 %56, label %57, label %67

57:                                               ; preds = %51
  %58 = getelementptr inbounds %struct.frame_store, ptr %54, i64 0, i32 12
  %59 = load ptr, ptr %58, align 8, !tbaa !355
  %60 = getelementptr inbounds %struct.storable_picture, ptr %59, i64 0, i32 14
  %61 = load i32, ptr %60, align 4, !tbaa !356
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %struct.storable_picture, ptr %59, i64 0, i32 13
  %65 = load i32, ptr %64, align 8, !tbaa !934
  %66 = getelementptr inbounds %struct.storable_picture, ptr %59, i64 0, i32 12
  store i32 %65, ptr %66, align 4, !tbaa !399
  br label %67

67:                                               ; preds = %63, %57, %51
  %68 = add nuw nsw i64 %52, 1
  %69 = icmp eq i64 %68, %22
  br i1 %69, label %153, label %51, !llvm.loop !935

70:                                               ; preds = %2
  %71 = icmp ne i32 %1, 1
  %72 = zext i1 %71 to i32
  %73 = xor i1 %71, true
  %74 = zext i1 %73 to i32
  %75 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %70
  %78 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %79 = load ptr, ptr @img, align 8
  %80 = getelementptr inbounds %struct.img_par, ptr %79, i64 0, i32 56
  %81 = zext i32 %75 to i64
  br label %88

82:                                               ; preds = %120, %70
  %83 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %153, label %85

85:                                               ; preds = %82
  %86 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  %87 = zext i32 %83 to i64
  br label %123

88:                                               ; preds = %120, %77
  %89 = phi i64 [ 0, %77 ], [ %121, %120 ]
  %90 = getelementptr inbounds ptr, ptr %78, i64 %89
  %91 = load ptr, ptr %90, align 8, !tbaa !13
  %92 = getelementptr inbounds %struct.frame_store, ptr %91, i64 0, i32 1
  %93 = load i32, ptr %92, align 4, !tbaa !412
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %120, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %struct.frame_store, ptr %91, i64 0, i32 5
  %97 = load i32, ptr %96, align 4, !tbaa !385
  %98 = load i32, ptr %80, align 4, !tbaa !336
  %99 = icmp ugt i32 %97, %98
  %100 = select i1 %99, i32 %7, i32 0
  %101 = sub i32 %97, %100
  %102 = getelementptr inbounds %struct.frame_store, ptr %91, i64 0, i32 7
  store i32 %101, ptr %102, align 4
  %103 = and i32 %93, 1
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %111, label %105

105:                                              ; preds = %95
  %106 = shl nsw i32 %101, 1
  %107 = or i32 %106, %74
  %108 = getelementptr inbounds %struct.frame_store, ptr %91, i64 0, i32 13
  %109 = load ptr, ptr %108, align 8, !tbaa !928
  %110 = getelementptr inbounds %struct.storable_picture, ptr %109, i64 0, i32 11
  store i32 %107, ptr %110, align 8, !tbaa !342
  br label %111

111:                                              ; preds = %105, %95
  %112 = and i32 %93, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %120, label %114

114:                                              ; preds = %111
  %115 = shl nsw i32 %101, 1
  %116 = or i32 %115, %72
  %117 = getelementptr inbounds %struct.frame_store, ptr %91, i64 0, i32 14
  %118 = load ptr, ptr %117, align 8, !tbaa !929
  %119 = getelementptr inbounds %struct.storable_picture, ptr %118, i64 0, i32 11
  store i32 %116, ptr %119, align 8, !tbaa !342
  br label %120

120:                                              ; preds = %114, %111, %88
  %121 = add nuw nsw i64 %89, 1
  %122 = icmp eq i64 %121, %81
  br i1 %122, label %82, label %88, !llvm.loop !936

123:                                              ; preds = %150, %85
  %124 = phi i64 [ 0, %85 ], [ %151, %150 ]
  %125 = getelementptr inbounds ptr, ptr %86, i64 %124
  %126 = load ptr, ptr %125, align 8, !tbaa !13
  %127 = getelementptr inbounds %struct.frame_store, ptr %126, i64 0, i32 2
  %128 = load i32, ptr %127, align 8, !tbaa !937
  %129 = and i32 %128, 1
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %139, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %struct.frame_store, ptr %126, i64 0, i32 13
  %133 = load ptr, ptr %132, align 8, !tbaa !928
  %134 = getelementptr inbounds %struct.storable_picture, ptr %133, i64 0, i32 13
  %135 = load i32, ptr %134, align 8, !tbaa !934
  %136 = shl nsw i32 %135, 1
  %137 = or i32 %136, %74
  %138 = getelementptr inbounds %struct.storable_picture, ptr %133, i64 0, i32 12
  store i32 %137, ptr %138, align 4, !tbaa !399
  br label %139

139:                                              ; preds = %131, %123
  %140 = and i32 %128, 2
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %150, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %struct.frame_store, ptr %126, i64 0, i32 14
  %144 = load ptr, ptr %143, align 8, !tbaa !929
  %145 = getelementptr inbounds %struct.storable_picture, ptr %144, i64 0, i32 13
  %146 = load i32, ptr %145, align 8, !tbaa !934
  %147 = shl nsw i32 %146, 1
  %148 = or i32 %147, %72
  %149 = getelementptr inbounds %struct.storable_picture, ptr %144, i64 0, i32 12
  store i32 %148, ptr %149, align 4, !tbaa !399
  br label %150

150:                                              ; preds = %142, %139
  %151 = add nuw nsw i64 %124, 1
  %152 = icmp eq i64 %151, %87
  br i1 %152, label %153, label %123, !llvm.loop !938

153:                                              ; preds = %150, %82, %67, %17
  switch i32 %0, label %285 [
    i32 4, label %154
    i32 2, label %154
    i32 3, label %155
    i32 0, label %155
  ]

154:                                              ; preds = %153, %153
  store i32 0, ptr @listXsize, align 16, !tbaa !18
  store i32 0, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), align 4, !tbaa !18
  br label %645

155:                                              ; preds = %153, %153
  br i1 %8, label %156, label %231

156:                                              ; preds = %155
  %157 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %191, label %159

159:                                              ; preds = %156
  %160 = zext i32 %157 to i64
  %161 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  br label %162

162:                                              ; preds = %186, %159
  %163 = phi ptr [ %161, %159 ], [ %187, %186 ]
  %164 = phi i64 [ 0, %159 ], [ %189, %186 ]
  %165 = phi i32 [ 0, %159 ], [ %188, %186 ]
  %166 = getelementptr inbounds ptr, ptr %163, i64 %164
  %167 = load ptr, ptr %166, align 8, !tbaa !13
  %168 = load i32, ptr %167, align 8, !tbaa !353
  %169 = icmp eq i32 %168, 3
  br i1 %169, label %170, label %186

170:                                              ; preds = %162
  %171 = getelementptr inbounds %struct.frame_store, ptr %167, i64 0, i32 12
  %172 = load ptr, ptr %171, align 8, !tbaa !355
  %173 = getelementptr inbounds %struct.storable_picture, ptr %172, i64 0, i32 15
  %174 = load i32, ptr %173, align 8, !tbaa !346
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %186, label %176

176:                                              ; preds = %170
  %177 = getelementptr inbounds %struct.storable_picture, ptr %172, i64 0, i32 14
  %178 = load i32, ptr %177, align 4, !tbaa !356
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %186

180:                                              ; preds = %176
  %181 = load ptr, ptr @listX, align 16, !tbaa !13
  %182 = add nsw i32 %165, 1
  %183 = sext i32 %165 to i64
  %184 = getelementptr inbounds ptr, ptr %181, i64 %183
  store ptr %172, ptr %184, align 8, !tbaa !13
  %185 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  br label %186

186:                                              ; preds = %180, %176, %170, %162
  %187 = phi ptr [ %163, %176 ], [ %185, %180 ], [ %163, %170 ], [ %163, %162 ]
  %188 = phi i32 [ %165, %176 ], [ %182, %180 ], [ %165, %170 ], [ %165, %162 ]
  %189 = add nuw nsw i64 %164, 1
  %190 = icmp eq i64 %189, %160
  br i1 %190, label %191, label %162, !llvm.loop !939

191:                                              ; preds = %186, %156
  %192 = phi i32 [ 0, %156 ], [ %188, %186 ]
  %193 = load ptr, ptr @listX, align 16, !tbaa !13
  %194 = sext i32 %192 to i64
  tail call void @qsort(ptr noundef %193, i64 noundef %194, i64 noundef 8, ptr noundef nonnull @compare_pic_by_pic_num_desc.219) #46
  store i32 %192, ptr @listXsize, align 16, !tbaa !18
  %195 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %225, label %197

197:                                              ; preds = %191
  %198 = zext i32 %195 to i64
  %199 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  br label %200

200:                                              ; preds = %220, %197
  %201 = phi ptr [ %199, %197 ], [ %221, %220 ]
  %202 = phi i64 [ 0, %197 ], [ %223, %220 ]
  %203 = phi i32 [ %192, %197 ], [ %222, %220 ]
  %204 = getelementptr inbounds ptr, ptr %201, i64 %202
  %205 = load ptr, ptr %204, align 8, !tbaa !13
  %206 = load i32, ptr %205, align 8, !tbaa !353
  %207 = icmp eq i32 %206, 3
  br i1 %207, label %208, label %220

208:                                              ; preds = %200
  %209 = getelementptr inbounds %struct.frame_store, ptr %205, i64 0, i32 12
  %210 = load ptr, ptr %209, align 8, !tbaa !355
  %211 = getelementptr inbounds %struct.storable_picture, ptr %210, i64 0, i32 14
  %212 = load i32, ptr %211, align 4, !tbaa !356
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %220, label %214

214:                                              ; preds = %208
  %215 = load ptr, ptr @listX, align 16, !tbaa !13
  %216 = add nsw i32 %203, 1
  %217 = sext i32 %203 to i64
  %218 = getelementptr inbounds ptr, ptr %215, i64 %217
  store ptr %210, ptr %218, align 8, !tbaa !13
  %219 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  br label %220

220:                                              ; preds = %214, %208, %200
  %221 = phi ptr [ %219, %214 ], [ %201, %208 ], [ %201, %200 ]
  %222 = phi i32 [ %216, %214 ], [ %203, %208 ], [ %203, %200 ]
  %223 = add nuw nsw i64 %202, 1
  %224 = icmp eq i64 %223, %198
  br i1 %224, label %225, label %200, !llvm.loop !940

225:                                              ; preds = %220, %191
  %226 = phi i32 [ %192, %191 ], [ %222, %220 ]
  %227 = load ptr, ptr @listX, align 16, !tbaa !13
  %228 = getelementptr inbounds ptr, ptr %227, i64 %194
  %229 = sub nsw i32 %226, %192
  %230 = sext i32 %229 to i64
  tail call void @qsort(ptr noundef %228, i64 noundef %230, i64 noundef 8, ptr noundef nonnull @compare_pic_by_lt_pic_num_asc.220) #46
  store i32 %226, ptr @listXsize, align 16, !tbaa !18
  br label %585

231:                                              ; preds = %155
  %232 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %233 = zext i32 %232 to i64
  %234 = tail call noalias ptr @calloc(i64 noundef %233, i64 noundef 8) #45
  %235 = icmp eq ptr %234, null
  br i1 %235, label %236, label %239

236:                                              ; preds = %231
  tail call void @no_mem_exit(ptr noundef nonnull @.str.11.221) #46
  %237 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %238 = zext i32 %237 to i64
  br label %239

239:                                              ; preds = %236, %231
  %240 = phi i64 [ %238, %236 ], [ %233, %231 ]
  %241 = tail call noalias ptr @calloc(i64 noundef %240, i64 noundef 8) #45
  %242 = icmp eq ptr %241, null
  br i1 %242, label %243, label %244

243:                                              ; preds = %239
  tail call void @no_mem_exit(ptr noundef nonnull @.str.12.222) #46
  br label %244

244:                                              ; preds = %243, %239
  %245 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %266, label %247

247:                                              ; preds = %244
  %248 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %249 = zext i32 %245 to i64
  br label %250

250:                                              ; preds = %262, %247
  %251 = phi i64 [ 0, %247 ], [ %264, %262 ]
  %252 = phi i32 [ 0, %247 ], [ %263, %262 ]
  %253 = getelementptr inbounds ptr, ptr %248, i64 %251
  %254 = load ptr, ptr %253, align 8, !tbaa !13
  %255 = getelementptr inbounds %struct.frame_store, ptr %254, i64 0, i32 1
  %256 = load i32, ptr %255, align 4, !tbaa !412
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %262, label %258

258:                                              ; preds = %250
  %259 = add nsw i32 %252, 1
  %260 = sext i32 %252 to i64
  %261 = getelementptr inbounds ptr, ptr %234, i64 %260
  store ptr %254, ptr %261, align 8, !tbaa !13
  br label %262

262:                                              ; preds = %258, %250
  %263 = phi i32 [ %259, %258 ], [ %252, %250 ]
  %264 = add nuw nsw i64 %251, 1
  %265 = icmp eq i64 %264, %249
  br i1 %265, label %266, label %250, !llvm.loop !941

266:                                              ; preds = %262, %244
  %267 = phi i32 [ 0, %244 ], [ %263, %262 ]
  %268 = sext i32 %267 to i64
  tail call void @qsort(ptr noundef %234, i64 noundef %268, i64 noundef 8, ptr noundef nonnull @compare_fs_by_frame_num_desc) #46
  store i32 0, ptr @listXsize, align 16, !tbaa !18
  %269 = load ptr, ptr @listX, align 16, !tbaa !13
  tail call fastcc void @gen_pic_list_from_frame_list(i32 noundef %1, ptr noundef %234, i32 noundef %267, ptr noundef %269, ptr noundef nonnull @listXsize, i32 noundef 0) #47
  %270 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %282, label %272

272:                                              ; preds = %266
  %273 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  %274 = zext i32 %270 to i64
  br label %275

275:                                              ; preds = %275, %272
  %276 = phi i64 [ 0, %272 ], [ %279, %275 ]
  %277 = getelementptr inbounds ptr, ptr %273, i64 %276
  %278 = load ptr, ptr %277, align 8, !tbaa !13
  %279 = add nuw nsw i64 %276, 1
  %280 = getelementptr inbounds ptr, ptr %241, i64 %276
  store ptr %278, ptr %280, align 8, !tbaa !13
  %281 = icmp eq i64 %279, %274
  br i1 %281, label %282, label %275, !llvm.loop !942

282:                                              ; preds = %275, %266
  %283 = zext i32 %270 to i64
  tail call void @qsort(ptr noundef %241, i64 noundef %283, i64 noundef 8, ptr noundef nonnull @compare_fs_by_lt_pic_idx_asc) #46
  %284 = load ptr, ptr @listX, align 16, !tbaa !13
  tail call fastcc void @gen_pic_list_from_frame_list(i32 noundef %1, ptr noundef %241, i32 noundef %270, ptr noundef %284, ptr noundef nonnull @listXsize, i32 noundef 1) #47
  tail call void @free(ptr noundef %234) #46
  tail call void @free(ptr noundef %241) #46
  br label %585

285:                                              ; preds = %153
  br i1 %8, label %286, label %459

286:                                              ; preds = %285
  %287 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %328, label %289

289:                                              ; preds = %286
  %290 = zext i32 %287 to i64
  %291 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  br label %292

292:                                              ; preds = %323, %289
  %293 = phi ptr [ %291, %289 ], [ %324, %323 ]
  %294 = phi i64 [ 0, %289 ], [ %326, %323 ]
  %295 = phi i32 [ 0, %289 ], [ %325, %323 ]
  %296 = getelementptr inbounds ptr, ptr %293, i64 %294
  %297 = load ptr, ptr %296, align 8, !tbaa !13
  %298 = load i32, ptr %297, align 8, !tbaa !353
  %299 = icmp eq i32 %298, 3
  br i1 %299, label %300, label %323

300:                                              ; preds = %292
  %301 = getelementptr inbounds %struct.frame_store, ptr %297, i64 0, i32 12
  %302 = load ptr, ptr %301, align 8, !tbaa !355
  %303 = getelementptr inbounds %struct.storable_picture, ptr %302, i64 0, i32 15
  %304 = load i32, ptr %303, align 8, !tbaa !346
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %323, label %306

306:                                              ; preds = %300
  %307 = getelementptr inbounds %struct.storable_picture, ptr %302, i64 0, i32 14
  %308 = load i32, ptr %307, align 4, !tbaa !356
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %323

310:                                              ; preds = %306
  %311 = load ptr, ptr @img, align 8, !tbaa !13
  %312 = getelementptr inbounds %struct.img_par, ptr %311, i64 0, i32 55
  %313 = load i32, ptr %312, align 8, !tbaa !524
  %314 = getelementptr inbounds %struct.storable_picture, ptr %302, i64 0, i32 1
  %315 = load i32, ptr %314, align 4, !tbaa !390
  %316 = icmp slt i32 %313, %315
  br i1 %316, label %323, label %317

317:                                              ; preds = %310
  %318 = load ptr, ptr @listX, align 16, !tbaa !13
  %319 = add nsw i32 %295, 1
  %320 = sext i32 %295 to i64
  %321 = getelementptr inbounds ptr, ptr %318, i64 %320
  store ptr %302, ptr %321, align 8, !tbaa !13
  %322 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  br label %323

323:                                              ; preds = %317, %310, %306, %300, %292
  %324 = phi ptr [ %293, %306 ], [ %322, %317 ], [ %293, %310 ], [ %293, %300 ], [ %293, %292 ]
  %325 = phi i32 [ %295, %306 ], [ %319, %317 ], [ %295, %310 ], [ %295, %300 ], [ %295, %292 ]
  %326 = add nuw nsw i64 %294, 1
  %327 = icmp eq i64 %326, %290
  br i1 %327, label %328, label %292, !llvm.loop !943

328:                                              ; preds = %323, %286
  %329 = phi i32 [ 0, %286 ], [ %325, %323 ]
  %330 = load ptr, ptr @listX, align 16, !tbaa !13
  %331 = sext i32 %329 to i64
  tail call void @qsort(ptr noundef %330, i64 noundef %331, i64 noundef 8, ptr noundef nonnull @compare_pic_by_poc_desc.223) #46
  %332 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %373, label %334

334:                                              ; preds = %328
  %335 = zext i32 %332 to i64
  %336 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  br label %337

337:                                              ; preds = %368, %334
  %338 = phi ptr [ %336, %334 ], [ %369, %368 ]
  %339 = phi i64 [ 0, %334 ], [ %371, %368 ]
  %340 = phi i32 [ %329, %334 ], [ %370, %368 ]
  %341 = getelementptr inbounds ptr, ptr %338, i64 %339
  %342 = load ptr, ptr %341, align 8, !tbaa !13
  %343 = load i32, ptr %342, align 8, !tbaa !353
  %344 = icmp eq i32 %343, 3
  br i1 %344, label %345, label %368

345:                                              ; preds = %337
  %346 = getelementptr inbounds %struct.frame_store, ptr %342, i64 0, i32 12
  %347 = load ptr, ptr %346, align 8, !tbaa !355
  %348 = getelementptr inbounds %struct.storable_picture, ptr %347, i64 0, i32 15
  %349 = load i32, ptr %348, align 8, !tbaa !346
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %368, label %351

351:                                              ; preds = %345
  %352 = getelementptr inbounds %struct.storable_picture, ptr %347, i64 0, i32 14
  %353 = load i32, ptr %352, align 4, !tbaa !356
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %368

355:                                              ; preds = %351
  %356 = load ptr, ptr @img, align 8, !tbaa !13
  %357 = getelementptr inbounds %struct.img_par, ptr %356, i64 0, i32 55
  %358 = load i32, ptr %357, align 8, !tbaa !524
  %359 = getelementptr inbounds %struct.storable_picture, ptr %347, i64 0, i32 1
  %360 = load i32, ptr %359, align 4, !tbaa !390
  %361 = icmp slt i32 %358, %360
  br i1 %361, label %362, label %368

362:                                              ; preds = %355
  %363 = load ptr, ptr @listX, align 16, !tbaa !13
  %364 = add nsw i32 %340, 1
  %365 = sext i32 %340 to i64
  %366 = getelementptr inbounds ptr, ptr %363, i64 %365
  store ptr %347, ptr %366, align 8, !tbaa !13
  %367 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  br label %368

368:                                              ; preds = %362, %355, %351, %345, %337
  %369 = phi ptr [ %338, %351 ], [ %367, %362 ], [ %338, %355 ], [ %338, %345 ], [ %338, %337 ]
  %370 = phi i32 [ %340, %351 ], [ %364, %362 ], [ %340, %355 ], [ %340, %345 ], [ %340, %337 ]
  %371 = add nuw nsw i64 %339, 1
  %372 = icmp eq i64 %371, %335
  br i1 %372, label %373, label %337, !llvm.loop !944

373:                                              ; preds = %368, %328
  %374 = phi i32 [ %329, %328 ], [ %370, %368 ]
  %375 = load ptr, ptr @listX, align 16, !tbaa !13
  %376 = getelementptr inbounds ptr, ptr %375, i64 %331
  %377 = sub nsw i32 %374, %329
  %378 = sext i32 %377 to i64
  tail call void @qsort(ptr noundef %376, i64 noundef %378, i64 noundef 8, ptr noundef nonnull @compare_pic_by_poc_asc.224) #46
  %379 = icmp sgt i32 %329, 0
  br i1 %379, label %380, label %382

380:                                              ; preds = %373
  %381 = zext i32 %329 to i64
  br label %386

382:                                              ; preds = %386, %373
  %383 = icmp slt i32 %329, %374
  br i1 %383, label %384, label %408

384:                                              ; preds = %382
  %385 = sext i32 %374 to i64
  br label %398

386:                                              ; preds = %386, %380
  %387 = phi i64 [ 0, %380 ], [ %396, %386 ]
  %388 = trunc i64 %387 to i32
  %389 = load ptr, ptr @listX, align 16, !tbaa !13
  %390 = getelementptr inbounds ptr, ptr %389, i64 %387
  %391 = load ptr, ptr %390, align 8, !tbaa !13
  %392 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %393 = add nsw i32 %377, %388
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds ptr, ptr %392, i64 %394
  store ptr %391, ptr %395, align 8, !tbaa !13
  %396 = add nuw nsw i64 %387, 1
  %397 = icmp eq i64 %396, %381
  br i1 %397, label %382, label %386, !llvm.loop !945

398:                                              ; preds = %398, %384
  %399 = phi i64 [ %331, %384 ], [ %406, %398 ]
  %400 = load ptr, ptr @listX, align 16, !tbaa !13
  %401 = getelementptr inbounds ptr, ptr %400, i64 %399
  %402 = load ptr, ptr %401, align 8, !tbaa !13
  %403 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %404 = sub nsw i64 %399, %331
  %405 = getelementptr inbounds ptr, ptr %403, i64 %404
  store ptr %402, ptr %405, align 8, !tbaa !13
  %406 = add nsw i64 %399, 1
  %407 = icmp eq i64 %406, %385
  br i1 %407, label %408, label %398, !llvm.loop !946

408:                                              ; preds = %398, %382
  store i32 %374, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), align 4, !tbaa !18
  store i32 %374, ptr @listXsize, align 16, !tbaa !18
  %409 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %446, label %411

411:                                              ; preds = %408
  %412 = zext i32 %409 to i64
  %413 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  br label %414

414:                                              ; preds = %441, %411
  %415 = phi ptr [ %413, %411 ], [ %442, %441 ]
  %416 = phi i64 [ 0, %411 ], [ %444, %441 ]
  %417 = phi i32 [ %374, %411 ], [ %443, %441 ]
  %418 = getelementptr inbounds ptr, ptr %415, i64 %416
  %419 = load ptr, ptr %418, align 8, !tbaa !13
  %420 = load i32, ptr %419, align 8, !tbaa !353
  %421 = icmp eq i32 %420, 3
  br i1 %421, label %422, label %441

422:                                              ; preds = %414
  %423 = getelementptr inbounds %struct.frame_store, ptr %419, i64 0, i32 12
  %424 = load ptr, ptr %423, align 8, !tbaa !355
  %425 = getelementptr inbounds %struct.storable_picture, ptr %424, i64 0, i32 14
  %426 = load i32, ptr %425, align 4, !tbaa !356
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %441, label %428

428:                                              ; preds = %422
  %429 = load ptr, ptr @listX, align 16, !tbaa !13
  %430 = sext i32 %417 to i64
  %431 = getelementptr inbounds ptr, ptr %429, i64 %430
  store ptr %424, ptr %431, align 8, !tbaa !13
  %432 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  %433 = getelementptr inbounds ptr, ptr %432, i64 %416
  %434 = load ptr, ptr %433, align 8, !tbaa !13
  %435 = getelementptr inbounds %struct.frame_store, ptr %434, i64 0, i32 12
  %436 = load ptr, ptr %435, align 8, !tbaa !355
  %437 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %438 = add nsw i32 %417, 1
  %439 = getelementptr inbounds ptr, ptr %437, i64 %430
  store ptr %436, ptr %439, align 8, !tbaa !13
  %440 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  br label %441

441:                                              ; preds = %428, %422, %414
  %442 = phi ptr [ %440, %428 ], [ %415, %422 ], [ %415, %414 ]
  %443 = phi i32 [ %438, %428 ], [ %417, %422 ], [ %417, %414 ]
  %444 = add nuw nsw i64 %416, 1
  %445 = icmp eq i64 %444, %412
  br i1 %445, label %446, label %414, !llvm.loop !947

446:                                              ; preds = %441, %408
  %447 = phi i32 [ %374, %408 ], [ %443, %441 ]
  %448 = load ptr, ptr @listX, align 16, !tbaa !13
  %449 = sext i32 %374 to i64
  %450 = getelementptr inbounds ptr, ptr %448, i64 %449
  %451 = sub nsw i32 %447, %374
  %452 = sext i32 %451 to i64
  tail call void @qsort(ptr noundef %450, i64 noundef %452, i64 noundef 8, ptr noundef nonnull @compare_pic_by_lt_pic_num_asc.220) #46
  %453 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %454 = load i32, ptr @listXsize, align 16, !tbaa !18
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds ptr, ptr %453, i64 %455
  %457 = sub nsw i32 %447, %454
  %458 = sext i32 %457 to i64
  tail call void @qsort(ptr noundef %456, i64 noundef %458, i64 noundef 8, ptr noundef nonnull @compare_pic_by_lt_pic_num_asc.220) #46
  store i32 %447, ptr @listXsize, align 16, !tbaa !18
  br label %585

459:                                              ; preds = %285
  %460 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %461 = zext i32 %460 to i64
  %462 = tail call noalias ptr @calloc(i64 noundef %461, i64 noundef 8) #45
  %463 = icmp eq ptr %462, null
  br i1 %463, label %464, label %467

464:                                              ; preds = %459
  tail call void @no_mem_exit(ptr noundef nonnull @.str.11.221) #46
  %465 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %466 = zext i32 %465 to i64
  br label %467

467:                                              ; preds = %464, %459
  %468 = phi i64 [ %466, %464 ], [ %461, %459 ]
  %469 = tail call noalias ptr @calloc(i64 noundef %468, i64 noundef 8) #45
  %470 = icmp eq ptr %469, null
  br i1 %470, label %471, label %474

471:                                              ; preds = %467
  tail call void @no_mem_exit(ptr noundef nonnull @.str.13.225) #46
  %472 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %473 = zext i32 %472 to i64
  br label %474

474:                                              ; preds = %471, %467
  %475 = phi i64 [ %473, %471 ], [ %468, %467 ]
  %476 = tail call noalias ptr @calloc(i64 noundef %475, i64 noundef 8) #45
  %477 = icmp eq ptr %476, null
  br i1 %477, label %478, label %479

478:                                              ; preds = %474
  tail call void @no_mem_exit(ptr noundef nonnull @.str.12.222) #46
  br label %479

479:                                              ; preds = %478, %474
  store i32 0, ptr @listXsize, align 16, !tbaa !18
  store i32 1, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), align 4, !tbaa !18
  %480 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %507, label %482

482:                                              ; preds = %479
  %483 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %484 = load ptr, ptr @img, align 8
  %485 = getelementptr inbounds %struct.img_par, ptr %484, i64 0, i32 73
  %486 = zext i32 %480 to i64
  br label %487

487:                                              ; preds = %503, %482
  %488 = phi i64 [ 0, %482 ], [ %505, %503 ]
  %489 = phi i32 [ 0, %482 ], [ %504, %503 ]
  %490 = getelementptr inbounds ptr, ptr %483, i64 %488
  %491 = load ptr, ptr %490, align 8, !tbaa !13
  %492 = load i32, ptr %491, align 8, !tbaa !353
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %503, label %494

494:                                              ; preds = %487
  %495 = load i32, ptr %485, align 8, !tbaa !523
  %496 = getelementptr inbounds %struct.frame_store, ptr %491, i64 0, i32 10
  %497 = load i32, ptr %496, align 8, !tbaa !403
  %498 = icmp slt i32 %495, %497
  br i1 %498, label %503, label %499

499:                                              ; preds = %494
  %500 = add nsw i32 %489, 1
  %501 = sext i32 %489 to i64
  %502 = getelementptr inbounds ptr, ptr %462, i64 %501
  store ptr %491, ptr %502, align 8, !tbaa !13
  br label %503

503:                                              ; preds = %499, %494, %487
  %504 = phi i32 [ %500, %499 ], [ %489, %494 ], [ %489, %487 ]
  %505 = add nuw nsw i64 %488, 1
  %506 = icmp eq i64 %505, %486
  br i1 %506, label %507, label %487, !llvm.loop !948

507:                                              ; preds = %503, %479
  %508 = phi i32 [ 0, %479 ], [ %504, %503 ]
  %509 = sext i32 %508 to i64
  tail call void @qsort(ptr noundef %462, i64 noundef %509, i64 noundef 8, ptr noundef nonnull @compare_fs_by_poc_desc) #46
  %510 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %537, label %512

512:                                              ; preds = %507
  %513 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %514 = load ptr, ptr @img, align 8
  %515 = getelementptr inbounds %struct.img_par, ptr %514, i64 0, i32 73
  %516 = zext i32 %510 to i64
  br label %517

517:                                              ; preds = %533, %512
  %518 = phi i64 [ 0, %512 ], [ %535, %533 ]
  %519 = phi i32 [ %508, %512 ], [ %534, %533 ]
  %520 = getelementptr inbounds ptr, ptr %513, i64 %518
  %521 = load ptr, ptr %520, align 8, !tbaa !13
  %522 = load i32, ptr %521, align 8, !tbaa !353
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %533, label %524

524:                                              ; preds = %517
  %525 = load i32, ptr %515, align 8, !tbaa !523
  %526 = getelementptr inbounds %struct.frame_store, ptr %521, i64 0, i32 10
  %527 = load i32, ptr %526, align 8, !tbaa !403
  %528 = icmp slt i32 %525, %527
  br i1 %528, label %529, label %533

529:                                              ; preds = %524
  %530 = add nsw i32 %519, 1
  %531 = sext i32 %519 to i64
  %532 = getelementptr inbounds ptr, ptr %462, i64 %531
  store ptr %521, ptr %532, align 8, !tbaa !13
  br label %533

533:                                              ; preds = %529, %524, %517
  %534 = phi i32 [ %530, %529 ], [ %519, %524 ], [ %519, %517 ]
  %535 = add nuw nsw i64 %518, 1
  %536 = icmp eq i64 %535, %516
  br i1 %536, label %537, label %517, !llvm.loop !949

537:                                              ; preds = %533, %507
  %538 = phi i32 [ %508, %507 ], [ %534, %533 ]
  %539 = getelementptr inbounds ptr, ptr %462, i64 %509
  %540 = sub nsw i32 %538, %508
  %541 = sext i32 %540 to i64
  tail call void @qsort(ptr noundef %539, i64 noundef %541, i64 noundef 8, ptr noundef nonnull @compare_fs_by_poc_asc) #46
  %542 = icmp sgt i32 %508, 0
  br i1 %542, label %543, label %545

543:                                              ; preds = %537
  %544 = zext i32 %508 to i64
  br label %555

545:                                              ; preds = %555, %537
  %546 = icmp slt i32 %508, %538
  br i1 %546, label %547, label %565

547:                                              ; preds = %545
  %548 = shl nsw i64 %509, 3
  %549 = getelementptr i8, ptr %462, i64 %548
  %550 = xor i32 %508, -1
  %551 = add i32 %538, %550
  %552 = zext i32 %551 to i64
  %553 = shl nuw nsw i64 %552, 3
  %554 = add nuw nsw i64 %553, 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(1) %469, ptr noundef nonnull align 8 dereferenceable(1) %549, i64 %554, i1 false), !tbaa !13
  br label %565

555:                                              ; preds = %555, %543
  %556 = phi i64 [ 0, %543 ], [ %563, %555 ]
  %557 = trunc i64 %556 to i32
  %558 = getelementptr inbounds ptr, ptr %462, i64 %556
  %559 = load ptr, ptr %558, align 8, !tbaa !13
  %560 = add nsw i32 %540, %557
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds ptr, ptr %469, i64 %561
  store ptr %559, ptr %562, align 8, !tbaa !13
  %563 = add nuw nsw i64 %556, 1
  %564 = icmp eq i64 %563, %544
  br i1 %564, label %545, label %555, !llvm.loop !950

565:                                              ; preds = %547, %545
  store i32 0, ptr @listXsize, align 16, !tbaa !18
  store i32 0, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), align 4, !tbaa !18
  %566 = load ptr, ptr @listX, align 16, !tbaa !13
  tail call fastcc void @gen_pic_list_from_frame_list(i32 noundef %1, ptr noundef %462, i32 noundef %538, ptr noundef %566, ptr noundef nonnull @listXsize, i32 noundef 0) #47
  %567 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  tail call fastcc void @gen_pic_list_from_frame_list(i32 noundef %1, ptr noundef %469, i32 noundef %538, ptr noundef %567, ptr noundef nonnull getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), i32 noundef 0) #47
  %568 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %580, label %570

570:                                              ; preds = %565
  %571 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  %572 = zext i32 %568 to i64
  br label %573

573:                                              ; preds = %573, %570
  %574 = phi i64 [ 0, %570 ], [ %577, %573 ]
  %575 = getelementptr inbounds ptr, ptr %571, i64 %574
  %576 = load ptr, ptr %575, align 8, !tbaa !13
  %577 = add nuw nsw i64 %574, 1
  %578 = getelementptr inbounds ptr, ptr %476, i64 %574
  store ptr %576, ptr %578, align 8, !tbaa !13
  %579 = icmp eq i64 %577, %572
  br i1 %579, label %580, label %573, !llvm.loop !951

580:                                              ; preds = %573, %565
  %581 = zext i32 %568 to i64
  tail call void @qsort(ptr noundef %476, i64 noundef %581, i64 noundef 8, ptr noundef nonnull @compare_fs_by_lt_pic_idx_asc) #46
  %582 = load ptr, ptr @listX, align 16, !tbaa !13
  tail call fastcc void @gen_pic_list_from_frame_list(i32 noundef %1, ptr noundef %476, i32 noundef %568, ptr noundef %582, ptr noundef nonnull @listXsize, i32 noundef 1) #47
  %583 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  tail call fastcc void @gen_pic_list_from_frame_list(i32 noundef %1, ptr noundef %476, i32 noundef %568, ptr noundef %583, ptr noundef nonnull getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), i32 noundef 1) #47
  tail call void @free(ptr noundef %462) #46
  tail call void @free(ptr noundef %469) #46
  tail call void @free(ptr noundef %476) #46
  %584 = load i32, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), align 4, !tbaa !18
  br label %585

585:                                              ; preds = %580, %446, %282, %225
  %586 = phi i32 [ %447, %446 ], [ %584, %580 ], [ 0, %282 ], [ 0, %225 ]
  %587 = load i32, ptr @listXsize, align 16
  %588 = icmp eq i32 %587, %586
  %589 = icmp sgt i32 %587, 1
  %590 = and i1 %589, %588
  br i1 %590, label %591, label %614

591:                                              ; preds = %585
  %592 = load ptr, ptr @listX, align 16, !tbaa !13
  %593 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %594 = zext i32 %586 to i64
  br label %595

595:                                              ; preds = %595, %591
  %596 = phi i64 [ 0, %591 ], [ %604, %595 ]
  %597 = phi i32 [ 0, %591 ], [ %603, %595 ]
  %598 = getelementptr inbounds ptr, ptr %592, i64 %596
  %599 = load ptr, ptr %598, align 8, !tbaa !13
  %600 = getelementptr inbounds ptr, ptr %593, i64 %596
  %601 = load ptr, ptr %600, align 8, !tbaa !13
  %602 = icmp eq ptr %599, %601
  %603 = select i1 %602, i32 %597, i32 1
  %604 = add nuw nsw i64 %596, 1
  %605 = icmp eq i64 %604, %594
  br i1 %605, label %606, label %595, !llvm.loop !952

606:                                              ; preds = %595
  %.lcssa = phi i32 [ %603, %595 ]
  %607 = icmp eq i32 %.lcssa, 0
  br i1 %607, label %608, label %614

608:                                              ; preds = %606
  %609 = load ptr, ptr %593, align 8, !tbaa !13
  %610 = getelementptr inbounds ptr, ptr %593, i64 1
  %611 = load ptr, ptr %610, align 8, !tbaa !13
  store ptr %611, ptr %593, align 8, !tbaa !13
  %612 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %613 = getelementptr inbounds ptr, ptr %612, i64 1
  store ptr %609, ptr %613, align 8, !tbaa !13
  br label %614

614:                                              ; preds = %608, %606, %585
  %615 = load ptr, ptr @img, align 8, !tbaa !13
  %616 = getelementptr inbounds %struct.img_par, ptr %615, i64 0, i32 47
  %617 = load i32, ptr %616, align 8, !tbaa !466
  %618 = tail call i32 @llvm.smin.i32(i32 %587, i32 %617)
  store i32 %618, ptr @listXsize, align 16, !tbaa !18
  %619 = getelementptr inbounds %struct.img_par, ptr %615, i64 0, i32 48
  %620 = load i32, ptr %619, align 4, !tbaa !467
  %621 = tail call i32 @llvm.smin.i32(i32 %586, i32 %620)
  store i32 %621, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), align 4, !tbaa !18
  %622 = icmp ult i32 %618, 33
  br i1 %622, label %623, label %625

623:                                              ; preds = %614
  %624 = zext i32 %618 to i64
  br label %629

625:                                              ; preds = %629, %614
  %626 = icmp ult i32 %621, 33
  br i1 %626, label %627, label %645

627:                                              ; preds = %625
  %628 = zext i32 %621 to i64
  br label %637

629:                                              ; preds = %629, %623
  %630 = phi i64 [ %624, %623 ], [ %634, %629 ]
  %631 = load ptr, ptr @no_reference_picture, align 8, !tbaa !13
  %632 = load ptr, ptr @listX, align 16, !tbaa !13
  %633 = getelementptr inbounds ptr, ptr %632, i64 %630
  store ptr %631, ptr %633, align 8, !tbaa !13
  %634 = add nuw nsw i64 %630, 1
  %635 = and i64 %634, 4294967295
  %636 = icmp eq i64 %635, 33
  br i1 %636, label %625, label %629, !llvm.loop !953

637:                                              ; preds = %637, %627
  %638 = phi i64 [ %628, %627 ], [ %642, %637 ]
  %639 = load ptr, ptr @no_reference_picture, align 8, !tbaa !13
  %640 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %641 = getelementptr inbounds ptr, ptr %640, i64 %638
  store ptr %639, ptr %641, align 8, !tbaa !13
  %642 = add nuw nsw i64 %638, 1
  %643 = and i64 %642, 4294967295
  %644 = icmp eq i64 %643, 33
  br i1 %644, label %645, label %637, !llvm.loop !954

645:                                              ; preds = %637, %625, %154
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @compare_pic_by_pic_num_desc.219(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #8 {
  %3 = load ptr, ptr %0, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 11
  %5 = load i32, ptr %4, align 8, !tbaa !342
  %6 = load ptr, ptr %1, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 11
  %8 = load i32, ptr %7, align 8, !tbaa !342
  %9 = icmp slt i32 %5, %8
  %10 = icmp sgt i32 %5, %8
  %11 = sext i1 %10 to i32
  %12 = select i1 %9, i32 1, i32 %11
  ret i32 %12
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @compare_pic_by_lt_pic_num_asc.220(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #8 {
  %3 = load ptr, ptr %0, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 12
  %5 = load i32, ptr %4, align 4, !tbaa !399
  %6 = load ptr, ptr %1, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 12
  %8 = load i32, ptr %7, align 4, !tbaa !399
  %9 = icmp slt i32 %5, %8
  %10 = icmp sgt i32 %5, %8
  %11 = zext i1 %10 to i32
  %12 = select i1 %9, i32 -1, i32 %11
  ret i32 %12
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @compare_fs_by_frame_num_desc(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #8 {
  %3 = load ptr, ptr %0, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.frame_store, ptr %3, i64 0, i32 7
  %5 = load i32, ptr %4, align 4, !tbaa !387
  %6 = load ptr, ptr %1, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.frame_store, ptr %6, i64 0, i32 7
  %8 = load i32, ptr %7, align 4, !tbaa !387
  %9 = icmp slt i32 %5, %8
  %10 = icmp sgt i32 %5, %8
  %11 = sext i1 %10 to i32
  %12 = select i1 %9, i32 1, i32 %11
  ret i32 %12
}

; Function Attrs: nounwind optsize uwtable
define internal fastcc void @gen_pic_list_from_frame_list(i32 noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr nocapture noundef writeonly %3, ptr nocapture noundef %4, i32 noundef %5) unnamed_addr #0 {
  %7 = icmp eq i32 %5, 0
  %8 = select i1 %7, ptr @is_short_ref, ptr @is_long_ref
  %9 = icmp eq i32 %0, 1
  br i1 %9, label %10, label %82

10:                                               ; preds = %6
  %11 = icmp sgt i32 %2, 0
  br i1 %11, label %12, label %160

12:                                               ; preds = %77, %10
  %13 = phi i32 [ %78, %77 ], [ 0, %10 ]
  %14 = phi i32 [ %46, %77 ], [ 0, %10 ]
  %15 = icmp slt i32 %14, %2
  br i1 %15, label %16, label %45

16:                                               ; preds = %12
  %17 = sext i32 %14 to i64
  br label %18

18:                                               ; preds = %41, %16
  %19 = phi i64 [ %17, %16 ], [ %42, %41 ]
  %20 = getelementptr inbounds ptr, ptr %1, i64 %19
  %21 = load ptr, ptr %20, align 8, !tbaa !13
  %22 = load i32, ptr %21, align 8, !tbaa !353
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.frame_store, ptr %21, i64 0, i32 13
  %27 = load ptr, ptr %26, align 8, !tbaa !928
  %28 = tail call i32 %8(ptr noundef %27) #46, !callees !955
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %41, label %30

30:                                               ; preds = %25
  %.lcssa2 = phi i64 [ %19, %25 ]
  %31 = getelementptr inbounds ptr, ptr %1, i64 %.lcssa2
  %32 = trunc i64 %.lcssa2 to i32
  %33 = load ptr, ptr %31, align 8, !tbaa !13
  %34 = getelementptr inbounds %struct.frame_store, ptr %33, i64 0, i32 13
  %35 = load ptr, ptr %34, align 8, !tbaa !928
  %36 = load i32, ptr %4, align 4, !tbaa !18
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds ptr, ptr %3, i64 %37
  store ptr %35, ptr %38, align 8, !tbaa !13
  %39 = add nsw i32 %36, 1
  store i32 %39, ptr %4, align 4, !tbaa !18
  %40 = add nsw i32 %32, 1
  br label %45

41:                                               ; preds = %25, %18
  %42 = add nsw i64 %19, 1
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %43, %2
  br i1 %44, label %45, label %18, !llvm.loop !956

45:                                               ; preds = %41, %30, %12
  %46 = phi i32 [ %40, %30 ], [ %14, %12 ], [ %2, %41 ]
  %47 = icmp slt i32 %13, %2
  br i1 %47, label %48, label %77

48:                                               ; preds = %45
  %49 = sext i32 %13 to i64
  br label %50

50:                                               ; preds = %73, %48
  %51 = phi i64 [ %49, %48 ], [ %74, %73 ]
  %52 = getelementptr inbounds ptr, ptr %1, i64 %51
  %53 = load ptr, ptr %52, align 8, !tbaa !13
  %54 = load i32, ptr %53, align 8, !tbaa !353
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %73, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %struct.frame_store, ptr %53, i64 0, i32 14
  %59 = load ptr, ptr %58, align 8, !tbaa !929
  %60 = tail call i32 %8(ptr noundef %59) #46, !callees !955
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %73, label %62

62:                                               ; preds = %57
  %.lcssa3 = phi i64 [ %51, %57 ]
  %63 = getelementptr inbounds ptr, ptr %1, i64 %.lcssa3
  %64 = trunc i64 %.lcssa3 to i32
  %65 = load ptr, ptr %63, align 8, !tbaa !13
  %66 = getelementptr inbounds %struct.frame_store, ptr %65, i64 0, i32 14
  %67 = load ptr, ptr %66, align 8, !tbaa !929
  %68 = load i32, ptr %4, align 4, !tbaa !18
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds ptr, ptr %3, i64 %69
  store ptr %67, ptr %70, align 8, !tbaa !13
  %71 = add nsw i32 %68, 1
  store i32 %71, ptr %4, align 4, !tbaa !18
  %72 = add nsw i32 %64, 1
  br label %77

73:                                               ; preds = %57, %50
  %74 = add nsw i64 %51, 1
  %75 = trunc i64 %74 to i32
  %76 = icmp eq i32 %75, %2
  br i1 %76, label %77, label %50, !llvm.loop !957

77:                                               ; preds = %73, %62, %45
  %78 = phi i32 [ %72, %62 ], [ %13, %45 ], [ %2, %73 ]
  %79 = icmp slt i32 %46, %2
  %80 = icmp slt i32 %78, %2
  %81 = select i1 %79, i1 true, i1 %80
  br i1 %81, label %12, label %82, !llvm.loop !958

82:                                               ; preds = %77, %6
  %83 = phi i32 [ 0, %6 ], [ %46, %77 ]
  %84 = phi i32 [ 0, %6 ], [ %78, %77 ]
  %85 = icmp eq i32 %0, 2
  br i1 %85, label %86, label %160

86:                                               ; preds = %82
  %87 = icmp slt i32 %83, %2
  %88 = icmp slt i32 %84, %2
  %89 = select i1 %87, i1 true, i1 %88
  br i1 %89, label %90, label %160

90:                                               ; preds = %155, %86
  %91 = phi i32 [ %124, %155 ], [ %84, %86 ]
  %92 = phi i32 [ %156, %155 ], [ %83, %86 ]
  %93 = icmp slt i32 %91, %2
  br i1 %93, label %94, label %123

94:                                               ; preds = %90
  %95 = sext i32 %91 to i64
  br label %96

96:                                               ; preds = %119, %94
  %97 = phi i64 [ %95, %94 ], [ %120, %119 ]
  %98 = getelementptr inbounds ptr, ptr %1, i64 %97
  %99 = load ptr, ptr %98, align 8, !tbaa !13
  %100 = load i32, ptr %99, align 8, !tbaa !353
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %119, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %struct.frame_store, ptr %99, i64 0, i32 14
  %105 = load ptr, ptr %104, align 8, !tbaa !929
  %106 = tail call i32 %8(ptr noundef %105) #46, !callees !955
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %119, label %108

108:                                              ; preds = %103
  %.lcssa = phi i64 [ %97, %103 ]
  %109 = getelementptr inbounds ptr, ptr %1, i64 %.lcssa
  %110 = trunc i64 %.lcssa to i32
  %111 = load ptr, ptr %109, align 8, !tbaa !13
  %112 = getelementptr inbounds %struct.frame_store, ptr %111, i64 0, i32 14
  %113 = load ptr, ptr %112, align 8, !tbaa !929
  %114 = load i32, ptr %4, align 4, !tbaa !18
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds ptr, ptr %3, i64 %115
  store ptr %113, ptr %116, align 8, !tbaa !13
  %117 = add nsw i32 %114, 1
  store i32 %117, ptr %4, align 4, !tbaa !18
  %118 = add nsw i32 %110, 1
  br label %123

119:                                              ; preds = %103, %96
  %120 = add nsw i64 %97, 1
  %121 = trunc i64 %120 to i32
  %122 = icmp eq i32 %121, %2
  br i1 %122, label %123, label %96, !llvm.loop !959

123:                                              ; preds = %119, %108, %90
  %124 = phi i32 [ %118, %108 ], [ %91, %90 ], [ %2, %119 ]
  %125 = icmp slt i32 %92, %2
  br i1 %125, label %126, label %155

126:                                              ; preds = %123
  %127 = sext i32 %92 to i64
  br label %128

128:                                              ; preds = %151, %126
  %129 = phi i64 [ %127, %126 ], [ %152, %151 ]
  %130 = getelementptr inbounds ptr, ptr %1, i64 %129
  %131 = load ptr, ptr %130, align 8, !tbaa !13
  %132 = load i32, ptr %131, align 8, !tbaa !353
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %struct.frame_store, ptr %131, i64 0, i32 13
  %137 = load ptr, ptr %136, align 8, !tbaa !928
  %138 = tail call i32 %8(ptr noundef %137) #46, !callees !955
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %135
  %.lcssa1 = phi i64 [ %129, %135 ]
  %141 = getelementptr inbounds ptr, ptr %1, i64 %.lcssa1
  %142 = trunc i64 %.lcssa1 to i32
  %143 = load ptr, ptr %141, align 8, !tbaa !13
  %144 = getelementptr inbounds %struct.frame_store, ptr %143, i64 0, i32 13
  %145 = load ptr, ptr %144, align 8, !tbaa !928
  %146 = load i32, ptr %4, align 4, !tbaa !18
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds ptr, ptr %3, i64 %147
  store ptr %145, ptr %148, align 8, !tbaa !13
  %149 = add nsw i32 %146, 1
  store i32 %149, ptr %4, align 4, !tbaa !18
  %150 = add nsw i32 %142, 1
  br label %155

151:                                              ; preds = %135, %128
  %152 = add nsw i64 %129, 1
  %153 = trunc i64 %152 to i32
  %154 = icmp eq i32 %153, %2
  br i1 %154, label %155, label %128, !llvm.loop !960

155:                                              ; preds = %151, %140, %123
  %156 = phi i32 [ %150, %140 ], [ %92, %123 ], [ %2, %151 ]
  %157 = icmp slt i32 %156, %2
  %158 = icmp slt i32 %124, %2
  %159 = select i1 %157, i1 true, i1 %158
  br i1 %159, label %90, label %160, !llvm.loop !961

160:                                              ; preds = %155, %86, %82, %10
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @compare_fs_by_lt_pic_idx_asc(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #8 {
  %3 = load ptr, ptr %0, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.frame_store, ptr %3, i64 0, i32 8
  %5 = load i32, ptr %4, align 8, !tbaa !962
  %6 = load ptr, ptr %1, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.frame_store, ptr %6, i64 0, i32 8
  %8 = load i32, ptr %7, align 8, !tbaa !962
  %9 = icmp slt i32 %5, %8
  %10 = icmp sgt i32 %5, %8
  %11 = zext i1 %10 to i32
  %12 = select i1 %9, i32 -1, i32 %11
  ret i32 %12
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @compare_pic_by_poc_desc.223(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #8 {
  %3 = load ptr, ptr %0, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !390
  %6 = load ptr, ptr %1, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 1
  %8 = load i32, ptr %7, align 4, !tbaa !390
  %9 = icmp slt i32 %5, %8
  %10 = icmp sgt i32 %5, %8
  %11 = sext i1 %10 to i32
  %12 = select i1 %9, i32 1, i32 %11
  ret i32 %12
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @compare_pic_by_poc_asc.224(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #8 {
  %3 = load ptr, ptr %0, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !390
  %6 = load ptr, ptr %1, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.storable_picture, ptr %6, i64 0, i32 1
  %8 = load i32, ptr %7, align 4, !tbaa !390
  %9 = icmp slt i32 %5, %8
  %10 = icmp sgt i32 %5, %8
  %11 = zext i1 %10 to i32
  %12 = select i1 %9, i32 -1, i32 %11
  ret i32 %12
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @compare_fs_by_poc_desc(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #8 {
  %3 = load ptr, ptr %0, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.frame_store, ptr %3, i64 0, i32 10
  %5 = load i32, ptr %4, align 8, !tbaa !403
  %6 = load ptr, ptr %1, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.frame_store, ptr %6, i64 0, i32 10
  %8 = load i32, ptr %7, align 8, !tbaa !403
  %9 = icmp slt i32 %5, %8
  %10 = icmp sgt i32 %5, %8
  %11 = sext i1 %10 to i32
  %12 = select i1 %9, i32 1, i32 %11
  ret i32 %12
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @compare_fs_by_poc_asc(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #8 {
  %3 = load ptr, ptr %0, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.frame_store, ptr %3, i64 0, i32 10
  %5 = load i32, ptr %4, align 8, !tbaa !403
  %6 = load ptr, ptr %1, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.frame_store, ptr %6, i64 0, i32 10
  %8 = load i32, ptr %7, align 8, !tbaa !403
  %9 = icmp slt i32 %5, %8
  %10 = icmp sgt i32 %5, %8
  %11 = zext i1 %10 to i32
  %12 = select i1 %9, i32 -1, i32 %11
  ret i32 %12
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @init_mbaff_lists() #9 {
  br label %1

1:                                                ; preds = %16, %0
  %2 = phi i64 [ 2, %0 ], [ %18, %16 ]
  %3 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %2
  br label %9

4:                                                ; preds = %16
  %5 = load i32, ptr @listXsize, align 16, !tbaa !18
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %54

7:                                                ; preds = %4
  %8 = zext i32 %5 to i64
  br label %20

9:                                                ; preds = %9, %1
  %10 = phi i64 [ 0, %1 ], [ %14, %9 ]
  %11 = load ptr, ptr @no_reference_picture, align 8, !tbaa !13
  %12 = load ptr, ptr %3, align 8, !tbaa !13
  %13 = getelementptr inbounds ptr, ptr %12, i64 %10
  store ptr %11, ptr %13, align 8, !tbaa !13
  %14 = add nuw nsw i64 %10, 1
  %15 = icmp eq i64 %14, 33
  br i1 %15, label %16, label %9, !llvm.loop !963

16:                                               ; preds = %9
  %17 = getelementptr inbounds [6 x i32], ptr @listXsize, i64 0, i64 %2
  store i32 0, ptr %17, align 4, !tbaa !18
  %18 = add nuw nsw i64 %2, 1
  %19 = icmp eq i64 %18, 6
  br i1 %19, label %4, label %1, !llvm.loop !964

20:                                               ; preds = %20, %7
  %21 = phi i64 [ 0, %7 ], [ %52, %20 ]
  %22 = load ptr, ptr @listX, align 16, !tbaa !13
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8, !tbaa !13
  %25 = getelementptr inbounds %struct.storable_picture, ptr %24, i64 0, i32 42
  %26 = load ptr, ptr %25, align 8, !tbaa !919
  %27 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 2), align 16, !tbaa !13
  %28 = shl nuw nsw i64 %21, 1
  %29 = getelementptr inbounds ptr, ptr %27, i64 %28
  store ptr %26, ptr %29, align 8, !tbaa !13
  %30 = load ptr, ptr @listX, align 16, !tbaa !13
  %31 = getelementptr inbounds ptr, ptr %30, i64 %21
  %32 = load ptr, ptr %31, align 8, !tbaa !13
  %33 = getelementptr inbounds %struct.storable_picture, ptr %32, i64 0, i32 43
  %34 = load ptr, ptr %33, align 8, !tbaa !920
  %35 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 2), align 16, !tbaa !13
  %36 = or i64 %28, 1
  %37 = getelementptr inbounds ptr, ptr %35, i64 %36
  store ptr %34, ptr %37, align 8, !tbaa !13
  %38 = load ptr, ptr @listX, align 16, !tbaa !13
  %39 = getelementptr inbounds ptr, ptr %38, i64 %21
  %40 = load ptr, ptr %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.storable_picture, ptr %40, i64 0, i32 43
  %42 = load ptr, ptr %41, align 8, !tbaa !920
  %43 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 4), align 16, !tbaa !13
  %44 = getelementptr inbounds ptr, ptr %43, i64 %28
  store ptr %42, ptr %44, align 8, !tbaa !13
  %45 = load ptr, ptr @listX, align 16, !tbaa !13
  %46 = getelementptr inbounds ptr, ptr %45, i64 %21
  %47 = load ptr, ptr %46, align 8, !tbaa !13
  %48 = getelementptr inbounds %struct.storable_picture, ptr %47, i64 0, i32 42
  %49 = load ptr, ptr %48, align 8, !tbaa !919
  %50 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 4), align 16, !tbaa !13
  %51 = getelementptr inbounds ptr, ptr %50, i64 %36
  store ptr %49, ptr %51, align 8, !tbaa !13
  %52 = add nuw nsw i64 %21, 1
  %53 = icmp eq i64 %52, %8
  br i1 %53, label %54, label %20, !llvm.loop !965

54:                                               ; preds = %20, %4
  %55 = shl nsw i32 %5, 1
  store i32 %55, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 4), align 16, !tbaa !18
  store i32 %55, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 2), align 8, !tbaa !18
  %56 = load i32, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 1), align 4, !tbaa !18
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %94

58:                                               ; preds = %54
  %59 = zext i32 %56 to i64
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %92, %60 ]
  %62 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %63 = getelementptr inbounds ptr, ptr %62, i64 %61
  %64 = load ptr, ptr %63, align 8, !tbaa !13
  %65 = getelementptr inbounds %struct.storable_picture, ptr %64, i64 0, i32 42
  %66 = load ptr, ptr %65, align 8, !tbaa !919
  %67 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 3), align 8, !tbaa !13
  %68 = shl nuw nsw i64 %61, 1
  %69 = getelementptr inbounds ptr, ptr %67, i64 %68
  store ptr %66, ptr %69, align 8, !tbaa !13
  %70 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %71 = getelementptr inbounds ptr, ptr %70, i64 %61
  %72 = load ptr, ptr %71, align 8, !tbaa !13
  %73 = getelementptr inbounds %struct.storable_picture, ptr %72, i64 0, i32 43
  %74 = load ptr, ptr %73, align 8, !tbaa !920
  %75 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 3), align 8, !tbaa !13
  %76 = or i64 %68, 1
  %77 = getelementptr inbounds ptr, ptr %75, i64 %76
  store ptr %74, ptr %77, align 8, !tbaa !13
  %78 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %79 = getelementptr inbounds ptr, ptr %78, i64 %61
  %80 = load ptr, ptr %79, align 8, !tbaa !13
  %81 = getelementptr inbounds %struct.storable_picture, ptr %80, i64 0, i32 43
  %82 = load ptr, ptr %81, align 8, !tbaa !920
  %83 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 5), align 8, !tbaa !13
  %84 = getelementptr inbounds ptr, ptr %83, i64 %68
  store ptr %82, ptr %84, align 8, !tbaa !13
  %85 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 1), align 8, !tbaa !13
  %86 = getelementptr inbounds ptr, ptr %85, i64 %61
  %87 = load ptr, ptr %86, align 8, !tbaa !13
  %88 = getelementptr inbounds %struct.storable_picture, ptr %87, i64 0, i32 42
  %89 = load ptr, ptr %88, align 8, !tbaa !919
  %90 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @listX, i64 0, i64 5), align 8, !tbaa !13
  %91 = getelementptr inbounds ptr, ptr %90, i64 %76
  store ptr %89, ptr %91, align 8, !tbaa !13
  %92 = add nuw nsw i64 %61, 1
  %93 = icmp eq i64 %92, %59
  br i1 %93, label %94, label %60, !llvm.loop !966

94:                                               ; preds = %60, %54
  %95 = shl nsw i32 %56, 1
  store i32 %95, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 5), align 4, !tbaa !18
  store i32 %95, ptr getelementptr inbounds ([6 x i32], ptr @listXsize, i64 0, i64 3), align 4, !tbaa !18
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @reorder_ref_pic_list(ptr nocapture noundef %0, ptr nocapture noundef writeonly %1, i32 noundef %2, ptr nocapture noundef readonly %3, ptr nocapture noundef readonly %4, ptr nocapture noundef readonly %5) #0 {
  %7 = load ptr, ptr @img, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.img_par, ptr %7, i64 0, i32 36
  %9 = load i32, ptr %8, align 8, !tbaa !206
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %struct.img_par, ptr %7, i64 0, i32 86
  %12 = load i32, ptr %11, align 8, !tbaa !335
  br i1 %10, label %13, label %16

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.img_par, ptr %7, i64 0, i32 56
  %15 = load i32, ptr %14, align 4, !tbaa !336
  br label %22

16:                                               ; preds = %6
  %17 = shl nsw i32 %12, 1
  %18 = getelementptr inbounds %struct.img_par, ptr %7, i64 0, i32 56
  %19 = load i32, ptr %18, align 4, !tbaa !336
  %20 = shl i32 %19, 1
  %21 = or i32 %20, 1
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %12, %13 ], [ %17, %16 ]
  %24 = phi i32 [ %15, %13 ], [ %21, %16 ]
  %25 = load i32, ptr %3, align 4, !tbaa !18
  %26 = icmp eq i32 %25, 3
  %27 = add i32 %2, 1
  br i1 %26, label %268, label %28

28:                                               ; preds = %22
  %29 = sext i32 %27 to i64
  %30 = sext i32 %2 to i64
  br label %31

31:                                               ; preds = %261, %28
  %32 = phi i64 [ 0, %28 ], [ %264, %261 ]
  %33 = phi i32 [ %25, %28 ], [ %266, %261 ]
  %34 = phi ptr [ %3, %28 ], [ %265, %261 ]
  %35 = phi i32 [ %24, %28 ], [ %263, %261 ]
  %36 = phi i32 [ 0, %28 ], [ %262, %261 ]
  %37 = icmp sgt i32 %33, 3
  br i1 %37, label %38, label %40

38:                                               ; preds = %31
  tail call void @error(ptr noundef nonnull @.str.14.230, i32 noundef 500) #46
  %39 = load i32, ptr %34, align 4, !tbaa !18
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %33, %31 ]
  %42 = icmp slt i32 %41, 2
  br i1 %42, label %43, label %159

43:                                               ; preds = %40
  %44 = icmp eq i32 %41, 0
  %45 = getelementptr inbounds i32, ptr %4, i64 %32
  %46 = load i32, ptr %45, align 4, !tbaa !18
  br i1 %44, label %47, label %53

47:                                               ; preds = %43
  %48 = xor i32 %46, -1
  %49 = add i32 %35, %48
  %50 = icmp slt i32 %49, 0
  %51 = select i1 %50, i32 %23, i32 0
  %52 = add nsw i32 %51, %49
  br label %59

53:                                               ; preds = %43
  %54 = add i32 %35, 1
  %55 = add i32 %54, %46
  %56 = icmp slt i32 %55, %23
  %57 = select i1 %56, i32 0, i32 %23
  %58 = sub nsw i32 %55, %57
  br label %59

59:                                               ; preds = %53, %47
  %60 = phi i32 [ %52, %47 ], [ %58, %53 ]
  %61 = icmp sgt i32 %60, %24
  %62 = select i1 %61, i32 %23, i32 0
  %63 = sub nsw i32 %60, %62
  %64 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %120, label %66

66:                                               ; preds = %59
  %67 = load ptr, ptr @img, align 8, !tbaa !13
  %68 = getelementptr inbounds %struct.img_par, ptr %67, i64 0, i32 36
  %69 = load i32, ptr %68, align 8, !tbaa !206
  %70 = icmp eq i32 %69, 0
  %71 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8
  %72 = zext i32 %64 to i64
  br label %73

73:                                               ; preds = %117, %66
  %74 = phi i64 [ 0, %66 ], [ %118, %117 ]
  %75 = getelementptr inbounds ptr, ptr %71, i64 %74
  %76 = load ptr, ptr %75, align 8, !tbaa !13
  %77 = getelementptr inbounds %struct.frame_store, ptr %76, i64 0, i32 1
  %78 = load i32, ptr %77, align 4, !tbaa !412
  br i1 %70, label %79, label %91

79:                                               ; preds = %73
  %80 = icmp eq i32 %78, 3
  br i1 %80, label %81, label %117

81:                                               ; preds = %79
  %82 = getelementptr inbounds %struct.frame_store, ptr %76, i64 0, i32 12
  %83 = load ptr, ptr %82, align 8, !tbaa !355
  %84 = getelementptr inbounds %struct.storable_picture, ptr %83, i64 0, i32 14
  %85 = load i32, ptr %84, align 4, !tbaa !356
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %117

87:                                               ; preds = %81
  %88 = getelementptr inbounds %struct.storable_picture, ptr %83, i64 0, i32 11
  %89 = load i32, ptr %88, align 8, !tbaa !342
  %90 = icmp eq i32 %89, %63
  br i1 %90, label %122, label %117

91:                                               ; preds = %73
  %92 = and i32 %78, 1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %104, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %struct.frame_store, ptr %76, i64 0, i32 13
  %96 = load ptr, ptr %95, align 8, !tbaa !928
  %97 = getelementptr inbounds %struct.storable_picture, ptr %96, i64 0, i32 14
  %98 = load i32, ptr %97, align 4, !tbaa !356
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %104

100:                                              ; preds = %94
  %101 = getelementptr inbounds %struct.storable_picture, ptr %96, i64 0, i32 11
  %102 = load i32, ptr %101, align 8, !tbaa !342
  %103 = icmp eq i32 %102, %63
  br i1 %103, label %122, label %104

104:                                              ; preds = %100, %94, %91
  %105 = and i32 %78, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %117, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %struct.frame_store, ptr %76, i64 0, i32 14
  %109 = load ptr, ptr %108, align 8, !tbaa !929
  %110 = getelementptr inbounds %struct.storable_picture, ptr %109, i64 0, i32 14
  %111 = load i32, ptr %110, align 4, !tbaa !356
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %117

113:                                              ; preds = %107
  %114 = getelementptr inbounds %struct.storable_picture, ptr %109, i64 0, i32 11
  %115 = load i32, ptr %114, align 8, !tbaa !342
  %116 = icmp eq i32 %115, %63
  br i1 %116, label %122, label %117

117:                                              ; preds = %113, %107, %104, %87, %81, %79
  %118 = add nuw nsw i64 %74, 1
  %119 = icmp eq i64 %118, %72
  br i1 %119, label %120, label %73, !llvm.loop !967

120:                                              ; preds = %117, %59
  %121 = load ptr, ptr @no_reference_picture, align 8, !tbaa !13
  br label %122

122:                                              ; preds = %120, %113, %100, %87
  %123 = phi ptr [ %121, %120 ], [ %109, %113 ], [ %96, %100 ], [ %83, %87 ]
  %124 = icmp sgt i32 %36, %2
  %125 = sext i32 %36 to i64
  br i1 %124, label %255, label %126

126:                                              ; preds = %126, %122
  %127 = phi i64 [ %128, %126 ], [ %29, %122 ]
  %128 = add nsw i64 %127, -1
  %129 = getelementptr inbounds ptr, ptr %0, i64 %128
  %130 = load ptr, ptr %129, align 8, !tbaa !13
  %131 = getelementptr inbounds ptr, ptr %0, i64 %127
  store ptr %130, ptr %131, align 8, !tbaa !13
  %132 = icmp sgt i64 %128, %125
  br i1 %132, label %126, label %133, !llvm.loop !968

133:                                              ; preds = %126
  %134 = add i32 %36, 1
  %135 = getelementptr inbounds ptr, ptr %0, i64 %125
  store ptr %123, ptr %135, align 8, !tbaa !13
  %136 = sext i32 %134 to i64
  br label %137

137:                                              ; preds = %155, %133
  %138 = phi i64 [ %136, %133 ], [ %157, %155 ]
  %139 = phi i32 [ %134, %133 ], [ %156, %155 ]
  %140 = getelementptr inbounds ptr, ptr %0, i64 %138
  %141 = load ptr, ptr %140, align 8, !tbaa !13
  %142 = icmp eq ptr %141, null
  br i1 %142, label %155, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %struct.storable_picture, ptr %141, i64 0, i32 14
  %145 = load i32, ptr %144, align 4, !tbaa !356
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %151

147:                                              ; preds = %143
  %148 = getelementptr inbounds %struct.storable_picture, ptr %141, i64 0, i32 11
  %149 = load i32, ptr %148, align 8, !tbaa !342
  %150 = icmp eq i32 %149, %63
  br i1 %150, label %155, label %151

151:                                              ; preds = %147, %143
  %152 = add nsw i32 %139, 1
  %153 = sext i32 %139 to i64
  %154 = getelementptr inbounds ptr, ptr %0, i64 %153
  store ptr %141, ptr %154, align 8, !tbaa !13
  br label %155

155:                                              ; preds = %151, %147, %137
  %156 = phi i32 [ %152, %151 ], [ %139, %147 ], [ %139, %137 ]
  %157 = add nsw i64 %138, 1
  %158 = icmp sgt i64 %138, %30
  br i1 %158, label %261, label %137, !llvm.loop !969

159:                                              ; preds = %40
  %160 = getelementptr inbounds i32, ptr %5, i64 %32
  %161 = load i32, ptr %160, align 4, !tbaa !18
  %162 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %218, label %164

164:                                              ; preds = %159
  %165 = load ptr, ptr @img, align 8, !tbaa !13
  %166 = getelementptr inbounds %struct.img_par, ptr %165, i64 0, i32 36
  %167 = load i32, ptr %166, align 8, !tbaa !206
  %168 = icmp eq i32 %167, 0
  %169 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8
  %170 = zext i32 %162 to i64
  br label %171

171:                                              ; preds = %215, %164
  %172 = phi i64 [ 0, %164 ], [ %216, %215 ]
  %173 = getelementptr inbounds ptr, ptr %169, i64 %172
  %174 = load ptr, ptr %173, align 8, !tbaa !13
  %175 = getelementptr inbounds %struct.frame_store, ptr %174, i64 0, i32 1
  %176 = load i32, ptr %175, align 4, !tbaa !412
  br i1 %168, label %177, label %189

177:                                              ; preds = %171
  %178 = icmp eq i32 %176, 3
  br i1 %178, label %179, label %215

179:                                              ; preds = %177
  %180 = getelementptr inbounds %struct.frame_store, ptr %174, i64 0, i32 12
  %181 = load ptr, ptr %180, align 8, !tbaa !355
  %182 = getelementptr inbounds %struct.storable_picture, ptr %181, i64 0, i32 14
  %183 = load i32, ptr %182, align 4, !tbaa !356
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %215, label %185

185:                                              ; preds = %179
  %186 = getelementptr inbounds %struct.storable_picture, ptr %181, i64 0, i32 12
  %187 = load i32, ptr %186, align 4, !tbaa !399
  %188 = icmp eq i32 %187, %161
  br i1 %188, label %218, label %215

189:                                              ; preds = %171
  %190 = and i32 %176, 1
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %202, label %192

192:                                              ; preds = %189
  %193 = getelementptr inbounds %struct.frame_store, ptr %174, i64 0, i32 13
  %194 = load ptr, ptr %193, align 8, !tbaa !928
  %195 = getelementptr inbounds %struct.storable_picture, ptr %194, i64 0, i32 14
  %196 = load i32, ptr %195, align 4, !tbaa !356
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %202, label %198

198:                                              ; preds = %192
  %199 = getelementptr inbounds %struct.storable_picture, ptr %194, i64 0, i32 12
  %200 = load i32, ptr %199, align 4, !tbaa !399
  %201 = icmp eq i32 %200, %161
  br i1 %201, label %218, label %202

202:                                              ; preds = %198, %192, %189
  %203 = and i32 %176, 2
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %215, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %struct.frame_store, ptr %174, i64 0, i32 14
  %207 = load ptr, ptr %206, align 8, !tbaa !929
  %208 = getelementptr inbounds %struct.storable_picture, ptr %207, i64 0, i32 14
  %209 = load i32, ptr %208, align 4, !tbaa !356
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %215, label %211

211:                                              ; preds = %205
  %212 = getelementptr inbounds %struct.storable_picture, ptr %207, i64 0, i32 12
  %213 = load i32, ptr %212, align 4, !tbaa !399
  %214 = icmp eq i32 %213, %161
  br i1 %214, label %218, label %215

215:                                              ; preds = %211, %205, %202, %185, %179, %177
  %216 = add nuw nsw i64 %172, 1
  %217 = icmp eq i64 %216, %170
  br i1 %217, label %218, label %171, !llvm.loop !970

218:                                              ; preds = %215, %211, %198, %185, %159
  %219 = phi ptr [ null, %159 ], [ null, %215 ], [ %207, %211 ], [ %194, %198 ], [ %181, %185 ]
  %220 = icmp sgt i32 %36, %2
  %221 = sext i32 %36 to i64
  br i1 %220, label %255, label %222

222:                                              ; preds = %222, %218
  %223 = phi i64 [ %224, %222 ], [ %29, %218 ]
  %224 = add nsw i64 %223, -1
  %225 = getelementptr inbounds ptr, ptr %0, i64 %224
  %226 = load ptr, ptr %225, align 8, !tbaa !13
  %227 = getelementptr inbounds ptr, ptr %0, i64 %223
  store ptr %226, ptr %227, align 8, !tbaa !13
  %228 = icmp sgt i64 %224, %221
  br i1 %228, label %222, label %229, !llvm.loop !971

229:                                              ; preds = %222
  %230 = add i32 %36, 1
  %231 = getelementptr inbounds ptr, ptr %0, i64 %221
  store ptr %219, ptr %231, align 8, !tbaa !13
  %232 = sext i32 %230 to i64
  br label %233

233:                                              ; preds = %251, %229
  %234 = phi i64 [ %232, %229 ], [ %253, %251 ]
  %235 = phi i32 [ %230, %229 ], [ %252, %251 ]
  %236 = getelementptr inbounds ptr, ptr %0, i64 %234
  %237 = load ptr, ptr %236, align 8, !tbaa !13
  %238 = icmp eq ptr %237, null
  br i1 %238, label %251, label %239

239:                                              ; preds = %233
  %240 = getelementptr inbounds %struct.storable_picture, ptr %237, i64 0, i32 14
  %241 = load i32, ptr %240, align 4, !tbaa !356
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %247, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %struct.storable_picture, ptr %237, i64 0, i32 12
  %245 = load i32, ptr %244, align 4, !tbaa !399
  %246 = icmp eq i32 %245, %161
  br i1 %246, label %251, label %247

247:                                              ; preds = %243, %239
  %248 = add nsw i32 %235, 1
  %249 = sext i32 %235 to i64
  %250 = getelementptr inbounds ptr, ptr %0, i64 %249
  store ptr %237, ptr %250, align 8, !tbaa !13
  br label %251

251:                                              ; preds = %247, %243, %233
  %252 = phi i32 [ %248, %247 ], [ %235, %243 ], [ %235, %233 ]
  %253 = add nsw i64 %234, 1
  %254 = icmp sgt i64 %234, %30
  br i1 %254, label %261, label %233, !llvm.loop !972

255:                                              ; preds = %218, %122
  %256 = phi i64 [ %125, %122 ], [ %221, %218 ]
  %257 = phi ptr [ %123, %122 ], [ %219, %218 ]
  %258 = phi i32 [ %60, %122 ], [ %35, %218 ]
  %259 = add i32 %36, 1
  %260 = getelementptr inbounds ptr, ptr %0, i64 %256
  store ptr %257, ptr %260, align 8, !tbaa !13
  br label %261

261:                                              ; preds = %255, %251, %155
  %262 = phi i32 [ %259, %255 ], [ %134, %155 ], [ %230, %251 ]
  %263 = phi i32 [ %258, %255 ], [ %60, %155 ], [ %35, %251 ]
  %264 = add nuw i64 %32, 1
  %265 = getelementptr inbounds i32, ptr %3, i64 %264
  %266 = load i32, ptr %265, align 4, !tbaa !18
  %267 = icmp eq i32 %266, 3
  br i1 %267, label %268, label %31, !llvm.loop !973

268:                                              ; preds = %261, %22
  store i32 %27, ptr %1, align 4, !tbaa !18
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @update_ref_list() #9 {
  %1 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %65, label %3

3:                                                ; preds = %0
  %4 = zext i32 %1 to i64
  %5 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %6

6:                                                ; preds = %60, %3
  %7 = phi ptr [ %5, %3 ], [ %61, %60 ]
  %8 = phi i64 [ 0, %3 ], [ %63, %60 ]
  %9 = phi i32 [ 0, %3 ], [ %62, %60 ]
  %10 = getelementptr inbounds ptr, ptr %7, i64 %8
  %11 = load ptr, ptr %10, align 8, !tbaa !13
  %12 = load i32, ptr %11, align 8, !tbaa !353
  %13 = icmp eq i32 %12, 3
  br i1 %13, label %14, label %24

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.frame_store, ptr %11, i64 0, i32 12
  %16 = load ptr, ptr %15, align 8, !tbaa !355
  %17 = getelementptr inbounds %struct.storable_picture, ptr %16, i64 0, i32 15
  %18 = load i32, ptr %17, align 8, !tbaa !346
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.storable_picture, ptr %16, i64 0, i32 14
  %22 = load i32, ptr %21, align 4, !tbaa !356
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %54, label %27

24:                                               ; preds = %6
  %25 = and i32 %12, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %24, %20, %14
  %28 = getelementptr inbounds %struct.frame_store, ptr %11, i64 0, i32 13
  %29 = load ptr, ptr %28, align 8, !tbaa !928
  %30 = icmp eq ptr %29, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.storable_picture, ptr %29, i64 0, i32 15
  %33 = load i32, ptr %32, align 8, !tbaa !346
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.storable_picture, ptr %29, i64 0, i32 14
  %37 = load i32, ptr %36, align 4, !tbaa !356
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %54, label %39

39:                                               ; preds = %35, %31, %27, %24
  %40 = and i32 %12, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %60, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.frame_store, ptr %11, i64 0, i32 14
  %44 = load ptr, ptr %43, align 8, !tbaa !929
  %45 = icmp eq ptr %44, null
  br i1 %45, label %60, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.storable_picture, ptr %44, i64 0, i32 15
  %48 = load i32, ptr %47, align 8, !tbaa !346
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %60, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.storable_picture, ptr %44, i64 0, i32 14
  %52 = load i32, ptr %51, align 4, !tbaa !356
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %50, %35, %20
  %55 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %56 = add i32 %9, 1
  %57 = zext i32 %9 to i64
  %58 = getelementptr inbounds ptr, ptr %55, i64 %57
  store ptr %11, ptr %58, align 8, !tbaa !13
  %59 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %60

60:                                               ; preds = %54, %50, %46, %42, %39
  %61 = phi ptr [ %59, %54 ], [ %7, %39 ], [ %7, %42 ], [ %7, %46 ], [ %7, %50 ]
  %62 = phi i32 [ %56, %54 ], [ %9, %39 ], [ %9, %42 ], [ %9, %46 ], [ %9, %50 ]
  %63 = add nuw nsw i64 %8, 1
  %64 = icmp eq i64 %63, %4
  br i1 %64, label %65, label %6, !llvm.loop !974

65:                                               ; preds = %60, %0
  %66 = phi i32 [ 0, %0 ], [ %62, %60 ]
  store i32 %66, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %67 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %68 = icmp ult i32 %66, %67
  br i1 %68, label %69, label %78

69:                                               ; preds = %65
  %70 = zext i32 %66 to i64
  %71 = zext i32 %67 to i64
  br label %72

72:                                               ; preds = %72, %69
  %73 = phi i64 [ %70, %69 ], [ %75, %72 ]
  %74 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %75 = add nuw nsw i64 %73, 1
  %76 = getelementptr inbounds ptr, ptr %74, i64 %73
  store ptr null, ptr %76, align 8, !tbaa !13
  %77 = icmp eq i64 %75, %71
  br i1 %77, label %78, label %72, !llvm.loop !975

78:                                               ; preds = %72, %65
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @update_ltref_list() #9 {
  %1 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %65, label %3

3:                                                ; preds = %0
  %4 = zext i32 %1 to i64
  %5 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %6

6:                                                ; preds = %60, %3
  %7 = phi ptr [ %5, %3 ], [ %61, %60 ]
  %8 = phi i64 [ 0, %3 ], [ %63, %60 ]
  %9 = phi i32 [ 0, %3 ], [ %62, %60 ]
  %10 = getelementptr inbounds ptr, ptr %7, i64 %8
  %11 = load ptr, ptr %10, align 8, !tbaa !13
  %12 = load i32, ptr %11, align 8, !tbaa !353
  %13 = icmp eq i32 %12, 3
  br i1 %13, label %14, label %24

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.frame_store, ptr %11, i64 0, i32 12
  %16 = load ptr, ptr %15, align 8, !tbaa !355
  %17 = getelementptr inbounds %struct.storable_picture, ptr %16, i64 0, i32 15
  %18 = load i32, ptr %17, align 8, !tbaa !346
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.storable_picture, ptr %16, i64 0, i32 14
  %22 = load i32, ptr %21, align 4, !tbaa !356
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %54

24:                                               ; preds = %6
  %25 = and i32 %12, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %24, %20, %14
  %28 = getelementptr inbounds %struct.frame_store, ptr %11, i64 0, i32 13
  %29 = load ptr, ptr %28, align 8, !tbaa !928
  %30 = icmp eq ptr %29, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.storable_picture, ptr %29, i64 0, i32 15
  %33 = load i32, ptr %32, align 8, !tbaa !346
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.storable_picture, ptr %29, i64 0, i32 14
  %37 = load i32, ptr %36, align 4, !tbaa !356
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %54

39:                                               ; preds = %35, %31, %27, %24
  %40 = and i32 %12, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %60, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.frame_store, ptr %11, i64 0, i32 14
  %44 = load ptr, ptr %43, align 8, !tbaa !929
  %45 = icmp eq ptr %44, null
  br i1 %45, label %60, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.storable_picture, ptr %44, i64 0, i32 15
  %48 = load i32, ptr %47, align 8, !tbaa !346
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %60, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.storable_picture, ptr %44, i64 0, i32 14
  %52 = load i32, ptr %51, align 4, !tbaa !356
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %50, %35, %20
  %55 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  %56 = add i32 %9, 1
  %57 = zext i32 %9 to i64
  %58 = getelementptr inbounds ptr, ptr %55, i64 %57
  store ptr %11, ptr %58, align 8, !tbaa !13
  %59 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %60

60:                                               ; preds = %54, %50, %46, %42, %39
  %61 = phi ptr [ %59, %54 ], [ %7, %39 ], [ %7, %42 ], [ %7, %46 ], [ %7, %50 ]
  %62 = phi i32 [ %56, %54 ], [ %9, %39 ], [ %9, %42 ], [ %9, %46 ], [ %9, %50 ]
  %63 = add nuw nsw i64 %8, 1
  %64 = icmp eq i64 %63, %4
  br i1 %64, label %65, label %6, !llvm.loop !976

65:                                               ; preds = %60, %0
  %66 = phi i32 [ 0, %0 ], [ %62, %60 ]
  store i32 %66, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %67 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %68 = icmp ult i32 %66, %67
  br i1 %68, label %69, label %78

69:                                               ; preds = %65
  %70 = zext i32 %66 to i64
  %71 = zext i32 %67 to i64
  br label %72

72:                                               ; preds = %72, %69
  %73 = phi i64 [ %70, %69 ], [ %75, %72 ]
  %74 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  %75 = add nuw nsw i64 %73, 1
  %76 = getelementptr inbounds ptr, ptr %74, i64 %73
  store ptr null, ptr %76, align 8, !tbaa !13
  %77 = icmp eq i64 %75, %71
  br i1 %77, label %78, label %72, !llvm.loop !977

78:                                               ; preds = %72, %65
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @mm_update_max_long_term_frame_idx(i32 noundef %0) #9 {
  %2 = add nsw i32 %0, -1
  store i32 %2, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 8), align 4, !tbaa !978
  %3 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  br label %7

7:                                                ; preds = %21, %5
  %8 = phi i32 [ %3, %5 ], [ %22, %21 ]
  %9 = phi i32 [ %2, %5 ], [ %23, %21 ]
  %10 = phi ptr [ %6, %5 ], [ %24, %21 ]
  %11 = phi i64 [ 0, %5 ], [ %25, %21 ]
  %12 = getelementptr inbounds ptr, ptr %10, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !13
  %14 = getelementptr inbounds %struct.frame_store, ptr %13, i64 0, i32 8
  %15 = load i32, ptr %14, align 8, !tbaa !962
  %16 = icmp sgt i32 %15, %9
  br i1 %16, label %17, label %21

17:                                               ; preds = %7
  tail call fastcc void @unmark_for_long_term_reference(ptr noundef nonnull %13) #47
  %18 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  %19 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 8), align 4, !tbaa !978
  %20 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  br label %21

21:                                               ; preds = %17, %7
  %22 = phi i32 [ %8, %7 ], [ %20, %17 ]
  %23 = phi i32 [ %9, %7 ], [ %19, %17 ]
  %24 = phi ptr [ %10, %7 ], [ %18, %17 ]
  %25 = add nuw nsw i64 %11, 1
  %26 = zext i32 %22 to i64
  %27 = icmp ult i64 %25, %26
  br i1 %27, label %7, label %28, !llvm.loop !979

28:                                               ; preds = %21, %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @unmark_for_long_term_reference(ptr nocapture noundef %0) unnamed_addr #24 {
  %2 = load i32, ptr %0, align 8, !tbaa !353
  %3 = and i32 %2, 1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  %7 = load ptr, ptr %6, align 8, !tbaa !928
  %8 = icmp eq ptr %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.storable_picture, ptr %7, i64 0, i32 15
  store i32 0, ptr %10, align 8, !tbaa !346
  %11 = getelementptr inbounds %struct.storable_picture, ptr %7, i64 0, i32 14
  store i32 0, ptr %11, align 4, !tbaa !356
  br label %12

12:                                               ; preds = %9, %5, %1
  %13 = and i32 %2, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  %17 = load ptr, ptr %16, align 8, !tbaa !929
  %18 = icmp eq ptr %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.storable_picture, ptr %17, i64 0, i32 15
  store i32 0, ptr %20, align 8, !tbaa !346
  %21 = getelementptr inbounds %struct.storable_picture, ptr %17, i64 0, i32 14
  store i32 0, ptr %21, align 4, !tbaa !356
  br label %22

22:                                               ; preds = %19, %15, %12
  %23 = icmp eq i32 %2, 3
  br i1 %23, label %24, label %42

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  %26 = load ptr, ptr %25, align 8, !tbaa !928
  %27 = icmp eq ptr %26, null
  br i1 %27, label %37, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  %30 = load ptr, ptr %29, align 8, !tbaa !929
  %31 = icmp eq ptr %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.storable_picture, ptr %26, i64 0, i32 15
  store i32 0, ptr %33, align 8, !tbaa !346
  %34 = getelementptr inbounds %struct.storable_picture, ptr %26, i64 0, i32 14
  store i32 0, ptr %34, align 4, !tbaa !356
  %35 = getelementptr inbounds %struct.storable_picture, ptr %30, i64 0, i32 15
  store i32 0, ptr %35, align 8, !tbaa !346
  %36 = getelementptr inbounds %struct.storable_picture, ptr %30, i64 0, i32 14
  store i32 0, ptr %36, align 4, !tbaa !356
  br label %37

37:                                               ; preds = %32, %28, %24
  %38 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  %39 = load ptr, ptr %38, align 8, !tbaa !355
  %40 = getelementptr inbounds %struct.storable_picture, ptr %39, i64 0, i32 15
  store i32 0, ptr %40, align 8, !tbaa !346
  %41 = getelementptr inbounds %struct.storable_picture, ptr %39, i64 0, i32 14
  store i32 0, ptr %41, align 4, !tbaa !356
  br label %42

42:                                               ; preds = %37, %22
  %43 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 1
  store i32 0, ptr %43, align 4, !tbaa !412
  %44 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 2
  store i32 0, ptr %44, align 8, !tbaa !937
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @store_picture_in_dpb(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #48
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #48
  %4 = load ptr, ptr @img, align 8, !tbaa !13
  %5 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 97
  store i32 0, ptr %5, align 4, !tbaa !517
  %6 = load i32, ptr %0, align 8, !tbaa !570
  %7 = icmp eq i32 %6, 2
  %8 = zext i1 %7 to i32
  %9 = getelementptr inbounds %struct.img_par, ptr %4, i64 0, i32 98
  store i32 %8, ptr %9, align 8, !tbaa !519
  %10 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 46
  %11 = load i32, ptr %10, align 4, !tbaa !360
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %66, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 47
  %15 = load i32, ptr %14, align 8, !tbaa !980
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %55, label %17

17:                                               ; preds = %13
  %18 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %25, %17
  %21 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %37, label %23

23:                                               ; preds = %20
  %24 = zext i32 %21 to i64
  br label %42

25:                                               ; preds = %25, %17
  %26 = phi i64 [ %33, %25 ], [ 0, %17 ]
  %27 = load ptr, ptr @dpb, align 8, !tbaa !352
  %28 = getelementptr inbounds ptr, ptr %27, i64 %26
  %29 = load ptr, ptr %28, align 8, !tbaa !13
  tail call void @free_frame_store(ptr noundef %29) #47
  %30 = tail call ptr @alloc_frame_store() #47
  %31 = load ptr, ptr @dpb, align 8, !tbaa !352
  %32 = getelementptr inbounds ptr, ptr %31, i64 %26
  store ptr %30, ptr %32, align 8, !tbaa !13
  %33 = add nuw nsw i64 %26, 1
  %34 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %35 = zext i32 %34 to i64
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %25, label %20, !llvm.loop !981

37:                                               ; preds = %42, %20
  %38 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %54, label %40

40:                                               ; preds = %37
  %41 = zext i32 %38 to i64
  br label %48

42:                                               ; preds = %42, %23
  %43 = phi i64 [ 0, %23 ], [ %46, %42 ]
  %44 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %45 = getelementptr inbounds ptr, ptr %44, i64 %43
  store ptr null, ptr %45, align 8, !tbaa !13
  %46 = add nuw nsw i64 %43, 1
  %47 = icmp eq i64 %46, %24
  br i1 %47, label %37, label %42, !llvm.loop !982

48:                                               ; preds = %48, %40
  %49 = phi i64 [ 0, %40 ], [ %52, %48 ]
  %50 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  %51 = getelementptr inbounds ptr, ptr %50, i64 %49
  store ptr null, ptr %51, align 8, !tbaa !13
  %52 = add nuw nsw i64 %49, 1
  %53 = icmp eq i64 %52, %41
  br i1 %53, label %54, label %48, !llvm.loop !983

54:                                               ; preds = %48, %37
  store i32 0, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  br label %56

55:                                               ; preds = %13
  tail call void @flush_dpb() #47
  br label %56

56:                                               ; preds = %55, %54
  store ptr null, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 11), align 8, !tbaa !914
  tail call void @update_ref_list() #47
  tail call void @update_ltref_list() #47
  store i32 -2147483648, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 7), align 8, !tbaa !410
  %57 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 48
  %58 = load i32, ptr %57, align 4, !tbaa !984
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 13
  store i32 0, ptr %61, align 8, !tbaa !934
  br label %62

62:                                               ; preds = %60, %56
  %63 = phi i32 [ 0, %60 ], [ -1, %56 ]
  %64 = phi i32 [ 1, %60 ], [ 0, %56 ]
  store i32 %63, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 8), align 4
  %65 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 14
  store i32 %64, ptr %65, align 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(400) @pocs_in_dpb, i8 0, i64 400, i1 false)
  br label %558

66:                                               ; preds = %1
  %67 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 15
  %68 = load i32, ptr %67, align 8, !tbaa !346
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %558, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 49
  %72 = load i32, ptr %71, align 8, !tbaa !348
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %558, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 60
  %76 = load ptr, ptr %75, align 8, !tbaa !623
  %77 = icmp eq ptr %76, null
  br i1 %77, label %558, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 11
  %80 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 14
  %81 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 13
  %82 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 9
  br label %83

83:                                               ; preds = %519, %78
  %84 = phi ptr [ %76, %78 ], [ %522, %519 ]
  %85 = load i32, ptr %84, align 8, !tbaa !509
  switch i32 %85, label %518 [
    i32 0, label %86
    i32 1, label %91
    i32 2, label %177
    i32 3, label %267
    i32 4, label %484
    i32 5, label %487
    i32 6, label %502
  ]

86:                                               ; preds = %83
  %87 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %84, i64 0, i32 5
  %88 = load ptr, ptr %87, align 8, !tbaa !503
  %89 = icmp eq ptr %88, null
  br i1 %89, label %519, label %90

90:                                               ; preds = %86
  tail call void @error(ptr noundef nonnull @.str.23.235, i32 noundef 500) #46
  br label %519

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %84, i64 0, i32 1
  %93 = load i32, ptr %92, align 4, !tbaa !510
  %94 = load i32, ptr %0, align 8, !tbaa !570
  %95 = icmp eq i32 %94, 0
  %96 = load i32, ptr %82, align 8, !tbaa !343
  %97 = shl i32 %96, 1
  %98 = or i32 %97, 1
  %99 = select i1 %95, i32 %96, i32 %98
  %100 = xor i32 %93, -1
  %101 = add i32 %99, %100
  %102 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %176, label %104

104:                                              ; preds = %91
  %105 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8
  %106 = zext i32 %102 to i64
  br label %107

107:                                              ; preds = %173, %104
  %108 = phi i64 [ 0, %104 ], [ %174, %173 ]
  %109 = getelementptr inbounds ptr, ptr %105, i64 %108
  %110 = load ptr, ptr %109, align 8, !tbaa !13
  %111 = getelementptr inbounds %struct.frame_store, ptr %110, i64 0, i32 1
  %112 = load i32, ptr %111, align 4, !tbaa !412
  br i1 %95, label %113, label %126

113:                                              ; preds = %107
  %114 = icmp eq i32 %112, 3
  br i1 %114, label %115, label %173

115:                                              ; preds = %113
  %116 = getelementptr inbounds %struct.frame_store, ptr %110, i64 0, i32 2
  %117 = load i32, ptr %116, align 8, !tbaa !937
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %173

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.frame_store, ptr %110, i64 0, i32 12
  %121 = load ptr, ptr %120, align 8, !tbaa !355
  %122 = getelementptr inbounds %struct.storable_picture, ptr %121, i64 0, i32 11
  %123 = load i32, ptr %122, align 8, !tbaa !342
  %124 = icmp eq i32 %123, %101
  br i1 %124, label %125, label %173

125:                                              ; preds = %119
  %.lcssa28 = phi ptr [ %110, %119 ]
  tail call fastcc void @unmark_for_reference(ptr noundef nonnull %.lcssa28) #47
  br label %176

126:                                              ; preds = %107
  %127 = and i32 %112, 1
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %150, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %struct.frame_store, ptr %110, i64 0, i32 2
  %131 = load i32, ptr %130, align 8, !tbaa !937
  %132 = and i32 %131, 1
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %150

134:                                              ; preds = %129
  %135 = getelementptr inbounds %struct.frame_store, ptr %110, i64 0, i32 13
  %136 = load ptr, ptr %135, align 8, !tbaa !928
  %137 = getelementptr inbounds %struct.storable_picture, ptr %136, i64 0, i32 11
  %138 = load i32, ptr %137, align 8, !tbaa !342
  %139 = icmp eq i32 %138, %101
  br i1 %139, label %140, label %150

140:                                              ; preds = %134
  %.lcssa26 = phi ptr [ %110, %134 ]
  %.lcssa23 = phi i32 [ %112, %134 ]
  %.lcssa19 = phi ptr [ %136, %134 ]
  %141 = getelementptr inbounds %struct.frame_store, ptr %.lcssa26, i64 0, i32 1
  %142 = getelementptr inbounds %struct.storable_picture, ptr %.lcssa19, i64 0, i32 15
  store i32 0, ptr %142, align 8, !tbaa !346
  %143 = and i32 %.lcssa23, 2
  store i32 %143, ptr %141, align 4, !tbaa !412
  %144 = load i32, ptr %.lcssa26, align 8, !tbaa !353
  %145 = icmp eq i32 %144, 3
  br i1 %145, label %146, label %176

146:                                              ; preds = %140
  %147 = getelementptr inbounds %struct.frame_store, ptr %.lcssa26, i64 0, i32 12
  %148 = load ptr, ptr %147, align 8, !tbaa !355
  %149 = getelementptr inbounds %struct.storable_picture, ptr %148, i64 0, i32 15
  store i32 0, ptr %149, align 8, !tbaa !346
  br label %176

150:                                              ; preds = %134, %129, %126
  %151 = and i32 %112, 2
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %173, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %struct.frame_store, ptr %110, i64 0, i32 2
  %155 = load i32, ptr %154, align 8, !tbaa !937
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %173

158:                                              ; preds = %153
  %159 = getelementptr inbounds %struct.frame_store, ptr %110, i64 0, i32 14
  %160 = load ptr, ptr %159, align 8, !tbaa !929
  %161 = getelementptr inbounds %struct.storable_picture, ptr %160, i64 0, i32 11
  %162 = load i32, ptr %161, align 8, !tbaa !342
  %163 = icmp eq i32 %162, %101
  br i1 %163, label %164, label %173

164:                                              ; preds = %158
  %.lcssa27 = phi ptr [ %110, %158 ]
  %.lcssa22 = phi ptr [ %160, %158 ]
  %.lcssa21 = phi i32 [ %127, %158 ]
  %165 = getelementptr inbounds %struct.frame_store, ptr %.lcssa27, i64 0, i32 1
  %166 = getelementptr inbounds %struct.storable_picture, ptr %.lcssa22, i64 0, i32 15
  store i32 0, ptr %166, align 8, !tbaa !346
  store i32 %.lcssa21, ptr %165, align 4, !tbaa !412
  %167 = load i32, ptr %.lcssa27, align 8, !tbaa !353
  %168 = icmp eq i32 %167, 3
  br i1 %168, label %169, label %176

169:                                              ; preds = %164
  %170 = getelementptr inbounds %struct.frame_store, ptr %.lcssa27, i64 0, i32 12
  %171 = load ptr, ptr %170, align 8, !tbaa !355
  %172 = getelementptr inbounds %struct.storable_picture, ptr %171, i64 0, i32 15
  store i32 0, ptr %172, align 8, !tbaa !346
  br label %176

173:                                              ; preds = %158, %153, %150, %119, %115, %113
  %174 = add nuw nsw i64 %108, 1
  %175 = icmp eq i64 %174, %106
  br i1 %175, label %176, label %107, !llvm.loop !985

176:                                              ; preds = %173, %169, %164, %146, %140, %125, %91
  tail call void @update_ref_list() #47
  br label %519

177:                                              ; preds = %83
  %178 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %84, i64 0, i32 2
  %179 = load i32, ptr %178, align 8, !tbaa !511
  %180 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %266, label %182

182:                                              ; preds = %177
  %183 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  br label %184

184:                                              ; preds = %254, %182
  %185 = phi ptr [ %255, %254 ], [ %183, %182 ]
  %186 = phi i32 [ %256, %254 ], [ %180, %182 ]
  %187 = phi i64 [ %257, %254 ], [ 0, %182 ]
  %188 = load i32, ptr %0, align 8, !tbaa !570
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds ptr, ptr %185, i64 %187
  %191 = load ptr, ptr %190, align 8, !tbaa !13
  %192 = getelementptr inbounds %struct.frame_store, ptr %191, i64 0, i32 1
  %193 = load i32, ptr %192, align 4, !tbaa !412
  br i1 %189, label %194, label %209

194:                                              ; preds = %184
  %195 = icmp eq i32 %193, 3
  br i1 %195, label %196, label %254

196:                                              ; preds = %194
  %197 = getelementptr inbounds %struct.frame_store, ptr %191, i64 0, i32 2
  %198 = load i32, ptr %197, align 8, !tbaa !937
  %199 = icmp eq i32 %198, 3
  br i1 %199, label %200, label %254

200:                                              ; preds = %196
  %201 = getelementptr inbounds %struct.frame_store, ptr %191, i64 0, i32 12
  %202 = load ptr, ptr %201, align 8, !tbaa !355
  %203 = getelementptr inbounds %struct.storable_picture, ptr %202, i64 0, i32 12
  %204 = load i32, ptr %203, align 4, !tbaa !399
  %205 = icmp eq i32 %204, %179
  br i1 %205, label %206, label %254

206:                                              ; preds = %200
  tail call fastcc void @unmark_for_long_term_reference(ptr noundef nonnull %191) #47
  %207 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %208 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  br label %254

209:                                              ; preds = %184
  %210 = and i32 %193, 1
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %232, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds %struct.frame_store, ptr %191, i64 0, i32 2
  %214 = load i32, ptr %213, align 8, !tbaa !937
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %232, label %217

217:                                              ; preds = %212
  %218 = getelementptr inbounds %struct.frame_store, ptr %191, i64 0, i32 13
  %219 = load ptr, ptr %218, align 8, !tbaa !928
  %220 = getelementptr inbounds %struct.storable_picture, ptr %219, i64 0, i32 12
  %221 = load i32, ptr %220, align 4, !tbaa !399
  %222 = icmp eq i32 %221, %179
  br i1 %222, label %223, label %232

223:                                              ; preds = %217
  %.lcssa13 = phi ptr [ %191, %217 ]
  %.lcssa11 = phi i32 [ %193, %217 ]
  %.lcssa10 = phi ptr [ %219, %217 ]
  %.lcssa9 = phi i32 [ %214, %217 ]
  %224 = getelementptr inbounds %struct.frame_store, ptr %.lcssa13, i64 0, i32 1
  %225 = getelementptr inbounds %struct.frame_store, ptr %.lcssa13, i64 0, i32 2
  %226 = getelementptr inbounds %struct.storable_picture, ptr %.lcssa10, i64 0, i32 15
  store i32 0, ptr %226, align 8, !tbaa !346
  %227 = getelementptr inbounds %struct.storable_picture, ptr %.lcssa10, i64 0, i32 14
  store i32 0, ptr %227, align 4, !tbaa !356
  %228 = and i32 %.lcssa11, 2
  store i32 %228, ptr %224, align 4, !tbaa !412
  %229 = and i32 %.lcssa9, 2
  store i32 %229, ptr %225, align 8, !tbaa !937
  %230 = load i32, ptr %.lcssa13, align 8, !tbaa !353
  %231 = icmp eq i32 %230, 3
  br i1 %231, label %260, label %266

232:                                              ; preds = %217, %212, %209
  %233 = and i32 %193, 2
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %254, label %235

235:                                              ; preds = %232
  %236 = getelementptr inbounds %struct.frame_store, ptr %191, i64 0, i32 2
  %237 = load i32, ptr %236, align 8, !tbaa !937
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %254, label %240

240:                                              ; preds = %235
  %241 = getelementptr inbounds %struct.frame_store, ptr %191, i64 0, i32 14
  %242 = load ptr, ptr %241, align 8, !tbaa !929
  %243 = getelementptr inbounds %struct.storable_picture, ptr %242, i64 0, i32 12
  %244 = load i32, ptr %243, align 4, !tbaa !399
  %245 = icmp eq i32 %244, %179
  br i1 %245, label %246, label %254

246:                                              ; preds = %240
  %.lcssa18 = phi ptr [ %242, %240 ]
  %.lcssa17 = phi i32 [ %237, %240 ]
  %.lcssa16 = phi i32 [ %210, %240 ]
  %.lcssa14 = phi ptr [ %191, %240 ]
  %247 = getelementptr inbounds %struct.frame_store, ptr %.lcssa14, i64 0, i32 1
  %248 = getelementptr inbounds %struct.frame_store, ptr %.lcssa14, i64 0, i32 2
  %249 = getelementptr inbounds %struct.storable_picture, ptr %.lcssa18, i64 0, i32 15
  store i32 0, ptr %249, align 8, !tbaa !346
  %250 = getelementptr inbounds %struct.storable_picture, ptr %.lcssa18, i64 0, i32 14
  store i32 0, ptr %250, align 4, !tbaa !356
  store i32 %.lcssa16, ptr %247, align 4, !tbaa !412
  %251 = and i32 %.lcssa17, 1
  store i32 %251, ptr %248, align 8, !tbaa !937
  %252 = load i32, ptr %.lcssa14, align 8, !tbaa !353
  %253 = icmp eq i32 %252, 3
  br i1 %253, label %260, label %266

254:                                              ; preds = %240, %235, %232, %206, %200, %196, %194
  %255 = phi ptr [ %185, %200 ], [ %208, %206 ], [ %185, %196 ], [ %185, %194 ], [ %185, %240 ], [ %185, %235 ], [ %185, %232 ]
  %256 = phi i32 [ %186, %200 ], [ %207, %206 ], [ %186, %196 ], [ %186, %194 ], [ %186, %240 ], [ %186, %235 ], [ %186, %232 ]
  %257 = add nuw nsw i64 %187, 1
  %258 = zext i32 %256 to i64
  %259 = icmp ult i64 %257, %258
  br i1 %259, label %184, label %266, !llvm.loop !986

260:                                              ; preds = %246, %223
  %261 = phi ptr [ %.lcssa14, %246 ], [ %.lcssa13, %223 ]
  %262 = getelementptr inbounds %struct.frame_store, ptr %261, i64 0, i32 12
  %263 = load ptr, ptr %262, align 8, !tbaa !355
  %264 = getelementptr inbounds %struct.storable_picture, ptr %263, i64 0, i32 15
  store i32 0, ptr %264, align 8, !tbaa !346
  %265 = getelementptr inbounds %struct.storable_picture, ptr %263, i64 0, i32 14
  store i32 0, ptr %265, align 4, !tbaa !356
  br label %266

266:                                              ; preds = %260, %254, %246, %223, %177
  tail call void @update_ltref_list() #47
  br label %519

267:                                              ; preds = %83
  %268 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %84, i64 0, i32 1
  %269 = load i32, ptr %268, align 4, !tbaa !510
  %270 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %84, i64 0, i32 3
  %271 = load i32, ptr %270, align 4, !tbaa !512
  %272 = load i32, ptr %0, align 8, !tbaa !570
  %273 = icmp eq i32 %272, 0
  %274 = load i32, ptr %82, align 8, !tbaa !343
  %275 = shl i32 %274, 1
  %276 = or i32 %275, 1
  %277 = select i1 %273, i32 %274, i32 %276
  %278 = xor i32 %269, -1
  %279 = add i32 %277, %278
  br i1 %273, label %286, label %280

280:                                              ; preds = %267
  %281 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %313, label %283

283:                                              ; preds = %280
  %284 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %285 = zext i32 %281 to i64
  br label %287

286:                                              ; preds = %267
  tail call fastcc void @unmark_long_term_frame_for_reference_by_frame_idx(i32 noundef %271) #47
  br label %316

287:                                              ; preds = %310, %283
  %288 = phi i64 [ 0, %283 ], [ %311, %310 ]
  %289 = getelementptr inbounds ptr, ptr %284, i64 %288
  %290 = load ptr, ptr %289, align 8, !tbaa !13
  %291 = getelementptr inbounds %struct.frame_store, ptr %290, i64 0, i32 1
  %292 = load i32, ptr %291, align 4, !tbaa !412
  %293 = and i32 %292, 1
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %301, label %295

295:                                              ; preds = %287
  %296 = getelementptr inbounds %struct.frame_store, ptr %290, i64 0, i32 13
  %297 = load ptr, ptr %296, align 8, !tbaa !928
  %298 = getelementptr inbounds %struct.storable_picture, ptr %297, i64 0, i32 11
  %299 = load i32, ptr %298, align 8, !tbaa !342
  %300 = icmp eq i32 %299, %279
  br i1 %300, label %314, label %301

301:                                              ; preds = %295, %287
  %302 = and i32 %292, 2
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %310, label %304

304:                                              ; preds = %301
  %305 = getelementptr inbounds %struct.frame_store, ptr %290, i64 0, i32 14
  %306 = load ptr, ptr %305, align 8, !tbaa !929
  %307 = getelementptr inbounds %struct.storable_picture, ptr %306, i64 0, i32 11
  %308 = load i32, ptr %307, align 8, !tbaa !342
  %309 = icmp eq i32 %308, %279
  br i1 %309, label %314, label %310

310:                                              ; preds = %304, %301
  %311 = add nuw nsw i64 %288, 1
  %312 = icmp eq i64 %311, %285
  br i1 %312, label %313, label %287, !llvm.loop !987

313:                                              ; preds = %310, %280
  tail call void @error(ptr noundef nonnull @.str.25.236, i32 noundef 200) #46
  br label %314

314:                                              ; preds = %313, %304, %295
  %315 = phi i32 [ 0, %313 ], [ 1, %295 ], [ 2, %304 ]
  tail call fastcc void @unmark_long_term_field_for_reference_by_frame_idx(i32 noundef %315, i32 noundef %271, i32 noundef 0, i32 noundef 0, i32 noundef %279) #47
  br label %316

316:                                              ; preds = %314, %286
  %317 = load i32, ptr %0, align 8, !tbaa !570
  switch i32 %317, label %367 [
    i32 0, label %318
    i32 1, label %368
  ]

318:                                              ; preds = %316
  %319 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %365, label %321

321:                                              ; preds = %318
  %322 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %323 = zext i32 %319 to i64
  br label %324

324:                                              ; preds = %362, %321
  %325 = phi i64 [ 0, %321 ], [ %363, %362 ]
  %326 = getelementptr inbounds ptr, ptr %322, i64 %325
  %327 = load ptr, ptr %326, align 8, !tbaa !13
  %328 = getelementptr inbounds %struct.frame_store, ptr %327, i64 0, i32 1
  %329 = load i32, ptr %328, align 4, !tbaa !412
  %330 = icmp eq i32 %329, 3
  br i1 %330, label %331, label %362

331:                                              ; preds = %324
  %332 = getelementptr inbounds %struct.frame_store, ptr %327, i64 0, i32 12
  %333 = load ptr, ptr %332, align 8, !tbaa !355
  %334 = getelementptr inbounds %struct.storable_picture, ptr %333, i64 0, i32 14
  %335 = load i32, ptr %334, align 4, !tbaa !356
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %362

337:                                              ; preds = %331
  %338 = getelementptr inbounds %struct.storable_picture, ptr %333, i64 0, i32 11
  %339 = load i32, ptr %338, align 8, !tbaa !342
  %340 = icmp eq i32 %339, %279
  br i1 %340, label %341, label %362

341:                                              ; preds = %337
  %.lcssa2 = phi ptr [ %333, %337 ]
  %.lcssa1 = phi ptr [ %327, %337 ]
  %342 = getelementptr inbounds %struct.storable_picture, ptr %.lcssa2, i64 0, i32 14
  %343 = getelementptr inbounds %struct.storable_picture, ptr %.lcssa2, i64 0, i32 13
  store i32 %271, ptr %343, align 8, !tbaa !934
  %344 = getelementptr inbounds %struct.frame_store, ptr %.lcssa1, i64 0, i32 8
  store i32 %271, ptr %344, align 8, !tbaa !962
  %345 = getelementptr inbounds %struct.storable_picture, ptr %.lcssa2, i64 0, i32 12
  store i32 %271, ptr %345, align 4, !tbaa !399
  store i32 1, ptr %342, align 4, !tbaa !356
  %346 = getelementptr inbounds %struct.frame_store, ptr %.lcssa1, i64 0, i32 13
  %347 = load ptr, ptr %346, align 8, !tbaa !928
  %348 = icmp eq ptr %347, null
  br i1 %348, label %360, label %349

349:                                              ; preds = %341
  %350 = getelementptr inbounds %struct.frame_store, ptr %.lcssa1, i64 0, i32 14
  %351 = load ptr, ptr %350, align 8, !tbaa !929
  %352 = icmp eq ptr %351, null
  br i1 %352, label %360, label %353

353:                                              ; preds = %349
  %354 = getelementptr inbounds %struct.storable_picture, ptr %351, i64 0, i32 13
  store i32 %271, ptr %354, align 8, !tbaa !934
  %355 = getelementptr inbounds %struct.storable_picture, ptr %347, i64 0, i32 13
  store i32 %271, ptr %355, align 8, !tbaa !934
  %356 = getelementptr inbounds %struct.storable_picture, ptr %347, i64 0, i32 12
  store i32 %271, ptr %356, align 4, !tbaa !399
  %357 = getelementptr inbounds %struct.storable_picture, ptr %351, i64 0, i32 12
  store i32 %271, ptr %357, align 4, !tbaa !399
  %358 = getelementptr inbounds %struct.storable_picture, ptr %351, i64 0, i32 14
  store i32 1, ptr %358, align 4, !tbaa !356
  %359 = getelementptr inbounds %struct.storable_picture, ptr %347, i64 0, i32 14
  store i32 1, ptr %359, align 4, !tbaa !356
  br label %360

360:                                              ; preds = %353, %349, %341
  %361 = getelementptr inbounds %struct.frame_store, ptr %.lcssa1, i64 0, i32 2
  store i32 3, ptr %361, align 8, !tbaa !937
  br label %483

362:                                              ; preds = %337, %331, %324
  %363 = add nuw nsw i64 %325, 1
  %364 = icmp eq i64 %363, %323
  br i1 %364, label %365, label %324, !llvm.loop !988

365:                                              ; preds = %362, %318
  %366 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.36)
  br label %483

367:                                              ; preds = %316
  br label %368

368:                                              ; preds = %367, %316
  %369 = phi i32 [ 0, %367 ], [ %317, %316 ]
  %370 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %481, label %372

372:                                              ; preds = %368
  %373 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %374 = zext i32 %370 to i64
  br label %375

375:                                              ; preds = %478, %372
  %376 = phi i64 [ 0, %372 ], [ %479, %478 ]
  %377 = getelementptr inbounds ptr, ptr %373, i64 %376
  %378 = load ptr, ptr %377, align 8, !tbaa !13
  %379 = getelementptr inbounds %struct.frame_store, ptr %378, i64 0, i32 1
  %380 = load i32, ptr %379, align 4, !tbaa !412
  %381 = and i32 %380, 1
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %429, label %383

383:                                              ; preds = %375
  %384 = getelementptr inbounds %struct.frame_store, ptr %378, i64 0, i32 13
  %385 = load ptr, ptr %384, align 8, !tbaa !928
  %386 = getelementptr inbounds %struct.storable_picture, ptr %385, i64 0, i32 14
  %387 = load i32, ptr %386, align 4, !tbaa !356
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %429

389:                                              ; preds = %383
  %390 = getelementptr inbounds %struct.storable_picture, ptr %385, i64 0, i32 11
  %391 = load i32, ptr %390, align 8, !tbaa !342
  %392 = icmp eq i32 %391, %279
  br i1 %392, label %393, label %429

393:                                              ; preds = %389
  %.lcssa6 = phi i64 [ %376, %389 ]
  %.lcssa4 = phi ptr [ %378, %389 ]
  %.lcssa3 = phi ptr [ %385, %389 ]
  %394 = getelementptr inbounds %struct.frame_store, ptr %.lcssa4, i64 0, i32 2
  %395 = load i32, ptr %394, align 8, !tbaa !937
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %410, label %397

397:                                              ; preds = %393
  %398 = getelementptr inbounds %struct.frame_store, ptr %.lcssa4, i64 0, i32 8
  %399 = load i32, ptr %398, align 8, !tbaa !962
  %400 = icmp eq i32 %399, %271
  br i1 %400, label %410, label %401

401:                                              ; preds = %397
  %402 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.35)
  %403 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %404 = getelementptr inbounds ptr, ptr %403, i64 %.lcssa6
  %405 = load ptr, ptr %404, align 8, !tbaa !13
  %406 = getelementptr inbounds %struct.frame_store, ptr %405, i64 0, i32 13
  %407 = load ptr, ptr %406, align 8, !tbaa !928
  %408 = getelementptr inbounds %struct.frame_store, ptr %405, i64 0, i32 2
  %409 = load i32, ptr %408, align 8, !tbaa !937
  br label %410

410:                                              ; preds = %401, %397, %393
  %411 = phi i32 [ %409, %401 ], [ %395, %397 ], [ 0, %393 ]
  %412 = phi ptr [ %407, %401 ], [ %.lcssa3, %397 ], [ %.lcssa3, %393 ]
  %413 = phi ptr [ %405, %401 ], [ %.lcssa4, %397 ], [ %.lcssa4, %393 ]
  %414 = getelementptr inbounds %struct.storable_picture, ptr %412, i64 0, i32 13
  store i32 %271, ptr %414, align 8, !tbaa !934
  %415 = getelementptr inbounds %struct.frame_store, ptr %413, i64 0, i32 8
  store i32 %271, ptr %415, align 8, !tbaa !962
  %416 = shl nsw i32 %271, 1
  %417 = or i32 %369, %416
  %418 = getelementptr inbounds %struct.storable_picture, ptr %412, i64 0, i32 12
  store i32 %417, ptr %418, align 4, !tbaa !399
  %419 = getelementptr inbounds %struct.storable_picture, ptr %412, i64 0, i32 14
  store i32 1, ptr %419, align 4, !tbaa !356
  %420 = getelementptr inbounds %struct.frame_store, ptr %413, i64 0, i32 2
  %421 = or i32 %411, 1
  store i32 %421, ptr %420, align 8, !tbaa !937
  %422 = icmp eq i32 %421, 3
  br i1 %422, label %423, label %483

423:                                              ; preds = %410
  %424 = getelementptr inbounds %struct.frame_store, ptr %413, i64 0, i32 12
  %425 = load ptr, ptr %424, align 8, !tbaa !355
  %426 = getelementptr inbounds %struct.storable_picture, ptr %425, i64 0, i32 14
  store i32 1, ptr %426, align 4, !tbaa !356
  %427 = getelementptr inbounds %struct.storable_picture, ptr %425, i64 0, i32 12
  store i32 %271, ptr %427, align 4, !tbaa !399
  %428 = getelementptr inbounds %struct.storable_picture, ptr %425, i64 0, i32 13
  store i32 %271, ptr %428, align 8, !tbaa !934
  br label %483

429:                                              ; preds = %389, %383, %375
  %430 = and i32 %380, 2
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %478, label %432

432:                                              ; preds = %429
  %433 = getelementptr inbounds %struct.frame_store, ptr %378, i64 0, i32 14
  %434 = load ptr, ptr %433, align 8, !tbaa !929
  %435 = getelementptr inbounds %struct.storable_picture, ptr %434, i64 0, i32 14
  %436 = load i32, ptr %435, align 4, !tbaa !356
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %478

438:                                              ; preds = %432
  %439 = getelementptr inbounds %struct.storable_picture, ptr %434, i64 0, i32 11
  %440 = load i32, ptr %439, align 8, !tbaa !342
  %441 = icmp eq i32 %440, %279
  br i1 %441, label %442, label %478

442:                                              ; preds = %438
  %.lcssa8 = phi ptr [ %434, %438 ]
  %.lcssa7 = phi i64 [ %376, %438 ]
  %.lcssa5 = phi ptr [ %378, %438 ]
  %443 = getelementptr inbounds %struct.frame_store, ptr %.lcssa5, i64 0, i32 2
  %444 = load i32, ptr %443, align 8, !tbaa !937
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %459, label %446

446:                                              ; preds = %442
  %447 = getelementptr inbounds %struct.frame_store, ptr %.lcssa5, i64 0, i32 8
  %448 = load i32, ptr %447, align 8, !tbaa !962
  %449 = icmp eq i32 %448, %271
  br i1 %449, label %459, label %450

450:                                              ; preds = %446
  %451 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.35)
  %452 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %453 = getelementptr inbounds ptr, ptr %452, i64 %.lcssa7
  %454 = load ptr, ptr %453, align 8, !tbaa !13
  %455 = getelementptr inbounds %struct.frame_store, ptr %454, i64 0, i32 14
  %456 = load ptr, ptr %455, align 8, !tbaa !929
  %457 = getelementptr inbounds %struct.frame_store, ptr %454, i64 0, i32 2
  %458 = load i32, ptr %457, align 8, !tbaa !937
  br label %459

459:                                              ; preds = %450, %446, %442
  %460 = phi i32 [ %458, %450 ], [ %444, %446 ], [ 0, %442 ]
  %461 = phi ptr [ %456, %450 ], [ %.lcssa8, %446 ], [ %.lcssa8, %442 ]
  %462 = phi ptr [ %454, %450 ], [ %.lcssa5, %446 ], [ %.lcssa5, %442 ]
  %463 = getelementptr inbounds %struct.storable_picture, ptr %461, i64 0, i32 13
  store i32 %271, ptr %463, align 8, !tbaa !934
  %464 = getelementptr inbounds %struct.frame_store, ptr %462, i64 0, i32 8
  store i32 %271, ptr %464, align 8, !tbaa !962
  %465 = shl nsw i32 %271, 1
  %466 = or i32 %369, %465
  %467 = getelementptr inbounds %struct.storable_picture, ptr %461, i64 0, i32 12
  store i32 %466, ptr %467, align 4, !tbaa !399
  %468 = getelementptr inbounds %struct.storable_picture, ptr %461, i64 0, i32 14
  store i32 1, ptr %468, align 4, !tbaa !356
  %469 = getelementptr inbounds %struct.frame_store, ptr %462, i64 0, i32 2
  %470 = or i32 %460, 2
  store i32 %470, ptr %469, align 8, !tbaa !937
  %471 = icmp eq i32 %470, 3
  br i1 %471, label %472, label %483

472:                                              ; preds = %459
  %473 = getelementptr inbounds %struct.frame_store, ptr %462, i64 0, i32 12
  %474 = load ptr, ptr %473, align 8, !tbaa !355
  %475 = getelementptr inbounds %struct.storable_picture, ptr %474, i64 0, i32 14
  store i32 1, ptr %475, align 4, !tbaa !356
  %476 = getelementptr inbounds %struct.storable_picture, ptr %474, i64 0, i32 12
  store i32 %271, ptr %476, align 4, !tbaa !399
  %477 = getelementptr inbounds %struct.storable_picture, ptr %474, i64 0, i32 13
  store i32 %271, ptr %477, align 8, !tbaa !934
  br label %483

478:                                              ; preds = %438, %432, %429
  %479 = add nuw nsw i64 %376, 1
  %480 = icmp eq i64 %479, %374
  br i1 %480, label %481, label %375, !llvm.loop !989

481:                                              ; preds = %478, %368
  %482 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.237)
  br label %483

483:                                              ; preds = %481, %472, %459, %423, %410, %365, %360
  tail call void @update_ref_list() #47
  tail call void @update_ltref_list() #47
  br label %519

484:                                              ; preds = %83
  %485 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %84, i64 0, i32 4
  %486 = load i32, ptr %485, align 8, !tbaa !513
  tail call void @mm_update_max_long_term_frame_idx(i32 noundef %486) #47
  tail call void @update_ltref_list() #47
  br label %519

487:                                              ; preds = %83
  %488 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %499, label %490

490:                                              ; preds = %490, %487
  %491 = phi i64 [ %495, %490 ], [ 0, %487 ]
  %492 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %493 = getelementptr inbounds ptr, ptr %492, i64 %491
  %494 = load ptr, ptr %493, align 8, !tbaa !13
  tail call fastcc void @unmark_for_reference(ptr noundef %494) #47
  %495 = add nuw nsw i64 %491, 1
  %496 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %497 = zext i32 %496 to i64
  %498 = icmp ult i64 %495, %497
  br i1 %498, label %490, label %499, !llvm.loop !990

499:                                              ; preds = %490, %487
  tail call void @update_ref_list() #47
  tail call void @mm_update_max_long_term_frame_idx(i32 noundef 0) #47
  %500 = load ptr, ptr @img, align 8, !tbaa !13
  %501 = getelementptr inbounds %struct.img_par, ptr %500, i64 0, i32 97
  store i32 1, ptr %501, align 4, !tbaa !517
  br label %519

502:                                              ; preds = %83
  %503 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %84, i64 0, i32 3
  %504 = load i32, ptr %503, align 4, !tbaa !512
  %505 = load i32, ptr %0, align 8, !tbaa !570
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %507, label %508

507:                                              ; preds = %502
  tail call fastcc void @unmark_long_term_frame_for_reference_by_frame_idx(i32 noundef %504) #47
  br label %510

508:                                              ; preds = %502
  %509 = load i32, ptr %79, align 8, !tbaa !342
  tail call fastcc void @unmark_long_term_field_for_reference_by_frame_idx(i32 noundef %505, i32 noundef %504, i32 noundef 1, i32 noundef %509, i32 noundef 0) #47
  br label %510

510:                                              ; preds = %508, %507
  store i32 1, ptr %80, align 4, !tbaa !356
  store i32 %504, ptr %81, align 8, !tbaa !934
  %511 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %512 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %513 = add i32 %512, %511
  %514 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 10), align 4, !tbaa !913
  %515 = tail call i32 @llvm.smax.i32(i32 %514, i32 1)
  %516 = icmp sgt i32 %513, %515
  br i1 %516, label %517, label %519

517:                                              ; preds = %510
  tail call void @error(ptr noundef nonnull @.str.2.238, i32 noundef 500) #46
  br label %519

518:                                              ; preds = %83
  tail call void @error(ptr noundef nonnull @.str.24.239, i32 noundef 500) #46
  br label %519

519:                                              ; preds = %518, %517, %510, %499, %484, %483, %266, %176, %90, %86
  %520 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %84, i64 0, i32 5
  %521 = load ptr, ptr %520, align 8, !tbaa !503
  store ptr %521, ptr %75, align 8, !tbaa !623
  tail call void @free(ptr noundef %84) #46
  %522 = load ptr, ptr %75, align 8, !tbaa !623
  %523 = icmp eq ptr %522, null
  br i1 %523, label %524, label %83, !llvm.loop !991

524:                                              ; preds = %519
  %525 = load ptr, ptr @img, align 8, !tbaa !13
  %526 = getelementptr inbounds %struct.img_par, ptr %525, i64 0, i32 97
  %527 = load i32, ptr %526, align 4, !tbaa !517
  %528 = icmp eq i32 %527, 0
  br i1 %528, label %558, label %529

529:                                              ; preds = %524
  store i32 0, ptr %82, align 8, !tbaa !343
  store i32 0, ptr %79, align 8, !tbaa !342
  %530 = load i32, ptr %0, align 8, !tbaa !570
  switch i32 %530, label %531 [
    i32 1, label %534
    i32 2, label %538
    i32 0, label %542
  ]

531:                                              ; preds = %529
  %532 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 1
  %533 = load i32, ptr %532, align 4, !tbaa !390
  br label %555

534:                                              ; preds = %529
  %535 = getelementptr inbounds %struct.img_par, ptr %525, i64 0, i32 53
  store i32 0, ptr %535, align 8, !tbaa !520
  %536 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 2
  store i32 0, ptr %536, align 8, !tbaa !593
  %537 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 1
  store i32 0, ptr %537, align 4, !tbaa !390
  br label %555

538:                                              ; preds = %529
  %539 = getelementptr inbounds %struct.img_par, ptr %525, i64 0, i32 54
  store i32 0, ptr %539, align 4, !tbaa !522
  %540 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 3
  store i32 0, ptr %540, align 4, !tbaa !594
  %541 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 1
  store i32 0, ptr %541, align 4, !tbaa !390
  br label %555

542:                                              ; preds = %529
  %543 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 1
  %544 = load i32, ptr %543, align 4, !tbaa !390
  %545 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 2
  %546 = load i32, ptr %545, align 8, !tbaa !593
  %547 = sub nsw i32 %546, %544
  store i32 %547, ptr %545, align 8, !tbaa !593
  %548 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 3
  %549 = load i32, ptr %548, align 4, !tbaa !594
  %550 = sub nsw i32 %549, %544
  store i32 %550, ptr %548, align 4, !tbaa !594
  %551 = getelementptr inbounds %struct.img_par, ptr %525, i64 0, i32 53
  store i32 %547, ptr %551, align 8, !tbaa !520
  %552 = getelementptr inbounds %struct.img_par, ptr %525, i64 0, i32 54
  store i32 %550, ptr %552, align 4, !tbaa !522
  %553 = tail call i32 @llvm.smin.i32(i32 %547, i32 %550)
  store i32 %553, ptr %543, align 4, !tbaa !390
  %554 = getelementptr inbounds %struct.img_par, ptr %525, i64 0, i32 55
  store i32 %553, ptr %554, align 8, !tbaa !524
  br label %555

555:                                              ; preds = %542, %538, %534, %531
  %556 = phi i32 [ %533, %531 ], [ %553, %542 ], [ 0, %538 ], [ 0, %534 ]
  %557 = getelementptr inbounds %struct.img_par, ptr %525, i64 0, i32 73
  store i32 %556, ptr %557, align 8, !tbaa !523
  tail call void @flush_dpb() #47
  br label %558

558:                                              ; preds = %555, %524, %74, %70, %66, %62
  %559 = load i32, ptr %0, align 8, !tbaa !570
  %560 = icmp eq i32 %559, 1
  br i1 %560, label %566, label %561

561:                                              ; preds = %558
  %562 = icmp eq i32 %559, 2
  %563 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 11), align 8
  %564 = icmp ne ptr %563, null
  %565 = select i1 %562, i1 %564, i1 false
  br i1 %565, label %575, label %598

566:                                              ; preds = %558
  %567 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 11), align 8, !tbaa !914
  %568 = icmp eq ptr %567, null
  br i1 %568, label %598, label %569

569:                                              ; preds = %566
  %570 = getelementptr inbounds %struct.frame_store, ptr %567, i64 0, i32 5
  %571 = load i32, ptr %570, align 4, !tbaa !385
  %572 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 11
  %573 = load i32, ptr %572, align 8, !tbaa !342
  %574 = icmp eq i32 %571, %573
  br i1 %574, label %581, label %598

575:                                              ; preds = %561
  %576 = getelementptr inbounds %struct.frame_store, ptr %563, i64 0, i32 5
  %577 = load i32, ptr %576, align 4, !tbaa !385
  %578 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 11
  %579 = load i32, ptr %578, align 8, !tbaa !342
  %580 = icmp eq i32 %577, %579
  br i1 %580, label %584, label %598

581:                                              ; preds = %569
  %582 = load i32, ptr %567, align 8, !tbaa !353
  %583 = icmp eq i32 %582, 2
  br i1 %583, label %587, label %598

584:                                              ; preds = %575
  %585 = load i32, ptr %563, align 8, !tbaa !353
  %586 = icmp eq i32 %585, 1
  br i1 %586, label %587, label %598

587:                                              ; preds = %584, %581
  %588 = phi ptr [ %563, %584 ], [ %567, %581 ]
  %589 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 15
  %590 = load i32, ptr %589, align 8, !tbaa !346
  %591 = icmp eq i32 %590, 0
  %592 = getelementptr inbounds %struct.frame_store, ptr %588, i64 0, i32 3
  %593 = load i32, ptr %592, align 4, !tbaa !992
  %594 = icmp eq i32 %593, 0
  br i1 %591, label %596, label %595

595:                                              ; preds = %587
  br i1 %594, label %598, label %597

596:                                              ; preds = %587
  br i1 %594, label %597, label %598

597:                                              ; preds = %596, %595
  tail call fastcc void @insert_picture_in_dpb(ptr noundef nonnull %588, ptr noundef nonnull %0) #47
  tail call void @update_ref_list() #47
  tail call void @update_ltref_list() #47
  store ptr null, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 11), align 8, !tbaa !914
  br label %775

598:                                              ; preds = %596, %595, %584, %581, %575, %569, %566, %561
  %599 = load i32, ptr %10, align 4, !tbaa !360
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %601, label %638

601:                                              ; preds = %598
  %602 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 15
  %603 = load i32, ptr %602, align 8, !tbaa !346
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %638, label %605

605:                                              ; preds = %601
  %606 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 49
  %607 = load i32, ptr %606, align 8, !tbaa !348
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %609, label %638

609:                                              ; preds = %605
  %610 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %611 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 10), align 4, !tbaa !913
  %612 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %613 = sub i32 %611, %612
  %614 = icmp eq i32 %610, %613
  br i1 %614, label %615, label %636

615:                                              ; preds = %609
  %616 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %636, label %618

618:                                              ; preds = %615
  %619 = load ptr, ptr @dpb, align 8, !tbaa !352
  %620 = zext i32 %616 to i64
  br label %621

621:                                              ; preds = %633, %618
  %622 = phi i64 [ 0, %618 ], [ %634, %633 ]
  %623 = getelementptr inbounds ptr, ptr %619, i64 %622
  %624 = load ptr, ptr %623, align 8, !tbaa !13
  %625 = getelementptr inbounds %struct.frame_store, ptr %624, i64 0, i32 1
  %626 = load i32, ptr %625, align 4, !tbaa !412
  %627 = icmp eq i32 %626, 0
  br i1 %627, label %633, label %628

628:                                              ; preds = %621
  %629 = getelementptr inbounds %struct.frame_store, ptr %624, i64 0, i32 2
  %630 = load i32, ptr %629, align 8, !tbaa !937
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %632, label %633

632:                                              ; preds = %628
  %.lcssa = phi ptr [ %624, %628 ]
  tail call fastcc void @unmark_for_reference(ptr noundef nonnull %.lcssa) #47
  tail call void @update_ref_list() #47
  br label %636

633:                                              ; preds = %628, %621
  %634 = add nuw nsw i64 %622, 1
  %635 = icmp eq i64 %634, %620
  br i1 %635, label %636, label %621, !llvm.loop !993

636:                                              ; preds = %633, %632, %615, %609
  %637 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 14
  store i32 0, ptr %637, align 4, !tbaa !356
  br label %638

638:                                              ; preds = %636, %605, %601, %598
  %639 = load ptr, ptr @img, align 8, !tbaa !13
  %640 = getelementptr inbounds %struct.img_par, ptr %639, i64 0, i32 130
  %641 = load i32, ptr %640, align 4, !tbaa !364
  %642 = icmp eq i32 %641, 0
  br i1 %642, label %664, label %643

643:                                              ; preds = %638
  %644 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %661, label %646

646:                                              ; preds = %643
  %647 = load ptr, ptr @dpb, align 8, !tbaa !352
  %648 = zext i32 %644 to i64
  br label %649

649:                                              ; preds = %658, %646
  %650 = phi i64 [ 0, %646 ], [ %659, %658 ]
  %651 = getelementptr inbounds ptr, ptr %647, i64 %650
  %652 = load ptr, ptr %651, align 8, !tbaa !13
  %653 = getelementptr inbounds %struct.frame_store, ptr %652, i64 0, i32 1
  %654 = load i32, ptr %653, align 4, !tbaa !412
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %658, label %656

656:                                              ; preds = %649
  %657 = getelementptr inbounds %struct.frame_store, ptr %652, i64 0, i32 11
  store i32 1, ptr %657, align 4, !tbaa !384
  br label %658

658:                                              ; preds = %656, %649
  %659 = add nuw nsw i64 %650, 1
  %660 = icmp eq i64 %659, %648
  br i1 %660, label %661, label %649, !llvm.loop !994

661:                                              ; preds = %658, %643
  %662 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %663 = icmp eq i32 %662, %644
  br i1 %663, label %668, label %676

664:                                              ; preds = %638
  %665 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %666 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %667 = icmp eq i32 %665, %666
  br i1 %667, label %669, label %676

668:                                              ; preds = %661
  tail call void @conceal_non_ref_pics(i32 noundef 2) #46
  br label %669

669:                                              ; preds = %668, %664
  %670 = tail call fastcc i32 @remove_unused_frame_from_dpb() #47, !range !562
  %671 = load ptr, ptr @img, align 8, !tbaa !13
  %672 = getelementptr inbounds %struct.img_par, ptr %671, i64 0, i32 130
  %673 = load i32, ptr %672, align 4, !tbaa !364
  %674 = icmp eq i32 %673, 0
  br i1 %674, label %676, label %675

675:                                              ; preds = %669
  tail call void @sliding_window_poc_management(ptr noundef nonnull %0) #46
  br label %676

676:                                              ; preds = %675, %669, %664, %661
  %677 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %678 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %679 = icmp eq i32 %677, %678
  br i1 %679, label %680, label %699

680:                                              ; preds = %676
  %681 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 15
  %682 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 1
  br label %683

683:                                              ; preds = %695, %680
  %684 = load i32, ptr %681, align 8, !tbaa !346
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %686, label %695

686:                                              ; preds = %683
  call fastcc void @get_smallest_poc(ptr noundef nonnull %2, ptr noundef nonnull %3) #47
  %687 = load i32, ptr %3, align 4, !tbaa !18
  %688 = icmp eq i32 %687, -1
  br i1 %688, label %693, label %689

689:                                              ; preds = %686
  %690 = load i32, ptr %682, align 4, !tbaa !390
  %691 = load i32, ptr %2, align 4, !tbaa !18
  %692 = icmp slt i32 %690, %691
  br i1 %692, label %693, label %695

693:                                              ; preds = %689, %686
  %694 = load i32, ptr @p_out, align 4, !tbaa !18
  tail call void @direct_output(ptr noundef nonnull %0, i32 noundef %694) #46
  br label %775

695:                                              ; preds = %689, %683
  tail call fastcc void @output_one_frame_from_dpb() #47
  %696 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %697 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 3), align 8, !tbaa !405
  %698 = icmp eq i32 %696, %697
  br i1 %698, label %683, label %699, !llvm.loop !995

699:                                              ; preds = %695, %676
  %700 = phi i32 [ %677, %676 ], [ %696, %695 ]
  %701 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 15
  %702 = load i32, ptr %701, align 8, !tbaa !346
  %703 = icmp eq i32 %702, 0
  br i1 %703, label %735, label %704

704:                                              ; preds = %699
  %705 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 14
  %706 = load i32, ptr %705, align 4, !tbaa !356
  %707 = icmp eq i32 %706, 0
  %708 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8
  %709 = icmp ne i32 %708, 0
  %710 = select i1 %707, i1 %709, i1 false
  br i1 %710, label %711, label %735

711:                                              ; preds = %704
  %712 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 9
  %713 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  br label %714

714:                                              ; preds = %727, %711
  %715 = phi i32 [ %708, %711 ], [ %728, %727 ]
  %716 = phi ptr [ %713, %711 ], [ %729, %727 ]
  %717 = phi i64 [ 0, %711 ], [ %730, %727 ]
  %718 = getelementptr inbounds ptr, ptr %716, i64 %717
  %719 = load ptr, ptr %718, align 8, !tbaa !13
  %720 = getelementptr inbounds %struct.frame_store, ptr %719, i64 0, i32 5
  %721 = load i32, ptr %720, align 4, !tbaa !385
  %722 = load i32, ptr %712, align 8, !tbaa !343
  %723 = icmp eq i32 %721, %722
  br i1 %723, label %724, label %727

724:                                              ; preds = %714
  tail call void @error(ptr noundef nonnull @.str.15.240, i32 noundef 500) #46
  %725 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 1), align 8, !tbaa !400
  %726 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  br label %727

727:                                              ; preds = %724, %714
  %728 = phi i32 [ %715, %714 ], [ %726, %724 ]
  %729 = phi ptr [ %716, %714 ], [ %725, %724 ]
  %730 = add nuw nsw i64 %717, 1
  %731 = zext i32 %728 to i64
  %732 = icmp ult i64 %730, %731
  br i1 %732, label %714, label %733, !llvm.loop !996

733:                                              ; preds = %727
  %734 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  br label %735

735:                                              ; preds = %733, %704, %699
  %736 = phi i32 [ %734, %733 ], [ %700, %704 ], [ %700, %699 ]
  %737 = load ptr, ptr @dpb, align 8, !tbaa !352
  %738 = zext i32 %736 to i64
  %739 = getelementptr inbounds ptr, ptr %737, i64 %738
  %740 = load ptr, ptr %739, align 8, !tbaa !13
  tail call fastcc void @insert_picture_in_dpb(ptr noundef %740, ptr noundef nonnull %0) #47
  %741 = load i32, ptr %10, align 4, !tbaa !360
  %742 = icmp eq i32 %741, 0
  br i1 %742, label %746, label %743

743:                                              ; preds = %735
  %744 = load ptr, ptr @img, align 8, !tbaa !13
  %745 = getelementptr inbounds %struct.img_par, ptr %744, i64 0, i32 131
  store i32 0, ptr %745, align 8, !tbaa !333
  br label %746

746:                                              ; preds = %743, %735
  %747 = load i32, ptr %0, align 8, !tbaa !570
  %748 = icmp eq i32 %747, 0
  %749 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  br i1 %748, label %755, label %750

750:                                              ; preds = %746
  %751 = load ptr, ptr @dpb, align 8, !tbaa !352
  %752 = zext i32 %749 to i64
  %753 = getelementptr inbounds ptr, ptr %751, i64 %752
  %754 = load ptr, ptr %753, align 8, !tbaa !13
  br label %755

755:                                              ; preds = %750, %746
  %756 = phi ptr [ %754, %750 ], [ null, %746 ]
  store ptr %756, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 11), align 8, !tbaa !914
  %757 = add i32 %749, 1
  store i32 %757, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %758 = load ptr, ptr @img, align 8, !tbaa !13
  %759 = getelementptr inbounds %struct.img_par, ptr %758, i64 0, i32 130
  %760 = load i32, ptr %759, align 4, !tbaa !364
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %767, label %762

762:                                              ; preds = %755
  %763 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 1
  %764 = load i32, ptr %763, align 4, !tbaa !390
  %765 = zext i32 %749 to i64
  %766 = getelementptr inbounds [100 x i32], ptr @pocs_in_dpb, i64 0, i64 %765
  store i32 %764, ptr %766, align 4, !tbaa !18
  br label %767

767:                                              ; preds = %762, %755
  tail call void @update_ref_list() #47
  tail call void @update_ltref_list() #47
  %768 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %769 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 5), align 8, !tbaa !383
  %770 = add i32 %769, %768
  %771 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 10), align 4, !tbaa !913
  %772 = tail call i32 @llvm.smax.i32(i32 %771, i32 1)
  %773 = icmp sgt i32 %770, %772
  br i1 %773, label %774, label %775

774:                                              ; preds = %767
  tail call void @error(ptr noundef nonnull @.str.2.238, i32 noundef 500) #46
  br label %775

775:                                              ; preds = %774, %767, %693, %597
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @flush_dpb() #0 {
  %1 = load ptr, ptr @img, align 8, !tbaa !13
  %2 = getelementptr inbounds %struct.img_par, ptr %1, i64 0, i32 130
  %3 = load i32, ptr %2, align 4, !tbaa !364
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %0
  tail call void @conceal_non_ref_pics(i32 noundef 0) #46
  br label %6

6:                                                ; preds = %5, %0
  %7 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %9, %6
  %10 = phi i64 [ %14, %9 ], [ 0, %6 ]
  %11 = load ptr, ptr @dpb, align 8, !tbaa !352
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8, !tbaa !13
  tail call fastcc void @unmark_for_reference(ptr noundef %13) #47
  %14 = add nuw nsw i64 %10, 1
  %15 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %16 = zext i32 %15 to i64
  %17 = icmp ult i64 %14, %16
  br i1 %17, label %9, label %18, !llvm.loop !997

18:                                               ; preds = %9, %6
  br label %19

19:                                               ; preds = %19, %18
  %20 = tail call fastcc i32 @remove_unused_frame_from_dpb() #47, !range !562
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %19, !llvm.loop !998

22:                                               ; preds = %19
  %23 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %25, %22
  tail call fastcc void @output_one_frame_from_dpb() #47
  %26 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %25, !llvm.loop !999

28:                                               ; preds = %25, %22
  store i32 -2147483648, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 7), align 8, !tbaa !410
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal fastcc void @unmark_for_reference(ptr nocapture noundef %0) unnamed_addr #0 {
  %2 = load i32, ptr %0, align 8, !tbaa !353
  %3 = and i32 %2, 1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  %7 = load ptr, ptr %6, align 8, !tbaa !928
  %8 = icmp eq ptr %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.storable_picture, ptr %7, i64 0, i32 15
  store i32 0, ptr %10, align 8, !tbaa !346
  br label %11

11:                                               ; preds = %9, %5, %1
  %12 = and i32 %2, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  %16 = load ptr, ptr %15, align 8, !tbaa !929
  %17 = icmp eq ptr %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.storable_picture, ptr %16, i64 0, i32 15
  store i32 0, ptr %19, align 8, !tbaa !346
  br label %20

20:                                               ; preds = %18, %14, %11
  %21 = icmp eq i32 %2, 3
  br i1 %21, label %22, label %38

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  %24 = load ptr, ptr %23, align 8, !tbaa !928
  %25 = icmp eq ptr %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  %28 = load ptr, ptr %27, align 8, !tbaa !929
  %29 = icmp eq ptr %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.storable_picture, ptr %24, i64 0, i32 15
  store i32 0, ptr %31, align 8, !tbaa !346
  %32 = getelementptr inbounds %struct.storable_picture, ptr %28, i64 0, i32 15
  store i32 0, ptr %32, align 8, !tbaa !346
  br label %33

33:                                               ; preds = %30, %26, %22
  %34 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  %35 = load ptr, ptr %34, align 8, !tbaa !355
  %36 = getelementptr inbounds %struct.storable_picture, ptr %35, i64 0, i32 15
  store i32 0, ptr %36, align 8, !tbaa !346
  %37 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 1
  store i32 0, ptr %37, align 4, !tbaa !412
  br label %43

38:                                               ; preds = %20
  %39 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  %40 = load ptr, ptr %39, align 8, !tbaa !355
  %41 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 1
  store i32 0, ptr %41, align 4, !tbaa !412
  %42 = icmp eq ptr %40, null
  br i1 %42, label %60, label %43

43:                                               ; preds = %38, %33
  %44 = phi ptr [ %35, %33 ], [ %40, %38 ]
  %45 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  %46 = getelementptr inbounds %struct.storable_picture, ptr %44, i64 0, i32 37
  %47 = load ptr, ptr %46, align 8, !tbaa !717
  %48 = icmp eq ptr %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %43
  tail call void @free_mem3Dint64(ptr noundef nonnull %47, i32 noundef 6) #46
  %50 = load ptr, ptr %45, align 8, !tbaa !355
  %51 = getelementptr inbounds %struct.storable_picture, ptr %50, i64 0, i32 37
  store ptr null, ptr %51, align 8, !tbaa !717
  br label %52

52:                                               ; preds = %49, %43
  %53 = phi ptr [ %50, %49 ], [ %44, %43 ]
  %54 = getelementptr inbounds %struct.storable_picture, ptr %53, i64 0, i32 38
  %55 = load ptr, ptr %54, align 8, !tbaa !930
  %56 = icmp eq ptr %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %52
  tail call void @free_mem3Dint64(ptr noundef nonnull %55, i32 noundef 6) #46
  %58 = load ptr, ptr %45, align 8, !tbaa !355
  %59 = getelementptr inbounds %struct.storable_picture, ptr %58, i64 0, i32 38
  store ptr null, ptr %59, align 8, !tbaa !930
  br label %60

60:                                               ; preds = %57, %52, %38
  %61 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  %62 = load ptr, ptr %61, align 8, !tbaa !928
  %63 = icmp eq ptr %62, null
  br i1 %63, label %79, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.storable_picture, ptr %62, i64 0, i32 37
  %66 = load ptr, ptr %65, align 8, !tbaa !717
  %67 = icmp eq ptr %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %64
  tail call void @free_mem3Dint64(ptr noundef nonnull %66, i32 noundef 6) #46
  %69 = load ptr, ptr %61, align 8, !tbaa !928
  %70 = getelementptr inbounds %struct.storable_picture, ptr %69, i64 0, i32 37
  store ptr null, ptr %70, align 8, !tbaa !717
  br label %71

71:                                               ; preds = %68, %64
  %72 = phi ptr [ %69, %68 ], [ %62, %64 ]
  %73 = getelementptr inbounds %struct.storable_picture, ptr %72, i64 0, i32 38
  %74 = load ptr, ptr %73, align 8, !tbaa !930
  %75 = icmp eq ptr %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %71
  tail call void @free_mem3Dint64(ptr noundef nonnull %74, i32 noundef 6) #46
  %77 = load ptr, ptr %61, align 8, !tbaa !928
  %78 = getelementptr inbounds %struct.storable_picture, ptr %77, i64 0, i32 38
  store ptr null, ptr %78, align 8, !tbaa !930
  br label %79

79:                                               ; preds = %76, %71, %60
  %80 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  %81 = load ptr, ptr %80, align 8, !tbaa !929
  %82 = icmp eq ptr %81, null
  br i1 %82, label %98, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.storable_picture, ptr %81, i64 0, i32 37
  %85 = load ptr, ptr %84, align 8, !tbaa !717
  %86 = icmp eq ptr %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %83
  tail call void @free_mem3Dint64(ptr noundef nonnull %85, i32 noundef 6) #46
  %88 = load ptr, ptr %80, align 8, !tbaa !929
  %89 = getelementptr inbounds %struct.storable_picture, ptr %88, i64 0, i32 37
  store ptr null, ptr %89, align 8, !tbaa !717
  br label %90

90:                                               ; preds = %87, %83
  %91 = phi ptr [ %88, %87 ], [ %81, %83 ]
  %92 = getelementptr inbounds %struct.storable_picture, ptr %91, i64 0, i32 38
  %93 = load ptr, ptr %92, align 8, !tbaa !930
  %94 = icmp eq ptr %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %90
  tail call void @free_mem3Dint64(ptr noundef nonnull %93, i32 noundef 6) #46
  %96 = load ptr, ptr %80, align 8, !tbaa !929
  %97 = getelementptr inbounds %struct.storable_picture, ptr %96, i64 0, i32 38
  store ptr null, ptr %97, align 8, !tbaa !930
  br label %98

98:                                               ; preds = %95, %90, %79
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @unmark_long_term_frame_for_reference_by_frame_idx(i32 noundef %0) unnamed_addr #9 {
  %2 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %24, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  br label %6

6:                                                ; preds = %18, %4
  %7 = phi i32 [ %2, %4 ], [ %19, %18 ]
  %8 = phi ptr [ %5, %4 ], [ %20, %18 ]
  %9 = phi i64 [ 0, %4 ], [ %21, %18 ]
  %10 = getelementptr inbounds ptr, ptr %8, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.frame_store, ptr %11, i64 0, i32 8
  %13 = load i32, ptr %12, align 8, !tbaa !962
  %14 = icmp eq i32 %13, %0
  br i1 %14, label %15, label %18

15:                                               ; preds = %6
  tail call fastcc void @unmark_for_long_term_reference(ptr noundef nonnull %11) #47
  %16 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  %17 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i32 [ %7, %6 ], [ %17, %15 ]
  %20 = phi ptr [ %8, %6 ], [ %16, %15 ]
  %21 = add nuw nsw i64 %9, 1
  %22 = zext i32 %19 to i64
  %23 = icmp ult i64 %21, %22
  br i1 %23, label %6, label %24, !llvm.loop !1000

24:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @unmark_long_term_field_for_reference_by_frame_idx(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) unnamed_addr #9 {
  %6 = icmp slt i32 %4, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %5
  %8 = load ptr, ptr @img, align 8, !tbaa !13
  %9 = getelementptr inbounds %struct.img_par, ptr %8, i64 0, i32 86
  %10 = load i32, ptr %9, align 8, !tbaa !335
  %11 = shl nsw i32 %10, 1
  %12 = add nsw i32 %11, %4
  br label %13

13:                                               ; preds = %7, %5
  %14 = phi i32 [ %12, %7 ], [ %4, %5 ]
  %15 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %71, label %17

17:                                               ; preds = %13
  %18 = icmp eq i32 %2, 0
  %19 = sdiv i32 %14, 2
  br label %20

20:                                               ; preds = %66, %17
  %21 = phi i64 [ 0, %17 ], [ %67, %66 ]
  %22 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 2), align 8, !tbaa !916
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8, !tbaa !13
  %25 = getelementptr inbounds %struct.frame_store, ptr %24, i64 0, i32 8
  %26 = load i32, ptr %25, align 8, !tbaa !962
  %27 = icmp eq i32 %26, %1
  br i1 %27, label %28, label %66

28:                                               ; preds = %20
  switch i32 %0, label %66 [
    i32 1, label %29
    i32 2, label %46
  ]

29:                                               ; preds = %28
  %30 = getelementptr inbounds %struct.frame_store, ptr %24, i64 0, i32 2
  %31 = load i32, ptr %30, align 8, !tbaa !937
  switch i32 %31, label %32 [
    i32 3, label %65
    i32 1, label %65
  ]

32:                                               ; preds = %29
  br i1 %18, label %42, label %33

33:                                               ; preds = %32
  %34 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 11), align 8, !tbaa !914
  %35 = icmp ne ptr %34, null
  %36 = icmp eq ptr %34, %24
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %65

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.frame_store, ptr %24, i64 0, i32 5
  %40 = load i32, ptr %39, align 4, !tbaa !385
  %41 = icmp eq i32 %40, %3
  br i1 %41, label %66, label %65

42:                                               ; preds = %32
  %43 = getelementptr inbounds %struct.frame_store, ptr %24, i64 0, i32 5
  %44 = load i32, ptr %43, align 4, !tbaa !385
  %45 = icmp eq i32 %44, %19
  br i1 %45, label %66, label %65

46:                                               ; preds = %28
  %47 = getelementptr inbounds %struct.frame_store, ptr %24, i64 0, i32 2
  %48 = load i32, ptr %47, align 8, !tbaa !937
  %49 = and i32 %48, -2
  %50 = icmp eq i32 %49, 2
  br i1 %50, label %65, label %51

51:                                               ; preds = %46
  br i1 %18, label %61, label %52

52:                                               ; preds = %51
  %53 = load ptr, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 11), align 8, !tbaa !914
  %54 = icmp ne ptr %53, null
  %55 = icmp eq ptr %53, %24
  %56 = and i1 %54, %55
  br i1 %56, label %57, label %65

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.frame_store, ptr %24, i64 0, i32 5
  %59 = load i32, ptr %58, align 4, !tbaa !385
  %60 = icmp eq i32 %59, %3
  br i1 %60, label %66, label %65

61:                                               ; preds = %51
  %62 = getelementptr inbounds %struct.frame_store, ptr %24, i64 0, i32 5
  %63 = load i32, ptr %62, align 4, !tbaa !385
  %64 = icmp eq i32 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %61, %57, %52, %46, %42, %38, %33, %29, %29
  tail call fastcc void @unmark_for_long_term_reference(ptr noundef nonnull %24) #47
  br label %66

66:                                               ; preds = %65, %61, %57, %42, %38, %28, %20
  %67 = add nuw nsw i64 %21, 1
  %68 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 6), align 4, !tbaa !915
  %69 = zext i32 %68 to i64
  %70 = icmp ult i64 %67, %69
  br i1 %70, label %20, label %71, !llvm.loop !1001

71:                                               ; preds = %66, %13
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal fastcc void @insert_picture_in_dpb(ptr nocapture noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = load i32, ptr %1, align 8, !tbaa !570
  switch i32 %3, label %83 [
    i32 0, label %4
    i32 1, label %21
    i32 2, label %52
  ]

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  store ptr %1, ptr %5, align 8, !tbaa !355
  store i32 3, ptr %0, align 8, !tbaa !353
  %6 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 15
  %7 = load i32, ptr %6, align 8, !tbaa !346
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 1
  store i32 3, ptr %10, align 4, !tbaa !412
  %11 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 3
  store i32 3, ptr %11, align 4, !tbaa !992
  %12 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 14
  %13 = load i32, ptr %12, align 4, !tbaa !356
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 2
  store i32 3, ptr %16, align 8, !tbaa !937
  %17 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 13
  %18 = load i32, ptr %17, align 8, !tbaa !934
  %19 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 8
  store i32 %18, ptr %19, align 8, !tbaa !962
  br label %20

20:                                               ; preds = %15, %9, %4
  tail call void @dpb_split_field(ptr noundef nonnull %0) #47
  br label %83

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  store ptr %1, ptr %22, align 8, !tbaa !928
  %23 = load i32, ptr %0, align 8, !tbaa !353
  %24 = or i32 %23, 1
  store i32 %24, ptr %0, align 8, !tbaa !353
  %25 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 15
  %26 = load i32, ptr %25, align 8, !tbaa !346
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %45, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 1
  %30 = load i32, ptr %29, align 4, !tbaa !412
  %31 = or i32 %30, 1
  store i32 %31, ptr %29, align 4, !tbaa !412
  %32 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 3
  %33 = load i32, ptr %32, align 4, !tbaa !992
  %34 = or i32 %33, 1
  store i32 %34, ptr %32, align 4, !tbaa !992
  %35 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 14
  %36 = load i32, ptr %35, align 4, !tbaa !356
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 2
  %40 = load i32, ptr %39, align 8, !tbaa !937
  %41 = or i32 %40, 1
  store i32 %41, ptr %39, align 8, !tbaa !937
  %42 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 13
  %43 = load i32, ptr %42, align 8, !tbaa !934
  %44 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 8
  store i32 %43, ptr %44, align 8, !tbaa !962
  br label %45

45:                                               ; preds = %38, %28, %21
  %46 = icmp eq i32 %24, 3
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @dpb_combine_field(ptr noundef nonnull %0) #47
  br label %83

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 1
  %50 = load i32, ptr %49, align 4, !tbaa !390
  %51 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 10
  store i32 %50, ptr %51, align 8, !tbaa !403
  tail call void @gen_field_ref_ids(ptr noundef nonnull %1) #47
  br label %83

52:                                               ; preds = %2
  %53 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  store ptr %1, ptr %53, align 8, !tbaa !929
  %54 = load i32, ptr %0, align 8, !tbaa !353
  %55 = or i32 %54, 2
  store i32 %55, ptr %0, align 8, !tbaa !353
  %56 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 15
  %57 = load i32, ptr %56, align 8, !tbaa !346
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %76, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 1
  %61 = load i32, ptr %60, align 4, !tbaa !412
  %62 = or i32 %61, 2
  store i32 %62, ptr %60, align 4, !tbaa !412
  %63 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 3
  %64 = load i32, ptr %63, align 4, !tbaa !992
  %65 = or i32 %64, 2
  store i32 %65, ptr %63, align 4, !tbaa !992
  %66 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 14
  %67 = load i32, ptr %66, align 4, !tbaa !356
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %76, label %69

69:                                               ; preds = %59
  %70 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 2
  %71 = load i32, ptr %70, align 8, !tbaa !937
  %72 = or i32 %71, 2
  store i32 %72, ptr %70, align 8, !tbaa !937
  %73 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 13
  %74 = load i32, ptr %73, align 8, !tbaa !934
  %75 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 8
  store i32 %74, ptr %75, align 8, !tbaa !962
  br label %76

76:                                               ; preds = %69, %59, %52
  %77 = icmp eq i32 %55, 3
  br i1 %77, label %78, label %79

78:                                               ; preds = %76
  tail call void @dpb_combine_field(ptr noundef nonnull %0) #47
  br label %83

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 1
  %81 = load i32, ptr %80, align 4, !tbaa !390
  %82 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 10
  store i32 %81, ptr %82, align 8, !tbaa !403
  tail call void @gen_field_ref_ids(ptr noundef nonnull %1) #47
  br label %83

83:                                               ; preds = %79, %78, %48, %47, %20, %2
  %84 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 5
  %85 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 10
  %86 = load <2 x i32>, ptr %85, align 4, !tbaa !18
  %87 = shufflevector <2 x i32> %86, <2 x i32> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i32> %87, ptr %84, align 4, !tbaa !18
  %88 = getelementptr inbounds %struct.storable_picture, ptr %1, i64 0, i32 16
  %89 = load i32, ptr %88, align 4, !tbaa !345
  %90 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 9
  store i32 %89, ptr %90, align 4, !tbaa !411
  %91 = load i32, ptr %0, align 8, !tbaa !353
  %92 = icmp eq i32 %91, 3
  %93 = load i32, ptr @p_ref, align 4
  %94 = icmp ne i32 %93, -1
  %95 = select i1 %92, i1 %94, i1 false
  br i1 %95, label %96, label %105

96:                                               ; preds = %83
  %97 = load ptr, ptr @input, align 8, !tbaa !13
  %98 = getelementptr inbounds %struct.inp_par, ptr %97, i64 0, i32 7
  %99 = load i32, ptr %98, align 4, !tbaa !573
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %96
  %102 = load ptr, ptr @snr, align 8, !tbaa !13
  %103 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  %104 = load ptr, ptr %103, align 8, !tbaa !355
  tail call void @find_snr(ptr noundef %102, ptr noundef %104, i32 noundef %93) #46
  br label %105

105:                                              ; preds = %101, %96, %83
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal fastcc i32 @remove_unused_frame_from_dpb() unnamed_addr #0 {
  %1 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %21, label %3

3:                                                ; preds = %0
  %4 = load ptr, ptr @dpb, align 8, !tbaa !352
  %5 = zext i32 %1 to i64
  br label %6

6:                                                ; preds = %18, %3
  %7 = phi i64 [ 0, %3 ], [ %19, %18 ]
  %8 = getelementptr inbounds ptr, ptr %4, i64 %7
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = getelementptr inbounds %struct.frame_store, ptr %9, i64 0, i32 9
  %11 = load i32, ptr %10, align 4, !tbaa !411
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %6
  %14 = tail call fastcc i32 @is_used_for_reference(ptr noundef nonnull %9) #47, !range !562
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %.lcssa = phi i64 [ %7, %13 ]
  %17 = trunc i64 %.lcssa to i32
  tail call fastcc void @remove_frame_from_dpb(i32 noundef %17) #47
  br label %21

18:                                               ; preds = %13, %6
  %19 = add nuw nsw i64 %7, 1
  %20 = icmp eq i64 %19, %5
  br i1 %20, label %21, label %6, !llvm.loop !1002

21:                                               ; preds = %18, %16, %0
  %22 = phi i32 [ 1, %16 ], [ 0, %0 ], [ 0, %18 ]
  ret i32 %22
}

; Function Attrs: nounwind optsize uwtable
define internal fastcc void @get_smallest_poc(ptr nocapture noundef %0, ptr nocapture noundef writeonly %1) unnamed_addr #0 {
  %3 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @error(ptr noundef nonnull @.str.29.245, i32 noundef 150) #46
  br label %6

6:                                                ; preds = %5, %2
  store i32 -1, ptr %1, align 4, !tbaa !18
  store i32 2147483647, ptr %0, align 4, !tbaa !18
  %7 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %32, label %9

9:                                                ; preds = %6
  %10 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %11

11:                                               ; preds = %27, %9
  %12 = phi i32 [ %7, %9 ], [ %28, %27 ]
  %13 = phi i64 [ 0, %9 ], [ %29, %27 ]
  %14 = load i32, ptr %0, align 4, !tbaa !18
  %15 = getelementptr inbounds ptr, ptr %10, i64 %13
  %16 = load ptr, ptr %15, align 8, !tbaa !13
  %17 = getelementptr inbounds %struct.frame_store, ptr %16, i64 0, i32 10
  %18 = load i32, ptr %17, align 8, !tbaa !403
  %19 = icmp sgt i32 %14, %18
  br i1 %19, label %20, label %27

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.frame_store, ptr %16, i64 0, i32 9
  %22 = load i32, ptr %21, align 4, !tbaa !411
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  store i32 %18, ptr %0, align 4, !tbaa !18
  %25 = trunc i64 %13 to i32
  store i32 %25, ptr %1, align 4, !tbaa !18
  %26 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  br label %27

27:                                               ; preds = %24, %20, %11
  %28 = phi i32 [ %12, %11 ], [ %12, %20 ], [ %26, %24 ]
  %29 = add nuw nsw i64 %13, 1
  %30 = zext i32 %28 to i64
  %31 = icmp ult i64 %29, %30
  br i1 %31, label %11, label %32, !llvm.loop !1003

32:                                               ; preds = %27, %6
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal fastcc void @output_one_frame_from_dpb() unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %1) #48
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #48
  %3 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %0
  tail call void @error(ptr noundef nonnull @.str.31.241, i32 noundef 150) #46
  br label %6

6:                                                ; preds = %5, %0
  call fastcc void @get_smallest_poc(ptr noundef nonnull %1, ptr noundef nonnull %2) #47
  %7 = load i32, ptr %2, align 4, !tbaa !18
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @error(ptr noundef nonnull @.str.32.242, i32 noundef 150) #46
  br label %10

10:                                               ; preds = %9, %6
  %11 = load ptr, ptr @img, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.img_par, ptr %11, i64 0, i32 130
  %13 = load i32, ptr %12, align 4, !tbaa !364
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = load i32, ptr %1, align 4, !tbaa !18
  br label %24

17:                                               ; preds = %10
  %18 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 7), align 8, !tbaa !410
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @write_lost_ref_after_idr(i32 noundef %7) #46
  br label %21

21:                                               ; preds = %20, %17
  %22 = load i32, ptr %1, align 4, !tbaa !18
  %23 = load i32, ptr @p_out, align 4, !tbaa !18
  tail call void @write_lost_non_ref_pic(i32 noundef %22, i32 noundef %23) #46
  br label %24

24:                                               ; preds = %21, %15
  %25 = phi i32 [ %16, %15 ], [ %22, %21 ]
  %26 = load ptr, ptr @dpb, align 8, !tbaa !352
  %27 = sext i32 %7 to i64
  %28 = getelementptr inbounds ptr, ptr %26, i64 %27
  %29 = load ptr, ptr %28, align 8, !tbaa !13
  %30 = load i32, ptr @p_out, align 4, !tbaa !18
  tail call void @write_stored_frame(ptr noundef %29, i32 noundef %30) #46
  %31 = load ptr, ptr @img, align 8, !tbaa !13
  %32 = getelementptr inbounds %struct.img_par, ptr %31, i64 0, i32 130
  %33 = load i32, ptr %32, align 4, !tbaa !364
  %34 = icmp ne i32 %33, 0
  %35 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 7), align 8
  %36 = icmp slt i32 %35, %25
  %37 = select i1 %34, i1 true, i1 %36
  br i1 %37, label %39, label %38

38:                                               ; preds = %24
  tail call void @error(ptr noundef nonnull @.str.33.243, i32 noundef 150) #46
  br label %39

39:                                               ; preds = %38, %24
  store i32 %25, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 7), align 8, !tbaa !410
  %40 = load ptr, ptr @dpb, align 8, !tbaa !352
  %41 = getelementptr inbounds ptr, ptr %40, i64 %27
  %42 = load ptr, ptr %41, align 8, !tbaa !13
  %43 = tail call fastcc i32 @is_used_for_reference(ptr noundef %42) #47, !range !562
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %39
  tail call fastcc void @remove_frame_from_dpb(i32 noundef %7) #47
  br label %46

46:                                               ; preds = %45, %39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %1) #48
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable
define internal fastcc i32 @is_used_for_reference(ptr nocapture noundef readonly %0) unnamed_addr #8 {
  %2 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 4, !tbaa !412
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %37

5:                                                ; preds = %1
  %6 = load i32, ptr %0, align 8, !tbaa !353
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %8, label %14

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  %10 = load ptr, ptr %9, align 8, !tbaa !355
  %11 = getelementptr inbounds %struct.storable_picture, ptr %10, i64 0, i32 15
  %12 = load i32, ptr %11, align 8, !tbaa !346
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %37

14:                                               ; preds = %5
  %15 = and i32 %6, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %14, %8
  %18 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  %19 = load ptr, ptr %18, align 8, !tbaa !928
  %20 = icmp eq ptr %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.storable_picture, ptr %19, i64 0, i32 15
  %23 = load i32, ptr %22, align 8, !tbaa !346
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %21, %17, %14
  %26 = and i32 %6, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  %30 = load ptr, ptr %29, align 8, !tbaa !929
  %31 = icmp eq ptr %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.storable_picture, ptr %30, i64 0, i32 15
  %34 = load i32, ptr %33, align 8, !tbaa !346
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32, %28, %25
  br label %37

37:                                               ; preds = %36, %32, %21, %8, %1
  %38 = phi i32 [ 0, %36 ], [ 1, %1 ], [ 1, %8 ], [ 1, %21 ], [ 1, %32 ]
  ret i32 %38
}

; Function Attrs: nounwind optsize uwtable
define internal fastcc void @remove_frame_from_dpb(i32 noundef %0) unnamed_addr #0 {
  %2 = load ptr, ptr @dpb, align 8, !tbaa !352
  %3 = sext i32 %0 to i64
  %4 = getelementptr inbounds ptr, ptr %2, i64 %3
  %5 = load ptr, ptr %4, align 8, !tbaa !13
  %6 = load i32, ptr %5, align 8, !tbaa !353
  switch i32 %6, label %20 [
    i32 3, label %7
    i32 2, label %14
    i32 1, label %17
    i32 0, label %21
  ]

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.frame_store, ptr %5, i64 0, i32 12
  %9 = load ptr, ptr %8, align 8, !tbaa !355
  tail call void @free_storable_picture(ptr noundef %9) #47
  %10 = getelementptr inbounds %struct.frame_store, ptr %5, i64 0, i32 13
  %11 = load ptr, ptr %10, align 8, !tbaa !928
  tail call void @free_storable_picture(ptr noundef %11) #47
  %12 = getelementptr inbounds %struct.frame_store, ptr %5, i64 0, i32 14
  %13 = load ptr, ptr %12, align 8, !tbaa !929
  tail call void @free_storable_picture(ptr noundef %13) #47
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, i8 0, i64 24, i1 false)
  br label %21

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.frame_store, ptr %5, i64 0, i32 14
  %16 = load ptr, ptr %15, align 8, !tbaa !929
  tail call void @free_storable_picture(ptr noundef %16) #47
  store ptr null, ptr %15, align 8, !tbaa !929
  br label %21

17:                                               ; preds = %1
  %18 = getelementptr inbounds %struct.frame_store, ptr %5, i64 0, i32 13
  %19 = load ptr, ptr %18, align 8, !tbaa !928
  tail call void @free_storable_picture(ptr noundef %19) #47
  store ptr null, ptr %18, align 8, !tbaa !928
  br label %21

20:                                               ; preds = %1
  tail call void @error(ptr noundef nonnull @.str.30.244, i32 noundef 500) #46
  br label %21

21:                                               ; preds = %20, %17, %14, %7, %1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %5, i8 0, i64 16, i1 false)
  %22 = load ptr, ptr @dpb, align 8, !tbaa !352
  %23 = getelementptr inbounds ptr, ptr %22, i64 %3
  %24 = load ptr, ptr %23, align 8, !tbaa !13
  %25 = load i32, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  %26 = add i32 %25, -1
  %27 = icmp ugt i32 %26, %0
  br i1 %27, label %30, label %28

28:                                               ; preds = %21
  %29 = zext i32 %26 to i64
  br label %43

30:                                               ; preds = %21
  %31 = zext i32 %0 to i64
  %32 = zext i32 %26 to i64
  br label %33

33:                                               ; preds = %33, %30
  %34 = phi i64 [ %31, %30 ], [ %36, %33 ]
  %35 = load ptr, ptr @dpb, align 8, !tbaa !352
  %36 = add nuw nsw i64 %34, 1
  %37 = getelementptr inbounds ptr, ptr %35, i64 %36
  %38 = load ptr, ptr %37, align 8, !tbaa !13
  %39 = getelementptr inbounds ptr, ptr %35, i64 %34
  store ptr %38, ptr %39, align 8, !tbaa !13
  %40 = icmp eq i64 %36, %32
  br i1 %40, label %41, label %33, !llvm.loop !1004

41:                                               ; preds = %33
  %42 = load ptr, ptr @dpb, align 8, !tbaa !352
  br label %43

43:                                               ; preds = %41, %28
  %44 = phi i64 [ %29, %28 ], [ %32, %41 ]
  %45 = phi ptr [ %22, %28 ], [ %42, %41 ]
  %46 = getelementptr inbounds ptr, ptr %45, i64 %44
  store ptr %24, ptr %46, align 8, !tbaa !13
  store i32 %26, ptr getelementptr inbounds (%struct.decoded_picture_buffer, ptr @dpb, i64 0, i32 4), align 4, !tbaa !350
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @dpb_split_field(ptr nocapture noundef %0) #0 {
  %2 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  %3 = load ptr, ptr %2, align 8, !tbaa !355
  %4 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 19
  %5 = load i32, ptr %4, align 8, !tbaa !566
  %6 = sdiv i32 %5, 16
  %7 = shl nsw i32 %6, 1
  %8 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !390
  %10 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 10
  store i32 %9, ptr %10, align 8, !tbaa !403
  %11 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 51
  %12 = load i32, ptr %11, align 8, !tbaa !625
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %279

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 20
  %16 = load i32, ptr %15, align 4, !tbaa !568
  %17 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 21
  %18 = load i32, ptr %17, align 8, !tbaa !311
  %19 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 22
  %20 = load i32, ptr %19, align 4, !tbaa !312
  %21 = tail call ptr @alloc_storable_picture(i32 noundef 1, i32 noundef %5, i32 noundef %16, i32 noundef %18, i32 noundef %20) #47
  %22 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  store ptr %21, ptr %22, align 8, !tbaa !928
  %23 = load ptr, ptr %2, align 8, !tbaa !355
  %24 = getelementptr inbounds %struct.storable_picture, ptr %23, i64 0, i32 19
  %25 = load i32, ptr %24, align 8, !tbaa !566
  %26 = getelementptr inbounds %struct.storable_picture, ptr %23, i64 0, i32 20
  %27 = load i32, ptr %26, align 4, !tbaa !568
  %28 = getelementptr inbounds %struct.storable_picture, ptr %23, i64 0, i32 21
  %29 = load i32, ptr %28, align 8, !tbaa !311
  %30 = getelementptr inbounds %struct.storable_picture, ptr %23, i64 0, i32 22
  %31 = load i32, ptr %30, align 4, !tbaa !312
  %32 = tail call ptr @alloc_storable_picture(i32 noundef 2, i32 noundef %25, i32 noundef %27, i32 noundef %29, i32 noundef %31) #47
  %33 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  store ptr %32, ptr %33, align 8, !tbaa !929
  %34 = load ptr, ptr %2, align 8, !tbaa !355
  %35 = getelementptr inbounds %struct.storable_picture, ptr %34, i64 0, i32 20
  %36 = load i32, ptr %35, align 4, !tbaa !568
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %43, label %38

38:                                               ; preds = %43, %14
  %39 = phi ptr [ %34, %14 ], [ %61, %43 ]
  %40 = getelementptr inbounds %struct.storable_picture, ptr %39, i64 0, i32 22
  %41 = load i32, ptr %40, align 4, !tbaa !312
  %42 = icmp sgt i32 %41, 1
  br i1 %42, label %72, label %67

43:                                               ; preds = %43, %14
  %44 = phi i64 [ %60, %43 ], [ 0, %14 ]
  %45 = phi ptr [ %61, %43 ], [ %34, %14 ]
  %46 = load ptr, ptr %22, align 8, !tbaa !928
  %47 = getelementptr inbounds %struct.storable_picture, ptr %46, i64 0, i32 32
  %48 = load ptr, ptr %47, align 8, !tbaa !47
  %49 = getelementptr inbounds ptr, ptr %48, i64 %44
  %50 = load ptr, ptr %49, align 8, !tbaa !13
  %51 = getelementptr inbounds %struct.storable_picture, ptr %45, i64 0, i32 32
  %52 = load ptr, ptr %51, align 8, !tbaa !47
  %53 = shl nuw nsw i64 %44, 1
  %54 = getelementptr inbounds ptr, ptr %52, i64 %53
  %55 = load ptr, ptr %54, align 8, !tbaa !13
  %56 = getelementptr inbounds %struct.storable_picture, ptr %45, i64 0, i32 19
  %57 = load i32, ptr %56, align 8, !tbaa !566
  %58 = sext i32 %57 to i64
  %59 = shl nsw i64 %58, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %50, ptr align 2 %55, i64 %59, i1 false)
  %60 = add nuw nsw i64 %44, 1
  %61 = load ptr, ptr %2, align 8, !tbaa !355
  %62 = getelementptr inbounds %struct.storable_picture, ptr %61, i64 0, i32 20
  %63 = load i32, ptr %62, align 4, !tbaa !568
  %64 = sdiv i32 %63, 2
  %65 = sext i32 %64 to i64
  %66 = icmp slt i64 %60, %65
  br i1 %66, label %43, label %38, !llvm.loop !1005

67:                                               ; preds = %72, %38
  %68 = phi ptr [ %39, %38 ], [ %110, %72 ]
  %69 = getelementptr inbounds %struct.storable_picture, ptr %68, i64 0, i32 20
  %70 = load i32, ptr %69, align 4, !tbaa !568
  %71 = icmp sgt i32 %70, 1
  br i1 %71, label %121, label %116

72:                                               ; preds = %72, %38
  %73 = phi i64 [ %109, %72 ], [ 0, %38 ]
  %74 = phi ptr [ %110, %72 ], [ %39, %38 ]
  %75 = load ptr, ptr %22, align 8, !tbaa !928
  %76 = getelementptr inbounds %struct.storable_picture, ptr %75, i64 0, i32 33
  %77 = load ptr, ptr %76, align 8, !tbaa !82
  %78 = load ptr, ptr %77, align 8, !tbaa !13
  %79 = getelementptr inbounds ptr, ptr %78, i64 %73
  %80 = load ptr, ptr %79, align 8, !tbaa !13
  %81 = getelementptr inbounds %struct.storable_picture, ptr %74, i64 0, i32 33
  %82 = load ptr, ptr %81, align 8, !tbaa !82
  %83 = load ptr, ptr %82, align 8, !tbaa !13
  %84 = shl nuw nsw i64 %73, 1
  %85 = getelementptr inbounds ptr, ptr %83, i64 %84
  %86 = load ptr, ptr %85, align 8, !tbaa !13
  %87 = getelementptr inbounds %struct.storable_picture, ptr %74, i64 0, i32 21
  %88 = load i32, ptr %87, align 8, !tbaa !311
  %89 = sext i32 %88 to i64
  %90 = shl nsw i64 %89, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %80, ptr align 2 %86, i64 %90, i1 false)
  %91 = load ptr, ptr %22, align 8, !tbaa !928
  %92 = getelementptr inbounds %struct.storable_picture, ptr %91, i64 0, i32 33
  %93 = load ptr, ptr %92, align 8, !tbaa !82
  %94 = getelementptr inbounds ptr, ptr %93, i64 1
  %95 = load ptr, ptr %94, align 8, !tbaa !13
  %96 = getelementptr inbounds ptr, ptr %95, i64 %73
  %97 = load ptr, ptr %96, align 8, !tbaa !13
  %98 = load ptr, ptr %2, align 8, !tbaa !355
  %99 = getelementptr inbounds %struct.storable_picture, ptr %98, i64 0, i32 33
  %100 = load ptr, ptr %99, align 8, !tbaa !82
  %101 = getelementptr inbounds ptr, ptr %100, i64 1
  %102 = load ptr, ptr %101, align 8, !tbaa !13
  %103 = getelementptr inbounds ptr, ptr %102, i64 %84
  %104 = load ptr, ptr %103, align 8, !tbaa !13
  %105 = getelementptr inbounds %struct.storable_picture, ptr %98, i64 0, i32 21
  %106 = load i32, ptr %105, align 8, !tbaa !311
  %107 = sext i32 %106 to i64
  %108 = shl nsw i64 %107, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %97, ptr align 2 %104, i64 %108, i1 false)
  %109 = add nuw nsw i64 %73, 1
  %110 = load ptr, ptr %2, align 8, !tbaa !355
  %111 = getelementptr inbounds %struct.storable_picture, ptr %110, i64 0, i32 22
  %112 = load i32, ptr %111, align 4, !tbaa !312
  %113 = sdiv i32 %112, 2
  %114 = sext i32 %113 to i64
  %115 = icmp slt i64 %109, %114
  br i1 %115, label %72, label %67, !llvm.loop !1006

116:                                              ; preds = %121, %67
  %117 = phi ptr [ %68, %67 ], [ %140, %121 ]
  %118 = getelementptr inbounds %struct.storable_picture, ptr %117, i64 0, i32 22
  %119 = load i32, ptr %118, align 4, !tbaa !312
  %120 = icmp sgt i32 %119, 1
  br i1 %120, label %146, label %191

121:                                              ; preds = %121, %67
  %122 = phi i64 [ %139, %121 ], [ 0, %67 ]
  %123 = phi ptr [ %140, %121 ], [ %68, %67 ]
  %124 = load ptr, ptr %33, align 8, !tbaa !929
  %125 = getelementptr inbounds %struct.storable_picture, ptr %124, i64 0, i32 32
  %126 = load ptr, ptr %125, align 8, !tbaa !47
  %127 = getelementptr inbounds ptr, ptr %126, i64 %122
  %128 = load ptr, ptr %127, align 8, !tbaa !13
  %129 = getelementptr inbounds %struct.storable_picture, ptr %123, i64 0, i32 32
  %130 = load ptr, ptr %129, align 8, !tbaa !47
  %131 = shl nuw nsw i64 %122, 1
  %132 = or i64 %131, 1
  %133 = getelementptr inbounds ptr, ptr %130, i64 %132
  %134 = load ptr, ptr %133, align 8, !tbaa !13
  %135 = getelementptr inbounds %struct.storable_picture, ptr %123, i64 0, i32 19
  %136 = load i32, ptr %135, align 8, !tbaa !566
  %137 = sext i32 %136 to i64
  %138 = shl nsw i64 %137, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %128, ptr align 2 %134, i64 %138, i1 false)
  %139 = add nuw nsw i64 %122, 1
  %140 = load ptr, ptr %2, align 8, !tbaa !355
  %141 = getelementptr inbounds %struct.storable_picture, ptr %140, i64 0, i32 20
  %142 = load i32, ptr %141, align 4, !tbaa !568
  %143 = sdiv i32 %142, 2
  %144 = sext i32 %143 to i64
  %145 = icmp slt i64 %139, %144
  br i1 %145, label %121, label %116, !llvm.loop !1007

146:                                              ; preds = %146, %116
  %147 = phi i64 [ %184, %146 ], [ 0, %116 ]
  %148 = phi ptr [ %185, %146 ], [ %117, %116 ]
  %149 = load ptr, ptr %33, align 8, !tbaa !929
  %150 = getelementptr inbounds %struct.storable_picture, ptr %149, i64 0, i32 33
  %151 = load ptr, ptr %150, align 8, !tbaa !82
  %152 = load ptr, ptr %151, align 8, !tbaa !13
  %153 = getelementptr inbounds ptr, ptr %152, i64 %147
  %154 = load ptr, ptr %153, align 8, !tbaa !13
  %155 = getelementptr inbounds %struct.storable_picture, ptr %148, i64 0, i32 33
  %156 = load ptr, ptr %155, align 8, !tbaa !82
  %157 = load ptr, ptr %156, align 8, !tbaa !13
  %158 = shl nuw nsw i64 %147, 1
  %159 = or i64 %158, 1
  %160 = getelementptr inbounds ptr, ptr %157, i64 %159
  %161 = load ptr, ptr %160, align 8, !tbaa !13
  %162 = getelementptr inbounds %struct.storable_picture, ptr %148, i64 0, i32 21
  %163 = load i32, ptr %162, align 8, !tbaa !311
  %164 = sext i32 %163 to i64
  %165 = shl nsw i64 %164, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %154, ptr align 2 %161, i64 %165, i1 false)
  %166 = load ptr, ptr %33, align 8, !tbaa !929
  %167 = getelementptr inbounds %struct.storable_picture, ptr %166, i64 0, i32 33
  %168 = load ptr, ptr %167, align 8, !tbaa !82
  %169 = getelementptr inbounds ptr, ptr %168, i64 1
  %170 = load ptr, ptr %169, align 8, !tbaa !13
  %171 = getelementptr inbounds ptr, ptr %170, i64 %147
  %172 = load ptr, ptr %171, align 8, !tbaa !13
  %173 = load ptr, ptr %2, align 8, !tbaa !355
  %174 = getelementptr inbounds %struct.storable_picture, ptr %173, i64 0, i32 33
  %175 = load ptr, ptr %174, align 8, !tbaa !82
  %176 = getelementptr inbounds ptr, ptr %175, i64 1
  %177 = load ptr, ptr %176, align 8, !tbaa !13
  %178 = getelementptr inbounds ptr, ptr %177, i64 %159
  %179 = load ptr, ptr %178, align 8, !tbaa !13
  %180 = getelementptr inbounds %struct.storable_picture, ptr %173, i64 0, i32 21
  %181 = load i32, ptr %180, align 8, !tbaa !311
  %182 = sext i32 %181 to i64
  %183 = shl nsw i64 %182, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %172, ptr align 2 %179, i64 %183, i1 false)
  %184 = add nuw nsw i64 %147, 1
  %185 = load ptr, ptr %2, align 8, !tbaa !355
  %186 = getelementptr inbounds %struct.storable_picture, ptr %185, i64 0, i32 22
  %187 = load i32, ptr %186, align 4, !tbaa !312
  %188 = sdiv i32 %187, 2
  %189 = sext i32 %188 to i64
  %190 = icmp slt i64 %184, %189
  br i1 %190, label %146, label %191, !llvm.loop !1008

191:                                              ; preds = %146, %116
  %192 = phi ptr [ %117, %116 ], [ %185, %146 ]
  %193 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 2
  %194 = load ptr, ptr %22, align 8, !tbaa !928
  %195 = getelementptr inbounds %struct.storable_picture, ptr %194, i64 0, i32 1
  %196 = load ptr, ptr %33, align 8, !tbaa !929
  %197 = getelementptr inbounds %struct.storable_picture, ptr %196, i64 0, i32 1
  %198 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 4
  %199 = load i32, ptr %198, align 8, !tbaa !571
  %200 = getelementptr inbounds %struct.storable_picture, ptr %196, i64 0, i32 2
  %201 = load <2 x i32>, ptr %193, align 8, !tbaa !18
  store <2 x i32> %201, ptr %200, align 8, !tbaa !18
  %202 = shufflevector <2 x i32> %201, <2 x i32> poison, <4 x i32> <i32 0, i32 poison, i32 1, i32 poison>
  %203 = insertelement <4 x i32> %202, i32 %199, i64 3
  %204 = shufflevector <4 x i32> %203, <4 x i32> poison, <4 x i32> <i32 0, i32 0, i32 2, i32 3>
  store <4 x i32> %204, ptr %195, align 4, !tbaa !18
  %205 = extractelement <2 x i32> %201, i64 1
  store i32 %205, ptr %197, align 4, !tbaa !390
  %206 = load i32, ptr %198, align 8, !tbaa !571
  %207 = getelementptr inbounds %struct.storable_picture, ptr %196, i64 0, i32 4
  store i32 %206, ptr %207, align 8, !tbaa !571
  %208 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 15
  %209 = load i32, ptr %208, align 8, !tbaa !346
  %210 = getelementptr inbounds %struct.storable_picture, ptr %196, i64 0, i32 15
  store i32 %209, ptr %210, align 8, !tbaa !346
  %211 = getelementptr inbounds %struct.storable_picture, ptr %194, i64 0, i32 15
  store i32 %209, ptr %211, align 8, !tbaa !346
  %212 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 14
  %213 = load i32, ptr %212, align 4, !tbaa !356
  %214 = getelementptr inbounds %struct.storable_picture, ptr %196, i64 0, i32 14
  store i32 %213, ptr %214, align 4, !tbaa !356
  %215 = getelementptr inbounds %struct.storable_picture, ptr %194, i64 0, i32 14
  store i32 %213, ptr %215, align 4, !tbaa !356
  %216 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 13
  %217 = load i32, ptr %216, align 8, !tbaa !934
  %218 = getelementptr inbounds %struct.storable_picture, ptr %196, i64 0, i32 13
  store i32 %217, ptr %218, align 8, !tbaa !934
  %219 = getelementptr inbounds %struct.storable_picture, ptr %194, i64 0, i32 13
  store i32 %217, ptr %219, align 8, !tbaa !934
  %220 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 8
  store i32 %217, ptr %220, align 8, !tbaa !962
  %221 = getelementptr inbounds %struct.storable_picture, ptr %196, i64 0, i32 28
  store i32 1, ptr %221, align 4, !tbaa !341
  %222 = getelementptr inbounds %struct.storable_picture, ptr %194, i64 0, i32 28
  store i32 1, ptr %222, align 4, !tbaa !341
  %223 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 29
  %224 = load i32, ptr %223, align 8, !tbaa !564
  %225 = getelementptr inbounds %struct.storable_picture, ptr %196, i64 0, i32 29
  store i32 %224, ptr %225, align 8, !tbaa !564
  %226 = getelementptr inbounds %struct.storable_picture, ptr %194, i64 0, i32 29
  store i32 %224, ptr %226, align 8, !tbaa !564
  %227 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 42
  store ptr %194, ptr %227, align 8, !tbaa !919
  %228 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 43
  store ptr %196, ptr %228, align 8, !tbaa !920
  %229 = getelementptr inbounds %struct.storable_picture, ptr %194, i64 0, i32 43
  store ptr %196, ptr %229, align 8, !tbaa !920
  %230 = getelementptr inbounds %struct.storable_picture, ptr %194, i64 0, i32 44
  store ptr %192, ptr %230, align 8, !tbaa !921
  %231 = getelementptr inbounds %struct.storable_picture, ptr %196, i64 0, i32 42
  store ptr %194, ptr %231, align 8, !tbaa !919
  %232 = getelementptr inbounds %struct.storable_picture, ptr %196, i64 0, i32 44
  store ptr %192, ptr %232, align 8, !tbaa !921
  %233 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 50
  %234 = load i32, ptr %233, align 4, !tbaa !83
  %235 = getelementptr inbounds %struct.storable_picture, ptr %196, i64 0, i32 50
  store i32 %234, ptr %235, align 4, !tbaa !83
  %236 = getelementptr inbounds %struct.storable_picture, ptr %194, i64 0, i32 50
  store i32 %234, ptr %236, align 4, !tbaa !83
  %237 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 18
  %238 = load i16, ptr %237, align 4, !tbaa !725
  %239 = icmp slt i16 %238, 0
  br i1 %239, label %282, label %240

240:                                              ; preds = %191
  %241 = zext i16 %238 to i64
  br label %242

242:                                              ; preds = %276, %240
  %243 = phi i64 [ 0, %240 ], [ %277, %276 ]
  %244 = getelementptr inbounds %struct.storable_picture, ptr %194, i64 0, i32 5, i64 %243
  %245 = getelementptr inbounds %struct.storable_picture, ptr %196, i64 0, i32 5, i64 %243
  br label %246

246:                                              ; preds = %246, %242
  %247 = phi i64 [ 0, %242 ], [ %274, %246 ]
  %248 = shl nuw nsw i64 %247, 1
  %249 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 5, i64 %243, i64 3, i64 %248
  %250 = load i64, ptr %249, align 8, !tbaa !592
  %251 = getelementptr inbounds %struct.storable_picture, ptr %194, i64 0, i32 5, i64 %243, i64 1, i64 %248
  store i64 %250, ptr %251, align 8, !tbaa !592
  %252 = or i64 %248, 1
  %253 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 5, i64 %243, i64 3, i64 %252
  %254 = load i64, ptr %253, align 8, !tbaa !592
  %255 = getelementptr inbounds %struct.storable_picture, ptr %194, i64 0, i32 5, i64 %243, i64 1, i64 %252
  store i64 %254, ptr %255, align 8, !tbaa !592
  %256 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 5, i64 %243, i64 5, i64 %248
  %257 = load i64, ptr %256, align 8, !tbaa !592
  %258 = getelementptr inbounds %struct.storable_picture, ptr %196, i64 0, i32 5, i64 %243, i64 1, i64 %248
  store i64 %257, ptr %258, align 8, !tbaa !592
  %259 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 5, i64 %243, i64 5, i64 %252
  %260 = load i64, ptr %259, align 8, !tbaa !592
  %261 = getelementptr inbounds %struct.storable_picture, ptr %196, i64 0, i32 5, i64 %243, i64 1, i64 %252
  store i64 %260, ptr %261, align 8, !tbaa !592
  %262 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 5, i64 %243, i64 2, i64 %248
  %263 = load i64, ptr %262, align 8, !tbaa !592
  %264 = getelementptr inbounds [33 x i64], ptr %244, i64 0, i64 %248
  store i64 %263, ptr %264, align 8, !tbaa !592
  %265 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 5, i64 %243, i64 2, i64 %252
  %266 = load i64, ptr %265, align 8, !tbaa !592
  %267 = getelementptr inbounds [33 x i64], ptr %244, i64 0, i64 %252
  store i64 %266, ptr %267, align 8, !tbaa !592
  %268 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 5, i64 %243, i64 4, i64 %248
  %269 = load i64, ptr %268, align 8, !tbaa !592
  %270 = getelementptr inbounds [33 x i64], ptr %245, i64 0, i64 %248
  store i64 %269, ptr %270, align 8, !tbaa !592
  %271 = getelementptr inbounds %struct.storable_picture, ptr %192, i64 0, i32 5, i64 %243, i64 4, i64 %252
  %272 = load i64, ptr %271, align 8, !tbaa !592
  %273 = getelementptr inbounds [33 x i64], ptr %245, i64 0, i64 %252
  store i64 %272, ptr %273, align 8, !tbaa !592
  %274 = add nuw nsw i64 %247, 1
  %275 = icmp eq i64 %274, 16
  br i1 %275, label %276, label %246, !llvm.loop !1009

276:                                              ; preds = %246
  %277 = add nuw nsw i64 %243, 1
  %278 = icmp eq i64 %243, %241
  br i1 %278, label %282, label %242, !llvm.loop !1010

279:                                              ; preds = %1
  %280 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  %281 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 42
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %280, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %281, i8 0, i64 16, i1 false)
  br label %282

282:                                              ; preds = %279, %276, %191
  %283 = phi ptr [ %194, %191 ], [ null, %279 ], [ %194, %276 ]
  %284 = phi ptr [ %192, %191 ], [ %3, %279 ], [ %192, %276 ]
  %285 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 20
  %286 = load i32, ptr %285, align 4, !tbaa !568
  %287 = icmp sgt i32 %286, 3
  br i1 %287, label %288, label %475

288:                                              ; preds = %282
  %289 = lshr i32 %286, 2
  %290 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 19
  %291 = load i32, ptr %290, align 8, !tbaa !566
  %292 = sdiv i32 %291, 4
  %293 = icmp sgt i32 %291, 3
  %294 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 29
  %295 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 34
  %296 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 36
  %297 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 35
  %298 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 38
  %299 = zext i32 %289 to i64
  %300 = zext i32 %292 to i64
  br label %301

301:                                              ; preds = %472, %288
  %302 = phi i64 [ 0, %288 ], [ %473, %472 ]
  br i1 %293, label %303, label %472

303:                                              ; preds = %301
  %304 = trunc i64 %302 to i32
  %305 = lshr i32 %304, 2
  %306 = and i32 %305, 1
  %307 = load i32, ptr %294, align 8, !tbaa !564
  %308 = icmp eq i32 %307, 0
  %309 = lshr i32 %304, 3
  %310 = mul nsw i32 %309, %7
  %311 = icmp eq i32 %306, 0
  %312 = select i1 %311, i32 2, i32 4
  %313 = zext i32 %305 to i64
  %314 = zext i32 %312 to i64
  %315 = or i32 %312, 1
  %316 = zext i32 %315 to i64
  br label %317

317:                                              ; preds = %462, %303
  %318 = phi i64 [ 0, %303 ], [ %470, %462 ]
  %319 = trunc i64 %318 to i32
  %320 = lshr i32 %319, 2
  br i1 %308, label %321, label %323

321:                                              ; preds = %317
  %322 = load ptr, ptr %296, align 8, !tbaa !197
  br label %413

323:                                              ; preds = %317
  %324 = shl nuw nsw i32 %320, 1
  %325 = add nsw i32 %324, %310
  %326 = or i32 %325, %306
  %327 = load ptr, ptr %295, align 8, !tbaa !538
  %328 = sext i32 %326 to i64
  %329 = getelementptr inbounds i8, ptr %327, i64 %328
  %330 = load i8, ptr %329, align 1, !tbaa !14
  %331 = icmp eq i8 %330, 0
  %332 = load ptr, ptr %296, align 8, !tbaa !197
  br i1 %331, label %413, label %333

333:                                              ; preds = %323
  %334 = load ptr, ptr %332, align 8, !tbaa !13
  %335 = getelementptr inbounds ptr, ptr %334, i64 %302
  %336 = load ptr, ptr %335, align 8, !tbaa !13
  %337 = getelementptr inbounds i8, ptr %336, i64 %318
  %338 = load i8, ptr %337, align 1, !tbaa !14
  %339 = sext i8 %338 to i32
  %340 = getelementptr inbounds ptr, ptr %332, i64 1
  %341 = load ptr, ptr %340, align 8, !tbaa !13
  %342 = getelementptr inbounds ptr, ptr %341, i64 %302
  %343 = load ptr, ptr %342, align 8, !tbaa !13
  %344 = getelementptr inbounds i8, ptr %343, i64 %318
  %345 = load i8, ptr %344, align 1, !tbaa !14
  %346 = sext i8 %345 to i32
  %347 = icmp sgt i8 %338, -1
  br i1 %347, label %348, label %359

348:                                              ; preds = %333
  %349 = load ptr, ptr %297, align 8, !tbaa !724
  %350 = getelementptr inbounds ptr, ptr %349, i64 %313
  %351 = load ptr, ptr %350, align 8, !tbaa !13
  %352 = zext i32 %320 to i64
  %353 = getelementptr inbounds i16, ptr %351, i64 %352
  %354 = load i16, ptr %353, align 2, !tbaa !40
  %355 = sext i16 %354 to i64
  %356 = zext i32 %339 to i64
  %357 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 5, i64 %355, i64 %314, i64 %356
  %358 = load i64, ptr %357, align 8, !tbaa !592
  br label %359

359:                                              ; preds = %348, %333
  %360 = phi i64 [ %358, %348 ], [ 0, %333 ]
  %361 = load ptr, ptr %298, align 8, !tbaa !930
  %362 = getelementptr inbounds ptr, ptr %361, i64 %314
  %363 = load ptr, ptr %362, align 8, !tbaa !13
  %364 = getelementptr inbounds ptr, ptr %363, i64 %302
  %365 = load ptr, ptr %364, align 8, !tbaa !13
  %366 = getelementptr inbounds i64, ptr %365, i64 %318
  store i64 %360, ptr %366, align 8, !tbaa !592
  %367 = icmp sgt i8 %345, -1
  br i1 %367, label %368, label %379

368:                                              ; preds = %359
  %369 = load ptr, ptr %297, align 8, !tbaa !724
  %370 = getelementptr inbounds ptr, ptr %369, i64 %313
  %371 = load ptr, ptr %370, align 8, !tbaa !13
  %372 = zext i32 %320 to i64
  %373 = getelementptr inbounds i16, ptr %371, i64 %372
  %374 = load i16, ptr %373, align 2, !tbaa !40
  %375 = sext i16 %374 to i64
  %376 = zext i32 %346 to i64
  %377 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 5, i64 %375, i64 %316, i64 %376
  %378 = load i64, ptr %377, align 8, !tbaa !592
  br label %379

379:                                              ; preds = %368, %359
  %380 = phi i64 [ %378, %368 ], [ 0, %359 ]
  %381 = getelementptr inbounds ptr, ptr %361, i64 %316
  %382 = load ptr, ptr %381, align 8, !tbaa !13
  %383 = getelementptr inbounds ptr, ptr %382, i64 %302
  %384 = load ptr, ptr %383, align 8, !tbaa !13
  %385 = getelementptr inbounds i64, ptr %384, i64 %318
  store i64 %380, ptr %385, align 8, !tbaa !592
  br i1 %347, label %386, label %397

386:                                              ; preds = %379
  %387 = load ptr, ptr %297, align 8, !tbaa !724
  %388 = getelementptr inbounds ptr, ptr %387, i64 %313
  %389 = load ptr, ptr %388, align 8, !tbaa !13
  %390 = zext i32 %320 to i64
  %391 = getelementptr inbounds i16, ptr %389, i64 %390
  %392 = load i16, ptr %391, align 2, !tbaa !40
  %393 = sext i16 %392 to i64
  %394 = zext i32 %339 to i64
  %395 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 6, i64 %393, i64 %314, i64 %394
  %396 = load i64, ptr %395, align 8, !tbaa !592
  br label %397

397:                                              ; preds = %386, %379
  %398 = phi i64 [ %396, %386 ], [ 0, %379 ]
  %399 = load ptr, ptr %361, align 8, !tbaa !13
  %400 = getelementptr inbounds ptr, ptr %399, i64 %302
  %401 = load ptr, ptr %400, align 8, !tbaa !13
  %402 = getelementptr inbounds i64, ptr %401, i64 %318
  store i64 %398, ptr %402, align 8, !tbaa !592
  br i1 %367, label %403, label %462

403:                                              ; preds = %397
  %404 = load ptr, ptr %297, align 8, !tbaa !724
  %405 = getelementptr inbounds ptr, ptr %404, i64 %313
  %406 = load ptr, ptr %405, align 8, !tbaa !13
  %407 = zext i32 %320 to i64
  %408 = getelementptr inbounds i16, ptr %406, i64 %407
  %409 = load i16, ptr %408, align 2, !tbaa !40
  %410 = sext i16 %409 to i64
  %411 = zext i32 %346 to i64
  %412 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 6, i64 %410, i64 %316, i64 %411
  br label %458

413:                                              ; preds = %323, %321
  %414 = phi ptr [ %322, %321 ], [ %332, %323 ]
  %415 = load ptr, ptr %414, align 8, !tbaa !13
  %416 = getelementptr inbounds ptr, ptr %415, i64 %302
  %417 = load ptr, ptr %416, align 8, !tbaa !13
  %418 = getelementptr inbounds i8, ptr %417, i64 %318
  %419 = load i8, ptr %418, align 1, !tbaa !14
  %420 = getelementptr inbounds ptr, ptr %414, i64 1
  %421 = load ptr, ptr %420, align 8, !tbaa !13
  %422 = getelementptr inbounds ptr, ptr %421, i64 %302
  %423 = load ptr, ptr %422, align 8, !tbaa !13
  %424 = getelementptr inbounds i8, ptr %423, i64 %318
  %425 = load i8, ptr %424, align 1, !tbaa !14
  %426 = sext i8 %425 to i64
  %427 = icmp sgt i8 %419, -1
  br i1 %427, label %428, label %440

428:                                              ; preds = %413
  %429 = zext i8 %419 to i64
  %430 = load ptr, ptr %297, align 8, !tbaa !724
  %431 = getelementptr inbounds ptr, ptr %430, i64 %313
  %432 = load ptr, ptr %431, align 8, !tbaa !13
  %433 = zext i32 %320 to i64
  %434 = getelementptr inbounds i16, ptr %432, i64 %433
  %435 = load i16, ptr %434, align 2, !tbaa !40
  %436 = sext i16 %435 to i64
  %437 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 5, i64 %436
  %438 = getelementptr inbounds [33 x i64], ptr %437, i64 0, i64 %429
  %439 = load i64, ptr %438, align 8, !tbaa !592
  br label %440

440:                                              ; preds = %428, %413
  %441 = phi i64 [ %439, %428 ], [ -1, %413 ]
  %442 = load ptr, ptr %298, align 8, !tbaa !930
  %443 = load ptr, ptr %442, align 8, !tbaa !13
  %444 = getelementptr inbounds ptr, ptr %443, i64 %302
  %445 = load ptr, ptr %444, align 8, !tbaa !13
  %446 = getelementptr inbounds i64, ptr %445, i64 %318
  store i64 %441, ptr %446, align 8, !tbaa !592
  %447 = icmp sgt i8 %425, -1
  br i1 %447, label %448, label %462

448:                                              ; preds = %440
  %449 = load ptr, ptr %297, align 8, !tbaa !724
  %450 = getelementptr inbounds ptr, ptr %449, i64 %313
  %451 = load ptr, ptr %450, align 8, !tbaa !13
  %452 = zext i32 %320 to i64
  %453 = getelementptr inbounds i16, ptr %451, i64 %452
  %454 = load i16, ptr %453, align 2, !tbaa !40
  %455 = sext i16 %454 to i64
  %456 = and i64 %426, 4294967295
  %457 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 5, i64 %455, i64 1, i64 %456
  br label %458

458:                                              ; preds = %448, %403
  %459 = phi ptr [ %457, %448 ], [ %412, %403 ]
  %460 = phi ptr [ %442, %448 ], [ %361, %403 ]
  %461 = load i64, ptr %459, align 8, !tbaa !592
  br label %462

462:                                              ; preds = %458, %440, %397
  %463 = phi ptr [ %361, %397 ], [ %442, %440 ], [ %460, %458 ]
  %464 = phi i64 [ 0, %397 ], [ -1, %440 ], [ %461, %458 ]
  %465 = getelementptr inbounds ptr, ptr %463, i64 1
  %466 = load ptr, ptr %465, align 8, !tbaa !13
  %467 = getelementptr inbounds ptr, ptr %466, i64 %302
  %468 = load ptr, ptr %467, align 8, !tbaa !13
  %469 = getelementptr inbounds i64, ptr %468, i64 %318
  store i64 %464, ptr %469, align 8, !tbaa !592
  %470 = add nuw nsw i64 %318, 1
  %471 = icmp eq i64 %470, %300
  br i1 %471, label %472, label %317, !llvm.loop !1011

472:                                              ; preds = %462, %301
  %473 = add nuw nsw i64 %302, 1
  %474 = icmp eq i64 %473, %299
  br i1 %474, label %475, label %301, !llvm.loop !1012

475:                                              ; preds = %472, %282
  %476 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 51
  %477 = load i32, ptr %476, align 8, !tbaa !625
  %478 = icmp eq i32 %477, 0
  br i1 %478, label %479, label %1066

479:                                              ; preds = %475
  %480 = getelementptr inbounds %struct.storable_picture, ptr %284, i64 0, i32 29
  %481 = load i32, ptr %480, align 8, !tbaa !564
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %758, label %483

483:                                              ; preds = %479
  %484 = icmp sgt i32 %286, 7
  br i1 %484, label %485, label %1077

485:                                              ; preds = %483
  %486 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  %487 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  br label %488

488:                                              ; preds = %745, %485
  %489 = phi ptr [ %284, %485 ], [ %746, %745 ]
  %490 = phi ptr [ %283, %485 ], [ %747, %745 ]
  %491 = phi i64 [ 0, %485 ], [ %748, %745 ]
  %492 = getelementptr inbounds %struct.storable_picture, ptr %489, i64 0, i32 19
  %493 = load i32, ptr %492, align 8, !tbaa !566
  %494 = icmp sgt i32 %493, 3
  br i1 %494, label %495, label %745

495:                                              ; preds = %488
  %496 = trunc i64 %491 to i32
  %497 = lshr i32 %496, 1
  %498 = shl nuw nsw i64 %491, 1
  %499 = trunc i64 %498 to i32
  %500 = and i32 %499, 2147483640
  %501 = and i32 %496, 3
  %502 = or i32 %500, %501
  %503 = or i32 %502, 4
  %504 = lshr i32 %496, 2
  %505 = mul nsw i32 %504, %7
  %506 = and i32 %497, 1
  %507 = or i64 %498, 1
  %508 = zext i32 %503 to i64
  %509 = zext i32 %502 to i64
  br label %510

510:                                              ; preds = %735, %495
  %511 = phi ptr [ %489, %495 ], [ %736, %735 ]
  %512 = phi ptr [ %489, %495 ], [ %737, %735 ]
  %513 = phi ptr [ %490, %495 ], [ %738, %735 ]
  %514 = phi i64 [ 0, %495 ], [ %739, %735 ]
  %515 = trunc i64 %514 to i32
  %516 = lshr i32 %515, 1
  %517 = and i32 %516, 1073741822
  %518 = add nsw i32 %517, %505
  %519 = or i32 %518, %506
  %520 = getelementptr inbounds %struct.storable_picture, ptr %512, i64 0, i32 34
  %521 = load ptr, ptr %520, align 8, !tbaa !538
  %522 = sext i32 %519 to i64
  %523 = getelementptr inbounds i8, ptr %521, i64 %522
  %524 = load i8, ptr %523, align 1, !tbaa !14
  %525 = icmp eq i8 %524, 0
  br i1 %525, label %735, label %526

526:                                              ; preds = %510
  %527 = getelementptr inbounds %struct.storable_picture, ptr %513, i64 0, i32 41
  %528 = load ptr, ptr %527, align 8, !tbaa !932
  %529 = getelementptr inbounds ptr, ptr %528, i64 %491
  %530 = load ptr, ptr %529, align 8, !tbaa !13
  %531 = getelementptr inbounds i8, ptr %530, i64 %514
  store i8 1, ptr %531, align 1, !tbaa !14
  %532 = load ptr, ptr %487, align 8, !tbaa !929
  %533 = getelementptr inbounds %struct.storable_picture, ptr %532, i64 0, i32 41
  %534 = load ptr, ptr %533, align 8, !tbaa !932
  %535 = getelementptr inbounds ptr, ptr %534, i64 %491
  %536 = load ptr, ptr %535, align 8, !tbaa !13
  %537 = getelementptr inbounds i8, ptr %536, i64 %514
  store i8 1, ptr %537, align 1, !tbaa !14
  %538 = load ptr, ptr %2, align 8, !tbaa !355
  %539 = getelementptr inbounds %struct.storable_picture, ptr %538, i64 0, i32 41
  %540 = load ptr, ptr %539, align 8, !tbaa !932
  %541 = getelementptr inbounds ptr, ptr %540, i64 %507
  %542 = load ptr, ptr %541, align 8, !tbaa !13
  %543 = getelementptr inbounds i8, ptr %542, i64 %514
  store i8 1, ptr %543, align 1, !tbaa !14
  %544 = load ptr, ptr %2, align 8, !tbaa !355
  %545 = getelementptr inbounds %struct.storable_picture, ptr %544, i64 0, i32 41
  %546 = load ptr, ptr %545, align 8, !tbaa !932
  %547 = getelementptr inbounds ptr, ptr %546, i64 %498
  %548 = load ptr, ptr %547, align 8, !tbaa !13
  %549 = getelementptr inbounds i8, ptr %548, i64 %514
  store i8 1, ptr %549, align 1, !tbaa !14
  %550 = load ptr, ptr %2, align 8, !tbaa !355
  %551 = getelementptr inbounds %struct.storable_picture, ptr %550, i64 0, i32 39
  %552 = load ptr, ptr %551, align 8, !tbaa !371
  %553 = load ptr, ptr %552, align 8, !tbaa !13
  %554 = getelementptr inbounds ptr, ptr %553, i64 %508
  %555 = load ptr, ptr %554, align 8, !tbaa !13
  %556 = getelementptr inbounds ptr, ptr %555, i64 %514
  %557 = load ptr, ptr %556, align 8, !tbaa !13
  %558 = load i16, ptr %557, align 2, !tbaa !40
  %559 = load ptr, ptr %487, align 8, !tbaa !929
  %560 = getelementptr inbounds %struct.storable_picture, ptr %559, i64 0, i32 39
  %561 = load ptr, ptr %560, align 8, !tbaa !371
  %562 = load ptr, ptr %561, align 8, !tbaa !13
  %563 = getelementptr inbounds ptr, ptr %562, i64 %491
  %564 = load ptr, ptr %563, align 8, !tbaa !13
  %565 = getelementptr inbounds ptr, ptr %564, i64 %514
  %566 = load ptr, ptr %565, align 8, !tbaa !13
  store i16 %558, ptr %566, align 2, !tbaa !40
  %567 = getelementptr inbounds i16, ptr %557, i64 1
  %568 = load i16, ptr %567, align 2, !tbaa !40
  %569 = getelementptr inbounds i16, ptr %566, i64 1
  store i16 %568, ptr %569, align 2, !tbaa !40
  %570 = getelementptr inbounds ptr, ptr %552, i64 1
  %571 = load ptr, ptr %570, align 8, !tbaa !13
  %572 = getelementptr inbounds ptr, ptr %571, i64 %508
  %573 = load ptr, ptr %572, align 8, !tbaa !13
  %574 = getelementptr inbounds ptr, ptr %573, i64 %514
  %575 = load ptr, ptr %574, align 8, !tbaa !13
  %576 = load i16, ptr %575, align 2, !tbaa !40
  %577 = getelementptr inbounds ptr, ptr %561, i64 1
  %578 = load ptr, ptr %577, align 8, !tbaa !13
  %579 = getelementptr inbounds ptr, ptr %578, i64 %491
  %580 = load ptr, ptr %579, align 8, !tbaa !13
  %581 = getelementptr inbounds ptr, ptr %580, i64 %514
  %582 = load ptr, ptr %581, align 8, !tbaa !13
  store i16 %576, ptr %582, align 2, !tbaa !40
  %583 = getelementptr inbounds i16, ptr %575, i64 1
  %584 = load i16, ptr %583, align 2, !tbaa !40
  %585 = getelementptr inbounds i16, ptr %582, i64 1
  store i16 %584, ptr %585, align 2, !tbaa !40
  %586 = getelementptr inbounds %struct.storable_picture, ptr %550, i64 0, i32 36
  %587 = load ptr, ptr %586, align 8, !tbaa !197
  %588 = load ptr, ptr %587, align 8, !tbaa !13
  %589 = getelementptr inbounds ptr, ptr %588, i64 %508
  %590 = load ptr, ptr %589, align 8, !tbaa !13
  %591 = getelementptr inbounds i8, ptr %590, i64 %514
  %592 = load i8, ptr %591, align 1, !tbaa !14
  %593 = getelementptr inbounds %struct.storable_picture, ptr %559, i64 0, i32 36
  %594 = load ptr, ptr %593, align 8, !tbaa !197
  %595 = load ptr, ptr %594, align 8, !tbaa !13
  %596 = getelementptr inbounds ptr, ptr %595, i64 %491
  %597 = load ptr, ptr %596, align 8, !tbaa !13
  %598 = getelementptr inbounds i8, ptr %597, i64 %514
  store i8 %592, ptr %598, align 1, !tbaa !14
  %599 = load ptr, ptr %2, align 8, !tbaa !355
  %600 = getelementptr inbounds %struct.storable_picture, ptr %599, i64 0, i32 36
  %601 = load ptr, ptr %600, align 8, !tbaa !197
  %602 = getelementptr inbounds ptr, ptr %601, i64 1
  %603 = load ptr, ptr %602, align 8, !tbaa !13
  %604 = getelementptr inbounds ptr, ptr %603, i64 %508
  %605 = load ptr, ptr %604, align 8, !tbaa !13
  %606 = getelementptr inbounds i8, ptr %605, i64 %514
  %607 = load i8, ptr %606, align 1, !tbaa !14
  %608 = load ptr, ptr %487, align 8, !tbaa !929
  %609 = getelementptr inbounds %struct.storable_picture, ptr %608, i64 0, i32 36
  %610 = load ptr, ptr %609, align 8, !tbaa !197
  %611 = getelementptr inbounds ptr, ptr %610, i64 1
  %612 = load ptr, ptr %611, align 8, !tbaa !13
  %613 = getelementptr inbounds ptr, ptr %612, i64 %491
  %614 = load ptr, ptr %613, align 8, !tbaa !13
  %615 = getelementptr inbounds i8, ptr %614, i64 %514
  store i8 %607, ptr %615, align 1, !tbaa !14
  %616 = load ptr, ptr %2, align 8, !tbaa !355
  %617 = getelementptr inbounds %struct.storable_picture, ptr %616, i64 0, i32 38
  %618 = load ptr, ptr %617, align 8, !tbaa !930
  %619 = getelementptr inbounds ptr, ptr %618, i64 4
  %620 = load ptr, ptr %619, align 8, !tbaa !13
  %621 = getelementptr inbounds ptr, ptr %620, i64 %508
  %622 = load ptr, ptr %621, align 8, !tbaa !13
  %623 = getelementptr inbounds i64, ptr %622, i64 %514
  %624 = load i64, ptr %623, align 8, !tbaa !592
  %625 = load ptr, ptr %487, align 8, !tbaa !929
  %626 = getelementptr inbounds %struct.storable_picture, ptr %625, i64 0, i32 38
  %627 = load ptr, ptr %626, align 8, !tbaa !930
  %628 = load ptr, ptr %627, align 8, !tbaa !13
  %629 = getelementptr inbounds ptr, ptr %628, i64 %491
  %630 = load ptr, ptr %629, align 8, !tbaa !13
  %631 = getelementptr inbounds i64, ptr %630, i64 %514
  store i64 %624, ptr %631, align 8, !tbaa !592
  %632 = getelementptr inbounds ptr, ptr %618, i64 5
  %633 = load ptr, ptr %632, align 8, !tbaa !13
  %634 = getelementptr inbounds ptr, ptr %633, i64 %508
  %635 = load ptr, ptr %634, align 8, !tbaa !13
  %636 = getelementptr inbounds i64, ptr %635, i64 %514
  %637 = load i64, ptr %636, align 8, !tbaa !592
  %638 = getelementptr inbounds ptr, ptr %627, i64 1
  %639 = load ptr, ptr %638, align 8, !tbaa !13
  %640 = getelementptr inbounds ptr, ptr %639, i64 %491
  %641 = load ptr, ptr %640, align 8, !tbaa !13
  %642 = getelementptr inbounds i64, ptr %641, i64 %514
  store i64 %637, ptr %642, align 8, !tbaa !592
  %643 = getelementptr inbounds %struct.storable_picture, ptr %616, i64 0, i32 39
  %644 = load ptr, ptr %643, align 8, !tbaa !371
  %645 = load ptr, ptr %644, align 8, !tbaa !13
  %646 = getelementptr inbounds ptr, ptr %645, i64 %509
  %647 = load ptr, ptr %646, align 8, !tbaa !13
  %648 = getelementptr inbounds ptr, ptr %647, i64 %514
  %649 = load ptr, ptr %648, align 8, !tbaa !13
  %650 = load i16, ptr %649, align 2, !tbaa !40
  %651 = load ptr, ptr %486, align 8, !tbaa !928
  %652 = getelementptr inbounds %struct.storable_picture, ptr %651, i64 0, i32 39
  %653 = load ptr, ptr %652, align 8, !tbaa !371
  %654 = load ptr, ptr %653, align 8, !tbaa !13
  %655 = getelementptr inbounds ptr, ptr %654, i64 %491
  %656 = load ptr, ptr %655, align 8, !tbaa !13
  %657 = getelementptr inbounds ptr, ptr %656, i64 %514
  %658 = load ptr, ptr %657, align 8, !tbaa !13
  store i16 %650, ptr %658, align 2, !tbaa !40
  %659 = getelementptr inbounds i16, ptr %649, i64 1
  %660 = load i16, ptr %659, align 2, !tbaa !40
  %661 = getelementptr inbounds i16, ptr %658, i64 1
  store i16 %660, ptr %661, align 2, !tbaa !40
  %662 = getelementptr inbounds ptr, ptr %644, i64 1
  %663 = load ptr, ptr %662, align 8, !tbaa !13
  %664 = getelementptr inbounds ptr, ptr %663, i64 %509
  %665 = load ptr, ptr %664, align 8, !tbaa !13
  %666 = getelementptr inbounds ptr, ptr %665, i64 %514
  %667 = load ptr, ptr %666, align 8, !tbaa !13
  %668 = load i16, ptr %667, align 2, !tbaa !40
  %669 = getelementptr inbounds ptr, ptr %653, i64 1
  %670 = load ptr, ptr %669, align 8, !tbaa !13
  %671 = getelementptr inbounds ptr, ptr %670, i64 %491
  %672 = load ptr, ptr %671, align 8, !tbaa !13
  %673 = getelementptr inbounds ptr, ptr %672, i64 %514
  %674 = load ptr, ptr %673, align 8, !tbaa !13
  store i16 %668, ptr %674, align 2, !tbaa !40
  %675 = getelementptr inbounds i16, ptr %667, i64 1
  %676 = load i16, ptr %675, align 2, !tbaa !40
  %677 = getelementptr inbounds i16, ptr %674, i64 1
  store i16 %676, ptr %677, align 2, !tbaa !40
  %678 = getelementptr inbounds %struct.storable_picture, ptr %616, i64 0, i32 36
  %679 = load ptr, ptr %678, align 8, !tbaa !197
  %680 = load ptr, ptr %679, align 8, !tbaa !13
  %681 = getelementptr inbounds ptr, ptr %680, i64 %509
  %682 = load ptr, ptr %681, align 8, !tbaa !13
  %683 = getelementptr inbounds i8, ptr %682, i64 %514
  %684 = load i8, ptr %683, align 1, !tbaa !14
  %685 = getelementptr inbounds %struct.storable_picture, ptr %651, i64 0, i32 36
  %686 = load ptr, ptr %685, align 8, !tbaa !197
  %687 = load ptr, ptr %686, align 8, !tbaa !13
  %688 = getelementptr inbounds ptr, ptr %687, i64 %491
  %689 = load ptr, ptr %688, align 8, !tbaa !13
  %690 = getelementptr inbounds i8, ptr %689, i64 %514
  store i8 %684, ptr %690, align 1, !tbaa !14
  %691 = load ptr, ptr %2, align 8, !tbaa !355
  %692 = getelementptr inbounds %struct.storable_picture, ptr %691, i64 0, i32 36
  %693 = load ptr, ptr %692, align 8, !tbaa !197
  %694 = getelementptr inbounds ptr, ptr %693, i64 1
  %695 = load ptr, ptr %694, align 8, !tbaa !13
  %696 = getelementptr inbounds ptr, ptr %695, i64 %509
  %697 = load ptr, ptr %696, align 8, !tbaa !13
  %698 = getelementptr inbounds i8, ptr %697, i64 %514
  %699 = load i8, ptr %698, align 1, !tbaa !14
  %700 = load ptr, ptr %486, align 8, !tbaa !928
  %701 = getelementptr inbounds %struct.storable_picture, ptr %700, i64 0, i32 36
  %702 = load ptr, ptr %701, align 8, !tbaa !197
  %703 = getelementptr inbounds ptr, ptr %702, i64 1
  %704 = load ptr, ptr %703, align 8, !tbaa !13
  %705 = getelementptr inbounds ptr, ptr %704, i64 %491
  %706 = load ptr, ptr %705, align 8, !tbaa !13
  %707 = getelementptr inbounds i8, ptr %706, i64 %514
  store i8 %699, ptr %707, align 1, !tbaa !14
  %708 = load ptr, ptr %2, align 8, !tbaa !355
  %709 = getelementptr inbounds %struct.storable_picture, ptr %708, i64 0, i32 38
  %710 = load ptr, ptr %709, align 8, !tbaa !930
  %711 = getelementptr inbounds ptr, ptr %710, i64 2
  %712 = load ptr, ptr %711, align 8, !tbaa !13
  %713 = getelementptr inbounds ptr, ptr %712, i64 %509
  %714 = load ptr, ptr %713, align 8, !tbaa !13
  %715 = getelementptr inbounds i64, ptr %714, i64 %514
  %716 = load i64, ptr %715, align 8, !tbaa !592
  %717 = load ptr, ptr %486, align 8, !tbaa !928
  %718 = getelementptr inbounds %struct.storable_picture, ptr %717, i64 0, i32 38
  %719 = load ptr, ptr %718, align 8, !tbaa !930
  %720 = load ptr, ptr %719, align 8, !tbaa !13
  %721 = getelementptr inbounds ptr, ptr %720, i64 %491
  %722 = load ptr, ptr %721, align 8, !tbaa !13
  %723 = getelementptr inbounds i64, ptr %722, i64 %514
  store i64 %716, ptr %723, align 8, !tbaa !592
  %724 = getelementptr inbounds ptr, ptr %710, i64 3
  %725 = load ptr, ptr %724, align 8, !tbaa !13
  %726 = getelementptr inbounds ptr, ptr %725, i64 %509
  %727 = load ptr, ptr %726, align 8, !tbaa !13
  %728 = getelementptr inbounds i64, ptr %727, i64 %514
  %729 = load i64, ptr %728, align 8, !tbaa !592
  %730 = getelementptr inbounds ptr, ptr %719, i64 1
  %731 = load ptr, ptr %730, align 8, !tbaa !13
  %732 = getelementptr inbounds ptr, ptr %731, i64 %491
  %733 = load ptr, ptr %732, align 8, !tbaa !13
  %734 = getelementptr inbounds i64, ptr %733, i64 %514
  store i64 %729, ptr %734, align 8, !tbaa !592
  br label %735

735:                                              ; preds = %526, %510
  %736 = phi ptr [ %511, %510 ], [ %708, %526 ]
  %737 = phi ptr [ %512, %510 ], [ %708, %526 ]
  %738 = phi ptr [ %513, %510 ], [ %717, %526 ]
  %739 = add nuw nsw i64 %514, 1
  %740 = getelementptr inbounds %struct.storable_picture, ptr %737, i64 0, i32 19
  %741 = load i32, ptr %740, align 8, !tbaa !566
  %742 = sdiv i32 %741, 4
  %743 = sext i32 %742 to i64
  %744 = icmp slt i64 %739, %743
  br i1 %744, label %510, label %745, !llvm.loop !1013

745:                                              ; preds = %735, %488
  %746 = phi ptr [ %489, %488 ], [ %736, %735 ]
  %747 = phi ptr [ %490, %488 ], [ %738, %735 ]
  %748 = add nuw nsw i64 %491, 1
  %749 = getelementptr inbounds %struct.storable_picture, ptr %746, i64 0, i32 20
  %750 = load i32, ptr %749, align 4, !tbaa !568
  %751 = sdiv i32 %750, 8
  %752 = sext i32 %751 to i64
  %753 = icmp slt i64 %748, %752
  br i1 %753, label %488, label %754, !llvm.loop !1014

754:                                              ; preds = %745
  %.lcssa1 = phi ptr [ %746, %745 ]
  %.lcssa = phi i32 [ %750, %745 ]
  %755 = getelementptr inbounds %struct.storable_picture, ptr %.lcssa1, i64 0, i32 51
  %756 = load i32, ptr %755, align 8, !tbaa !625
  %757 = icmp eq i32 %756, 0
  br i1 %757, label %758, label %1066

758:                                              ; preds = %754, %479
  %759 = phi ptr [ %.lcssa1, %754 ], [ %284, %479 ]
  %760 = phi i32 [ %.lcssa, %754 ], [ %286, %479 ]
  %761 = icmp sgt i32 %760, 7
  br i1 %761, label %762, label %1077

762:                                              ; preds = %758
  %763 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  %764 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  br label %765

765:                                              ; preds = %1058, %762
  %766 = phi ptr [ %759, %762 ], [ %1059, %1058 ]
  %767 = phi i64 [ 0, %762 ], [ %1060, %1058 ]
  %768 = trunc i64 %767 to i32
  %769 = lshr i32 %768, 1
  %770 = and i32 %769, 1
  %771 = getelementptr inbounds %struct.storable_picture, ptr %766, i64 0, i32 19
  %772 = load i32, ptr %771, align 8, !tbaa !566
  %773 = icmp sgt i32 %772, 3
  br i1 %773, label %774, label %1058

774:                                              ; preds = %765
  %775 = and i32 %768, 2147483646
  %776 = or i32 %770, %775
  %777 = shl nuw nsw i32 %776, 1
  %778 = lshr i32 %768, 2
  %779 = mul nsw i32 %778, %7
  %780 = shl nuw nsw i64 %767, 1
  %781 = or i64 %780, 1
  %782 = zext i32 %777 to i64
  %783 = zext i32 %769 to i64
  br label %784

784:                                              ; preds = %1050, %774
  %785 = phi i64 [ 0, %774 ], [ %1051, %1050 ]
  %786 = phi ptr [ %766, %774 ], [ %1052, %1050 ]
  %787 = trunc i64 %785 to i32
  %788 = and i32 %787, 2147483646
  %789 = lshr i32 %787, 1
  %790 = and i32 %789, 1
  %791 = or i32 %790, %788
  %792 = getelementptr inbounds %struct.storable_picture, ptr %786, i64 0, i32 29
  %793 = load i32, ptr %792, align 8, !tbaa !564
  %794 = icmp eq i32 %793, 0
  br i1 %794, label %805, label %795

795:                                              ; preds = %784
  %796 = and i32 %789, 1073741822
  %797 = add nsw i32 %796, %779
  %798 = or i32 %797, %770
  %799 = getelementptr inbounds %struct.storable_picture, ptr %786, i64 0, i32 34
  %800 = load ptr, ptr %799, align 8, !tbaa !538
  %801 = sext i32 %798 to i64
  %802 = getelementptr inbounds i8, ptr %800, i64 %801
  %803 = load i8, ptr %802, align 1, !tbaa !14
  %804 = icmp eq i8 %803, 0
  br i1 %804, label %805, label %1038

805:                                              ; preds = %795, %784
  %806 = getelementptr inbounds %struct.storable_picture, ptr %786, i64 0, i32 41
  %807 = load ptr, ptr %806, align 8, !tbaa !932
  %808 = getelementptr inbounds ptr, ptr %807, i64 %780
  %809 = load ptr, ptr %808, align 8, !tbaa !13
  %810 = getelementptr inbounds i8, ptr %809, i64 %785
  store i8 0, ptr %810, align 1, !tbaa !14
  %811 = load ptr, ptr %2, align 8, !tbaa !355
  %812 = getelementptr inbounds %struct.storable_picture, ptr %811, i64 0, i32 41
  %813 = load ptr, ptr %812, align 8, !tbaa !932
  %814 = getelementptr inbounds ptr, ptr %813, i64 %781
  %815 = load ptr, ptr %814, align 8, !tbaa !13
  %816 = getelementptr inbounds i8, ptr %815, i64 %785
  store i8 0, ptr %816, align 1, !tbaa !14
  %817 = load ptr, ptr %763, align 8, !tbaa !929
  %818 = getelementptr inbounds %struct.storable_picture, ptr %817, i64 0, i32 41
  %819 = load ptr, ptr %818, align 8, !tbaa !932
  %820 = getelementptr inbounds ptr, ptr %819, i64 %767
  %821 = load ptr, ptr %820, align 8, !tbaa !13
  %822 = getelementptr inbounds i8, ptr %821, i64 %785
  store i8 0, ptr %822, align 1, !tbaa !14
  %823 = load ptr, ptr %764, align 8, !tbaa !928
  %824 = getelementptr inbounds %struct.storable_picture, ptr %823, i64 0, i32 41
  %825 = load ptr, ptr %824, align 8, !tbaa !932
  %826 = getelementptr inbounds ptr, ptr %825, i64 %767
  %827 = load ptr, ptr %826, align 8, !tbaa !13
  %828 = getelementptr inbounds i8, ptr %827, i64 %785
  store i8 0, ptr %828, align 1, !tbaa !14
  %829 = load ptr, ptr %2, align 8, !tbaa !355
  %830 = getelementptr inbounds %struct.storable_picture, ptr %829, i64 0, i32 39
  %831 = load ptr, ptr %830, align 8, !tbaa !371
  %832 = load ptr, ptr %831, align 8, !tbaa !13
  %833 = getelementptr inbounds ptr, ptr %832, i64 %782
  %834 = load ptr, ptr %833, align 8, !tbaa !13
  %835 = zext i32 %791 to i64
  %836 = getelementptr inbounds ptr, ptr %834, i64 %835
  %837 = load ptr, ptr %836, align 8, !tbaa !13
  %838 = load i16, ptr %837, align 2, !tbaa !40
  %839 = load ptr, ptr %763, align 8, !tbaa !929
  %840 = getelementptr inbounds %struct.storable_picture, ptr %839, i64 0, i32 39
  %841 = load ptr, ptr %840, align 8, !tbaa !371
  %842 = load ptr, ptr %841, align 8, !tbaa !13
  %843 = getelementptr inbounds ptr, ptr %842, i64 %767
  %844 = load ptr, ptr %843, align 8, !tbaa !13
  %845 = getelementptr inbounds ptr, ptr %844, i64 %785
  %846 = load ptr, ptr %845, align 8, !tbaa !13
  store i16 %838, ptr %846, align 2, !tbaa !40
  %847 = load ptr, ptr %764, align 8, !tbaa !928
  %848 = getelementptr inbounds %struct.storable_picture, ptr %847, i64 0, i32 39
  %849 = load ptr, ptr %848, align 8, !tbaa !371
  %850 = load ptr, ptr %849, align 8, !tbaa !13
  %851 = getelementptr inbounds ptr, ptr %850, i64 %767
  %852 = load ptr, ptr %851, align 8, !tbaa !13
  %853 = getelementptr inbounds ptr, ptr %852, i64 %785
  %854 = load ptr, ptr %853, align 8, !tbaa !13
  store i16 %838, ptr %854, align 2, !tbaa !40
  %855 = getelementptr inbounds i16, ptr %837, i64 1
  %856 = load i16, ptr %855, align 2, !tbaa !40
  %857 = getelementptr inbounds i16, ptr %846, i64 1
  store i16 %856, ptr %857, align 2, !tbaa !40
  %858 = getelementptr inbounds i16, ptr %854, i64 1
  store i16 %856, ptr %858, align 2, !tbaa !40
  %859 = getelementptr inbounds ptr, ptr %831, i64 1
  %860 = load ptr, ptr %859, align 8, !tbaa !13
  %861 = getelementptr inbounds ptr, ptr %860, i64 %782
  %862 = load ptr, ptr %861, align 8, !tbaa !13
  %863 = getelementptr inbounds ptr, ptr %862, i64 %835
  %864 = load ptr, ptr %863, align 8, !tbaa !13
  %865 = load i16, ptr %864, align 2, !tbaa !40
  %866 = getelementptr inbounds ptr, ptr %841, i64 1
  %867 = load ptr, ptr %866, align 8, !tbaa !13
  %868 = getelementptr inbounds ptr, ptr %867, i64 %767
  %869 = load ptr, ptr %868, align 8, !tbaa !13
  %870 = getelementptr inbounds ptr, ptr %869, i64 %785
  %871 = load ptr, ptr %870, align 8, !tbaa !13
  store i16 %865, ptr %871, align 2, !tbaa !40
  %872 = getelementptr inbounds ptr, ptr %849, i64 1
  %873 = load ptr, ptr %872, align 8, !tbaa !13
  %874 = getelementptr inbounds ptr, ptr %873, i64 %767
  %875 = load ptr, ptr %874, align 8, !tbaa !13
  %876 = getelementptr inbounds ptr, ptr %875, i64 %785
  %877 = load ptr, ptr %876, align 8, !tbaa !13
  store i16 %865, ptr %877, align 2, !tbaa !40
  %878 = getelementptr inbounds i16, ptr %864, i64 1
  %879 = load i16, ptr %878, align 2, !tbaa !40
  %880 = getelementptr inbounds i16, ptr %871, i64 1
  store i16 %879, ptr %880, align 2, !tbaa !40
  %881 = getelementptr inbounds i16, ptr %877, i64 1
  store i16 %879, ptr %881, align 2, !tbaa !40
  %882 = getelementptr inbounds %struct.storable_picture, ptr %829, i64 0, i32 36
  %883 = load ptr, ptr %882, align 8, !tbaa !197
  %884 = load ptr, ptr %883, align 8, !tbaa !13
  %885 = getelementptr inbounds ptr, ptr %884, i64 %782
  %886 = load ptr, ptr %885, align 8, !tbaa !13
  %887 = getelementptr inbounds i8, ptr %886, i64 %835
  %888 = load i8, ptr %887, align 1, !tbaa !14
  %889 = sext i8 %888 to i64
  %890 = icmp eq i8 %888, -1
  %891 = getelementptr inbounds %struct.storable_picture, ptr %839, i64 0, i32 36
  %892 = load ptr, ptr %891, align 8, !tbaa !197
  %893 = load ptr, ptr %892, align 8, !tbaa !13
  %894 = getelementptr inbounds ptr, ptr %893, i64 %767
  %895 = load ptr, ptr %894, align 8, !tbaa !13
  %896 = getelementptr inbounds i8, ptr %895, i64 %785
  br i1 %890, label %897, label %905

897:                                              ; preds = %805
  store i8 -1, ptr %896, align 1, !tbaa !14
  %898 = load ptr, ptr %764, align 8, !tbaa !928
  %899 = getelementptr inbounds %struct.storable_picture, ptr %898, i64 0, i32 36
  %900 = load ptr, ptr %899, align 8, !tbaa !197
  %901 = load ptr, ptr %900, align 8, !tbaa !13
  %902 = getelementptr inbounds ptr, ptr %901, i64 %767
  %903 = load ptr, ptr %902, align 8, !tbaa !13
  %904 = getelementptr inbounds i8, ptr %903, i64 %785
  store i8 -1, ptr %904, align 1, !tbaa !14
  br label %956

905:                                              ; preds = %805
  store i8 %888, ptr %896, align 1, !tbaa !14
  %906 = load ptr, ptr %764, align 8, !tbaa !928
  %907 = getelementptr inbounds %struct.storable_picture, ptr %906, i64 0, i32 36
  %908 = load ptr, ptr %907, align 8, !tbaa !197
  %909 = load ptr, ptr %908, align 8, !tbaa !13
  %910 = getelementptr inbounds ptr, ptr %909, i64 %767
  %911 = load ptr, ptr %910, align 8, !tbaa !13
  %912 = getelementptr inbounds i8, ptr %911, i64 %785
  store i8 %888, ptr %912, align 1, !tbaa !14
  %913 = icmp sgt i8 %888, -1
  br i1 %913, label %914, label %939

914:                                              ; preds = %905
  %915 = load ptr, ptr %2, align 8, !tbaa !355
  %916 = getelementptr inbounds %struct.storable_picture, ptr %915, i64 0, i32 35
  %917 = load ptr, ptr %916, align 8, !tbaa !724
  %918 = getelementptr inbounds ptr, ptr %917, i64 %783
  %919 = load ptr, ptr %918, align 8, !tbaa !13
  %920 = lshr i64 %785, 2
  %921 = and i64 %920, 1073741823
  %922 = getelementptr inbounds i16, ptr %919, i64 %921
  %923 = load i16, ptr %922, align 2, !tbaa !40
  %924 = sext i16 %923 to i64
  %925 = getelementptr inbounds %struct.storable_picture, ptr %915, i64 0, i32 7, i64 %924
  %926 = and i64 %889, 4294967295
  %927 = getelementptr inbounds [33 x i64], ptr %925, i64 0, i64 %926
  %928 = load i64, ptr %927, align 8, !tbaa !592
  %929 = load ptr, ptr %764, align 8, !tbaa !928
  %930 = getelementptr inbounds %struct.storable_picture, ptr %929, i64 0, i32 38
  %931 = load ptr, ptr %930, align 8, !tbaa !930
  %932 = load ptr, ptr %931, align 8, !tbaa !13
  %933 = getelementptr inbounds ptr, ptr %932, i64 %767
  %934 = load ptr, ptr %933, align 8, !tbaa !13
  %935 = getelementptr inbounds i64, ptr %934, i64 %785
  store i64 %928, ptr %935, align 8, !tbaa !592
  %936 = getelementptr inbounds %struct.storable_picture, ptr %915, i64 0, i32 8, i64 %924
  %937 = getelementptr inbounds [33 x i64], ptr %936, i64 0, i64 %926
  %938 = load i64, ptr %937, align 8, !tbaa !592
  br label %947

939:                                              ; preds = %905
  %940 = load ptr, ptr %764, align 8, !tbaa !928
  %941 = getelementptr inbounds %struct.storable_picture, ptr %940, i64 0, i32 38
  %942 = load ptr, ptr %941, align 8, !tbaa !930
  %943 = load ptr, ptr %942, align 8, !tbaa !13
  %944 = getelementptr inbounds ptr, ptr %943, i64 %767
  %945 = load ptr, ptr %944, align 8, !tbaa !13
  %946 = getelementptr inbounds i64, ptr %945, i64 %785
  store i64 0, ptr %946, align 8, !tbaa !592
  br label %947

947:                                              ; preds = %939, %914
  %948 = phi i64 [ %938, %914 ], [ 0, %939 ]
  %949 = load ptr, ptr %763, align 8, !tbaa !929
  %950 = getelementptr inbounds %struct.storable_picture, ptr %949, i64 0, i32 38
  %951 = load ptr, ptr %950, align 8, !tbaa !930
  %952 = load ptr, ptr %951, align 8, !tbaa !13
  %953 = getelementptr inbounds ptr, ptr %952, i64 %767
  %954 = load ptr, ptr %953, align 8, !tbaa !13
  %955 = getelementptr inbounds i64, ptr %954, i64 %785
  store i64 %948, ptr %955, align 8, !tbaa !592
  br label %956

956:                                              ; preds = %947, %897
  %957 = load ptr, ptr %2, align 8, !tbaa !355
  %958 = getelementptr inbounds %struct.storable_picture, ptr %957, i64 0, i32 36
  %959 = load ptr, ptr %958, align 8, !tbaa !197
  %960 = getelementptr inbounds ptr, ptr %959, i64 1
  %961 = load ptr, ptr %960, align 8, !tbaa !13
  %962 = getelementptr inbounds ptr, ptr %961, i64 %782
  %963 = load ptr, ptr %962, align 8, !tbaa !13
  %964 = getelementptr inbounds i8, ptr %963, i64 %835
  %965 = load i8, ptr %964, align 1, !tbaa !14
  %966 = sext i8 %965 to i64
  %967 = icmp eq i8 %965, -1
  %968 = load ptr, ptr %763, align 8, !tbaa !929
  %969 = getelementptr inbounds %struct.storable_picture, ptr %968, i64 0, i32 36
  %970 = load ptr, ptr %969, align 8, !tbaa !197
  %971 = getelementptr inbounds ptr, ptr %970, i64 1
  %972 = load ptr, ptr %971, align 8, !tbaa !13
  %973 = getelementptr inbounds ptr, ptr %972, i64 %767
  %974 = load ptr, ptr %973, align 8, !tbaa !13
  %975 = getelementptr inbounds i8, ptr %974, i64 %785
  br i1 %967, label %976, label %985

976:                                              ; preds = %956
  store i8 -1, ptr %975, align 1, !tbaa !14
  %977 = load ptr, ptr %764, align 8, !tbaa !928
  %978 = getelementptr inbounds %struct.storable_picture, ptr %977, i64 0, i32 36
  %979 = load ptr, ptr %978, align 8, !tbaa !197
  %980 = getelementptr inbounds ptr, ptr %979, i64 1
  %981 = load ptr, ptr %980, align 8, !tbaa !13
  %982 = getelementptr inbounds ptr, ptr %981, i64 %767
  %983 = load ptr, ptr %982, align 8, !tbaa !13
  %984 = getelementptr inbounds i8, ptr %983, i64 %785
  store i8 -1, ptr %984, align 1, !tbaa !14
  br label %1050

985:                                              ; preds = %956
  store i8 %965, ptr %975, align 1, !tbaa !14
  %986 = load ptr, ptr %764, align 8, !tbaa !928
  %987 = getelementptr inbounds %struct.storable_picture, ptr %986, i64 0, i32 36
  %988 = load ptr, ptr %987, align 8, !tbaa !197
  %989 = getelementptr inbounds ptr, ptr %988, i64 1
  %990 = load ptr, ptr %989, align 8, !tbaa !13
  %991 = getelementptr inbounds ptr, ptr %990, i64 %767
  %992 = load ptr, ptr %991, align 8, !tbaa !13
  %993 = getelementptr inbounds i8, ptr %992, i64 %785
  store i8 %965, ptr %993, align 1, !tbaa !14
  %994 = icmp sgt i8 %965, -1
  br i1 %994, label %995, label %1019

995:                                              ; preds = %985
  %996 = load ptr, ptr %2, align 8, !tbaa !355
  %997 = getelementptr inbounds %struct.storable_picture, ptr %996, i64 0, i32 35
  %998 = load ptr, ptr %997, align 8, !tbaa !724
  %999 = getelementptr inbounds ptr, ptr %998, i64 %783
  %1000 = load ptr, ptr %999, align 8, !tbaa !13
  %1001 = lshr i64 %785, 2
  %1002 = and i64 %1001, 1073741823
  %1003 = getelementptr inbounds i16, ptr %1000, i64 %1002
  %1004 = load i16, ptr %1003, align 2, !tbaa !40
  %1005 = sext i16 %1004 to i64
  %1006 = and i64 %966, 4294967295
  %1007 = getelementptr inbounds %struct.storable_picture, ptr %996, i64 0, i32 7, i64 %1005, i64 1, i64 %1006
  %1008 = load i64, ptr %1007, align 8, !tbaa !592
  %1009 = load ptr, ptr %764, align 8, !tbaa !928
  %1010 = getelementptr inbounds %struct.storable_picture, ptr %1009, i64 0, i32 38
  %1011 = load ptr, ptr %1010, align 8, !tbaa !930
  %1012 = getelementptr inbounds ptr, ptr %1011, i64 1
  %1013 = load ptr, ptr %1012, align 8, !tbaa !13
  %1014 = getelementptr inbounds ptr, ptr %1013, i64 %767
  %1015 = load ptr, ptr %1014, align 8, !tbaa !13
  %1016 = getelementptr inbounds i64, ptr %1015, i64 %785
  store i64 %1008, ptr %1016, align 8, !tbaa !592
  %1017 = getelementptr inbounds %struct.storable_picture, ptr %996, i64 0, i32 8, i64 %1005, i64 1, i64 %1006
  %1018 = load i64, ptr %1017, align 8, !tbaa !592
  br label %1028

1019:                                             ; preds = %985
  %1020 = load ptr, ptr %764, align 8, !tbaa !928
  %1021 = getelementptr inbounds %struct.storable_picture, ptr %1020, i64 0, i32 38
  %1022 = load ptr, ptr %1021, align 8, !tbaa !930
  %1023 = getelementptr inbounds ptr, ptr %1022, i64 1
  %1024 = load ptr, ptr %1023, align 8, !tbaa !13
  %1025 = getelementptr inbounds ptr, ptr %1024, i64 %767
  %1026 = load ptr, ptr %1025, align 8, !tbaa !13
  %1027 = getelementptr inbounds i64, ptr %1026, i64 %785
  store i64 0, ptr %1027, align 8, !tbaa !592
  br label %1028

1028:                                             ; preds = %1019, %995
  %1029 = phi i64 [ %1018, %995 ], [ 0, %1019 ]
  %1030 = load ptr, ptr %763, align 8, !tbaa !929
  %1031 = getelementptr inbounds %struct.storable_picture, ptr %1030, i64 0, i32 38
  %1032 = load ptr, ptr %1031, align 8, !tbaa !930
  %1033 = getelementptr inbounds ptr, ptr %1032, i64 1
  %1034 = load ptr, ptr %1033, align 8, !tbaa !13
  %1035 = getelementptr inbounds ptr, ptr %1034, i64 %767
  %1036 = load ptr, ptr %1035, align 8, !tbaa !13
  %1037 = getelementptr inbounds i64, ptr %1036, i64 %785
  store i64 %1029, ptr %1037, align 8, !tbaa !592
  br label %1050

1038:                                             ; preds = %795
  %1039 = getelementptr inbounds %struct.storable_picture, ptr %786, i64 0, i32 41
  %1040 = load ptr, ptr %1039, align 8, !tbaa !932
  %1041 = getelementptr inbounds ptr, ptr %1040, i64 %780
  %1042 = load ptr, ptr %1041, align 8, !tbaa !13
  %1043 = getelementptr inbounds i8, ptr %1042, i64 %785
  store i8 %803, ptr %1043, align 1, !tbaa !14
  %1044 = load ptr, ptr %2, align 8, !tbaa !355
  %1045 = getelementptr inbounds %struct.storable_picture, ptr %1044, i64 0, i32 41
  %1046 = load ptr, ptr %1045, align 8, !tbaa !932
  %1047 = getelementptr inbounds ptr, ptr %1046, i64 %781
  %1048 = load ptr, ptr %1047, align 8, !tbaa !13
  %1049 = getelementptr inbounds i8, ptr %1048, i64 %785
  store i8 %803, ptr %1049, align 1, !tbaa !14
  br label %1050

1050:                                             ; preds = %1038, %1028, %976
  %1051 = add nuw nsw i64 %785, 1
  %1052 = load ptr, ptr %2, align 8, !tbaa !355
  %1053 = getelementptr inbounds %struct.storable_picture, ptr %1052, i64 0, i32 19
  %1054 = load i32, ptr %1053, align 8, !tbaa !566
  %1055 = sdiv i32 %1054, 4
  %1056 = sext i32 %1055 to i64
  %1057 = icmp slt i64 %1051, %1056
  br i1 %1057, label %784, label %1058, !llvm.loop !1015

1058:                                             ; preds = %1050, %765
  %1059 = phi ptr [ %766, %765 ], [ %1052, %1050 ]
  %1060 = add nuw nsw i64 %767, 1
  %1061 = getelementptr inbounds %struct.storable_picture, ptr %1059, i64 0, i32 20
  %1062 = load i32, ptr %1061, align 4, !tbaa !568
  %1063 = sdiv i32 %1062, 8
  %1064 = sext i32 %1063 to i64
  %1065 = icmp slt i64 %1060, %1064
  br i1 %1065, label %765, label %1077, !llvm.loop !1016

1066:                                             ; preds = %754, %475
  %1067 = phi ptr [ %.lcssa1, %754 ], [ %284, %475 ]
  %1068 = phi i32 [ %.lcssa, %754 ], [ %286, %475 ]
  %1069 = getelementptr inbounds %struct.storable_picture, ptr %1067, i64 0, i32 41
  %1070 = load ptr, ptr %1069, align 8, !tbaa !932
  %1071 = load ptr, ptr %1070, align 8, !tbaa !13
  %1072 = getelementptr inbounds %struct.storable_picture, ptr %1067, i64 0, i32 19
  %1073 = load i32, ptr %1072, align 8, !tbaa !566
  %1074 = mul nsw i32 %1073, %1068
  %1075 = sdiv i32 %1074, 16
  %1076 = sext i32 %1075 to i64
  tail call void @llvm.memset.p0.i64(ptr align 1 %1071, i8 0, i64 %1076, i1 false)
  br label %1077

1077:                                             ; preds = %1066, %1058, %758, %483
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @dpb_combine_field(ptr nocapture noundef %0) #0 {
  tail call void @dpb_combine_field_yuv(ptr noundef %0) #47
  %2 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  %3 = load ptr, ptr %2, align 8, !tbaa !928
  %4 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 18
  %5 = load i16, ptr %4, align 4, !tbaa !725
  %6 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  %7 = load ptr, ptr %6, align 8, !tbaa !929
  %8 = getelementptr inbounds %struct.storable_picture, ptr %7, i64 0, i32 18
  %9 = load i16, ptr %8, align 4, !tbaa !725
  %10 = tail call i16 @llvm.smax.i16(i16 %5, i16 %9)
  %11 = icmp slt i16 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = zext i16 %10 to i64
  %14 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  %15 = load ptr, ptr %14, align 8, !tbaa !355
  br label %16

16:                                               ; preds = %58, %12
  %17 = phi i64 [ 0, %12 ], [ %59, %58 ]
  br label %28

18:                                               ; preds = %58, %1
  %19 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 20
  %20 = load i32, ptr %19, align 4, !tbaa !568
  %21 = icmp sgt i32 %20, 3
  br i1 %21, label %22, label %431

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  br label %61

24:                                               ; preds = %28
  %25 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 5, i64 %17
  %26 = getelementptr inbounds %struct.storable_picture, ptr %7, i64 0, i32 5, i64 %17
  %27 = getelementptr inbounds %struct.storable_picture, ptr %15, i64 0, i32 5, i64 %17
  br label %43

28:                                               ; preds = %28, %16
  %29 = phi i64 [ 0, %16 ], [ %41, %28 ]
  %30 = shl nuw nsw i64 %29, 1
  %31 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 5, i64 %17, i64 1, i64 %30
  %32 = load i64, ptr %31, align 8, !tbaa !592
  %33 = sdiv i64 %32, 2
  %34 = shl nsw i64 %33, 1
  %35 = getelementptr inbounds %struct.storable_picture, ptr %7, i64 0, i32 5, i64 %17, i64 1, i64 %30
  %36 = load i64, ptr %35, align 8, !tbaa !592
  %37 = sdiv i64 %36, 2
  %38 = shl nsw i64 %37, 1
  %39 = tail call i64 @llvm.smin.i64(i64 %34, i64 %38)
  %40 = getelementptr inbounds %struct.storable_picture, ptr %15, i64 0, i32 5, i64 %17, i64 1, i64 %29
  store i64 %39, ptr %40, align 8, !tbaa !592
  %41 = add nuw nsw i64 %29, 1
  %42 = icmp eq i64 %41, 16
  br i1 %42, label %24, label %28, !llvm.loop !1017

43:                                               ; preds = %43, %24
  %44 = phi i64 [ 0, %24 ], [ %56, %43 ]
  %45 = shl nuw nsw i64 %44, 1
  %46 = getelementptr inbounds [33 x i64], ptr %25, i64 0, i64 %45
  %47 = load i64, ptr %46, align 8, !tbaa !592
  %48 = sdiv i64 %47, 2
  %49 = shl nsw i64 %48, 1
  %50 = getelementptr inbounds [33 x i64], ptr %26, i64 0, i64 %45
  %51 = load i64, ptr %50, align 8, !tbaa !592
  %52 = sdiv i64 %51, 2
  %53 = shl nsw i64 %52, 1
  %54 = tail call i64 @llvm.smin.i64(i64 %49, i64 %53)
  %55 = getelementptr inbounds [33 x i64], ptr %27, i64 0, i64 %44
  store i64 %54, ptr %55, align 8, !tbaa !592
  %56 = add nuw nsw i64 %44, 1
  %57 = icmp eq i64 %56, 16
  br i1 %57, label %58, label %43, !llvm.loop !1018

58:                                               ; preds = %43
  %59 = add nuw nsw i64 %17, 1
  %60 = icmp eq i64 %17, %13
  br i1 %60, label %18, label %16, !llvm.loop !1019

61:                                               ; preds = %423, %22
  %62 = phi ptr [ %3, %22 ], [ %424, %423 ]
  %63 = phi i64 [ 0, %22 ], [ %425, %423 ]
  %64 = getelementptr inbounds %struct.storable_picture, ptr %62, i64 0, i32 19
  %65 = load i32, ptr %64, align 8, !tbaa !566
  %66 = icmp sgt i32 %65, 3
  br i1 %66, label %67, label %423

67:                                               ; preds = %61
  %68 = trunc i64 %63 to i32
  %69 = shl i32 %68, 1
  %70 = and i32 %69, 2147483640
  %71 = trunc i64 %63 to i32
  %72 = and i32 %71, 3
  %73 = or i32 %70, %72
  %74 = or i32 %73, 4
  %75 = zext i32 %74 to i64
  %76 = zext i32 %73 to i64
  %77 = lshr i64 %63, 2
  %78 = and i64 %77, 1073741823
  br label %79

79:                                               ; preds = %397, %67
  %80 = phi i64 [ 0, %67 ], [ %416, %397 ]
  %81 = load ptr, ptr %23, align 8, !tbaa !355
  %82 = getelementptr inbounds %struct.storable_picture, ptr %81, i64 0, i32 41
  %83 = load ptr, ptr %82, align 8, !tbaa !932
  %84 = getelementptr inbounds ptr, ptr %83, i64 %75
  %85 = load ptr, ptr %84, align 8, !tbaa !13
  %86 = getelementptr inbounds i8, ptr %85, i64 %80
  store i8 1, ptr %86, align 1, !tbaa !14
  %87 = load ptr, ptr %23, align 8, !tbaa !355
  %88 = getelementptr inbounds %struct.storable_picture, ptr %87, i64 0, i32 41
  %89 = load ptr, ptr %88, align 8, !tbaa !932
  %90 = getelementptr inbounds ptr, ptr %89, i64 %76
  %91 = load ptr, ptr %90, align 8, !tbaa !13
  %92 = getelementptr inbounds i8, ptr %91, i64 %80
  store i8 1, ptr %92, align 1, !tbaa !14
  %93 = load ptr, ptr %2, align 8, !tbaa !928
  %94 = getelementptr inbounds %struct.storable_picture, ptr %93, i64 0, i32 39
  %95 = load ptr, ptr %94, align 8, !tbaa !371
  %96 = load ptr, ptr %95, align 8, !tbaa !13
  %97 = getelementptr inbounds ptr, ptr %96, i64 %63
  %98 = load ptr, ptr %97, align 8, !tbaa !13
  %99 = getelementptr inbounds ptr, ptr %98, i64 %80
  %100 = load ptr, ptr %99, align 8, !tbaa !13
  %101 = load i16, ptr %100, align 2, !tbaa !40
  %102 = load ptr, ptr %23, align 8, !tbaa !355
  %103 = getelementptr inbounds %struct.storable_picture, ptr %102, i64 0, i32 39
  %104 = load ptr, ptr %103, align 8, !tbaa !371
  %105 = load ptr, ptr %104, align 8, !tbaa !13
  %106 = getelementptr inbounds ptr, ptr %105, i64 %76
  %107 = load ptr, ptr %106, align 8, !tbaa !13
  %108 = getelementptr inbounds ptr, ptr %107, i64 %80
  %109 = load ptr, ptr %108, align 8, !tbaa !13
  store i16 %101, ptr %109, align 2, !tbaa !40
  %110 = getelementptr inbounds i16, ptr %100, i64 1
  %111 = load i16, ptr %110, align 2, !tbaa !40
  %112 = getelementptr inbounds i16, ptr %109, i64 1
  store i16 %111, ptr %112, align 2, !tbaa !40
  %113 = getelementptr inbounds ptr, ptr %95, i64 1
  %114 = load ptr, ptr %113, align 8, !tbaa !13
  %115 = getelementptr inbounds ptr, ptr %114, i64 %63
  %116 = load ptr, ptr %115, align 8, !tbaa !13
  %117 = getelementptr inbounds ptr, ptr %116, i64 %80
  %118 = load ptr, ptr %117, align 8, !tbaa !13
  %119 = load i16, ptr %118, align 2, !tbaa !40
  %120 = getelementptr inbounds ptr, ptr %104, i64 1
  %121 = load ptr, ptr %120, align 8, !tbaa !13
  %122 = getelementptr inbounds ptr, ptr %121, i64 %76
  %123 = load ptr, ptr %122, align 8, !tbaa !13
  %124 = getelementptr inbounds ptr, ptr %123, i64 %80
  %125 = load ptr, ptr %124, align 8, !tbaa !13
  store i16 %119, ptr %125, align 2, !tbaa !40
  %126 = getelementptr inbounds i16, ptr %118, i64 1
  %127 = load i16, ptr %126, align 2, !tbaa !40
  %128 = getelementptr inbounds i16, ptr %125, i64 1
  store i16 %127, ptr %128, align 2, !tbaa !40
  %129 = getelementptr inbounds %struct.storable_picture, ptr %93, i64 0, i32 36
  %130 = load ptr, ptr %129, align 8, !tbaa !197
  %131 = load ptr, ptr %130, align 8, !tbaa !13
  %132 = getelementptr inbounds ptr, ptr %131, i64 %63
  %133 = load ptr, ptr %132, align 8, !tbaa !13
  %134 = getelementptr inbounds i8, ptr %133, i64 %80
  %135 = load i8, ptr %134, align 1, !tbaa !14
  %136 = getelementptr inbounds %struct.storable_picture, ptr %102, i64 0, i32 36
  %137 = load ptr, ptr %136, align 8, !tbaa !197
  %138 = load ptr, ptr %137, align 8, !tbaa !13
  %139 = getelementptr inbounds ptr, ptr %138, i64 %76
  %140 = load ptr, ptr %139, align 8, !tbaa !13
  %141 = getelementptr inbounds i8, ptr %140, i64 %80
  store i8 %135, ptr %141, align 1, !tbaa !14
  %142 = sext i8 %135 to i32
  %143 = load ptr, ptr %2, align 8, !tbaa !928
  %144 = getelementptr inbounds %struct.storable_picture, ptr %143, i64 0, i32 36
  %145 = load ptr, ptr %144, align 8, !tbaa !197
  %146 = getelementptr inbounds ptr, ptr %145, i64 1
  %147 = load ptr, ptr %146, align 8, !tbaa !13
  %148 = getelementptr inbounds ptr, ptr %147, i64 %63
  %149 = load ptr, ptr %148, align 8, !tbaa !13
  %150 = getelementptr inbounds i8, ptr %149, i64 %80
  %151 = load i8, ptr %150, align 1, !tbaa !14
  %152 = load ptr, ptr %23, align 8, !tbaa !355
  %153 = getelementptr inbounds %struct.storable_picture, ptr %152, i64 0, i32 36
  %154 = load ptr, ptr %153, align 8, !tbaa !197
  %155 = getelementptr inbounds ptr, ptr %154, i64 1
  %156 = load ptr, ptr %155, align 8, !tbaa !13
  %157 = getelementptr inbounds ptr, ptr %156, i64 %76
  %158 = load ptr, ptr %157, align 8, !tbaa !13
  %159 = getelementptr inbounds i8, ptr %158, i64 %80
  store i8 %151, ptr %159, align 1, !tbaa !14
  %160 = sext i8 %151 to i32
  %161 = icmp sgt i8 %135, -1
  %162 = load ptr, ptr %2, align 8, !tbaa !928
  br i1 %161, label %163, label %177

163:                                              ; preds = %79
  %164 = getelementptr inbounds %struct.storable_picture, ptr %162, i64 0, i32 35
  %165 = load ptr, ptr %164, align 8, !tbaa !724
  %166 = getelementptr inbounds ptr, ptr %165, i64 %78
  %167 = load ptr, ptr %166, align 8, !tbaa !13
  %168 = lshr i64 %80, 2
  %169 = and i64 %168, 1073741823
  %170 = getelementptr inbounds i16, ptr %167, i64 %169
  %171 = load i16, ptr %170, align 2, !tbaa !40
  %172 = sext i16 %171 to i64
  %173 = getelementptr inbounds %struct.storable_picture, ptr %162, i64 0, i32 5, i64 %172
  %174 = zext i32 %142 to i64
  %175 = getelementptr inbounds [33 x i64], ptr %173, i64 0, i64 %174
  %176 = load i64, ptr %175, align 8, !tbaa !592
  br label %177

177:                                              ; preds = %163, %79
  %178 = phi i64 [ %176, %163 ], [ 0, %79 ]
  %179 = getelementptr inbounds %struct.storable_picture, ptr %162, i64 0, i32 38
  %180 = load ptr, ptr %179, align 8, !tbaa !930
  %181 = load ptr, ptr %180, align 8, !tbaa !13
  %182 = getelementptr inbounds ptr, ptr %181, i64 %63
  %183 = load ptr, ptr %182, align 8, !tbaa !13
  %184 = getelementptr inbounds i64, ptr %183, i64 %80
  store i64 %178, ptr %184, align 8, !tbaa !592
  %185 = icmp sgt i8 %151, -1
  br i1 %185, label %186, label %199

186:                                              ; preds = %177
  %187 = getelementptr inbounds %struct.storable_picture, ptr %162, i64 0, i32 35
  %188 = load ptr, ptr %187, align 8, !tbaa !724
  %189 = getelementptr inbounds ptr, ptr %188, i64 %78
  %190 = load ptr, ptr %189, align 8, !tbaa !13
  %191 = lshr i64 %80, 2
  %192 = and i64 %191, 1073741823
  %193 = getelementptr inbounds i16, ptr %190, i64 %192
  %194 = load i16, ptr %193, align 2, !tbaa !40
  %195 = sext i16 %194 to i64
  %196 = zext i32 %160 to i64
  %197 = getelementptr inbounds %struct.storable_picture, ptr %162, i64 0, i32 5, i64 %195, i64 1, i64 %196
  %198 = load i64, ptr %197, align 8, !tbaa !592
  br label %199

199:                                              ; preds = %186, %177
  %200 = phi i64 [ %198, %186 ], [ 0, %177 ]
  %201 = getelementptr inbounds ptr, ptr %180, i64 1
  %202 = load ptr, ptr %201, align 8, !tbaa !13
  %203 = getelementptr inbounds ptr, ptr %202, i64 %63
  %204 = load ptr, ptr %203, align 8, !tbaa !13
  %205 = getelementptr inbounds i64, ptr %204, i64 %80
  store i64 %200, ptr %205, align 8, !tbaa !592
  br i1 %161, label %206, label %220

206:                                              ; preds = %199
  %207 = getelementptr inbounds %struct.storable_picture, ptr %162, i64 0, i32 35
  %208 = load ptr, ptr %207, align 8, !tbaa !724
  %209 = getelementptr inbounds ptr, ptr %208, i64 %78
  %210 = load ptr, ptr %209, align 8, !tbaa !13
  %211 = lshr i64 %80, 2
  %212 = and i64 %211, 1073741823
  %213 = getelementptr inbounds i16, ptr %210, i64 %212
  %214 = load i16, ptr %213, align 2, !tbaa !40
  %215 = sext i16 %214 to i64
  %216 = getelementptr inbounds %struct.storable_picture, ptr %162, i64 0, i32 6, i64 %215
  %217 = zext i32 %142 to i64
  %218 = getelementptr inbounds [33 x i64], ptr %216, i64 0, i64 %217
  %219 = load i64, ptr %218, align 8, !tbaa !592
  br label %220

220:                                              ; preds = %206, %199
  %221 = phi i64 [ %219, %206 ], [ 0, %199 ]
  %222 = load ptr, ptr %23, align 8, !tbaa !355
  %223 = getelementptr inbounds %struct.storable_picture, ptr %222, i64 0, i32 38
  %224 = load ptr, ptr %223, align 8, !tbaa !930
  %225 = load ptr, ptr %224, align 8, !tbaa !13
  %226 = getelementptr inbounds ptr, ptr %225, i64 %76
  %227 = load ptr, ptr %226, align 8, !tbaa !13
  %228 = getelementptr inbounds i64, ptr %227, i64 %80
  store i64 %221, ptr %228, align 8, !tbaa !592
  br i1 %185, label %229, label %242

229:                                              ; preds = %220
  %230 = getelementptr inbounds %struct.storable_picture, ptr %162, i64 0, i32 35
  %231 = load ptr, ptr %230, align 8, !tbaa !724
  %232 = getelementptr inbounds ptr, ptr %231, i64 %78
  %233 = load ptr, ptr %232, align 8, !tbaa !13
  %234 = lshr i64 %80, 2
  %235 = and i64 %234, 1073741823
  %236 = getelementptr inbounds i16, ptr %233, i64 %235
  %237 = load i16, ptr %236, align 2, !tbaa !40
  %238 = sext i16 %237 to i64
  %239 = zext i32 %160 to i64
  %240 = getelementptr inbounds %struct.storable_picture, ptr %162, i64 0, i32 6, i64 %238, i64 1, i64 %239
  %241 = load i64, ptr %240, align 8, !tbaa !592
  br label %242

242:                                              ; preds = %229, %220
  %243 = phi i64 [ %241, %229 ], [ 0, %220 ]
  %244 = getelementptr inbounds ptr, ptr %224, i64 1
  %245 = load ptr, ptr %244, align 8, !tbaa !13
  %246 = getelementptr inbounds ptr, ptr %245, i64 %76
  %247 = load ptr, ptr %246, align 8, !tbaa !13
  %248 = getelementptr inbounds i64, ptr %247, i64 %80
  store i64 %243, ptr %248, align 8, !tbaa !592
  %249 = load ptr, ptr %6, align 8, !tbaa !929
  %250 = getelementptr inbounds %struct.storable_picture, ptr %249, i64 0, i32 39
  %251 = load ptr, ptr %250, align 8, !tbaa !371
  %252 = load ptr, ptr %251, align 8, !tbaa !13
  %253 = getelementptr inbounds ptr, ptr %252, i64 %63
  %254 = load ptr, ptr %253, align 8, !tbaa !13
  %255 = getelementptr inbounds ptr, ptr %254, i64 %80
  %256 = load ptr, ptr %255, align 8, !tbaa !13
  %257 = load i16, ptr %256, align 2, !tbaa !40
  %258 = getelementptr inbounds %struct.storable_picture, ptr %222, i64 0, i32 39
  %259 = load ptr, ptr %258, align 8, !tbaa !371
  %260 = load ptr, ptr %259, align 8, !tbaa !13
  %261 = getelementptr inbounds ptr, ptr %260, i64 %75
  %262 = load ptr, ptr %261, align 8, !tbaa !13
  %263 = getelementptr inbounds ptr, ptr %262, i64 %80
  %264 = load ptr, ptr %263, align 8, !tbaa !13
  store i16 %257, ptr %264, align 2, !tbaa !40
  %265 = getelementptr inbounds i16, ptr %256, i64 1
  %266 = load i16, ptr %265, align 2, !tbaa !40
  %267 = getelementptr inbounds i16, ptr %264, i64 1
  store i16 %266, ptr %267, align 2, !tbaa !40
  %268 = getelementptr inbounds ptr, ptr %251, i64 1
  %269 = load ptr, ptr %268, align 8, !tbaa !13
  %270 = getelementptr inbounds ptr, ptr %269, i64 %63
  %271 = load ptr, ptr %270, align 8, !tbaa !13
  %272 = getelementptr inbounds ptr, ptr %271, i64 %80
  %273 = load ptr, ptr %272, align 8, !tbaa !13
  %274 = load i16, ptr %273, align 2, !tbaa !40
  %275 = getelementptr inbounds ptr, ptr %259, i64 1
  %276 = load ptr, ptr %275, align 8, !tbaa !13
  %277 = getelementptr inbounds ptr, ptr %276, i64 %75
  %278 = load ptr, ptr %277, align 8, !tbaa !13
  %279 = getelementptr inbounds ptr, ptr %278, i64 %80
  %280 = load ptr, ptr %279, align 8, !tbaa !13
  store i16 %274, ptr %280, align 2, !tbaa !40
  %281 = getelementptr inbounds i16, ptr %273, i64 1
  %282 = load i16, ptr %281, align 2, !tbaa !40
  %283 = getelementptr inbounds i16, ptr %280, i64 1
  store i16 %282, ptr %283, align 2, !tbaa !40
  %284 = getelementptr inbounds %struct.storable_picture, ptr %249, i64 0, i32 36
  %285 = load ptr, ptr %284, align 8, !tbaa !197
  %286 = load ptr, ptr %285, align 8, !tbaa !13
  %287 = getelementptr inbounds ptr, ptr %286, i64 %63
  %288 = load ptr, ptr %287, align 8, !tbaa !13
  %289 = getelementptr inbounds i8, ptr %288, i64 %80
  %290 = load i8, ptr %289, align 1, !tbaa !14
  %291 = getelementptr inbounds %struct.storable_picture, ptr %222, i64 0, i32 36
  %292 = load ptr, ptr %291, align 8, !tbaa !197
  %293 = load ptr, ptr %292, align 8, !tbaa !13
  %294 = getelementptr inbounds ptr, ptr %293, i64 %75
  %295 = load ptr, ptr %294, align 8, !tbaa !13
  %296 = getelementptr inbounds i8, ptr %295, i64 %80
  store i8 %290, ptr %296, align 1, !tbaa !14
  %297 = sext i8 %290 to i32
  %298 = load ptr, ptr %6, align 8, !tbaa !929
  %299 = getelementptr inbounds %struct.storable_picture, ptr %298, i64 0, i32 36
  %300 = load ptr, ptr %299, align 8, !tbaa !197
  %301 = getelementptr inbounds ptr, ptr %300, i64 1
  %302 = load ptr, ptr %301, align 8, !tbaa !13
  %303 = getelementptr inbounds ptr, ptr %302, i64 %63
  %304 = load ptr, ptr %303, align 8, !tbaa !13
  %305 = getelementptr inbounds i8, ptr %304, i64 %80
  %306 = load i8, ptr %305, align 1, !tbaa !14
  %307 = load ptr, ptr %23, align 8, !tbaa !355
  %308 = getelementptr inbounds %struct.storable_picture, ptr %307, i64 0, i32 36
  %309 = load ptr, ptr %308, align 8, !tbaa !197
  %310 = getelementptr inbounds ptr, ptr %309, i64 1
  %311 = load ptr, ptr %310, align 8, !tbaa !13
  %312 = getelementptr inbounds ptr, ptr %311, i64 %75
  %313 = load ptr, ptr %312, align 8, !tbaa !13
  %314 = getelementptr inbounds i8, ptr %313, i64 %80
  store i8 %306, ptr %314, align 1, !tbaa !14
  %315 = sext i8 %306 to i32
  %316 = icmp sgt i8 %290, -1
  %317 = load ptr, ptr %6, align 8, !tbaa !929
  br i1 %316, label %318, label %332

318:                                              ; preds = %242
  %319 = getelementptr inbounds %struct.storable_picture, ptr %317, i64 0, i32 35
  %320 = load ptr, ptr %319, align 8, !tbaa !724
  %321 = getelementptr inbounds ptr, ptr %320, i64 %78
  %322 = load ptr, ptr %321, align 8, !tbaa !13
  %323 = lshr i64 %80, 2
  %324 = and i64 %323, 1073741823
  %325 = getelementptr inbounds i16, ptr %322, i64 %324
  %326 = load i16, ptr %325, align 2, !tbaa !40
  %327 = sext i16 %326 to i64
  %328 = getelementptr inbounds %struct.storable_picture, ptr %317, i64 0, i32 5, i64 %327
  %329 = zext i32 %297 to i64
  %330 = getelementptr inbounds [33 x i64], ptr %328, i64 0, i64 %329
  %331 = load i64, ptr %330, align 8, !tbaa !592
  br label %332

332:                                              ; preds = %318, %242
  %333 = phi i64 [ %331, %318 ], [ 0, %242 ]
  %334 = getelementptr inbounds %struct.storable_picture, ptr %317, i64 0, i32 38
  %335 = load ptr, ptr %334, align 8, !tbaa !930
  %336 = load ptr, ptr %335, align 8, !tbaa !13
  %337 = getelementptr inbounds ptr, ptr %336, i64 %63
  %338 = load ptr, ptr %337, align 8, !tbaa !13
  %339 = getelementptr inbounds i64, ptr %338, i64 %80
  store i64 %333, ptr %339, align 8, !tbaa !592
  %340 = icmp sgt i8 %306, -1
  br i1 %340, label %341, label %354

341:                                              ; preds = %332
  %342 = getelementptr inbounds %struct.storable_picture, ptr %317, i64 0, i32 35
  %343 = load ptr, ptr %342, align 8, !tbaa !724
  %344 = getelementptr inbounds ptr, ptr %343, i64 %78
  %345 = load ptr, ptr %344, align 8, !tbaa !13
  %346 = lshr i64 %80, 2
  %347 = and i64 %346, 1073741823
  %348 = getelementptr inbounds i16, ptr %345, i64 %347
  %349 = load i16, ptr %348, align 2, !tbaa !40
  %350 = sext i16 %349 to i64
  %351 = zext i32 %315 to i64
  %352 = getelementptr inbounds %struct.storable_picture, ptr %317, i64 0, i32 5, i64 %350, i64 1, i64 %351
  %353 = load i64, ptr %352, align 8, !tbaa !592
  br label %354

354:                                              ; preds = %341, %332
  %355 = phi i64 [ %353, %341 ], [ 0, %332 ]
  %356 = getelementptr inbounds ptr, ptr %335, i64 1
  %357 = load ptr, ptr %356, align 8, !tbaa !13
  %358 = getelementptr inbounds ptr, ptr %357, i64 %63
  %359 = load ptr, ptr %358, align 8, !tbaa !13
  %360 = getelementptr inbounds i64, ptr %359, i64 %80
  store i64 %355, ptr %360, align 8, !tbaa !592
  br i1 %316, label %361, label %375

361:                                              ; preds = %354
  %362 = getelementptr inbounds %struct.storable_picture, ptr %317, i64 0, i32 35
  %363 = load ptr, ptr %362, align 8, !tbaa !724
  %364 = getelementptr inbounds ptr, ptr %363, i64 %78
  %365 = load ptr, ptr %364, align 8, !tbaa !13
  %366 = lshr i64 %80, 2
  %367 = and i64 %366, 1073741823
  %368 = getelementptr inbounds i16, ptr %365, i64 %367
  %369 = load i16, ptr %368, align 2, !tbaa !40
  %370 = sext i16 %369 to i64
  %371 = getelementptr inbounds %struct.storable_picture, ptr %317, i64 0, i32 6, i64 %370
  %372 = zext i32 %297 to i64
  %373 = getelementptr inbounds [33 x i64], ptr %371, i64 0, i64 %372
  %374 = load i64, ptr %373, align 8, !tbaa !592
  br label %375

375:                                              ; preds = %361, %354
  %376 = phi i64 [ %374, %361 ], [ -1, %354 ]
  %377 = load ptr, ptr %23, align 8, !tbaa !355
  %378 = getelementptr inbounds %struct.storable_picture, ptr %377, i64 0, i32 38
  %379 = load ptr, ptr %378, align 8, !tbaa !930
  %380 = load ptr, ptr %379, align 8, !tbaa !13
  %381 = getelementptr inbounds ptr, ptr %380, i64 %75
  %382 = load ptr, ptr %381, align 8, !tbaa !13
  %383 = getelementptr inbounds i64, ptr %382, i64 %80
  store i64 %376, ptr %383, align 8, !tbaa !592
  br i1 %340, label %384, label %397

384:                                              ; preds = %375
  %385 = getelementptr inbounds %struct.storable_picture, ptr %317, i64 0, i32 35
  %386 = load ptr, ptr %385, align 8, !tbaa !724
  %387 = getelementptr inbounds ptr, ptr %386, i64 %78
  %388 = load ptr, ptr %387, align 8, !tbaa !13
  %389 = lshr i64 %80, 2
  %390 = and i64 %389, 1073741823
  %391 = getelementptr inbounds i16, ptr %388, i64 %390
  %392 = load i16, ptr %391, align 2, !tbaa !40
  %393 = sext i16 %392 to i64
  %394 = zext i32 %315 to i64
  %395 = getelementptr inbounds %struct.storable_picture, ptr %317, i64 0, i32 6, i64 %393, i64 1, i64 %394
  %396 = load i64, ptr %395, align 8, !tbaa !592
  br label %397

397:                                              ; preds = %384, %375
  %398 = phi i64 [ %396, %384 ], [ -1, %375 ]
  %399 = getelementptr inbounds ptr, ptr %379, i64 1
  %400 = load ptr, ptr %399, align 8, !tbaa !13
  %401 = getelementptr inbounds ptr, ptr %400, i64 %75
  %402 = load ptr, ptr %401, align 8, !tbaa !13
  %403 = getelementptr inbounds i64, ptr %402, i64 %80
  store i64 %398, ptr %403, align 8, !tbaa !592
  %404 = load ptr, ptr %2, align 8, !tbaa !928
  %405 = getelementptr inbounds %struct.storable_picture, ptr %404, i64 0, i32 41
  %406 = load ptr, ptr %405, align 8, !tbaa !932
  %407 = getelementptr inbounds ptr, ptr %406, i64 %63
  %408 = load ptr, ptr %407, align 8, !tbaa !13
  %409 = getelementptr inbounds i8, ptr %408, i64 %80
  store i8 1, ptr %409, align 1, !tbaa !14
  %410 = load ptr, ptr %6, align 8, !tbaa !929
  %411 = getelementptr inbounds %struct.storable_picture, ptr %410, i64 0, i32 41
  %412 = load ptr, ptr %411, align 8, !tbaa !932
  %413 = getelementptr inbounds ptr, ptr %412, i64 %63
  %414 = load ptr, ptr %413, align 8, !tbaa !13
  %415 = getelementptr inbounds i8, ptr %414, i64 %80
  store i8 1, ptr %415, align 1, !tbaa !14
  %416 = add nuw nsw i64 %80, 1
  %417 = load ptr, ptr %2, align 8, !tbaa !928
  %418 = getelementptr inbounds %struct.storable_picture, ptr %417, i64 0, i32 19
  %419 = load i32, ptr %418, align 8, !tbaa !566
  %420 = sdiv i32 %419, 4
  %421 = sext i32 %420 to i64
  %422 = icmp slt i64 %416, %421
  br i1 %422, label %79, label %423, !llvm.loop !1020

423:                                              ; preds = %397, %61
  %424 = phi ptr [ %62, %61 ], [ %417, %397 ]
  %425 = add nuw nsw i64 %63, 1
  %426 = getelementptr inbounds %struct.storable_picture, ptr %424, i64 0, i32 20
  %427 = load i32, ptr %426, align 4, !tbaa !568
  %428 = sdiv i32 %427, 4
  %429 = sext i32 %428 to i64
  %430 = icmp slt i64 %425, %429
  br i1 %430, label %61, label %431, !llvm.loop !1021

431:                                              ; preds = %423, %18
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @gen_field_ref_ids(ptr nocapture noundef readonly %0) #9 {
  %2 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 19
  %3 = load i32, ptr %2, align 8, !tbaa !566
  %4 = icmp sgt i32 %3, 3
  br i1 %4, label %5, label %94

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 20
  %7 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 36
  %8 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 35
  %9 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 38
  %10 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 41
  %11 = load i32, ptr %6, align 4, !tbaa !568
  br label %12

12:                                               ; preds = %87, %5
  %13 = phi i32 [ %3, %5 ], [ %88, %87 ]
  %14 = phi i32 [ %11, %5 ], [ %89, %87 ]
  %15 = phi i64 [ 0, %5 ], [ %90, %87 ]
  %16 = icmp sgt i32 %14, 3
  br i1 %16, label %17, label %87

17:                                               ; preds = %12
  %18 = lshr i64 %15, 2
  %19 = and i64 %18, 1073741823
  br label %20

20:                                               ; preds = %69, %17
  %21 = phi i64 [ 0, %17 ], [ %80, %69 ]
  %22 = load ptr, ptr %7, align 8, !tbaa !197
  %23 = load ptr, ptr %22, align 8, !tbaa !13
  %24 = getelementptr inbounds ptr, ptr %23, i64 %21
  %25 = load ptr, ptr %24, align 8, !tbaa !13
  %26 = getelementptr inbounds i8, ptr %25, i64 %15
  %27 = load i8, ptr %26, align 1, !tbaa !14
  %28 = getelementptr inbounds ptr, ptr %22, i64 1
  %29 = load ptr, ptr %28, align 8, !tbaa !13
  %30 = getelementptr inbounds ptr, ptr %29, i64 %21
  %31 = load ptr, ptr %30, align 8, !tbaa !13
  %32 = getelementptr inbounds i8, ptr %31, i64 %15
  %33 = load i8, ptr %32, align 1, !tbaa !14
  %34 = sext i8 %33 to i64
  %35 = icmp sgt i8 %27, -1
  br i1 %35, label %36, label %49

36:                                               ; preds = %20
  %37 = zext i8 %27 to i64
  %38 = load ptr, ptr %8, align 8, !tbaa !724
  %39 = lshr i64 %21, 2
  %40 = and i64 %39, 1073741823
  %41 = getelementptr inbounds ptr, ptr %38, i64 %40
  %42 = load ptr, ptr %41, align 8, !tbaa !13
  %43 = getelementptr inbounds i16, ptr %42, i64 %19
  %44 = load i16, ptr %43, align 2, !tbaa !40
  %45 = sext i16 %44 to i64
  %46 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 5, i64 %45
  %47 = getelementptr inbounds [33 x i64], ptr %46, i64 0, i64 %37
  %48 = load i64, ptr %47, align 8, !tbaa !592
  br label %49

49:                                               ; preds = %36, %20
  %50 = phi i64 [ %48, %36 ], [ 0, %20 ]
  %51 = load ptr, ptr %9, align 8, !tbaa !930
  %52 = load ptr, ptr %51, align 8, !tbaa !13
  %53 = getelementptr inbounds ptr, ptr %52, i64 %21
  %54 = load ptr, ptr %53, align 8, !tbaa !13
  %55 = getelementptr inbounds i64, ptr %54, i64 %15
  store i64 %50, ptr %55, align 8, !tbaa !592
  %56 = icmp sgt i8 %33, -1
  br i1 %56, label %57, label %69

57:                                               ; preds = %49
  %58 = load ptr, ptr %8, align 8, !tbaa !724
  %59 = lshr i64 %21, 2
  %60 = and i64 %59, 1073741823
  %61 = getelementptr inbounds ptr, ptr %58, i64 %60
  %62 = load ptr, ptr %61, align 8, !tbaa !13
  %63 = getelementptr inbounds i16, ptr %62, i64 %19
  %64 = load i16, ptr %63, align 2, !tbaa !40
  %65 = sext i16 %64 to i64
  %66 = and i64 %34, 4294967295
  %67 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 5, i64 %65, i64 1, i64 %66
  %68 = load i64, ptr %67, align 8, !tbaa !592
  br label %69

69:                                               ; preds = %57, %49
  %70 = phi i64 [ %68, %57 ], [ 0, %49 ]
  %71 = getelementptr inbounds ptr, ptr %51, i64 1
  %72 = load ptr, ptr %71, align 8, !tbaa !13
  %73 = getelementptr inbounds ptr, ptr %72, i64 %21
  %74 = load ptr, ptr %73, align 8, !tbaa !13
  %75 = getelementptr inbounds i64, ptr %74, i64 %15
  store i64 %70, ptr %75, align 8, !tbaa !592
  %76 = load ptr, ptr %10, align 8, !tbaa !932
  %77 = getelementptr inbounds ptr, ptr %76, i64 %21
  %78 = load ptr, ptr %77, align 8, !tbaa !13
  %79 = getelementptr inbounds i8, ptr %78, i64 %15
  store i8 1, ptr %79, align 1, !tbaa !14
  %80 = add nuw nsw i64 %21, 1
  %81 = load i32, ptr %6, align 4, !tbaa !568
  %82 = sdiv i32 %81, 4
  %83 = sext i32 %82 to i64
  %84 = icmp slt i64 %80, %83
  br i1 %84, label %20, label %85, !llvm.loop !1022

85:                                               ; preds = %69
  %.lcssa = phi i32 [ %81, %69 ]
  %86 = load i32, ptr %2, align 8, !tbaa !566
  br label %87

87:                                               ; preds = %85, %12
  %88 = phi i32 [ %86, %85 ], [ %13, %12 ]
  %89 = phi i32 [ %.lcssa, %85 ], [ %14, %12 ]
  %90 = add nuw nsw i64 %15, 1
  %91 = sdiv i32 %88, 4
  %92 = sext i32 %91 to i64
  %93 = icmp slt i64 %90, %92
  br i1 %93, label %12, label %94, !llvm.loop !1023

94:                                               ; preds = %87, %1
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @dpb_combine_field_yuv(ptr nocapture noundef %0) #0 {
  %2 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  %3 = load ptr, ptr %2, align 8, !tbaa !928
  %4 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 19
  %5 = load i32, ptr %4, align 8, !tbaa !566
  %6 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 20
  %7 = load i32, ptr %6, align 4, !tbaa !568
  %8 = shl nsw i32 %7, 1
  %9 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 21
  %10 = load i32, ptr %9, align 8, !tbaa !311
  %11 = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 22
  %12 = load i32, ptr %11, align 4, !tbaa !312
  %13 = shl nsw i32 %12, 1
  %14 = tail call ptr @alloc_storable_picture(i32 noundef 0, i32 noundef %5, i32 noundef %8, i32 noundef %10, i32 noundef %13) #47
  %15 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  store ptr %14, ptr %15, align 8, !tbaa !355
  %16 = load ptr, ptr %2, align 8, !tbaa !928
  %17 = getelementptr inbounds %struct.storable_picture, ptr %16, i64 0, i32 20
  %18 = load i32, ptr %17, align 4, !tbaa !568
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %1
  %21 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  br label %29

22:                                               ; preds = %29, %1
  %23 = phi ptr [ %16, %1 ], [ %62, %29 ]
  %24 = getelementptr inbounds %struct.storable_picture, ptr %23, i64 0, i32 22
  %25 = load i32, ptr %24, align 4, !tbaa !312
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %145

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  br label %67

29:                                               ; preds = %29, %20
  %30 = phi i64 [ 0, %20 ], [ %61, %29 ]
  %31 = phi ptr [ %16, %20 ], [ %62, %29 ]
  %32 = load ptr, ptr %15, align 8, !tbaa !355
  %33 = getelementptr inbounds %struct.storable_picture, ptr %32, i64 0, i32 32
  %34 = load ptr, ptr %33, align 8, !tbaa !47
  %35 = shl nuw nsw i64 %30, 1
  %36 = getelementptr inbounds ptr, ptr %34, i64 %35
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  %38 = getelementptr inbounds %struct.storable_picture, ptr %31, i64 0, i32 32
  %39 = load ptr, ptr %38, align 8, !tbaa !47
  %40 = getelementptr inbounds ptr, ptr %39, i64 %30
  %41 = load ptr, ptr %40, align 8, !tbaa !13
  %42 = getelementptr inbounds %struct.storable_picture, ptr %31, i64 0, i32 19
  %43 = load i32, ptr %42, align 8, !tbaa !566
  %44 = sext i32 %43 to i64
  %45 = shl nsw i64 %44, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %37, ptr align 2 %41, i64 %45, i1 false)
  %46 = load ptr, ptr %15, align 8, !tbaa !355
  %47 = getelementptr inbounds %struct.storable_picture, ptr %46, i64 0, i32 32
  %48 = load ptr, ptr %47, align 8, !tbaa !47
  %49 = or i64 %35, 1
  %50 = getelementptr inbounds ptr, ptr %48, i64 %49
  %51 = load ptr, ptr %50, align 8, !tbaa !13
  %52 = load ptr, ptr %21, align 8, !tbaa !929
  %53 = getelementptr inbounds %struct.storable_picture, ptr %52, i64 0, i32 32
  %54 = load ptr, ptr %53, align 8, !tbaa !47
  %55 = getelementptr inbounds ptr, ptr %54, i64 %30
  %56 = load ptr, ptr %55, align 8, !tbaa !13
  %57 = getelementptr inbounds %struct.storable_picture, ptr %52, i64 0, i32 19
  %58 = load i32, ptr %57, align 8, !tbaa !566
  %59 = sext i32 %58 to i64
  %60 = shl nsw i64 %59, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %51, ptr align 2 %56, i64 %60, i1 false)
  %61 = add nuw nsw i64 %30, 1
  %62 = load ptr, ptr %2, align 8, !tbaa !928
  %63 = getelementptr inbounds %struct.storable_picture, ptr %62, i64 0, i32 20
  %64 = load i32, ptr %63, align 4, !tbaa !568
  %65 = sext i32 %64 to i64
  %66 = icmp slt i64 %61, %65
  br i1 %66, label %29, label %22, !llvm.loop !1024

67:                                               ; preds = %67, %27
  %68 = phi i64 [ 0, %27 ], [ %139, %67 ]
  %69 = phi ptr [ %23, %27 ], [ %140, %67 ]
  %70 = load ptr, ptr %15, align 8, !tbaa !355
  %71 = getelementptr inbounds %struct.storable_picture, ptr %70, i64 0, i32 33
  %72 = load ptr, ptr %71, align 8, !tbaa !82
  %73 = load ptr, ptr %72, align 8, !tbaa !13
  %74 = shl nuw nsw i64 %68, 1
  %75 = getelementptr inbounds ptr, ptr %73, i64 %74
  %76 = load ptr, ptr %75, align 8, !tbaa !13
  %77 = getelementptr inbounds %struct.storable_picture, ptr %69, i64 0, i32 33
  %78 = load ptr, ptr %77, align 8, !tbaa !82
  %79 = load ptr, ptr %78, align 8, !tbaa !13
  %80 = getelementptr inbounds ptr, ptr %79, i64 %68
  %81 = load ptr, ptr %80, align 8, !tbaa !13
  %82 = getelementptr inbounds %struct.storable_picture, ptr %69, i64 0, i32 21
  %83 = load i32, ptr %82, align 8, !tbaa !311
  %84 = sext i32 %83 to i64
  %85 = shl nsw i64 %84, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %76, ptr align 2 %81, i64 %85, i1 false)
  %86 = load ptr, ptr %15, align 8, !tbaa !355
  %87 = getelementptr inbounds %struct.storable_picture, ptr %86, i64 0, i32 33
  %88 = load ptr, ptr %87, align 8, !tbaa !82
  %89 = load ptr, ptr %88, align 8, !tbaa !13
  %90 = or i64 %74, 1
  %91 = getelementptr inbounds ptr, ptr %89, i64 %90
  %92 = load ptr, ptr %91, align 8, !tbaa !13
  %93 = load ptr, ptr %28, align 8, !tbaa !929
  %94 = getelementptr inbounds %struct.storable_picture, ptr %93, i64 0, i32 33
  %95 = load ptr, ptr %94, align 8, !tbaa !82
  %96 = load ptr, ptr %95, align 8, !tbaa !13
  %97 = getelementptr inbounds ptr, ptr %96, i64 %68
  %98 = load ptr, ptr %97, align 8, !tbaa !13
  %99 = getelementptr inbounds %struct.storable_picture, ptr %93, i64 0, i32 21
  %100 = load i32, ptr %99, align 8, !tbaa !311
  %101 = sext i32 %100 to i64
  %102 = shl nsw i64 %101, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %92, ptr align 2 %98, i64 %102, i1 false)
  %103 = load ptr, ptr %15, align 8, !tbaa !355
  %104 = getelementptr inbounds %struct.storable_picture, ptr %103, i64 0, i32 33
  %105 = load ptr, ptr %104, align 8, !tbaa !82
  %106 = getelementptr inbounds ptr, ptr %105, i64 1
  %107 = load ptr, ptr %106, align 8, !tbaa !13
  %108 = getelementptr inbounds ptr, ptr %107, i64 %74
  %109 = load ptr, ptr %108, align 8, !tbaa !13
  %110 = load ptr, ptr %2, align 8, !tbaa !928
  %111 = getelementptr inbounds %struct.storable_picture, ptr %110, i64 0, i32 33
  %112 = load ptr, ptr %111, align 8, !tbaa !82
  %113 = getelementptr inbounds ptr, ptr %112, i64 1
  %114 = load ptr, ptr %113, align 8, !tbaa !13
  %115 = getelementptr inbounds ptr, ptr %114, i64 %68
  %116 = load ptr, ptr %115, align 8, !tbaa !13
  %117 = getelementptr inbounds %struct.storable_picture, ptr %110, i64 0, i32 21
  %118 = load i32, ptr %117, align 8, !tbaa !311
  %119 = sext i32 %118 to i64
  %120 = shl nsw i64 %119, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %109, ptr align 2 %116, i64 %120, i1 false)
  %121 = load ptr, ptr %15, align 8, !tbaa !355
  %122 = getelementptr inbounds %struct.storable_picture, ptr %121, i64 0, i32 33
  %123 = load ptr, ptr %122, align 8, !tbaa !82
  %124 = getelementptr inbounds ptr, ptr %123, i64 1
  %125 = load ptr, ptr %124, align 8, !tbaa !13
  %126 = getelementptr inbounds ptr, ptr %125, i64 %90
  %127 = load ptr, ptr %126, align 8, !tbaa !13
  %128 = load ptr, ptr %28, align 8, !tbaa !929
  %129 = getelementptr inbounds %struct.storable_picture, ptr %128, i64 0, i32 33
  %130 = load ptr, ptr %129, align 8, !tbaa !82
  %131 = getelementptr inbounds ptr, ptr %130, i64 1
  %132 = load ptr, ptr %131, align 8, !tbaa !13
  %133 = getelementptr inbounds ptr, ptr %132, i64 %68
  %134 = load ptr, ptr %133, align 8, !tbaa !13
  %135 = getelementptr inbounds %struct.storable_picture, ptr %128, i64 0, i32 21
  %136 = load i32, ptr %135, align 8, !tbaa !311
  %137 = sext i32 %136 to i64
  %138 = shl nsw i64 %137, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %127, ptr align 2 %134, i64 %138, i1 false)
  %139 = add nuw nsw i64 %68, 1
  %140 = load ptr, ptr %2, align 8, !tbaa !928
  %141 = getelementptr inbounds %struct.storable_picture, ptr %140, i64 0, i32 22
  %142 = load i32, ptr %141, align 4, !tbaa !312
  %143 = sext i32 %142 to i64
  %144 = icmp slt i64 %139, %143
  br i1 %144, label %67, label %145, !llvm.loop !1025

145:                                              ; preds = %67, %22
  %146 = phi ptr [ %23, %22 ], [ %140, %67 ]
  %147 = getelementptr inbounds %struct.storable_picture, ptr %146, i64 0, i32 1
  %148 = load i32, ptr %147, align 4, !tbaa !390
  %149 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  %150 = load ptr, ptr %149, align 8, !tbaa !929
  %151 = getelementptr inbounds %struct.storable_picture, ptr %150, i64 0, i32 1
  %152 = load i32, ptr %151, align 4, !tbaa !390
  %153 = tail call i32 @llvm.smin.i32(i32 %148, i32 %152)
  %154 = load ptr, ptr %15, align 8, !tbaa !355
  %155 = getelementptr inbounds %struct.storable_picture, ptr %154, i64 0, i32 4
  store i32 %153, ptr %155, align 8, !tbaa !571
  %156 = getelementptr inbounds %struct.storable_picture, ptr %154, i64 0, i32 1
  store i32 %153, ptr %156, align 4, !tbaa !390
  %157 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 10
  store i32 %153, ptr %157, align 8, !tbaa !403
  %158 = getelementptr inbounds %struct.storable_picture, ptr %146, i64 0, i32 4
  store i32 %153, ptr %158, align 8, !tbaa !571
  %159 = getelementptr inbounds %struct.storable_picture, ptr %150, i64 0, i32 4
  store i32 %153, ptr %159, align 8, !tbaa !571
  %160 = load i32, ptr %147, align 4, !tbaa !390
  %161 = getelementptr inbounds %struct.storable_picture, ptr %154, i64 0, i32 2
  store i32 %160, ptr %161, align 8, !tbaa !593
  %162 = getelementptr inbounds %struct.storable_picture, ptr %150, i64 0, i32 2
  store i32 %160, ptr %162, align 8, !tbaa !593
  %163 = load i32, ptr %151, align 4, !tbaa !390
  %164 = getelementptr inbounds %struct.storable_picture, ptr %154, i64 0, i32 3
  store i32 %163, ptr %164, align 4, !tbaa !594
  %165 = getelementptr inbounds %struct.storable_picture, ptr %146, i64 0, i32 3
  store i32 %163, ptr %165, align 4, !tbaa !594
  %166 = getelementptr inbounds %struct.storable_picture, ptr %146, i64 0, i32 15
  %167 = load i32, ptr %166, align 8, !tbaa !346
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %174, label %169

169:                                              ; preds = %145
  %170 = getelementptr inbounds %struct.storable_picture, ptr %150, i64 0, i32 15
  %171 = load i32, ptr %170, align 8, !tbaa !346
  %172 = icmp ne i32 %171, 0
  %173 = zext i1 %172 to i32
  br label %174

174:                                              ; preds = %169, %145
  %175 = phi i32 [ 0, %145 ], [ %173, %169 ]
  %176 = getelementptr inbounds %struct.storable_picture, ptr %154, i64 0, i32 15
  store i32 %175, ptr %176, align 8, !tbaa !346
  %177 = getelementptr inbounds %struct.storable_picture, ptr %146, i64 0, i32 14
  %178 = load i32, ptr %177, align 4, !tbaa !356
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %174
  %181 = getelementptr inbounds %struct.storable_picture, ptr %154, i64 0, i32 14
  store i32 0, ptr %181, align 4, !tbaa !356
  br label %192

182:                                              ; preds = %174
  %183 = getelementptr inbounds %struct.storable_picture, ptr %150, i64 0, i32 14
  %184 = load i32, ptr %183, align 4, !tbaa !356
  %185 = icmp ne i32 %184, 0
  %186 = zext i1 %185 to i32
  %187 = getelementptr inbounds %struct.storable_picture, ptr %154, i64 0, i32 14
  store i32 %186, ptr %187, align 4, !tbaa !356
  br i1 %185, label %188, label %192

188:                                              ; preds = %182
  %189 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 8
  %190 = load i32, ptr %189, align 8, !tbaa !962
  %191 = getelementptr inbounds %struct.storable_picture, ptr %154, i64 0, i32 13
  store i32 %190, ptr %191, align 8, !tbaa !934
  br label %192

192:                                              ; preds = %188, %182, %180
  %193 = getelementptr inbounds %struct.storable_picture, ptr %154, i64 0, i32 42
  store ptr %146, ptr %193, align 8, !tbaa !919
  %194 = getelementptr inbounds %struct.storable_picture, ptr %154, i64 0, i32 43
  store ptr %150, ptr %194, align 8, !tbaa !920
  %195 = getelementptr inbounds %struct.storable_picture, ptr %154, i64 0, i32 28
  store i32 0, ptr %195, align 4, !tbaa !341
  %196 = getelementptr inbounds %struct.storable_picture, ptr %146, i64 0, i32 50
  %197 = load i32, ptr %196, align 4, !tbaa !83
  %198 = getelementptr inbounds %struct.storable_picture, ptr %154, i64 0, i32 50
  store i32 %197, ptr %198, align 4, !tbaa !83
  %199 = getelementptr inbounds %struct.storable_picture, ptr %146, i64 0, i32 52
  %200 = load i32, ptr %199, align 4, !tbaa !627
  %201 = getelementptr inbounds %struct.storable_picture, ptr %154, i64 0, i32 52
  store i32 %200, ptr %201, align 4, !tbaa !627
  %202 = icmp eq i32 %200, 0
  br i1 %202, label %207, label %203

203:                                              ; preds = %192
  %204 = getelementptr inbounds %struct.storable_picture, ptr %146, i64 0, i32 53
  %205 = getelementptr inbounds %struct.storable_picture, ptr %154, i64 0, i32 53
  %206 = load <4 x i32>, ptr %204, align 8, !tbaa !18
  store <4 x i32> %206, ptr %205, align 8, !tbaa !18
  br label %207

207:                                              ; preds = %203, %192
  %208 = getelementptr inbounds %struct.storable_picture, ptr %150, i64 0, i32 44
  store ptr %154, ptr %208, align 8, !tbaa !921
  %209 = getelementptr inbounds %struct.storable_picture, ptr %146, i64 0, i32 44
  store ptr %154, ptr %209, align 8, !tbaa !921
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.smax.i16(i16, i16) #12

; Function Attrs: nounwind optsize uwtable
define internal void @alloc_ref_pic_list_reordering_buffer(ptr nocapture noundef writeonly %0) #0 {
  %2 = load ptr, ptr @img, align 8, !tbaa !13
  %3 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 10
  %4 = load i32, ptr %3, align 4, !tbaa !137
  switch i32 %4, label %5 [
    i32 2, label %24
    i32 4, label %24
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 47
  %7 = load i32, ptr %6, align 8, !tbaa !466
  %8 = add nsw i32 %7, 1
  %9 = sext i32 %8 to i64
  %10 = tail call noalias ptr @calloc(i64 noundef %9, i64 noundef 4) #45
  %11 = getelementptr inbounds %struct.Slice, ptr %0, i64 0, i32 13
  store ptr %10, ptr %11, align 8, !tbaa !469
  %12 = icmp eq ptr %10, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %5
  tail call void @no_mem_exit(ptr noundef nonnull @.str.16.248) #46
  br label %14

14:                                               ; preds = %13, %5
  %15 = tail call noalias ptr @calloc(i64 noundef %9, i64 noundef 4) #45
  %16 = getelementptr inbounds %struct.Slice, ptr %0, i64 0, i32 14
  store ptr %15, ptr %16, align 8, !tbaa !474
  %17 = icmp eq ptr %15, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void @no_mem_exit(ptr noundef nonnull @.str.17.249) #46
  br label %19

19:                                               ; preds = %18, %14
  %20 = tail call noalias ptr @calloc(i64 noundef %9, i64 noundef 4) #45
  %21 = getelementptr inbounds %struct.Slice, ptr %0, i64 0, i32 15
  store ptr %20, ptr %21, align 8, !tbaa !628
  %22 = icmp eq ptr %20, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %19
  tail call void @no_mem_exit(ptr noundef nonnull @.str.18.250) #46
  br label %26

24:                                               ; preds = %1, %1
  %25 = getelementptr inbounds %struct.Slice, ptr %0, i64 0, i32 13
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %25, i8 0, i64 24, i1 false)
  br label %26

26:                                               ; preds = %24, %23, %19
  %27 = load ptr, ptr @img, align 8, !tbaa !13
  %28 = getelementptr inbounds %struct.img_par, ptr %27, i64 0, i32 10
  %29 = load i32, ptr %28, align 4, !tbaa !137
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %50

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.img_par, ptr %27, i64 0, i32 48
  %33 = load i32, ptr %32, align 4, !tbaa !467
  %34 = add nsw i32 %33, 1
  %35 = sext i32 %34 to i64
  %36 = tail call noalias ptr @calloc(i64 noundef %35, i64 noundef 4) #45
  %37 = getelementptr inbounds %struct.Slice, ptr %0, i64 0, i32 17
  store ptr %36, ptr %37, align 8, !tbaa !472
  %38 = icmp eq ptr %36, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %31
  tail call void @no_mem_exit(ptr noundef nonnull @.str.19.251) #46
  br label %40

40:                                               ; preds = %39, %31
  %41 = tail call noalias ptr @calloc(i64 noundef %35, i64 noundef 4) #45
  %42 = getelementptr inbounds %struct.Slice, ptr %0, i64 0, i32 18
  store ptr %41, ptr %42, align 8, !tbaa !629
  %43 = icmp eq ptr %41, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  tail call void @no_mem_exit(ptr noundef nonnull @.str.20.252) #46
  br label %45

45:                                               ; preds = %44, %40
  %46 = tail call noalias ptr @calloc(i64 noundef %35, i64 noundef 4) #45
  %47 = getelementptr inbounds %struct.Slice, ptr %0, i64 0, i32 19
  store ptr %46, ptr %47, align 8, !tbaa !630
  %48 = icmp eq ptr %46, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  tail call void @no_mem_exit(ptr noundef nonnull @.str.21.253) #46
  br label %52

50:                                               ; preds = %26
  %51 = getelementptr inbounds %struct.Slice, ptr %0, i64 0, i32 17
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %51, i8 0, i64 24, i1 false)
  br label %52

52:                                               ; preds = %50, %49, %45
  ret void
}

; Function Attrs: mustprogress nounwind optsize willreturn uwtable
define internal void @free_ref_pic_list_reordering_buffer(ptr nocapture noundef %0) #22 {
  %2 = getelementptr inbounds %struct.Slice, ptr %0, i64 0, i32 13
  %3 = load ptr, ptr %2, align 8, !tbaa !469
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @free(ptr noundef nonnull %3) #46
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %struct.Slice, ptr %0, i64 0, i32 14
  %8 = load ptr, ptr %7, align 8, !tbaa !474
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @free(ptr noundef nonnull %8) #46
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %struct.Slice, ptr %0, i64 0, i32 15
  %13 = load ptr, ptr %12, align 8, !tbaa !628
  %14 = icmp eq ptr %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @free(ptr noundef nonnull %13) #46
  br label %16

16:                                               ; preds = %15, %11
  %17 = getelementptr inbounds %struct.Slice, ptr %0, i64 0, i32 17
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %2, i8 0, i64 24, i1 false)
  %18 = load ptr, ptr %17, align 8, !tbaa !472
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @free(ptr noundef nonnull %18) #46
  br label %21

21:                                               ; preds = %20, %16
  %22 = getelementptr inbounds %struct.Slice, ptr %0, i64 0, i32 18
  %23 = load ptr, ptr %22, align 8, !tbaa !629
  %24 = icmp eq ptr %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @free(ptr noundef nonnull %23) #46
  br label %26

26:                                               ; preds = %25, %21
  %27 = getelementptr inbounds %struct.Slice, ptr %0, i64 0, i32 19
  %28 = load ptr, ptr %27, align 8, !tbaa !630
  %29 = icmp eq ptr %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @free(ptr noundef nonnull %28) #46
  br label %31

31:                                               ; preds = %30, %26
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %17, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @fill_frame_num_gap(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 61
  %3 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 61, i64 1
  %4 = load <2 x i32>, ptr %2, align 8, !tbaa !18
  store i32 0, ptr %3, align 4, !tbaa !18
  store i32 0, ptr %2, align 8, !tbaa !18
  %5 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 52
  %6 = load i32, ptr %5, align 4, !tbaa !334
  %7 = add i32 %6, 1
  %8 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 86
  %9 = load i32, ptr %8, align 8, !tbaa !335
  %10 = urem i32 %7, %9
  %11 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 56
  %12 = load i32, ptr %11, align 4, !tbaa !336
  %13 = icmp eq i32 %12, %10
  br i1 %13, label %52, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 11
  %16 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 12
  %17 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 13
  %18 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 15
  %19 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 53
  %20 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 55
  br label %21

21:                                               ; preds = %40, %14
  %22 = phi i32 [ %10, %14 ], [ %50, %40 ]
  %23 = load i32, ptr %15, align 8, !tbaa !337
  %24 = load i32, ptr %16, align 4, !tbaa !338
  %25 = load i32, ptr %17, align 8, !tbaa !339
  %26 = load i32, ptr %18, align 8, !tbaa !340
  %27 = tail call ptr @alloc_storable_picture(i32 noundef 0, i32 noundef %23, i32 noundef %24, i32 noundef %25, i32 noundef %26) #47
  %28 = getelementptr inbounds %struct.storable_picture, ptr %27, i64 0, i32 28
  store i32 1, ptr %28, align 4, !tbaa !341
  %29 = getelementptr inbounds %struct.storable_picture, ptr %27, i64 0, i32 11
  store i32 %22, ptr %29, align 8, !tbaa !342
  %30 = getelementptr inbounds %struct.storable_picture, ptr %27, i64 0, i32 9
  store i32 %22, ptr %30, align 8, !tbaa !343
  %31 = getelementptr inbounds %struct.storable_picture, ptr %27, i64 0, i32 17
  store i32 1, ptr %31, align 8, !tbaa !344
  %32 = getelementptr inbounds %struct.storable_picture, ptr %27, i64 0, i32 16
  store i32 1, ptr %32, align 4, !tbaa !345
  %33 = getelementptr inbounds %struct.storable_picture, ptr %27, i64 0, i32 15
  store i32 1, ptr %33, align 8, !tbaa !346
  %34 = getelementptr inbounds %struct.storable_picture, ptr %27, i64 0, i32 49
  store i32 0, ptr %34, align 8, !tbaa !348
  store i32 %22, ptr %11, align 4, !tbaa !336
  %35 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %36 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %35, i64 0, i32 18
  %37 = load i32, ptr %36, align 4, !tbaa !457
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %21
  tail call void @decode_poc(ptr noundef nonnull %0) #46
  br label %40

40:                                               ; preds = %39, %21
  %41 = load <2 x i32>, ptr %19, align 8, !tbaa !18
  %42 = load i32, ptr %20, align 8, !tbaa !524
  %43 = getelementptr inbounds %struct.storable_picture, ptr %27, i64 0, i32 1
  %44 = insertelement <4 x i32> poison, i32 %42, i64 0
  %45 = shufflevector <2 x i32> %41, <2 x i32> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %46 = shufflevector <4 x i32> %44, <4 x i32> %45, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %47 = shufflevector <4 x i32> %46, <4 x i32> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 0>
  store <4 x i32> %47, ptr %43, align 4, !tbaa !18
  tail call void @store_picture_in_dpb(ptr noundef nonnull %27) #47
  store i32 %22, ptr %5, align 4, !tbaa !334
  %48 = add nsw i32 %22, 1
  %49 = load i32, ptr %8, align 8, !tbaa !335
  %50 = srem i32 %48, %49
  %51 = icmp eq i32 %12, %50
  br i1 %51, label %52, label %21, !llvm.loop !1026

52:                                               ; preds = %40, %1
  store <2 x i32> %4, ptr %2, align 8, !tbaa !18
  store i32 %12, ptr %11, align 4, !tbaa !336
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal ptr @alloc_colocated(i32 noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = tail call noalias dereferenceable_or_null(4880) ptr @calloc(i64 noundef 1, i64 noundef 4880) #45
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @no_mem_exit(ptr noundef nonnull @.str.22.258) #46
  br label %7

7:                                                ; preds = %6, %3
  %8 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 1
  store i32 %0, ptr %8, align 4, !tbaa !1027
  %9 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 2
  store i32 %1, ptr %9, align 8, !tbaa !1029
  %10 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 4
  %11 = sdiv i32 %1, 4
  %12 = sdiv i32 %0, 4
  %13 = tail call i32 @get_mem3D(ptr noundef nonnull %10, i32 noundef 2, i32 noundef %11, i32 noundef %12) #46
  %14 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 5
  %15 = tail call i32 @get_mem3Dint64(ptr noundef nonnull %14, i32 noundef 2, i32 noundef %11, i32 noundef %12) #46
  %16 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 6
  %17 = tail call i32 @get_mem4Dshort(ptr noundef nonnull %16, i32 noundef 2, i32 noundef %11, i32 noundef %12, i32 noundef 2) #46
  %18 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 7
  %19 = tail call i32 @get_mem2D(ptr noundef nonnull %18, i32 noundef %11, i32 noundef %12) #46
  %20 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 19
  %21 = tail call i32 @get_mem2D(ptr noundef nonnull %20, i32 noundef %11, i32 noundef %12) #46
  %22 = icmp eq i32 %2, 0
  br i1 %22, label %41, label %23

23:                                               ; preds = %7
  %24 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 9
  %25 = sdiv i32 %1, 8
  %26 = tail call i32 @get_mem3D(ptr noundef nonnull %24, i32 noundef 2, i32 noundef %25, i32 noundef %12) #46
  %27 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 10
  %28 = tail call i32 @get_mem3Dint64(ptr noundef nonnull %27, i32 noundef 2, i32 noundef %25, i32 noundef %12) #46
  %29 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 11
  %30 = tail call i32 @get_mem4Dshort(ptr noundef nonnull %29, i32 noundef 2, i32 noundef %25, i32 noundef %12, i32 noundef 2) #46
  %31 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 12
  %32 = tail call i32 @get_mem2D(ptr noundef nonnull %31, i32 noundef %25, i32 noundef %12) #46
  %33 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 14
  %34 = tail call i32 @get_mem3D(ptr noundef nonnull %33, i32 noundef 2, i32 noundef %25, i32 noundef %12) #46
  %35 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 15
  %36 = tail call i32 @get_mem3Dint64(ptr noundef nonnull %35, i32 noundef 2, i32 noundef %25, i32 noundef %12) #46
  %37 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 16
  %38 = tail call i32 @get_mem4Dshort(ptr noundef nonnull %37, i32 noundef 2, i32 noundef %25, i32 noundef %12, i32 noundef 2) #46
  %39 = getelementptr inbounds %struct.colocated_params, ptr %4, i64 0, i32 17
  %40 = tail call i32 @get_mem2D(ptr noundef nonnull %39, i32 noundef %25, i32 noundef %12) #46
  br label %41

41:                                               ; preds = %23, %7
  store i32 %2, ptr %4, align 8, !tbaa !1030
  ret ptr %4
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_colocated(ptr noundef %0) #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %52, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 4
  %5 = load ptr, ptr %4, align 8, !tbaa !1031
  tail call void @free_mem3D(ptr noundef %5, i32 noundef 2) #46
  %6 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %6, align 8, !tbaa !1032
  tail call void @free_mem3Dint64(ptr noundef %7, i32 noundef 2) #46
  %8 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 6
  %9 = load ptr, ptr %8, align 8, !tbaa !1033
  %10 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 2
  %11 = load i32, ptr %10, align 8, !tbaa !1029
  %12 = sdiv i32 %11, 4
  tail call void @free_mem4Dshort(ptr noundef %9, i32 noundef 2, i32 noundef %12) #46
  %13 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 7
  %14 = load ptr, ptr %13, align 8, !tbaa !1034
  %15 = icmp eq ptr %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %3
  tail call void @free_mem2D(ptr noundef nonnull %14) #46
  store ptr null, ptr %13, align 8, !tbaa !1034
  br label %17

17:                                               ; preds = %16, %3
  %18 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 19
  %19 = load ptr, ptr %18, align 8, !tbaa !1035
  %20 = icmp eq ptr %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void @free_mem2D(ptr noundef nonnull %19) #46
  store ptr null, ptr %18, align 8, !tbaa !1035
  br label %22

22:                                               ; preds = %21, %17
  %23 = load i32, ptr %0, align 8, !tbaa !1030
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %51, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 9
  %27 = load ptr, ptr %26, align 8, !tbaa !1036
  tail call void @free_mem3D(ptr noundef %27, i32 noundef 2) #46
  %28 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 10
  %29 = load ptr, ptr %28, align 8, !tbaa !1037
  tail call void @free_mem3Dint64(ptr noundef %29, i32 noundef 2) #46
  %30 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 11
  %31 = load ptr, ptr %30, align 8, !tbaa !1038
  %32 = load i32, ptr %10, align 8, !tbaa !1029
  %33 = sdiv i32 %32, 8
  tail call void @free_mem4Dshort(ptr noundef %31, i32 noundef 2, i32 noundef %33) #46
  %34 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 12
  %35 = load ptr, ptr %34, align 8, !tbaa !1039
  %36 = icmp eq ptr %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %25
  tail call void @free_mem2D(ptr noundef nonnull %35) #46
  store ptr null, ptr %34, align 8, !tbaa !1039
  br label %38

38:                                               ; preds = %37, %25
  %39 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 14
  %40 = load ptr, ptr %39, align 8, !tbaa !1040
  tail call void @free_mem3D(ptr noundef %40, i32 noundef 2) #46
  %41 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 15
  %42 = load ptr, ptr %41, align 8, !tbaa !1041
  tail call void @free_mem3Dint64(ptr noundef %42, i32 noundef 2) #46
  %43 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 16
  %44 = load ptr, ptr %43, align 8, !tbaa !1042
  %45 = load i32, ptr %10, align 8, !tbaa !1029
  %46 = sdiv i32 %45, 8
  tail call void @free_mem4Dshort(ptr noundef %44, i32 noundef 2, i32 noundef %46) #46
  %47 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 17
  %48 = load ptr, ptr %47, align 8, !tbaa !1043
  %49 = icmp eq ptr %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %38
  tail call void @free_mem2D(ptr noundef nonnull %48) #46
  br label %51

51:                                               ; preds = %50, %38, %22
  tail call void @free(ptr noundef nonnull %0) #46
  br label %52

52:                                               ; preds = %51, %1
  ret void
}

; Function Attrs: nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @compute_colocated(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) #25 {
  %3 = getelementptr inbounds ptr, ptr %1, i64 1
  %4 = load ptr, ptr %3, align 8, !tbaa !13
  %5 = load ptr, ptr %4, align 8, !tbaa !13
  %6 = load ptr, ptr @img, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 44
  %8 = load i32, ptr %7, align 8, !tbaa !189
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds ptr, ptr %1, i64 3
  %12 = load ptr, ptr %11, align 8, !tbaa !13
  %13 = load ptr, ptr %12, align 8, !tbaa !13
  %14 = getelementptr inbounds ptr, ptr %1, i64 5
  %15 = load ptr, ptr %14, align 8, !tbaa !13
  %16 = load ptr, ptr %15, align 8, !tbaa !13
  br label %38

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 57
  %19 = load i32, ptr %18, align 8, !tbaa !441
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %38, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.img_par, ptr %6, i64 0, i32 36
  %23 = load i32, ptr %22, align 8, !tbaa !206
  %24 = load i32, ptr %5, align 8, !tbaa !570
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %38, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.storable_picture, ptr %5, i64 0, i32 28
  %28 = load i32, ptr %27, align 4, !tbaa !341
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %26
  %31 = icmp eq i32 %23, 1
  br i1 %31, label %32, label %35

32:                                               ; preds = %30
  %33 = getelementptr inbounds %struct.storable_picture, ptr %5, i64 0, i32 42
  %34 = load ptr, ptr %33, align 8, !tbaa !919
  br label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.storable_picture, ptr %5, i64 0, i32 43
  %37 = load ptr, ptr %36, align 8, !tbaa !920
  br label %38

38:                                               ; preds = %35, %32, %26, %21, %17, %10
  %39 = phi ptr [ %16, %10 ], [ %34, %32 ], [ %37, %35 ], [ %5, %26 ], [ %5, %21 ], [ %5, %17 ]
  %40 = phi ptr [ %13, %10 ], [ %34, %32 ], [ %37, %35 ], [ %5, %26 ], [ %5, %21 ], [ %5, %17 ]
  %41 = phi ptr [ %5, %10 ], [ %34, %32 ], [ %37, %35 ], [ %5, %26 ], [ %5, %21 ], [ %5, %17 ]
  %42 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %43 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %42, i64 0, i32 29
  %44 = load i32, ptr %43, align 4, !tbaa !440
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %42, i64 0, i32 31
  %48 = load i32, ptr %47, align 4, !tbaa !739
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %268, label %50

50:                                               ; preds = %46, %38
  %51 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 20
  %52 = load i32, ptr %51, align 4, !tbaa !568
  %53 = icmp sgt i32 %52, 3
  br i1 %53, label %54, label %268

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 19
  %56 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 41
  %57 = getelementptr inbounds %struct.storable_picture, ptr %39, i64 0, i32 1
  %58 = getelementptr inbounds %struct.storable_picture, ptr %40, i64 0, i32 1
  %59 = getelementptr inbounds %struct.storable_picture, ptr %39, i64 0, i32 39
  %60 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 6
  %61 = getelementptr inbounds %struct.storable_picture, ptr %39, i64 0, i32 36
  %62 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 4
  %63 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 38
  %64 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 5
  %65 = getelementptr inbounds %struct.storable_picture, ptr %39, i64 0, i32 14
  %66 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 18
  %67 = getelementptr inbounds %struct.storable_picture, ptr %40, i64 0, i32 39
  %68 = getelementptr inbounds %struct.storable_picture, ptr %40, i64 0, i32 36
  %69 = getelementptr inbounds %struct.storable_picture, ptr %40, i64 0, i32 14
  %70 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 39
  %71 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 36
  %72 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 14
  %73 = load i32, ptr %55, align 8, !tbaa !566
  br label %74

74:                                               ; preds = %259, %54
  %75 = phi i32 [ %52, %54 ], [ %260, %259 ]
  %76 = phi i32 [ %73, %54 ], [ %261, %259 ]
  %77 = phi i64 [ 0, %54 ], [ %262, %259 ]
  %78 = icmp sgt i32 %76, 3
  br i1 %78, label %79, label %259

79:                                               ; preds = %74
  %80 = trunc i64 %77 to i32
  %81 = lshr i32 %80, 1
  %82 = and i32 %81, 1073741820
  %83 = add nuw nsw i32 %82, %81
  %84 = zext i32 %81 to i64
  %85 = add nuw nsw i32 %83, 4
  %86 = zext i32 %85 to i64
  %87 = zext i32 %83 to i64
  br label %88

88:                                               ; preds = %194, %79
  %89 = phi i64 [ 0, %79 ], [ %252, %194 ]
  %90 = load ptr, ptr @img, align 8, !tbaa !13
  %91 = getelementptr inbounds %struct.img_par, ptr %90, i64 0, i32 44
  %92 = load i32, ptr %91, align 8, !tbaa !189
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %164, label %94

94:                                               ; preds = %88
  %95 = load ptr, ptr %56, align 8, !tbaa !932
  %96 = getelementptr inbounds ptr, ptr %95, i64 %77
  %97 = load ptr, ptr %96, align 8, !tbaa !13
  %98 = getelementptr inbounds i8, ptr %97, i64 %89
  %99 = load i8, ptr %98, align 1, !tbaa !14
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %164, label %101

101:                                              ; preds = %94
  %102 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %103 = getelementptr inbounds %struct.storable_picture, ptr %102, i64 0, i32 1
  %104 = load i32, ptr %103, align 4, !tbaa !390
  %105 = load i32, ptr %57, align 4, !tbaa !390
  %106 = sub nsw i32 %104, %105
  %107 = tail call i32 @llvm.abs.i32(i32 %106, i1 true)
  %108 = load i32, ptr %58, align 4, !tbaa !390
  %109 = sub nsw i32 %104, %108
  %110 = tail call i32 @llvm.abs.i32(i32 %109, i1 true)
  %111 = icmp ugt i32 %107, %110
  %112 = load ptr, ptr %60, align 8, !tbaa !1033
  %113 = load ptr, ptr %112, align 8, !tbaa !13
  %114 = getelementptr inbounds ptr, ptr %113, i64 %77
  %115 = load ptr, ptr %114, align 8, !tbaa !13
  %116 = getelementptr inbounds ptr, ptr %115, i64 %89
  %117 = load ptr, ptr %116, align 8, !tbaa !13
  %118 = getelementptr inbounds i16, ptr %117, i64 1
  %119 = getelementptr inbounds ptr, ptr %112, i64 1
  br i1 %111, label %120, label %142

120:                                              ; preds = %101
  %121 = load ptr, ptr %67, align 8, !tbaa !371
  %122 = load ptr, ptr %121, align 8, !tbaa !13
  %123 = getelementptr inbounds ptr, ptr %122, i64 %84
  %124 = load ptr, ptr %123, align 8, !tbaa !13
  %125 = getelementptr inbounds ptr, ptr %124, i64 %89
  %126 = load ptr, ptr %125, align 8, !tbaa !13
  %127 = load i16, ptr %126, align 2, !tbaa !40
  store i16 %127, ptr %117, align 2, !tbaa !40
  %128 = getelementptr inbounds i16, ptr %126, i64 1
  %129 = load i16, ptr %128, align 2, !tbaa !40
  store i16 %129, ptr %118, align 2, !tbaa !40
  %130 = getelementptr inbounds ptr, ptr %121, i64 1
  %131 = load ptr, ptr %130, align 8, !tbaa !13
  %132 = getelementptr inbounds ptr, ptr %131, i64 %84
  %133 = load ptr, ptr %132, align 8, !tbaa !13
  %134 = getelementptr inbounds ptr, ptr %133, i64 %89
  %135 = load ptr, ptr %134, align 8, !tbaa !13
  %136 = load i16, ptr %135, align 2, !tbaa !40
  %137 = load ptr, ptr %119, align 8, !tbaa !13
  %138 = getelementptr inbounds ptr, ptr %137, i64 %77
  %139 = load ptr, ptr %138, align 8, !tbaa !13
  %140 = getelementptr inbounds ptr, ptr %139, i64 %89
  %141 = load ptr, ptr %140, align 8, !tbaa !13
  store i16 %136, ptr %141, align 2, !tbaa !40
  br label %194

142:                                              ; preds = %101
  %143 = load ptr, ptr %59, align 8, !tbaa !371
  %144 = load ptr, ptr %143, align 8, !tbaa !13
  %145 = getelementptr inbounds ptr, ptr %144, i64 %84
  %146 = load ptr, ptr %145, align 8, !tbaa !13
  %147 = getelementptr inbounds ptr, ptr %146, i64 %89
  %148 = load ptr, ptr %147, align 8, !tbaa !13
  %149 = load i16, ptr %148, align 2, !tbaa !40
  store i16 %149, ptr %117, align 2, !tbaa !40
  %150 = getelementptr inbounds i16, ptr %148, i64 1
  %151 = load i16, ptr %150, align 2, !tbaa !40
  store i16 %151, ptr %118, align 2, !tbaa !40
  %152 = getelementptr inbounds ptr, ptr %143, i64 1
  %153 = load ptr, ptr %152, align 8, !tbaa !13
  %154 = getelementptr inbounds ptr, ptr %153, i64 %84
  %155 = load ptr, ptr %154, align 8, !tbaa !13
  %156 = getelementptr inbounds ptr, ptr %155, i64 %89
  %157 = load ptr, ptr %156, align 8, !tbaa !13
  %158 = load i16, ptr %157, align 2, !tbaa !40
  %159 = load ptr, ptr %119, align 8, !tbaa !13
  %160 = getelementptr inbounds ptr, ptr %159, i64 %77
  %161 = load ptr, ptr %160, align 8, !tbaa !13
  %162 = getelementptr inbounds ptr, ptr %161, i64 %89
  %163 = load ptr, ptr %162, align 8, !tbaa !13
  store i16 %158, ptr %163, align 2, !tbaa !40
  br label %194

164:                                              ; preds = %94, %88
  %165 = load ptr, ptr %70, align 8, !tbaa !371
  %166 = load ptr, ptr %165, align 8, !tbaa !13
  %167 = getelementptr inbounds ptr, ptr %166, i64 %77
  %168 = load ptr, ptr %167, align 8, !tbaa !13
  %169 = getelementptr inbounds ptr, ptr %168, i64 %89
  %170 = load ptr, ptr %169, align 8, !tbaa !13
  %171 = load i16, ptr %170, align 2, !tbaa !40
  %172 = load ptr, ptr %60, align 8, !tbaa !1033
  %173 = load ptr, ptr %172, align 8, !tbaa !13
  %174 = getelementptr inbounds ptr, ptr %173, i64 %77
  %175 = load ptr, ptr %174, align 8, !tbaa !13
  %176 = getelementptr inbounds ptr, ptr %175, i64 %89
  %177 = load ptr, ptr %176, align 8, !tbaa !13
  store i16 %171, ptr %177, align 2, !tbaa !40
  %178 = getelementptr inbounds i16, ptr %170, i64 1
  %179 = load i16, ptr %178, align 2, !tbaa !40
  %180 = getelementptr inbounds i16, ptr %177, i64 1
  store i16 %179, ptr %180, align 2, !tbaa !40
  %181 = getelementptr inbounds ptr, ptr %165, i64 1
  %182 = load ptr, ptr %181, align 8, !tbaa !13
  %183 = getelementptr inbounds ptr, ptr %182, i64 %77
  %184 = load ptr, ptr %183, align 8, !tbaa !13
  %185 = getelementptr inbounds ptr, ptr %184, i64 %89
  %186 = load ptr, ptr %185, align 8, !tbaa !13
  %187 = load i16, ptr %186, align 2, !tbaa !40
  %188 = getelementptr inbounds ptr, ptr %172, i64 1
  %189 = load ptr, ptr %188, align 8, !tbaa !13
  %190 = getelementptr inbounds ptr, ptr %189, i64 %77
  %191 = load ptr, ptr %190, align 8, !tbaa !13
  %192 = getelementptr inbounds ptr, ptr %191, i64 %89
  %193 = load ptr, ptr %192, align 8, !tbaa !13
  store i16 %187, ptr %193, align 2, !tbaa !40
  br label %194

194:                                              ; preds = %164, %142, %120
  %195 = phi ptr [ %186, %164 ], [ %157, %142 ], [ %135, %120 ]
  %196 = phi ptr [ %193, %164 ], [ %163, %142 ], [ %141, %120 ]
  %197 = phi ptr [ %71, %164 ], [ %61, %142 ], [ %68, %120 ]
  %198 = phi i64 [ %77, %164 ], [ %84, %142 ], [ %84, %120 ]
  %199 = phi i64 [ %77, %164 ], [ %86, %142 ], [ %87, %120 ]
  %200 = phi ptr [ %72, %164 ], [ %65, %142 ], [ %69, %120 ]
  %201 = getelementptr inbounds i16, ptr %195, i64 1
  %202 = load i16, ptr %201, align 2, !tbaa !40
  %203 = getelementptr inbounds i16, ptr %196, i64 1
  store i16 %202, ptr %203, align 2, !tbaa !40
  %204 = load ptr, ptr %197, align 8, !tbaa !197
  %205 = load ptr, ptr %204, align 8, !tbaa !13
  %206 = getelementptr inbounds ptr, ptr %205, i64 %198
  %207 = load ptr, ptr %206, align 8, !tbaa !13
  %208 = getelementptr inbounds i8, ptr %207, i64 %89
  %209 = load i8, ptr %208, align 1, !tbaa !14
  %210 = load ptr, ptr %62, align 8, !tbaa !1031
  %211 = load ptr, ptr %210, align 8, !tbaa !13
  %212 = getelementptr inbounds ptr, ptr %211, i64 %77
  %213 = load ptr, ptr %212, align 8, !tbaa !13
  %214 = getelementptr inbounds i8, ptr %213, i64 %89
  store i8 %209, ptr %214, align 1, !tbaa !14
  %215 = load ptr, ptr %197, align 8, !tbaa !197
  %216 = getelementptr inbounds ptr, ptr %215, i64 1
  %217 = load ptr, ptr %216, align 8, !tbaa !13
  %218 = getelementptr inbounds ptr, ptr %217, i64 %198
  %219 = load ptr, ptr %218, align 8, !tbaa !13
  %220 = getelementptr inbounds i8, ptr %219, i64 %89
  %221 = load i8, ptr %220, align 1, !tbaa !14
  %222 = load ptr, ptr %62, align 8, !tbaa !1031
  %223 = getelementptr inbounds ptr, ptr %222, i64 1
  %224 = load ptr, ptr %223, align 8, !tbaa !13
  %225 = getelementptr inbounds ptr, ptr %224, i64 %77
  %226 = load ptr, ptr %225, align 8, !tbaa !13
  %227 = getelementptr inbounds i8, ptr %226, i64 %89
  store i8 %221, ptr %227, align 1, !tbaa !14
  %228 = load ptr, ptr %63, align 8, !tbaa !930
  %229 = load ptr, ptr %228, align 8, !tbaa !13
  %230 = getelementptr inbounds ptr, ptr %229, i64 %199
  %231 = load ptr, ptr %230, align 8, !tbaa !13
  %232 = getelementptr inbounds i64, ptr %231, i64 %89
  %233 = load i64, ptr %232, align 8, !tbaa !592
  %234 = load ptr, ptr %64, align 8, !tbaa !1032
  %235 = load ptr, ptr %234, align 8, !tbaa !13
  %236 = getelementptr inbounds ptr, ptr %235, i64 %77
  %237 = load ptr, ptr %236, align 8, !tbaa !13
  %238 = getelementptr inbounds i64, ptr %237, i64 %89
  store i64 %233, ptr %238, align 8, !tbaa !592
  %239 = getelementptr inbounds ptr, ptr %228, i64 1
  %240 = load ptr, ptr %239, align 8, !tbaa !13
  %241 = getelementptr inbounds ptr, ptr %240, i64 %199
  %242 = load ptr, ptr %241, align 8, !tbaa !13
  %243 = getelementptr inbounds i64, ptr %242, i64 %89
  %244 = load i64, ptr %243, align 8, !tbaa !592
  %245 = getelementptr inbounds ptr, ptr %234, i64 1
  %246 = load ptr, ptr %245, align 8, !tbaa !13
  %247 = getelementptr inbounds ptr, ptr %246, i64 %77
  %248 = load ptr, ptr %247, align 8, !tbaa !13
  %249 = getelementptr inbounds i64, ptr %248, i64 %89
  store i64 %244, ptr %249, align 8, !tbaa !592
  %250 = load i32, ptr %200, align 4, !tbaa !356
  %251 = trunc i32 %250 to i8
  store i8 %251, ptr %66, align 8, !tbaa !1044
  %252 = add nuw nsw i64 %89, 1
  %253 = load i32, ptr %55, align 8, !tbaa !566
  %254 = sdiv i32 %253, 4
  %255 = sext i32 %254 to i64
  %256 = icmp slt i64 %252, %255
  br i1 %256, label %88, label %257, !llvm.loop !1045

257:                                              ; preds = %194
  %.lcssa5 = phi i32 [ %253, %194 ]
  %258 = load i32, ptr %51, align 4, !tbaa !568
  br label %259

259:                                              ; preds = %257, %74
  %260 = phi i32 [ %258, %257 ], [ %75, %74 ]
  %261 = phi i32 [ %.lcssa5, %257 ], [ %76, %74 ]
  %262 = add nuw nsw i64 %77, 1
  %263 = sdiv i32 %260, 4
  %264 = sext i32 %263 to i64
  %265 = icmp slt i64 %262, %264
  br i1 %265, label %74, label %266, !llvm.loop !1046

266:                                              ; preds = %259
  %267 = load ptr, ptr @img, align 8, !tbaa !13
  br label %268

268:                                              ; preds = %266, %50, %46
  %269 = phi ptr [ %267, %266 ], [ %6, %50 ], [ %6, %46 ]
  %270 = getelementptr inbounds %struct.img_par, ptr %269, i64 0, i32 36
  %271 = load i32, ptr %270, align 8, !tbaa !206
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %277

273:                                              ; preds = %268
  %274 = getelementptr inbounds %struct.img_par, ptr %269, i64 0, i32 44
  %275 = load i32, ptr %274, align 8, !tbaa !189
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %846, label %277

277:                                              ; preds = %273, %268
  %278 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 20
  %279 = load i32, ptr %278, align 4, !tbaa !568
  %280 = icmp sgt i32 %279, 7
  br i1 %280, label %281, label %846

281:                                              ; preds = %277
  %282 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 19
  %283 = getelementptr inbounds %struct.storable_picture, ptr %39, i64 0, i32 39
  %284 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 16
  %285 = getelementptr inbounds %struct.storable_picture, ptr %39, i64 0, i32 36
  %286 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 14
  %287 = getelementptr inbounds %struct.storable_picture, ptr %39, i64 0, i32 38
  %288 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 15
  %289 = getelementptr inbounds %struct.storable_picture, ptr %39, i64 0, i32 14
  %290 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 17
  %291 = getelementptr inbounds %struct.storable_picture, ptr %40, i64 0, i32 39
  %292 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 11
  %293 = getelementptr inbounds %struct.storable_picture, ptr %40, i64 0, i32 36
  %294 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 9
  %295 = getelementptr inbounds %struct.storable_picture, ptr %40, i64 0, i32 38
  %296 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 10
  %297 = getelementptr inbounds %struct.storable_picture, ptr %40, i64 0, i32 14
  %298 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 12
  %299 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 41
  %300 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 39
  %301 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 6
  %302 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 36
  %303 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 4
  %304 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 38
  %305 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 5
  %306 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 14
  %307 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 18
  %308 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 7
  %309 = load i32, ptr %282, align 8, !tbaa !566
  br label %310

310:                                              ; preds = %838, %281
  %311 = phi ptr [ %269, %281 ], [ %839, %838 ]
  %312 = phi i32 [ %279, %281 ], [ %840, %838 ]
  %313 = phi i32 [ %309, %281 ], [ %841, %838 ]
  %314 = phi i64 [ 0, %281 ], [ %842, %838 ]
  %315 = icmp sgt i32 %313, 3
  br i1 %315, label %316, label %838

316:                                              ; preds = %310
  %317 = lshr i64 %314, 1
  %318 = and i64 %317, 1
  %319 = and i64 %314, 2147483646
  %320 = or i64 %318, %319
  %321 = shl nuw nsw i64 %314, 1
  br label %322

322:                                              ; preds = %829, %316
  %323 = phi ptr [ %311, %316 ], [ %830, %829 ]
  %324 = phi i64 [ 0, %316 ], [ %831, %829 ]
  %325 = and i64 %324, 2147483646
  %326 = lshr i64 %324, 1
  %327 = and i64 %326, 1
  %328 = or i64 %327, %325
  %329 = getelementptr inbounds %struct.img_par, ptr %323, i64 0, i32 44
  %330 = load i32, ptr %329, align 8, !tbaa !189
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %490

332:                                              ; preds = %322
  %333 = load ptr, ptr %300, align 8, !tbaa !371
  %334 = load ptr, ptr %333, align 8, !tbaa !13
  %335 = getelementptr inbounds ptr, ptr %334, i64 %320
  %336 = load ptr, ptr %335, align 8, !tbaa !13
  %337 = getelementptr inbounds ptr, ptr %336, i64 %328
  %338 = load ptr, ptr %337, align 8, !tbaa !13
  %339 = load i16, ptr %338, align 2, !tbaa !40
  %340 = load ptr, ptr %301, align 8, !tbaa !1033
  %341 = load ptr, ptr %340, align 8, !tbaa !13
  %342 = getelementptr inbounds ptr, ptr %341, i64 %314
  %343 = load ptr, ptr %342, align 8, !tbaa !13
  %344 = getelementptr inbounds ptr, ptr %343, i64 %324
  %345 = load ptr, ptr %344, align 8, !tbaa !13
  store i16 %339, ptr %345, align 2, !tbaa !40
  %346 = getelementptr inbounds i16, ptr %338, i64 1
  %347 = load i16, ptr %346, align 2, !tbaa !40
  %348 = getelementptr inbounds i16, ptr %345, i64 1
  store i16 %347, ptr %348, align 2, !tbaa !40
  %349 = getelementptr inbounds ptr, ptr %333, i64 1
  %350 = load ptr, ptr %349, align 8, !tbaa !13
  %351 = getelementptr inbounds ptr, ptr %350, i64 %320
  %352 = load ptr, ptr %351, align 8, !tbaa !13
  %353 = getelementptr inbounds ptr, ptr %352, i64 %328
  %354 = load ptr, ptr %353, align 8, !tbaa !13
  %355 = load i16, ptr %354, align 2, !tbaa !40
  %356 = getelementptr inbounds ptr, ptr %340, i64 1
  %357 = load ptr, ptr %356, align 8, !tbaa !13
  %358 = getelementptr inbounds ptr, ptr %357, i64 %314
  %359 = load ptr, ptr %358, align 8, !tbaa !13
  %360 = getelementptr inbounds ptr, ptr %359, i64 %324
  %361 = load ptr, ptr %360, align 8, !tbaa !13
  store i16 %355, ptr %361, align 2, !tbaa !40
  %362 = getelementptr inbounds i16, ptr %354, i64 1
  %363 = load i16, ptr %362, align 2, !tbaa !40
  %364 = getelementptr inbounds i16, ptr %361, i64 1
  store i16 %363, ptr %364, align 2, !tbaa !40
  %365 = load ptr, ptr %302, align 8, !tbaa !197
  %366 = load ptr, ptr %365, align 8, !tbaa !13
  %367 = getelementptr inbounds ptr, ptr %366, i64 %320
  %368 = load ptr, ptr %367, align 8, !tbaa !13
  %369 = getelementptr inbounds i8, ptr %368, i64 %328
  %370 = load i8, ptr %369, align 1, !tbaa !14
  %371 = icmp eq i8 %370, -1
  %372 = load ptr, ptr %303, align 8, !tbaa !1031
  %373 = load ptr, ptr %372, align 8, !tbaa !13
  %374 = getelementptr inbounds ptr, ptr %373, i64 %314
  %375 = load ptr, ptr %374, align 8, !tbaa !13
  %376 = getelementptr inbounds i8, ptr %375, i64 %324
  br i1 %371, label %377, label %378

377:                                              ; preds = %332
  store i8 -1, ptr %376, align 1, !tbaa !14
  br label %385

378:                                              ; preds = %332
  store i8 %370, ptr %376, align 1, !tbaa !14
  %379 = load ptr, ptr %304, align 8, !tbaa !930
  %380 = load ptr, ptr %379, align 8, !tbaa !13
  %381 = getelementptr inbounds ptr, ptr %380, i64 %320
  %382 = load ptr, ptr %381, align 8, !tbaa !13
  %383 = getelementptr inbounds i64, ptr %382, i64 %328
  %384 = load i64, ptr %383, align 8, !tbaa !592
  br label %385

385:                                              ; preds = %378, %377
  %386 = phi i64 [ %384, %378 ], [ -1, %377 ]
  %387 = load ptr, ptr %305, align 8, !tbaa !1032
  %388 = load ptr, ptr %387, align 8, !tbaa !13
  %389 = getelementptr inbounds ptr, ptr %388, i64 %314
  %390 = load ptr, ptr %389, align 8, !tbaa !13
  %391 = getelementptr inbounds i64, ptr %390, i64 %324
  store i64 %386, ptr %391, align 8, !tbaa !592
  %392 = load ptr, ptr %302, align 8, !tbaa !197
  %393 = getelementptr inbounds ptr, ptr %392, i64 1
  %394 = load ptr, ptr %393, align 8, !tbaa !13
  %395 = getelementptr inbounds ptr, ptr %394, i64 %320
  %396 = load ptr, ptr %395, align 8, !tbaa !13
  %397 = getelementptr inbounds i8, ptr %396, i64 %328
  %398 = load i8, ptr %397, align 1, !tbaa !14
  %399 = icmp eq i8 %398, -1
  %400 = load ptr, ptr %303, align 8, !tbaa !1031
  %401 = getelementptr inbounds ptr, ptr %400, i64 1
  %402 = load ptr, ptr %401, align 8, !tbaa !13
  %403 = getelementptr inbounds ptr, ptr %402, i64 %314
  %404 = load ptr, ptr %403, align 8, !tbaa !13
  %405 = getelementptr inbounds i8, ptr %404, i64 %324
  br i1 %399, label %406, label %407

406:                                              ; preds = %385
  store i8 -1, ptr %405, align 1, !tbaa !14
  br label %415

407:                                              ; preds = %385
  store i8 %398, ptr %405, align 1, !tbaa !14
  %408 = load ptr, ptr %304, align 8, !tbaa !930
  %409 = getelementptr inbounds ptr, ptr %408, i64 1
  %410 = load ptr, ptr %409, align 8, !tbaa !13
  %411 = getelementptr inbounds ptr, ptr %410, i64 %320
  %412 = load ptr, ptr %411, align 8, !tbaa !13
  %413 = getelementptr inbounds i64, ptr %412, i64 %328
  %414 = load i64, ptr %413, align 8, !tbaa !592
  br label %415

415:                                              ; preds = %407, %406
  %416 = phi i64 [ %414, %407 ], [ -1, %406 ]
  %417 = load ptr, ptr %305, align 8, !tbaa !1032
  %418 = getelementptr inbounds ptr, ptr %417, i64 1
  %419 = load ptr, ptr %418, align 8, !tbaa !13
  %420 = getelementptr inbounds ptr, ptr %419, i64 %314
  %421 = load ptr, ptr %420, align 8, !tbaa !13
  %422 = getelementptr inbounds i64, ptr %421, i64 %324
  store i64 %416, ptr %422, align 8, !tbaa !592
  %423 = load i32, ptr %306, align 4, !tbaa !356
  %424 = trunc i32 %423 to i8
  store i8 %424, ptr %307, align 8, !tbaa !1044
  %425 = load ptr, ptr @img, align 8, !tbaa !13
  %426 = getelementptr inbounds %struct.img_par, ptr %425, i64 0, i32 9
  %427 = load i32, ptr %426, align 8, !tbaa !465
  %428 = icmp eq i32 %427, 1
  br i1 %428, label %429, label %829

429:                                              ; preds = %415
  %430 = icmp eq i8 %424, 0
  %431 = load ptr, ptr %303, align 8, !tbaa !1031
  %432 = load ptr, ptr %431, align 8, !tbaa !13
  %433 = getelementptr inbounds ptr, ptr %432, i64 %314
  %434 = load ptr, ptr %433, align 8, !tbaa !13
  %435 = getelementptr inbounds i8, ptr %434, i64 %324
  %436 = load i8, ptr %435, align 1, !tbaa !14
  %437 = icmp eq i8 %436, 0
  %438 = select i1 %430, i1 %437, i1 false
  br i1 %438, label %439, label %455

439:                                              ; preds = %429
  %440 = load ptr, ptr %301, align 8, !tbaa !1033
  %441 = load ptr, ptr %440, align 8, !tbaa !13
  %442 = getelementptr inbounds ptr, ptr %441, i64 %314
  %443 = load ptr, ptr %442, align 8, !tbaa !13
  %444 = getelementptr inbounds ptr, ptr %443, i64 %324
  %445 = load ptr, ptr %444, align 8, !tbaa !13
  %446 = load i16, ptr %445, align 2, !tbaa !40
  %447 = tail call i16 @llvm.abs.i16(i16 %446, i1 false)
  %448 = icmp ult i16 %447, 2
  br i1 %448, label %449, label %454

449:                                              ; preds = %439
  %450 = getelementptr inbounds i16, ptr %445, i64 1
  %451 = load i16, ptr %450, align 2, !tbaa !40
  %452 = tail call i16 @llvm.abs.i16(i16 %451, i1 false)
  %453 = icmp ult i16 %452, 2
  br i1 %453, label %481, label %454

454:                                              ; preds = %449, %439
  br label %481

455:                                              ; preds = %429
  %456 = icmp eq i8 %436, -1
  br i1 %456, label %457, label %481

457:                                              ; preds = %455
  %458 = getelementptr inbounds ptr, ptr %431, i64 1
  %459 = load ptr, ptr %458, align 8, !tbaa !13
  %460 = getelementptr inbounds ptr, ptr %459, i64 %314
  %461 = load ptr, ptr %460, align 8, !tbaa !13
  %462 = getelementptr inbounds i8, ptr %461, i64 %324
  %463 = load i8, ptr %462, align 1, !tbaa !14
  %464 = icmp eq i8 %463, 0
  br i1 %464, label %465, label %481

465:                                              ; preds = %457
  %466 = load ptr, ptr %301, align 8, !tbaa !1033
  %467 = getelementptr inbounds ptr, ptr %466, i64 1
  %468 = load ptr, ptr %467, align 8, !tbaa !13
  %469 = getelementptr inbounds ptr, ptr %468, i64 %314
  %470 = load ptr, ptr %469, align 8, !tbaa !13
  %471 = getelementptr inbounds ptr, ptr %470, i64 %324
  %472 = load ptr, ptr %471, align 8, !tbaa !13
  %473 = load i16, ptr %472, align 2, !tbaa !40
  %474 = tail call i16 @llvm.abs.i16(i16 %473, i1 false)
  %475 = icmp ult i16 %474, 2
  br i1 %475, label %476, label %481

476:                                              ; preds = %465
  %477 = getelementptr inbounds i16, ptr %472, i64 1
  %478 = load i16, ptr %477, align 2, !tbaa !40
  %479 = tail call i16 @llvm.abs.i16(i16 %478, i1 false)
  %480 = icmp ult i16 %479, 2
  br label %481

481:                                              ; preds = %476, %465, %457, %455, %454, %449
  %482 = phi i1 [ true, %449 ], [ false, %465 ], [ false, %457 ], [ false, %455 ], [ %480, %476 ], [ false, %454 ]
  %483 = xor i1 %482, true
  %484 = zext i1 %483 to i8
  %485 = load ptr, ptr %308, align 8, !tbaa !1034
  %486 = getelementptr inbounds ptr, ptr %485, i64 %314
  %487 = load ptr, ptr %486, align 8, !tbaa !13
  %488 = getelementptr inbounds i8, ptr %487, i64 %324
  store i8 %484, ptr %488, align 1, !tbaa !14
  %489 = load ptr, ptr @img, align 8, !tbaa !13
  br label %829

490:                                              ; preds = %322
  %491 = load ptr, ptr %283, align 8, !tbaa !371
  %492 = load ptr, ptr %491, align 8, !tbaa !13
  %493 = getelementptr inbounds ptr, ptr %492, i64 %320
  %494 = load ptr, ptr %493, align 8, !tbaa !13
  %495 = getelementptr inbounds ptr, ptr %494, i64 %328
  %496 = load ptr, ptr %495, align 8, !tbaa !13
  %497 = load i16, ptr %496, align 2, !tbaa !40
  %498 = load ptr, ptr %284, align 8, !tbaa !1042
  %499 = load ptr, ptr %498, align 8, !tbaa !13
  %500 = getelementptr inbounds ptr, ptr %499, i64 %314
  %501 = load ptr, ptr %500, align 8, !tbaa !13
  %502 = getelementptr inbounds ptr, ptr %501, i64 %324
  %503 = load ptr, ptr %502, align 8, !tbaa !13
  store i16 %497, ptr %503, align 2, !tbaa !40
  %504 = getelementptr inbounds i16, ptr %496, i64 1
  %505 = load i16, ptr %504, align 2, !tbaa !40
  %506 = getelementptr inbounds i16, ptr %503, i64 1
  store i16 %505, ptr %506, align 2, !tbaa !40
  %507 = getelementptr inbounds ptr, ptr %491, i64 1
  %508 = load ptr, ptr %507, align 8, !tbaa !13
  %509 = getelementptr inbounds ptr, ptr %508, i64 %320
  %510 = load ptr, ptr %509, align 8, !tbaa !13
  %511 = getelementptr inbounds ptr, ptr %510, i64 %328
  %512 = load ptr, ptr %511, align 8, !tbaa !13
  %513 = load i16, ptr %512, align 2, !tbaa !40
  %514 = getelementptr inbounds ptr, ptr %498, i64 1
  %515 = load ptr, ptr %514, align 8, !tbaa !13
  %516 = getelementptr inbounds ptr, ptr %515, i64 %314
  %517 = load ptr, ptr %516, align 8, !tbaa !13
  %518 = getelementptr inbounds ptr, ptr %517, i64 %324
  %519 = load ptr, ptr %518, align 8, !tbaa !13
  store i16 %513, ptr %519, align 2, !tbaa !40
  %520 = getelementptr inbounds i16, ptr %512, i64 1
  %521 = load i16, ptr %520, align 2, !tbaa !40
  %522 = getelementptr inbounds i16, ptr %519, i64 1
  store i16 %521, ptr %522, align 2, !tbaa !40
  %523 = load ptr, ptr %285, align 8, !tbaa !197
  %524 = load ptr, ptr %523, align 8, !tbaa !13
  %525 = getelementptr inbounds ptr, ptr %524, i64 %320
  %526 = load ptr, ptr %525, align 8, !tbaa !13
  %527 = getelementptr inbounds i8, ptr %526, i64 %328
  %528 = load i8, ptr %527, align 1, !tbaa !14
  %529 = load ptr, ptr %286, align 8, !tbaa !1040
  %530 = load ptr, ptr %529, align 8, !tbaa !13
  %531 = getelementptr inbounds ptr, ptr %530, i64 %314
  %532 = load ptr, ptr %531, align 8, !tbaa !13
  %533 = getelementptr inbounds i8, ptr %532, i64 %324
  store i8 %528, ptr %533, align 1, !tbaa !14
  %534 = load ptr, ptr %285, align 8, !tbaa !197
  %535 = getelementptr inbounds ptr, ptr %534, i64 1
  %536 = load ptr, ptr %535, align 8, !tbaa !13
  %537 = getelementptr inbounds ptr, ptr %536, i64 %320
  %538 = load ptr, ptr %537, align 8, !tbaa !13
  %539 = getelementptr inbounds i8, ptr %538, i64 %328
  %540 = load i8, ptr %539, align 1, !tbaa !14
  %541 = load ptr, ptr %286, align 8, !tbaa !1040
  %542 = getelementptr inbounds ptr, ptr %541, i64 1
  %543 = load ptr, ptr %542, align 8, !tbaa !13
  %544 = getelementptr inbounds ptr, ptr %543, i64 %314
  %545 = load ptr, ptr %544, align 8, !tbaa !13
  %546 = getelementptr inbounds i8, ptr %545, i64 %324
  store i8 %540, ptr %546, align 1, !tbaa !14
  %547 = load ptr, ptr %287, align 8, !tbaa !930
  %548 = load ptr, ptr %547, align 8, !tbaa !13
  %549 = getelementptr inbounds ptr, ptr %548, i64 %320
  %550 = load ptr, ptr %549, align 8, !tbaa !13
  %551 = getelementptr inbounds i64, ptr %550, i64 %328
  %552 = load i64, ptr %551, align 8, !tbaa !592
  %553 = load ptr, ptr %288, align 8, !tbaa !1041
  %554 = load ptr, ptr %553, align 8, !tbaa !13
  %555 = getelementptr inbounds ptr, ptr %554, i64 %314
  %556 = load ptr, ptr %555, align 8, !tbaa !13
  %557 = getelementptr inbounds i64, ptr %556, i64 %324
  store i64 %552, ptr %557, align 8, !tbaa !592
  %558 = getelementptr inbounds ptr, ptr %547, i64 1
  %559 = load ptr, ptr %558, align 8, !tbaa !13
  %560 = getelementptr inbounds ptr, ptr %559, i64 %320
  %561 = load ptr, ptr %560, align 8, !tbaa !13
  %562 = getelementptr inbounds i64, ptr %561, i64 %328
  %563 = load i64, ptr %562, align 8, !tbaa !592
  %564 = getelementptr inbounds ptr, ptr %553, i64 1
  %565 = load ptr, ptr %564, align 8, !tbaa !13
  %566 = getelementptr inbounds ptr, ptr %565, i64 %314
  %567 = load ptr, ptr %566, align 8, !tbaa !13
  %568 = getelementptr inbounds i64, ptr %567, i64 %324
  store i64 %563, ptr %568, align 8, !tbaa !592
  %569 = load ptr, ptr @img, align 8, !tbaa !13
  %570 = getelementptr inbounds %struct.img_par, ptr %569, i64 0, i32 9
  %571 = load i32, ptr %570, align 8, !tbaa !465
  %572 = icmp eq i32 %571, 1
  br i1 %572, label %573, label %634

573:                                              ; preds = %490
  %574 = load i32, ptr %289, align 4, !tbaa !356
  %575 = icmp eq i32 %574, 0
  %576 = load ptr, ptr %286, align 8, !tbaa !1040
  %577 = load ptr, ptr %576, align 8, !tbaa !13
  %578 = getelementptr inbounds ptr, ptr %577, i64 %314
  %579 = load ptr, ptr %578, align 8, !tbaa !13
  %580 = getelementptr inbounds i8, ptr %579, i64 %324
  %581 = load i8, ptr %580, align 1, !tbaa !14
  %582 = icmp eq i8 %581, 0
  %583 = select i1 %575, i1 %582, i1 false
  br i1 %583, label %584, label %600

584:                                              ; preds = %573
  %585 = load ptr, ptr %284, align 8, !tbaa !1042
  %586 = load ptr, ptr %585, align 8, !tbaa !13
  %587 = getelementptr inbounds ptr, ptr %586, i64 %314
  %588 = load ptr, ptr %587, align 8, !tbaa !13
  %589 = getelementptr inbounds ptr, ptr %588, i64 %324
  %590 = load ptr, ptr %589, align 8, !tbaa !13
  %591 = load i16, ptr %590, align 2, !tbaa !40
  %592 = tail call i16 @llvm.abs.i16(i16 %591, i1 false)
  %593 = icmp ult i16 %592, 2
  br i1 %593, label %594, label %599

594:                                              ; preds = %584
  %595 = getelementptr inbounds i16, ptr %590, i64 1
  %596 = load i16, ptr %595, align 2, !tbaa !40
  %597 = tail call i16 @llvm.abs.i16(i16 %596, i1 false)
  %598 = icmp ult i16 %597, 2
  br i1 %598, label %626, label %599

599:                                              ; preds = %594, %584
  br label %626

600:                                              ; preds = %573
  %601 = icmp eq i8 %581, -1
  br i1 %601, label %602, label %626

602:                                              ; preds = %600
  %603 = getelementptr inbounds ptr, ptr %576, i64 1
  %604 = load ptr, ptr %603, align 8, !tbaa !13
  %605 = getelementptr inbounds ptr, ptr %604, i64 %314
  %606 = load ptr, ptr %605, align 8, !tbaa !13
  %607 = getelementptr inbounds i8, ptr %606, i64 %324
  %608 = load i8, ptr %607, align 1, !tbaa !14
  %609 = icmp eq i8 %608, 0
  br i1 %609, label %610, label %626

610:                                              ; preds = %602
  %611 = load ptr, ptr %284, align 8, !tbaa !1042
  %612 = getelementptr inbounds ptr, ptr %611, i64 1
  %613 = load ptr, ptr %612, align 8, !tbaa !13
  %614 = getelementptr inbounds ptr, ptr %613, i64 %314
  %615 = load ptr, ptr %614, align 8, !tbaa !13
  %616 = getelementptr inbounds ptr, ptr %615, i64 %324
  %617 = load ptr, ptr %616, align 8, !tbaa !13
  %618 = load i16, ptr %617, align 2, !tbaa !40
  %619 = tail call i16 @llvm.abs.i16(i16 %618, i1 false)
  %620 = icmp ult i16 %619, 2
  br i1 %620, label %621, label %626

621:                                              ; preds = %610
  %622 = getelementptr inbounds i16, ptr %617, i64 1
  %623 = load i16, ptr %622, align 2, !tbaa !40
  %624 = tail call i16 @llvm.abs.i16(i16 %623, i1 false)
  %625 = icmp ult i16 %624, 2
  br label %626

626:                                              ; preds = %621, %610, %602, %600, %599, %594
  %627 = phi i1 [ true, %594 ], [ false, %610 ], [ false, %602 ], [ false, %600 ], [ %625, %621 ], [ false, %599 ]
  %628 = xor i1 %627, true
  %629 = zext i1 %628 to i8
  %630 = load ptr, ptr %290, align 8, !tbaa !1043
  %631 = getelementptr inbounds ptr, ptr %630, i64 %314
  %632 = load ptr, ptr %631, align 8, !tbaa !13
  %633 = getelementptr inbounds i8, ptr %632, i64 %324
  store i8 %629, ptr %633, align 1, !tbaa !14
  br label %634

634:                                              ; preds = %626, %490
  %635 = load ptr, ptr %291, align 8, !tbaa !371
  %636 = load ptr, ptr %635, align 8, !tbaa !13
  %637 = getelementptr inbounds ptr, ptr %636, i64 %320
  %638 = load ptr, ptr %637, align 8, !tbaa !13
  %639 = getelementptr inbounds ptr, ptr %638, i64 %328
  %640 = load ptr, ptr %639, align 8, !tbaa !13
  %641 = load i16, ptr %640, align 2, !tbaa !40
  %642 = load ptr, ptr %292, align 8, !tbaa !1038
  %643 = load ptr, ptr %642, align 8, !tbaa !13
  %644 = getelementptr inbounds ptr, ptr %643, i64 %314
  %645 = load ptr, ptr %644, align 8, !tbaa !13
  %646 = getelementptr inbounds ptr, ptr %645, i64 %324
  %647 = load ptr, ptr %646, align 8, !tbaa !13
  store i16 %641, ptr %647, align 2, !tbaa !40
  %648 = getelementptr inbounds i16, ptr %640, i64 1
  %649 = load i16, ptr %648, align 2, !tbaa !40
  %650 = getelementptr inbounds i16, ptr %647, i64 1
  store i16 %649, ptr %650, align 2, !tbaa !40
  %651 = getelementptr inbounds ptr, ptr %635, i64 1
  %652 = load ptr, ptr %651, align 8, !tbaa !13
  %653 = getelementptr inbounds ptr, ptr %652, i64 %320
  %654 = load ptr, ptr %653, align 8, !tbaa !13
  %655 = getelementptr inbounds ptr, ptr %654, i64 %328
  %656 = load ptr, ptr %655, align 8, !tbaa !13
  %657 = load i16, ptr %656, align 2, !tbaa !40
  %658 = getelementptr inbounds ptr, ptr %642, i64 1
  %659 = load ptr, ptr %658, align 8, !tbaa !13
  %660 = getelementptr inbounds ptr, ptr %659, i64 %314
  %661 = load ptr, ptr %660, align 8, !tbaa !13
  %662 = getelementptr inbounds ptr, ptr %661, i64 %324
  %663 = load ptr, ptr %662, align 8, !tbaa !13
  store i16 %657, ptr %663, align 2, !tbaa !40
  %664 = getelementptr inbounds i16, ptr %656, i64 1
  %665 = load i16, ptr %664, align 2, !tbaa !40
  %666 = getelementptr inbounds i16, ptr %663, i64 1
  store i16 %665, ptr %666, align 2, !tbaa !40
  %667 = load ptr, ptr %293, align 8, !tbaa !197
  %668 = load ptr, ptr %667, align 8, !tbaa !13
  %669 = getelementptr inbounds ptr, ptr %668, i64 %320
  %670 = load ptr, ptr %669, align 8, !tbaa !13
  %671 = getelementptr inbounds i8, ptr %670, i64 %328
  %672 = load i8, ptr %671, align 1, !tbaa !14
  %673 = load ptr, ptr %294, align 8, !tbaa !1036
  %674 = load ptr, ptr %673, align 8, !tbaa !13
  %675 = getelementptr inbounds ptr, ptr %674, i64 %314
  %676 = load ptr, ptr %675, align 8, !tbaa !13
  %677 = getelementptr inbounds i8, ptr %676, i64 %324
  store i8 %672, ptr %677, align 1, !tbaa !14
  %678 = load ptr, ptr %293, align 8, !tbaa !197
  %679 = getelementptr inbounds ptr, ptr %678, i64 1
  %680 = load ptr, ptr %679, align 8, !tbaa !13
  %681 = getelementptr inbounds ptr, ptr %680, i64 %320
  %682 = load ptr, ptr %681, align 8, !tbaa !13
  %683 = getelementptr inbounds i8, ptr %682, i64 %328
  %684 = load i8, ptr %683, align 1, !tbaa !14
  %685 = load ptr, ptr %294, align 8, !tbaa !1036
  %686 = getelementptr inbounds ptr, ptr %685, i64 1
  %687 = load ptr, ptr %686, align 8, !tbaa !13
  %688 = getelementptr inbounds ptr, ptr %687, i64 %314
  %689 = load ptr, ptr %688, align 8, !tbaa !13
  %690 = getelementptr inbounds i8, ptr %689, i64 %324
  store i8 %684, ptr %690, align 1, !tbaa !14
  %691 = load ptr, ptr %295, align 8, !tbaa !930
  %692 = load ptr, ptr %691, align 8, !tbaa !13
  %693 = getelementptr inbounds ptr, ptr %692, i64 %320
  %694 = load ptr, ptr %693, align 8, !tbaa !13
  %695 = getelementptr inbounds i64, ptr %694, i64 %328
  %696 = load i64, ptr %695, align 8, !tbaa !592
  %697 = load ptr, ptr %296, align 8, !tbaa !1037
  %698 = load ptr, ptr %697, align 8, !tbaa !13
  %699 = getelementptr inbounds ptr, ptr %698, i64 %314
  %700 = load ptr, ptr %699, align 8, !tbaa !13
  %701 = getelementptr inbounds i64, ptr %700, i64 %324
  store i64 %696, ptr %701, align 8, !tbaa !592
  %702 = getelementptr inbounds ptr, ptr %691, i64 1
  %703 = load ptr, ptr %702, align 8, !tbaa !13
  %704 = getelementptr inbounds ptr, ptr %703, i64 %320
  %705 = load ptr, ptr %704, align 8, !tbaa !13
  %706 = getelementptr inbounds i64, ptr %705, i64 %328
  %707 = load i64, ptr %706, align 8, !tbaa !592
  %708 = getelementptr inbounds ptr, ptr %697, i64 1
  %709 = load ptr, ptr %708, align 8, !tbaa !13
  %710 = getelementptr inbounds ptr, ptr %709, i64 %314
  %711 = load ptr, ptr %710, align 8, !tbaa !13
  %712 = getelementptr inbounds i64, ptr %711, i64 %324
  store i64 %707, ptr %712, align 8, !tbaa !592
  %713 = load ptr, ptr @img, align 8, !tbaa !13
  %714 = getelementptr inbounds %struct.img_par, ptr %713, i64 0, i32 9
  %715 = load i32, ptr %714, align 8, !tbaa !465
  %716 = icmp eq i32 %715, 1
  br i1 %716, label %717, label %781

717:                                              ; preds = %634
  %718 = load i32, ptr %297, align 4, !tbaa !356
  %719 = icmp eq i32 %718, 0
  %720 = load ptr, ptr %294, align 8, !tbaa !1036
  %721 = load ptr, ptr %720, align 8, !tbaa !13
  %722 = getelementptr inbounds ptr, ptr %721, i64 %314
  %723 = load ptr, ptr %722, align 8, !tbaa !13
  %724 = getelementptr inbounds i8, ptr %723, i64 %324
  %725 = load i8, ptr %724, align 1, !tbaa !14
  %726 = icmp eq i8 %725, 0
  %727 = select i1 %719, i1 %726, i1 false
  br i1 %727, label %728, label %744

728:                                              ; preds = %717
  %729 = load ptr, ptr %292, align 8, !tbaa !1038
  %730 = load ptr, ptr %729, align 8, !tbaa !13
  %731 = getelementptr inbounds ptr, ptr %730, i64 %314
  %732 = load ptr, ptr %731, align 8, !tbaa !13
  %733 = getelementptr inbounds ptr, ptr %732, i64 %324
  %734 = load ptr, ptr %733, align 8, !tbaa !13
  %735 = load i16, ptr %734, align 2, !tbaa !40
  %736 = tail call i16 @llvm.abs.i16(i16 %735, i1 false)
  %737 = icmp ult i16 %736, 2
  br i1 %737, label %738, label %743

738:                                              ; preds = %728
  %739 = getelementptr inbounds i16, ptr %734, i64 1
  %740 = load i16, ptr %739, align 2, !tbaa !40
  %741 = tail call i16 @llvm.abs.i16(i16 %740, i1 false)
  %742 = icmp ult i16 %741, 2
  br i1 %742, label %770, label %743

743:                                              ; preds = %738, %728
  br label %770

744:                                              ; preds = %717
  %745 = icmp eq i8 %725, -1
  br i1 %745, label %746, label %770

746:                                              ; preds = %744
  %747 = getelementptr inbounds ptr, ptr %720, i64 1
  %748 = load ptr, ptr %747, align 8, !tbaa !13
  %749 = getelementptr inbounds ptr, ptr %748, i64 %314
  %750 = load ptr, ptr %749, align 8, !tbaa !13
  %751 = getelementptr inbounds i8, ptr %750, i64 %324
  %752 = load i8, ptr %751, align 1, !tbaa !14
  %753 = icmp eq i8 %752, 0
  br i1 %753, label %754, label %770

754:                                              ; preds = %746
  %755 = load ptr, ptr %292, align 8, !tbaa !1038
  %756 = getelementptr inbounds ptr, ptr %755, i64 1
  %757 = load ptr, ptr %756, align 8, !tbaa !13
  %758 = getelementptr inbounds ptr, ptr %757, i64 %314
  %759 = load ptr, ptr %758, align 8, !tbaa !13
  %760 = getelementptr inbounds ptr, ptr %759, i64 %324
  %761 = load ptr, ptr %760, align 8, !tbaa !13
  %762 = load i16, ptr %761, align 2, !tbaa !40
  %763 = tail call i16 @llvm.abs.i16(i16 %762, i1 false)
  %764 = icmp ult i16 %763, 2
  br i1 %764, label %765, label %770

765:                                              ; preds = %754
  %766 = getelementptr inbounds i16, ptr %761, i64 1
  %767 = load i16, ptr %766, align 2, !tbaa !40
  %768 = tail call i16 @llvm.abs.i16(i16 %767, i1 false)
  %769 = icmp ult i16 %768, 2
  br label %770

770:                                              ; preds = %765, %754, %746, %744, %743, %738
  %771 = phi i1 [ true, %738 ], [ false, %754 ], [ false, %746 ], [ false, %744 ], [ %769, %765 ], [ false, %743 ]
  %772 = xor i1 %771, true
  %773 = zext i1 %772 to i8
  %774 = load ptr, ptr %298, align 8, !tbaa !1039
  %775 = getelementptr inbounds ptr, ptr %774, i64 %314
  %776 = load ptr, ptr %775, align 8, !tbaa !13
  %777 = getelementptr inbounds i8, ptr %776, i64 %324
  store i8 %773, ptr %777, align 1, !tbaa !14
  %778 = load ptr, ptr @img, align 8, !tbaa !13
  %779 = getelementptr inbounds %struct.img_par, ptr %778, i64 0, i32 9
  %780 = load i32, ptr %779, align 8, !tbaa !465
  br label %781

781:                                              ; preds = %770, %634
  %782 = phi i32 [ %780, %770 ], [ %715, %634 ]
  %783 = phi ptr [ %778, %770 ], [ %713, %634 ]
  %784 = icmp eq i32 %782, 0
  br i1 %784, label %785, label %829

785:                                              ; preds = %781
  %786 = load ptr, ptr %299, align 8, !tbaa !932
  %787 = getelementptr inbounds ptr, ptr %786, i64 %321
  %788 = load ptr, ptr %787, align 8, !tbaa !13
  %789 = getelementptr inbounds i8, ptr %788, i64 %324
  %790 = load i8, ptr %789, align 1, !tbaa !14
  %791 = icmp eq i8 %790, 0
  br i1 %791, label %792, label %829

792:                                              ; preds = %785
  %793 = load ptr, ptr %292, align 8, !tbaa !1038
  %794 = load ptr, ptr %793, align 8, !tbaa !13
  %795 = getelementptr inbounds ptr, ptr %794, i64 %314
  %796 = load ptr, ptr %795, align 8, !tbaa !13
  %797 = getelementptr inbounds ptr, ptr %796, i64 %324
  %798 = load ptr, ptr %797, align 8, !tbaa !13
  %799 = getelementptr inbounds i16, ptr %798, i64 1
  %800 = load i16, ptr %799, align 2, !tbaa !40
  %801 = sdiv i16 %800, 2
  store i16 %801, ptr %799, align 2, !tbaa !40
  %802 = getelementptr inbounds ptr, ptr %793, i64 1
  %803 = load ptr, ptr %802, align 8, !tbaa !13
  %804 = getelementptr inbounds ptr, ptr %803, i64 %314
  %805 = load ptr, ptr %804, align 8, !tbaa !13
  %806 = getelementptr inbounds ptr, ptr %805, i64 %324
  %807 = load ptr, ptr %806, align 8, !tbaa !13
  %808 = getelementptr inbounds i16, ptr %807, i64 1
  %809 = load i16, ptr %808, align 2, !tbaa !40
  %810 = sdiv i16 %809, 2
  store i16 %810, ptr %808, align 2, !tbaa !40
  %811 = load ptr, ptr %284, align 8, !tbaa !1042
  %812 = load ptr, ptr %811, align 8, !tbaa !13
  %813 = getelementptr inbounds ptr, ptr %812, i64 %314
  %814 = load ptr, ptr %813, align 8, !tbaa !13
  %815 = getelementptr inbounds ptr, ptr %814, i64 %324
  %816 = load ptr, ptr %815, align 8, !tbaa !13
  %817 = getelementptr inbounds i16, ptr %816, i64 1
  %818 = load i16, ptr %817, align 2, !tbaa !40
  %819 = sdiv i16 %818, 2
  store i16 %819, ptr %817, align 2, !tbaa !40
  %820 = getelementptr inbounds ptr, ptr %811, i64 1
  %821 = load ptr, ptr %820, align 8, !tbaa !13
  %822 = getelementptr inbounds ptr, ptr %821, i64 %314
  %823 = load ptr, ptr %822, align 8, !tbaa !13
  %824 = getelementptr inbounds ptr, ptr %823, i64 %324
  %825 = load ptr, ptr %824, align 8, !tbaa !13
  %826 = getelementptr inbounds i16, ptr %825, i64 1
  %827 = load i16, ptr %826, align 2, !tbaa !40
  %828 = sdiv i16 %827, 2
  store i16 %828, ptr %826, align 2, !tbaa !40
  br label %829

829:                                              ; preds = %792, %785, %781, %481, %415
  %830 = phi ptr [ %489, %481 ], [ %425, %415 ], [ %783, %792 ], [ %783, %785 ], [ %783, %781 ]
  %831 = add nuw nsw i64 %324, 1
  %832 = load i32, ptr %282, align 8, !tbaa !566
  %833 = sdiv i32 %832, 4
  %834 = sext i32 %833 to i64
  %835 = icmp slt i64 %831, %834
  br i1 %835, label %322, label %836, !llvm.loop !1047

836:                                              ; preds = %829
  %.lcssa4 = phi ptr [ %830, %829 ]
  %.lcssa3 = phi i32 [ %832, %829 ]
  %837 = load i32, ptr %278, align 4, !tbaa !568
  br label %838

838:                                              ; preds = %836, %310
  %839 = phi ptr [ %.lcssa4, %836 ], [ %311, %310 ]
  %840 = phi i32 [ %837, %836 ], [ %312, %310 ]
  %841 = phi i32 [ %.lcssa3, %836 ], [ %313, %310 ]
  %842 = add nuw nsw i64 %314, 1
  %843 = sdiv i32 %840, 8
  %844 = sext i32 %843 to i64
  %845 = icmp slt i64 %842, %844
  br i1 %845, label %310, label %846, !llvm.loop !1048

846:                                              ; preds = %838, %277, %273
  %847 = phi ptr [ %269, %277 ], [ %269, %273 ], [ %839, %838 ]
  %848 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %849 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %848, i64 0, i32 29
  %850 = load i32, ptr %849, align 4, !tbaa !440
  %851 = icmp eq i32 %850, 0
  br i1 %851, label %861, label %852

852:                                              ; preds = %846
  %853 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %848, i64 0, i32 31
  %854 = load i32, ptr %853, align 4, !tbaa !739
  %855 = icmp eq i32 %854, 0
  br i1 %855, label %856, label %861

856:                                              ; preds = %852
  %857 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 14
  %858 = load i32, ptr %857, align 4, !tbaa !356
  %859 = trunc i32 %858 to i8
  %860 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 18
  store i8 %859, ptr %860, align 8, !tbaa !1044
  br label %1059

861:                                              ; preds = %852, %846
  %862 = getelementptr inbounds %struct.img_par, ptr %847, i64 0, i32 36
  %863 = load i32, ptr %862, align 8, !tbaa !206
  %864 = icmp eq i32 %863, 0
  br i1 %864, label %865, label %1051

865:                                              ; preds = %861
  %866 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 20
  %867 = load i32, ptr %866, align 4, !tbaa !568
  %868 = icmp sgt i32 %867, 3
  br i1 %868, label %869, label %1051

869:                                              ; preds = %865
  %870 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 19
  %871 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 41
  %872 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 43
  %873 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 42
  %874 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 6
  %875 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 4
  %876 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 38
  %877 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 5
  %878 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 18
  %879 = load i32, ptr %870, align 8, !tbaa !566
  br label %880

880:                                              ; preds = %1040, %869
  %881 = phi i32 [ %867, %869 ], [ %1041, %1040 ]
  %882 = phi i32 [ %879, %869 ], [ %1042, %1040 ]
  %883 = phi i64 [ 0, %869 ], [ %1043, %1040 ]
  %884 = icmp sgt i32 %882, 3
  br i1 %884, label %885, label %1040

885:                                              ; preds = %880
  %886 = trunc i64 %883 to i32
  %887 = lshr i32 %886, 1
  %888 = and i32 %887, 1073741820
  %889 = add nuw nsw i32 %888, %887
  %890 = zext i32 %887 to i64
  %891 = add nuw nsw i32 %889, 4
  br label %892

892:                                              ; preds = %1032, %885
  %893 = phi i64 [ 0, %885 ], [ %1033, %1032 ]
  %894 = load ptr, ptr %871, align 8, !tbaa !932
  %895 = getelementptr inbounds ptr, ptr %894, i64 %883
  %896 = load ptr, ptr %895, align 8, !tbaa !13
  %897 = getelementptr inbounds i8, ptr %896, i64 %893
  %898 = load i8, ptr %897, align 1, !tbaa !14
  %899 = icmp eq i8 %898, 0
  br i1 %899, label %1032, label %900

900:                                              ; preds = %892
  %901 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %902 = getelementptr inbounds %struct.storable_picture, ptr %901, i64 0, i32 1
  %903 = load i32, ptr %902, align 4, !tbaa !390
  %904 = load ptr, ptr %872, align 8, !tbaa !920
  %905 = getelementptr inbounds %struct.storable_picture, ptr %904, i64 0, i32 1
  %906 = load i32, ptr %905, align 4, !tbaa !390
  %907 = sub nsw i32 %903, %906
  %908 = tail call i32 @llvm.abs.i32(i32 %907, i1 true)
  %909 = load ptr, ptr %873, align 8, !tbaa !919
  %910 = getelementptr inbounds %struct.storable_picture, ptr %909, i64 0, i32 1
  %911 = load i32, ptr %910, align 4, !tbaa !390
  %912 = sub nsw i32 %903, %911
  %913 = tail call i32 @llvm.abs.i32(i32 %912, i1 true)
  %914 = icmp ugt i32 %908, %913
  %915 = load ptr, ptr %874, align 8, !tbaa !1033
  %916 = load ptr, ptr %915, align 8, !tbaa !13
  %917 = getelementptr inbounds ptr, ptr %916, i64 %883
  %918 = load ptr, ptr %917, align 8, !tbaa !13
  %919 = getelementptr inbounds ptr, ptr %918, i64 %893
  %920 = load ptr, ptr %919, align 8, !tbaa !13
  %921 = getelementptr inbounds i16, ptr %920, i64 1
  %922 = getelementptr inbounds ptr, ptr %915, i64 1
  br i1 %914, label %923, label %946

923:                                              ; preds = %900
  %924 = getelementptr inbounds %struct.storable_picture, ptr %909, i64 0, i32 39
  %925 = load ptr, ptr %924, align 8, !tbaa !371
  %926 = load ptr, ptr %925, align 8, !tbaa !13
  %927 = getelementptr inbounds ptr, ptr %926, i64 %890
  %928 = load ptr, ptr %927, align 8, !tbaa !13
  %929 = getelementptr inbounds ptr, ptr %928, i64 %893
  %930 = load ptr, ptr %929, align 8, !tbaa !13
  %931 = load i16, ptr %930, align 2, !tbaa !40
  store i16 %931, ptr %920, align 2, !tbaa !40
  %932 = getelementptr inbounds i16, ptr %930, i64 1
  %933 = load i16, ptr %932, align 2, !tbaa !40
  store i16 %933, ptr %921, align 2, !tbaa !40
  %934 = getelementptr inbounds ptr, ptr %925, i64 1
  %935 = load ptr, ptr %934, align 8, !tbaa !13
  %936 = getelementptr inbounds ptr, ptr %935, i64 %890
  %937 = load ptr, ptr %936, align 8, !tbaa !13
  %938 = getelementptr inbounds ptr, ptr %937, i64 %893
  %939 = load ptr, ptr %938, align 8, !tbaa !13
  %940 = load i16, ptr %939, align 2, !tbaa !40
  %941 = load ptr, ptr %922, align 8, !tbaa !13
  %942 = getelementptr inbounds ptr, ptr %941, i64 %883
  %943 = load ptr, ptr %942, align 8, !tbaa !13
  %944 = getelementptr inbounds ptr, ptr %943, i64 %893
  %945 = load ptr, ptr %944, align 8, !tbaa !13
  store i16 %940, ptr %945, align 2, !tbaa !40
  br label %969

946:                                              ; preds = %900
  %947 = getelementptr inbounds %struct.storable_picture, ptr %904, i64 0, i32 39
  %948 = load ptr, ptr %947, align 8, !tbaa !371
  %949 = load ptr, ptr %948, align 8, !tbaa !13
  %950 = getelementptr inbounds ptr, ptr %949, i64 %890
  %951 = load ptr, ptr %950, align 8, !tbaa !13
  %952 = getelementptr inbounds ptr, ptr %951, i64 %893
  %953 = load ptr, ptr %952, align 8, !tbaa !13
  %954 = load i16, ptr %953, align 2, !tbaa !40
  store i16 %954, ptr %920, align 2, !tbaa !40
  %955 = getelementptr inbounds i16, ptr %953, i64 1
  %956 = load i16, ptr %955, align 2, !tbaa !40
  store i16 %956, ptr %921, align 2, !tbaa !40
  %957 = getelementptr inbounds ptr, ptr %948, i64 1
  %958 = load ptr, ptr %957, align 8, !tbaa !13
  %959 = getelementptr inbounds ptr, ptr %958, i64 %890
  %960 = load ptr, ptr %959, align 8, !tbaa !13
  %961 = getelementptr inbounds ptr, ptr %960, i64 %893
  %962 = load ptr, ptr %961, align 8, !tbaa !13
  %963 = load i16, ptr %962, align 2, !tbaa !40
  %964 = load ptr, ptr %922, align 8, !tbaa !13
  %965 = getelementptr inbounds ptr, ptr %964, i64 %883
  %966 = load ptr, ptr %965, align 8, !tbaa !13
  %967 = getelementptr inbounds ptr, ptr %966, i64 %893
  %968 = load ptr, ptr %967, align 8, !tbaa !13
  store i16 %963, ptr %968, align 2, !tbaa !40
  br label %969

969:                                              ; preds = %946, %923
  %970 = phi ptr [ %939, %923 ], [ %962, %946 ]
  %971 = phi ptr [ %945, %923 ], [ %968, %946 ]
  %972 = phi ptr [ %909, %923 ], [ %904, %946 ]
  %973 = phi ptr [ %873, %923 ], [ %872, %946 ]
  %974 = phi i32 [ %889, %923 ], [ %891, %946 ]
  %975 = getelementptr inbounds i16, ptr %970, i64 1
  %976 = load i16, ptr %975, align 2, !tbaa !40
  %977 = getelementptr inbounds i16, ptr %971, i64 1
  store i16 %976, ptr %977, align 2, !tbaa !40
  %978 = getelementptr inbounds %struct.storable_picture, ptr %972, i64 0, i32 36
  %979 = load ptr, ptr %978, align 8, !tbaa !197
  %980 = load ptr, ptr %979, align 8, !tbaa !13
  %981 = getelementptr inbounds ptr, ptr %980, i64 %890
  %982 = load ptr, ptr %981, align 8, !tbaa !13
  %983 = getelementptr inbounds i8, ptr %982, i64 %893
  %984 = load i8, ptr %983, align 1, !tbaa !14
  %985 = load ptr, ptr %875, align 8, !tbaa !1031
  %986 = load ptr, ptr %985, align 8, !tbaa !13
  %987 = getelementptr inbounds ptr, ptr %986, i64 %883
  %988 = load ptr, ptr %987, align 8, !tbaa !13
  %989 = getelementptr inbounds i8, ptr %988, i64 %893
  store i8 %984, ptr %989, align 1, !tbaa !14
  %990 = load ptr, ptr %973, align 8, !tbaa !13
  %991 = getelementptr inbounds %struct.storable_picture, ptr %990, i64 0, i32 36
  %992 = load ptr, ptr %991, align 8, !tbaa !197
  %993 = getelementptr inbounds ptr, ptr %992, i64 1
  %994 = load ptr, ptr %993, align 8, !tbaa !13
  %995 = getelementptr inbounds ptr, ptr %994, i64 %890
  %996 = load ptr, ptr %995, align 8, !tbaa !13
  %997 = getelementptr inbounds i8, ptr %996, i64 %893
  %998 = load i8, ptr %997, align 1, !tbaa !14
  %999 = load ptr, ptr %875, align 8, !tbaa !1031
  %1000 = getelementptr inbounds ptr, ptr %999, i64 1
  %1001 = load ptr, ptr %1000, align 8, !tbaa !13
  %1002 = getelementptr inbounds ptr, ptr %1001, i64 %883
  %1003 = load ptr, ptr %1002, align 8, !tbaa !13
  %1004 = getelementptr inbounds i8, ptr %1003, i64 %893
  store i8 %998, ptr %1004, align 1, !tbaa !14
  %1005 = zext i32 %974 to i64
  %1006 = load ptr, ptr %876, align 8, !tbaa !930
  %1007 = load ptr, ptr %1006, align 8, !tbaa !13
  %1008 = getelementptr inbounds ptr, ptr %1007, i64 %1005
  %1009 = load ptr, ptr %1008, align 8, !tbaa !13
  %1010 = getelementptr inbounds i64, ptr %1009, i64 %893
  %1011 = load i64, ptr %1010, align 8, !tbaa !592
  %1012 = load ptr, ptr %877, align 8, !tbaa !1032
  %1013 = load ptr, ptr %1012, align 8, !tbaa !13
  %1014 = getelementptr inbounds ptr, ptr %1013, i64 %883
  %1015 = load ptr, ptr %1014, align 8, !tbaa !13
  %1016 = getelementptr inbounds i64, ptr %1015, i64 %893
  store i64 %1011, ptr %1016, align 8, !tbaa !592
  %1017 = getelementptr inbounds ptr, ptr %1006, i64 1
  %1018 = load ptr, ptr %1017, align 8, !tbaa !13
  %1019 = getelementptr inbounds ptr, ptr %1018, i64 %1005
  %1020 = load ptr, ptr %1019, align 8, !tbaa !13
  %1021 = getelementptr inbounds i64, ptr %1020, i64 %893
  %1022 = load i64, ptr %1021, align 8, !tbaa !592
  %1023 = getelementptr inbounds ptr, ptr %1012, i64 1
  %1024 = load ptr, ptr %1023, align 8, !tbaa !13
  %1025 = getelementptr inbounds ptr, ptr %1024, i64 %883
  %1026 = load ptr, ptr %1025, align 8, !tbaa !13
  %1027 = getelementptr inbounds i64, ptr %1026, i64 %893
  store i64 %1022, ptr %1027, align 8, !tbaa !592
  %1028 = load ptr, ptr %973, align 8, !tbaa !13
  %1029 = getelementptr inbounds %struct.storable_picture, ptr %1028, i64 0, i32 14
  %1030 = load i32, ptr %1029, align 4, !tbaa !356
  %1031 = trunc i32 %1030 to i8
  store i8 %1031, ptr %878, align 8, !tbaa !1044
  br label %1032

1032:                                             ; preds = %969, %892
  %1033 = add nuw nsw i64 %893, 1
  %1034 = load i32, ptr %870, align 8, !tbaa !566
  %1035 = sdiv i32 %1034, 4
  %1036 = sext i32 %1035 to i64
  %1037 = icmp slt i64 %1033, %1036
  br i1 %1037, label %892, label %1038, !llvm.loop !1049

1038:                                             ; preds = %1032
  %.lcssa2 = phi i32 [ %1034, %1032 ]
  %1039 = load i32, ptr %866, align 4, !tbaa !568
  br label %1040

1040:                                             ; preds = %1038, %880
  %1041 = phi i32 [ %1039, %1038 ], [ %881, %880 ]
  %1042 = phi i32 [ %.lcssa2, %1038 ], [ %882, %880 ]
  %1043 = add nuw nsw i64 %883, 1
  %1044 = sdiv i32 %1041, 4
  %1045 = sext i32 %1044 to i64
  %1046 = icmp slt i64 %1043, %1045
  br i1 %1046, label %880, label %1047, !llvm.loop !1050

1047:                                             ; preds = %1040
  %1048 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %1049 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1048, i64 0, i32 29
  %1050 = load i32, ptr %1049, align 4, !tbaa !440
  br label %1051

1051:                                             ; preds = %1047, %865, %861
  %1052 = phi i32 [ %1050, %1047 ], [ %850, %865 ], [ %850, %861 ]
  %1053 = phi ptr [ %1048, %1047 ], [ %848, %865 ], [ %848, %861 ]
  %1054 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 14
  %1055 = load i32, ptr %1054, align 4, !tbaa !356
  %1056 = trunc i32 %1055 to i8
  %1057 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 18
  store i8 %1056, ptr %1057, align 8, !tbaa !1044
  %1058 = icmp eq i32 %1052, 0
  br i1 %1058, label %1079, label %1059

1059:                                             ; preds = %1051, %856
  %1060 = phi ptr [ %860, %856 ], [ %1057, %1051 ]
  %1061 = phi ptr [ %848, %856 ], [ %1053, %1051 ]
  %1062 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1061, i64 0, i32 31
  %1063 = load i32, ptr %1062, align 4, !tbaa !739
  %1064 = icmp eq i32 %1063, 0
  br i1 %1064, label %1065, label %1079

1065:                                             ; preds = %1059
  %1066 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 20
  %1067 = load i32, ptr %1066, align 4, !tbaa !568
  %1068 = icmp sgt i32 %1067, 3
  br i1 %1068, label %1069, label %1417

1069:                                             ; preds = %1065
  %1070 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 19
  %1071 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 39
  %1072 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 6
  %1073 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 36
  %1074 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 4
  %1075 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 38
  %1076 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 5
  %1077 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 7
  %1078 = load i32, ptr %1070, align 8, !tbaa !566
  br label %1252

1079:                                             ; preds = %1059, %1051
  %1080 = phi ptr [ %1060, %1059 ], [ %1057, %1051 ]
  %1081 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 20
  %1082 = load i32, ptr %1081, align 4, !tbaa !568
  %1083 = icmp sgt i32 %1082, 3
  br i1 %1083, label %1084, label %1417

1084:                                             ; preds = %1079
  %1085 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 19
  %1086 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 6
  %1087 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 4
  %1088 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 5
  %1089 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 7
  %1090 = load i32, ptr %1085, align 8, !tbaa !566
  br label %1091

1091:                                             ; preds = %1245, %1084
  %1092 = phi i32 [ %1082, %1084 ], [ %1246, %1245 ]
  %1093 = phi i32 [ %1090, %1084 ], [ %1247, %1245 ]
  %1094 = phi i64 [ 0, %1084 ], [ %1248, %1245 ]
  %1095 = icmp sgt i32 %1093, 3
  br i1 %1095, label %1096, label %1245

1096:                                             ; preds = %1091
  %1097 = lshr i64 %1094, 1
  %1098 = and i64 %1097, 1
  %1099 = and i64 %1094, 2147483646
  %1100 = or i64 %1098, %1099
  br label %1101

1101:                                             ; preds = %1237, %1096
  %1102 = phi i64 [ 0, %1096 ], [ %1238, %1237 ]
  %1103 = and i64 %1102, 2147483646
  %1104 = lshr i64 %1102, 1
  %1105 = and i64 %1104, 1
  %1106 = or i64 %1105, %1103
  %1107 = load ptr, ptr %1086, align 8, !tbaa !1033
  %1108 = load ptr, ptr %1107, align 8, !tbaa !13
  %1109 = getelementptr inbounds ptr, ptr %1108, i64 %1100
  %1110 = load ptr, ptr %1109, align 8, !tbaa !13
  %1111 = getelementptr inbounds ptr, ptr %1110, i64 %1106
  %1112 = load ptr, ptr %1111, align 8, !tbaa !13
  %1113 = load i16, ptr %1112, align 2, !tbaa !40
  %1114 = getelementptr inbounds ptr, ptr %1108, i64 %1094
  %1115 = load ptr, ptr %1114, align 8, !tbaa !13
  %1116 = getelementptr inbounds ptr, ptr %1115, i64 %1102
  %1117 = load ptr, ptr %1116, align 8, !tbaa !13
  store i16 %1113, ptr %1117, align 2, !tbaa !40
  %1118 = getelementptr inbounds i16, ptr %1112, i64 1
  %1119 = load i16, ptr %1118, align 2, !tbaa !40
  %1120 = getelementptr inbounds i16, ptr %1117, i64 1
  store i16 %1119, ptr %1120, align 2, !tbaa !40
  %1121 = getelementptr inbounds ptr, ptr %1107, i64 1
  %1122 = load ptr, ptr %1121, align 8, !tbaa !13
  %1123 = getelementptr inbounds ptr, ptr %1122, i64 %1100
  %1124 = load ptr, ptr %1123, align 8, !tbaa !13
  %1125 = getelementptr inbounds ptr, ptr %1124, i64 %1106
  %1126 = load ptr, ptr %1125, align 8, !tbaa !13
  %1127 = load i16, ptr %1126, align 2, !tbaa !40
  %1128 = getelementptr inbounds ptr, ptr %1122, i64 %1094
  %1129 = load ptr, ptr %1128, align 8, !tbaa !13
  %1130 = getelementptr inbounds ptr, ptr %1129, i64 %1102
  %1131 = load ptr, ptr %1130, align 8, !tbaa !13
  store i16 %1127, ptr %1131, align 2, !tbaa !40
  %1132 = getelementptr inbounds i16, ptr %1126, i64 1
  %1133 = load i16, ptr %1132, align 2, !tbaa !40
  %1134 = getelementptr inbounds i16, ptr %1131, i64 1
  store i16 %1133, ptr %1134, align 2, !tbaa !40
  %1135 = load ptr, ptr %1087, align 8, !tbaa !1031
  %1136 = load ptr, ptr %1135, align 8, !tbaa !13
  %1137 = getelementptr inbounds ptr, ptr %1136, i64 %1100
  %1138 = load ptr, ptr %1137, align 8, !tbaa !13
  %1139 = getelementptr inbounds i8, ptr %1138, i64 %1106
  %1140 = load i8, ptr %1139, align 1, !tbaa !14
  %1141 = getelementptr inbounds ptr, ptr %1136, i64 %1094
  %1142 = load ptr, ptr %1141, align 8, !tbaa !13
  %1143 = getelementptr inbounds i8, ptr %1142, i64 %1102
  store i8 %1140, ptr %1143, align 1, !tbaa !14
  %1144 = load ptr, ptr %1087, align 8, !tbaa !1031
  %1145 = getelementptr inbounds ptr, ptr %1144, i64 1
  %1146 = load ptr, ptr %1145, align 8, !tbaa !13
  %1147 = getelementptr inbounds ptr, ptr %1146, i64 %1100
  %1148 = load ptr, ptr %1147, align 8, !tbaa !13
  %1149 = getelementptr inbounds i8, ptr %1148, i64 %1106
  %1150 = load i8, ptr %1149, align 1, !tbaa !14
  %1151 = getelementptr inbounds ptr, ptr %1146, i64 %1094
  %1152 = load ptr, ptr %1151, align 8, !tbaa !13
  %1153 = getelementptr inbounds i8, ptr %1152, i64 %1102
  store i8 %1150, ptr %1153, align 1, !tbaa !14
  %1154 = load ptr, ptr %1088, align 8, !tbaa !1032
  %1155 = load ptr, ptr %1154, align 8, !tbaa !13
  %1156 = getelementptr inbounds ptr, ptr %1155, i64 %1100
  %1157 = load ptr, ptr %1156, align 8, !tbaa !13
  %1158 = getelementptr inbounds i64, ptr %1157, i64 %1106
  %1159 = load i64, ptr %1158, align 8, !tbaa !592
  %1160 = getelementptr inbounds ptr, ptr %1155, i64 %1094
  %1161 = load ptr, ptr %1160, align 8, !tbaa !13
  %1162 = getelementptr inbounds i64, ptr %1161, i64 %1102
  store i64 %1159, ptr %1162, align 8, !tbaa !592
  %1163 = getelementptr inbounds ptr, ptr %1154, i64 1
  %1164 = load ptr, ptr %1163, align 8, !tbaa !13
  %1165 = getelementptr inbounds ptr, ptr %1164, i64 %1100
  %1166 = load ptr, ptr %1165, align 8, !tbaa !13
  %1167 = getelementptr inbounds i64, ptr %1166, i64 %1106
  %1168 = load i64, ptr %1167, align 8, !tbaa !592
  %1169 = getelementptr inbounds ptr, ptr %1164, i64 %1094
  %1170 = load ptr, ptr %1169, align 8, !tbaa !13
  %1171 = getelementptr inbounds i64, ptr %1170, i64 %1102
  store i64 %1168, ptr %1171, align 8, !tbaa !592
  %1172 = load ptr, ptr @img, align 8, !tbaa !13
  %1173 = getelementptr inbounds %struct.img_par, ptr %1172, i64 0, i32 9
  %1174 = load i32, ptr %1173, align 8, !tbaa !465
  %1175 = icmp eq i32 %1174, 1
  br i1 %1175, label %1176, label %1237

1176:                                             ; preds = %1101
  %1177 = load i8, ptr %1080, align 8, !tbaa !1044
  %1178 = icmp eq i8 %1177, 0
  %1179 = load ptr, ptr %1087, align 8, !tbaa !1031
  %1180 = load ptr, ptr %1179, align 8, !tbaa !13
  %1181 = getelementptr inbounds ptr, ptr %1180, i64 %1094
  %1182 = load ptr, ptr %1181, align 8, !tbaa !13
  %1183 = getelementptr inbounds i8, ptr %1182, i64 %1102
  %1184 = load i8, ptr %1183, align 1, !tbaa !14
  %1185 = icmp eq i8 %1184, 0
  %1186 = select i1 %1178, i1 %1185, i1 false
  br i1 %1186, label %1187, label %1203

1187:                                             ; preds = %1176
  %1188 = load ptr, ptr %1086, align 8, !tbaa !1033
  %1189 = load ptr, ptr %1188, align 8, !tbaa !13
  %1190 = getelementptr inbounds ptr, ptr %1189, i64 %1094
  %1191 = load ptr, ptr %1190, align 8, !tbaa !13
  %1192 = getelementptr inbounds ptr, ptr %1191, i64 %1102
  %1193 = load ptr, ptr %1192, align 8, !tbaa !13
  %1194 = load i16, ptr %1193, align 2, !tbaa !40
  %1195 = tail call i16 @llvm.abs.i16(i16 %1194, i1 false)
  %1196 = icmp ult i16 %1195, 2
  br i1 %1196, label %1197, label %1202

1197:                                             ; preds = %1187
  %1198 = getelementptr inbounds i16, ptr %1193, i64 1
  %1199 = load i16, ptr %1198, align 2, !tbaa !40
  %1200 = tail call i16 @llvm.abs.i16(i16 %1199, i1 false)
  %1201 = icmp ult i16 %1200, 2
  br i1 %1201, label %1229, label %1202

1202:                                             ; preds = %1197, %1187
  br label %1229

1203:                                             ; preds = %1176
  %1204 = icmp eq i8 %1184, -1
  br i1 %1204, label %1205, label %1229

1205:                                             ; preds = %1203
  %1206 = getelementptr inbounds ptr, ptr %1179, i64 1
  %1207 = load ptr, ptr %1206, align 8, !tbaa !13
  %1208 = getelementptr inbounds ptr, ptr %1207, i64 %1094
  %1209 = load ptr, ptr %1208, align 8, !tbaa !13
  %1210 = getelementptr inbounds i8, ptr %1209, i64 %1102
  %1211 = load i8, ptr %1210, align 1, !tbaa !14
  %1212 = icmp eq i8 %1211, 0
  br i1 %1212, label %1213, label %1229

1213:                                             ; preds = %1205
  %1214 = load ptr, ptr %1086, align 8, !tbaa !1033
  %1215 = getelementptr inbounds ptr, ptr %1214, i64 1
  %1216 = load ptr, ptr %1215, align 8, !tbaa !13
  %1217 = getelementptr inbounds ptr, ptr %1216, i64 %1094
  %1218 = load ptr, ptr %1217, align 8, !tbaa !13
  %1219 = getelementptr inbounds ptr, ptr %1218, i64 %1102
  %1220 = load ptr, ptr %1219, align 8, !tbaa !13
  %1221 = load i16, ptr %1220, align 2, !tbaa !40
  %1222 = tail call i16 @llvm.abs.i16(i16 %1221, i1 false)
  %1223 = icmp ult i16 %1222, 2
  br i1 %1223, label %1224, label %1229

1224:                                             ; preds = %1213
  %1225 = getelementptr inbounds i16, ptr %1220, i64 1
  %1226 = load i16, ptr %1225, align 2, !tbaa !40
  %1227 = tail call i16 @llvm.abs.i16(i16 %1226, i1 false)
  %1228 = icmp ult i16 %1227, 2
  br label %1229

1229:                                             ; preds = %1224, %1213, %1205, %1203, %1202, %1197
  %1230 = phi i1 [ true, %1197 ], [ false, %1213 ], [ false, %1205 ], [ false, %1203 ], [ %1228, %1224 ], [ false, %1202 ]
  %1231 = xor i1 %1230, true
  %1232 = zext i1 %1231 to i8
  %1233 = load ptr, ptr %1089, align 8, !tbaa !1034
  %1234 = getelementptr inbounds ptr, ptr %1233, i64 %1094
  %1235 = load ptr, ptr %1234, align 8, !tbaa !13
  %1236 = getelementptr inbounds i8, ptr %1235, i64 %1102
  store i8 %1232, ptr %1236, align 1, !tbaa !14
  br label %1237

1237:                                             ; preds = %1229, %1101
  %1238 = add nuw nsw i64 %1102, 1
  %1239 = load i32, ptr %1085, align 8, !tbaa !566
  %1240 = sdiv i32 %1239, 4
  %1241 = sext i32 %1240 to i64
  %1242 = icmp slt i64 %1238, %1241
  br i1 %1242, label %1101, label %1243, !llvm.loop !1051

1243:                                             ; preds = %1237
  %.lcssa = phi i32 [ %1239, %1237 ]
  %1244 = load i32, ptr %1081, align 4, !tbaa !568
  br label %1245

1245:                                             ; preds = %1243, %1091
  %1246 = phi i32 [ %1244, %1243 ], [ %1092, %1091 ]
  %1247 = phi i32 [ %.lcssa, %1243 ], [ %1093, %1091 ]
  %1248 = add nuw nsw i64 %1094, 1
  %1249 = sdiv i32 %1246, 4
  %1250 = sext i32 %1249 to i64
  %1251 = icmp slt i64 %1248, %1250
  br i1 %1251, label %1091, label %1417, !llvm.loop !1052

1252:                                             ; preds = %1410, %1069
  %1253 = phi i32 [ %1067, %1069 ], [ %1411, %1410 ]
  %1254 = phi i32 [ %1078, %1069 ], [ %1412, %1410 ]
  %1255 = phi i64 [ 0, %1069 ], [ %1413, %1410 ]
  %1256 = icmp sgt i32 %1254, 3
  br i1 %1256, label %1257, label %1410

1257:                                             ; preds = %1402, %1252
  %1258 = phi i64 [ %1403, %1402 ], [ 0, %1252 ]
  %1259 = load ptr, ptr %1071, align 8, !tbaa !371
  %1260 = load ptr, ptr %1259, align 8, !tbaa !13
  %1261 = getelementptr inbounds ptr, ptr %1260, i64 %1255
  %1262 = load ptr, ptr %1261, align 8, !tbaa !13
  %1263 = getelementptr inbounds ptr, ptr %1262, i64 %1258
  %1264 = load ptr, ptr %1263, align 8, !tbaa !13
  %1265 = load i16, ptr %1264, align 2, !tbaa !40
  %1266 = load ptr, ptr %1072, align 8, !tbaa !1033
  %1267 = load ptr, ptr %1266, align 8, !tbaa !13
  %1268 = getelementptr inbounds ptr, ptr %1267, i64 %1255
  %1269 = load ptr, ptr %1268, align 8, !tbaa !13
  %1270 = getelementptr inbounds ptr, ptr %1269, i64 %1258
  %1271 = load ptr, ptr %1270, align 8, !tbaa !13
  store i16 %1265, ptr %1271, align 2, !tbaa !40
  %1272 = getelementptr inbounds i16, ptr %1264, i64 1
  %1273 = load i16, ptr %1272, align 2, !tbaa !40
  %1274 = getelementptr inbounds i16, ptr %1271, i64 1
  store i16 %1273, ptr %1274, align 2, !tbaa !40
  %1275 = getelementptr inbounds ptr, ptr %1259, i64 1
  %1276 = load ptr, ptr %1275, align 8, !tbaa !13
  %1277 = getelementptr inbounds ptr, ptr %1276, i64 %1255
  %1278 = load ptr, ptr %1277, align 8, !tbaa !13
  %1279 = getelementptr inbounds ptr, ptr %1278, i64 %1258
  %1280 = load ptr, ptr %1279, align 8, !tbaa !13
  %1281 = load i16, ptr %1280, align 2, !tbaa !40
  %1282 = getelementptr inbounds ptr, ptr %1266, i64 1
  %1283 = load ptr, ptr %1282, align 8, !tbaa !13
  %1284 = getelementptr inbounds ptr, ptr %1283, i64 %1255
  %1285 = load ptr, ptr %1284, align 8, !tbaa !13
  %1286 = getelementptr inbounds ptr, ptr %1285, i64 %1258
  %1287 = load ptr, ptr %1286, align 8, !tbaa !13
  store i16 %1281, ptr %1287, align 2, !tbaa !40
  %1288 = getelementptr inbounds i16, ptr %1280, i64 1
  %1289 = load i16, ptr %1288, align 2, !tbaa !40
  %1290 = getelementptr inbounds i16, ptr %1287, i64 1
  store i16 %1289, ptr %1290, align 2, !tbaa !40
  %1291 = load ptr, ptr %1073, align 8, !tbaa !197
  %1292 = load ptr, ptr %1291, align 8, !tbaa !13
  %1293 = getelementptr inbounds ptr, ptr %1292, i64 %1255
  %1294 = load ptr, ptr %1293, align 8, !tbaa !13
  %1295 = getelementptr inbounds i8, ptr %1294, i64 %1258
  %1296 = load i8, ptr %1295, align 1, !tbaa !14
  %1297 = load ptr, ptr %1074, align 8, !tbaa !1031
  %1298 = load ptr, ptr %1297, align 8, !tbaa !13
  %1299 = getelementptr inbounds ptr, ptr %1298, i64 %1255
  %1300 = load ptr, ptr %1299, align 8, !tbaa !13
  %1301 = getelementptr inbounds i8, ptr %1300, i64 %1258
  store i8 %1296, ptr %1301, align 1, !tbaa !14
  %1302 = load ptr, ptr %1073, align 8, !tbaa !197
  %1303 = getelementptr inbounds ptr, ptr %1302, i64 1
  %1304 = load ptr, ptr %1303, align 8, !tbaa !13
  %1305 = getelementptr inbounds ptr, ptr %1304, i64 %1255
  %1306 = load ptr, ptr %1305, align 8, !tbaa !13
  %1307 = getelementptr inbounds i8, ptr %1306, i64 %1258
  %1308 = load i8, ptr %1307, align 1, !tbaa !14
  %1309 = load ptr, ptr %1074, align 8, !tbaa !1031
  %1310 = getelementptr inbounds ptr, ptr %1309, i64 1
  %1311 = load ptr, ptr %1310, align 8, !tbaa !13
  %1312 = getelementptr inbounds ptr, ptr %1311, i64 %1255
  %1313 = load ptr, ptr %1312, align 8, !tbaa !13
  %1314 = getelementptr inbounds i8, ptr %1313, i64 %1258
  store i8 %1308, ptr %1314, align 1, !tbaa !14
  %1315 = load ptr, ptr %1075, align 8, !tbaa !930
  %1316 = load ptr, ptr %1315, align 8, !tbaa !13
  %1317 = getelementptr inbounds ptr, ptr %1316, i64 %1255
  %1318 = load ptr, ptr %1317, align 8, !tbaa !13
  %1319 = getelementptr inbounds i64, ptr %1318, i64 %1258
  %1320 = load i64, ptr %1319, align 8, !tbaa !592
  %1321 = load ptr, ptr %1076, align 8, !tbaa !1032
  %1322 = load ptr, ptr %1321, align 8, !tbaa !13
  %1323 = getelementptr inbounds ptr, ptr %1322, i64 %1255
  %1324 = load ptr, ptr %1323, align 8, !tbaa !13
  %1325 = getelementptr inbounds i64, ptr %1324, i64 %1258
  store i64 %1320, ptr %1325, align 8, !tbaa !592
  %1326 = getelementptr inbounds ptr, ptr %1315, i64 1
  %1327 = load ptr, ptr %1326, align 8, !tbaa !13
  %1328 = getelementptr inbounds ptr, ptr %1327, i64 %1255
  %1329 = load ptr, ptr %1328, align 8, !tbaa !13
  %1330 = getelementptr inbounds i64, ptr %1329, i64 %1258
  %1331 = load i64, ptr %1330, align 8, !tbaa !592
  %1332 = getelementptr inbounds ptr, ptr %1321, i64 1
  %1333 = load ptr, ptr %1332, align 8, !tbaa !13
  %1334 = getelementptr inbounds ptr, ptr %1333, i64 %1255
  %1335 = load ptr, ptr %1334, align 8, !tbaa !13
  %1336 = getelementptr inbounds i64, ptr %1335, i64 %1258
  store i64 %1331, ptr %1336, align 8, !tbaa !592
  %1337 = load ptr, ptr @img, align 8, !tbaa !13
  %1338 = getelementptr inbounds %struct.img_par, ptr %1337, i64 0, i32 9
  %1339 = load i32, ptr %1338, align 8, !tbaa !465
  %1340 = icmp eq i32 %1339, 1
  br i1 %1340, label %1341, label %1402

1341:                                             ; preds = %1257
  %1342 = load i8, ptr %1060, align 8, !tbaa !1044
  %1343 = icmp eq i8 %1342, 0
  %1344 = load ptr, ptr %1074, align 8, !tbaa !1031
  %1345 = load ptr, ptr %1344, align 8, !tbaa !13
  %1346 = getelementptr inbounds ptr, ptr %1345, i64 %1255
  %1347 = load ptr, ptr %1346, align 8, !tbaa !13
  %1348 = getelementptr inbounds i8, ptr %1347, i64 %1258
  %1349 = load i8, ptr %1348, align 1, !tbaa !14
  %1350 = icmp eq i8 %1349, 0
  %1351 = select i1 %1343, i1 %1350, i1 false
  br i1 %1351, label %1352, label %1368

1352:                                             ; preds = %1341
  %1353 = load ptr, ptr %1072, align 8, !tbaa !1033
  %1354 = load ptr, ptr %1353, align 8, !tbaa !13
  %1355 = getelementptr inbounds ptr, ptr %1354, i64 %1255
  %1356 = load ptr, ptr %1355, align 8, !tbaa !13
  %1357 = getelementptr inbounds ptr, ptr %1356, i64 %1258
  %1358 = load ptr, ptr %1357, align 8, !tbaa !13
  %1359 = load i16, ptr %1358, align 2, !tbaa !40
  %1360 = tail call i16 @llvm.abs.i16(i16 %1359, i1 false)
  %1361 = icmp ult i16 %1360, 2
  br i1 %1361, label %1362, label %1367

1362:                                             ; preds = %1352
  %1363 = getelementptr inbounds i16, ptr %1358, i64 1
  %1364 = load i16, ptr %1363, align 2, !tbaa !40
  %1365 = tail call i16 @llvm.abs.i16(i16 %1364, i1 false)
  %1366 = icmp ult i16 %1365, 2
  br i1 %1366, label %1394, label %1367

1367:                                             ; preds = %1362, %1352
  br label %1394

1368:                                             ; preds = %1341
  %1369 = icmp eq i8 %1349, -1
  br i1 %1369, label %1370, label %1394

1370:                                             ; preds = %1368
  %1371 = getelementptr inbounds ptr, ptr %1344, i64 1
  %1372 = load ptr, ptr %1371, align 8, !tbaa !13
  %1373 = getelementptr inbounds ptr, ptr %1372, i64 %1255
  %1374 = load ptr, ptr %1373, align 8, !tbaa !13
  %1375 = getelementptr inbounds i8, ptr %1374, i64 %1258
  %1376 = load i8, ptr %1375, align 1, !tbaa !14
  %1377 = icmp eq i8 %1376, 0
  br i1 %1377, label %1378, label %1394

1378:                                             ; preds = %1370
  %1379 = load ptr, ptr %1072, align 8, !tbaa !1033
  %1380 = getelementptr inbounds ptr, ptr %1379, i64 1
  %1381 = load ptr, ptr %1380, align 8, !tbaa !13
  %1382 = getelementptr inbounds ptr, ptr %1381, i64 %1255
  %1383 = load ptr, ptr %1382, align 8, !tbaa !13
  %1384 = getelementptr inbounds ptr, ptr %1383, i64 %1258
  %1385 = load ptr, ptr %1384, align 8, !tbaa !13
  %1386 = load i16, ptr %1385, align 2, !tbaa !40
  %1387 = tail call i16 @llvm.abs.i16(i16 %1386, i1 false)
  %1388 = icmp ult i16 %1387, 2
  br i1 %1388, label %1389, label %1394

1389:                                             ; preds = %1378
  %1390 = getelementptr inbounds i16, ptr %1385, i64 1
  %1391 = load i16, ptr %1390, align 2, !tbaa !40
  %1392 = tail call i16 @llvm.abs.i16(i16 %1391, i1 false)
  %1393 = icmp ult i16 %1392, 2
  br label %1394

1394:                                             ; preds = %1389, %1378, %1370, %1368, %1367, %1362
  %1395 = phi i1 [ true, %1362 ], [ false, %1378 ], [ false, %1370 ], [ false, %1368 ], [ %1393, %1389 ], [ false, %1367 ]
  %1396 = xor i1 %1395, true
  %1397 = zext i1 %1396 to i8
  %1398 = load ptr, ptr %1077, align 8, !tbaa !1034
  %1399 = getelementptr inbounds ptr, ptr %1398, i64 %1255
  %1400 = load ptr, ptr %1399, align 8, !tbaa !13
  %1401 = getelementptr inbounds i8, ptr %1400, i64 %1258
  store i8 %1397, ptr %1401, align 1, !tbaa !14
  br label %1402

1402:                                             ; preds = %1394, %1257
  %1403 = add nuw nsw i64 %1258, 1
  %1404 = load i32, ptr %1070, align 8, !tbaa !566
  %1405 = sdiv i32 %1404, 4
  %1406 = sext i32 %1405 to i64
  %1407 = icmp slt i64 %1403, %1406
  br i1 %1407, label %1257, label %1408, !llvm.loop !1053

1408:                                             ; preds = %1402
  %.lcssa1 = phi i32 [ %1404, %1402 ]
  %1409 = load i32, ptr %1066, align 4, !tbaa !568
  br label %1410

1410:                                             ; preds = %1408, %1252
  %1411 = phi i32 [ %1409, %1408 ], [ %1253, %1252 ]
  %1412 = phi i32 [ %.lcssa1, %1408 ], [ %1254, %1252 ]
  %1413 = add nuw nsw i64 %1255, 1
  %1414 = sdiv i32 %1411, 4
  %1415 = sext i32 %1414 to i64
  %1416 = icmp slt i64 %1413, %1415
  br i1 %1416, label %1252, label %1417, !llvm.loop !1054

1417:                                             ; preds = %1410, %1245, %1079, %1065
  %1418 = phi i32 [ %1067, %1065 ], [ %1082, %1079 ], [ %1246, %1245 ], [ %1411, %1410 ]
  %1419 = load ptr, ptr @img, align 8, !tbaa !13
  %1420 = getelementptr inbounds %struct.img_par, ptr %1419, i64 0, i32 9
  %1421 = load i32, ptr %1420, align 8, !tbaa !465
  %1422 = icmp eq i32 %1421, 0
  br i1 %1422, label %1423, label %1592

1423:                                             ; preds = %1417
  %1424 = icmp sgt i32 %1418, 3
  br i1 %1424, label %1425, label %1442

1425:                                             ; preds = %1423
  %1426 = lshr i32 %1418, 2
  %1427 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 19
  %1428 = load i32, ptr %1427, align 8, !tbaa !566
  %1429 = sdiv i32 %1428, 4
  %1430 = icmp sgt i32 %1428, 3
  %1431 = getelementptr inbounds %struct.img_par, ptr %1419, i64 0, i32 44
  %1432 = getelementptr inbounds %struct.storable_picture, ptr %41, i64 0, i32 41
  %1433 = getelementptr inbounds %struct.img_par, ptr %1419, i64 0, i32 36
  %1434 = getelementptr inbounds %struct.colocated_params, ptr %0, i64 0, i32 6
  %1435 = zext i32 %1426 to i64
  %1436 = zext i32 %1429 to i64
  br label %1437

1437:                                             ; preds = %1516, %1425
  %1438 = phi i64 [ 0, %1425 ], [ %1517, %1516 ]
  br i1 %1430, label %1439, label %1516

1439:                                             ; preds = %1437
  %1440 = load i32, ptr %1431, align 8, !tbaa !189
  %1441 = icmp eq i32 %1440, 0
  br label %1446

1442:                                             ; preds = %1516, %1423
  %1443 = getelementptr inbounds %struct.img_par, ptr %1419, i64 0, i32 44
  %1444 = load i32, ptr %1443, align 8, !tbaa !189
  %1445 = icmp sgt i32 %1444, -1
  br i1 %1445, label %1519, label %1592

1446:                                             ; preds = %1513, %1439
  %1447 = phi i64 [ 0, %1439 ], [ %1514, %1513 ]
  br i1 %1441, label %1448, label %1458

1448:                                             ; preds = %1446
  %1449 = load i32, ptr %1433, align 8, !tbaa !206
  %1450 = icmp eq i32 %1449, 0
  br i1 %1450, label %1451, label %1487

1451:                                             ; preds = %1448
  %1452 = load ptr, ptr %1432, align 8, !tbaa !932
  %1453 = getelementptr inbounds ptr, ptr %1452, i64 %1438
  %1454 = load ptr, ptr %1453, align 8, !tbaa !13
  %1455 = getelementptr inbounds i8, ptr %1454, i64 %1447
  %1456 = load i8, ptr %1455, align 1, !tbaa !14
  %1457 = icmp eq i8 %1456, 0
  br i1 %1457, label %1513, label %1465

1458:                                             ; preds = %1446
  %1459 = load ptr, ptr %1432, align 8, !tbaa !932
  %1460 = getelementptr inbounds ptr, ptr %1459, i64 %1438
  %1461 = load ptr, ptr %1460, align 8, !tbaa !13
  %1462 = getelementptr inbounds i8, ptr %1461, i64 %1447
  %1463 = load i8, ptr %1462, align 1, !tbaa !14
  %1464 = icmp eq i8 %1463, 0
  br i1 %1464, label %1484, label %1465

1465:                                             ; preds = %1458, %1451
  %1466 = load ptr, ptr %1434, align 8, !tbaa !1033
  %1467 = load ptr, ptr %1466, align 8, !tbaa !13
  %1468 = getelementptr inbounds ptr, ptr %1467, i64 %1438
  %1469 = load ptr, ptr %1468, align 8, !tbaa !13
  %1470 = getelementptr inbounds ptr, ptr %1469, i64 %1447
  %1471 = load ptr, ptr %1470, align 8, !tbaa !13
  %1472 = getelementptr inbounds i16, ptr %1471, i64 1
  %1473 = load i16, ptr %1472, align 2, !tbaa !40
  %1474 = shl i16 %1473, 1
  store i16 %1474, ptr %1472, align 2, !tbaa !40
  %1475 = getelementptr inbounds ptr, ptr %1466, i64 1
  %1476 = load ptr, ptr %1475, align 8, !tbaa !13
  %1477 = getelementptr inbounds ptr, ptr %1476, i64 %1438
  %1478 = load ptr, ptr %1477, align 8, !tbaa !13
  %1479 = getelementptr inbounds ptr, ptr %1478, i64 %1447
  %1480 = load ptr, ptr %1479, align 8, !tbaa !13
  %1481 = getelementptr inbounds i16, ptr %1480, i64 1
  %1482 = load i16, ptr %1481, align 2, !tbaa !40
  %1483 = shl i16 %1482, 1
  store i16 %1483, ptr %1481, align 2, !tbaa !40
  br label %1513

1484:                                             ; preds = %1458
  %1485 = load i32, ptr %1433, align 8, !tbaa !206
  %1486 = icmp eq i32 %1485, 0
  br i1 %1486, label %1513, label %1487

1487:                                             ; preds = %1484, %1448
  %1488 = load ptr, ptr %1432, align 8, !tbaa !932
  %1489 = getelementptr inbounds ptr, ptr %1488, i64 %1438
  %1490 = load ptr, ptr %1489, align 8, !tbaa !13
  %1491 = getelementptr inbounds i8, ptr %1490, i64 %1447
  %1492 = load i8, ptr %1491, align 1, !tbaa !14
  %1493 = icmp eq i8 %1492, 0
  br i1 %1493, label %1494, label %1513

1494:                                             ; preds = %1487
  %1495 = load ptr, ptr %1434, align 8, !tbaa !1033
  %1496 = load ptr, ptr %1495, align 8, !tbaa !13
  %1497 = getelementptr inbounds ptr, ptr %1496, i64 %1438
  %1498 = load ptr, ptr %1497, align 8, !tbaa !13
  %1499 = getelementptr inbounds ptr, ptr %1498, i64 %1447
  %1500 = load ptr, ptr %1499, align 8, !tbaa !13
  %1501 = getelementptr inbounds i16, ptr %1500, i64 1
  %1502 = load i16, ptr %1501, align 2, !tbaa !40
  %1503 = sdiv i16 %1502, 2
  store i16 %1503, ptr %1501, align 2, !tbaa !40
  %1504 = getelementptr inbounds ptr, ptr %1495, i64 1
  %1505 = load ptr, ptr %1504, align 8, !tbaa !13
  %1506 = getelementptr inbounds ptr, ptr %1505, i64 %1438
  %1507 = load ptr, ptr %1506, align 8, !tbaa !13
  %1508 = getelementptr inbounds ptr, ptr %1507, i64 %1447
  %1509 = load ptr, ptr %1508, align 8, !tbaa !13
  %1510 = getelementptr inbounds i16, ptr %1509, i64 1
  %1511 = load i16, ptr %1510, align 2, !tbaa !40
  %1512 = sdiv i16 %1511, 2
  store i16 %1512, ptr %1510, align 2, !tbaa !40
  br label %1513

1513:                                             ; preds = %1494, %1487, %1484, %1465, %1451
  %1514 = add nuw nsw i64 %1447, 1
  %1515 = icmp eq i64 %1514, %1436
  br i1 %1515, label %1516, label %1446, !llvm.loop !1055

1516:                                             ; preds = %1513, %1437
  %1517 = add nuw nsw i64 %1438, 1
  %1518 = icmp eq i64 %1517, %1435
  br i1 %1518, label %1442, label %1437, !llvm.loop !1056

1519:                                             ; preds = %1585, %1442
  %1520 = phi i32 [ %1586, %1585 ], [ %1444, %1442 ]
  %1521 = phi i64 [ %1587, %1585 ], [ 0, %1442 ]
  %1522 = getelementptr inbounds [6 x i32], ptr @listXsize, i64 0, i64 %1521
  %1523 = load i32, ptr %1522, align 8, !tbaa !18
  %1524 = icmp sgt i32 %1523, 0
  br i1 %1524, label %1525, label %1585

1525:                                             ; preds = %1519
  %1526 = load ptr, ptr @dec_picture, align 8
  %1527 = getelementptr inbounds %struct.storable_picture, ptr %1526, i64 0, i32 2
  %1528 = getelementptr inbounds ptr, ptr %1, i64 %1521
  %1529 = getelementptr inbounds %struct.storable_picture, ptr %1526, i64 0, i32 1
  %1530 = getelementptr inbounds %struct.storable_picture, ptr %1526, i64 0, i32 3
  %1531 = or i64 %1521, 1
  %1532 = getelementptr inbounds ptr, ptr %1, i64 %1531
  %1533 = load ptr, ptr %1532, align 8, !tbaa !13
  %1534 = load ptr, ptr %1533, align 8, !tbaa !13
  %1535 = getelementptr inbounds %struct.storable_picture, ptr %1534, i64 0, i32 1
  %1536 = load ptr, ptr %1528, align 8, !tbaa !13
  %1537 = trunc i64 %1521 to i32
  br label %1538

1538:                                             ; preds = %1576, %1525
  %1539 = phi i64 [ 0, %1525 ], [ %1579, %1576 ]
  switch i32 %1537, label %1541 [
    i32 0, label %1542
    i32 2, label %1540
  ]

1540:                                             ; preds = %1538
  br label %1542

1541:                                             ; preds = %1538
  br label %1542

1542:                                             ; preds = %1541, %1540, %1538
  %1543 = phi ptr [ %1527, %1540 ], [ %1530, %1541 ], [ %1529, %1538 ]
  %1544 = load i32, ptr %1535, align 4, !tbaa !390
  %1545 = getelementptr inbounds ptr, ptr %1536, i64 %1539
  %1546 = load ptr, ptr %1545, align 8, !tbaa !13
  %1547 = getelementptr inbounds %struct.storable_picture, ptr %1546, i64 0, i32 1
  %1548 = load i32, ptr %1547, align 4, !tbaa !390
  %1549 = sub nsw i32 %1544, %1548
  %1550 = tail call i32 @llvm.smax.i32(i32 %1549, i32 -128)
  %1551 = tail call i32 @llvm.smin.i32(i32 %1550, i32 127)
  %1552 = icmp eq i32 %1551, 0
  br i1 %1552, label %1576, label %1553

1553:                                             ; preds = %1542
  %1554 = load i32, ptr %1543, align 4, !tbaa !18
  %1555 = load ptr, ptr %1528, align 8, !tbaa !13
  %1556 = getelementptr inbounds ptr, ptr %1555, i64 %1539
  %1557 = load ptr, ptr %1556, align 8, !tbaa !13
  %1558 = getelementptr inbounds %struct.storable_picture, ptr %1557, i64 0, i32 1
  %1559 = load i32, ptr %1558, align 4, !tbaa !390
  %1560 = sub nsw i32 %1554, %1559
  %1561 = tail call i32 @llvm.smax.i32(i32 %1560, i32 -128)
  %1562 = tail call i32 @llvm.smin.i32(i32 %1561, i32 127)
  %1563 = trunc i32 %1551 to i8
  %1564 = sdiv i8 %1563, 2
  %1565 = tail call i8 @llvm.abs.i8(i8 %1564, i1 true)
  %1566 = zext i8 %1565 to i16
  %1567 = or i16 %1566, 16384
  %1568 = trunc i32 %1551 to i16
  %1569 = sdiv i16 %1567, %1568
  %1570 = sext i16 %1569 to i32
  %1571 = mul nsw i32 %1562, %1570
  %1572 = add nsw i32 %1571, 32
  %1573 = ashr i32 %1572, 6
  %1574 = tail call i32 @llvm.smax.i32(i32 %1573, i32 -1024)
  %1575 = tail call i32 @llvm.smin.i32(i32 %1574, i32 1023)
  br label %1576

1576:                                             ; preds = %1553, %1542
  %1577 = phi i32 [ %1575, %1553 ], [ 9999, %1542 ]
  %1578 = getelementptr inbounds %struct.img_par, ptr %1419, i64 0, i32 26, i64 %1521, i64 %1539
  store i32 %1577, ptr %1578, align 4
  %1579 = add nuw nsw i64 %1539, 1
  %1580 = load i32, ptr %1522, align 8, !tbaa !18
  %1581 = sext i32 %1580 to i64
  %1582 = icmp slt i64 %1579, %1581
  br i1 %1582, label %1538, label %1583, !llvm.loop !1057

1583:                                             ; preds = %1576
  %1584 = load i32, ptr %1443, align 8, !tbaa !189
  br label %1585

1585:                                             ; preds = %1583, %1519
  %1586 = phi i32 [ %1584, %1583 ], [ %1520, %1519 ]
  %1587 = add nuw nsw i64 %1521, 2
  %1588 = shl nsw i32 %1586, 2
  %1589 = or i32 %1588, 2
  %1590 = sext i32 %1589 to i64
  %1591 = icmp slt i64 %1587, %1590
  br i1 %1591, label %1519, label %1592, !llvm.loop !1058

1592:                                             ; preds = %1585, %1442, %1417
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.abs.i16(i16, i1 immarg) #12

; Function Attrs: nounwind optsize uwtable
define internal i32 @get_mem2Dpel(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = sext i32 %1 to i64
  %5 = tail call noalias ptr @calloc(i64 noundef %4, i64 noundef 8) #45
  store ptr %5, ptr %0, align 8, !tbaa !13
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.268) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  %9 = load ptr, ptr %0, align 8, !tbaa !13
  br label %10

10:                                               ; preds = %7, %3
  %11 = phi ptr [ %9, %7 ], [ %5, %3 ]
  %12 = mul nsw i32 %2, %1
  %13 = sext i32 %12 to i64
  %14 = tail call noalias ptr @calloc(i64 noundef %13, i64 noundef 2) #45
  store ptr %14, ptr %11, align 8, !tbaa !13
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %10
  %17 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.268) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %18

18:                                               ; preds = %16, %10
  %19 = icmp sgt i32 %1, 1
  br i1 %19, label %20, label %33

20:                                               ; preds = %18
  %21 = sext i32 %2 to i64
  %22 = zext i32 %1 to i64
  br label %23

23:                                               ; preds = %23, %20
  %24 = phi i64 [ 1, %20 ], [ %31, %23 ]
  %25 = load ptr, ptr %0, align 8, !tbaa !13
  %26 = add nsw i64 %24, -1
  %27 = getelementptr inbounds ptr, ptr %25, i64 %26
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  %29 = getelementptr inbounds i16, ptr %28, i64 %21
  %30 = getelementptr inbounds ptr, ptr %25, i64 %24
  store ptr %29, ptr %30, align 8, !tbaa !13
  %31 = add nuw nsw i64 %24, 1
  %32 = icmp eq i64 %31, %22
  br i1 %32, label %33, label %23, !llvm.loop !1059

33:                                               ; preds = %23, %18
  %34 = shl i32 %12, 1
  ret i32 %34
}

; Function Attrs: nounwind optsize uwtable
define internal void @no_mem_exit(ptr noundef %0) #0 {
  %2 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef %0) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @get_mem3Dpel(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = sext i32 %1 to i64
  %6 = tail call noalias ptr @calloc(i64 noundef %5, i64 noundef 8) #45
  store ptr %6, ptr %0, align 8, !tbaa !13
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.1.273) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %10

10:                                               ; preds = %8, %4
  %11 = icmp sgt i32 %1, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %10
  %13 = zext i32 %1 to i64
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i64 [ 0, %12 ], [ %19, %14 ]
  %16 = load ptr, ptr %0, align 8, !tbaa !13
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = tail call i32 @get_mem2Dpel(ptr noundef %17, i32 noundef %2, i32 noundef %3) #47
  %19 = add nuw nsw i64 %15, 1
  %20 = icmp eq i64 %19, %13
  br i1 %20, label %21, label %14, !llvm.loop !1060

21:                                               ; preds = %14, %10
  %22 = shl i32 %1, 1
  %23 = mul i32 %22, %2
  %24 = mul i32 %23, %3
  ret i32 %24
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_mem2Dpel(ptr noundef %0) #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = load ptr, ptr %0, align 8, !tbaa !13
  %5 = icmp eq ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @free(ptr noundef nonnull %4) #46
  br label %8

7:                                                ; preds = %3
  tail call void @error(ptr noundef nonnull @.str.2.276, i32 noundef 100) #46
  br label %8

8:                                                ; preds = %7, %6
  tail call void @free(ptr noundef nonnull %0) #46
  br label %10

9:                                                ; preds = %1
  tail call void @error(ptr noundef nonnull @.str.2.276, i32 noundef 100) #46
  br label %10

10:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_mem3Dpel(ptr noundef %0, i32 noundef %1) #0 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %4
  %7 = zext i32 %1 to i64
  br label %8

8:                                                ; preds = %8, %6
  %9 = phi i64 [ 0, %6 ], [ %12, %8 ]
  %10 = getelementptr inbounds ptr, ptr %0, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !13
  tail call void @free_mem2Dpel(ptr noundef %11) #47
  %12 = add nuw nsw i64 %9, 1
  %13 = icmp eq i64 %12, %7
  br i1 %13, label %14, label %8, !llvm.loop !1061

14:                                               ; preds = %8, %4
  tail call void @free(ptr noundef nonnull %0) #46
  br label %16

15:                                               ; preds = %2
  tail call void @error(ptr noundef nonnull @.str.3.279, i32 noundef 100) #46
  br label %16

16:                                               ; preds = %15, %14
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @get_mem2D(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = sext i32 %1 to i64
  %5 = tail call noalias ptr @calloc(i64 noundef %4, i64 noundef 8) #45
  store ptr %5, ptr %0, align 8, !tbaa !13
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.4.282) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  %9 = load ptr, ptr %0, align 8, !tbaa !13
  br label %10

10:                                               ; preds = %7, %3
  %11 = phi ptr [ %9, %7 ], [ %5, %3 ]
  %12 = mul nsw i32 %2, %1
  %13 = sext i32 %12 to i64
  %14 = tail call noalias ptr @calloc(i64 noundef %13, i64 noundef 1) #45
  store ptr %14, ptr %11, align 8, !tbaa !13
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %10
  %17 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.4.282) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %18

18:                                               ; preds = %16, %10
  %19 = icmp sgt i32 %1, 1
  br i1 %19, label %20, label %33

20:                                               ; preds = %18
  %21 = sext i32 %2 to i64
  %22 = zext i32 %1 to i64
  br label %23

23:                                               ; preds = %23, %20
  %24 = phi i64 [ 1, %20 ], [ %31, %23 ]
  %25 = load ptr, ptr %0, align 8, !tbaa !13
  %26 = add nsw i64 %24, -1
  %27 = getelementptr inbounds ptr, ptr %25, i64 %26
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  %29 = getelementptr inbounds i8, ptr %28, i64 %21
  %30 = getelementptr inbounds ptr, ptr %25, i64 %24
  store ptr %29, ptr %30, align 8, !tbaa !13
  %31 = add nuw nsw i64 %24, 1
  %32 = icmp eq i64 %31, %22
  br i1 %32, label %33, label %23, !llvm.loop !1062

33:                                               ; preds = %23, %18
  ret i32 %12
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @get_mem2Dint(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = sext i32 %1 to i64
  %5 = tail call noalias ptr @calloc(i64 noundef %4, i64 noundef 8) #45
  store ptr %5, ptr %0, align 8, !tbaa !13
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.5.285) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  %9 = load ptr, ptr %0, align 8, !tbaa !13
  br label %10

10:                                               ; preds = %7, %3
  %11 = phi ptr [ %9, %7 ], [ %5, %3 ]
  %12 = mul nsw i32 %2, %1
  %13 = sext i32 %12 to i64
  %14 = tail call noalias ptr @calloc(i64 noundef %13, i64 noundef 4) #45
  store ptr %14, ptr %11, align 8, !tbaa !13
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %10
  %17 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.5.285) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %18

18:                                               ; preds = %16, %10
  %19 = icmp sgt i32 %1, 1
  br i1 %19, label %20, label %33

20:                                               ; preds = %18
  %21 = sext i32 %2 to i64
  %22 = zext i32 %1 to i64
  br label %23

23:                                               ; preds = %23, %20
  %24 = phi i64 [ 1, %20 ], [ %31, %23 ]
  %25 = load ptr, ptr %0, align 8, !tbaa !13
  %26 = add nsw i64 %24, -1
  %27 = getelementptr inbounds ptr, ptr %25, i64 %26
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  %29 = getelementptr inbounds i32, ptr %28, i64 %21
  %30 = getelementptr inbounds ptr, ptr %25, i64 %24
  store ptr %29, ptr %30, align 8, !tbaa !13
  %31 = add nuw nsw i64 %24, 1
  %32 = icmp eq i64 %31, %22
  br i1 %32, label %33, label %23, !llvm.loop !1063

33:                                               ; preds = %23, %18
  %34 = shl i32 %12, 2
  ret i32 %34
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @get_mem2Dint64(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = sext i32 %1 to i64
  %5 = tail call noalias ptr @calloc(i64 noundef %4, i64 noundef 8) #45
  store ptr %5, ptr %0, align 8, !tbaa !13
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.6.286) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  %9 = load ptr, ptr %0, align 8, !tbaa !13
  br label %10

10:                                               ; preds = %7, %3
  %11 = phi ptr [ %9, %7 ], [ %5, %3 ]
  %12 = mul nsw i32 %2, %1
  %13 = sext i32 %12 to i64
  %14 = tail call noalias ptr @calloc(i64 noundef %13, i64 noundef 8) #45
  store ptr %14, ptr %11, align 8, !tbaa !13
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %10
  %17 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.6.286) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %18

18:                                               ; preds = %16, %10
  %19 = icmp sgt i32 %1, 1
  br i1 %19, label %20, label %33

20:                                               ; preds = %18
  %21 = sext i32 %2 to i64
  %22 = zext i32 %1 to i64
  br label %23

23:                                               ; preds = %23, %20
  %24 = phi i64 [ 1, %20 ], [ %31, %23 ]
  %25 = load ptr, ptr %0, align 8, !tbaa !13
  %26 = add nsw i64 %24, -1
  %27 = getelementptr inbounds ptr, ptr %25, i64 %26
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  %29 = getelementptr inbounds i64, ptr %28, i64 %21
  %30 = getelementptr inbounds ptr, ptr %25, i64 %24
  store ptr %29, ptr %30, align 8, !tbaa !13
  %31 = add nuw nsw i64 %24, 1
  %32 = icmp eq i64 %31, %22
  br i1 %32, label %33, label %23, !llvm.loop !1064

33:                                               ; preds = %23, %18
  %34 = shl i32 %12, 3
  ret i32 %34
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @get_mem3D(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = sext i32 %1 to i64
  %6 = tail call noalias ptr @calloc(i64 noundef %5, i64 noundef 8) #45
  store ptr %6, ptr %0, align 8, !tbaa !13
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.7.289) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %10

10:                                               ; preds = %8, %4
  %11 = icmp sgt i32 %1, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %10
  %13 = zext i32 %1 to i64
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i64 [ 0, %12 ], [ %19, %14 ]
  %16 = load ptr, ptr %0, align 8, !tbaa !13
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = tail call i32 @get_mem2D(ptr noundef %17, i32 noundef %2, i32 noundef %3) #47
  %19 = add nuw nsw i64 %15, 1
  %20 = icmp eq i64 %19, %13
  br i1 %20, label %21, label %14, !llvm.loop !1065

21:                                               ; preds = %14, %10
  %22 = mul nsw i32 %2, %1
  %23 = mul nsw i32 %22, %3
  ret i32 %23
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @get_mem3Dint(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = sext i32 %1 to i64
  %6 = tail call noalias ptr @calloc(i64 noundef %5, i64 noundef 8) #45
  store ptr %6, ptr %0, align 8, !tbaa !13
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.8.292) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %10

10:                                               ; preds = %8, %4
  %11 = icmp sgt i32 %1, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %10
  %13 = zext i32 %1 to i64
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i64 [ 0, %12 ], [ %19, %14 ]
  %16 = load ptr, ptr %0, align 8, !tbaa !13
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = tail call i32 @get_mem2Dint(ptr noundef %17, i32 noundef %2, i32 noundef %3) #47
  %19 = add nuw nsw i64 %15, 1
  %20 = icmp eq i64 %19, %13
  br i1 %20, label %21, label %14, !llvm.loop !1066

21:                                               ; preds = %14, %10
  %22 = shl i32 %1, 2
  %23 = mul i32 %22, %2
  %24 = mul i32 %23, %3
  ret i32 %24
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @get_mem3Dint64(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = sext i32 %1 to i64
  %6 = tail call noalias ptr @calloc(i64 noundef %5, i64 noundef 8) #45
  store ptr %6, ptr %0, align 8, !tbaa !13
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.9.295) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %10

10:                                               ; preds = %8, %4
  %11 = icmp sgt i32 %1, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %10
  %13 = zext i32 %1 to i64
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i64 [ 0, %12 ], [ %19, %14 ]
  %16 = load ptr, ptr %0, align 8, !tbaa !13
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = tail call i32 @get_mem2Dint64(ptr noundef %17, i32 noundef %2, i32 noundef %3) #47
  %19 = add nuw nsw i64 %15, 1
  %20 = icmp eq i64 %19, %13
  br i1 %20, label %21, label %14, !llvm.loop !1067

21:                                               ; preds = %14, %10
  %22 = shl i32 %1, 3
  %23 = mul i32 %22, %2
  %24 = mul i32 %23, %3
  ret i32 %24
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @get_mem4Dint(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = sext i32 %1 to i64
  %7 = tail call noalias ptr @calloc(i64 noundef %6, i64 noundef 8) #45
  store ptr %7, ptr %0, align 8, !tbaa !13
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.10.298) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %11

11:                                               ; preds = %9, %5
  %12 = icmp sgt i32 %1, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %20, %15 ]
  %17 = load ptr, ptr %0, align 8, !tbaa !13
  %18 = getelementptr inbounds ptr, ptr %17, i64 %16
  %19 = tail call i32 @get_mem3Dint(ptr noundef %18, i32 noundef %2, i32 noundef %3, i32 noundef %4) #47
  %20 = add nuw nsw i64 %16, 1
  %21 = icmp eq i64 %20, %14
  br i1 %21, label %22, label %15, !llvm.loop !1068

22:                                               ; preds = %15, %11
  %23 = shl i32 %1, 2
  %24 = mul i32 %23, %2
  %25 = mul i32 %24, %3
  %26 = mul i32 %25, %4
  ret i32 %26
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_mem2D(ptr noundef %0) #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = load ptr, ptr %0, align 8, !tbaa !13
  %5 = icmp eq ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @free(ptr noundef nonnull %4) #46
  br label %8

7:                                                ; preds = %3
  tail call void @error(ptr noundef nonnull @.str.11.301, i32 noundef 100) #46
  br label %8

8:                                                ; preds = %7, %6
  tail call void @free(ptr noundef nonnull %0) #46
  br label %10

9:                                                ; preds = %1
  tail call void @error(ptr noundef nonnull @.str.11.301, i32 noundef 100) #46
  br label %10

10:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_mem2Dint(ptr noundef %0) #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = load ptr, ptr %0, align 8, !tbaa !13
  %5 = icmp eq ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @free(ptr noundef nonnull %4) #46
  br label %8

7:                                                ; preds = %3
  tail call void @error(ptr noundef nonnull @.str.12.304, i32 noundef 100) #46
  br label %8

8:                                                ; preds = %7, %6
  tail call void @free(ptr noundef nonnull %0) #46
  br label %10

9:                                                ; preds = %1
  tail call void @error(ptr noundef nonnull @.str.12.304, i32 noundef 100) #46
  br label %10

10:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_mem2Dint64(ptr noundef %0) #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = load ptr, ptr %0, align 8, !tbaa !13
  %5 = icmp eq ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @free(ptr noundef nonnull %4) #46
  br label %8

7:                                                ; preds = %3
  tail call void @error(ptr noundef nonnull @.str.13.305, i32 noundef 100) #46
  br label %8

8:                                                ; preds = %7, %6
  tail call void @free(ptr noundef nonnull %0) #46
  br label %10

9:                                                ; preds = %1
  tail call void @error(ptr noundef nonnull @.str.13.305, i32 noundef 100) #46
  br label %10

10:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_mem3D(ptr noundef %0, i32 noundef %1) #0 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %4
  %7 = zext i32 %1 to i64
  br label %8

8:                                                ; preds = %8, %6
  %9 = phi i64 [ 0, %6 ], [ %12, %8 ]
  %10 = getelementptr inbounds ptr, ptr %0, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !13
  tail call void @free_mem2D(ptr noundef %11) #47
  %12 = add nuw nsw i64 %9, 1
  %13 = icmp eq i64 %12, %7
  br i1 %13, label %14, label %8, !llvm.loop !1069

14:                                               ; preds = %8, %4
  tail call void @free(ptr noundef nonnull %0) #46
  br label %16

15:                                               ; preds = %2
  tail call void @error(ptr noundef nonnull @.str.14.308, i32 noundef 100) #46
  br label %16

16:                                               ; preds = %15, %14
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_mem3Dint(ptr noundef %0, i32 noundef %1) #0 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %4
  %7 = zext i32 %1 to i64
  br label %8

8:                                                ; preds = %8, %6
  %9 = phi i64 [ 0, %6 ], [ %12, %8 ]
  %10 = getelementptr inbounds ptr, ptr %0, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !13
  tail call void @free_mem2Dint(ptr noundef %11) #47
  %12 = add nuw nsw i64 %9, 1
  %13 = icmp eq i64 %12, %7
  br i1 %13, label %14, label %8, !llvm.loop !1070

14:                                               ; preds = %8, %4
  tail call void @free(ptr noundef nonnull %0) #46
  br label %16

15:                                               ; preds = %2
  tail call void @error(ptr noundef nonnull @.str.14.308, i32 noundef 100) #46
  br label %16

16:                                               ; preds = %15, %14
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_mem3Dint64(ptr noundef %0, i32 noundef %1) #0 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %4
  %7 = zext i32 %1 to i64
  br label %8

8:                                                ; preds = %8, %6
  %9 = phi i64 [ 0, %6 ], [ %12, %8 ]
  %10 = getelementptr inbounds ptr, ptr %0, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !13
  tail call void @free_mem2Dint64(ptr noundef %11) #47
  %12 = add nuw nsw i64 %9, 1
  %13 = icmp eq i64 %12, %7
  br i1 %13, label %14, label %8, !llvm.loop !1071

14:                                               ; preds = %8, %4
  tail call void @free(ptr noundef nonnull %0) #46
  br label %16

15:                                               ; preds = %2
  tail call void @error(ptr noundef nonnull @.str.15.313, i32 noundef 100) #46
  br label %16

16:                                               ; preds = %15, %14
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_mem4Dint(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = icmp sgt i32 %1, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %5
  %8 = zext i32 %1 to i64
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi i64 [ 0, %7 ], [ %13, %9 ]
  %11 = getelementptr inbounds ptr, ptr %0, i64 %10
  %12 = load ptr, ptr %11, align 8, !tbaa !13
  tail call void @free_mem3Dint(ptr noundef %12, i32 noundef %2) #47
  %13 = add nuw nsw i64 %10, 1
  %14 = icmp eq i64 %13, %8
  br i1 %14, label %15, label %9, !llvm.loop !1072

15:                                               ; preds = %9, %5
  tail call void @free(ptr noundef nonnull %0) #46
  br label %17

16:                                               ; preds = %3
  tail call void @error(ptr noundef nonnull @.str.16.316, i32 noundef 100) #46
  br label %17

17:                                               ; preds = %16, %15
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @get_mem2Dshort(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = sext i32 %1 to i64
  %5 = tail call noalias ptr @calloc(i64 noundef %4, i64 noundef 8) #45
  store ptr %5, ptr %0, align 8, !tbaa !13
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.18.319) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  %9 = load ptr, ptr %0, align 8, !tbaa !13
  br label %10

10:                                               ; preds = %7, %3
  %11 = phi ptr [ %9, %7 ], [ %5, %3 ]
  %12 = mul nsw i32 %2, %1
  %13 = sext i32 %12 to i64
  %14 = tail call noalias ptr @calloc(i64 noundef %13, i64 noundef 2) #45
  store ptr %14, ptr %11, align 8, !tbaa !13
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %10
  %17 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.18.319) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %18

18:                                               ; preds = %16, %10
  %19 = icmp sgt i32 %1, 1
  br i1 %19, label %20, label %33

20:                                               ; preds = %18
  %21 = sext i32 %2 to i64
  %22 = zext i32 %1 to i64
  br label %23

23:                                               ; preds = %23, %20
  %24 = phi i64 [ 1, %20 ], [ %31, %23 ]
  %25 = load ptr, ptr %0, align 8, !tbaa !13
  %26 = add nsw i64 %24, -1
  %27 = getelementptr inbounds ptr, ptr %25, i64 %26
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  %29 = getelementptr inbounds i16, ptr %28, i64 %21
  %30 = getelementptr inbounds ptr, ptr %25, i64 %24
  store ptr %29, ptr %30, align 8, !tbaa !13
  %31 = add nuw nsw i64 %24, 1
  %32 = icmp eq i64 %31, %22
  br i1 %32, label %33, label %23, !llvm.loop !1073

33:                                               ; preds = %23, %18
  %34 = shl i32 %12, 1
  ret i32 %34
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @get_mem3Dshort(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = sext i32 %1 to i64
  %6 = tail call noalias ptr @calloc(i64 noundef %5, i64 noundef 8) #45
  store ptr %6, ptr %0, align 8, !tbaa !13
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.19.320) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %10

10:                                               ; preds = %8, %4
  %11 = icmp sgt i32 %1, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %10
  %13 = zext i32 %1 to i64
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i64 [ 0, %12 ], [ %19, %14 ]
  %16 = load ptr, ptr %0, align 8, !tbaa !13
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = tail call i32 @get_mem2Dshort(ptr noundef %17, i32 noundef %2, i32 noundef %3) #47
  %19 = add nuw nsw i64 %15, 1
  %20 = icmp eq i64 %19, %13
  br i1 %20, label %21, label %14, !llvm.loop !1074

21:                                               ; preds = %14, %10
  %22 = shl i32 %1, 1
  %23 = mul i32 %22, %2
  %24 = mul i32 %23, %3
  ret i32 %24
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @get_mem4Dshort(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = sext i32 %1 to i64
  %7 = tail call noalias ptr @calloc(i64 noundef %6, i64 noundef 8) #45
  store ptr %7, ptr %0, align 8, !tbaa !13
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.17.267, ptr noundef nonnull @.str.20.323) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #46
  br label %11

11:                                               ; preds = %9, %5
  %12 = icmp sgt i32 %1, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %20, %15 ]
  %17 = load ptr, ptr %0, align 8, !tbaa !13
  %18 = getelementptr inbounds ptr, ptr %17, i64 %16
  %19 = tail call i32 @get_mem3Dshort(ptr noundef %18, i32 noundef %2, i32 noundef %3, i32 noundef %4) #47
  %20 = add nuw nsw i64 %16, 1
  %21 = icmp eq i64 %20, %14
  br i1 %21, label %22, label %15, !llvm.loop !1075

22:                                               ; preds = %15, %11
  %23 = shl i32 %1, 1
  %24 = mul i32 %23, %2
  %25 = mul i32 %24, %3
  %26 = mul i32 %25, %4
  ret i32 %26
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_mem2Dshort(ptr noundef %0) #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = load ptr, ptr %0, align 8, !tbaa !13
  %5 = icmp eq ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @free(ptr noundef nonnull %4) #46
  br label %8

7:                                                ; preds = %3
  tail call void @error(ptr noundef nonnull @.str.21.326, i32 noundef 100) #46
  br label %8

8:                                                ; preds = %7, %6
  tail call void @free(ptr noundef nonnull %0) #46
  br label %10

9:                                                ; preds = %1
  tail call void @error(ptr noundef nonnull @.str.21.326, i32 noundef 100) #46
  br label %10

10:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_mem3Dshort(ptr noundef %0, i32 noundef %1) #0 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %4
  %7 = zext i32 %1 to i64
  br label %8

8:                                                ; preds = %8, %6
  %9 = phi i64 [ 0, %6 ], [ %12, %8 ]
  %10 = getelementptr inbounds ptr, ptr %0, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !13
  tail call void @free_mem2Dshort(ptr noundef %11) #47
  %12 = add nuw nsw i64 %9, 1
  %13 = icmp eq i64 %12, %7
  br i1 %13, label %14, label %8, !llvm.loop !1076

14:                                               ; preds = %8, %4
  tail call void @free(ptr noundef nonnull %0) #46
  br label %16

15:                                               ; preds = %2
  tail call void @error(ptr noundef nonnull @.str.22.327, i32 noundef 100) #46
  br label %16

16:                                               ; preds = %15, %14
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @free_mem4Dshort(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = icmp sgt i32 %1, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %5
  %8 = zext i32 %1 to i64
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi i64 [ 0, %7 ], [ %13, %9 ]
  %11 = getelementptr inbounds ptr, ptr %0, i64 %10
  %12 = load ptr, ptr %11, align 8, !tbaa !13
  tail call void @free_mem3Dshort(ptr noundef %12, i32 noundef %2) #47
  %13 = add nuw nsw i64 %10, 1
  %14 = icmp eq i64 %13, %8
  br i1 %14, label %15, label %9, !llvm.loop !1077

15:                                               ; preds = %9, %5
  tail call void @free(ptr noundef nonnull %0) #46
  br label %17

16:                                               ; preds = %3
  tail call void @error(ptr noundef nonnull @.str.23.330, i32 noundef 100) #46
  br label %17

17:                                               ; preds = %16, %15
  ret void
}

; Function Attrs: nofree nounwind optsize uwtable
define internal i32 @RBSPtoSODB(ptr nocapture noundef readonly %0, i32 noundef %1) #6 {
  %3 = add nsw i32 %1, -1
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds i8, ptr %0, i64 %4
  %6 = load i8, ptr %5, align 1, !tbaa !14
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %31

9:                                                ; preds = %20, %2
  %10 = phi i32 [ %22, %20 ], [ 0, %2 ]
  %11 = phi i32 [ %21, %20 ], [ %1, %2 ]
  %12 = add nsw i32 %10, 1
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %20

14:                                               ; preds = %9
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.333)
  br label %18

18:                                               ; preds = %16, %14
  %19 = add nsw i32 %11, -1
  br label %20

20:                                               ; preds = %18, %9
  %21 = phi i32 [ %19, %18 ], [ %11, %9 ]
  %22 = phi i32 [ 0, %18 ], [ %12, %9 ]
  %23 = add nsw i32 %21, -1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, ptr %0, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !14
  %27 = zext i8 %26 to i32
  %28 = shl nuw i32 1, %22
  %29 = and i32 %28, %27
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %9, label %31, !llvm.loop !1078

31:                                               ; preds = %20, %2
  %32 = phi i32 [ %1, %2 ], [ %21, %20 ]
  ret i32 %32
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(argmem: readwrite) uwtable
define internal i32 @EBSPtoRBSP(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) #7 {
  %4 = icmp slt i32 %1, %2
  br i1 %4, label %38, label %5

5:                                                ; preds = %3
  %6 = icmp slt i32 %2, %1
  br i1 %6, label %7, label %38

7:                                                ; preds = %5
  %8 = sext i32 %2 to i64
  br label %9

9:                                                ; preds = %22, %7
  %10 = phi i64 [ %8, %7 ], [ %33, %22 ]
  %11 = phi i32 [ 0, %7 ], [ %32, %22 ]
  %12 = phi i32 [ %2, %7 ], [ %34, %22 ]
  %13 = icmp eq i32 %11, 2
  br i1 %13, label %14, label %22

14:                                               ; preds = %9
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds i8, ptr %0, i64 %15
  %17 = load i8, ptr %16, align 1, !tbaa !14
  %18 = icmp eq i8 %17, 3
  %19 = zext i1 %18 to i32
  %20 = add nsw i32 %12, %19
  %21 = select i1 %18, i32 0, i32 2
  br label %22

22:                                               ; preds = %14, %9
  %23 = phi i32 [ %12, %9 ], [ %20, %14 ]
  %24 = phi i32 [ %11, %9 ], [ %21, %14 ]
  %25 = sext i32 %23 to i64
  %26 = getelementptr inbounds i8, ptr %0, i64 %25
  %27 = load i8, ptr %26, align 1, !tbaa !14
  %28 = getelementptr inbounds i8, ptr %0, i64 %10
  store i8 %27, ptr %28, align 1, !tbaa !14
  %29 = load i8, ptr %26, align 1, !tbaa !14
  %30 = icmp eq i8 %29, 0
  %31 = add nsw i32 %24, 1
  %32 = select i1 %30, i32 %31, i32 0
  %33 = add i64 %10, 1
  %34 = add nsw i32 %23, 1
  %35 = icmp slt i32 %34, %1
  br i1 %35, label %9, label %36, !llvm.loop !1079

36:                                               ; preds = %22
  %.lcssa = phi i64 [ %33, %22 ]
  %37 = trunc i64 %.lcssa to i32
  br label %38

38:                                               ; preds = %36, %5, %3
  %39 = phi i32 [ %1, %3 ], [ %2, %5 ], [ %37, %36 ]
  ret i32 %39
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @NALUtoRBSP(ptr nocapture noundef %0) #0 {
  %2 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 6
  %3 = load ptr, ptr %2, align 8, !tbaa !21
  %4 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !20
  %6 = tail call i32 @EBSPtoRBSP(ptr noundef %3, i32 noundef %5, i32 noundef 1) #46
  store i32 %6, ptr %4, align 4, !tbaa !20
  ret i32 %6
}

; Function Attrs: nounwind optsize uwtable
define internal noalias ptr @AllocNALU(i32 noundef %0) #0 {
  %2 = tail call noalias dereferenceable_or_null(32) ptr @calloc(i64 noundef 1, i64 noundef 32) #45
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @no_mem_exit(ptr noundef nonnull @.str.340) #46
  br label %5

5:                                                ; preds = %4, %1
  %6 = getelementptr inbounds %struct.NALU_t, ptr %2, i64 0, i32 2
  store i32 %0, ptr %6, align 8, !tbaa !7
  %7 = sext i32 %0 to i64
  %8 = tail call noalias ptr @calloc(i64 noundef %7, i64 noundef 1) #45
  %9 = getelementptr inbounds %struct.NALU_t, ptr %2, i64 0, i32 6
  store ptr %8, ptr %9, align 8, !tbaa !21
  %10 = icmp eq ptr %8, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %5
  tail call void @free(ptr noundef nonnull %2) #46
  tail call void @no_mem_exit(ptr noundef nonnull @.str.1.341) #46
  br label %12

12:                                               ; preds = %11, %5
  ret ptr %2
}

; Function Attrs: mustprogress nounwind optsize willreturn uwtable
define internal void @FreeNALU(ptr noundef %0) #22 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 6
  %5 = load ptr, ptr %4, align 8, !tbaa !21
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @free(ptr noundef nonnull %5) #46
  br label %8

8:                                                ; preds = %7, %3
  tail call void @free(ptr noundef nonnull %0) #46
  br label %9

9:                                                ; preds = %8, %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(none) uwtable
define internal i32 @testEndian() #40 {
  ret i32 0
}

; Function Attrs: nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @img2buf(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7, i32 noundef %8) #25 {
  %10 = add i32 %5, %6
  %11 = sub i32 %2, %10
  %12 = icmp ugt i32 %4, 2
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  %14 = add i32 %7, %8
  %15 = sub i32 %3, %14
  %16 = mul i32 %11, %4
  %17 = mul i32 %16, %15
  %18 = sext i32 %17 to i64
  tail call void @llvm.memset.p0.i64(ptr align 1 %1, i8 0, i64 %18, i1 false)
  br label %32

19:                                               ; preds = %9
  %20 = or i32 %6, %5
  %21 = or i32 %20, %7
  %22 = or i32 %21, %8
  %23 = icmp ne i32 %22, 0
  %24 = icmp ne i32 %4, 1
  %25 = or i1 %23, %24
  br i1 %25, label %32, label %26

26:                                               ; preds = %19
  %27 = icmp sgt i32 %3, 0
  br i1 %27, label %28, label %85

28:                                               ; preds = %26
  %29 = icmp sgt i32 %2, 0
  %30 = zext i32 %3 to i64
  %31 = zext i32 %2 to i64
  br label %66

32:                                               ; preds = %19, %13
  %33 = phi i32 [ 2, %13 ], [ %4, %19 ]
  %34 = sub nsw i32 %3, %8
  %35 = icmp sgt i32 %34, %7
  br i1 %35, label %36, label %85

36:                                               ; preds = %32
  %37 = sub nsw i32 %2, %6
  %38 = icmp sgt i32 %37, %5
  %39 = zext i32 %33 to i64
  %40 = sext i32 %5 to i64
  %41 = sext i32 %37 to i64
  %42 = sext i32 %7 to i64
  %43 = sext i32 %34 to i64
  br label %44

44:                                               ; preds = %63, %36
  %45 = phi i64 [ %42, %36 ], [ %64, %63 ]
  br i1 %38, label %46, label %63

46:                                               ; preds = %44
  %47 = trunc i64 %45 to i32
  %48 = sub i32 %47, %7
  %49 = mul i32 %48, %11
  %50 = sub i32 %49, %5
  %51 = getelementptr inbounds ptr, ptr %0, i64 %45
  br label %52

52:                                               ; preds = %52, %46
  %53 = phi i64 [ %40, %46 ], [ %61, %52 ]
  %54 = trunc i64 %53 to i32
  %55 = add i32 %50, %54
  %56 = mul nsw i32 %55, %4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, ptr %1, i64 %57
  %59 = load ptr, ptr %51, align 8, !tbaa !13
  %60 = getelementptr inbounds i16, ptr %59, i64 %53
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %58, ptr align 2 %60, i64 %39, i1 false)
  %61 = add nsw i64 %53, 1
  %62 = icmp slt i64 %61, %41
  br i1 %62, label %52, label %63, !llvm.loop !1080

63:                                               ; preds = %52, %44
  %64 = add nsw i64 %45, 1
  %65 = icmp slt i64 %64, %43
  br i1 %65, label %44, label %85, !llvm.loop !1081

66:                                               ; preds = %81, %28
  %67 = phi i64 [ 0, %28 ], [ %83, %81 ]
  %68 = phi ptr [ %1, %28 ], [ %82, %81 ]
  br i1 %29, label %69, label %81

69:                                               ; preds = %66
  %70 = getelementptr inbounds ptr, ptr %0, i64 %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %79, %71 ]
  %73 = phi ptr [ %68, %69 ], [ %78, %71 ]
  %74 = load ptr, ptr %70, align 8, !tbaa !13
  %75 = getelementptr inbounds i16, ptr %74, i64 %72
  %76 = load i16, ptr %75, align 2, !tbaa !40
  %77 = trunc i16 %76 to i8
  %78 = getelementptr inbounds i8, ptr %73, i64 1
  store i8 %77, ptr %73, align 1, !tbaa !14
  %79 = add nuw nsw i64 %72, 1
  %80 = icmp eq i64 %79, %31
  br i1 %80, label %81, label %71, !llvm.loop !1082

81:                                               ; preds = %71, %66
  %82 = phi ptr [ %68, %66 ], [ %78, %71 ]
  %83 = add nuw nsw i64 %67, 1
  %84 = icmp eq i64 %83, %30
  br i1 %84, label %85, label %66, !llvm.loop !1083

85:                                               ; preds = %81, %63, %32, %26
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @write_out_picture(ptr noundef %0, i32 noundef %1) #0 {
  %3 = load ptr, ptr @img, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.img_par, ptr %3, i64 0, i32 100
  %5 = load i32, ptr %4, align 8, !tbaa !641
  %6 = sdiv i32 %5, 8
  %7 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %7, i64 0, i32 38, i32 12
  %9 = load i32, ptr %8, align 4, !tbaa !642
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 17
  %12 = load i32, ptr %11, align 8, !tbaa !344
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %295

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 52
  %16 = load i32, ptr %15, align 4, !tbaa !627
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %42, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 50
  %20 = load i32, ptr %19, align 4, !tbaa !83
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [4 x i32], ptr @__const.write_out_picture.SubWidthC, i64 0, i64 %21
  %23 = load i32, ptr %22, align 4, !tbaa !18
  %24 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 53
  %25 = load i32, ptr %24, align 8, !tbaa !644
  %26 = mul nsw i32 %25, %23
  %27 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 54
  %28 = load i32, ptr %27, align 4, !tbaa !645
  %29 = mul nsw i32 %28, %23
  %30 = getelementptr inbounds [4 x i32], ptr @__const.write_out_picture.SubHeightC, i64 0, i64 %21
  %31 = load i32, ptr %30, align 4, !tbaa !18
  %32 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 51
  %33 = load i32, ptr %32, align 8, !tbaa !625
  %34 = sub nsw i32 2, %33
  %35 = mul nsw i32 %34, %31
  %36 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 55
  %37 = load i32, ptr %36, align 8, !tbaa !646
  %38 = mul nsw i32 %35, %37
  %39 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 56
  %40 = load i32, ptr %39, align 4, !tbaa !647
  %41 = mul nsw i32 %35, %40
  br label %42

42:                                               ; preds = %18, %14
  %43 = phi i32 [ %41, %18 ], [ 0, %14 ]
  %44 = phi i32 [ %38, %18 ], [ 0, %14 ]
  %45 = phi i32 [ %29, %18 ], [ 0, %14 ]
  %46 = phi i32 [ %26, %18 ], [ 0, %14 ]
  %47 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 19
  %48 = load i32, ptr %47, align 8, !tbaa !566
  %49 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 20
  %50 = load i32, ptr %49, align 4, !tbaa !568
  %51 = mul i32 %48, %6
  %52 = mul i32 %51, %50
  %53 = sext i32 %52 to i64
  %54 = tail call noalias ptr @malloc(i64 noundef %53) #49
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %57

56:                                               ; preds = %42
  tail call void @no_mem_exit(ptr noundef nonnull @.str.1.346) #46
  br label %57

57:                                               ; preds = %56, %42
  br i1 %10, label %58, label %111

58:                                               ; preds = %57
  %59 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 53
  %60 = load i32, ptr %59, align 8, !tbaa !644
  %61 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 54
  %62 = load i32, ptr %61, align 4, !tbaa !645
  %63 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 51
  %64 = load i32, ptr %63, align 8, !tbaa !625
  %65 = sub nsw i32 2, %64
  %66 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 55
  %67 = load i32, ptr %66, align 8, !tbaa !646
  %68 = mul nsw i32 %65, %67
  %69 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 56
  %70 = load i32, ptr %69, align 4, !tbaa !647
  %71 = mul nsw i32 %70, %65
  %72 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 33
  %73 = load ptr, ptr %72, align 8, !tbaa !82
  %74 = getelementptr inbounds ptr, ptr %73, i64 1
  %75 = load ptr, ptr %74, align 8, !tbaa !13
  %76 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 21
  %77 = load i32, ptr %76, align 8, !tbaa !311
  %78 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 22
  %79 = load i32, ptr %78, align 4, !tbaa !312
  tail call void @img2buf(ptr noundef %75, ptr noundef %54, i32 noundef %77, i32 noundef %79, i32 noundef %6, i32 noundef %60, i32 noundef %62, i32 noundef %68, i32 noundef %71) #47
  %80 = load i32, ptr %78, align 4, !tbaa !312
  %81 = add i32 %71, %68
  %82 = sub i32 %80, %81
  %83 = load i32, ptr %76, align 8, !tbaa !311
  %84 = add i32 %62, %60
  %85 = sub i32 %83, %84
  %86 = mul i32 %82, %6
  %87 = mul i32 %86, %85
  %88 = sext i32 %87 to i64
  %89 = tail call i64 @write(i32 noundef %1, ptr noundef %54, i64 noundef %88) #46
  %90 = load i32, ptr %15, align 4, !tbaa !627
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %111, label %92

92:                                               ; preds = %58
  %93 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 50
  %94 = load i32, ptr %93, align 4, !tbaa !83
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [4 x i32], ptr @__const.write_out_picture.SubWidthC, i64 0, i64 %95
  %97 = load i32, ptr %96, align 4, !tbaa !18
  %98 = load i32, ptr %59, align 8, !tbaa !644
  %99 = mul nsw i32 %98, %97
  %100 = load i32, ptr %61, align 4, !tbaa !645
  %101 = mul nsw i32 %100, %97
  %102 = getelementptr inbounds [4 x i32], ptr @__const.write_out_picture.SubHeightC, i64 0, i64 %95
  %103 = load i32, ptr %102, align 4, !tbaa !18
  %104 = load i32, ptr %63, align 8, !tbaa !625
  %105 = sub nsw i32 2, %104
  %106 = mul nsw i32 %105, %103
  %107 = load i32, ptr %66, align 8, !tbaa !646
  %108 = mul nsw i32 %106, %107
  %109 = load i32, ptr %69, align 4, !tbaa !647
  %110 = mul nsw i32 %106, %109
  br label %111

111:                                              ; preds = %92, %58, %57
  %112 = phi i32 [ %110, %92 ], [ %43, %57 ], [ 0, %58 ]
  %113 = phi i32 [ %108, %92 ], [ %44, %57 ], [ 0, %58 ]
  %114 = phi i32 [ %101, %92 ], [ %45, %57 ], [ 0, %58 ]
  %115 = phi i32 [ %99, %92 ], [ %46, %57 ], [ 0, %58 ]
  %116 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 32
  %117 = load ptr, ptr %116, align 8, !tbaa !47
  %118 = load i32, ptr %47, align 8, !tbaa !566
  %119 = load i32, ptr %49, align 4, !tbaa !568
  tail call void @img2buf(ptr noundef %117, ptr noundef %54, i32 noundef %118, i32 noundef %119, i32 noundef %6, i32 noundef %115, i32 noundef %114, i32 noundef %113, i32 noundef %112) #47
  %120 = load i32, ptr %49, align 4, !tbaa !568
  %121 = add i32 %113, %112
  %122 = sub i32 %120, %121
  %123 = load i32, ptr %47, align 8, !tbaa !566
  %124 = add i32 %115, %114
  %125 = sub i32 %123, %124
  %126 = mul i32 %122, %6
  %127 = mul i32 %126, %125
  %128 = sext i32 %127 to i64
  %129 = tail call i64 @write(i32 noundef %1, ptr noundef %54, i64 noundef %128) #46
  %130 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 50
  %131 = load i32, ptr %130, align 4, !tbaa !83
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %178, label %133

133:                                              ; preds = %111
  %134 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 53
  %135 = load i32, ptr %134, align 8, !tbaa !644
  %136 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 54
  %137 = load i32, ptr %136, align 4, !tbaa !645
  %138 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 51
  %139 = load i32, ptr %138, align 8, !tbaa !625
  %140 = sub nsw i32 2, %139
  %141 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 55
  %142 = load i32, ptr %141, align 8, !tbaa !646
  %143 = mul nsw i32 %140, %142
  %144 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 56
  %145 = load i32, ptr %144, align 4, !tbaa !647
  %146 = mul nsw i32 %145, %140
  %147 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 33
  %148 = load ptr, ptr %147, align 8, !tbaa !82
  %149 = load ptr, ptr %148, align 8, !tbaa !13
  %150 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 21
  %151 = load i32, ptr %150, align 8, !tbaa !311
  %152 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 22
  %153 = load i32, ptr %152, align 4, !tbaa !312
  tail call void @img2buf(ptr noundef %149, ptr noundef %54, i32 noundef %151, i32 noundef %153, i32 noundef %6, i32 noundef %135, i32 noundef %137, i32 noundef %143, i32 noundef %146) #47
  %154 = load i32, ptr %152, align 4, !tbaa !312
  %155 = add i32 %146, %143
  %156 = sub i32 %154, %155
  %157 = load i32, ptr %150, align 8, !tbaa !311
  %158 = add i32 %137, %135
  %159 = sub i32 %157, %158
  %160 = mul i32 %156, %6
  %161 = mul i32 %160, %159
  %162 = sext i32 %161 to i64
  %163 = tail call i64 @write(i32 noundef %1, ptr noundef %54, i64 noundef %162) #46
  br i1 %10, label %294, label %164

164:                                              ; preds = %133
  %165 = load ptr, ptr %147, align 8, !tbaa !82
  %166 = getelementptr inbounds ptr, ptr %165, i64 1
  %167 = load ptr, ptr %166, align 8, !tbaa !13
  %168 = load i32, ptr %150, align 8, !tbaa !311
  %169 = load i32, ptr %152, align 4, !tbaa !312
  tail call void @img2buf(ptr noundef %167, ptr noundef %54, i32 noundef %168, i32 noundef %169, i32 noundef %6, i32 noundef %135, i32 noundef %137, i32 noundef %143, i32 noundef %146) #47
  %170 = load i32, ptr %152, align 4, !tbaa !312
  %171 = sub i32 %170, %155
  %172 = load i32, ptr %150, align 8, !tbaa !311
  %173 = sub i32 %172, %158
  %174 = mul i32 %171, %6
  %175 = mul i32 %174, %173
  %176 = sext i32 %175 to i64
  %177 = tail call i64 @write(i32 noundef %1, ptr noundef %54, i64 noundef %176) #46
  br label %294

178:                                              ; preds = %111
  %179 = load ptr, ptr @input, align 8, !tbaa !13
  %180 = getelementptr inbounds %struct.inp_par, ptr %179, i64 0, i32 6
  %181 = load i32, ptr %180, align 4, !tbaa !648
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %294, label %183

183:                                              ; preds = %178
  %184 = load ptr, ptr @img, align 8, !tbaa !13
  %185 = getelementptr inbounds %struct.img_par, ptr %184, i64 0, i32 101
  %186 = load i32, ptr %185, align 4, !tbaa !703
  %187 = add nsw i32 %186, -1
  %188 = shl nuw i32 1, %187
  %189 = trunc i32 %188 to i16
  %190 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 33
  %191 = load i32, ptr %49, align 4, !tbaa !568
  %192 = sdiv i32 %191, 2
  %193 = load i32, ptr %47, align 8, !tbaa !566
  %194 = sdiv i32 %193, 2
  %195 = tail call i32 @get_mem3Dpel(ptr noundef nonnull %190, i32 noundef 1, i32 noundef %192, i32 noundef %194) #46
  %196 = load i32, ptr %49, align 4, !tbaa !568
  %197 = sdiv i32 %196, 2
  %198 = icmp sgt i32 %196, 1
  %199 = load i32, ptr %47, align 8, !tbaa !566
  %200 = sdiv i32 %199, 2
  br i1 %198, label %201, label %266

201:                                              ; preds = %183
  %202 = icmp sgt i32 %199, 1
  %203 = zext i32 %197 to i64
  %204 = zext i32 %200 to i64
  %205 = add nuw nsw i64 %204, 7
  %206 = and i64 %205, 8589934584
  %207 = add nsw i64 %204, -1
  %208 = insertelement <8 x i64> poison, i64 %207, i64 0
  %209 = shufflevector <8 x i64> %208, <8 x i64> poison, <8 x i32> zeroinitializer
  br label %210

210:                                              ; preds = %263, %201
  %211 = phi i64 [ 0, %201 ], [ %264, %263 ]
  br i1 %202, label %212, label %263

212:                                              ; preds = %210
  %213 = load ptr, ptr %190, align 8, !tbaa !82
  %214 = load ptr, ptr %213, align 8, !tbaa !13
  %215 = getelementptr inbounds ptr, ptr %214, i64 %211
  %216 = load ptr, ptr %215, align 8, !tbaa !13
  br label %217

217:                                              ; preds = %259, %212
  %218 = phi i64 [ 0, %212 ], [ %260, %259 ]
  %219 = phi <8 x i64> [ <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7>, %212 ], [ %261, %259 ]
  %220 = icmp ule <8 x i64> %219, %209
  %221 = extractelement <8 x i1> %220, i64 0
  br i1 %221, label %222, label %224

222:                                              ; preds = %217
  %223 = getelementptr inbounds i16, ptr %216, i64 %218
  store i16 %189, ptr %223, align 2, !tbaa !40
  br label %224

224:                                              ; preds = %222, %217
  %225 = extractelement <8 x i1> %220, i64 1
  br i1 %225, label %226, label %229

226:                                              ; preds = %224
  %227 = or i64 %218, 1
  %228 = getelementptr inbounds i16, ptr %216, i64 %227
  store i16 %189, ptr %228, align 2, !tbaa !40
  br label %229

229:                                              ; preds = %226, %224
  %230 = extractelement <8 x i1> %220, i64 2
  br i1 %230, label %231, label %234

231:                                              ; preds = %229
  %232 = or i64 %218, 2
  %233 = getelementptr inbounds i16, ptr %216, i64 %232
  store i16 %189, ptr %233, align 2, !tbaa !40
  br label %234

234:                                              ; preds = %231, %229
  %235 = extractelement <8 x i1> %220, i64 3
  br i1 %235, label %236, label %239

236:                                              ; preds = %234
  %237 = or i64 %218, 3
  %238 = getelementptr inbounds i16, ptr %216, i64 %237
  store i16 %189, ptr %238, align 2, !tbaa !40
  br label %239

239:                                              ; preds = %236, %234
  %240 = extractelement <8 x i1> %220, i64 4
  br i1 %240, label %241, label %244

241:                                              ; preds = %239
  %242 = or i64 %218, 4
  %243 = getelementptr inbounds i16, ptr %216, i64 %242
  store i16 %189, ptr %243, align 2, !tbaa !40
  br label %244

244:                                              ; preds = %241, %239
  %245 = extractelement <8 x i1> %220, i64 5
  br i1 %245, label %246, label %249

246:                                              ; preds = %244
  %247 = or i64 %218, 5
  %248 = getelementptr inbounds i16, ptr %216, i64 %247
  store i16 %189, ptr %248, align 2, !tbaa !40
  br label %249

249:                                              ; preds = %246, %244
  %250 = extractelement <8 x i1> %220, i64 6
  br i1 %250, label %251, label %254

251:                                              ; preds = %249
  %252 = or i64 %218, 6
  %253 = getelementptr inbounds i16, ptr %216, i64 %252
  store i16 %189, ptr %253, align 2, !tbaa !40
  br label %254

254:                                              ; preds = %251, %249
  %255 = extractelement <8 x i1> %220, i64 7
  br i1 %255, label %256, label %259

256:                                              ; preds = %254
  %257 = or i64 %218, 7
  %258 = getelementptr inbounds i16, ptr %216, i64 %257
  store i16 %189, ptr %258, align 2, !tbaa !40
  br label %259

259:                                              ; preds = %256, %254
  %260 = add i64 %218, 8
  %261 = add <8 x i64> %219, <i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8>
  %262 = icmp eq i64 %260, %206
  br i1 %262, label %263, label %217, !llvm.loop !1084

263:                                              ; preds = %259, %210
  %264 = add nuw nsw i64 %211, 1
  %265 = icmp eq i64 %264, %203
  br i1 %265, label %266, label %210, !llvm.loop !1085

266:                                              ; preds = %263, %183
  %267 = load ptr, ptr %190, align 8, !tbaa !82
  %268 = load ptr, ptr %267, align 8, !tbaa !13
  %269 = sdiv i32 %115, 2
  %270 = sdiv i32 %114, 2
  %271 = sdiv i32 %113, 2
  %272 = sdiv i32 %112, 2
  tail call void @img2buf(ptr noundef %268, ptr noundef %54, i32 noundef %200, i32 noundef %197, i32 noundef %6, i32 noundef %269, i32 noundef %270, i32 noundef %271, i32 noundef %272) #47
  %273 = load i32, ptr %49, align 4, !tbaa !568
  %274 = sub i32 %273, %121
  %275 = mul nsw i32 %274, %6
  %276 = sdiv i32 %275, 2
  %277 = load i32, ptr %47, align 8, !tbaa !566
  %278 = sub i32 %277, %124
  %279 = mul nsw i32 %276, %278
  %280 = sdiv i32 %279, 2
  %281 = sext i32 %280 to i64
  %282 = tail call i64 @write(i32 noundef %1, ptr noundef %54, i64 noundef %281) #46
  %283 = load i32, ptr %49, align 4, !tbaa !568
  %284 = sub i32 %283, %121
  %285 = mul nsw i32 %284, %6
  %286 = sdiv i32 %285, 2
  %287 = load i32, ptr %47, align 8, !tbaa !566
  %288 = sub i32 %287, %124
  %289 = mul nsw i32 %286, %288
  %290 = sdiv i32 %289, 2
  %291 = sext i32 %290 to i64
  %292 = tail call i64 @write(i32 noundef %1, ptr noundef %54, i64 noundef %291) #46
  %293 = load ptr, ptr %190, align 8, !tbaa !82
  tail call void @free_mem3Dpel(ptr noundef %293, i32 noundef 1) #46
  store ptr null, ptr %190, align 8, !tbaa !82
  br label %294

294:                                              ; preds = %266, %178, %164, %133
  tail call void @free(ptr noundef %54) #46
  br label %295

295:                                              ; preds = %294, %2
  ret void
}

; Function Attrs: nofree optsize
declare noundef i64 @write(i32 noundef, ptr nocapture noundef readonly, i64 noundef) local_unnamed_addr #27

; Function Attrs: nounwind optsize uwtable
define internal void @init_out_buffer() #0 {
  %1 = tail call ptr @alloc_frame_store() #46
  store ptr %1, ptr @out_buffer, align 8, !tbaa !13
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @uninit_out_buffer() #0 {
  %1 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  tail call void @free_frame_store(ptr noundef %1) #46
  store ptr null, ptr @out_buffer, align 8, !tbaa !13
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal void @clear_picture(ptr nocapture noundef readonly %0) #9 {
  %2 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 20
  %3 = load i32, ptr %2, align 4, !tbaa !568
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %73

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 19
  %7 = load i32, ptr %6, align 8, !tbaa !566
  %8 = icmp sgt i32 %7, 0
  %9 = load ptr, ptr @img, align 8
  %10 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 105
  %11 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 32
  %12 = zext i32 %3 to i64
  %13 = zext i32 %7 to i64
  %14 = add nuw nsw i64 %13, 7
  %15 = and i64 %14, 8589934584
  %16 = add nsw i64 %13, -1
  %17 = insertelement <8 x i64> poison, i64 %16, i64 0
  %18 = shufflevector <8 x i64> %17, <8 x i64> poison, <8 x i32> zeroinitializer
  br label %19

19:                                               ; preds = %91, %5
  %20 = phi i64 [ 0, %5 ], [ %92, %91 ]
  br i1 %8, label %21, label %91

21:                                               ; preds = %19
  %22 = load i32, ptr %10, align 4, !tbaa !61
  %23 = trunc i32 %22 to i16
  %24 = load ptr, ptr %11, align 8, !tbaa !47
  %25 = getelementptr inbounds ptr, ptr %24, i64 %20
  %26 = load ptr, ptr %25, align 8, !tbaa !13
  br label %27

27:                                               ; preds = %69, %21
  %28 = phi i64 [ 0, %21 ], [ %70, %69 ]
  %29 = phi <8 x i64> [ <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7>, %21 ], [ %71, %69 ]
  %30 = icmp ule <8 x i64> %29, %18
  %31 = extractelement <8 x i1> %30, i64 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  %33 = getelementptr inbounds i16, ptr %26, i64 %28
  store i16 %23, ptr %33, align 2, !tbaa !40
  br label %34

34:                                               ; preds = %32, %27
  %35 = extractelement <8 x i1> %30, i64 1
  br i1 %35, label %36, label %39

36:                                               ; preds = %34
  %37 = or i64 %28, 1
  %38 = getelementptr inbounds i16, ptr %26, i64 %37
  store i16 %23, ptr %38, align 2, !tbaa !40
  br label %39

39:                                               ; preds = %36, %34
  %40 = extractelement <8 x i1> %30, i64 2
  br i1 %40, label %41, label %44

41:                                               ; preds = %39
  %42 = or i64 %28, 2
  %43 = getelementptr inbounds i16, ptr %26, i64 %42
  store i16 %23, ptr %43, align 2, !tbaa !40
  br label %44

44:                                               ; preds = %41, %39
  %45 = extractelement <8 x i1> %30, i64 3
  br i1 %45, label %46, label %49

46:                                               ; preds = %44
  %47 = or i64 %28, 3
  %48 = getelementptr inbounds i16, ptr %26, i64 %47
  store i16 %23, ptr %48, align 2, !tbaa !40
  br label %49

49:                                               ; preds = %46, %44
  %50 = extractelement <8 x i1> %30, i64 4
  br i1 %50, label %51, label %54

51:                                               ; preds = %49
  %52 = or i64 %28, 4
  %53 = getelementptr inbounds i16, ptr %26, i64 %52
  store i16 %23, ptr %53, align 2, !tbaa !40
  br label %54

54:                                               ; preds = %51, %49
  %55 = extractelement <8 x i1> %30, i64 5
  br i1 %55, label %56, label %59

56:                                               ; preds = %54
  %57 = or i64 %28, 5
  %58 = getelementptr inbounds i16, ptr %26, i64 %57
  store i16 %23, ptr %58, align 2, !tbaa !40
  br label %59

59:                                               ; preds = %56, %54
  %60 = extractelement <8 x i1> %30, i64 6
  br i1 %60, label %61, label %64

61:                                               ; preds = %59
  %62 = or i64 %28, 6
  %63 = getelementptr inbounds i16, ptr %26, i64 %62
  store i16 %23, ptr %63, align 2, !tbaa !40
  br label %64

64:                                               ; preds = %61, %59
  %65 = extractelement <8 x i1> %30, i64 7
  br i1 %65, label %66, label %69

66:                                               ; preds = %64
  %67 = or i64 %28, 7
  %68 = getelementptr inbounds i16, ptr %26, i64 %67
  store i16 %23, ptr %68, align 2, !tbaa !40
  br label %69

69:                                               ; preds = %66, %64
  %70 = add i64 %28, 8
  %71 = add <8 x i64> %29, <i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8>
  %72 = icmp eq i64 %70, %15
  br i1 %72, label %91, label %27, !llvm.loop !1086

73:                                               ; preds = %91, %1
  %74 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 22
  %75 = load i32, ptr %74, align 4, !tbaa !312
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %226

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 21
  %79 = load i32, ptr %78, align 8, !tbaa !311
  %80 = icmp sgt i32 %79, 0
  %81 = load ptr, ptr @img, align 8
  %82 = getelementptr inbounds %struct.img_par, ptr %81, i64 0, i32 106
  %83 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 33
  %84 = zext i32 %75 to i64
  %85 = zext i32 %79 to i64
  %86 = add nuw nsw i64 %85, 7
  %87 = and i64 %86, 8589934584
  %88 = add nsw i64 %85, -1
  %89 = insertelement <8 x i64> poison, i64 %88, i64 0
  %90 = shufflevector <8 x i64> %89, <8 x i64> poison, <8 x i32> zeroinitializer
  br label %94

91:                                               ; preds = %69, %19
  %92 = add nuw nsw i64 %20, 1
  %93 = icmp eq i64 %92, %12
  br i1 %93, label %73, label %19, !llvm.loop !1087

94:                                               ; preds = %164, %77
  %95 = phi i64 [ 0, %77 ], [ %165, %164 ]
  br i1 %80, label %96, label %164

96:                                               ; preds = %94
  %97 = load i32, ptr %82, align 8, !tbaa !94
  %98 = trunc i32 %97 to i16
  %99 = load ptr, ptr %83, align 8, !tbaa !82
  %100 = load ptr, ptr %99, align 8, !tbaa !13
  %101 = getelementptr inbounds ptr, ptr %100, i64 %95
  %102 = load ptr, ptr %101, align 8, !tbaa !13
  br label %103

103:                                              ; preds = %145, %96
  %104 = phi i64 [ 0, %96 ], [ %146, %145 ]
  %105 = phi <8 x i64> [ <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7>, %96 ], [ %147, %145 ]
  %106 = icmp ule <8 x i64> %105, %90
  %107 = extractelement <8 x i1> %106, i64 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %103
  %109 = getelementptr inbounds i16, ptr %102, i64 %104
  store i16 %98, ptr %109, align 2, !tbaa !40
  br label %110

110:                                              ; preds = %108, %103
  %111 = extractelement <8 x i1> %106, i64 1
  br i1 %111, label %112, label %115

112:                                              ; preds = %110
  %113 = or i64 %104, 1
  %114 = getelementptr inbounds i16, ptr %102, i64 %113
  store i16 %98, ptr %114, align 2, !tbaa !40
  br label %115

115:                                              ; preds = %112, %110
  %116 = extractelement <8 x i1> %106, i64 2
  br i1 %116, label %117, label %120

117:                                              ; preds = %115
  %118 = or i64 %104, 2
  %119 = getelementptr inbounds i16, ptr %102, i64 %118
  store i16 %98, ptr %119, align 2, !tbaa !40
  br label %120

120:                                              ; preds = %117, %115
  %121 = extractelement <8 x i1> %106, i64 3
  br i1 %121, label %122, label %125

122:                                              ; preds = %120
  %123 = or i64 %104, 3
  %124 = getelementptr inbounds i16, ptr %102, i64 %123
  store i16 %98, ptr %124, align 2, !tbaa !40
  br label %125

125:                                              ; preds = %122, %120
  %126 = extractelement <8 x i1> %106, i64 4
  br i1 %126, label %127, label %130

127:                                              ; preds = %125
  %128 = or i64 %104, 4
  %129 = getelementptr inbounds i16, ptr %102, i64 %128
  store i16 %98, ptr %129, align 2, !tbaa !40
  br label %130

130:                                              ; preds = %127, %125
  %131 = extractelement <8 x i1> %106, i64 5
  br i1 %131, label %132, label %135

132:                                              ; preds = %130
  %133 = or i64 %104, 5
  %134 = getelementptr inbounds i16, ptr %102, i64 %133
  store i16 %98, ptr %134, align 2, !tbaa !40
  br label %135

135:                                              ; preds = %132, %130
  %136 = extractelement <8 x i1> %106, i64 6
  br i1 %136, label %137, label %140

137:                                              ; preds = %135
  %138 = or i64 %104, 6
  %139 = getelementptr inbounds i16, ptr %102, i64 %138
  store i16 %98, ptr %139, align 2, !tbaa !40
  br label %140

140:                                              ; preds = %137, %135
  %141 = extractelement <8 x i1> %106, i64 7
  br i1 %141, label %142, label %145

142:                                              ; preds = %140
  %143 = or i64 %104, 7
  %144 = getelementptr inbounds i16, ptr %102, i64 %143
  store i16 %98, ptr %144, align 2, !tbaa !40
  br label %145

145:                                              ; preds = %142, %140
  %146 = add i64 %104, 8
  %147 = add <8 x i64> %105, <i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8>
  %148 = icmp eq i64 %146, %87
  br i1 %148, label %164, label %103, !llvm.loop !1088

149:                                              ; preds = %164
  br i1 %76, label %150, label %226

150:                                              ; preds = %149
  %151 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 21
  %152 = load i32, ptr %151, align 8, !tbaa !311
  %153 = icmp sgt i32 %152, 0
  %154 = load ptr, ptr @img, align 8
  %155 = getelementptr inbounds %struct.img_par, ptr %154, i64 0, i32 106
  %156 = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 33
  %157 = zext i32 %75 to i64
  %158 = zext i32 %152 to i64
  %159 = add nuw nsw i64 %158, 7
  %160 = and i64 %159, 8589934584
  %161 = add nsw i64 %158, -1
  %162 = insertelement <8 x i64> poison, i64 %161, i64 0
  %163 = shufflevector <8 x i64> %162, <8 x i64> poison, <8 x i32> zeroinitializer
  br label %167

164:                                              ; preds = %145, %94
  %165 = add nuw nsw i64 %95, 1
  %166 = icmp eq i64 %165, %84
  br i1 %166, label %149, label %94, !llvm.loop !1089

167:                                              ; preds = %223, %150
  %168 = phi i64 [ 0, %150 ], [ %224, %223 ]
  br i1 %153, label %169, label %223

169:                                              ; preds = %167
  %170 = load i32, ptr %155, align 8, !tbaa !94
  %171 = trunc i32 %170 to i16
  %172 = load ptr, ptr %156, align 8, !tbaa !82
  %173 = getelementptr inbounds ptr, ptr %172, i64 1
  %174 = load ptr, ptr %173, align 8, !tbaa !13
  %175 = getelementptr inbounds ptr, ptr %174, i64 %168
  %176 = load ptr, ptr %175, align 8, !tbaa !13
  br label %177

177:                                              ; preds = %219, %169
  %178 = phi i64 [ 0, %169 ], [ %220, %219 ]
  %179 = phi <8 x i64> [ <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7>, %169 ], [ %221, %219 ]
  %180 = icmp ule <8 x i64> %179, %163
  %181 = extractelement <8 x i1> %180, i64 0
  br i1 %181, label %182, label %184

182:                                              ; preds = %177
  %183 = getelementptr inbounds i16, ptr %176, i64 %178
  store i16 %171, ptr %183, align 2, !tbaa !40
  br label %184

184:                                              ; preds = %182, %177
  %185 = extractelement <8 x i1> %180, i64 1
  br i1 %185, label %186, label %189

186:                                              ; preds = %184
  %187 = or i64 %178, 1
  %188 = getelementptr inbounds i16, ptr %176, i64 %187
  store i16 %171, ptr %188, align 2, !tbaa !40
  br label %189

189:                                              ; preds = %186, %184
  %190 = extractelement <8 x i1> %180, i64 2
  br i1 %190, label %191, label %194

191:                                              ; preds = %189
  %192 = or i64 %178, 2
  %193 = getelementptr inbounds i16, ptr %176, i64 %192
  store i16 %171, ptr %193, align 2, !tbaa !40
  br label %194

194:                                              ; preds = %191, %189
  %195 = extractelement <8 x i1> %180, i64 3
  br i1 %195, label %196, label %199

196:                                              ; preds = %194
  %197 = or i64 %178, 3
  %198 = getelementptr inbounds i16, ptr %176, i64 %197
  store i16 %171, ptr %198, align 2, !tbaa !40
  br label %199

199:                                              ; preds = %196, %194
  %200 = extractelement <8 x i1> %180, i64 4
  br i1 %200, label %201, label %204

201:                                              ; preds = %199
  %202 = or i64 %178, 4
  %203 = getelementptr inbounds i16, ptr %176, i64 %202
  store i16 %171, ptr %203, align 2, !tbaa !40
  br label %204

204:                                              ; preds = %201, %199
  %205 = extractelement <8 x i1> %180, i64 5
  br i1 %205, label %206, label %209

206:                                              ; preds = %204
  %207 = or i64 %178, 5
  %208 = getelementptr inbounds i16, ptr %176, i64 %207
  store i16 %171, ptr %208, align 2, !tbaa !40
  br label %209

209:                                              ; preds = %206, %204
  %210 = extractelement <8 x i1> %180, i64 6
  br i1 %210, label %211, label %214

211:                                              ; preds = %209
  %212 = or i64 %178, 6
  %213 = getelementptr inbounds i16, ptr %176, i64 %212
  store i16 %171, ptr %213, align 2, !tbaa !40
  br label %214

214:                                              ; preds = %211, %209
  %215 = extractelement <8 x i1> %180, i64 7
  br i1 %215, label %216, label %219

216:                                              ; preds = %214
  %217 = or i64 %178, 7
  %218 = getelementptr inbounds i16, ptr %176, i64 %217
  store i16 %171, ptr %218, align 2, !tbaa !40
  br label %219

219:                                              ; preds = %216, %214
  %220 = add i64 %178, 8
  %221 = add <8 x i64> %179, <i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8>
  %222 = icmp eq i64 %220, %160
  br i1 %222, label %223, label %177, !llvm.loop !1090

223:                                              ; preds = %219, %167
  %224 = add nuw nsw i64 %168, 1
  %225 = icmp eq i64 %224, %157
  br i1 %225, label %226, label %167, !llvm.loop !1091

226:                                              ; preds = %223, %149, %73
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @write_unpaired_field(ptr noundef %0, i32 noundef %1) #0 {
  %3 = load i32, ptr %0, align 8, !tbaa !353
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  %8 = load ptr, ptr %7, align 8, !tbaa !928
  %9 = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 19
  %10 = load i32, ptr %9, align 8, !tbaa !566
  %11 = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 20
  %12 = load i32, ptr %11, align 4, !tbaa !568
  %13 = shl nsw i32 %12, 1
  %14 = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 21
  %15 = load i32, ptr %14, align 8, !tbaa !311
  %16 = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 22
  %17 = load i32, ptr %16, align 4, !tbaa !312
  %18 = shl nsw i32 %17, 1
  %19 = tail call ptr @alloc_storable_picture(i32 noundef 2, i32 noundef %10, i32 noundef %13, i32 noundef %15, i32 noundef %18) #46
  %20 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  store ptr %19, ptr %20, align 8, !tbaa !929
  %21 = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 50
  %22 = load i32, ptr %21, align 4, !tbaa !83
  %23 = getelementptr inbounds %struct.storable_picture, ptr %19, i64 0, i32 50
  store i32 %22, ptr %23, align 4, !tbaa !83
  tail call void @clear_picture(ptr noundef %19) #47
  tail call void @dpb_combine_field_yuv(ptr noundef nonnull %0) #46
  %24 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  %25 = load ptr, ptr %24, align 8, !tbaa !355
  tail call void @write_out_picture(ptr noundef %25, i32 noundef %1) #47
  %26 = load i32, ptr %0, align 8, !tbaa !353
  br label %27

27:                                               ; preds = %6, %2
  %28 = phi i32 [ %26, %6 ], [ %3, %2 ]
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %62, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 14
  %33 = load ptr, ptr %32, align 8, !tbaa !929
  %34 = getelementptr inbounds %struct.storable_picture, ptr %33, i64 0, i32 19
  %35 = load i32, ptr %34, align 8, !tbaa !566
  %36 = getelementptr inbounds %struct.storable_picture, ptr %33, i64 0, i32 20
  %37 = load i32, ptr %36, align 4, !tbaa !568
  %38 = shl nsw i32 %37, 1
  %39 = getelementptr inbounds %struct.storable_picture, ptr %33, i64 0, i32 21
  %40 = load i32, ptr %39, align 8, !tbaa !311
  %41 = getelementptr inbounds %struct.storable_picture, ptr %33, i64 0, i32 22
  %42 = load i32, ptr %41, align 4, !tbaa !312
  %43 = shl nsw i32 %42, 1
  %44 = tail call ptr @alloc_storable_picture(i32 noundef 1, i32 noundef %35, i32 noundef %38, i32 noundef %40, i32 noundef %43) #46
  %45 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 13
  store ptr %44, ptr %45, align 8, !tbaa !928
  %46 = getelementptr inbounds %struct.storable_picture, ptr %33, i64 0, i32 50
  %47 = load i32, ptr %46, align 4, !tbaa !83
  %48 = getelementptr inbounds %struct.storable_picture, ptr %44, i64 0, i32 50
  store i32 %47, ptr %48, align 4, !tbaa !83
  tail call void @clear_picture(ptr noundef %44) #47
  %49 = load ptr, ptr %32, align 8, !tbaa !929
  %50 = getelementptr inbounds %struct.storable_picture, ptr %49, i64 0, i32 52
  %51 = load i32, ptr %50, align 4, !tbaa !627
  %52 = load ptr, ptr %45, align 8, !tbaa !928
  %53 = getelementptr inbounds %struct.storable_picture, ptr %52, i64 0, i32 52
  store i32 %51, ptr %53, align 4, !tbaa !627
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %31
  %56 = getelementptr inbounds %struct.storable_picture, ptr %49, i64 0, i32 53
  %57 = getelementptr inbounds %struct.storable_picture, ptr %52, i64 0, i32 53
  %58 = load <4 x i32>, ptr %56, align 8, !tbaa !18
  store <4 x i32> %58, ptr %57, align 8, !tbaa !18
  br label %59

59:                                               ; preds = %55, %31
  tail call void @dpb_combine_field_yuv(ptr noundef nonnull %0) #46
  %60 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  %61 = load ptr, ptr %60, align 8, !tbaa !355
  tail call void @write_out_picture(ptr noundef %61, i32 noundef %1) #47
  br label %62

62:                                               ; preds = %59, %27
  store i32 3, ptr %0, align 8, !tbaa !353
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @flush_direct_output(i32 noundef %0) #0 {
  %2 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  tail call void @write_unpaired_field(ptr noundef %2, i32 noundef %0) #47
  %3 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.frame_store, ptr %3, i64 0, i32 12
  %5 = load ptr, ptr %4, align 8, !tbaa !355
  tail call void @free_storable_picture(ptr noundef %5) #46
  %6 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.frame_store, ptr %6, i64 0, i32 12
  store ptr null, ptr %7, align 8, !tbaa !355
  %8 = getelementptr inbounds %struct.frame_store, ptr %6, i64 0, i32 13
  %9 = load ptr, ptr %8, align 8, !tbaa !928
  tail call void @free_storable_picture(ptr noundef %9) #46
  %10 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  %11 = getelementptr inbounds %struct.frame_store, ptr %10, i64 0, i32 13
  store ptr null, ptr %11, align 8, !tbaa !928
  %12 = getelementptr inbounds %struct.frame_store, ptr %10, i64 0, i32 14
  %13 = load ptr, ptr %12, align 8, !tbaa !929
  tail call void @free_storable_picture(ptr noundef %13) #46
  %14 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  %15 = getelementptr inbounds %struct.frame_store, ptr %14, i64 0, i32 14
  store ptr null, ptr %15, align 8, !tbaa !929
  store i32 0, ptr %14, align 8, !tbaa !353
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @write_stored_frame(ptr noundef %0, i32 noundef %1) #0 {
  tail call void @flush_direct_output(i32 noundef %1) #47
  %3 = load i32, ptr %0, align 8, !tbaa !353
  %4 = icmp slt i32 %3, 3
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @write_unpaired_field(ptr noundef nonnull %0, i32 noundef %1) #47
  br label %20

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 6
  %8 = load i32, ptr %7, align 8, !tbaa !1092
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 1, ptr @recovery_flag, align 4, !tbaa !18
  br label %17

11:                                               ; preds = %6
  %12 = load i32, ptr @recovery_flag, align 4
  %13 = icmp ne i32 %12, 0
  %14 = load i32, ptr @non_conforming_stream, align 4, !tbaa !18
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i1 true, i1 %13
  br i1 %16, label %17, label %20

17:                                               ; preds = %11, %10
  %18 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 12
  %19 = load ptr, ptr %18, align 8, !tbaa !355
  tail call void @write_out_picture(ptr noundef %19, i32 noundef %1) #47
  br label %20

20:                                               ; preds = %17, %11, %5
  %21 = getelementptr inbounds %struct.frame_store, ptr %0, i64 0, i32 9
  store i32 1, ptr %21, align 4, !tbaa !411
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @direct_output(ptr noundef %0, i32 noundef %1) #0 {
  %3 = load i32, ptr %0, align 8, !tbaa !570
  switch i32 %3, label %4 [
    i32 0, label %6
    i32 1, label %17
  ]

4:                                                ; preds = %2
  %5 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  br label %32

6:                                                ; preds = %2
  tail call void @flush_direct_output(i32 noundef %1) #47
  tail call void @write_out_picture(ptr noundef nonnull %0, i32 noundef %1) #47
  %7 = load i32, ptr @p_ref, align 4, !tbaa !18
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %16, label %9

9:                                                ; preds = %6
  %10 = load ptr, ptr @input, align 8, !tbaa !13
  %11 = getelementptr inbounds %struct.inp_par, ptr %10, i64 0, i32 7
  %12 = load i32, ptr %11, align 4, !tbaa !573
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  %15 = load ptr, ptr @snr, align 8, !tbaa !13
  tail call void @find_snr(ptr noundef %15, ptr noundef nonnull %0, i32 noundef %7) #46
  br label %16

16:                                               ; preds = %14, %9, %6
  tail call void @free_storable_picture(ptr noundef nonnull %0) #46
  br label %82

17:                                               ; preds = %2
  %18 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  %19 = load i32, ptr %18, align 8, !tbaa !353
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %17
  tail call void @flush_direct_output(i32 noundef %1) #47
  %23 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  %24 = load i32, ptr %23, align 8, !tbaa !353
  %25 = load i32, ptr %0, align 8, !tbaa !570
  br label %26

26:                                               ; preds = %22, %17
  %27 = phi i32 [ %25, %22 ], [ 1, %17 ]
  %28 = phi i32 [ %24, %22 ], [ %19, %17 ]
  %29 = phi ptr [ %23, %22 ], [ %18, %17 ]
  %30 = getelementptr inbounds %struct.frame_store, ptr %29, i64 0, i32 13
  store ptr %0, ptr %30, align 8, !tbaa !928
  %31 = or i32 %28, 1
  store i32 %31, ptr %29, align 8, !tbaa !353
  br label %32

32:                                               ; preds = %26, %4
  %33 = phi ptr [ %5, %4 ], [ %29, %26 ]
  %34 = phi i32 [ %3, %4 ], [ %27, %26 ]
  %35 = icmp eq i32 %34, 2
  %36 = load i32, ptr %33, align 8, !tbaa !353
  br i1 %35, label %37, label %48

37:                                               ; preds = %32
  %38 = and i32 %36, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  tail call void @flush_direct_output(i32 noundef %1) #47
  %41 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  %42 = load i32, ptr %41, align 8, !tbaa !353
  br label %43

43:                                               ; preds = %40, %37
  %44 = phi i32 [ %42, %40 ], [ %36, %37 ]
  %45 = phi ptr [ %41, %40 ], [ %33, %37 ]
  %46 = getelementptr inbounds %struct.frame_store, ptr %45, i64 0, i32 14
  store ptr %0, ptr %46, align 8, !tbaa !929
  %47 = or i32 %44, 2
  store i32 %47, ptr %45, align 8, !tbaa !353
  br label %48

48:                                               ; preds = %43, %32
  %49 = phi i32 [ %47, %43 ], [ %36, %32 ]
  %50 = phi ptr [ %45, %43 ], [ %33, %32 ]
  %51 = icmp eq i32 %49, 3
  br i1 %51, label %52, label %82

52:                                               ; preds = %48
  tail call void @dpb_combine_field_yuv(ptr noundef nonnull %50) #46
  %53 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  %54 = getelementptr inbounds %struct.frame_store, ptr %53, i64 0, i32 12
  %55 = load ptr, ptr %54, align 8, !tbaa !355
  tail call void @write_out_picture(ptr noundef %55, i32 noundef %1) #47
  %56 = load i32, ptr @p_ref, align 4, !tbaa !18
  %57 = icmp eq i32 %56, -1
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  %59 = load ptr, ptr @input, align 8, !tbaa !13
  %60 = getelementptr inbounds %struct.inp_par, ptr %59, i64 0, i32 7
  %61 = load i32, ptr %60, align 4, !tbaa !573
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %68

63:                                               ; preds = %58
  %64 = load ptr, ptr @snr, align 8, !tbaa !13
  %65 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  %66 = getelementptr inbounds %struct.frame_store, ptr %65, i64 0, i32 12
  %67 = load ptr, ptr %66, align 8, !tbaa !355
  tail call void @find_snr(ptr noundef %64, ptr noundef %67, i32 noundef %56) #46
  br label %68

68:                                               ; preds = %63, %58, %52
  %69 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  %70 = getelementptr inbounds %struct.frame_store, ptr %69, i64 0, i32 12
  %71 = load ptr, ptr %70, align 8, !tbaa !355
  tail call void @free_storable_picture(ptr noundef %71) #46
  %72 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  %73 = getelementptr inbounds %struct.frame_store, ptr %72, i64 0, i32 12
  store ptr null, ptr %73, align 8, !tbaa !355
  %74 = getelementptr inbounds %struct.frame_store, ptr %72, i64 0, i32 13
  %75 = load ptr, ptr %74, align 8, !tbaa !928
  tail call void @free_storable_picture(ptr noundef %75) #46
  %76 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  %77 = getelementptr inbounds %struct.frame_store, ptr %76, i64 0, i32 13
  store ptr null, ptr %77, align 8, !tbaa !928
  %78 = getelementptr inbounds %struct.frame_store, ptr %76, i64 0, i32 14
  %79 = load ptr, ptr %78, align 8, !tbaa !929
  tail call void @free_storable_picture(ptr noundef %79) #46
  %80 = load ptr, ptr @out_buffer, align 8, !tbaa !13
  %81 = getelementptr inbounds %struct.frame_store, ptr %80, i64 0, i32 14
  store ptr null, ptr %81, align 8, !tbaa !929
  store i32 0, ptr %80, align 8, !tbaa !353
  br label %82

82:                                               ; preds = %68, %48, %16
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @Scaling_List(ptr nocapture noundef writeonly %0, i32 noundef %1, ptr nocapture noundef writeonly %2, ptr noundef %3) #0 {
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %36

6:                                                ; preds = %4
  %7 = icmp eq i32 %1, 16
  %8 = zext i32 %1 to i64
  br label %9

9:                                                ; preds = %29, %6
  %10 = phi i64 [ 0, %6 ], [ %34, %29 ]
  %11 = phi i32 [ 8, %6 ], [ %30, %29 ]
  %12 = phi i32 [ 8, %6 ], [ %31, %29 ]
  %13 = getelementptr inbounds [16 x i8], ptr @ZZ_SCAN, i64 0, i64 %10
  %14 = getelementptr inbounds [64 x i8], ptr @ZZ_SCAN8, i64 0, i64 %10
  %15 = select i1 %7, ptr %13, ptr %14
  %16 = load i8, ptr %15, align 1, !tbaa !14
  %17 = icmp eq i32 %11, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %9
  %19 = tail call i32 @se_v(ptr noundef nonnull @.str.355, ptr noundef %3) #46
  %20 = add nsw i32 %19, %12
  %21 = freeze i32 %20
  %22 = add i32 %21, 256
  %23 = srem i32 %22, 256
  %24 = icmp eq i8 %16, 0
  %25 = icmp eq i32 %23, 0
  %26 = and i1 %24, %25
  %27 = zext i1 %26 to i32
  store i32 %27, ptr %2, align 4, !tbaa !14
  br i1 %25, label %28, label %29

28:                                               ; preds = %18, %9
  br label %29

29:                                               ; preds = %28, %18
  %30 = phi i32 [ 0, %28 ], [ %23, %18 ]
  %31 = phi i32 [ %12, %28 ], [ %23, %18 ]
  %32 = zext i8 %16 to i64
  %33 = getelementptr inbounds i32, ptr %0, i64 %32
  store i32 %31, ptr %33, align 4, !tbaa !18
  %34 = add nuw nsw i64 %10, 1
  %35 = icmp eq i64 %34, %8
  br i1 %35, label %36, label %9, !llvm.loop !1093

36:                                               ; preds = %29, %4
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @InterpretSPS(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) #0 {
  %3 = load ptr, ptr %0, align 8, !tbaa !448
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %4 = tail call i32 @u_v(i32 noundef 8, ptr noundef nonnull @.str.1.356, ptr noundef %3) #46
  %5 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 1
  store i32 %4, ptr %5, align 4, !tbaa !908
  switch i32 %4, label %121 [
    i32 66, label %6
    i32 77, label %6
    i32 88, label %6
    i32 100, label %6
    i32 110, label %6
    i32 122, label %6
    i32 144, label %6
  ]

6:                                                ; preds = %2, %2, %2, %2, %2, %2, %2
  %7 = tail call i32 @u_1(ptr noundef nonnull @.str.2.357, ptr noundef %3) #46
  %8 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 2
  store i32 %7, ptr %8, align 4, !tbaa !1094
  %9 = tail call i32 @u_1(ptr noundef nonnull @.str.3.358, ptr noundef %3) #46
  %10 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 3
  store i32 %9, ptr %10, align 4, !tbaa !1095
  %11 = tail call i32 @u_1(ptr noundef nonnull @.str.4.359, ptr noundef %3) #46
  %12 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 4
  store i32 %11, ptr %12, align 4, !tbaa !1096
  %13 = tail call i32 @u_1(ptr noundef nonnull @.str.5.360, ptr noundef %3) #46
  %14 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 5
  store i32 %13, ptr %14, align 4, !tbaa !909
  %15 = tail call i32 @u_v(i32 noundef 4, ptr noundef nonnull @.str.6.361, ptr noundef %3) #46
  %16 = tail call i32 @u_v(i32 noundef 8, ptr noundef nonnull @.str.7.362, ptr noundef %3) #46
  %17 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 6
  store i32 %16, ptr %17, align 4, !tbaa !907
  %18 = tail call i32 @ue_v(ptr noundef nonnull @.str.8.363, ptr noundef %3) #46
  %19 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 7
  store i32 %18, ptr %19, align 4, !tbaa !1097
  %20 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 8
  store i32 1, ptr %20, align 4, !tbaa !480
  %21 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 15
  store i32 0, ptr %21, align 4, !tbaa !1098
  %22 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 16
  store i32 0, ptr %22, align 4, !tbaa !1099
  %23 = load ptr, ptr @img, align 8, !tbaa !13
  %24 = getelementptr inbounds %struct.img_par, ptr %23, i64 0, i32 112
  store i32 0, ptr %24, align 8, !tbaa !118
  %25 = load i32, ptr %5, align 4, !tbaa !908
  switch i32 %25, label %60 [
    i32 100, label %26
    i32 110, label %26
    i32 122, label %26
    i32 144, label %26
  ]

26:                                               ; preds = %6, %6, %6, %6
  %27 = tail call i32 @ue_v(ptr noundef nonnull @.str.9.364, ptr noundef %3) #46
  store i32 %27, ptr %20, align 4, !tbaa !480
  %28 = icmp eq i32 %27, 3
  br i1 %28, label %29, label %33

29:                                               ; preds = %26
  %30 = tail call i32 @u_1(ptr noundef nonnull @.str.10.365, ptr noundef %3) #46
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @error(ptr noundef nonnull @.str.11.366, i32 noundef 1000) #46
  br label %33

33:                                               ; preds = %32, %29, %26
  %34 = tail call i32 @ue_v(ptr noundef nonnull @.str.12.367, ptr noundef %3) #46
  store i32 %34, ptr %21, align 4, !tbaa !1098
  %35 = tail call i32 @ue_v(ptr noundef nonnull @.str.13.368, ptr noundef %3) #46
  store i32 %35, ptr %22, align 4, !tbaa !1099
  %36 = tail call i32 @u_1(ptr noundef nonnull @.str.14.369, ptr noundef %3) #46
  %37 = load ptr, ptr @img, align 8, !tbaa !13
  %38 = getelementptr inbounds %struct.img_par, ptr %37, i64 0, i32 112
  store i32 %36, ptr %38, align 8, !tbaa !118
  %39 = tail call i32 @u_1(ptr noundef nonnull @.str.15.370, ptr noundef %3) #46
  %40 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 9
  store i32 %39, ptr %40, align 4, !tbaa !123
  %41 = icmp eq i32 %39, 0
  br i1 %41, label %60, label %42

42:                                               ; preds = %57, %33
  %43 = phi i64 [ %58, %57 ], [ 0, %33 ]
  %44 = tail call i32 @u_1(ptr noundef nonnull @.str.16.371, ptr noundef %3) #46
  %45 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 10, i64 %43
  store i32 %44, ptr %45, align 4, !tbaa !18
  %46 = icmp eq i32 %44, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %42
  %48 = icmp ult i64 %43, 6
  br i1 %48, label %49, label %52

49:                                               ; preds = %47
  %50 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 11, i64 %43
  %51 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 13, i64 %43
  tail call void @Scaling_List(ptr noundef nonnull %50, i32 noundef 16, ptr noundef nonnull %51, ptr noundef %3) #47
  br label %57

52:                                               ; preds = %47
  %53 = add nuw i64 %43, 4294967290
  %54 = and i64 %53, 4294967295
  %55 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 12, i64 %54
  %56 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 14, i64 %54
  tail call void @Scaling_List(ptr noundef nonnull %55, i32 noundef 64, ptr noundef nonnull %56, ptr noundef %3) #47
  br label %57

57:                                               ; preds = %52, %49, %42
  %58 = add nuw nsw i64 %43, 1
  %59 = icmp eq i64 %58, 8
  br i1 %59, label %60, label %42, !llvm.loop !1100

60:                                               ; preds = %57, %33, %6
  %61 = tail call i32 @ue_v(ptr noundef nonnull @.str.17.372, ptr noundef %3) #46
  %62 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 17
  store i32 %61, ptr %62, align 4, !tbaa !382
  %63 = tail call i32 @ue_v(ptr noundef nonnull @.str.18.373, ptr noundef %3) #46
  %64 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 18
  store i32 %63, ptr %64, align 4, !tbaa !457
  switch i32 %63, label %86 [
    i32 0, label %65
    i32 1, label %68
  ]

65:                                               ; preds = %60
  %66 = tail call i32 @ue_v(ptr noundef nonnull @.str.19.374, ptr noundef %3) #46
  %67 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 19
  store i32 %66, ptr %67, align 4, !tbaa !458
  br label %86

68:                                               ; preds = %60
  %69 = tail call i32 @u_1(ptr noundef nonnull @.str.20.375, ptr noundef %3) #46
  %70 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 20
  store i32 %69, ptr %70, align 4, !tbaa !462
  %71 = tail call i32 @se_v(ptr noundef nonnull @.str.21.376, ptr noundef %3) #46
  %72 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 21
  store i32 %71, ptr %72, align 4, !tbaa !536
  %73 = tail call i32 @se_v(ptr noundef nonnull @.str.22.377, ptr noundef %3) #46
  %74 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 22
  store i32 %73, ptr %74, align 4, !tbaa !537
  %75 = tail call i32 @ue_v(ptr noundef nonnull @.str.23.378, ptr noundef %3) #46
  %76 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 23
  store i32 %75, ptr %76, align 4, !tbaa !528
  %77 = icmp eq i32 %75, 0
  br i1 %77, label %86, label %78

78:                                               ; preds = %78, %68
  %79 = phi i64 [ %82, %78 ], [ 0, %68 ]
  %80 = tail call i32 @se_v(ptr noundef nonnull @.str.24.379, ptr noundef %3) #46
  %81 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 24, i64 %79
  store i32 %80, ptr %81, align 4, !tbaa !18
  %82 = add nuw nsw i64 %79, 1
  %83 = load i32, ptr %76, align 4, !tbaa !528
  %84 = zext i32 %83 to i64
  %85 = icmp ult i64 %82, %84
  br i1 %85, label %78, label %86, !llvm.loop !1101

86:                                               ; preds = %78, %68, %65, %60
  %87 = tail call i32 @ue_v(ptr noundef nonnull @.str.25.380, ptr noundef %3) #46
  %88 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 25
  store i32 %87, ptr %88, align 4, !tbaa !396
  %89 = tail call i32 @u_1(ptr noundef nonnull @.str.26.381, ptr noundef %3) #46
  %90 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 26
  store i32 %89, ptr %90, align 4, !tbaa !612
  %91 = tail call i32 @ue_v(ptr noundef nonnull @.str.27.382, ptr noundef %3) #46
  %92 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 27
  store i32 %91, ptr %92, align 4, !tbaa !415
  %93 = tail call i32 @ue_v(ptr noundef nonnull @.str.28.383, ptr noundef %3) #46
  %94 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 28
  store i32 %93, ptr %94, align 4, !tbaa !414
  %95 = tail call i32 @u_1(ptr noundef nonnull @.str.29.384, ptr noundef %3) #46
  %96 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 29
  store i32 %95, ptr %96, align 4, !tbaa !440
  %97 = icmp eq i32 %95, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %86
  %99 = tail call i32 @u_1(ptr noundef nonnull @.str.30.385, ptr noundef %3) #46
  %100 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 30
  store i32 %99, ptr %100, align 4, !tbaa !443
  br label %101

101:                                              ; preds = %98, %86
  %102 = tail call i32 @u_1(ptr noundef nonnull @.str.31.386, ptr noundef %3) #46
  %103 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 31
  store i32 %102, ptr %103, align 4, !tbaa !739
  %104 = tail call i32 @u_1(ptr noundef nonnull @.str.32.387, ptr noundef %3) #46
  %105 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 32
  store i32 %104, ptr %105, align 4, !tbaa !626
  %106 = icmp eq i32 %104, 0
  br i1 %106, label %116, label %107

107:                                              ; preds = %101
  %108 = tail call i32 @ue_v(ptr noundef nonnull @.str.33.388, ptr noundef %3) #46
  %109 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 33
  store i32 %108, ptr %109, align 4, !tbaa !1102
  %110 = tail call i32 @ue_v(ptr noundef nonnull @.str.34.389, ptr noundef %3) #46
  %111 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 34
  store i32 %110, ptr %111, align 4, !tbaa !1103
  %112 = tail call i32 @ue_v(ptr noundef nonnull @.str.35.390, ptr noundef %3) #46
  %113 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 35
  store i32 %112, ptr %113, align 4, !tbaa !1104
  %114 = tail call i32 @ue_v(ptr noundef nonnull @.str.36.391, ptr noundef %3) #46
  %115 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 36
  store i32 %114, ptr %115, align 4, !tbaa !1105
  br label %116

116:                                              ; preds = %107, %101
  %117 = tail call i32 @u_1(ptr noundef nonnull @.str.37.392, ptr noundef %3) #46
  %118 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 37
  store i32 %117, ptr %118, align 4, !tbaa !910
  %119 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 12
  store i32 2, ptr %119, align 4, !tbaa !642
  %120 = tail call i32 @ReadVUI(ptr noundef nonnull %0, ptr noundef nonnull %1) #47
  store i32 1, ptr %1, align 4, !tbaa !1106
  br label %121

121:                                              ; preds = %116, %2
  %122 = load i32, ptr @UsedBits, align 4, !tbaa !18
  ret i32 %122
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @ReadVUI(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) #0 {
  %3 = load ptr, ptr %0, align 8, !tbaa !448
  %4 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 37
  %5 = load i32, ptr %4, align 4, !tbaa !910
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %110, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @u_1(ptr noundef nonnull @.str.38.393, ptr noundef %3) #46
  %9 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38
  store i32 %8, ptr %9, align 4, !tbaa !1107
  %10 = icmp eq i32 %8, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %7
  %12 = tail call i32 @u_v(i32 noundef 8, ptr noundef nonnull @.str.39.394, ptr noundef %3) #46
  %13 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 1
  store i32 %12, ptr %13, align 4, !tbaa !1108
  %14 = icmp eq i32 %12, 255
  br i1 %14, label %15, label %20

15:                                               ; preds = %11
  %16 = tail call i32 @u_v(i32 noundef 16, ptr noundef nonnull @.str.40.395, ptr noundef %3) #46
  %17 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 2
  store i32 %16, ptr %17, align 4, !tbaa !1109
  %18 = tail call i32 @u_v(i32 noundef 16, ptr noundef nonnull @.str.41.396, ptr noundef %3) #46
  %19 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 3
  store i32 %18, ptr %19, align 4, !tbaa !1110
  br label %20

20:                                               ; preds = %15, %11, %7
  %21 = tail call i32 @u_1(ptr noundef nonnull @.str.42.397, ptr noundef %3) #46
  %22 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 4
  store i32 %21, ptr %22, align 4, !tbaa !1111
  %23 = icmp eq i32 %21, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = tail call i32 @u_1(ptr noundef nonnull @.str.43.398, ptr noundef %3) #46
  %26 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 5
  store i32 %25, ptr %26, align 4, !tbaa !1112
  br label %27

27:                                               ; preds = %24, %20
  %28 = tail call i32 @u_1(ptr noundef nonnull @.str.44.399, ptr noundef %3) #46
  %29 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 6
  store i32 %28, ptr %29, align 4, !tbaa !1113
  %30 = icmp eq i32 %28, 0
  br i1 %30, label %46, label %31

31:                                               ; preds = %27
  %32 = tail call i32 @u_v(i32 noundef 3, ptr noundef nonnull @.str.45.400, ptr noundef %3) #46
  %33 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 7
  store i32 %32, ptr %33, align 4, !tbaa !1114
  %34 = tail call i32 @u_1(ptr noundef nonnull @.str.46, ptr noundef %3) #46
  %35 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 8
  store i32 %34, ptr %35, align 4, !tbaa !1115
  %36 = tail call i32 @u_1(ptr noundef nonnull @.str.47.401, ptr noundef %3) #46
  %37 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 9
  store i32 %36, ptr %37, align 4, !tbaa !1116
  %38 = icmp eq i32 %36, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %31
  %40 = tail call i32 @u_v(i32 noundef 8, ptr noundef nonnull @.str.48.402, ptr noundef %3) #46
  %41 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 10
  store i32 %40, ptr %41, align 4, !tbaa !1117
  %42 = tail call i32 @u_v(i32 noundef 8, ptr noundef nonnull @.str.49.403, ptr noundef %3) #46
  %43 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 11
  store i32 %42, ptr %43, align 4, !tbaa !1118
  %44 = tail call i32 @u_v(i32 noundef 8, ptr noundef nonnull @.str.50.404, ptr noundef %3) #46
  %45 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 12
  store i32 %44, ptr %45, align 4, !tbaa !642
  br label %46

46:                                               ; preds = %39, %31, %27
  %47 = tail call i32 @u_1(ptr noundef nonnull @.str.51.405, ptr noundef %3) #46
  %48 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 13
  store i32 %47, ptr %48, align 4, !tbaa !1119
  %49 = icmp eq i32 %47, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = tail call i32 @ue_v(ptr noundef nonnull @.str.52.406, ptr noundef %3) #46
  %52 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 14
  store i32 %51, ptr %52, align 4, !tbaa !1120
  %53 = tail call i32 @ue_v(ptr noundef nonnull @.str.53.407, ptr noundef %3) #46
  %54 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 15
  store i32 %53, ptr %54, align 4, !tbaa !1121
  br label %55

55:                                               ; preds = %50, %46
  %56 = tail call i32 @u_1(ptr noundef nonnull @.str.54.408, ptr noundef %3) #46
  %57 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 16
  store i32 %56, ptr %57, align 4, !tbaa !1122
  %58 = icmp eq i32 %56, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %55
  %60 = tail call i32 @u_v(i32 noundef 32, ptr noundef nonnull @.str.55.409, ptr noundef %3) #46
  %61 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 17
  store i32 %60, ptr %61, align 4, !tbaa !1123
  %62 = tail call i32 @u_v(i32 noundef 32, ptr noundef nonnull @.str.56.410, ptr noundef %3) #46
  %63 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 18
  store i32 %62, ptr %63, align 4, !tbaa !1124
  %64 = tail call i32 @u_1(ptr noundef nonnull @.str.57.411, ptr noundef %3) #46
  %65 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 19
  store i32 %64, ptr %65, align 4, !tbaa !1125
  br label %66

66:                                               ; preds = %59, %55
  %67 = tail call i32 @u_1(ptr noundef nonnull @.str.58.412, ptr noundef %3) #46
  %68 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 20
  store i32 %67, ptr %68, align 4, !tbaa !1126
  %69 = icmp eq i32 %67, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 21
  %72 = tail call i32 @ReadHRDParameters(ptr noundef nonnull %0, ptr noundef nonnull %71) #47
  br label %73

73:                                               ; preds = %70, %66
  %74 = tail call i32 @u_1(ptr noundef nonnull @.str.59.413, ptr noundef %3) #46
  %75 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 22
  store i32 %74, ptr %75, align 4, !tbaa !1127
  %76 = icmp eq i32 %74, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 23
  %79 = tail call i32 @ReadHRDParameters(ptr noundef nonnull %0, ptr noundef nonnull %78) #47
  br label %80

80:                                               ; preds = %77, %73
  %81 = load i32, ptr %68, align 4, !tbaa !1126
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %80
  %84 = load i32, ptr %75, align 4, !tbaa !1127
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %83, %80
  %87 = tail call i32 @u_1(ptr noundef nonnull @.str.60.414, ptr noundef %3) #46
  %88 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 24
  store i32 %87, ptr %88, align 4, !tbaa !1128
  br label %89

89:                                               ; preds = %86, %83
  %90 = tail call i32 @u_1(ptr noundef nonnull @.str.61.415, ptr noundef %3) #46
  %91 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 25
  store i32 %90, ptr %91, align 4, !tbaa !1129
  %92 = tail call i32 @u_1(ptr noundef nonnull @.str.62.416, ptr noundef %3) #46
  %93 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 26
  store i32 %92, ptr %93, align 4, !tbaa !911
  %94 = icmp eq i32 %92, 0
  br i1 %94, label %110, label %95

95:                                               ; preds = %89
  %96 = tail call i32 @u_1(ptr noundef nonnull @.str.63.417, ptr noundef %3) #46
  %97 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 27
  store i32 %96, ptr %97, align 4, !tbaa !1130
  %98 = tail call i32 @ue_v(ptr noundef nonnull @.str.64.418, ptr noundef %3) #46
  %99 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 28
  store i32 %98, ptr %99, align 4, !tbaa !1131
  %100 = tail call i32 @ue_v(ptr noundef nonnull @.str.65.419, ptr noundef %3) #46
  %101 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 29
  store i32 %100, ptr %101, align 4, !tbaa !1132
  %102 = tail call i32 @ue_v(ptr noundef nonnull @.str.66.420, ptr noundef %3) #46
  %103 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 31
  store i32 %102, ptr %103, align 4, !tbaa !1133
  %104 = tail call i32 @ue_v(ptr noundef nonnull @.str.67.421, ptr noundef %3) #46
  %105 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 30
  store i32 %104, ptr %105, align 4, !tbaa !1134
  %106 = tail call i32 @ue_v(ptr noundef nonnull @.str.68.422, ptr noundef %3) #46
  %107 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 32
  store i32 %106, ptr %107, align 4, !tbaa !1135
  %108 = tail call i32 @ue_v(ptr noundef nonnull @.str.69.423, ptr noundef %3) #46
  %109 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 38, i32 33
  store i32 %108, ptr %109, align 4, !tbaa !912
  br label %110

110:                                              ; preds = %95, %89, %2
  ret i32 0
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @ReadHRDParameters(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) #0 {
  %3 = load ptr, ptr %0, align 8, !tbaa !448
  %4 = tail call i32 @ue_v(ptr noundef nonnull @.str.70.424, ptr noundef %3) #46
  store i32 %4, ptr %1, align 4, !tbaa !1136
  %5 = tail call i32 @u_v(i32 noundef 4, ptr noundef nonnull @.str.71.425, ptr noundef %3) #46
  %6 = getelementptr inbounds %struct.hrd_parameters_t, ptr %1, i64 0, i32 1
  store i32 %5, ptr %6, align 4, !tbaa !1137
  %7 = tail call i32 @u_v(i32 noundef 4, ptr noundef nonnull @.str.72.426, ptr noundef %3) #46
  %8 = getelementptr inbounds %struct.hrd_parameters_t, ptr %1, i64 0, i32 2
  store i32 %7, ptr %8, align 4, !tbaa !1138
  br label %9

9:                                                ; preds = %9, %2
  %10 = phi i32 [ 0, %2 ], [ %18, %9 ]
  %11 = tail call i32 @ue_v(ptr noundef nonnull @.str.73.427, ptr noundef %3) #46
  %12 = zext i32 %10 to i64
  %13 = getelementptr inbounds %struct.hrd_parameters_t, ptr %1, i64 0, i32 3, i64 %12
  store i32 %11, ptr %13, align 4, !tbaa !18
  %14 = tail call i32 @ue_v(ptr noundef nonnull @.str.74.428, ptr noundef %3) #46
  %15 = getelementptr inbounds %struct.hrd_parameters_t, ptr %1, i64 0, i32 4, i64 %12
  store i32 %14, ptr %15, align 4, !tbaa !18
  %16 = tail call i32 @u_1(ptr noundef nonnull @.str.75.429, ptr noundef %3) #46
  %17 = getelementptr inbounds %struct.hrd_parameters_t, ptr %1, i64 0, i32 5, i64 %12
  store i32 %16, ptr %17, align 4, !tbaa !18
  %18 = add i32 %10, 1
  %19 = load i32, ptr %1, align 4, !tbaa !1136
  %20 = icmp ugt i32 %18, %19
  br i1 %20, label %21, label %9, !llvm.loop !1139

21:                                               ; preds = %9
  %22 = tail call i32 @u_v(i32 noundef 5, ptr noundef nonnull @.str.76.430, ptr noundef %3) #46
  %23 = getelementptr inbounds %struct.hrd_parameters_t, ptr %1, i64 0, i32 6
  store i32 %22, ptr %23, align 4, !tbaa !1140
  %24 = tail call i32 @u_v(i32 noundef 5, ptr noundef nonnull @.str.77.431, ptr noundef %3) #46
  %25 = getelementptr inbounds %struct.hrd_parameters_t, ptr %1, i64 0, i32 7
  store i32 %24, ptr %25, align 4, !tbaa !1141
  %26 = tail call i32 @u_v(i32 noundef 5, ptr noundef nonnull @.str.78.432, ptr noundef %3) #46
  %27 = getelementptr inbounds %struct.hrd_parameters_t, ptr %1, i64 0, i32 8
  store i32 %26, ptr %27, align 4, !tbaa !1142
  %28 = tail call i32 @u_v(i32 noundef 5, ptr noundef nonnull @.str.79.433, ptr noundef %3) #46
  %29 = getelementptr inbounds %struct.hrd_parameters_t, ptr %1, i64 0, i32 9
  store i32 %28, ptr %29, align 4, !tbaa !1143
  ret i32 0
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @InterpretPPS(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) #0 {
  %3 = load ptr, ptr %0, align 8, !tbaa !448
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %4 = tail call i32 @ue_v(ptr noundef nonnull @.str.80.434, ptr noundef %3) #46
  %5 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 1
  store i32 %4, ptr %5, align 4, !tbaa !1144
  %6 = tail call i32 @ue_v(ptr noundef nonnull @.str.81, ptr noundef %3) #46
  %7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 2
  store i32 %6, ptr %7, align 8, !tbaa !1145
  %8 = tail call i32 @u_1(ptr noundef nonnull @.str.82, ptr noundef %3) #46
  %9 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 3
  store i32 %8, ptr %9, align 4, !tbaa !490
  %10 = tail call i32 @u_1(ptr noundef nonnull @.str.83, ptr noundef %3) #46
  %11 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 11
  store i32 %10, ptr %11, align 8, !tbaa !460
  %12 = tail call i32 @ue_v(ptr noundef nonnull @.str.84, ptr noundef %3) #46
  %13 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 12
  store i32 %12, ptr %13, align 4, !tbaa !418
  %14 = icmp eq i32 %12, 0
  br i1 %14, label %63, label %15

15:                                               ; preds = %2
  %16 = tail call i32 @ue_v(ptr noundef nonnull @.str.85, ptr noundef %3) #46
  %17 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 13
  store i32 %16, ptr %17, align 8, !tbaa !416
  switch i32 %16, label %63 [
    i32 0, label %21
    i32 2, label %18
    i32 3, label %39
    i32 4, label %39
    i32 5, label %39
    i32 6, label %44
  ]

18:                                               ; preds = %15
  %19 = load i32, ptr %13, align 4, !tbaa !418
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %63, label %29

21:                                               ; preds = %21, %15
  %22 = phi i32 [ %26, %21 ], [ %16, %15 ]
  %23 = tail call i32 @ue_v(ptr noundef nonnull @.str.86, ptr noundef %3) #46
  %24 = zext i32 %22 to i64
  %25 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 14, i64 %24
  store i32 %23, ptr %25, align 4, !tbaa !18
  %26 = add i32 %22, 1
  %27 = load i32, ptr %13, align 4, !tbaa !418
  %28 = icmp ugt i32 %26, %27
  br i1 %28, label %63, label %21, !llvm.loop !1146

29:                                               ; preds = %29, %18
  %30 = phi i64 [ %35, %29 ], [ 0, %18 ]
  %31 = tail call i32 @ue_v(ptr noundef nonnull @.str.87, ptr noundef %3) #46
  %32 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 15, i64 %30
  store i32 %31, ptr %32, align 4, !tbaa !18
  %33 = tail call i32 @ue_v(ptr noundef nonnull @.str.88, ptr noundef %3) #46
  %34 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 16, i64 %30
  store i32 %33, ptr %34, align 4, !tbaa !18
  %35 = add nuw nsw i64 %30, 1
  %36 = load i32, ptr %13, align 4, !tbaa !418
  %37 = zext i32 %36 to i64
  %38 = icmp ult i64 %35, %37
  br i1 %38, label %29, label %63, !llvm.loop !1147

39:                                               ; preds = %15, %15, %15
  %40 = tail call i32 @u_1(ptr noundef nonnull @.str.89, ptr noundef %3) #46
  %41 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 17
  store i32 %40, ptr %41, align 4, !tbaa !431
  %42 = tail call i32 @ue_v(ptr noundef nonnull @.str.90, ptr noundef %3) #46
  %43 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 18
  store i32 %42, ptr %43, align 8, !tbaa !428
  br label %63

44:                                               ; preds = %15
  %45 = load i32, ptr %13, align 4, !tbaa !418
  %46 = add i32 %45, 1
  %47 = icmp ugt i32 %46, 4
  %48 = icmp ugt i32 %46, 2
  %49 = select i1 %48, i32 2, i32 1
  %50 = select i1 %47, i32 3, i32 %49
  %51 = tail call i32 @ue_v(ptr noundef nonnull @.str.91, ptr noundef %3) #46
  %52 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 19
  store i32 %51, ptr %52, align 4, !tbaa !417
  %53 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 20
  br label %54

54:                                               ; preds = %54, %44
  %55 = phi i32 [ 0, %44 ], [ %60, %54 ]
  %56 = tail call i32 @u_v(i32 noundef %50, ptr noundef nonnull @.str.92, ptr noundef %3) #46
  %57 = load ptr, ptr %53, align 8, !tbaa !437
  %58 = zext i32 %55 to i64
  %59 = getelementptr inbounds i32, ptr %57, i64 %58
  store i32 %56, ptr %59, align 4, !tbaa !18
  %60 = add i32 %55, 1
  %61 = load i32, ptr %52, align 4, !tbaa !417
  %62 = icmp ugt i32 %60, %61
  br i1 %62, label %63, label %54, !llvm.loop !1148

63:                                               ; preds = %54, %39, %29, %21, %18, %15, %2
  %64 = tail call i32 @ue_v(ptr noundef nonnull @.str.93, ptr noundef %3) #46
  %65 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 21
  store i32 %64, ptr %65, align 8, !tbaa !402
  %66 = tail call i32 @ue_v(ptr noundef nonnull @.str.94, ptr noundef %3) #46
  %67 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 22
  store i32 %66, ptr %67, align 4, !tbaa !1149
  %68 = tail call i32 @u_1(ptr noundef nonnull @.str.95.435, ptr noundef %3) #46
  %69 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 23
  store i32 %68, ptr %69, align 8, !tbaa !475
  %70 = tail call i32 @u_v(i32 noundef 2, ptr noundef nonnull @.str.96, ptr noundef %3) #46
  %71 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 24
  store i32 %70, ptr %71, align 4, !tbaa !476
  %72 = tail call i32 @se_v(ptr noundef nonnull @.str.97, ptr noundef %3) #46
  %73 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 25
  store i32 %72, ptr %73, align 8, !tbaa !491
  %74 = tail call i32 @se_v(ptr noundef nonnull @.str.98, ptr noundef %3) #46
  %75 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 26
  store i32 %74, ptr %75, align 4, !tbaa !494
  %76 = tail call i32 @se_v(ptr noundef nonnull @.str.99, ptr noundef %3) #46
  %77 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 27
  store i32 %76, ptr %77, align 8, !tbaa !615
  %78 = tail call i32 @u_1(ptr noundef nonnull @.str.100, ptr noundef %3) #46
  %79 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 29
  store i32 %78, ptr %79, align 8, !tbaa !495
  %80 = tail call i32 @u_1(ptr noundef nonnull @.str.101, ptr noundef %3) #46
  %81 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 30
  store i32 %80, ptr %81, align 4, !tbaa !54
  %82 = tail call i32 @u_1(ptr noundef nonnull @.str.102, ptr noundef %3) #46
  %83 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 31
  store i32 %82, ptr %83, align 8, !tbaa !463
  %84 = getelementptr inbounds %struct.Bitstream, ptr %3, i64 0, i32 4
  %85 = load ptr, ptr %84, align 8, !tbaa !218
  %86 = getelementptr inbounds %struct.Bitstream, ptr %3, i64 0, i32 2
  %87 = load i32, ptr %86, align 8, !tbaa !450
  %88 = getelementptr inbounds %struct.Bitstream, ptr %3, i64 0, i32 3
  %89 = load i32, ptr %88, align 4, !tbaa !561
  %90 = tail call i32 @more_rbsp_data(ptr noundef %85, i32 noundef %87, i32 noundef %89) #46
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %125, label %92

92:                                               ; preds = %63
  %93 = tail call i32 @u_1(ptr noundef nonnull @.str.103, ptr noundef nonnull %3) #46
  %94 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 4
  store i32 %93, ptr %94, align 8, !tbaa !130
  %95 = tail call i32 @u_1(ptr noundef nonnull @.str.104, ptr noundef nonnull %3) #46
  %96 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 5
  store i32 %95, ptr %96, align 4, !tbaa !122
  %97 = icmp eq i32 %95, 0
  br i1 %97, label %123, label %98

98:                                               ; preds = %92
  %99 = load i32, ptr %94, align 8, !tbaa !130
  %100 = and i32 %99, 2147483647
  %101 = icmp eq i32 %100, 2147483645
  br i1 %101, label %123, label %102

102:                                              ; preds = %116, %98
  %103 = phi i64 [ %117, %116 ], [ 0, %98 ]
  %104 = tail call i32 @u_1(ptr noundef nonnull @.str.105, ptr noundef %3) #46
  %105 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 6, i64 %103
  store i32 %104, ptr %105, align 4, !tbaa !18
  %106 = icmp eq i32 %104, 0
  br i1 %106, label %116, label %107

107:                                              ; preds = %102
  %108 = icmp ult i64 %103, 6
  br i1 %108, label %109, label %112

109:                                              ; preds = %107
  %110 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 7, i64 %103
  %111 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 9, i64 %103
  tail call void @Scaling_List(ptr noundef nonnull %110, i32 noundef 16, ptr noundef nonnull %111, ptr noundef %3) #47
  br label %116

112:                                              ; preds = %107
  %113 = add nsw i64 %103, -6
  %114 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 8, i64 %113
  %115 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 10, i64 %113
  tail call void @Scaling_List(ptr noundef nonnull %114, i32 noundef 64, ptr noundef nonnull %115, ptr noundef %3) #47
  br label %116

116:                                              ; preds = %112, %109, %102
  %117 = add nuw nsw i64 %103, 1
  %118 = load i32, ptr %94, align 8, !tbaa !130
  %119 = shl i32 %118, 1
  %120 = add i32 %119, 6
  %121 = zext i32 %120 to i64
  %122 = icmp ult i64 %117, %121
  br i1 %122, label %102, label %123, !llvm.loop !1150

123:                                              ; preds = %116, %98, %92
  %124 = tail call i32 @se_v(ptr noundef nonnull @.str.106, ptr noundef %3) #46
  br label %127

125:                                              ; preds = %63
  %126 = load i32, ptr %77, align 8, !tbaa !615
  br label %127

127:                                              ; preds = %125, %123
  %128 = phi i32 [ %126, %125 ], [ %124, %123 ]
  %129 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 28
  store i32 %128, ptr %129, align 4, !tbaa !616
  store i32 1, ptr %1, align 8, !tbaa !1151
  %130 = load i32, ptr @UsedBits, align 4, !tbaa !18
  ret i32 %130
}

; Function Attrs: mustprogress nounwind optsize willreturn uwtable
define internal void @MakePPSavailable(i32 noundef %0, ptr nocapture noundef %1) #22 {
  %3 = sext i32 %0 to i64
  %4 = getelementptr inbounds [256 x %struct.pic_parameter_set_rbsp_t], ptr @PicParSet, i64 0, i64 %3
  %5 = load i32, ptr %4, align 8, !tbaa !1151
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds [256 x %struct.pic_parameter_set_rbsp_t], ptr @PicParSet, i64 0, i64 %3, i32 20
  %9 = load ptr, ptr %8, align 8, !tbaa !437
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @free(ptr noundef nonnull %9) #46
  br label %12

12:                                               ; preds = %11, %7, %2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(1160) %4, ptr noundef nonnull align 8 dereferenceable(1160) %1, i64 1160, i1 false)
  %13 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 20
  %14 = load ptr, ptr %13, align 8, !tbaa !437
  %15 = getelementptr inbounds [256 x %struct.pic_parameter_set_rbsp_t], ptr @PicParSet, i64 0, i64 %3, i32 20
  store ptr %14, ptr %15, align 8, !tbaa !437
  store ptr null, ptr %13, align 8, !tbaa !437
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @CleanUpPPS() #0 {
  br label %1

1:                                                ; preds = %11, %0
  %2 = phi i64 [ 0, %0 ], [ %12, %11 ]
  %3 = getelementptr inbounds [256 x %struct.pic_parameter_set_rbsp_t], ptr @PicParSet, i64 0, i64 %2
  %4 = load i32, ptr %3, align 8, !tbaa !1151
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = getelementptr inbounds [256 x %struct.pic_parameter_set_rbsp_t], ptr @PicParSet, i64 0, i64 %2, i32 20
  %8 = load ptr, ptr %7, align 8, !tbaa !437
  %9 = icmp eq ptr %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @free(ptr noundef nonnull %8) #46
  br label %11

11:                                               ; preds = %10, %6, %1
  store i32 0, ptr %3, align 8, !tbaa !1151
  %12 = add nuw nsw i64 %2, 1
  %13 = icmp eq i64 %12, 256
  br i1 %13, label %14, label %1, !llvm.loop !1152

14:                                               ; preds = %11
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @ProcessSPS(ptr nocapture noundef readonly %0) #0 {
  %2 = tail call ptr (i32, ...) @AllocPartition(i32 noundef 1) #46
  %3 = tail call ptr (...) @AllocSPS() #46
  %4 = load ptr, ptr %2, align 8, !tbaa !448
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  %6 = load ptr, ptr %5, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 6
  %8 = load ptr, ptr %7, align 8, !tbaa !21
  %9 = getelementptr inbounds i8, ptr %8, i64 1
  %10 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 1
  %11 = load i32, ptr %10, align 4, !tbaa !20
  %12 = add i32 %11, -1
  %13 = zext i32 %12 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %6, ptr nonnull align 1 %9, i64 %13, i1 false)
  %14 = load ptr, ptr %2, align 8, !tbaa !448
  %15 = getelementptr inbounds %struct.Bitstream, ptr %14, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !218
  %17 = load i32, ptr %10, align 4, !tbaa !20
  %18 = add i32 %17, -1
  %19 = tail call i32 @RBSPtoSODB(ptr noundef %16, i32 noundef %18) #46
  %20 = load ptr, ptr %2, align 8, !tbaa !448
  %21 = getelementptr inbounds %struct.Bitstream, ptr %20, i64 0, i32 3
  store i32 %19, ptr %21, align 4, !tbaa !561
  %22 = getelementptr inbounds %struct.Bitstream, ptr %20, i64 0, i32 1
  store i32 %19, ptr %22, align 4, !tbaa !217
  %23 = getelementptr inbounds %struct.Bitstream, ptr %20, i64 0, i32 5
  store i32 0, ptr %23, align 8, !tbaa !560
  %24 = getelementptr inbounds %struct.Bitstream, ptr %20, i64 0, i32 2
  store i32 0, ptr %24, align 8, !tbaa !450
  store i32 0, ptr %20, align 8, !tbaa !215
  %25 = tail call i32 @InterpretSPS(ptr noundef nonnull %2, ptr noundef %3) #47
  %26 = load i32, ptr %3, align 4, !tbaa !1106
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %54, label %28

28:                                               ; preds = %1
  %29 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %30 = icmp eq ptr %29, null
  br i1 %30, label %45, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %3, i64 0, i32 7
  %33 = load i32, ptr %32, align 4, !tbaa !1097
  %34 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %29, i64 0, i32 7
  %35 = load i32, ptr %34, align 4, !tbaa !1097
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %37, label %45

37:                                               ; preds = %31
  %38 = tail call i32 @sps_is_equal(ptr noundef nonnull %3, ptr noundef nonnull %29) #46
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %37
  %41 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %42 = icmp eq ptr %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  tail call void (...) @exit_picture() #46
  br label %44

44:                                               ; preds = %43, %40
  store ptr null, ptr @active_sps, align 8, !tbaa !13
  br label %45

45:                                               ; preds = %44, %37, %31, %28
  %46 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %3, i64 0, i32 7
  %47 = load i32, ptr %46, align 4, !tbaa !1097
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [32 x %struct.seq_parameter_set_rbsp_t], ptr @SeqParSet, i64 0, i64 %48
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3064) %49, ptr noundef nonnull align 4 dereferenceable(3064) %3, i64 3064, i1 false)
  %50 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %3, i64 0, i32 1
  %51 = load i32, ptr %50, align 4, !tbaa !908
  %52 = load ptr, ptr @img, align 8, !tbaa !13
  %53 = getelementptr inbounds %struct.img_par, ptr %52, i64 0, i32 110
  store i32 %51, ptr %53, align 8, !tbaa !1153
  br label %54

54:                                               ; preds = %45, %1
  tail call void @FreePartition(ptr noundef nonnull %2, i32 noundef 1) #46
  tail call void @FreeSPS(ptr noundef nonnull %3) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @ProcessPPS(ptr nocapture noundef readonly %0) #0 {
  %2 = tail call ptr (i32, ...) @AllocPartition(i32 noundef 1) #46
  %3 = tail call ptr (...) @AllocPPS() #46
  %4 = load ptr, ptr %2, align 8, !tbaa !448
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  %6 = load ptr, ptr %5, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 6
  %8 = load ptr, ptr %7, align 8, !tbaa !21
  %9 = getelementptr inbounds i8, ptr %8, i64 1
  %10 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 1
  %11 = load i32, ptr %10, align 4, !tbaa !20
  %12 = add i32 %11, -1
  %13 = zext i32 %12 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %6, ptr nonnull align 1 %9, i64 %13, i1 false)
  %14 = load ptr, ptr %2, align 8, !tbaa !448
  %15 = getelementptr inbounds %struct.Bitstream, ptr %14, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !218
  %17 = load i32, ptr %10, align 4, !tbaa !20
  %18 = add i32 %17, -1
  %19 = tail call i32 @RBSPtoSODB(ptr noundef %16, i32 noundef %18) #46
  %20 = load ptr, ptr %2, align 8, !tbaa !448
  %21 = getelementptr inbounds %struct.Bitstream, ptr %20, i64 0, i32 3
  store i32 %19, ptr %21, align 4, !tbaa !561
  %22 = getelementptr inbounds %struct.Bitstream, ptr %20, i64 0, i32 1
  store i32 %19, ptr %22, align 4, !tbaa !217
  %23 = getelementptr inbounds %struct.Bitstream, ptr %20, i64 0, i32 5
  store i32 0, ptr %23, align 8, !tbaa !560
  %24 = getelementptr inbounds %struct.Bitstream, ptr %20, i64 0, i32 2
  store i32 0, ptr %24, align 8, !tbaa !450
  store i32 0, ptr %20, align 8, !tbaa !215
  %25 = tail call i32 @InterpretPPS(ptr noundef nonnull %2, ptr noundef %3) #47
  %26 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %27 = icmp eq ptr %26, null
  br i1 %27, label %42, label %28

28:                                               ; preds = %1
  %29 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %3, i64 0, i32 1
  %30 = load i32, ptr %29, align 4, !tbaa !1144
  %31 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %26, i64 0, i32 1
  %32 = load i32, ptr %31, align 4, !tbaa !1144
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %34, label %42

34:                                               ; preds = %28
  %35 = tail call i32 @pps_is_equal(ptr noundef nonnull %3, ptr noundef nonnull %26) #46
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %34
  %38 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %39 = icmp eq ptr %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void (...) @exit_picture() #46
  br label %41

41:                                               ; preds = %40, %37
  store ptr null, ptr @active_pps, align 8, !tbaa !13
  br label %42

42:                                               ; preds = %41, %34, %28, %1
  %43 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %3, i64 0, i32 1
  %44 = load i32, ptr %43, align 4, !tbaa !1144
  tail call void @MakePPSavailable(i32 noundef %44, ptr noundef %3) #47
  tail call void @FreePartition(ptr noundef nonnull %2, i32 noundef 1) #46
  tail call void @FreePPS(ptr noundef %3) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @activate_sps(ptr noundef %0) #0 {
  %2 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %3 = icmp eq ptr %2, %0
  br i1 %3, label %87, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void (...) @exit_picture() #46
  br label %8

8:                                                ; preds = %7, %4
  store ptr %0, ptr @active_sps, align 8, !tbaa !13
  %9 = load ptr, ptr @img, align 8, !tbaa !13
  %10 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 102
  store i32 0, ptr %10, align 8, !tbaa !704
  %11 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 13
  store i32 0, ptr %11, align 8, !tbaa !339
  %12 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 15
  store i32 0, ptr %12, align 8, !tbaa !340
  %13 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 15
  %14 = load i32, ptr %13, align 4, !tbaa !1098
  %15 = add i32 %14, 8
  %16 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 101
  store i32 %15, ptr %16, align 4, !tbaa !703
  %17 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 8
  %18 = load i32, ptr %17, align 4, !tbaa !480
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 16
  %22 = load i32, ptr %21, align 4, !tbaa !1099
  %23 = add i32 %22, 8
  store i32 %23, ptr %10, align 8, !tbaa !704
  br label %24

24:                                               ; preds = %20, %8
  %25 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 17
  %26 = load i32, ptr %25, align 4, !tbaa !382
  %27 = add i32 %26, 4
  %28 = shl nuw i32 1, %27
  %29 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 86
  store i32 %28, ptr %29, align 8, !tbaa !335
  %30 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 27
  %31 = load i32, ptr %30, align 4, !tbaa !415
  %32 = add i32 %31, 1
  %33 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 87
  store i32 %32, ptr %33, align 4, !tbaa !422
  %34 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 28
  %35 = load i32, ptr %34, align 4, !tbaa !414
  %36 = add i32 %35, 1
  %37 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 88
  store i32 %36, ptr %37, align 8, !tbaa !432
  %38 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 29
  %39 = load i32, ptr %38, align 4, !tbaa !440
  %40 = sub i32 2, %39
  %41 = mul i32 %40, %36
  %42 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 89
  store i32 %41, ptr %42, align 4, !tbaa !499
  %43 = mul i32 %41, %32
  %44 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 92
  store i32 %43, ptr %44, align 8, !tbaa !501
  %45 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 111
  store i32 %18, ptr %45, align 4, !tbaa !697
  %46 = shl i32 %32, 4
  %47 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 11
  store i32 %46, ptr %47, align 8, !tbaa !337
  %48 = shl i32 %41, 4
  %49 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 12
  store i32 %48, ptr %49, align 4, !tbaa !338
  switch i32 %18, label %59 [
    i32 1, label %50
    i32 2, label %53
    i32 3, label %55
  ]

50:                                               ; preds = %24
  %51 = ashr exact i32 %46, 1
  store i32 %51, ptr %11, align 8, !tbaa !339
  %52 = ashr exact i32 %48, 1
  br label %56

53:                                               ; preds = %24
  %54 = ashr exact i32 %46, 1
  store i32 %54, ptr %11, align 8, !tbaa !339
  br label %56

55:                                               ; preds = %24
  store i32 %46, ptr %11, align 8, !tbaa !339
  br label %56

56:                                               ; preds = %55, %53, %50
  %57 = phi i32 [ %48, %53 ], [ %48, %55 ], [ %52, %50 ]
  %58 = phi i32 [ %54, %53 ], [ %46, %55 ], [ %51, %50 ]
  store i32 %57, ptr %12, align 8, !tbaa !340
  br label %59

59:                                               ; preds = %56, %24
  %60 = phi i32 [ 0, %24 ], [ %58, %56 ]
  %61 = add nsw i32 %60, -1
  %62 = getelementptr inbounds %struct.img_par, ptr %9, i64 0, i32 14
  store i32 %61, ptr %62, align 4, !tbaa !891
  tail call void @init_frext(ptr noundef nonnull %9) #46
  %63 = tail call i32 (...) @init_global_buffers() #46
  %64 = load ptr, ptr @img, align 8, !tbaa !13
  %65 = getelementptr inbounds %struct.img_par, ptr %64, i64 0, i32 94
  %66 = load i32, ptr %65, align 8, !tbaa !506
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %59
  tail call void @flush_dpb() #46
  br label %69

69:                                               ; preds = %68, %59
  tail call void @init_dpb() #46
  %70 = load ptr, ptr @Co_located, align 8, !tbaa !13
  %71 = icmp eq ptr %70, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  tail call void @free_colocated(ptr noundef nonnull %70) #46
  br label %73

73:                                               ; preds = %72, %69
  %74 = load ptr, ptr @img, align 8, !tbaa !13
  %75 = getelementptr inbounds %struct.img_par, ptr %74, i64 0, i32 11
  %76 = load i32, ptr %75, align 8, !tbaa !337
  %77 = getelementptr inbounds %struct.img_par, ptr %74, i64 0, i32 12
  %78 = load i32, ptr %77, align 4, !tbaa !338
  %79 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 30
  %80 = load i32, ptr %79, align 4, !tbaa !443
  %81 = tail call ptr @alloc_colocated(i32 noundef %76, i32 noundef %78, i32 noundef %80) #46
  store ptr %81, ptr @Co_located, align 8, !tbaa !13
  %82 = load ptr, ptr @img, align 8, !tbaa !13
  %83 = getelementptr inbounds %struct.img_par, ptr %82, i64 0, i32 11
  %84 = load i32, ptr %83, align 8, !tbaa !337
  %85 = getelementptr inbounds %struct.img_par, ptr %82, i64 0, i32 12
  %86 = load i32, ptr %85, align 4, !tbaa !338
  tail call void @ercInit(i32 noundef %84, i32 noundef %86, i32 noundef 1) #46
  br label %87

87:                                               ; preds = %73, %1
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @UseParameterSet(i32 noundef %0) #0 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [256 x %struct.pic_parameter_set_rbsp_t], ptr @PicParSet, i64 0, i64 %2
  %4 = getelementptr inbounds [256 x %struct.pic_parameter_set_rbsp_t], ptr @PicParSet, i64 0, i64 %2, i32 2
  %5 = load i32, ptr %3, align 8, !tbaa !1151
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.109, i32 noundef %0) #47
  br label %9

9:                                                ; preds = %7, %1
  %10 = load i32, ptr %4, align 8, !tbaa !1145
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds [32 x %struct.seq_parameter_set_rbsp_t], ptr @SeqParSet, i64 0, i64 %11
  %13 = load i32, ptr %12, align 8, !tbaa !1106
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %19, label %15

15:                                               ; preds = %9
  %16 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.110, i32 noundef %0, i32 noundef %10) #47
  %17 = load i32, ptr %4, align 8, !tbaa !1145
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %15, %9
  %20 = phi i64 [ %18, %15 ], [ %11, %9 ]
  %21 = getelementptr inbounds [32 x %struct.seq_parameter_set_rbsp_t], ptr @SeqParSet, i64 0, i64 %20
  %22 = getelementptr inbounds [32 x %struct.seq_parameter_set_rbsp_t], ptr @SeqParSet, i64 0, i64 %20, i32 18
  %23 = load i32, ptr %22, align 4, !tbaa !457
  %24 = icmp ugt i32 %23, 2
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.111, i32 noundef %23) #47
  tail call void @error(ptr noundef nonnull @.str.112, i32 noundef -1000) #46
  %27 = load i32, ptr %22, align 4, !tbaa !457
  br label %28

28:                                               ; preds = %25, %19
  %29 = phi i32 [ %23, %19 ], [ %27, %25 ]
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = getelementptr inbounds [32 x %struct.seq_parameter_set_rbsp_t], ptr @SeqParSet, i64 0, i64 %20, i32 23
  %33 = load i32, ptr %32, align 8, !tbaa !528
  %34 = icmp ugt i32 %33, 255
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @error(ptr noundef nonnull @.str.113, i32 noundef -1011) #46
  br label %36

36:                                               ; preds = %35, %31, %28
  tail call void @activate_sps(ptr noundef nonnull %21) #47
  %37 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %38 = icmp eq ptr %37, %3
  br i1 %38, label %48, label %39

39:                                               ; preds = %36
  %40 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %41 = icmp eq ptr %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %39
  tail call void (...) @exit_picture() #46
  br label %43

43:                                               ; preds = %42, %39
  store ptr %3, ptr @active_pps, align 8, !tbaa !13
  %44 = getelementptr inbounds [256 x %struct.pic_parameter_set_rbsp_t], ptr @PicParSet, i64 0, i64 %2, i32 4
  %45 = load i32, ptr %44, align 8, !tbaa !130
  %46 = load ptr, ptr @img, align 8, !tbaa !13
  %47 = getelementptr inbounds %struct.img_par, ptr %46, i64 0, i32 109
  store i32 %45, ptr %47, align 4, !tbaa !742
  br label %48

48:                                               ; preds = %43, %36
  %49 = getelementptr inbounds [256 x %struct.pic_parameter_set_rbsp_t], ptr @PicParSet, i64 0, i64 %2, i32 3
  %50 = load i32, ptr %49, align 4, !tbaa !490
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %63

52:                                               ; preds = %48
  store ptr @uvlc_startcode_follows, ptr @nal_startcode_follows, align 8, !tbaa !13
  br label %53

53:                                               ; preds = %53, %52
  %54 = phi i64 [ 0, %52 ], [ %61, %53 ]
  %55 = load ptr, ptr @img, align 8, !tbaa !13
  %56 = getelementptr inbounds %struct.img_par, ptr %55, i64 0, i32 38
  %57 = load ptr, ptr %56, align 8, !tbaa !165
  %58 = getelementptr inbounds %struct.Slice, ptr %57, i64 0, i32 9
  %59 = load ptr, ptr %58, align 8, !tbaa !214
  %60 = getelementptr inbounds %struct.datapartition, ptr %59, i64 %54, i32 2
  store ptr @readSyntaxElement_UVLC, ptr %60, align 8, !tbaa !738
  %61 = add nuw nsw i64 %54, 1
  %62 = icmp eq i64 %61, 3
  br i1 %62, label %74, label %53, !llvm.loop !1154

63:                                               ; preds = %48
  store ptr @cabac_startcode_follows, ptr @nal_startcode_follows, align 8, !tbaa !13
  br label %64

64:                                               ; preds = %64, %63
  %65 = phi i64 [ 0, %63 ], [ %72, %64 ]
  %66 = load ptr, ptr @img, align 8, !tbaa !13
  %67 = getelementptr inbounds %struct.img_par, ptr %66, i64 0, i32 38
  %68 = load ptr, ptr %67, align 8, !tbaa !165
  %69 = getelementptr inbounds %struct.Slice, ptr %68, i64 0, i32 9
  %70 = load ptr, ptr %69, align 8, !tbaa !214
  %71 = getelementptr inbounds %struct.datapartition, ptr %70, i64 %65, i32 2
  store ptr @readSyntaxElement_CABAC, ptr %71, align 8, !tbaa !738
  %72 = add nuw nsw i64 %65, 1
  %73 = icmp eq i64 %72, 3
  br i1 %73, label %74, label %64, !llvm.loop !1155

74:                                               ; preds = %64, %53
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal noalias ptr @AllocPPS() #0 {
  %1 = tail call noalias dereferenceable_or_null(1160) ptr @calloc(i64 noundef 1160, i64 noundef 1) #45
  %2 = icmp eq ptr %1, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  tail call void @no_mem_exit(ptr noundef nonnull @.str.446) #46
  br label %4

4:                                                ; preds = %3, %0
  %5 = tail call noalias dereferenceable_or_null(240000) ptr @calloc(i64 noundef 240000, i64 noundef 1) #45
  %6 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 20
  store ptr %5, ptr %6, align 8, !tbaa !437
  %7 = icmp eq ptr %5, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @no_mem_exit(ptr noundef nonnull @.str.1.447) #46
  br label %9

9:                                                ; preds = %8, %4
  ret ptr %1
}

; Function Attrs: nounwind optsize uwtable
define internal noalias ptr @AllocSPS() #0 {
  %1 = tail call noalias dereferenceable_or_null(3064) ptr @calloc(i64 noundef 3064, i64 noundef 1) #45
  %2 = icmp eq ptr %1, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  tail call void @no_mem_exit(ptr noundef nonnull @.str.2.450) #46
  br label %4

4:                                                ; preds = %3, %0
  ret ptr %1
}

; Function Attrs: mustprogress nounwind optsize willreturn uwtable
define internal void @FreePPS(ptr nocapture noundef %0) #22 {
  %2 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 20
  %3 = load ptr, ptr %2, align 8, !tbaa !437
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @free(ptr noundef nonnull %3) #46
  br label %6

6:                                                ; preds = %5, %1
  tail call void @free(ptr noundef nonnull %0) #46
  ret void
}

; Function Attrs: mustprogress nounwind optsize willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define internal void @FreeSPS(ptr nocapture noundef %0) #19 {
  tail call void @free(ptr noundef %0) #46
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(argmem: read) uwtable
define internal i32 @sps_is_equal(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #41 {
  %3 = load i32, ptr %0, align 4, !tbaa !1106
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %127, label %5

5:                                                ; preds = %2
  %6 = load i32, ptr %1, align 4, !tbaa !1106
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %127, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 1
  %10 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 1
  %11 = load <4 x i32>, ptr %9, align 4, !tbaa !14
  %12 = load <4 x i32>, ptr %10, align 4, !tbaa !14
  %13 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 6
  %14 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 6
  %15 = load <2 x i32>, ptr %13, align 4, !tbaa !18
  %16 = load <2 x i32>, ptr %14, align 4, !tbaa !18
  %17 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 17
  %18 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 17
  %19 = load <2 x i32>, ptr %17, align 4, !tbaa !18
  %20 = load <2 x i32>, ptr %18, align 4, !tbaa !18
  %21 = shufflevector <4 x i32> %11, <4 x i32> poison, <8 x i32> <i32 1, i32 0, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %22 = shufflevector <2 x i32> %15, <2 x i32> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %23 = shufflevector <8 x i32> %21, <8 x i32> %22, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %24 = shufflevector <2 x i32> %19, <2 x i32> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %25 = shufflevector <8 x i32> %23, <8 x i32> %24, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  %26 = shufflevector <4 x i32> %12, <4 x i32> poison, <8 x i32> <i32 1, i32 0, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %27 = shufflevector <2 x i32> %16, <2 x i32> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %28 = shufflevector <8 x i32> %26, <8 x i32> %27, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>
  %29 = shufflevector <2 x i32> %20, <2 x i32> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %30 = shufflevector <8 x i32> %28, <8 x i32> %29, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  %31 = icmp ne <8 x i32> %25, %30
  %32 = bitcast <8 x i1> %31 to i8
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %127

34:                                               ; preds = %8
  %35 = extractelement <2 x i32> %19, i64 1
  switch i32 %35, label %69 [
    i32 0, label %36
    i32 1, label %42
  ]

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 19
  %38 = load i32, ptr %37, align 4, !tbaa !458
  %39 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 19
  %40 = load i32, ptr %39, align 4, !tbaa !458
  %41 = icmp eq i32 %38, %40
  br label %69

42:                                               ; preds = %34
  %43 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 20
  %44 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 20
  %45 = load <4 x i32>, ptr %43, align 4, !tbaa !14
  %46 = load <4 x i32>, ptr %44, align 4, !tbaa !14
  %47 = icmp ne <4 x i32> %45, %46
  %48 = bitcast <4 x i1> %47 to i4
  %49 = icmp eq i4 %48, 0
  br i1 %49, label %50, label %127

50:                                               ; preds = %42
  %51 = extractelement <4 x i32> %45, i64 3
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %69, label %53

53:                                               ; preds = %50
  %54 = zext i32 %51 to i64
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ 0, %53 ], [ %65, %55 ]
  %57 = phi i32 [ 1, %53 ], [ %64, %55 ]
  %58 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 24, i64 %56
  %59 = load i32, ptr %58, align 4, !tbaa !18
  %60 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 24, i64 %56
  %61 = load i32, ptr %60, align 4, !tbaa !18
  %62 = icmp eq i32 %59, %61
  %63 = zext i1 %62 to i32
  %64 = and i32 %57, %63
  %65 = add nuw nsw i64 %56, 1
  %66 = icmp eq i64 %65, %54
  br i1 %66, label %67, label %55, !llvm.loop !1156

67:                                               ; preds = %55
  %.lcssa = phi i32 [ %64, %55 ]
  %68 = icmp ne i32 %.lcssa, 0
  br label %69

69:                                               ; preds = %67, %50, %36, %34
  %70 = phi i1 [ %41, %36 ], [ true, %34 ], [ true, %50 ], [ %68, %67 ]
  %71 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 25
  %72 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 25
  %73 = load <4 x i32>, ptr %71, align 4, !tbaa !14
  %74 = load <4 x i32>, ptr %72, align 4, !tbaa !14
  %75 = icmp ne <4 x i32> %73, %74
  %76 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 29
  %77 = load i32, ptr %76, align 4, !tbaa !440
  %78 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 29
  %79 = load i32, ptr %78, align 4, !tbaa !440
  %80 = icmp eq i32 %77, %79
  %81 = bitcast <4 x i1> %75 to i4
  %82 = icmp eq i4 %81, 0
  %83 = and i1 %82, %80
  %84 = and i1 %83, %70
  br i1 %84, label %85, label %127

85:                                               ; preds = %69
  %86 = icmp eq i32 %77, 0
  br i1 %86, label %87, label %93

87:                                               ; preds = %85
  %88 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 30
  %89 = load i32, ptr %88, align 4, !tbaa !443
  %90 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 30
  %91 = load i32, ptr %90, align 4, !tbaa !443
  %92 = icmp eq i32 %89, %91
  br label %93

93:                                               ; preds = %87, %85
  %94 = phi i1 [ true, %85 ], [ %92, %87 ]
  %95 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 31
  %96 = load i32, ptr %95, align 4, !tbaa !739
  %97 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 31
  %98 = load i32, ptr %97, align 4, !tbaa !739
  %99 = icmp eq i32 %96, %98
  %100 = and i1 %94, %99
  %101 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 32
  %102 = load i32, ptr %101, align 4, !tbaa !626
  %103 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 32
  %104 = load i32, ptr %103, align 4, !tbaa !626
  %105 = icmp eq i32 %102, %104
  %106 = and i1 %100, %105
  br i1 %106, label %107, label %127

107:                                              ; preds = %93
  %108 = icmp eq i32 %102, 0
  br i1 %108, label %118, label %109

109:                                              ; preds = %107
  %110 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 33
  %111 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 33
  %112 = load <4 x i32>, ptr %110, align 4, !tbaa !18
  %113 = load <4 x i32>, ptr %111, align 4, !tbaa !18
  %114 = icmp ne <4 x i32> %112, %113
  %115 = bitcast <4 x i1> %114 to i4
  %116 = icmp eq i4 %115, 0
  %117 = zext i1 %116 to i32
  br label %118

118:                                              ; preds = %109, %107
  %119 = phi i32 [ %117, %109 ], [ 1, %107 ]
  %120 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %0, i64 0, i32 37
  %121 = load i32, ptr %120, align 4, !tbaa !910
  %122 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %1, i64 0, i32 37
  %123 = load i32, ptr %122, align 4, !tbaa !910
  %124 = icmp eq i32 %121, %123
  %125 = zext i1 %124 to i32
  %126 = and i32 %119, %125
  br label %127

127:                                              ; preds = %118, %93, %69, %42, %8, %5, %2
  %128 = phi i32 [ %126, %118 ], [ 0, %5 ], [ 0, %2 ], [ 0, %8 ], [ 0, %42 ], [ 0, %69 ], [ 0, %93 ]
  ret i32 %128
}

; Function Attrs: nofree nosync nounwind optsize memory(read, inaccessiblemem: none) uwtable
define internal i32 @pps_is_equal(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #42 {
  %3 = load i32, ptr %0, align 8, !tbaa !1151
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %159, label %5

5:                                                ; preds = %2
  %6 = load i32, ptr %1, align 8, !tbaa !1151
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %159, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 1
  %10 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 1
  %11 = load <2 x i32>, ptr %9, align 4, !tbaa !18
  %12 = load <2 x i32>, ptr %10, align 4, !tbaa !18
  %13 = icmp eq <2 x i32> %11, %12
  %14 = shufflevector <2 x i1> %13, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>
  %15 = and <2 x i1> %13, %14
  %16 = extractelement <2 x i1> %15, i64 0
  %17 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 3
  %18 = load i32, ptr %17, align 4, !tbaa !490
  %19 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 3
  %20 = load i32, ptr %19, align 4, !tbaa !490
  %21 = icmp eq i32 %18, %20
  %22 = and i1 %16, %21
  %23 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 11
  %24 = load i32, ptr %23, align 8, !tbaa !460
  %25 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 11
  %26 = load i32, ptr %25, align 8, !tbaa !460
  %27 = icmp eq i32 %24, %26
  %28 = and i1 %22, %27
  %29 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 12
  %30 = load i32, ptr %29, align 4, !tbaa !418
  %31 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 12
  %32 = load i32, ptr %31, align 4, !tbaa !418
  %33 = icmp eq i32 %30, %32
  %34 = and i1 %28, %33
  br i1 %34, label %35, label %159

35:                                               ; preds = %8
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %116, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 13
  %39 = load i32, ptr %38, align 8, !tbaa !416
  %40 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 13
  %41 = load i32, ptr %40, align 8, !tbaa !416
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %43, label %159

43:                                               ; preds = %37
  switch i32 %39, label %116 [
    i32 0, label %46
    i32 2, label %44
    i32 3, label %80
    i32 4, label %80
    i32 5, label %80
    i32 6, label %90
  ]

44:                                               ; preds = %43
  %45 = zext i32 %30 to i64
  br label %62

46:                                               ; preds = %43
  %47 = add i32 %30, 1
  %48 = tail call i32 @llvm.umax.i32(i32 %47, i32 1)
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %50, %46
  %51 = phi i64 [ 0, %46 ], [ %60, %50 ]
  %52 = phi i32 [ 1, %46 ], [ %59, %50 ]
  %53 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 14, i64 %51
  %54 = load i32, ptr %53, align 4, !tbaa !18
  %55 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 14, i64 %51
  %56 = load i32, ptr %55, align 4, !tbaa !18
  %57 = icmp eq i32 %54, %56
  %58 = zext i1 %57 to i32
  %59 = and i32 %52, %58
  %60 = add nuw nsw i64 %51, 1
  %61 = icmp eq i64 %60, %49
  br i1 %61, label %116, label %50, !llvm.loop !1157

62:                                               ; preds = %62, %44
  %63 = phi i64 [ 0, %44 ], [ %78, %62 ]
  %64 = phi i32 [ 1, %44 ], [ %77, %62 ]
  %65 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 15, i64 %63
  %66 = load i32, ptr %65, align 4, !tbaa !18
  %67 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 15, i64 %63
  %68 = load i32, ptr %67, align 4, !tbaa !18
  %69 = icmp eq i32 %66, %68
  %70 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 16, i64 %63
  %71 = load i32, ptr %70, align 4, !tbaa !18
  %72 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 16, i64 %63
  %73 = load i32, ptr %72, align 4, !tbaa !18
  %74 = icmp eq i32 %71, %73
  %75 = and i1 %69, %74
  %76 = zext i1 %75 to i32
  %77 = and i32 %64, %76
  %78 = add nuw nsw i64 %63, 1
  %79 = icmp eq i64 %78, %45
  br i1 %79, label %116, label %62, !llvm.loop !1158

80:                                               ; preds = %43, %43, %43
  %81 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 17
  %82 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 17
  %83 = load <2 x i32>, ptr %81, align 4, !tbaa !14
  %84 = load <2 x i32>, ptr %82, align 4, !tbaa !14
  %85 = icmp eq <2 x i32> %83, %84
  %86 = shufflevector <2 x i1> %85, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>
  %87 = and <2 x i1> %85, %86
  %88 = extractelement <2 x i1> %87, i64 0
  %89 = zext i1 %88 to i32
  br label %116

90:                                               ; preds = %43
  %91 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 19
  %92 = load i32, ptr %91, align 4, !tbaa !417
  %93 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 19
  %94 = load i32, ptr %93, align 4, !tbaa !417
  %95 = icmp eq i32 %92, %94
  br i1 %95, label %96, label %159

96:                                               ; preds = %90
  %97 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 20
  %98 = load ptr, ptr %97, align 8, !tbaa !437
  %99 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 20
  %100 = load ptr, ptr %99, align 8, !tbaa !437
  %101 = add i32 %92, 1
  %102 = tail call i32 @llvm.umax.i32(i32 %101, i32 1)
  %103 = zext i32 %102 to i64
  br label %104

104:                                              ; preds = %104, %96
  %105 = phi i64 [ 0, %96 ], [ %114, %104 ]
  %106 = phi i32 [ 1, %96 ], [ %113, %104 ]
  %107 = getelementptr inbounds i32, ptr %98, i64 %105
  %108 = load i32, ptr %107, align 4, !tbaa !18
  %109 = getelementptr inbounds i32, ptr %100, i64 %105
  %110 = load i32, ptr %109, align 4, !tbaa !18
  %111 = icmp eq i32 %108, %110
  %112 = zext i1 %111 to i32
  %113 = and i32 %106, %112
  %114 = add nuw nsw i64 %105, 1
  %115 = icmp eq i64 %114, %103
  br i1 %115, label %116, label %104, !llvm.loop !1159

116:                                              ; preds = %104, %80, %62, %50, %43, %35
  %117 = phi i32 [ %89, %80 ], [ 1, %35 ], [ 1, %43 ], [ %59, %50 ], [ %77, %62 ], [ %113, %104 ]
  %118 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 21
  %119 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 21
  %120 = load <4 x i32>, ptr %118, align 8, !tbaa !14
  %121 = load <4 x i32>, ptr %119, align 8, !tbaa !14
  %122 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 25
  %123 = load i32, ptr %122, align 8, !tbaa !491
  %124 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 25
  %125 = load i32, ptr %124, align 8, !tbaa !491
  %126 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 26
  %127 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 26
  %128 = load <2 x i32>, ptr %126, align 4, !tbaa !18
  %129 = load <2 x i32>, ptr %127, align 4, !tbaa !18
  %130 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 29
  %131 = load i32, ptr %130, align 8, !tbaa !495
  %132 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 29
  %133 = load i32, ptr %132, align 8, !tbaa !495
  %134 = shufflevector <4 x i32> %120, <4 x i32> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %135 = insertelement <8 x i32> %134, i32 %123, i64 4
  %136 = shufflevector <2 x i32> %128, <2 x i32> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %137 = shufflevector <8 x i32> %135, <8 x i32> %136, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 9, i32 poison>
  %138 = insertelement <8 x i32> %137, i32 %131, i64 7
  %139 = shufflevector <4 x i32> %121, <4 x i32> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %140 = insertelement <8 x i32> %139, i32 %125, i64 4
  %141 = shufflevector <2 x i32> %129, <2 x i32> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %142 = shufflevector <8 x i32> %140, <8 x i32> %141, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 9, i32 poison>
  %143 = insertelement <8 x i32> %142, i32 %133, i64 7
  %144 = icmp ne <8 x i32> %138, %143
  %145 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %0, i64 0, i32 30
  %146 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %1, i64 0, i32 30
  %147 = load <2 x i32>, ptr %145, align 4, !tbaa !14
  %148 = load <2 x i32>, ptr %146, align 4, !tbaa !14
  %149 = icmp eq <2 x i32> %147, %148
  %150 = extractelement <2 x i1> %149, i64 0
  %151 = extractelement <2 x i1> %149, i64 1
  %152 = zext i1 %151 to i32
  %153 = bitcast <8 x i1> %144 to i8
  %154 = icmp eq i8 %153, 0
  %155 = and i1 %154, %150
  %156 = zext i1 %155 to i32
  %157 = and i32 %117, %152
  %158 = and i32 %157, %156
  br label %159

159:                                              ; preds = %116, %90, %37, %8, %5, %2
  %160 = phi i32 [ %158, %116 ], [ 0, %5 ], [ 0, %2 ], [ 0, %8 ], [ 0, %37 ], [ 0, %90 ]
  ret i32 %160
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #12

; Function Attrs: nounwind optsize uwtable
define internal void @OpenRTPFile(ptr nocapture noundef readonly %0) #0 {
  %2 = tail call noalias ptr @fopen64(ptr noundef %0, ptr noundef nonnull @.str.461) #47
  store ptr %2, ptr @bits, align 8, !tbaa !13
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = load ptr, ptr @input, align 8, !tbaa !13
  %6 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.1.462, ptr noundef %5) #46
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 500) #46
  br label %7

7:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @GetRTPNALU(ptr nocapture noundef %0) #0 {
  %2 = tail call noalias dereferenceable_or_null(72) ptr @malloc(i64 noundef 72) #49
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @no_mem_exit(ptr noundef nonnull @.str.2.465) #46
  br label %5

5:                                                ; preds = %4, %1
  %6 = tail call noalias dereferenceable_or_null(65508) ptr @malloc(i64 noundef 65508) #49
  %7 = getelementptr inbounds %struct.RTPpacket_t, ptr %2, i64 0, i32 12
  store ptr %6, ptr %7, align 8, !tbaa !1160
  %8 = icmp eq ptr %6, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  tail call void @no_mem_exit(ptr noundef nonnull @.str.3.466) #46
  br label %10

10:                                               ; preds = %9, %5
  %11 = tail call noalias dereferenceable_or_null(65508) ptr @malloc(i64 noundef 65508) #49
  %12 = getelementptr inbounds %struct.RTPpacket_t, ptr %2, i64 0, i32 10
  store ptr %11, ptr %12, align 8, !tbaa !1162
  %13 = icmp eq ptr %11, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @no_mem_exit(ptr noundef nonnull @.str.4.467) #46
  br label %15

15:                                               ; preds = %14, %10
  %16 = load ptr, ptr @bits, align 8, !tbaa !13
  %17 = tail call i32 @RTPReadPacket(ptr noundef nonnull %2, ptr noundef %16) #47
  %18 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 5
  store i32 1, ptr %18, align 4, !tbaa !22
  %19 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 1
  store i32 0, ptr %19, align 4, !tbaa !20
  %20 = icmp slt i32 %17, 0
  br i1 %20, label %45, label %21

21:                                               ; preds = %15
  %22 = icmp eq i32 %17, 0
  br i1 %22, label %45, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.RTPpacket_t, ptr %2, i64 0, i32 11
  %25 = load i32, ptr %24, align 8, !tbaa !1163
  store i32 %25, ptr %19, align 4, !tbaa !20
  %26 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 6
  %27 = load ptr, ptr %26, align 8, !tbaa !21
  %28 = load ptr, ptr %12, align 8, !tbaa !1162
  %29 = zext i32 %25 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %27, ptr align 1 %28, i64 %29, i1 false)
  %30 = load ptr, ptr %26, align 8, !tbaa !21
  %31 = load i8, ptr %30, align 1, !tbaa !14
  %32 = lshr i8 %31, 7
  %33 = zext i8 %32 to i32
  store i32 %33, ptr %18, align 4, !tbaa !22
  %34 = load i8, ptr %30, align 1, !tbaa !14
  %35 = lshr i8 %34, 5
  %36 = and i8 %35, 3
  %37 = zext i8 %36 to i32
  %38 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 4
  store i32 %37, ptr %38, align 8, !tbaa !23
  %39 = load i8, ptr %30, align 1, !tbaa !14
  %40 = and i8 %39, 31
  %41 = zext i8 %40 to i32
  %42 = getelementptr inbounds %struct.NALU_t, ptr %0, i64 0, i32 3
  store i32 %41, ptr %42, align 4, !tbaa !24
  tail call void @free(ptr noundef %28) #46
  %43 = load ptr, ptr %7, align 8, !tbaa !1160
  tail call void @free(ptr noundef %43) #46
  tail call void @free(ptr noundef nonnull %2) #46
  %44 = load i32, ptr %19, align 4, !tbaa !20
  br label %45

45:                                               ; preds = %23, %21, %15
  %46 = phi i32 [ %44, %23 ], [ -1, %15 ], [ 0, %21 ]
  ret i32 %46
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @RTPReadPacket(ptr nocapture noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #48
  %4 = tail call i64 @ftell(ptr noundef %1) #47
  %5 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 13
  %6 = tail call i64 @fread(ptr noundef nonnull %5, i64 noundef 1, i64 noundef 4, ptr noundef %1) #47
  %7 = icmp eq i64 %6, 4
  br i1 %7, label %8, label %33

8:                                                ; preds = %2
  %9 = call i64 @fread(ptr noundef nonnull %3, i64 noundef 1, i64 noundef 4, ptr noundef %1) #47
  %10 = icmp eq i64 %9, 4
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = shl i64 %4, 32
  %13 = ashr exact i64 %12, 32
  %14 = tail call i32 @fseek(ptr noundef %1, i64 noundef %13, i32 noundef 0) #47
  %15 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.19)
  tail call void @exit(i32 noundef -1) #51
  unreachable

16:                                               ; preds = %8
  %17 = load i32, ptr %5, align 8, !tbaa !1164
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 12
  %20 = load ptr, ptr %19, align 8, !tbaa !1160
  %21 = tail call i64 @fread(ptr noundef %20, i64 noundef 1, i64 noundef %18, ptr noundef %1) #47
  %22 = icmp eq i64 %21, %18
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = load i32, ptr %5, align 8, !tbaa !1164
  %25 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.17.468, i32 noundef %24) #47
  tail call void @exit(i32 noundef -1) #51
  unreachable

26:                                               ; preds = %16
  %27 = tail call i32 @DecomposeRTPpacket(ptr noundef nonnull %0) #47, !range !1165
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.469)
  tail call void @exit(i32 noundef -700) #51
  unreachable

31:                                               ; preds = %26
  %32 = load i32, ptr %5, align 8, !tbaa !1164
  br label %33

33:                                               ; preds = %31, %2
  %34 = phi i32 [ %32, %31 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #48
  ret i32 %34
}

; Function Attrs: nofree nounwind optsize
declare noundef i64 @fread(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind optsize uwtable
define internal i32 @DecomposeRTPpacket(ptr nocapture noundef %0) #6 {
  %2 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 12
  %3 = load ptr, ptr %2, align 8, !tbaa !1160
  %4 = load i8, ptr %3, align 1, !tbaa !14
  %5 = lshr i8 %4, 6
  %6 = zext i8 %5 to i32
  store i32 %6, ptr %0, align 8, !tbaa !1166
  %7 = load i8, ptr %3, align 1, !tbaa !14
  %8 = lshr i8 %7, 5
  %9 = and i8 %8, 1
  %10 = zext i8 %9 to i32
  %11 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 1
  store i32 %10, ptr %11, align 4, !tbaa !1167
  %12 = load i8, ptr %3, align 1, !tbaa !14
  %13 = lshr i8 %12, 4
  %14 = and i8 %13, 1
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 2
  store i32 %15, ptr %16, align 8, !tbaa !1168
  %17 = load i8, ptr %3, align 1, !tbaa !14
  %18 = and i8 %17, 15
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 3
  store i32 %19, ptr %20, align 4, !tbaa !1169
  %21 = getelementptr inbounds i8, ptr %3, i64 1
  %22 = load i8, ptr %21, align 1, !tbaa !14
  %23 = lshr i8 %22, 7
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 4
  store i32 %24, ptr %25, align 8, !tbaa !1170
  %26 = load i8, ptr %21, align 1, !tbaa !14
  %27 = and i8 %26, 127
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 5
  store i32 %28, ptr %29, align 4, !tbaa !1171
  %30 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 6
  %31 = getelementptr inbounds i8, ptr %3, i64 2
  %32 = load i16, ptr %31, align 1
  store i16 %32, ptr %30, align 8
  %33 = load i32, ptr %30, align 8, !tbaa !1172
  %34 = trunc i32 %33 to i16
  %35 = tail call i16 @llvm.bswap.i16(i16 %34)
  %36 = zext i16 %35 to i32
  store i32 %36, ptr %30, align 8, !tbaa !1172
  %37 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 8
  %38 = getelementptr inbounds i8, ptr %3, i64 4
  %39 = load i32, ptr %38, align 1
  %40 = tail call i32 @llvm.bswap.i32(i32 %39)
  store i32 %40, ptr %37, align 8, !tbaa !1173
  %41 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 9
  %42 = getelementptr inbounds i8, ptr %3, i64 8
  %43 = load i32, ptr %42, align 1
  %44 = tail call i32 @llvm.bswap.i32(i32 %43)
  store i32 %44, ptr %41, align 4, !tbaa !1174
  %45 = icmp eq i8 %5, 2
  %46 = icmp eq i8 %9, 0
  %47 = select i1 %45, i1 %46, i1 false
  %48 = icmp eq i8 %14, 0
  %49 = select i1 %47, i1 %48, i1 false
  %50 = icmp eq i8 %18, 0
  %51 = select i1 %49, i1 %50, i1 false
  br i1 %51, label %54, label %52

52:                                               ; preds = %1
  %53 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.20)
  tail call void @DumpRTPHeader(ptr noundef nonnull %0) #47
  br label %63

54:                                               ; preds = %1
  %55 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 13
  %56 = load i32, ptr %55, align 8, !tbaa !1164
  %57 = add i32 %56, -12
  %58 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 11
  store i32 %57, ptr %58, align 8, !tbaa !1163
  %59 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 10
  %60 = load ptr, ptr %59, align 8, !tbaa !1162
  %61 = getelementptr inbounds i8, ptr %3, i64 12
  %62 = zext i32 %57 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %60, ptr nonnull align 1 %61, i64 %62, i1 false)
  br label %63

63:                                               ; preds = %54, %52
  %64 = phi i32 [ -1, %52 ], [ 0, %54 ]
  ret i32 %64
}

; Function Attrs: nofree nounwind optsize uwtable
define internal void @DumpRTPHeader(ptr nocapture noundef readonly %0) #6 {
  %2 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 12
  br label %3

3:                                                ; preds = %3, %1
  %4 = phi i64 [ 0, %1 ], [ %10, %3 ]
  %5 = load ptr, ptr %2, align 8, !tbaa !1160
  %6 = getelementptr inbounds i8, ptr %5, i64 %4
  %7 = load i8, ptr %6, align 1, !tbaa !14
  %8 = zext i8 %7 to i32
  %9 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.6.470, i32 noundef %8) #47
  %10 = add nuw nsw i64 %4, 1
  %11 = icmp eq i64 %10, 30
  br i1 %11, label %12, label %3, !llvm.loop !1175

12:                                               ; preds = %3
  %13 = load i32, ptr %0, align 8, !tbaa !1166
  %14 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7.471, i32 noundef %13) #47
  %15 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 1
  %16 = load i32, ptr %15, align 4, !tbaa !1167
  %17 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.8.472, i32 noundef %16) #47
  %18 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 2
  %19 = load i32, ptr %18, align 8, !tbaa !1168
  %20 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.9.473, i32 noundef %19) #47
  %21 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 3
  %22 = load i32, ptr %21, align 4, !tbaa !1169
  %23 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.10.474, i32 noundef %22) #47
  %24 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 4
  %25 = load i32, ptr %24, align 8, !tbaa !1170
  %26 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.11.475, i32 noundef %25) #47
  %27 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 5
  %28 = load i32, ptr %27, align 4, !tbaa !1171
  %29 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.12.476, i32 noundef %28) #47
  %30 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 6
  %31 = load i32, ptr %30, align 8, !tbaa !1172
  %32 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.13.477, i32 noundef %31) #47
  %33 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 8
  %34 = load i32, ptr %33, align 8, !tbaa !1173
  %35 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.14.478, i32 noundef %34) #47
  %36 = getelementptr inbounds %struct.RTPpacket_t, ptr %0, i64 0, i32 9
  %37 = load i32, ptr %36, align 4, !tbaa !1174
  %38 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.15.479, i32 noundef %37) #47
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @InterpretSEIMessage(ptr noundef %0, i32 noundef %1, ptr nocapture noundef %2) #0 {
  br label %4

4:                                                ; preds = %99, %3
  %5 = phi i32 [ 1, %3 ], [ %100, %99 ]
  %6 = sext i32 %5 to i64
  %7 = add i32 %5, 2
  br label %8

8:                                                ; preds = %8, %4
  %9 = phi i32 [ %17, %8 ], [ %7, %4 ]
  %10 = phi i64 [ %14, %8 ], [ %6, %4 ]
  %11 = phi i32 [ %16, %8 ], [ 0, %4 ]
  %12 = getelementptr inbounds i8, ptr %0, i64 %10
  %13 = load i8, ptr %12, align 1, !tbaa !14
  %14 = add i64 %10, 1
  %15 = icmp eq i8 %13, -1
  %16 = add nuw nsw i32 %11, 255
  %17 = add i32 %9, 1
  br i1 %15, label %8, label %18, !llvm.loop !1176

18:                                               ; preds = %8
  %.lcssa4 = phi i32 [ %9, %8 ]
  %.lcssa3 = phi i64 [ %10, %8 ]
  %.lcssa2 = phi i32 [ %11, %8 ]
  %.lcssa1 = phi i8 [ %13, %8 ]
  %.lcssa = phi i64 [ %14, %8 ]
  %19 = trunc i64 %.lcssa3 to i32
  %20 = zext i8 %.lcssa1 to i32
  %21 = add nuw nsw i32 %.lcssa2, %20
  %22 = add nsw i32 %19, 2
  %23 = shl i64 %.lcssa, 32
  %24 = ashr exact i64 %23, 32
  %25 = getelementptr inbounds i8, ptr %0, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !14
  %27 = icmp eq i8 %26, -1
  br i1 %27, label %28, label %40

28:                                               ; preds = %18
  %29 = sext i32 %.lcssa4 to i64
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ %29, %28 ], [ %34, %30 ]
  %32 = phi i32 [ 0, %28 ], [ %33, %30 ]
  %33 = add nuw nsw i32 %32, 255
  %34 = add i64 %31, 1
  %35 = getelementptr inbounds i8, ptr %0, i64 %31
  %36 = load i8, ptr %35, align 1, !tbaa !14
  %37 = icmp eq i8 %36, -1
  br i1 %37, label %30, label %38, !llvm.loop !1177

38:                                               ; preds = %30
  %.lcssa7 = phi i32 [ %33, %30 ]
  %.lcssa6 = phi i64 [ %34, %30 ]
  %.lcssa5 = phi i8 [ %36, %30 ]
  %39 = trunc i64 %.lcssa6 to i32
  br label %40

40:                                               ; preds = %38, %18
  %41 = phi i32 [ 0, %18 ], [ %.lcssa7, %38 ]
  %42 = phi i32 [ %22, %18 ], [ %39, %38 ]
  %43 = phi i8 [ %26, %18 ], [ %.lcssa5, %38 ]
  %44 = zext i8 %43 to i32
  %45 = add nuw nsw i32 %41, %44
  switch i32 %21, label %99 [
    i32 0, label %48
    i32 1, label %51
    i32 2, label %54
    i32 21, label %96
    i32 20, label %93
    i32 19, label %46
    i32 6, label %57
    i32 7, label %60
    i32 8, label %63
    i32 9, label %66
    i32 10, label %69
    i32 11, label %72
    i32 12, label %75
    i32 18, label %87
    i32 17, label %84
    i32 15, label %78
    i32 16, label %81
  ]

46:                                               ; preds = %40
  %47 = sext i32 %42 to i64
  br label %90

48:                                               ; preds = %40
  %49 = sext i32 %42 to i64
  %50 = getelementptr inbounds i8, ptr %0, i64 %49
  tail call void @interpret_buffering_period_info(ptr noundef %50, i32 noundef %45, ptr poison) #47
  br label %99

51:                                               ; preds = %40
  %52 = sext i32 %42 to i64
  %53 = getelementptr inbounds i8, ptr %0, i64 %52
  tail call void @interpret_picture_timing_info(ptr noundef %53, i32 noundef %45, ptr poison) #47
  br label %99

54:                                               ; preds = %40
  %55 = sext i32 %42 to i64
  %56 = getelementptr inbounds i8, ptr %0, i64 %55
  tail call void @interpret_pan_scan_rect_info(ptr noundef %56, i32 noundef %45, ptr poison) #47
  br label %99

57:                                               ; preds = %40
  %58 = sext i32 %42 to i64
  %59 = getelementptr inbounds i8, ptr %0, i64 %58
  tail call void @interpret_recovery_point_info(ptr noundef %59, i32 noundef %45, ptr noundef %2) #47
  br label %99

60:                                               ; preds = %40
  %61 = sext i32 %42 to i64
  %62 = getelementptr inbounds i8, ptr %0, i64 %61
  tail call void @interpret_dec_ref_pic_marking_repetition_info(ptr noundef %62, i32 noundef %45, ptr noundef %2) #47
  br label %99

63:                                               ; preds = %40
  %64 = sext i32 %42 to i64
  %65 = getelementptr inbounds i8, ptr %0, i64 %64
  tail call void @interpret_spare_pic(ptr noundef %65, i32 noundef %45, ptr noundef %2) #47
  br label %99

66:                                               ; preds = %40
  %67 = sext i32 %42 to i64
  %68 = getelementptr inbounds i8, ptr %0, i64 %67
  tail call void @interpret_scene_information(ptr noundef %68, i32 noundef %45, ptr poison) #47
  br label %99

69:                                               ; preds = %40
  %70 = sext i32 %42 to i64
  %71 = getelementptr inbounds i8, ptr %0, i64 %70
  tail call void @interpret_subsequence_info(ptr noundef %71, i32 noundef %45, ptr poison) #47
  br label %99

72:                                               ; preds = %40
  %73 = sext i32 %42 to i64
  %74 = getelementptr inbounds i8, ptr %0, i64 %73
  tail call void @interpret_subsequence_layer_characteristics_info(ptr noundef %74, i32 noundef %45, ptr poison) #47
  br label %99

75:                                               ; preds = %40
  %76 = sext i32 %42 to i64
  %77 = getelementptr inbounds i8, ptr %0, i64 %76
  tail call void @interpret_subsequence_characteristics_info(ptr noundef %77, i32 noundef %45, ptr poison) #47
  br label %99

78:                                               ; preds = %40
  %79 = sext i32 %42 to i64
  %80 = getelementptr inbounds i8, ptr %0, i64 %79
  tail call void @interpret_full_frame_snapshot_info(ptr noundef %80, i32 noundef %45, ptr poison) #47
  br label %99

81:                                               ; preds = %40
  %82 = sext i32 %42 to i64
  %83 = getelementptr inbounds i8, ptr %0, i64 %82
  tail call void @interpret_progressive_refinement_end_info(ptr noundef %83, i32 noundef %45, ptr poison) #47
  br label %99

84:                                               ; preds = %40
  %85 = sext i32 %42 to i64
  %86 = getelementptr inbounds i8, ptr %0, i64 %85
  tail call void @interpret_progressive_refinement_end_info(ptr noundef %86, i32 noundef %45, ptr poison) #47
  br label %99

87:                                               ; preds = %40
  %88 = sext i32 %42 to i64
  %89 = getelementptr inbounds i8, ptr %0, i64 %88
  tail call void @interpret_motion_constrained_slice_group_set_info(ptr noundef %89, i32 noundef %45, ptr poison) #47
  br label %90

90:                                               ; preds = %87, %46
  %91 = phi i64 [ %47, %46 ], [ %88, %87 ]
  %92 = getelementptr inbounds i8, ptr %0, i64 %91
  tail call void @interpret_film_grain_characteristics_info(ptr noundef %92, i32 noundef %45, ptr poison) #47
  br label %99

93:                                               ; preds = %40
  %94 = sext i32 %42 to i64
  %95 = getelementptr inbounds i8, ptr %0, i64 %94
  tail call void @interpret_deblocking_filter_display_preference_info(ptr noundef %95, i32 noundef %45, ptr poison) #47
  br label %99

96:                                               ; preds = %40
  %97 = sext i32 %42 to i64
  %98 = getelementptr inbounds i8, ptr %0, i64 %97
  tail call void @interpret_stereo_video_info_info(ptr noundef %98, i32 noundef %45, ptr poison) #47
  br label %99

99:                                               ; preds = %96, %93, %90, %84, %81, %78, %75, %72, %69, %66, %63, %60, %57, %54, %51, %48, %40
  %100 = add nsw i32 %45, %42
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, ptr %0, i64 %101
  %103 = load i8, ptr %102, align 1, !tbaa !14
  %104 = icmp eq i8 %103, -128
  br i1 %104, label %105, label %4, !llvm.loop !1178

105:                                              ; preds = %99
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_buffering_period_info(ptr noundef %0, i32 noundef %1, ptr nocapture readnone %2) #0 {
  %4 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  store i32 %1, ptr %5, align 4, !tbaa !561
  %6 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  store ptr %0, ptr %6, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  store i32 0, ptr %7, align 8, !tbaa !450
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %8 = tail call i32 @ue_v(ptr noundef nonnull @.str.74.575, ptr noundef %4) #46
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [32 x %struct.seq_parameter_set_rbsp_t], ptr @SeqParSet, i64 0, i64 %9
  tail call void @activate_sps(ptr noundef nonnull %10) #46
  %11 = getelementptr inbounds [32 x %struct.seq_parameter_set_rbsp_t], ptr @SeqParSet, i64 0, i64 %9, i32 37
  %12 = load i32, ptr %11, align 4, !tbaa !910
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %58, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds [32 x %struct.seq_parameter_set_rbsp_t], ptr @SeqParSet, i64 0, i64 %9, i32 38, i32 20
  %16 = load i32, ptr %15, align 8, !tbaa !1126
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds [32 x %struct.seq_parameter_set_rbsp_t], ptr @SeqParSet, i64 0, i64 %9, i32 38, i32 21
  %20 = load i32, ptr %19, align 4, !tbaa !1179
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %36, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds [32 x %struct.seq_parameter_set_rbsp_t], ptr @SeqParSet, i64 0, i64 %9, i32 38, i32 21, i32 6
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i32 [ 0, %22 ], [ %32, %24 ]
  %26 = load i32, ptr %23, align 8, !tbaa !1180
  %27 = add i32 %26, 1
  %28 = tail call i32 @u_v(i32 noundef %27, ptr noundef nonnull @.str.75.576, ptr noundef %4) #46
  %29 = load i32, ptr %23, align 8, !tbaa !1180
  %30 = add i32 %29, 1
  %31 = tail call i32 @u_v(i32 noundef %30, ptr noundef nonnull @.str.76.577, ptr noundef %4) #46
  %32 = add nuw i32 %25, 1
  %33 = load i32, ptr %19, align 4, !tbaa !1179
  %34 = add i32 %33, 1
  %35 = icmp ult i32 %32, %34
  br i1 %35, label %24, label %36, !llvm.loop !1181

36:                                               ; preds = %24, %18, %14
  %37 = getelementptr inbounds [32 x %struct.seq_parameter_set_rbsp_t], ptr @SeqParSet, i64 0, i64 %9, i32 38, i32 22
  %38 = load i32, ptr %37, align 8, !tbaa !1127
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %58, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds [32 x %struct.seq_parameter_set_rbsp_t], ptr @SeqParSet, i64 0, i64 %9, i32 38, i32 23
  %42 = load i32, ptr %41, align 4, !tbaa !1182
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %58, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds [32 x %struct.seq_parameter_set_rbsp_t], ptr @SeqParSet, i64 0, i64 %9, i32 38, i32 23, i32 6
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i32 [ 0, %44 ], [ %54, %46 ]
  %48 = load i32, ptr %45, align 8, !tbaa !1183
  %49 = add i32 %48, 1
  %50 = tail call i32 @u_v(i32 noundef %49, ptr noundef nonnull @.str.75.576, ptr noundef %4) #46
  %51 = load i32, ptr %45, align 8, !tbaa !1183
  %52 = add i32 %51, 1
  %53 = tail call i32 @u_v(i32 noundef %52, ptr noundef nonnull @.str.76.577, ptr noundef %4) #46
  %54 = add nuw i32 %47, 1
  %55 = load i32, ptr %41, align 4, !tbaa !1182
  %56 = add i32 %55, 1
  %57 = icmp ult i32 %54, %56
  br i1 %57, label %46, label %58, !llvm.loop !1184

58:                                               ; preds = %46, %40, %36, %3
  tail call void @free(ptr noundef %4) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_picture_timing_info(ptr noundef %0, i32 noundef %1, ptr nocapture readnone %2) #0 {
  %4 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = load ptr, ptr @stderr, align 8, !tbaa !13
  %8 = tail call i64 @fwrite(ptr nonnull @.str.77.555, i64 52, i64 1, ptr %7) #53
  br label %110

9:                                                ; preds = %3
  %10 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %11 = getelementptr inbounds %struct.Bitstream, ptr %10, i64 0, i32 3
  store i32 %1, ptr %11, align 4, !tbaa !561
  %12 = getelementptr inbounds %struct.Bitstream, ptr %10, i64 0, i32 4
  store ptr %0, ptr %12, align 8, !tbaa !218
  %13 = getelementptr inbounds %struct.Bitstream, ptr %10, i64 0, i32 2
  store i32 0, ptr %13, align 8, !tbaa !450
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %14 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %4, i64 0, i32 37
  %15 = load i32, ptr %14, align 4, !tbaa !910
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %109, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %4, i64 0, i32 38, i32 20
  %19 = load i32, ptr %18, align 4, !tbaa !1126
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %4, i64 0, i32 38, i32 22
  %23 = load i32, ptr %22, align 4, !tbaa !1127
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %44, label %28

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %4, i64 0, i32 38, i32 21, i32 7
  %27 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %4, i64 0, i32 38, i32 21, i32 8
  br label %31

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %4, i64 0, i32 38, i32 23, i32 8
  %30 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %4, i64 0, i32 38, i32 23, i32 7
  br label %31

31:                                               ; preds = %28, %25
  %32 = phi ptr [ %29, %28 ], [ %27, %25 ]
  %33 = phi ptr [ %30, %28 ], [ %26, %25 ]
  %34 = load i32, ptr %33, align 4, !tbaa !18
  %35 = load i32, ptr %32, align 4, !tbaa !18
  %36 = add i32 %34, 1
  %37 = add i32 %35, 1
  %38 = tail call i32 @u_v(i32 noundef %36, ptr noundef nonnull @.str.78.556, ptr noundef nonnull %10) #46
  %39 = tail call i32 @u_v(i32 noundef %37, ptr noundef nonnull @.str.79.557, ptr noundef nonnull %10) #46
  %40 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %40, i64 0, i32 37
  %42 = load i32, ptr %41, align 4, !tbaa !910
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %109, label %44

44:                                               ; preds = %31, %21
  %45 = phi ptr [ %40, %31 ], [ %4, %21 ]
  %46 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %45, i64 0, i32 38, i32 25
  %47 = load i32, ptr %46, align 4, !tbaa !1129
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %109, label %49

49:                                               ; preds = %44
  %50 = tail call i32 @u_v(i32 noundef 4, ptr noundef nonnull @.str.80.558, ptr noundef nonnull %10) #46
  %51 = icmp ult i32 %50, 9
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  tail call void @error(ptr noundef nonnull @.str.81.559, i32 noundef 500) #46
  br label %109

53:                                               ; preds = %49
  %54 = sext i32 %50 to i64
  %55 = getelementptr inbounds [9 x i32], ptr @switch.table.interpret_picture_timing_info, i64 0, i64 %54
  %56 = load i32, ptr %55, align 4
  br label %57

57:                                               ; preds = %106, %53
  %58 = phi i32 [ %107, %106 ], [ 0, %53 ]
  %59 = tail call i32 @u_1(ptr noundef nonnull @.str.82.560, ptr noundef %10) #46
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %106, label %61

61:                                               ; preds = %57
  %62 = tail call i32 @u_v(i32 noundef 2, ptr noundef nonnull @.str.83.561, ptr noundef %10) #46
  %63 = tail call i32 @u_1(ptr noundef nonnull @.str.84.562, ptr noundef %10) #46
  %64 = tail call i32 @u_v(i32 noundef 5, ptr noundef nonnull @.str.85.563, ptr noundef %10) #46
  %65 = tail call i32 @u_1(ptr noundef nonnull @.str.86.564, ptr noundef %10) #46
  %66 = tail call i32 @u_1(ptr noundef nonnull @.str.87.565, ptr noundef %10) #46
  %67 = tail call i32 @u_1(ptr noundef nonnull @.str.88.566, ptr noundef %10) #46
  %68 = tail call i32 @u_v(i32 noundef 8, ptr noundef nonnull @.str.89.567, ptr noundef %10) #46
  %69 = icmp eq i32 %65, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %61
  %71 = tail call i32 @u_v(i32 noundef 6, ptr noundef nonnull @.str.90.568, ptr noundef %10) #46
  %72 = tail call i32 @u_v(i32 noundef 6, ptr noundef nonnull @.str.91.569, ptr noundef %10) #46
  br label %84

73:                                               ; preds = %61
  %74 = tail call i32 @u_1(ptr noundef nonnull @.str.93.570, ptr noundef %10) #46
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %86, label %76

76:                                               ; preds = %73
  %77 = tail call i32 @u_v(i32 noundef 6, ptr noundef nonnull @.str.90.568, ptr noundef %10) #46
  %78 = tail call i32 @u_1(ptr noundef nonnull @.str.94.571, ptr noundef %10) #46
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %76
  %81 = tail call i32 @u_v(i32 noundef 6, ptr noundef nonnull @.str.91.569, ptr noundef %10) #46
  %82 = tail call i32 @u_1(ptr noundef nonnull @.str.95.572, ptr noundef %10) #46
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %80, %70
  %85 = tail call i32 @u_v(i32 noundef 5, ptr noundef nonnull @.str.92.573, ptr noundef %10) #46
  br label %86

86:                                               ; preds = %84, %80, %76, %73
  %87 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %88 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %87, i64 0, i32 38, i32 22
  %89 = load i32, ptr %88, align 4, !tbaa !1127
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %87, i64 0, i32 38, i32 23, i32 9
  br label %99

93:                                               ; preds = %86
  %94 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %87, i64 0, i32 38, i32 20
  %95 = load i32, ptr %94, align 4, !tbaa !1126
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %87, i64 0, i32 38, i32 21, i32 9
  br label %99

99:                                               ; preds = %97, %91
  %100 = phi ptr [ %92, %91 ], [ %98, %97 ]
  %101 = load i32, ptr %100, align 4, !tbaa !18
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %99, %93
  %104 = phi i32 [ %101, %99 ], [ 24, %93 ]
  %105 = tail call i32 @u_v(i32 noundef %104, ptr noundef nonnull @.str.96.574, ptr noundef %10) #46
  br label %106

106:                                              ; preds = %103, %99, %57
  %107 = add nuw nsw i32 %58, 1
  %108 = icmp eq i32 %107, %56
  br i1 %108, label %109, label %57, !llvm.loop !1185

109:                                              ; preds = %106, %52, %44, %31, %9
  tail call void @free(ptr noundef %10) #46
  br label %110

110:                                              ; preds = %109, %6
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_pan_scan_rect_info(ptr noundef %0, i32 noundef %1, ptr nocapture readnone %2) #0 {
  %4 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  store i32 %1, ptr %5, align 4, !tbaa !561
  %6 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  store ptr %0, ptr %6, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  store i32 0, ptr %7, align 8, !tbaa !450
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %8 = tail call i32 @ue_v(ptr noundef nonnull @.str.26.514, ptr noundef %4) #46
  %9 = tail call i32 @u_1(ptr noundef nonnull @.str.27.548, ptr noundef %4) #46
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %3
  %12 = tail call i32 @ue_v(ptr noundef nonnull @.str.28.549, ptr noundef nonnull %4) #46
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %14, %11
  %15 = phi i32 [ %20, %14 ], [ 0, %11 ]
  %16 = tail call i32 @se_v(ptr noundef nonnull @.str.29.550, ptr noundef %4) #46
  %17 = tail call i32 @se_v(ptr noundef nonnull @.str.30.551, ptr noundef %4) #46
  %18 = tail call i32 @se_v(ptr noundef nonnull @.str.31.552, ptr noundef %4) #46
  %19 = tail call i32 @se_v(ptr noundef nonnull @.str.32.553, ptr noundef %4) #46
  %20 = add nuw i32 %15, 1
  %21 = icmp eq i32 %15, %12
  br i1 %21, label %22, label %14, !llvm.loop !1186

22:                                               ; preds = %14, %11
  %23 = tail call i32 @ue_v(ptr noundef nonnull @.str.33.554, ptr noundef %4) #46
  br label %24

24:                                               ; preds = %22, %3
  tail call void @free(ptr noundef %4) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_recovery_point_info(ptr noundef %0, i32 noundef %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  store i32 %1, ptr %5, align 4, !tbaa !561
  %6 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  store ptr %0, ptr %6, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  store i32 0, ptr %7, align 8, !tbaa !450
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %8 = tail call i32 @ue_v(ptr noundef nonnull @.str.34.545, ptr noundef %4) #46
  %9 = tail call i32 @u_1(ptr noundef nonnull @.str.35.512, ptr noundef %4) #46
  %10 = tail call i32 @u_1(ptr noundef nonnull @.str.36.546, ptr noundef %4) #46
  %11 = tail call i32 @u_v(i32 noundef 2, ptr noundef nonnull @.str.37.547, ptr noundef %4) #46
  %12 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 135
  store i32 1, ptr %12, align 8, !tbaa !556
  %13 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 137
  store i32 %8, ptr %13, align 8, !tbaa !610
  tail call void @free(ptr noundef %4) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_dec_ref_pic_marking_repetition_info(ptr noundef %0, i32 noundef %1, ptr nocapture noundef %2) #0 {
  %4 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  store i32 %1, ptr %5, align 4, !tbaa !561
  %6 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  store ptr %0, ptr %6, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  store i32 0, ptr %7, align 8, !tbaa !450
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %8 = tail call i32 @u_1(ptr noundef nonnull @.str.38.543, ptr noundef %4) #46
  %9 = tail call i32 @ue_v(ptr noundef nonnull @.str.39.544, ptr noundef %4) #46
  %10 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 46
  %11 = load ptr, ptr %10, align 8, !tbaa !502
  %12 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 83
  %13 = load i32, ptr %12, align 4, !tbaa !454
  %14 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 94
  %15 = load <2 x i32>, ptr %14, align 8, !tbaa !18
  %16 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 96
  %17 = load i32, ptr %16, align 8, !tbaa !508
  store i32 %8, ptr %12, align 4, !tbaa !454
  store ptr null, ptr %10, align 8, !tbaa !502
  tail call void @dec_ref_pic_marking(ptr noundef %4) #46
  %18 = load ptr, ptr %10, align 8, !tbaa !502
  %19 = icmp eq ptr %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %20, %3
  %21 = phi ptr [ %24, %20 ], [ %18, %3 ]
  %22 = getelementptr inbounds %struct.DecRefPicMarking_s, ptr %21, i64 0, i32 5
  %23 = load ptr, ptr %22, align 8, !tbaa !503
  store ptr %23, ptr %10, align 8, !tbaa !502
  tail call void @free(ptr noundef nonnull %21) #46
  %24 = load ptr, ptr %10, align 8, !tbaa !502
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %20, !llvm.loop !1187

26:                                               ; preds = %20, %3
  store ptr %11, ptr %10, align 8, !tbaa !502
  store i32 %13, ptr %12, align 4, !tbaa !454
  store <2 x i32> %15, ptr %14, align 8, !tbaa !18
  store i32 %17, ptr %16, align 8, !tbaa !508
  tail call void @free(ptr noundef %4) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_spare_pic(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #48
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %5 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %6 = getelementptr inbounds %struct.Bitstream, ptr %5, i64 0, i32 3
  store i32 %1, ptr %6, align 4, !tbaa !561
  %7 = getelementptr inbounds %struct.Bitstream, ptr %5, i64 0, i32 4
  store ptr %0, ptr %7, align 8, !tbaa !218
  %8 = getelementptr inbounds %struct.Bitstream, ptr %5, i64 0, i32 2
  store i32 0, ptr %8, align 8, !tbaa !450
  %9 = tail call i32 @ue_v(ptr noundef nonnull @.str.536, ptr noundef %5) #46
  %10 = tail call i32 @ue_v(ptr noundef nonnull @.str.1.537, ptr noundef %5) #46
  %11 = add i32 %10, 1
  %12 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 12
  %13 = load i32, ptr %12, align 4, !tbaa !338
  %14 = sdiv i32 %13, 16
  %15 = getelementptr inbounds %struct.img_par, ptr %2, i64 0, i32 11
  %16 = load i32, ptr %15, align 8, !tbaa !337
  %17 = sdiv i32 %16, 16
  %18 = call i32 @get_mem3D(ptr noundef nonnull %4, i32 noundef %11, i32 noundef %14, i32 noundef %17) #46
  %19 = icmp slt i32 %10, 0
  br i1 %19, label %246, label %20

20:                                               ; preds = %3
  %21 = zext i32 %11 to i64
  br label %22

22:                                               ; preds = %243, %20
  %23 = phi i64 [ 0, %20 ], [ %244, %243 ]
  %24 = call i32 @ue_v(ptr noundef nonnull @.str.2.538, ptr noundef %5) #46
  %25 = call i32 @ue_v(ptr noundef nonnull @.str.3.539, ptr noundef %5) #46
  switch i32 %25, label %241 [
    i32 0, label %31
    i32 1, label %26
    i32 2, label %92
  ]

26:                                               ; preds = %22
  %27 = load i32, ptr %12, align 4, !tbaa !338
  %28 = icmp sgt i32 %27, 15
  br i1 %28, label %29, label %243

29:                                               ; preds = %26
  %30 = load i32, ptr %15, align 8, !tbaa !337
  br label %63

31:                                               ; preds = %22
  %32 = load i32, ptr %12, align 4, !tbaa !338
  %33 = icmp sgt i32 %32, 15
  br i1 %33, label %34, label %243

34:                                               ; preds = %31
  %35 = load i32, ptr %15, align 8, !tbaa !337
  br label %36

36:                                               ; preds = %56, %34
  %37 = phi i32 [ %32, %34 ], [ %57, %56 ]
  %38 = phi i32 [ %35, %34 ], [ %58, %56 ]
  %39 = phi i64 [ 0, %34 ], [ %59, %56 ]
  %40 = icmp sgt i32 %38, 15
  br i1 %40, label %41, label %56

41:                                               ; preds = %41, %36
  %42 = phi i64 [ %49, %41 ], [ 0, %36 ]
  %43 = load ptr, ptr %4, align 8, !tbaa !13
  %44 = getelementptr inbounds ptr, ptr %43, i64 %23
  %45 = load ptr, ptr %44, align 8, !tbaa !13
  %46 = getelementptr inbounds ptr, ptr %45, i64 %39
  %47 = load ptr, ptr %46, align 8, !tbaa !13
  %48 = getelementptr inbounds i8, ptr %47, i64 %42
  store i8 0, ptr %48, align 1, !tbaa !14
  %49 = add nuw nsw i64 %42, 1
  %50 = load i32, ptr %15, align 8, !tbaa !337
  %51 = sdiv i32 %50, 16
  %52 = sext i32 %51 to i64
  %53 = icmp slt i64 %49, %52
  br i1 %53, label %41, label %54, !llvm.loop !1188

54:                                               ; preds = %41
  %.lcssa11 = phi i32 [ %50, %41 ]
  %55 = load i32, ptr %12, align 4, !tbaa !338
  br label %56

56:                                               ; preds = %54, %36
  %57 = phi i32 [ %55, %54 ], [ %37, %36 ]
  %58 = phi i32 [ %.lcssa11, %54 ], [ %38, %36 ]
  %59 = add nuw nsw i64 %39, 1
  %60 = sdiv i32 %57, 16
  %61 = sext i32 %60 to i64
  %62 = icmp slt i64 %59, %61
  br i1 %62, label %36, label %243, !llvm.loop !1189

63:                                               ; preds = %85, %29
  %64 = phi i32 [ %27, %29 ], [ %86, %85 ]
  %65 = phi i32 [ %30, %29 ], [ %87, %85 ]
  %66 = phi i64 [ 0, %29 ], [ %88, %85 ]
  %67 = icmp sgt i32 %65, 15
  br i1 %67, label %68, label %85

68:                                               ; preds = %68, %63
  %69 = phi i64 [ %78, %68 ], [ 0, %63 ]
  %70 = call i32 @u_1(ptr noundef nonnull @.str.4.540, ptr noundef %5) #46
  %71 = trunc i32 %70 to i8
  %72 = load ptr, ptr %4, align 8, !tbaa !13
  %73 = getelementptr inbounds ptr, ptr %72, i64 %23
  %74 = load ptr, ptr %73, align 8, !tbaa !13
  %75 = getelementptr inbounds ptr, ptr %74, i64 %66
  %76 = load ptr, ptr %75, align 8, !tbaa !13
  %77 = getelementptr inbounds i8, ptr %76, i64 %69
  store i8 %71, ptr %77, align 1, !tbaa !14
  %78 = add nuw nsw i64 %69, 1
  %79 = load i32, ptr %15, align 8, !tbaa !337
  %80 = sdiv i32 %79, 16
  %81 = sext i32 %80 to i64
  %82 = icmp slt i64 %78, %81
  br i1 %82, label %68, label %83, !llvm.loop !1190

83:                                               ; preds = %68
  %.lcssa10 = phi i32 [ %79, %68 ]
  %84 = load i32, ptr %12, align 4, !tbaa !338
  br label %85

85:                                               ; preds = %83, %63
  %86 = phi i32 [ %84, %83 ], [ %64, %63 ]
  %87 = phi i32 [ %.lcssa10, %83 ], [ %65, %63 ]
  %88 = add nuw nsw i64 %66, 1
  %89 = sdiv i32 %86, 16
  %90 = sext i32 %89 to i64
  %91 = icmp slt i64 %88, %90
  br i1 %91, label %63, label %243, !llvm.loop !1191

92:                                               ; preds = %22
  %93 = load i32, ptr %12, align 4, !tbaa !338
  %94 = icmp sgt i32 %93, 15
  br i1 %94, label %95, label %243

95:                                               ; preds = %92
  %96 = lshr i32 %93, 4
  %97 = add nsw i32 %96, -1
  %98 = lshr i32 %97, 1
  %99 = load i32, ptr %15, align 8, !tbaa !337
  %100 = sdiv i32 %99, 16
  %101 = add nsw i32 %100, -1
  %102 = sdiv i32 %101, 2
  br label %103

103:                                              ; preds = %226, %95
  %104 = phi i32 [ %93, %95 ], [ %227, %226 ]
  %105 = phi i32 [ %99, %95 ], [ %228, %226 ]
  %106 = phi i32 [ 1, %95 ], [ %237, %226 ]
  %107 = phi i32 [ 0, %95 ], [ %236, %226 ]
  %108 = phi i32 [ %98, %95 ], [ %235, %226 ]
  %109 = phi i32 [ %98, %95 ], [ %234, %226 ]
  %110 = phi i32 [ %102, %95 ], [ %233, %226 ]
  %111 = phi i32 [ %102, %95 ], [ %232, %226 ]
  %112 = phi i32 [ 0, %95 ], [ %238, %226 ]
  %113 = phi i32 [ %102, %95 ], [ %231, %226 ]
  %114 = phi i32 [ %98, %95 ], [ %230, %226 ]
  %115 = phi i32 [ -1, %95 ], [ %229, %226 ]
  %116 = icmp sgt i32 %105, 15
  br i1 %116, label %117, label %226

117:                                              ; preds = %211, %103
  %118 = phi i32 [ %219, %211 ], [ %106, %103 ]
  %119 = phi i32 [ %218, %211 ], [ %107, %103 ]
  %120 = phi i32 [ %217, %211 ], [ %108, %103 ]
  %121 = phi i32 [ %216, %211 ], [ %109, %103 ]
  %122 = phi i32 [ %215, %211 ], [ %110, %103 ]
  %123 = phi i32 [ %214, %211 ], [ %111, %103 ]
  %124 = phi i32 [ %220, %211 ], [ 0, %103 ]
  %125 = phi i32 [ %213, %211 ], [ %113, %103 ]
  %126 = phi i32 [ %212, %211 ], [ %114, %103 ]
  %127 = phi i32 [ %143, %211 ], [ %115, %103 ]
  %128 = icmp slt i32 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %117
  %130 = call i32 @ue_v(ptr noundef nonnull @.str.5.541, ptr noundef %5) #46
  br label %131

131:                                              ; preds = %129, %117
  %132 = phi i32 [ %130, %129 ], [ %127, %117 ]
  %133 = icmp slt i32 %132, 1
  %134 = load ptr, ptr %4, align 8, !tbaa !13
  %135 = getelementptr inbounds ptr, ptr %134, i64 %23
  %136 = load ptr, ptr %135, align 8, !tbaa !13
  %137 = sext i32 %126 to i64
  %138 = getelementptr inbounds ptr, ptr %136, i64 %137
  %139 = load ptr, ptr %138, align 8, !tbaa !13
  %140 = sext i32 %125 to i64
  %141 = getelementptr inbounds i8, ptr %139, i64 %140
  %142 = zext i1 %133 to i8
  store i8 %142, ptr %141, align 1, !tbaa !14
  %143 = add nsw i32 %132, -1
  %144 = icmp eq i32 %119, -1
  %145 = icmp eq i32 %118, 0
  %146 = select i1 %144, i1 %145, i1 false
  br i1 %146, label %147, label %159

147:                                              ; preds = %131
  %148 = icmp sgt i32 %125, %123
  br i1 %148, label %149, label %151

149:                                              ; preds = %147
  %150 = add nsw i32 %125, -1
  br label %211

151:                                              ; preds = %147
  %152 = icmp eq i32 %125, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %151
  %154 = add nsw i32 %120, 1
  br label %211

155:                                              ; preds = %151
  %156 = icmp eq i32 %125, %123
  br i1 %156, label %157, label %211

157:                                              ; preds = %155
  %158 = add nsw i32 %123, -1
  br label %211

159:                                              ; preds = %131
  %160 = icmp eq i32 %119, 1
  %161 = select i1 %160, i1 %145, i1 false
  br i1 %161, label %162, label %177

162:                                              ; preds = %159
  %163 = icmp slt i32 %125, %122
  br i1 %163, label %164, label %166

164:                                              ; preds = %162
  %165 = add nsw i32 %125, 1
  br label %211

166:                                              ; preds = %162
  %167 = load i32, ptr %15, align 8, !tbaa !337
  %168 = sdiv i32 %167, 16
  %169 = add nsw i32 %168, -1
  %170 = icmp eq i32 %125, %169
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  %172 = add nsw i32 %121, -1
  br label %211

173:                                              ; preds = %166
  %174 = icmp eq i32 %125, %122
  br i1 %174, label %175, label %211

175:                                              ; preds = %173
  %176 = add nsw i32 %122, 1
  br label %211

177:                                              ; preds = %159
  %178 = icmp eq i32 %119, 0
  %179 = icmp eq i32 %118, -1
  %180 = select i1 %178, i1 %179, i1 false
  br i1 %180, label %181, label %193

181:                                              ; preds = %177
  %182 = icmp sgt i32 %126, %121
  br i1 %182, label %183, label %185

183:                                              ; preds = %181
  %184 = add nsw i32 %126, -1
  br label %211

185:                                              ; preds = %181
  %186 = icmp eq i32 %126, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %185
  %188 = add nsw i32 %123, -1
  br label %211

189:                                              ; preds = %185
  %190 = icmp eq i32 %126, %121
  br i1 %190, label %191, label %211

191:                                              ; preds = %189
  %192 = add nsw i32 %121, -1
  br label %211

193:                                              ; preds = %177
  %194 = icmp eq i32 %118, 1
  %195 = select i1 %178, i1 %194, i1 false
  br i1 %195, label %196, label %211

196:                                              ; preds = %193
  %197 = icmp slt i32 %126, %120
  br i1 %197, label %198, label %200

198:                                              ; preds = %196
  %199 = add nsw i32 %126, 1
  br label %211

200:                                              ; preds = %196
  %201 = load i32, ptr %12, align 4, !tbaa !338
  %202 = sdiv i32 %201, 16
  %203 = add nsw i32 %202, -1
  %204 = icmp eq i32 %126, %203
  br i1 %204, label %205, label %207

205:                                              ; preds = %200
  %206 = add nsw i32 %122, 1
  br label %211

207:                                              ; preds = %200
  %208 = icmp eq i32 %126, %120
  br i1 %208, label %209, label %211

209:                                              ; preds = %207
  %210 = add nsw i32 %120, 1
  br label %211

211:                                              ; preds = %209, %207, %205, %198, %193, %191, %189, %187, %183, %175, %173, %171, %164, %157, %155, %153, %149
  %212 = phi i32 [ %126, %149 ], [ %154, %153 ], [ %126, %157 ], [ %126, %155 ], [ %126, %164 ], [ %172, %171 ], [ %126, %175 ], [ %126, %173 ], [ %184, %183 ], [ 0, %187 ], [ %192, %191 ], [ %126, %189 ], [ %199, %198 ], [ %126, %205 ], [ %210, %209 ], [ %126, %207 ], [ %126, %193 ]
  %213 = phi i32 [ %150, %149 ], [ 0, %153 ], [ %158, %157 ], [ %125, %155 ], [ %165, %164 ], [ %125, %171 ], [ %176, %175 ], [ %125, %173 ], [ %125, %183 ], [ %188, %187 ], [ %125, %191 ], [ %125, %189 ], [ %125, %198 ], [ %206, %205 ], [ %125, %209 ], [ %125, %207 ], [ %125, %193 ]
  %214 = phi i32 [ %123, %149 ], [ %123, %153 ], [ %158, %157 ], [ %123, %155 ], [ %123, %164 ], [ %123, %171 ], [ %123, %175 ], [ %123, %173 ], [ %123, %183 ], [ %188, %187 ], [ %123, %191 ], [ %123, %189 ], [ %123, %198 ], [ %123, %205 ], [ %123, %209 ], [ %123, %207 ], [ %123, %193 ]
  %215 = phi i32 [ %122, %149 ], [ %122, %153 ], [ %122, %157 ], [ %122, %155 ], [ %122, %164 ], [ %122, %171 ], [ %176, %175 ], [ %122, %173 ], [ %122, %183 ], [ %122, %187 ], [ %122, %191 ], [ %122, %189 ], [ %122, %198 ], [ %206, %205 ], [ %122, %209 ], [ %122, %207 ], [ %122, %193 ]
  %216 = phi i32 [ %121, %149 ], [ %121, %153 ], [ %121, %157 ], [ %121, %155 ], [ %121, %164 ], [ %172, %171 ], [ %121, %175 ], [ %121, %173 ], [ %121, %183 ], [ %121, %187 ], [ %192, %191 ], [ %121, %189 ], [ %121, %198 ], [ %121, %205 ], [ %121, %209 ], [ %121, %207 ], [ %121, %193 ]
  %217 = phi i32 [ %120, %149 ], [ %154, %153 ], [ %120, %157 ], [ %120, %155 ], [ %120, %164 ], [ %120, %171 ], [ %120, %175 ], [ %120, %173 ], [ %120, %183 ], [ %120, %187 ], [ %120, %191 ], [ %120, %189 ], [ %120, %198 ], [ %120, %205 ], [ %210, %209 ], [ %120, %207 ], [ %120, %193 ]
  %218 = phi i32 [ -1, %149 ], [ 1, %153 ], [ 0, %157 ], [ -1, %155 ], [ 1, %164 ], [ -1, %171 ], [ 0, %175 ], [ 1, %173 ], [ 0, %183 ], [ 0, %187 ], [ -1, %191 ], [ 0, %189 ], [ 0, %198 ], [ 0, %205 ], [ 1, %209 ], [ 0, %207 ], [ %119, %193 ]
  %219 = phi i32 [ 0, %149 ], [ 0, %153 ], [ 1, %157 ], [ 0, %155 ], [ 0, %164 ], [ 0, %171 ], [ -1, %175 ], [ 0, %173 ], [ -1, %183 ], [ 1, %187 ], [ 0, %191 ], [ -1, %189 ], [ 1, %198 ], [ -1, %205 ], [ 0, %209 ], [ 1, %207 ], [ %118, %193 ]
  %220 = add nuw nsw i32 %124, 1
  %221 = load i32, ptr %15, align 8, !tbaa !337
  %222 = sdiv i32 %221, 16
  %223 = icmp slt i32 %220, %222
  br i1 %223, label %117, label %224, !llvm.loop !1192

224:                                              ; preds = %211
  %.lcssa9 = phi i32 [ %212, %211 ]
  %.lcssa8 = phi i32 [ %213, %211 ]
  %.lcssa7 = phi i32 [ %214, %211 ]
  %.lcssa6 = phi i32 [ %215, %211 ]
  %.lcssa5 = phi i32 [ %216, %211 ]
  %.lcssa4 = phi i32 [ %217, %211 ]
  %.lcssa3 = phi i32 [ %218, %211 ]
  %.lcssa2 = phi i32 [ %219, %211 ]
  %.lcssa1 = phi i32 [ %221, %211 ]
  %.lcssa = phi i32 [ %143, %211 ]
  %225 = load i32, ptr %12, align 4, !tbaa !338
  br label %226

226:                                              ; preds = %224, %103
  %227 = phi i32 [ %104, %103 ], [ %225, %224 ]
  %228 = phi i32 [ %105, %103 ], [ %.lcssa1, %224 ]
  %229 = phi i32 [ %115, %103 ], [ %.lcssa, %224 ]
  %230 = phi i32 [ %114, %103 ], [ %.lcssa9, %224 ]
  %231 = phi i32 [ %113, %103 ], [ %.lcssa8, %224 ]
  %232 = phi i32 [ %111, %103 ], [ %.lcssa7, %224 ]
  %233 = phi i32 [ %110, %103 ], [ %.lcssa6, %224 ]
  %234 = phi i32 [ %109, %103 ], [ %.lcssa5, %224 ]
  %235 = phi i32 [ %108, %103 ], [ %.lcssa4, %224 ]
  %236 = phi i32 [ %107, %103 ], [ %.lcssa3, %224 ]
  %237 = phi i32 [ %106, %103 ], [ %.lcssa2, %224 ]
  %238 = add nuw nsw i32 %112, 1
  %239 = sdiv i32 %227, 16
  %240 = icmp slt i32 %238, %239
  br i1 %240, label %103, label %243, !llvm.loop !1193

241:                                              ; preds = %22
  %.lcssa12 = phi i32 [ %25, %22 ]
  %242 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.6.542, i32 noundef %.lcssa12) #47
  call void @exit(i32 noundef 0) #51
  unreachable

243:                                              ; preds = %226, %92, %85, %56, %31, %26
  %244 = add nuw nsw i64 %23, 1
  %245 = icmp eq i64 %244, %21
  br i1 %245, label %246, label %22, !llvm.loop !1194

246:                                              ; preds = %243, %3
  %247 = load ptr, ptr %4, align 8, !tbaa !13
  call void @free_mem3D(ptr noundef %247, i32 noundef %11) #46
  call void @free(ptr noundef %5) #46
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_scene_information(ptr noundef %0, i32 noundef %1, ptr nocapture readnone %2) #0 {
  %4 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  store i32 %1, ptr %5, align 4, !tbaa !561
  %6 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  store ptr %0, ptr %6, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  store i32 0, ptr %7, align 8, !tbaa !450
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %8 = tail call i32 @ue_v(ptr noundef nonnull @.str.24.534, ptr noundef %4) #46
  %9 = tail call i32 @ue_v(ptr noundef nonnull @.str.25.535, ptr noundef %4) #46
  %10 = icmp sgt i32 %9, 3
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = tail call i32 @ue_v(ptr noundef nonnull @.str.25.535, ptr noundef nonnull %4) #46
  br label %13

13:                                               ; preds = %11, %3
  tail call void @free(ptr noundef nonnull %4) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_subsequence_info(ptr noundef %0, i32 noundef %1, ptr nocapture readnone %2) #0 {
  %4 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  store i32 %1, ptr %5, align 4, !tbaa !561
  %6 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  store ptr %0, ptr %6, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  store i32 0, ptr %7, align 8, !tbaa !450
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %8 = tail call i32 @ue_v(ptr noundef nonnull @.str.7.517, ptr noundef %4) #46
  %9 = tail call i32 @ue_v(ptr noundef nonnull @.str.8.518, ptr noundef %4) #46
  %10 = tail call i32 @u_1(ptr noundef nonnull @.str.9.529, ptr noundef %4) #46
  %11 = tail call i32 @u_1(ptr noundef nonnull @.str.10.530, ptr noundef %4) #46
  %12 = tail call i32 @u_1(ptr noundef nonnull @.str.11.531, ptr noundef %4) #46
  %13 = tail call i32 @u_1(ptr noundef nonnull @.str.12.532, ptr noundef %4) #46
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %3
  %16 = tail call i32 @ue_v(ptr noundef nonnull @.str.13.533, ptr noundef nonnull %4) #46
  br label %17

17:                                               ; preds = %15, %3
  tail call void @free(ptr noundef nonnull %4) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_subsequence_layer_characteristics_info(ptr noundef %0, i32 noundef %1, ptr nocapture readnone %2) #0 {
  %4 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  store i32 %1, ptr %5, align 4, !tbaa !561
  %6 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  store ptr %0, ptr %6, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  store i32 0, ptr %7, align 8, !tbaa !450
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %8 = tail call i32 @ue_v(ptr noundef nonnull @.str.14.528, ptr noundef %4) #46
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %10, %3
  %11 = phi i32 [ %15, %10 ], [ 0, %3 ]
  %12 = tail call i32 @u_1(ptr noundef nonnull @.str.15.521, ptr noundef %4) #46
  %13 = tail call i32 @u_v(i32 noundef 16, ptr noundef nonnull @.str.16.522, ptr noundef %4) #46
  %14 = tail call i32 @u_v(i32 noundef 16, ptr noundef nonnull @.str.17.523, ptr noundef %4) #46
  %15 = add nuw i32 %11, 1
  %16 = icmp eq i32 %11, %8
  br i1 %16, label %17, label %10, !llvm.loop !1195

17:                                               ; preds = %10, %3
  tail call void @free(ptr noundef %4) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_subsequence_characteristics_info(ptr noundef %0, i32 noundef %1, ptr nocapture readnone %2) #0 {
  %4 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  store i32 %1, ptr %5, align 4, !tbaa !561
  %6 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  store ptr %0, ptr %6, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  store i32 0, ptr %7, align 8, !tbaa !450
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %8 = tail call i32 @ue_v(ptr noundef nonnull @.str.7.517, ptr noundef %4) #46
  %9 = tail call i32 @ue_v(ptr noundef nonnull @.str.8.518, ptr noundef %4) #46
  %10 = tail call i32 @u_1(ptr noundef nonnull @.str.18.519, ptr noundef %4) #46
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i32 @u_v(i32 noundef 32, ptr noundef nonnull @.str.18.519, ptr noundef nonnull %4) #46
  br label %14

14:                                               ; preds = %12, %3
  %15 = tail call i32 @u_1(ptr noundef nonnull @.str.19.520, ptr noundef nonnull %4) #46
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = tail call i32 @u_1(ptr noundef nonnull @.str.15.521, ptr noundef nonnull %4) #46
  %19 = tail call i32 @u_v(i32 noundef 16, ptr noundef nonnull @.str.16.522, ptr noundef nonnull %4) #46
  %20 = tail call i32 @u_v(i32 noundef 16, ptr noundef nonnull @.str.17.523, ptr noundef nonnull %4) #46
  br label %21

21:                                               ; preds = %17, %14
  %22 = tail call i32 @ue_v(ptr noundef nonnull @.str.20.524, ptr noundef nonnull %4) #46
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %24, %21
  %25 = phi i32 [ %29, %24 ], [ 0, %21 ]
  %26 = tail call i32 @ue_v(ptr noundef nonnull @.str.21.525, ptr noundef %4) #46
  %27 = tail call i32 @ue_v(ptr noundef nonnull @.str.22.526, ptr noundef %4) #46
  %28 = tail call i32 @u_1(ptr noundef nonnull @.str.23.527, ptr noundef %4) #46
  %29 = add nuw nsw i32 %25, 1
  %30 = icmp eq i32 %29, %22
  br i1 %30, label %31, label %24, !llvm.loop !1196

31:                                               ; preds = %24, %21
  tail call void @free(ptr noundef %4) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_full_frame_snapshot_info(ptr noundef %0, i32 noundef %1, ptr nocapture readnone %2) #0 {
  %4 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  store i32 %1, ptr %5, align 4, !tbaa !561
  %6 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  store ptr %0, ptr %6, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  store i32 0, ptr %7, align 8, !tbaa !450
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %8 = tail call i32 @ue_v(ptr noundef nonnull @.str.40.516, ptr noundef %4) #46
  tail call void @free(ptr noundef %4) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_progressive_refinement_end_info(ptr noundef %0, i32 noundef %1, ptr nocapture readnone %2) #0 {
  %4 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  store i32 %1, ptr %5, align 4, !tbaa !561
  %6 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  store ptr %0, ptr %6, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  store i32 0, ptr %7, align 8, !tbaa !450
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %8 = tail call i32 @ue_v(ptr noundef nonnull @.str.41.515, ptr noundef %4) #46
  tail call void @free(ptr noundef %4) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_motion_constrained_slice_group_set_info(ptr noundef %0, i32 noundef %1, ptr nocapture readnone %2) #0 {
  %4 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  store i32 %1, ptr %5, align 4, !tbaa !561
  %6 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  store ptr %0, ptr %6, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  store i32 0, ptr %7, align 8, !tbaa !450
  store i32 0, ptr @UsedBits, align 4, !tbaa !18
  %8 = tail call i32 @ue_v(ptr noundef nonnull @.str.43.510, ptr noundef %4) #46
  %9 = add i32 %8, 1
  %10 = tail call i32 @CeilLog2(i32 noundef %9) #46
  %11 = icmp slt i32 %8, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %12, %3
  %13 = phi i32 [ %15, %12 ], [ 0, %3 ]
  %14 = tail call i32 @u_v(i32 noundef %10, ptr noundef nonnull @.str.44.511, ptr noundef %4) #46
  %15 = add nuw i32 %13, 1
  %16 = icmp eq i32 %13, %8
  br i1 %16, label %17, label %12, !llvm.loop !1197

17:                                               ; preds = %12, %3
  %18 = tail call i32 @u_1(ptr noundef nonnull @.str.35.512, ptr noundef %4) #46
  %19 = tail call i32 @u_1(ptr noundef nonnull @.str.45.513, ptr noundef %4) #46
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = tail call i32 @ue_v(ptr noundef nonnull @.str.26.514, ptr noundef %4) #46
  br label %23

23:                                               ; preds = %21, %17
  tail call void @free(ptr noundef %4) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_film_grain_characteristics_info(ptr noundef %0, i32 noundef %1, ptr nocapture readnone %2) #0 {
  %4 = alloca [3 x i32], align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #48
  %5 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %6 = getelementptr inbounds %struct.Bitstream, ptr %5, i64 0, i32 3
  store i32 %1, ptr %6, align 4, !tbaa !561
  %7 = getelementptr inbounds %struct.Bitstream, ptr %5, i64 0, i32 4
  store ptr %0, ptr %7, align 8, !tbaa !218
  %8 = getelementptr inbounds %struct.Bitstream, ptr %5, i64 0, i32 2
  store i32 0, ptr %8, align 8, !tbaa !450
  %9 = tail call i32 @u_1(ptr noundef nonnull @.str.46.492, ptr noundef %5) #46
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %59

11:                                               ; preds = %3
  %12 = tail call i32 @u_v(i32 noundef 2, ptr noundef nonnull @.str.47.493, ptr noundef nonnull %5) #46
  %13 = tail call i32 @u_1(ptr noundef nonnull @.str.48.494, ptr noundef nonnull %5) #46
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = tail call i32 @u_v(i32 noundef 3, ptr noundef nonnull @.str.49.495, ptr noundef nonnull %5) #46
  %17 = tail call i32 @u_v(i32 noundef 3, ptr noundef nonnull @.str.50.496, ptr noundef nonnull %5) #46
  %18 = tail call i32 @u_v(i32 noundef 1, ptr noundef nonnull @.str.51.497, ptr noundef nonnull %5) #46
  %19 = tail call i32 @u_v(i32 noundef 8, ptr noundef nonnull @.str.52.498, ptr noundef nonnull %5) #46
  %20 = tail call i32 @u_v(i32 noundef 8, ptr noundef nonnull @.str.53.499, ptr noundef nonnull %5) #46
  %21 = tail call i32 @u_v(i32 noundef 8, ptr noundef nonnull @.str.54.500, ptr noundef nonnull %5) #46
  br label %22

22:                                               ; preds = %15, %11
  %23 = tail call i32 @u_v(i32 noundef 2, ptr noundef nonnull @.str.55.501, ptr noundef nonnull %5) #46
  %24 = tail call i32 @u_v(i32 noundef 4, ptr noundef nonnull @.str.56.502, ptr noundef nonnull %5) #46
  br label %25

25:                                               ; preds = %25, %22
  %26 = phi i64 [ 0, %22 ], [ %29, %25 ]
  %27 = tail call i32 @u_1(ptr noundef nonnull @.str.57.503, ptr noundef %5) #46
  %28 = getelementptr inbounds [3 x i32], ptr %4, i64 0, i64 %26
  store i32 %27, ptr %28, align 4, !tbaa !18
  %29 = add nuw nsw i64 %26, 1
  %30 = icmp eq i64 %29, 3
  br i1 %30, label %31, label %25, !llvm.loop !1198

31:                                               ; preds = %54, %25
  %32 = phi i64 [ %55, %54 ], [ 0, %25 ]
  %33 = getelementptr inbounds [3 x i32], ptr %4, i64 0, i64 %32
  %34 = load i32, ptr %33, align 4, !tbaa !18
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %54, label %36

36:                                               ; preds = %31
  %37 = tail call i32 @u_v(i32 noundef 8, ptr noundef nonnull @.str.58.504, ptr noundef %5) #46
  %38 = tail call i32 @u_v(i32 noundef 3, ptr noundef nonnull @.str.59.505, ptr noundef %5) #46
  %39 = icmp slt i32 %37, 0
  br i1 %39, label %54, label %40

40:                                               ; preds = %36
  %41 = icmp slt i32 %38, 0
  br label %42

42:                                               ; preds = %51, %40
  %43 = phi i32 [ 0, %40 ], [ %52, %51 ]
  %44 = tail call i32 @u_v(i32 noundef 8, ptr noundef nonnull @.str.60.506, ptr noundef %5) #46
  %45 = tail call i32 @u_v(i32 noundef 8, ptr noundef nonnull @.str.61.507, ptr noundef %5) #46
  br i1 %41, label %51, label %46

46:                                               ; preds = %46, %42
  %47 = phi i32 [ %49, %46 ], [ 0, %42 ]
  %48 = tail call i32 @se_v(ptr noundef nonnull @.str.62.508, ptr noundef %5) #46
  %49 = add nuw i32 %47, 1
  %50 = icmp eq i32 %47, %38
  br i1 %50, label %51, label %46, !llvm.loop !1199

51:                                               ; preds = %46, %42
  %52 = add nuw i32 %43, 1
  %53 = icmp eq i32 %43, %37
  br i1 %53, label %54, label %42, !llvm.loop !1200

54:                                               ; preds = %51, %36, %31
  %55 = add nuw nsw i64 %32, 1
  %56 = icmp eq i64 %55, 3
  br i1 %56, label %57, label %31, !llvm.loop !1201

57:                                               ; preds = %54
  %58 = tail call i32 @ue_v(ptr noundef nonnull @.str.63.509, ptr noundef %5) #46
  br label %59

59:                                               ; preds = %57, %3
  tail call void @free(ptr noundef %5) #46
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_deblocking_filter_display_preference_info(ptr noundef %0, i32 noundef %1, ptr nocapture readnone %2) #0 {
  %4 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  store i32 %1, ptr %5, align 4, !tbaa !561
  %6 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  store ptr %0, ptr %6, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  store i32 0, ptr %7, align 8, !tbaa !450
  %8 = tail call i32 @u_1(ptr noundef nonnull @.str.64.488, ptr noundef %4) #46
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = tail call i32 @u_1(ptr noundef nonnull @.str.65.489, ptr noundef nonnull %4) #46
  %12 = tail call i32 @u_1(ptr noundef nonnull @.str.66.490, ptr noundef nonnull %4) #46
  %13 = tail call i32 @ue_v(ptr noundef nonnull @.str.67.491, ptr noundef nonnull %4) #46
  br label %14

14:                                               ; preds = %10, %3
  tail call void @free(ptr noundef nonnull %4) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal void @interpret_stereo_video_info_info(ptr noundef %0, i32 noundef %1, ptr nocapture readnone %2) #0 {
  %4 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #49
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  store i32 %1, ptr %5, align 4, !tbaa !561
  %6 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  store ptr %0, ptr %6, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  store i32 0, ptr %7, align 8, !tbaa !450
  %8 = tail call i32 @u_1(ptr noundef nonnull @.str.68.482, ptr noundef %4) #46
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = tail call i32 @u_1(ptr noundef nonnull @.str.70.483, ptr noundef nonnull %4) #46
  br label %12

12:                                               ; preds = %10, %3
  %13 = phi ptr [ @.str.71.484, %10 ], [ @.str.69.485, %3 ]
  %14 = tail call i32 @u_1(ptr noundef nonnull %13, ptr noundef nonnull %4) #46
  %15 = tail call i32 @u_1(ptr noundef nonnull @.str.72.486, ptr noundef nonnull %4) #46
  %16 = tail call i32 @u_1(ptr noundef nonnull @.str.73.487, ptr noundef nonnull %4) #46
  tail call void @free(ptr noundef nonnull %4) #46
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @intrapred8x8(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca [25 x i16], align 16
  %4 = alloca [8 x %struct.pix_pos], align 16
  %5 = alloca %struct.pix_pos, align 4
  %6 = alloca %struct.pix_pos, align 4
  %7 = alloca %struct.pix_pos, align 4
  call void @llvm.lifetime.start.p0(i64 50, ptr nonnull %3) #48
  %8 = load ptr, ptr @dec_picture, align 8, !tbaa !13
  %9 = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 32
  %10 = load ptr, ptr %9, align 8, !tbaa !47
  %11 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !49
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %4) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #48
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #48
  %13 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 17
  %14 = load i32, ptr %13, align 8, !tbaa !299
  %15 = shl nsw i32 %14, 2
  %16 = srem i32 %1, 2
  %17 = shl nsw i32 %16, 1
  %18 = add nsw i32 %15, %17
  %19 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 16
  %20 = load i32, ptr %19, align 4, !tbaa !300
  %21 = shl nsw i32 %20, 2
  %22 = sdiv i32 %1, 2
  %23 = shl nsw i32 %22, 1
  %24 = add nsw i32 %21, %23
  %25 = shl nsw i32 %16, 3
  %26 = shl nsw i32 %22, 3
  %27 = or i32 %26, 1
  %28 = or i32 %26, 3
  %29 = or i32 %26, 5
  %30 = or i32 %26, 7
  %31 = or i32 %25, 2
  %32 = or i32 %25, 4
  %33 = or i32 %25, 6
  %34 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 30
  %35 = load ptr, ptr %34, align 8, !tbaa !50
  %36 = sext i32 %24 to i64
  %37 = getelementptr inbounds ptr, ptr %35, i64 %36
  %38 = load ptr, ptr %37, align 8, !tbaa !13
  %39 = sext i32 %18 to i64
  %40 = getelementptr inbounds i8, ptr %38, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !14
  %42 = add nsw i32 %25, -1
  br label %43

43:                                               ; preds = %43, %2
  %44 = phi i64 [ 0, %2 ], [ %49, %43 ]
  %45 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  %46 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 %44
  %47 = trunc i64 %44 to i32
  %48 = add i32 %26, %47
  call void %45(i32 noundef %12, i32 noundef %42, i32 noundef %48, i32 noundef 0, ptr noundef nonnull %46) #46
  %49 = add nuw nsw i64 %44, 1
  %50 = icmp eq i64 %49, 8
  br i1 %50, label %51, label %43, !llvm.loop !1202

51:                                               ; preds = %43
  %52 = or i32 %26, 2
  %53 = or i32 %26, 4
  %54 = or i32 %26, 6
  %55 = or i32 %25, 1
  %56 = or i32 %25, 3
  %57 = or i32 %25, 5
  %58 = or i32 %25, 7
  %59 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  %60 = add nsw i32 %26, -1
  call void %59(i32 noundef %12, i32 noundef %25, i32 noundef %60, i32 noundef 0, ptr noundef nonnull %5) #46
  %61 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  %62 = add nsw i32 %25, 8
  call void %61(i32 noundef %12, i32 noundef %62, i32 noundef %60, i32 noundef 0, ptr noundef nonnull %6) #46
  %63 = load ptr, ptr @getNeighbour, align 8, !tbaa !13
  call void %63(i32 noundef %12, i32 noundef %42, i32 noundef %60, i32 noundef 0, ptr noundef nonnull %7) #46
  %64 = load i32, ptr %6, align 4, !tbaa !52
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %51
  %67 = icmp ne i32 %16, 1
  %68 = and i32 %1, -2
  %69 = icmp ne i32 %68, 2
  %70 = or i1 %67, %69
  br label %71

71:                                               ; preds = %66, %51
  %72 = phi i1 [ false, %51 ], [ %70, %66 ]
  %73 = zext i1 %72 to i32
  store i32 %73, ptr %6, align 4, !tbaa !52
  %74 = load ptr, ptr @active_pps, align 8, !tbaa !13
  %75 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %74, i64 0, i32 30
  %76 = load i32, ptr %75, align 4, !tbaa !54
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %128, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 4
  br label %80

80:                                               ; preds = %93, %78
  %81 = phi i64 [ 0, %78 ], [ %96, %93 ]
  %82 = phi i32 [ 1, %78 ], [ %95, %93 ]
  %83 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 %81
  %84 = load i32, ptr %83, align 8, !tbaa !52
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %93, label %86

86:                                               ; preds = %80
  %87 = load ptr, ptr %79, align 8, !tbaa !56
  %88 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 %81, i32 1
  %89 = load i32, ptr %88, align 4, !tbaa !57
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i32, ptr %87, i64 %90
  %92 = load i32, ptr %91, align 4, !tbaa !18
  br label %93

93:                                               ; preds = %86, %80
  %94 = phi i32 [ %92, %86 ], [ 0, %80 ]
  %95 = and i32 %94, %82
  %96 = add nuw nsw i64 %81, 1
  %97 = icmp eq i64 %96, 8
  br i1 %97, label %98, label %80, !llvm.loop !1203

98:                                               ; preds = %93
  %.lcssa = phi i32 [ %95, %93 ]
  %99 = load i32, ptr %5, align 4, !tbaa !52
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %108, label %101

101:                                              ; preds = %98
  %102 = load ptr, ptr %79, align 8, !tbaa !56
  %103 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 1
  %104 = load i32, ptr %103, align 4, !tbaa !57
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i32, ptr %102, i64 %105
  %107 = load i32, ptr %106, align 4, !tbaa !18
  br label %108

108:                                              ; preds = %101, %98
  %109 = phi i32 [ %107, %101 ], [ 0, %98 ]
  br i1 %72, label %110, label %117

110:                                              ; preds = %108
  %111 = load ptr, ptr %79, align 8, !tbaa !56
  %112 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 1
  %113 = load i32, ptr %112, align 4, !tbaa !57
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, ptr %111, i64 %114
  %116 = load i32, ptr %115, align 4, !tbaa !18
  br label %117

117:                                              ; preds = %110, %108
  %118 = phi i32 [ %116, %110 ], [ 0, %108 ]
  %119 = load i32, ptr %7, align 4, !tbaa !52
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %132, label %121

121:                                              ; preds = %117
  %122 = load ptr, ptr %79, align 8, !tbaa !56
  %123 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 1
  %124 = load i32, ptr %123, align 4, !tbaa !57
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i32, ptr %122, i64 %125
  %127 = load i32, ptr %126, align 4, !tbaa !18
  br label %132

128:                                              ; preds = %71
  %129 = load i32, ptr %4, align 16, !tbaa !52
  %130 = load i32, ptr %5, align 4, !tbaa !52
  %131 = load i32, ptr %7, align 4, !tbaa !52
  br label %132

132:                                              ; preds = %128, %121, %117
  %133 = phi i32 [ %73, %128 ], [ %118, %117 ], [ %118, %121 ]
  %134 = phi i32 [ %131, %128 ], [ 0, %117 ], [ %127, %121 ]
  %135 = phi i32 [ %129, %128 ], [ %.lcssa, %117 ], [ %.lcssa, %121 ]
  %136 = phi i32 [ %130, %128 ], [ %109, %117 ], [ %109, %121 ]
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %170

138:                                              ; preds = %132
  %139 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 5
  %140 = load i32, ptr %139, align 4, !tbaa !59
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds ptr, ptr %10, i64 %141
  %143 = load ptr, ptr %142, align 8, !tbaa !13
  %144 = getelementptr inbounds %struct.pix_pos, ptr %5, i64 0, i32 4
  %145 = load i32, ptr %144, align 4, !tbaa !60
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i16, ptr %143, i64 %146
  %148 = load i16, ptr %147, align 2, !tbaa !40
  %149 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 1
  store i16 %148, ptr %149, align 2, !tbaa !40
  %150 = getelementptr inbounds i16, ptr %147, i64 1
  %151 = load i16, ptr %150, align 2, !tbaa !40
  %152 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 2
  store i16 %151, ptr %152, align 4, !tbaa !40
  %153 = getelementptr inbounds i16, ptr %147, i64 2
  %154 = load i16, ptr %153, align 2, !tbaa !40
  %155 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 3
  store i16 %154, ptr %155, align 2, !tbaa !40
  %156 = getelementptr inbounds i16, ptr %147, i64 3
  %157 = load i16, ptr %156, align 2, !tbaa !40
  %158 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 4
  store i16 %157, ptr %158, align 8, !tbaa !40
  %159 = getelementptr inbounds i16, ptr %147, i64 4
  %160 = load i16, ptr %159, align 2, !tbaa !40
  %161 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 5
  store i16 %160, ptr %161, align 2, !tbaa !40
  %162 = getelementptr inbounds i16, ptr %147, i64 5
  %163 = load i16, ptr %162, align 2, !tbaa !40
  %164 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 6
  store i16 %163, ptr %164, align 4, !tbaa !40
  %165 = getelementptr inbounds i16, ptr %147, i64 6
  %166 = load i16, ptr %165, align 2, !tbaa !40
  %167 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 7
  store i16 %166, ptr %167, align 2, !tbaa !40
  %168 = getelementptr inbounds i16, ptr %147, i64 7
  %169 = load i16, ptr %168, align 2, !tbaa !40
  br label %180

170:                                              ; preds = %132
  %171 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 105
  %172 = load i32, ptr %171, align 4, !tbaa !61
  %173 = trunc i32 %172 to i16
  %174 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 7
  store i16 %173, ptr %174, align 2, !tbaa !40
  %175 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 6
  store i16 %173, ptr %175, align 4, !tbaa !40
  %176 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 5
  store i16 %173, ptr %176, align 2, !tbaa !40
  %177 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 1
  %178 = insertelement <4 x i16> poison, i16 %173, i64 0
  %179 = shufflevector <4 x i16> %178, <4 x i16> poison, <4 x i32> zeroinitializer
  store <4 x i16> %179, ptr %177, align 2, !tbaa !40
  br label %180

180:                                              ; preds = %170, %138
  %181 = phi i16 [ %169, %138 ], [ %173, %170 ]
  %182 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 8
  store i16 %181, ptr %182, align 16
  %183 = icmp eq i32 %133, 0
  br i1 %183, label %217, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 5
  %186 = load i32, ptr %185, align 4, !tbaa !59
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds ptr, ptr %10, i64 %187
  %189 = load ptr, ptr %188, align 8, !tbaa !13
  %190 = getelementptr inbounds %struct.pix_pos, ptr %6, i64 0, i32 4
  %191 = load i32, ptr %190, align 4, !tbaa !60
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i16, ptr %189, i64 %192
  %194 = load i16, ptr %193, align 2, !tbaa !40
  %195 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 9
  store i16 %194, ptr %195, align 2, !tbaa !40
  %196 = getelementptr inbounds i16, ptr %193, i64 1
  %197 = load i16, ptr %196, align 2, !tbaa !40
  %198 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 10
  store i16 %197, ptr %198, align 4, !tbaa !40
  %199 = getelementptr inbounds i16, ptr %193, i64 2
  %200 = load i16, ptr %199, align 2, !tbaa !40
  %201 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 11
  store i16 %200, ptr %201, align 2, !tbaa !40
  %202 = getelementptr inbounds i16, ptr %193, i64 3
  %203 = load i16, ptr %202, align 2, !tbaa !40
  %204 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 12
  store i16 %203, ptr %204, align 8, !tbaa !40
  %205 = getelementptr inbounds i16, ptr %193, i64 4
  %206 = load i16, ptr %205, align 2, !tbaa !40
  %207 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 13
  store i16 %206, ptr %207, align 2, !tbaa !40
  %208 = getelementptr inbounds i16, ptr %193, i64 5
  %209 = load i16, ptr %208, align 2, !tbaa !40
  %210 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 14
  store i16 %209, ptr %210, align 4, !tbaa !40
  %211 = getelementptr inbounds i16, ptr %193, i64 6
  %212 = load i16, ptr %211, align 2, !tbaa !40
  %213 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 15
  store i16 %212, ptr %213, align 2, !tbaa !40
  %214 = getelementptr inbounds i16, ptr %193, i64 7
  %215 = load i16, ptr %214, align 2, !tbaa !40
  %216 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 16
  store i16 %215, ptr %216, align 16, !tbaa !40
  br label %221

217:                                              ; preds = %180
  %218 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 9
  %219 = insertelement <8 x i16> poison, i16 %181, i64 0
  %220 = shufflevector <8 x i16> %219, <8 x i16> poison, <8 x i32> zeroinitializer
  store <8 x i16> %220, ptr %218, align 2, !tbaa !40
  br label %221

221:                                              ; preds = %217, %184
  %222 = icmp ne i32 %135, 0
  br i1 %222, label %223, label %311

223:                                              ; preds = %221
  %224 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 5
  %225 = load i32, ptr %224, align 4, !tbaa !59
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds ptr, ptr %10, i64 %226
  %228 = load ptr, ptr %227, align 8, !tbaa !13
  %229 = getelementptr inbounds %struct.pix_pos, ptr %4, i64 0, i32 4
  %230 = load i32, ptr %229, align 16, !tbaa !60
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i16, ptr %228, i64 %231
  %233 = load i16, ptr %232, align 2, !tbaa !40
  %234 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 17
  store i16 %233, ptr %234, align 2, !tbaa !40
  %235 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 1, i32 5
  %236 = load i32, ptr %235, align 4, !tbaa !59
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds ptr, ptr %10, i64 %237
  %239 = load ptr, ptr %238, align 8, !tbaa !13
  %240 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 1, i32 4
  %241 = load i32, ptr %240, align 8, !tbaa !60
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds i16, ptr %239, i64 %242
  %244 = load i16, ptr %243, align 2, !tbaa !40
  %245 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 18
  store i16 %244, ptr %245, align 4, !tbaa !40
  %246 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 2, i32 5
  %247 = load i32, ptr %246, align 4, !tbaa !59
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds ptr, ptr %10, i64 %248
  %250 = load ptr, ptr %249, align 8, !tbaa !13
  %251 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 2, i32 4
  %252 = load i32, ptr %251, align 16, !tbaa !60
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds i16, ptr %250, i64 %253
  %255 = load i16, ptr %254, align 2, !tbaa !40
  %256 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 19
  store i16 %255, ptr %256, align 2, !tbaa !40
  %257 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 3, i32 5
  %258 = load i32, ptr %257, align 4, !tbaa !59
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds ptr, ptr %10, i64 %259
  %261 = load ptr, ptr %260, align 8, !tbaa !13
  %262 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 3, i32 4
  %263 = load i32, ptr %262, align 8, !tbaa !60
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i16, ptr %261, i64 %264
  %266 = load i16, ptr %265, align 2, !tbaa !40
  %267 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 20
  store i16 %266, ptr %267, align 8, !tbaa !40
  %268 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 4, i32 5
  %269 = load i32, ptr %268, align 4, !tbaa !59
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds ptr, ptr %10, i64 %270
  %272 = load ptr, ptr %271, align 8, !tbaa !13
  %273 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 4, i32 4
  %274 = load i32, ptr %273, align 16, !tbaa !60
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds i16, ptr %272, i64 %275
  %277 = load i16, ptr %276, align 2, !tbaa !40
  %278 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 21
  store i16 %277, ptr %278, align 2, !tbaa !40
  %279 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 5, i32 5
  %280 = load i32, ptr %279, align 4, !tbaa !59
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds ptr, ptr %10, i64 %281
  %283 = load ptr, ptr %282, align 8, !tbaa !13
  %284 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 5, i32 4
  %285 = load i32, ptr %284, align 8, !tbaa !60
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds i16, ptr %283, i64 %286
  %288 = load i16, ptr %287, align 2, !tbaa !40
  %289 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 22
  store i16 %288, ptr %289, align 4, !tbaa !40
  %290 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 6, i32 5
  %291 = load i32, ptr %290, align 4, !tbaa !59
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds ptr, ptr %10, i64 %292
  %294 = load ptr, ptr %293, align 8, !tbaa !13
  %295 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 6, i32 4
  %296 = load i32, ptr %295, align 16, !tbaa !60
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds i16, ptr %294, i64 %297
  %299 = load i16, ptr %298, align 2, !tbaa !40
  %300 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 23
  store i16 %299, ptr %300, align 2, !tbaa !40
  %301 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 7, i32 5
  %302 = load i32, ptr %301, align 4, !tbaa !59
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds ptr, ptr %10, i64 %303
  %305 = load ptr, ptr %304, align 8, !tbaa !13
  %306 = getelementptr inbounds [8 x %struct.pix_pos], ptr %4, i64 0, i64 7, i32 4
  %307 = load i32, ptr %306, align 8, !tbaa !60
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds i16, ptr %305, i64 %308
  %310 = load i16, ptr %309, align 2, !tbaa !40
  br label %321

311:                                              ; preds = %221
  %312 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 105
  %313 = load i32, ptr %312, align 4, !tbaa !61
  %314 = trunc i32 %313 to i16
  %315 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 23
  store i16 %314, ptr %315, align 2, !tbaa !40
  %316 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 22
  store i16 %314, ptr %316, align 4, !tbaa !40
  %317 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 21
  store i16 %314, ptr %317, align 2, !tbaa !40
  %318 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 17
  %319 = insertelement <4 x i16> poison, i16 %314, i64 0
  %320 = shufflevector <4 x i16> %319, <4 x i16> poison, <4 x i32> zeroinitializer
  store <4 x i16> %320, ptr %318, align 2, !tbaa !40
  br label %321

321:                                              ; preds = %311, %223
  %322 = phi i16 [ %310, %223 ], [ %314, %311 ]
  %323 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 24
  store i16 %322, ptr %323, align 16
  %324 = icmp ne i32 %134, 0
  br i1 %324, label %325, label %336

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 5
  %327 = load i32, ptr %326, align 4, !tbaa !59
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds ptr, ptr %10, i64 %328
  %330 = load ptr, ptr %329, align 8, !tbaa !13
  %331 = getelementptr inbounds %struct.pix_pos, ptr %7, i64 0, i32 4
  %332 = load i32, ptr %331, align 4, !tbaa !60
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds i16, ptr %330, i64 %333
  %335 = load i16, ptr %334, align 2, !tbaa !40
  br label %340

336:                                              ; preds = %321
  %337 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 105
  %338 = load i32, ptr %337, align 4, !tbaa !61
  %339 = trunc i32 %338 to i16
  br label %340

340:                                              ; preds = %336, %325
  %341 = phi i16 [ %339, %336 ], [ %335, %325 ]
  store i16 %341, ptr %3, align 16, !tbaa !40
  call void @LowPassForIntra8x8Pred(ptr noundef nonnull %3, i32 noundef %134, i32 noundef %136, i32 noundef %135) #47
  switch i8 %41, label %1593 [
    i8 2, label %342
    i8 0, label %390
    i8 1, label %414
    i8 3, label %432
    i8 7, label %589
    i8 4, label %819
    i8 5, label %960
    i8 6, label %1206
    i8 8, label %1428
  ]

342:                                              ; preds = %340
  %343 = and i1 %222, %137
  br i1 %343, label %344, label %354

344:                                              ; preds = %342
  %345 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 1
  %346 = load <8 x i16>, ptr %345, align 2, !tbaa !40
  %347 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 17
  %348 = load <8 x i16>, ptr %347, align 2, !tbaa !40
  %349 = shufflevector <8 x i16> %346, <8 x i16> %348, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %350 = zext <16 x i16> %349 to <16 x i32>
  %351 = call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %350)
  %352 = add i32 %351, 8
  %353 = lshr i32 %352, 4
  br label %376

354:                                              ; preds = %342
  %355 = icmp eq i32 %136, 0
  %356 = and i1 %222, %355
  br i1 %356, label %357, label %364

357:                                              ; preds = %354
  %358 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 17
  %359 = load <8 x i16>, ptr %358, align 2, !tbaa !40
  %360 = zext <8 x i16> %359 to <8 x i32>
  %361 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %360)
  %362 = add i32 %361, 4
  %363 = lshr i32 %362, 3
  br label %376

364:                                              ; preds = %354
  %365 = or i1 %222, %355
  br i1 %365, label %373, label %366

366:                                              ; preds = %364
  %367 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 1
  %368 = load <8 x i16>, ptr %367, align 2, !tbaa !40
  %369 = zext <8 x i16> %368 to <8 x i32>
  %370 = call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %369)
  %371 = add i32 %370, 4
  %372 = lshr i32 %371, 3
  br label %376

373:                                              ; preds = %364
  %374 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 105
  %375 = load i32, ptr %374, align 4, !tbaa !61
  br label %376

376:                                              ; preds = %373, %366, %357, %344
  %377 = phi i32 [ %353, %344 ], [ %363, %357 ], [ %375, %373 ], [ %372, %366 ]
  %378 = trunc i32 %377 to i16
  %379 = sext i32 %25 to i64
  %380 = sext i32 %26 to i64
  %381 = add i32 %26, 8
  %382 = insertelement <8 x i16> poison, i16 %378, i64 0
  %383 = shufflevector <8 x i16> %382, <8 x i16> poison, <8 x i32> zeroinitializer
  br label %384

384:                                              ; preds = %384, %376
  %385 = phi i64 [ %380, %376 ], [ %387, %384 ]
  %386 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %385, i64 %379
  store <8 x i16> %383, ptr %386, align 2, !tbaa !40
  %387 = add nsw i64 %385, 1
  %388 = trunc i64 %387 to i32
  %389 = icmp eq i32 %381, %388
  br i1 %389, label %1596, label %384, !llvm.loop !1204

390:                                              ; preds = %340
  br i1 %137, label %394, label %391

391:                                              ; preds = %390
  %392 = load i32, ptr %11, align 4, !tbaa !49
  %393 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.580, i32 noundef %392) #47
  br label %394

394:                                              ; preds = %391, %390
  %395 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 1
  %396 = sext i32 %30 to i64
  %397 = sext i32 %54 to i64
  %398 = sext i32 %29 to i64
  %399 = sext i32 %53 to i64
  %400 = sext i32 %28 to i64
  %401 = sext i32 %52 to i64
  %402 = sext i32 %27 to i64
  %403 = sext i32 %26 to i64
  %404 = sext i32 %25 to i64
  %405 = load <8 x i16>, ptr %395, align 2, !tbaa !40
  %406 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %396, i64 %404
  store <8 x i16> %405, ptr %406, align 2, !tbaa !40
  %407 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %397, i64 %404
  store <8 x i16> %405, ptr %407, align 2, !tbaa !40
  %408 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %398, i64 %404
  store <8 x i16> %405, ptr %408, align 2, !tbaa !40
  %409 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %399, i64 %404
  store <8 x i16> %405, ptr %409, align 2, !tbaa !40
  %410 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %400, i64 %404
  store <8 x i16> %405, ptr %410, align 2, !tbaa !40
  %411 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %401, i64 %404
  store <8 x i16> %405, ptr %411, align 2, !tbaa !40
  %412 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %402, i64 %404
  store <8 x i16> %405, ptr %412, align 2, !tbaa !40
  %413 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %403, i64 %404
  store <8 x i16> %405, ptr %413, align 2, !tbaa !40
  br label %1596

414:                                              ; preds = %340
  br i1 %222, label %418, label %415

415:                                              ; preds = %414
  %416 = load i32, ptr %11, align 4, !tbaa !49
  %417 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.1.581, i32 noundef %416) #47
  br label %418

418:                                              ; preds = %415, %414
  %419 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 17
  %420 = sext i32 %25 to i64
  %421 = sext i32 %26 to i64
  br label %422

422:                                              ; preds = %422, %418
  %423 = phi i64 [ 0, %418 ], [ %430, %422 ]
  %424 = add nuw nsw i64 %423, %421
  %425 = getelementptr inbounds i16, ptr %419, i64 %423
  %426 = load i16, ptr %425, align 2, !tbaa !40
  %427 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %424, i64 %420
  %428 = insertelement <8 x i16> poison, i16 %426, i64 0
  %429 = shufflevector <8 x i16> %428, <8 x i16> poison, <8 x i32> zeroinitializer
  store <8 x i16> %429, ptr %427, align 2, !tbaa !40
  %430 = add nuw nsw i64 %423, 1
  %431 = icmp eq i64 %430, 8
  br i1 %431, label %1596, label %422, !llvm.loop !1205

432:                                              ; preds = %340
  br i1 %137, label %436, label %433

433:                                              ; preds = %432
  %434 = load i32, ptr %11, align 4, !tbaa !49
  %435 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.2.582, i32 noundef %434) #47
  br label %436

436:                                              ; preds = %433, %432
  %437 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 1
  %438 = load i16, ptr %437, align 2, !tbaa !40
  %439 = zext i16 %438 to i32
  %440 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 3
  %441 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 2
  %442 = load i16, ptr %441, align 4, !tbaa !40
  %443 = zext i16 %442 to i32
  %444 = shl nuw nsw i32 %443, 1
  %445 = sext i32 %26 to i64
  %446 = sext i32 %25 to i64
  %447 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %445, i64 %446
  %448 = sext i32 %55 to i64
  %449 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %445, i64 %448
  %450 = sext i32 %27 to i64
  %451 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %450, i64 %446
  %452 = sext i32 %31 to i64
  %453 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %445, i64 %452
  %454 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %450, i64 %448
  %455 = sext i32 %52 to i64
  %456 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %455, i64 %446
  %457 = sext i32 %56 to i64
  %458 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %445, i64 %457
  %459 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %450, i64 %452
  %460 = sext i32 %28 to i64
  %461 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %460, i64 %446
  %462 = sext i32 %32 to i64
  %463 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %445, i64 %462
  %464 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %450, i64 %457
  %465 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %460, i64 %448
  %466 = sext i32 %53 to i64
  %467 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %466, i64 %446
  %468 = sext i32 %57 to i64
  %469 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %445, i64 %468
  %470 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %450, i64 %462
  %471 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %460, i64 %452
  %472 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %466, i64 %448
  %473 = sext i32 %29 to i64
  %474 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %473, i64 %446
  %475 = sext i32 %33 to i64
  %476 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %445, i64 %475
  %477 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %450, i64 %468
  %478 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %460, i64 %457
  %479 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %466, i64 %452
  %480 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %473, i64 %448
  %481 = sext i32 %54 to i64
  %482 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %481, i64 %446
  %483 = sext i32 %58 to i64
  %484 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %445, i64 %483
  %485 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %450, i64 %475
  %486 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %460, i64 %462
  %487 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %466, i64 %457
  %488 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %473, i64 %452
  %489 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %481, i64 %448
  %490 = sext i32 %30 to i64
  %491 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %490, i64 %446
  %492 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 11
  %493 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %450, i64 %483
  %494 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %460, i64 %468
  %495 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %466, i64 %462
  %496 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %473, i64 %457
  %497 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %481, i64 %452
  %498 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %490, i64 %448
  %499 = load <8 x i16>, ptr %440, align 2, !tbaa !40
  %500 = zext <8 x i16> %499 to <8 x i32>
  %501 = add nuw nsw <8 x i32> %500, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %502 = extractelement <8 x i32> %501, i64 0
  %503 = add nuw nsw i32 %502, %439
  %504 = add nuw nsw i32 %503, %444
  %505 = lshr i32 %504, 2
  %506 = trunc i32 %505 to i16
  store i16 %506, ptr %447, align 2, !tbaa !40
  %507 = extractelement <8 x i32> %500, i64 0
  %508 = shl nuw nsw i32 %507, 1
  %509 = extractelement <8 x i32> %501, i64 1
  %510 = add nuw nsw i32 %509, %443
  %511 = add nuw nsw i32 %510, %508
  %512 = lshr i32 %511, 2
  %513 = trunc i32 %512 to i16
  store i16 %513, ptr %449, align 2, !tbaa !40
  store i16 %513, ptr %451, align 2, !tbaa !40
  %514 = shufflevector <8 x i32> %500, <8 x i32> poison, <8 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison>
  %515 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %466, i64 %468
  %516 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %473, i64 %462
  %517 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %481, i64 %457
  %518 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %490, i64 %452
  %519 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 13
  %520 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %460, i64 %483
  %521 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %466, i64 %475
  %522 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %473, i64 %468
  %523 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %481, i64 %462
  %524 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %490, i64 %457
  %525 = load <2 x i16>, ptr %492, align 2, !tbaa !40
  %526 = zext <2 x i16> %525 to <2 x i32>
  %527 = shufflevector <2 x i32> %526, <2 x i32> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %528 = shufflevector <8 x i32> %514, <8 x i32> %527, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>
  %529 = shl nuw nsw <8 x i32> %528, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %530 = add nuw nsw <8 x i32> %501, %529
  %531 = shufflevector <8 x i32> %514, <8 x i32> poison, <8 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 poison, i32 poison>
  %532 = shufflevector <8 x i32> %531, <8 x i32> %527, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  %533 = add nuw nsw <8 x i32> %530, %532
  %534 = lshr <8 x i32> %533, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %535 = trunc <8 x i32> %534 to <8 x i16>
  %536 = extractelement <8 x i16> %535, i64 0
  store i16 %536, ptr %453, align 2, !tbaa !40
  store i16 %536, ptr %454, align 2, !tbaa !40
  %537 = extractelement <8 x i16> %535, i64 1
  store i16 %537, ptr %458, align 2, !tbaa !40
  store i16 %537, ptr %459, align 2, !tbaa !40
  store i16 %537, ptr %461, align 2, !tbaa !40
  %538 = extractelement <8 x i16> %535, i64 2
  store i16 %538, ptr %463, align 2, !tbaa !40
  store i16 %538, ptr %464, align 2, !tbaa !40
  store i16 %538, ptr %465, align 2, !tbaa !40
  store i16 %538, ptr %467, align 2, !tbaa !40
  %539 = extractelement <8 x i16> %535, i64 3
  store i16 %539, ptr %469, align 2, !tbaa !40
  store i16 %539, ptr %470, align 2, !tbaa !40
  store i16 %539, ptr %471, align 2, !tbaa !40
  store i16 %539, ptr %472, align 2, !tbaa !40
  store i16 %539, ptr %474, align 2, !tbaa !40
  %540 = extractelement <8 x i16> %535, i64 4
  store i16 %540, ptr %476, align 2, !tbaa !40
  store i16 %540, ptr %477, align 2, !tbaa !40
  store i16 %540, ptr %478, align 2, !tbaa !40
  store i16 %540, ptr %479, align 2, !tbaa !40
  store i16 %540, ptr %480, align 2, !tbaa !40
  store i16 %540, ptr %482, align 2, !tbaa !40
  %541 = extractelement <8 x i16> %535, i64 5
  store i16 %541, ptr %484, align 2, !tbaa !40
  store i16 %541, ptr %485, align 2, !tbaa !40
  store i16 %541, ptr %486, align 2, !tbaa !40
  store i16 %541, ptr %487, align 2, !tbaa !40
  store i16 %541, ptr %488, align 2, !tbaa !40
  store i16 %541, ptr %489, align 2, !tbaa !40
  store i16 %541, ptr %491, align 2, !tbaa !40
  %542 = extractelement <8 x i16> %535, i64 6
  store i16 %542, ptr %493, align 2, !tbaa !40
  store i16 %542, ptr %495, align 2, !tbaa !40
  store i16 %542, ptr %496, align 2, !tbaa !40
  store i16 %542, ptr %497, align 2, !tbaa !40
  store i16 %542, ptr %498, align 2, !tbaa !40
  store <8 x i16> %535, ptr %456, align 2, !tbaa !40
  %543 = extractelement <8 x i16> %535, i64 7
  %544 = shufflevector <8 x i16> %535, <8 x i16> poison, <2 x i32> <i32 6, i32 7>
  store <2 x i16> %544, ptr %494, align 2, !tbaa !40
  store i16 %543, ptr %515, align 2, !tbaa !40
  store i16 %543, ptr %516, align 2, !tbaa !40
  store i16 %543, ptr %517, align 2, !tbaa !40
  store i16 %543, ptr %518, align 2, !tbaa !40
  %545 = load <2 x i16>, ptr %519, align 2, !tbaa !40
  %546 = zext <2 x i16> %545 to <2 x i32>
  %547 = shufflevector <2 x i32> %526, <2 x i32> %546, <2 x i32> <i32 1, i32 2>
  %548 = shl nuw nsw <2 x i32> %547, <i32 1, i32 1>
  %549 = add nuw nsw <2 x i32> %526, <i32 2, i32 2>
  %550 = add nuw nsw <2 x i32> %549, %548
  %551 = add nuw nsw <2 x i32> %550, %546
  %552 = lshr <2 x i32> %551, <i32 2, i32 2>
  %553 = trunc <2 x i32> %552 to <2 x i16>
  %554 = extractelement <2 x i16> %553, i64 0
  store i16 %554, ptr %520, align 2, !tbaa !40
  store i16 %554, ptr %523, align 2, !tbaa !40
  store i16 %554, ptr %524, align 2, !tbaa !40
  store <2 x i16> %553, ptr %521, align 2, !tbaa !40
  store <2 x i16> %553, ptr %522, align 2, !tbaa !40
  %555 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %481, i64 %468
  %556 = extractelement <2 x i16> %553, i64 1
  store i16 %556, ptr %555, align 2, !tbaa !40
  %557 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %490, i64 %462
  store i16 %556, ptr %557, align 2, !tbaa !40
  %558 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 15
  %559 = load i16, ptr %558, align 2, !tbaa !40
  %560 = zext i16 %559 to i32
  %561 = extractelement <2 x i32> %546, i64 1
  %562 = shl nuw nsw i32 %561, 1
  %563 = extractelement <2 x i32> %546, i64 0
  %564 = add nuw nsw i32 %563, 2
  %565 = add nuw nsw i32 %564, %562
  %566 = add nuw nsw i32 %565, %560
  %567 = lshr i32 %566, 2
  %568 = trunc i32 %567 to i16
  %569 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %473, i64 %483
  store i16 %568, ptr %569, align 2, !tbaa !40
  %570 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %481, i64 %475
  store i16 %568, ptr %570, align 2, !tbaa !40
  %571 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %490, i64 %468
  store i16 %568, ptr %571, align 2, !tbaa !40
  %572 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 16
  %573 = load i16, ptr %572, align 16, !tbaa !40
  %574 = zext i16 %573 to i32
  %575 = shl nuw nsw i32 %560, 1
  %576 = add nuw nsw i32 %561, 2
  %577 = add nuw nsw i32 %576, %575
  %578 = add nuw nsw i32 %577, %574
  %579 = lshr i32 %578, 2
  %580 = trunc i32 %579 to i16
  %581 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %481, i64 %483
  store i16 %580, ptr %581, align 2, !tbaa !40
  %582 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %490, i64 %475
  store i16 %580, ptr %582, align 2, !tbaa !40
  %583 = mul nuw nsw i32 %574, 3
  %584 = add nuw nsw i32 %560, 2
  %585 = add nuw nsw i32 %584, %583
  %586 = lshr i32 %585, 2
  %587 = trunc i32 %586 to i16
  %588 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %490, i64 %483
  store i16 %587, ptr %588, align 2, !tbaa !40
  br label %1596

589:                                              ; preds = %340
  br i1 %137, label %593, label %590

590:                                              ; preds = %589
  %591 = load i32, ptr %11, align 4, !tbaa !49
  %592 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.3.583, i32 noundef %591) #47
  br label %593

593:                                              ; preds = %590, %589
  %594 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 1
  %595 = load i16, ptr %594, align 2, !tbaa !40
  %596 = zext i16 %595 to i32
  %597 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 2
  %598 = load i16, ptr %597, align 4, !tbaa !40
  %599 = zext i16 %598 to i32
  %600 = add nuw nsw i32 %599, 1
  %601 = add nuw nsw i32 %600, %596
  %602 = lshr i32 %601, 1
  %603 = trunc i32 %602 to i16
  %604 = sext i32 %26 to i64
  %605 = sext i32 %25 to i64
  %606 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %604, i64 %605
  store i16 %603, ptr %606, align 2, !tbaa !40
  %607 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 3
  %608 = load i16, ptr %607, align 2, !tbaa !40
  %609 = zext i16 %608 to i32
  %610 = add nuw nsw i32 %600, %609
  %611 = lshr i32 %610, 1
  %612 = trunc i32 %611 to i16
  %613 = sext i32 %52 to i64
  %614 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %613, i64 %605
  store i16 %612, ptr %614, align 2, !tbaa !40
  %615 = sext i32 %55 to i64
  %616 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %604, i64 %615
  store i16 %612, ptr %616, align 2, !tbaa !40
  %617 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 4
  %618 = load i16, ptr %617, align 8, !tbaa !40
  %619 = zext i16 %618 to i32
  %620 = add nuw nsw i32 %609, 1
  %621 = add nuw nsw i32 %620, %619
  %622 = lshr i32 %621, 1
  %623 = trunc i32 %622 to i16
  %624 = sext i32 %53 to i64
  %625 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %624, i64 %605
  store i16 %623, ptr %625, align 2, !tbaa !40
  %626 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %613, i64 %615
  store i16 %623, ptr %626, align 2, !tbaa !40
  %627 = sext i32 %31 to i64
  %628 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %604, i64 %627
  store i16 %623, ptr %628, align 2, !tbaa !40
  %629 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 5
  %630 = load i16, ptr %629, align 2, !tbaa !40
  %631 = zext i16 %630 to i32
  %632 = add nuw nsw i32 %619, 1
  %633 = add nuw nsw i32 %632, %631
  %634 = lshr i32 %633, 1
  %635 = trunc i32 %634 to i16
  %636 = sext i32 %54 to i64
  %637 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %636, i64 %605
  store i16 %635, ptr %637, align 2, !tbaa !40
  %638 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %624, i64 %615
  store i16 %635, ptr %638, align 2, !tbaa !40
  %639 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %613, i64 %627
  store i16 %635, ptr %639, align 2, !tbaa !40
  %640 = sext i32 %56 to i64
  %641 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %604, i64 %640
  store i16 %635, ptr %641, align 2, !tbaa !40
  %642 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 6
  %643 = load i16, ptr %642, align 4, !tbaa !40
  %644 = zext i16 %643 to i32
  %645 = add nuw nsw i32 %631, 1
  %646 = add nuw nsw i32 %645, %644
  %647 = lshr i32 %646, 1
  %648 = trunc i32 %647 to i16
  %649 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %636, i64 %615
  store i16 %648, ptr %649, align 2, !tbaa !40
  %650 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %624, i64 %627
  store i16 %648, ptr %650, align 2, !tbaa !40
  %651 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %613, i64 %640
  store i16 %648, ptr %651, align 2, !tbaa !40
  %652 = sext i32 %32 to i64
  %653 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %604, i64 %652
  store i16 %648, ptr %653, align 2, !tbaa !40
  %654 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 7
  %655 = load i16, ptr %654, align 2, !tbaa !40
  %656 = zext i16 %655 to i32
  %657 = add nuw nsw i32 %644, 1
  %658 = add nuw nsw i32 %657, %656
  %659 = lshr i32 %658, 1
  %660 = trunc i32 %659 to i16
  %661 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %636, i64 %627
  store i16 %660, ptr %661, align 2, !tbaa !40
  %662 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %624, i64 %640
  store i16 %660, ptr %662, align 2, !tbaa !40
  %663 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %613, i64 %652
  store i16 %660, ptr %663, align 2, !tbaa !40
  %664 = sext i32 %57 to i64
  %665 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %604, i64 %664
  store i16 %660, ptr %665, align 2, !tbaa !40
  %666 = load i16, ptr %182, align 16, !tbaa !40
  %667 = zext i16 %666 to i32
  %668 = add nuw nsw i32 %656, 1
  %669 = add nuw nsw i32 %668, %667
  %670 = lshr i32 %669, 1
  %671 = trunc i32 %670 to i16
  %672 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %636, i64 %640
  store i16 %671, ptr %672, align 2, !tbaa !40
  %673 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %624, i64 %652
  store i16 %671, ptr %673, align 2, !tbaa !40
  %674 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %613, i64 %664
  store i16 %671, ptr %674, align 2, !tbaa !40
  %675 = sext i32 %33 to i64
  %676 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %604, i64 %675
  store i16 %671, ptr %676, align 2, !tbaa !40
  %677 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 9
  %678 = load i16, ptr %677, align 2, !tbaa !40
  %679 = zext i16 %678 to i32
  %680 = add nuw nsw i32 %667, 1
  %681 = add nuw nsw i32 %680, %679
  %682 = lshr i32 %681, 1
  %683 = trunc i32 %682 to i16
  %684 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %636, i64 %652
  store i16 %683, ptr %684, align 2, !tbaa !40
  %685 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %624, i64 %664
  store i16 %683, ptr %685, align 2, !tbaa !40
  %686 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %613, i64 %675
  store i16 %683, ptr %686, align 2, !tbaa !40
  %687 = sext i32 %58 to i64
  %688 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %604, i64 %687
  store i16 %683, ptr %688, align 2, !tbaa !40
  %689 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 10
  %690 = load i16, ptr %689, align 4, !tbaa !40
  %691 = zext i16 %690 to i32
  %692 = add nuw nsw i32 %679, 1
  %693 = add nuw nsw i32 %692, %691
  %694 = lshr i32 %693, 1
  %695 = trunc i32 %694 to i16
  %696 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %636, i64 %664
  store i16 %695, ptr %696, align 2, !tbaa !40
  %697 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %624, i64 %675
  store i16 %695, ptr %697, align 2, !tbaa !40
  %698 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %613, i64 %687
  store i16 %695, ptr %698, align 2, !tbaa !40
  %699 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 11
  %700 = load i16, ptr %699, align 2, !tbaa !40
  %701 = zext i16 %700 to i32
  %702 = add nuw nsw i32 %691, 1
  %703 = add nuw nsw i32 %702, %701
  %704 = lshr i32 %703, 1
  %705 = trunc i32 %704 to i16
  %706 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %636, i64 %675
  store i16 %705, ptr %706, align 2, !tbaa !40
  %707 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %624, i64 %687
  store i16 %705, ptr %707, align 2, !tbaa !40
  %708 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 12
  %709 = load i16, ptr %708, align 8, !tbaa !40
  %710 = zext i16 %709 to i32
  %711 = add nuw nsw i32 %701, 1
  %712 = add nuw nsw i32 %711, %710
  %713 = lshr i32 %712, 1
  %714 = trunc i32 %713 to i16
  %715 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %636, i64 %687
  store i16 %714, ptr %715, align 2, !tbaa !40
  %716 = shl nuw nsw i32 %599, 1
  %717 = add nuw nsw i32 %609, 2
  %718 = add nuw nsw i32 %717, %596
  %719 = add nuw nsw i32 %718, %716
  %720 = lshr i32 %719, 2
  %721 = trunc i32 %720 to i16
  %722 = sext i32 %27 to i64
  %723 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %722, i64 %605
  store i16 %721, ptr %723, align 2, !tbaa !40
  %724 = shl nuw nsw i32 %609, 1
  %725 = add nuw nsw i32 %619, 2
  %726 = add nuw nsw i32 %725, %599
  %727 = add nuw nsw i32 %726, %724
  %728 = lshr i32 %727, 2
  %729 = trunc i32 %728 to i16
  %730 = sext i32 %28 to i64
  %731 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %730, i64 %605
  store i16 %729, ptr %731, align 2, !tbaa !40
  %732 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %722, i64 %615
  store i16 %729, ptr %732, align 2, !tbaa !40
  %733 = shl nuw nsw i32 %619, 1
  %734 = add nuw nsw i32 %717, %733
  %735 = add nuw nsw i32 %734, %631
  %736 = lshr i32 %735, 2
  %737 = trunc i32 %736 to i16
  %738 = sext i32 %29 to i64
  %739 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %738, i64 %605
  store i16 %737, ptr %739, align 2, !tbaa !40
  %740 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %730, i64 %615
  store i16 %737, ptr %740, align 2, !tbaa !40
  %741 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %722, i64 %627
  store i16 %737, ptr %741, align 2, !tbaa !40
  %742 = shl nuw nsw i32 %631, 1
  %743 = add nuw nsw i32 %725, %742
  %744 = add nuw nsw i32 %743, %644
  %745 = lshr i32 %744, 2
  %746 = trunc i32 %745 to i16
  %747 = sext i32 %30 to i64
  %748 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %747, i64 %605
  store i16 %746, ptr %748, align 2, !tbaa !40
  %749 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %738, i64 %615
  store i16 %746, ptr %749, align 2, !tbaa !40
  %750 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %730, i64 %627
  store i16 %746, ptr %750, align 2, !tbaa !40
  %751 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %722, i64 %640
  store i16 %746, ptr %751, align 2, !tbaa !40
  %752 = shl nuw nsw i32 %644, 1
  %753 = add nuw nsw i32 %631, 2
  %754 = add nuw nsw i32 %753, %752
  %755 = add nuw nsw i32 %754, %656
  %756 = lshr i32 %755, 2
  %757 = trunc i32 %756 to i16
  %758 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %747, i64 %615
  store i16 %757, ptr %758, align 2, !tbaa !40
  %759 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %738, i64 %627
  store i16 %757, ptr %759, align 2, !tbaa !40
  %760 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %730, i64 %640
  store i16 %757, ptr %760, align 2, !tbaa !40
  %761 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %722, i64 %652
  store i16 %757, ptr %761, align 2, !tbaa !40
  %762 = shl nuw nsw i32 %656, 1
  %763 = add nuw nsw i32 %644, 2
  %764 = add nuw nsw i32 %763, %762
  %765 = add nuw nsw i32 %764, %667
  %766 = lshr i32 %765, 2
  %767 = trunc i32 %766 to i16
  %768 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %747, i64 %627
  store i16 %767, ptr %768, align 2, !tbaa !40
  %769 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %738, i64 %640
  store i16 %767, ptr %769, align 2, !tbaa !40
  %770 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %730, i64 %652
  store i16 %767, ptr %770, align 2, !tbaa !40
  %771 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %722, i64 %664
  store i16 %767, ptr %771, align 2, !tbaa !40
  %772 = shl nuw nsw i32 %667, 1
  %773 = add nuw nsw i32 %656, 2
  %774 = add nuw nsw i32 %773, %772
  %775 = add nuw nsw i32 %774, %679
  %776 = lshr i32 %775, 2
  %777 = trunc i32 %776 to i16
  %778 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %747, i64 %640
  store i16 %777, ptr %778, align 2, !tbaa !40
  %779 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %738, i64 %652
  store i16 %777, ptr %779, align 2, !tbaa !40
  %780 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %730, i64 %664
  store i16 %777, ptr %780, align 2, !tbaa !40
  %781 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %722, i64 %675
  store i16 %777, ptr %781, align 2, !tbaa !40
  %782 = shl nuw nsw i32 %679, 1
  %783 = add nuw nsw i32 %667, 2
  %784 = add nuw nsw i32 %783, %782
  %785 = add nuw nsw i32 %784, %691
  %786 = lshr i32 %785, 2
  %787 = trunc i32 %786 to i16
  %788 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %747, i64 %652
  store i16 %787, ptr %788, align 2, !tbaa !40
  %789 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %738, i64 %664
  store i16 %787, ptr %789, align 2, !tbaa !40
  %790 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %730, i64 %675
  store i16 %787, ptr %790, align 2, !tbaa !40
  %791 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %722, i64 %687
  store i16 %787, ptr %791, align 2, !tbaa !40
  %792 = shl nuw nsw i32 %691, 1
  %793 = add nuw nsw i32 %679, 2
  %794 = add nuw nsw i32 %793, %792
  %795 = add nuw nsw i32 %794, %701
  %796 = lshr i32 %795, 2
  %797 = trunc i32 %796 to i16
  %798 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %747, i64 %664
  store i16 %797, ptr %798, align 2, !tbaa !40
  %799 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %738, i64 %675
  store i16 %797, ptr %799, align 2, !tbaa !40
  %800 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %730, i64 %687
  store i16 %797, ptr %800, align 2, !tbaa !40
  %801 = shl nuw nsw i32 %701, 1
  %802 = add nuw nsw i32 %691, 2
  %803 = add nuw nsw i32 %802, %801
  %804 = add nuw nsw i32 %803, %710
  %805 = lshr i32 %804, 2
  %806 = trunc i32 %805 to i16
  %807 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %747, i64 %675
  store i16 %806, ptr %807, align 2, !tbaa !40
  %808 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %738, i64 %687
  store i16 %806, ptr %808, align 2, !tbaa !40
  %809 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 13
  %810 = load i16, ptr %809, align 2, !tbaa !40
  %811 = zext i16 %810 to i32
  %812 = shl nuw nsw i32 %710, 1
  %813 = add nuw nsw i32 %701, 2
  %814 = add nuw nsw i32 %813, %812
  %815 = add nuw nsw i32 %814, %811
  %816 = lshr i32 %815, 2
  %817 = trunc i32 %816 to i16
  %818 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %747, i64 %687
  store i16 %817, ptr %818, align 2, !tbaa !40
  br label %1596

819:                                              ; preds = %340
  %820 = and i1 %222, %137
  %821 = and i1 %324, %820
  br i1 %821, label %825, label %822

822:                                              ; preds = %819
  %823 = load i32, ptr %11, align 4, !tbaa !49
  %824 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.4.584, i32 noundef %823) #47
  br label %825

825:                                              ; preds = %822, %819
  %826 = load i16, ptr %323, align 16, !tbaa !40
  %827 = zext i16 %826 to i32
  %828 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 22
  %829 = load i16, ptr %828, align 4, !tbaa !40
  %830 = zext i16 %829 to i32
  %831 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 23
  %832 = load i16, ptr %831, align 2, !tbaa !40
  %833 = zext i16 %832 to i32
  %834 = shl nuw nsw i32 %833, 1
  %835 = add nuw nsw i32 %830, 2
  %836 = add nuw nsw i32 %835, %827
  %837 = add nuw nsw i32 %836, %834
  %838 = lshr i32 %837, 2
  %839 = trunc i32 %838 to i16
  %840 = sext i32 %30 to i64
  %841 = sext i32 %25 to i64
  %842 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %840, i64 %841
  store i16 %839, ptr %842, align 2, !tbaa !40
  %843 = shl nuw nsw i32 %830, 1
  %844 = sext i32 %55 to i64
  %845 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %840, i64 %844
  %846 = sext i32 %54 to i64
  %847 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %846, i64 %841
  %848 = sext i32 %31 to i64
  %849 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %840, i64 %848
  %850 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %846, i64 %844
  %851 = sext i32 %29 to i64
  %852 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %851, i64 %841
  %853 = sext i32 %56 to i64
  %854 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %840, i64 %853
  %855 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %846, i64 %848
  %856 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %851, i64 %844
  %857 = sext i32 %53 to i64
  %858 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %857, i64 %841
  %859 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 18
  %860 = sext i32 %32 to i64
  %861 = sext i32 %28 to i64
  %862 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %861, i64 %841
  %863 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 17
  %864 = load <8 x i16>, ptr %863, align 2
  %865 = shufflevector <8 x i16> %864, <8 x i16> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %866 = sext i32 %57 to i64
  %867 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %861, i64 %844
  %868 = sext i32 %52 to i64
  %869 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %868, i64 %841
  %870 = load i16, ptr %3, align 16, !tbaa !40
  %871 = sext i32 %33 to i64
  %872 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %861, i64 %848
  %873 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %868, i64 %844
  %874 = sext i32 %27 to i64
  %875 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %874, i64 %841
  %876 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 1
  %877 = sext i32 %58 to i64
  %878 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %840, i64 %877
  %879 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %846, i64 %871
  %880 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %851, i64 %866
  %881 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %857, i64 %860
  %882 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %861, i64 %853
  %883 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %868, i64 %848
  %884 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %874, i64 %844
  %885 = sext i32 %26 to i64
  %886 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %885, i64 %841
  %887 = load <4 x i16>, ptr %876, align 2
  %888 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %885, i64 %844
  %889 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 3
  %890 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %851, i64 %877
  %891 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %885, i64 %848
  %892 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %885, i64 %853
  %893 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %861, i64 %877
  %894 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %868, i64 %871
  %895 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %874, i64 %866
  %896 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %885, i64 %860
  %897 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 7
  %898 = load i16, ptr %897, align 2, !tbaa !40
  %899 = zext i16 %898 to i32
  %900 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %874, i64 %877
  %901 = load i16, ptr %182, align 16, !tbaa !40
  %902 = zext i16 %901 to i32
  %903 = load <4 x i16>, ptr %889, align 2, !tbaa !40
  %904 = zext <4 x i16> %903 to <4 x i32>
  %905 = insertelement <4 x i16> %865, i16 %870, i64 1
  %906 = shufflevector <4 x i16> %905, <4 x i16> %887, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %907 = zext <4 x i16> %906 to <4 x i32>
  %908 = load <4 x i16>, ptr %859, align 4, !tbaa !40
  %909 = zext <4 x i16> %908 to <4 x i32>
  %910 = add nuw nsw <4 x i32> %909, <i32 2, i32 2, i32 2, i32 2>
  %911 = shufflevector <4 x i32> %910, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %912 = extractelement <4 x i32> %910, i64 3
  %913 = add nuw nsw i32 %912, %833
  %914 = add nuw nsw i32 %913, %843
  %915 = lshr i32 %914, 2
  %916 = trunc i32 %915 to i16
  store i16 %916, ptr %845, align 2, !tbaa !40
  store i16 %916, ptr %847, align 2, !tbaa !40
  %917 = extractelement <4 x i32> %909, i64 3
  %918 = shl nuw nsw i32 %917, 1
  %919 = add nuw nsw i32 %835, %918
  %920 = extractelement <4 x i32> %909, i64 2
  %921 = add nuw nsw i32 %919, %920
  %922 = lshr i32 %921, 2
  %923 = trunc i32 %922 to i16
  store i16 %923, ptr %849, align 2, !tbaa !40
  store i16 %923, ptr %850, align 2, !tbaa !40
  store i16 %923, ptr %852, align 2, !tbaa !40
  %924 = shufflevector <4 x i32> %907, <4 x i32> %909, <4 x i32> <i32 6, i32 5, i32 4, i32 0>
  %925 = shl nuw nsw <4 x i32> %924, <i32 1, i32 1, i32 1, i32 1>
  %926 = add nuw nsw <4 x i32> %911, %925
  %927 = shufflevector <4 x i32> %907, <4 x i32> %909, <4 x i32> <i32 5, i32 4, i32 0, i32 1>
  %928 = add nuw nsw <4 x i32> %926, %927
  %929 = lshr <4 x i32> %928, <i32 2, i32 2, i32 2, i32 2>
  %930 = trunc <4 x i32> %929 to <4 x i16>
  %931 = extractelement <4 x i16> %930, i64 1
  store i16 %931, ptr %862, align 2, !tbaa !40
  %932 = extractelement <4 x i16> %930, i64 2
  store i16 %932, ptr %867, align 2, !tbaa !40
  store i16 %932, ptr %869, align 2, !tbaa !40
  store <4 x i16> %930, ptr %854, align 2, !tbaa !40
  store <4 x i16> %930, ptr %855, align 2, !tbaa !40
  store <4 x i16> %930, ptr %856, align 2, !tbaa !40
  store <4 x i16> %930, ptr %858, align 2, !tbaa !40
  %933 = extractelement <4 x i16> %930, i64 3
  store i16 %933, ptr %872, align 2, !tbaa !40
  store i16 %933, ptr %873, align 2, !tbaa !40
  store i16 %933, ptr %875, align 2, !tbaa !40
  %934 = add nuw nsw <4 x i32> %907, <i32 2, i32 2, i32 2, i32 2>
  %935 = shufflevector <4 x i32> %904, <4 x i32> %907, <4 x i32> <i32 5, i32 6, i32 7, i32 0>
  %936 = shl nuw nsw <4 x i32> %935, <i32 1, i32 1, i32 1, i32 1>
  %937 = add nuw nsw <4 x i32> %934, %936
  %938 = shufflevector <4 x i32> %904, <4 x i32> %907, <4 x i32> <i32 6, i32 7, i32 0, i32 1>
  %939 = add nuw nsw <4 x i32> %937, %938
  %940 = lshr <4 x i32> %939, <i32 2, i32 2, i32 2, i32 2>
  %941 = trunc <4 x i32> %940 to <4 x i16>
  %942 = extractelement <4 x i16> %941, i64 0
  store i16 %942, ptr %878, align 2, !tbaa !40
  store i16 %942, ptr %886, align 2, !tbaa !40
  %943 = extractelement <4 x i16> %941, i64 1
  %944 = shufflevector <4 x i16> %941, <4 x i16> poison, <2 x i32> <i32 0, i32 1>
  store <2 x i16> %944, ptr %879, align 2, !tbaa !40
  store <2 x i16> %944, ptr %880, align 2, !tbaa !40
  store i16 %943, ptr %888, align 2, !tbaa !40
  %945 = extractelement <4 x i16> %941, i64 2
  store i16 %945, ptr %890, align 2, !tbaa !40
  store i16 %945, ptr %891, align 2, !tbaa !40
  store <4 x i16> %941, ptr %881, align 2, !tbaa !40
  store <4 x i16> %941, ptr %882, align 2, !tbaa !40
  store <4 x i16> %941, ptr %883, align 2, !tbaa !40
  store <4 x i16> %941, ptr %884, align 2, !tbaa !40
  %946 = extractelement <4 x i16> %941, i64 3
  store i16 %946, ptr %892, align 2, !tbaa !40
  %947 = shufflevector <4 x i32> %904, <4 x i32> poison, <4 x i32> <i32 1, i32 2, i32 3, i32 poison>
  %948 = insertelement <4 x i32> %947, i32 %899, i64 3
  %949 = shl nuw nsw <4 x i32> %948, <i32 1, i32 1, i32 1, i32 1>
  %950 = add nuw nsw <4 x i32> %904, <i32 2, i32 2, i32 2, i32 2>
  %951 = add nuw nsw <4 x i32> %950, %949
  %952 = shufflevector <4 x i32> %948, <4 x i32> poison, <4 x i32> <i32 1, i32 2, i32 3, i32 poison>
  %953 = insertelement <4 x i32> %952, i32 %902, i64 3
  %954 = add nuw nsw <4 x i32> %951, %953
  %955 = lshr <4 x i32> %954, <i32 2, i32 2, i32 2, i32 2>
  %956 = trunc <4 x i32> %955 to <4 x i16>
  %957 = extractelement <4 x i16> %956, i64 0
  store i16 %957, ptr %893, align 2, !tbaa !40
  %958 = shufflevector <4 x i16> %956, <4 x i16> poison, <2 x i32> <i32 0, i32 1>
  store <2 x i16> %958, ptr %894, align 2, !tbaa !40
  store <2 x i16> %958, ptr %895, align 2, !tbaa !40
  %959 = extractelement <4 x i16> %956, i64 2
  store i16 %959, ptr %900, align 2, !tbaa !40
  store <4 x i16> %956, ptr %896, align 2, !tbaa !40
  br label %1596

960:                                              ; preds = %340
  %961 = and i1 %222, %137
  %962 = and i1 %324, %961
  br i1 %962, label %966, label %963

963:                                              ; preds = %960
  %964 = load i32, ptr %11, align 4, !tbaa !49
  %965 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5.585, i32 noundef %964) #47
  br label %966

966:                                              ; preds = %963, %960
  %967 = load i16, ptr %3, align 16, !tbaa !40
  %968 = zext i16 %967 to i32
  %969 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 1
  %970 = load i16, ptr %969, align 2, !tbaa !40
  %971 = zext i16 %970 to i32
  %972 = add nuw nsw i32 %971, 1
  %973 = add nuw nsw i32 %972, %968
  %974 = lshr i32 %973, 1
  %975 = trunc i32 %974 to i16
  %976 = sext i32 %54 to i64
  %977 = sext i32 %56 to i64
  %978 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %976, i64 %977
  store i16 %975, ptr %978, align 2, !tbaa !40
  %979 = sext i32 %53 to i64
  %980 = sext i32 %31 to i64
  %981 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %979, i64 %980
  store i16 %975, ptr %981, align 2, !tbaa !40
  %982 = sext i32 %52 to i64
  %983 = sext i32 %55 to i64
  %984 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %982, i64 %983
  store i16 %975, ptr %984, align 2, !tbaa !40
  %985 = sext i32 %26 to i64
  %986 = sext i32 %25 to i64
  %987 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %985, i64 %986
  store i16 %975, ptr %987, align 2, !tbaa !40
  %988 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 2
  %989 = load i16, ptr %988, align 4, !tbaa !40
  %990 = zext i16 %989 to i32
  %991 = add nuw nsw i32 %972, %990
  %992 = lshr i32 %991, 1
  %993 = trunc i32 %992 to i16
  %994 = sext i32 %32 to i64
  %995 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %976, i64 %994
  store i16 %993, ptr %995, align 2, !tbaa !40
  %996 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %979, i64 %977
  store i16 %993, ptr %996, align 2, !tbaa !40
  %997 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %982, i64 %980
  store i16 %993, ptr %997, align 2, !tbaa !40
  %998 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %985, i64 %983
  store i16 %993, ptr %998, align 2, !tbaa !40
  %999 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 3
  %1000 = load i16, ptr %999, align 2, !tbaa !40
  %1001 = zext i16 %1000 to i32
  %1002 = add nuw nsw i32 %990, 1
  %1003 = add nuw nsw i32 %1002, %1001
  %1004 = lshr i32 %1003, 1
  %1005 = trunc i32 %1004 to i16
  %1006 = sext i32 %57 to i64
  %1007 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %976, i64 %1006
  store i16 %1005, ptr %1007, align 2, !tbaa !40
  %1008 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %979, i64 %994
  store i16 %1005, ptr %1008, align 2, !tbaa !40
  %1009 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %982, i64 %977
  store i16 %1005, ptr %1009, align 2, !tbaa !40
  %1010 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %985, i64 %980
  store i16 %1005, ptr %1010, align 2, !tbaa !40
  %1011 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 4
  %1012 = load i16, ptr %1011, align 8, !tbaa !40
  %1013 = zext i16 %1012 to i32
  %1014 = add nuw nsw i32 %1001, 1
  %1015 = add nuw nsw i32 %1014, %1013
  %1016 = lshr i32 %1015, 1
  %1017 = trunc i32 %1016 to i16
  %1018 = sext i32 %33 to i64
  %1019 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %976, i64 %1018
  store i16 %1017, ptr %1019, align 2, !tbaa !40
  %1020 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %979, i64 %1006
  store i16 %1017, ptr %1020, align 2, !tbaa !40
  %1021 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %982, i64 %994
  store i16 %1017, ptr %1021, align 2, !tbaa !40
  %1022 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %985, i64 %977
  store i16 %1017, ptr %1022, align 2, !tbaa !40
  %1023 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 5
  %1024 = load i16, ptr %1023, align 2, !tbaa !40
  %1025 = zext i16 %1024 to i32
  %1026 = add nuw nsw i32 %1013, 1
  %1027 = add nuw nsw i32 %1026, %1025
  %1028 = lshr i32 %1027, 1
  %1029 = trunc i32 %1028 to i16
  %1030 = sext i32 %58 to i64
  %1031 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %976, i64 %1030
  store i16 %1029, ptr %1031, align 2, !tbaa !40
  %1032 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %979, i64 %1018
  store i16 %1029, ptr %1032, align 2, !tbaa !40
  %1033 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %982, i64 %1006
  store i16 %1029, ptr %1033, align 2, !tbaa !40
  %1034 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %985, i64 %994
  store i16 %1029, ptr %1034, align 2, !tbaa !40
  %1035 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 6
  %1036 = load i16, ptr %1035, align 4, !tbaa !40
  %1037 = zext i16 %1036 to i32
  %1038 = add nuw nsw i32 %1025, 1
  %1039 = add nuw nsw i32 %1038, %1037
  %1040 = lshr i32 %1039, 1
  %1041 = trunc i32 %1040 to i16
  %1042 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %979, i64 %1030
  store i16 %1041, ptr %1042, align 2, !tbaa !40
  %1043 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %982, i64 %1018
  store i16 %1041, ptr %1043, align 2, !tbaa !40
  %1044 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %985, i64 %1006
  store i16 %1041, ptr %1044, align 2, !tbaa !40
  %1045 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 7
  %1046 = load i16, ptr %1045, align 2, !tbaa !40
  %1047 = zext i16 %1046 to i32
  %1048 = add nuw nsw i32 %1037, 1
  %1049 = add nuw nsw i32 %1048, %1047
  %1050 = lshr i32 %1049, 1
  %1051 = trunc i32 %1050 to i16
  %1052 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %982, i64 %1030
  store i16 %1051, ptr %1052, align 2, !tbaa !40
  %1053 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %985, i64 %1018
  store i16 %1051, ptr %1053, align 2, !tbaa !40
  %1054 = load i16, ptr %182, align 16, !tbaa !40
  %1055 = zext i16 %1054 to i32
  %1056 = add nuw nsw i32 %1047, 1
  %1057 = add nuw nsw i32 %1056, %1055
  %1058 = lshr i32 %1057, 1
  %1059 = trunc i32 %1058 to i16
  %1060 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %985, i64 %1030
  store i16 %1059, ptr %1060, align 2, !tbaa !40
  %1061 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 17
  %1062 = load i16, ptr %1061, align 2, !tbaa !40
  %1063 = zext i16 %1062 to i32
  %1064 = shl nuw nsw i32 %968, 1
  %1065 = add nuw nsw i32 %971, 2
  %1066 = add nuw nsw i32 %1065, %1064
  %1067 = add nuw nsw i32 %1066, %1063
  %1068 = lshr i32 %1067, 2
  %1069 = trunc i32 %1068 to i16
  %1070 = sext i32 %30 to i64
  %1071 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1070, i64 %977
  store i16 %1069, ptr %1071, align 2, !tbaa !40
  %1072 = sext i32 %29 to i64
  %1073 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1072, i64 %980
  store i16 %1069, ptr %1073, align 2, !tbaa !40
  %1074 = sext i32 %28 to i64
  %1075 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1074, i64 %983
  store i16 %1069, ptr %1075, align 2, !tbaa !40
  %1076 = sext i32 %27 to i64
  %1077 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1076, i64 %986
  store i16 %1069, ptr %1077, align 2, !tbaa !40
  %1078 = shl nuw nsw i32 %971, 1
  %1079 = add nuw nsw i32 %968, 2
  %1080 = add nuw nsw i32 %1079, %1078
  %1081 = add nuw nsw i32 %1080, %990
  %1082 = lshr i32 %1081, 2
  %1083 = trunc i32 %1082 to i16
  %1084 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1070, i64 %994
  store i16 %1083, ptr %1084, align 2, !tbaa !40
  %1085 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1072, i64 %977
  store i16 %1083, ptr %1085, align 2, !tbaa !40
  %1086 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1074, i64 %980
  store i16 %1083, ptr %1086, align 2, !tbaa !40
  %1087 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1076, i64 %983
  store i16 %1083, ptr %1087, align 2, !tbaa !40
  %1088 = shl nuw nsw i32 %990, 1
  %1089 = add nuw nsw i32 %1065, %1088
  %1090 = add nuw nsw i32 %1089, %1001
  %1091 = lshr i32 %1090, 2
  %1092 = trunc i32 %1091 to i16
  %1093 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1070, i64 %1006
  store i16 %1092, ptr %1093, align 2, !tbaa !40
  %1094 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1072, i64 %994
  store i16 %1092, ptr %1094, align 2, !tbaa !40
  %1095 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1074, i64 %977
  store i16 %1092, ptr %1095, align 2, !tbaa !40
  %1096 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1076, i64 %980
  store i16 %1092, ptr %1096, align 2, !tbaa !40
  %1097 = shl nuw nsw i32 %1001, 1
  %1098 = add nuw nsw i32 %990, 2
  %1099 = add nuw nsw i32 %1098, %1097
  %1100 = add nuw nsw i32 %1099, %1013
  %1101 = lshr i32 %1100, 2
  %1102 = trunc i32 %1101 to i16
  %1103 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1070, i64 %1018
  store i16 %1102, ptr %1103, align 2, !tbaa !40
  %1104 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1072, i64 %1006
  store i16 %1102, ptr %1104, align 2, !tbaa !40
  %1105 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1074, i64 %994
  store i16 %1102, ptr %1105, align 2, !tbaa !40
  %1106 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1076, i64 %977
  store i16 %1102, ptr %1106, align 2, !tbaa !40
  %1107 = shl nuw nsw i32 %1013, 1
  %1108 = add nuw nsw i32 %1001, 2
  %1109 = add nuw nsw i32 %1108, %1107
  %1110 = add nuw nsw i32 %1109, %1025
  %1111 = lshr i32 %1110, 2
  %1112 = trunc i32 %1111 to i16
  %1113 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1070, i64 %1030
  store i16 %1112, ptr %1113, align 2, !tbaa !40
  %1114 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1072, i64 %1018
  store i16 %1112, ptr %1114, align 2, !tbaa !40
  %1115 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1074, i64 %1006
  store i16 %1112, ptr %1115, align 2, !tbaa !40
  %1116 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1076, i64 %994
  store i16 %1112, ptr %1116, align 2, !tbaa !40
  %1117 = shl nuw nsw i32 %1025, 1
  %1118 = add nuw nsw i32 %1013, 2
  %1119 = add nuw nsw i32 %1118, %1117
  %1120 = add nuw nsw i32 %1119, %1037
  %1121 = lshr i32 %1120, 2
  %1122 = trunc i32 %1121 to i16
  %1123 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1072, i64 %1030
  store i16 %1122, ptr %1123, align 2, !tbaa !40
  %1124 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1074, i64 %1018
  store i16 %1122, ptr %1124, align 2, !tbaa !40
  %1125 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1076, i64 %1006
  store i16 %1122, ptr %1125, align 2, !tbaa !40
  %1126 = shl nuw nsw i32 %1037, 1
  %1127 = add nuw nsw i32 %1025, 2
  %1128 = add nuw nsw i32 %1127, %1126
  %1129 = add nuw nsw i32 %1128, %1047
  %1130 = lshr i32 %1129, 2
  %1131 = trunc i32 %1130 to i16
  %1132 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1074, i64 %1030
  store i16 %1131, ptr %1132, align 2, !tbaa !40
  %1133 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1076, i64 %1018
  store i16 %1131, ptr %1133, align 2, !tbaa !40
  %1134 = shl nuw nsw i32 %1047, 1
  %1135 = add nuw nsw i32 %1037, 2
  %1136 = add nuw nsw i32 %1135, %1134
  %1137 = add nuw nsw i32 %1136, %1055
  %1138 = lshr i32 %1137, 2
  %1139 = trunc i32 %1138 to i16
  %1140 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1076, i64 %1030
  store i16 %1139, ptr %1140, align 2, !tbaa !40
  %1141 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 18
  %1142 = load i16, ptr %1141, align 4, !tbaa !40
  %1143 = zext i16 %1142 to i32
  %1144 = shl nuw nsw i32 %1063, 1
  %1145 = add nuw nsw i32 %1079, %1144
  %1146 = add nuw nsw i32 %1145, %1143
  %1147 = lshr i32 %1146, 2
  %1148 = trunc i32 %1147 to i16
  %1149 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %976, i64 %980
  store i16 %1148, ptr %1149, align 2, !tbaa !40
  %1150 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %979, i64 %983
  store i16 %1148, ptr %1150, align 2, !tbaa !40
  %1151 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %982, i64 %986
  store i16 %1148, ptr %1151, align 2, !tbaa !40
  %1152 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 19
  %1153 = load i16, ptr %1152, align 2, !tbaa !40
  %1154 = zext i16 %1153 to i32
  %1155 = shl nuw nsw i32 %1143, 1
  %1156 = add nuw nsw i32 %1063, 2
  %1157 = add nuw nsw i32 %1156, %1155
  %1158 = add nuw nsw i32 %1157, %1154
  %1159 = lshr i32 %1158, 2
  %1160 = trunc i32 %1159 to i16
  %1161 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1070, i64 %980
  store i16 %1160, ptr %1161, align 2, !tbaa !40
  %1162 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1072, i64 %983
  store i16 %1160, ptr %1162, align 2, !tbaa !40
  %1163 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1074, i64 %986
  store i16 %1160, ptr %1163, align 2, !tbaa !40
  %1164 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 20
  %1165 = load i16, ptr %1164, align 8, !tbaa !40
  %1166 = zext i16 %1165 to i32
  %1167 = shl nuw nsw i32 %1154, 1
  %1168 = add nuw nsw i32 %1143, 2
  %1169 = add nuw nsw i32 %1168, %1167
  %1170 = add nuw nsw i32 %1169, %1166
  %1171 = lshr i32 %1170, 2
  %1172 = trunc i32 %1171 to i16
  %1173 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %976, i64 %983
  store i16 %1172, ptr %1173, align 2, !tbaa !40
  %1174 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %979, i64 %986
  store i16 %1172, ptr %1174, align 2, !tbaa !40
  %1175 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 21
  %1176 = load i16, ptr %1175, align 2, !tbaa !40
  %1177 = zext i16 %1176 to i32
  %1178 = shl nuw nsw i32 %1166, 1
  %1179 = add nuw nsw i32 %1154, 2
  %1180 = add nuw nsw i32 %1179, %1178
  %1181 = add nuw nsw i32 %1180, %1177
  %1182 = lshr i32 %1181, 2
  %1183 = trunc i32 %1182 to i16
  %1184 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1070, i64 %983
  store i16 %1183, ptr %1184, align 2, !tbaa !40
  %1185 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1072, i64 %986
  store i16 %1183, ptr %1185, align 2, !tbaa !40
  %1186 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 22
  %1187 = load i16, ptr %1186, align 4, !tbaa !40
  %1188 = zext i16 %1187 to i32
  %1189 = shl nuw nsw i32 %1177, 1
  %1190 = add nuw nsw i32 %1166, 2
  %1191 = add nuw nsw i32 %1190, %1189
  %1192 = add nuw nsw i32 %1191, %1188
  %1193 = lshr i32 %1192, 2
  %1194 = trunc i32 %1193 to i16
  %1195 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %976, i64 %986
  store i16 %1194, ptr %1195, align 2, !tbaa !40
  %1196 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 23
  %1197 = load i16, ptr %1196, align 2, !tbaa !40
  %1198 = zext i16 %1197 to i32
  %1199 = shl nuw nsw i32 %1188, 1
  %1200 = add nuw nsw i32 %1177, 2
  %1201 = add nuw nsw i32 %1200, %1199
  %1202 = add nuw nsw i32 %1201, %1198
  %1203 = lshr i32 %1202, 2
  %1204 = trunc i32 %1203 to i16
  %1205 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1070, i64 %986
  store i16 %1204, ptr %1205, align 2, !tbaa !40
  br label %1596

1206:                                             ; preds = %340
  %1207 = and i1 %222, %137
  %1208 = and i1 %324, %1207
  br i1 %1208, label %1212, label %1209

1209:                                             ; preds = %1206
  %1210 = load i32, ptr %11, align 4, !tbaa !49
  %1211 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.6.586, i32 noundef %1210) #47
  br label %1212

1212:                                             ; preds = %1209, %1206
  %1213 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 17
  %1214 = load i16, ptr %1213, align 2, !tbaa !40
  %1215 = zext i16 %1214 to i32
  %1216 = load i16, ptr %3, align 16, !tbaa !40
  %1217 = zext i16 %1216 to i32
  %1218 = add nuw nsw i32 %1215, 1
  %1219 = add nuw nsw i32 %1218, %1217
  %1220 = lshr i32 %1219, 1
  %1221 = trunc i32 %1220 to i16
  %1222 = sext i32 %28 to i64
  %1223 = sext i32 %33 to i64
  %1224 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1222, i64 %1223
  store i16 %1221, ptr %1224, align 2, !tbaa !40
  %1225 = sext i32 %52 to i64
  %1226 = sext i32 %32 to i64
  %1227 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1225, i64 %1226
  store i16 %1221, ptr %1227, align 2, !tbaa !40
  %1228 = sext i32 %27 to i64
  %1229 = sext i32 %31 to i64
  %1230 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1228, i64 %1229
  store i16 %1221, ptr %1230, align 2, !tbaa !40
  %1231 = sext i32 %26 to i64
  %1232 = sext i32 %25 to i64
  %1233 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1231, i64 %1232
  store i16 %1221, ptr %1233, align 2, !tbaa !40
  %1234 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 18
  %1235 = load i16, ptr %1234, align 4, !tbaa !40
  %1236 = zext i16 %1235 to i32
  %1237 = add nuw nsw i32 %1218, %1236
  %1238 = lshr i32 %1237, 1
  %1239 = trunc i32 %1238 to i16
  %1240 = sext i32 %53 to i64
  %1241 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1240, i64 %1223
  store i16 %1239, ptr %1241, align 2, !tbaa !40
  %1242 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1222, i64 %1226
  store i16 %1239, ptr %1242, align 2, !tbaa !40
  %1243 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1225, i64 %1229
  store i16 %1239, ptr %1243, align 2, !tbaa !40
  %1244 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1228, i64 %1232
  store i16 %1239, ptr %1244, align 2, !tbaa !40
  %1245 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 19
  %1246 = load i16, ptr %1245, align 2, !tbaa !40
  %1247 = zext i16 %1246 to i32
  %1248 = add nuw nsw i32 %1236, 1
  %1249 = add nuw nsw i32 %1248, %1247
  %1250 = lshr i32 %1249, 1
  %1251 = trunc i32 %1250 to i16
  %1252 = sext i32 %29 to i64
  %1253 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1252, i64 %1223
  store i16 %1251, ptr %1253, align 2, !tbaa !40
  %1254 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1240, i64 %1226
  store i16 %1251, ptr %1254, align 2, !tbaa !40
  %1255 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1222, i64 %1229
  store i16 %1251, ptr %1255, align 2, !tbaa !40
  %1256 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1225, i64 %1232
  store i16 %1251, ptr %1256, align 2, !tbaa !40
  %1257 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 20
  %1258 = load i16, ptr %1257, align 8, !tbaa !40
  %1259 = zext i16 %1258 to i32
  %1260 = add nuw nsw i32 %1247, 1
  %1261 = add nuw nsw i32 %1260, %1259
  %1262 = lshr i32 %1261, 1
  %1263 = trunc i32 %1262 to i16
  %1264 = sext i32 %54 to i64
  %1265 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1264, i64 %1223
  store i16 %1263, ptr %1265, align 2, !tbaa !40
  %1266 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1252, i64 %1226
  store i16 %1263, ptr %1266, align 2, !tbaa !40
  %1267 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1240, i64 %1229
  store i16 %1263, ptr %1267, align 2, !tbaa !40
  %1268 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1222, i64 %1232
  store i16 %1263, ptr %1268, align 2, !tbaa !40
  %1269 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 21
  %1270 = load i16, ptr %1269, align 2, !tbaa !40
  %1271 = zext i16 %1270 to i32
  %1272 = add nuw nsw i32 %1259, 1
  %1273 = add nuw nsw i32 %1272, %1271
  %1274 = lshr i32 %1273, 1
  %1275 = trunc i32 %1274 to i16
  %1276 = sext i32 %30 to i64
  %1277 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1276, i64 %1223
  store i16 %1275, ptr %1277, align 2, !tbaa !40
  %1278 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1264, i64 %1226
  store i16 %1275, ptr %1278, align 2, !tbaa !40
  %1279 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1252, i64 %1229
  store i16 %1275, ptr %1279, align 2, !tbaa !40
  %1280 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1240, i64 %1232
  store i16 %1275, ptr %1280, align 2, !tbaa !40
  %1281 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 22
  %1282 = load i16, ptr %1281, align 4, !tbaa !40
  %1283 = zext i16 %1282 to i32
  %1284 = add nuw nsw i32 %1271, 1
  %1285 = add nuw nsw i32 %1284, %1283
  %1286 = lshr i32 %1285, 1
  %1287 = trunc i32 %1286 to i16
  %1288 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1276, i64 %1226
  store i16 %1287, ptr %1288, align 2, !tbaa !40
  %1289 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1264, i64 %1229
  store i16 %1287, ptr %1289, align 2, !tbaa !40
  %1290 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1252, i64 %1232
  store i16 %1287, ptr %1290, align 2, !tbaa !40
  %1291 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 23
  %1292 = load i16, ptr %1291, align 2, !tbaa !40
  %1293 = zext i16 %1292 to i32
  %1294 = add nuw nsw i32 %1283, 1
  %1295 = add nuw nsw i32 %1294, %1293
  %1296 = lshr i32 %1295, 1
  %1297 = trunc i32 %1296 to i16
  %1298 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1276, i64 %1229
  store i16 %1297, ptr %1298, align 2, !tbaa !40
  %1299 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1264, i64 %1232
  store i16 %1297, ptr %1299, align 2, !tbaa !40
  %1300 = load i16, ptr %323, align 16, !tbaa !40
  %1301 = zext i16 %1300 to i32
  %1302 = add nuw nsw i32 %1293, 1
  %1303 = add nuw nsw i32 %1302, %1301
  %1304 = lshr i32 %1303, 1
  %1305 = trunc i32 %1304 to i16
  %1306 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1276, i64 %1232
  store i16 %1305, ptr %1306, align 2, !tbaa !40
  %1307 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 1
  %1308 = load i16, ptr %1307, align 2, !tbaa !40
  %1309 = zext i16 %1308 to i32
  %1310 = shl nuw nsw i32 %1217, 1
  %1311 = add nuw nsw i32 %1215, 2
  %1312 = add nuw nsw i32 %1311, %1310
  %1313 = add nuw nsw i32 %1312, %1309
  %1314 = lshr i32 %1313, 2
  %1315 = trunc i32 %1314 to i16
  %1316 = sext i32 %58 to i64
  %1317 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1222, i64 %1316
  store i16 %1315, ptr %1317, align 2, !tbaa !40
  %1318 = sext i32 %57 to i64
  %1319 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1225, i64 %1318
  store i16 %1315, ptr %1319, align 2, !tbaa !40
  %1320 = sext i32 %56 to i64
  %1321 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1228, i64 %1320
  store i16 %1315, ptr %1321, align 2, !tbaa !40
  %1322 = sext i32 %55 to i64
  %1323 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1231, i64 %1322
  store i16 %1315, ptr %1323, align 2, !tbaa !40
  %1324 = shl nuw nsw i32 %1215, 1
  %1325 = add nuw nsw i32 %1217, 2
  %1326 = add nuw nsw i32 %1325, %1324
  %1327 = add nuw nsw i32 %1326, %1236
  %1328 = lshr i32 %1327, 2
  %1329 = trunc i32 %1328 to i16
  %1330 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1240, i64 %1316
  store i16 %1329, ptr %1330, align 2, !tbaa !40
  %1331 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1222, i64 %1318
  store i16 %1329, ptr %1331, align 2, !tbaa !40
  %1332 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1225, i64 %1320
  store i16 %1329, ptr %1332, align 2, !tbaa !40
  %1333 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1228, i64 %1322
  store i16 %1329, ptr %1333, align 2, !tbaa !40
  %1334 = shl nuw nsw i32 %1236, 1
  %1335 = add nuw nsw i32 %1311, %1334
  %1336 = add nuw nsw i32 %1335, %1247
  %1337 = lshr i32 %1336, 2
  %1338 = trunc i32 %1337 to i16
  %1339 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1252, i64 %1316
  store i16 %1338, ptr %1339, align 2, !tbaa !40
  %1340 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1240, i64 %1318
  store i16 %1338, ptr %1340, align 2, !tbaa !40
  %1341 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1222, i64 %1320
  store i16 %1338, ptr %1341, align 2, !tbaa !40
  %1342 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1225, i64 %1322
  store i16 %1338, ptr %1342, align 2, !tbaa !40
  %1343 = shl nuw nsw i32 %1247, 1
  %1344 = add nuw nsw i32 %1236, 2
  %1345 = add nuw nsw i32 %1344, %1343
  %1346 = add nuw nsw i32 %1345, %1259
  %1347 = lshr i32 %1346, 2
  %1348 = trunc i32 %1347 to i16
  %1349 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1264, i64 %1316
  store i16 %1348, ptr %1349, align 2, !tbaa !40
  %1350 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1252, i64 %1318
  store i16 %1348, ptr %1350, align 2, !tbaa !40
  %1351 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1240, i64 %1320
  store i16 %1348, ptr %1351, align 2, !tbaa !40
  %1352 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1222, i64 %1322
  store i16 %1348, ptr %1352, align 2, !tbaa !40
  %1353 = shl nuw nsw i32 %1259, 1
  %1354 = add nuw nsw i32 %1247, 2
  %1355 = add nuw nsw i32 %1354, %1353
  %1356 = add nuw nsw i32 %1355, %1271
  %1357 = lshr i32 %1356, 2
  %1358 = trunc i32 %1357 to i16
  %1359 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1276, i64 %1316
  store i16 %1358, ptr %1359, align 2, !tbaa !40
  %1360 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1264, i64 %1318
  store i16 %1358, ptr %1360, align 2, !tbaa !40
  %1361 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1252, i64 %1320
  store i16 %1358, ptr %1361, align 2, !tbaa !40
  %1362 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1240, i64 %1322
  store i16 %1358, ptr %1362, align 2, !tbaa !40
  %1363 = shl nuw nsw i32 %1271, 1
  %1364 = add nuw nsw i32 %1259, 2
  %1365 = add nuw nsw i32 %1364, %1363
  %1366 = add nuw nsw i32 %1365, %1283
  %1367 = lshr i32 %1366, 2
  %1368 = trunc i32 %1367 to i16
  %1369 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1276, i64 %1318
  store i16 %1368, ptr %1369, align 2, !tbaa !40
  %1370 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1264, i64 %1320
  store i16 %1368, ptr %1370, align 2, !tbaa !40
  %1371 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1252, i64 %1322
  store i16 %1368, ptr %1371, align 2, !tbaa !40
  %1372 = shl nuw nsw i32 %1283, 1
  %1373 = add nuw nsw i32 %1271, 2
  %1374 = add nuw nsw i32 %1373, %1372
  %1375 = add nuw nsw i32 %1374, %1293
  %1376 = lshr i32 %1375, 2
  %1377 = trunc i32 %1376 to i16
  %1378 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1276, i64 %1320
  store i16 %1377, ptr %1378, align 2, !tbaa !40
  %1379 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1264, i64 %1322
  store i16 %1377, ptr %1379, align 2, !tbaa !40
  %1380 = shl nuw nsw i32 %1293, 1
  %1381 = add nuw nsw i32 %1283, 2
  %1382 = add nuw nsw i32 %1381, %1380
  %1383 = add nuw nsw i32 %1382, %1301
  %1384 = lshr i32 %1383, 2
  %1385 = trunc i32 %1384 to i16
  %1386 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1276, i64 %1322
  store i16 %1385, ptr %1386, align 2, !tbaa !40
  %1387 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 2
  %1388 = shl nuw nsw i32 %1309, 1
  %1389 = add nuw nsw i32 %1325, %1388
  %1390 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1225, i64 %1223
  %1391 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1228, i64 %1226
  %1392 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1231, i64 %1229
  %1393 = add nuw nsw i32 %1309, 2
  %1394 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1225, i64 %1316
  %1395 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1228, i64 %1318
  %1396 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1231, i64 %1320
  %1397 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1228, i64 %1223
  %1398 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1231, i64 %1226
  %1399 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 6
  %1400 = load i16, ptr %1399, align 4, !tbaa !40
  %1401 = zext i16 %1400 to i32
  %1402 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 7
  %1403 = load i16, ptr %1402, align 2, !tbaa !40
  %1404 = zext i16 %1403 to i32
  %1405 = load <4 x i16>, ptr %1387, align 4, !tbaa !40
  %1406 = zext <4 x i16> %1405 to <4 x i32>
  %1407 = extractelement <4 x i32> %1406, i64 0
  %1408 = add nuw nsw i32 %1389, %1407
  %1409 = lshr i32 %1408, 2
  %1410 = trunc i32 %1409 to i16
  store i16 %1410, ptr %1390, align 2, !tbaa !40
  store i16 %1410, ptr %1391, align 2, !tbaa !40
  store i16 %1410, ptr %1392, align 2, !tbaa !40
  %1411 = shl nuw nsw i32 %1407, 1
  %1412 = add nuw nsw i32 %1393, %1411
  %1413 = extractelement <4 x i32> %1406, i64 1
  %1414 = add nuw nsw i32 %1412, %1413
  %1415 = lshr i32 %1414, 2
  %1416 = trunc i32 %1415 to i16
  store i16 %1416, ptr %1394, align 2, !tbaa !40
  store i16 %1416, ptr %1395, align 2, !tbaa !40
  store i16 %1416, ptr %1396, align 2, !tbaa !40
  %1417 = shufflevector <4 x i32> %1406, <4 x i32> poison, <4 x i32> <i32 1, i32 2, i32 3, i32 poison>
  %1418 = insertelement <4 x i32> %1417, i32 %1401, i64 3
  %1419 = shl nuw nsw <4 x i32> %1418, <i32 1, i32 1, i32 1, i32 1>
  %1420 = add nuw nsw <4 x i32> %1406, <i32 2, i32 2, i32 2, i32 2>
  %1421 = add nuw nsw <4 x i32> %1420, %1419
  %1422 = shufflevector <4 x i32> %1418, <4 x i32> poison, <4 x i32> <i32 1, i32 2, i32 3, i32 poison>
  %1423 = insertelement <4 x i32> %1422, i32 %1404, i64 3
  %1424 = add nuw nsw <4 x i32> %1421, %1423
  %1425 = lshr <4 x i32> %1424, <i32 2, i32 2, i32 2, i32 2>
  %1426 = trunc <4 x i32> %1425 to <4 x i16>
  %1427 = shufflevector <4 x i16> %1426, <4 x i16> poison, <2 x i32> <i32 0, i32 1>
  store <2 x i16> %1427, ptr %1397, align 2, !tbaa !40
  store <4 x i16> %1426, ptr %1398, align 2, !tbaa !40
  br label %1596

1428:                                             ; preds = %340
  br i1 %222, label %1432, label %1429

1429:                                             ; preds = %1428
  %1430 = load i32, ptr %11, align 4, !tbaa !49
  %1431 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7.587, i32 noundef %1430) #47
  br label %1432

1432:                                             ; preds = %1429, %1428
  %1433 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 17
  %1434 = load i16, ptr %1433, align 2, !tbaa !40
  %1435 = zext i16 %1434 to i32
  %1436 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 18
  %1437 = load i16, ptr %1436, align 4, !tbaa !40
  %1438 = zext i16 %1437 to i32
  %1439 = add nuw nsw i32 %1438, 1
  %1440 = add nuw nsw i32 %1439, %1435
  %1441 = lshr i32 %1440, 1
  %1442 = trunc i32 %1441 to i16
  %1443 = sext i32 %26 to i64
  %1444 = sext i32 %25 to i64
  %1445 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1443, i64 %1444
  store i16 %1442, ptr %1445, align 2, !tbaa !40
  %1446 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 19
  %1447 = load i16, ptr %1446, align 2, !tbaa !40
  %1448 = zext i16 %1447 to i32
  %1449 = add nuw nsw i32 %1439, %1448
  %1450 = lshr i32 %1449, 1
  %1451 = trunc i32 %1450 to i16
  %1452 = sext i32 %31 to i64
  %1453 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1443, i64 %1452
  store i16 %1451, ptr %1453, align 2, !tbaa !40
  %1454 = sext i32 %27 to i64
  %1455 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1454, i64 %1444
  store i16 %1451, ptr %1455, align 2, !tbaa !40
  %1456 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 20
  %1457 = load i16, ptr %1456, align 8, !tbaa !40
  %1458 = zext i16 %1457 to i32
  %1459 = add nuw nsw i32 %1448, 1
  %1460 = add nuw nsw i32 %1459, %1458
  %1461 = lshr i32 %1460, 1
  %1462 = trunc i32 %1461 to i16
  %1463 = sext i32 %32 to i64
  %1464 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1443, i64 %1463
  store i16 %1462, ptr %1464, align 2, !tbaa !40
  %1465 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1454, i64 %1452
  store i16 %1462, ptr %1465, align 2, !tbaa !40
  %1466 = sext i32 %52 to i64
  %1467 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1466, i64 %1444
  store i16 %1462, ptr %1467, align 2, !tbaa !40
  %1468 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 21
  %1469 = load i16, ptr %1468, align 2, !tbaa !40
  %1470 = zext i16 %1469 to i32
  %1471 = add nuw nsw i32 %1458, 1
  %1472 = add nuw nsw i32 %1471, %1470
  %1473 = lshr i32 %1472, 1
  %1474 = trunc i32 %1473 to i16
  %1475 = sext i32 %33 to i64
  %1476 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1443, i64 %1475
  store i16 %1474, ptr %1476, align 2, !tbaa !40
  %1477 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1454, i64 %1463
  store i16 %1474, ptr %1477, align 2, !tbaa !40
  %1478 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1466, i64 %1452
  store i16 %1474, ptr %1478, align 2, !tbaa !40
  %1479 = sext i32 %28 to i64
  %1480 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1479, i64 %1444
  store i16 %1474, ptr %1480, align 2, !tbaa !40
  %1481 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 22
  %1482 = load i16, ptr %1481, align 4, !tbaa !40
  %1483 = zext i16 %1482 to i32
  %1484 = add nuw nsw i32 %1470, 1
  %1485 = add nuw nsw i32 %1484, %1483
  %1486 = lshr i32 %1485, 1
  %1487 = trunc i32 %1486 to i16
  %1488 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1454, i64 %1475
  store i16 %1487, ptr %1488, align 2, !tbaa !40
  %1489 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1466, i64 %1463
  store i16 %1487, ptr %1489, align 2, !tbaa !40
  %1490 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1479, i64 %1452
  store i16 %1487, ptr %1490, align 2, !tbaa !40
  %1491 = sext i32 %53 to i64
  %1492 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1491, i64 %1444
  store i16 %1487, ptr %1492, align 2, !tbaa !40
  %1493 = getelementptr inbounds [25 x i16], ptr %3, i64 0, i64 23
  %1494 = load i16, ptr %1493, align 2, !tbaa !40
  %1495 = zext i16 %1494 to i32
  %1496 = add nuw nsw i32 %1483, 1
  %1497 = add nuw nsw i32 %1496, %1495
  %1498 = lshr i32 %1497, 1
  %1499 = trunc i32 %1498 to i16
  %1500 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1466, i64 %1475
  store i16 %1499, ptr %1500, align 2, !tbaa !40
  %1501 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1479, i64 %1463
  store i16 %1499, ptr %1501, align 2, !tbaa !40
  %1502 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1491, i64 %1452
  store i16 %1499, ptr %1502, align 2, !tbaa !40
  %1503 = sext i32 %29 to i64
  %1504 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1503, i64 %1444
  store i16 %1499, ptr %1504, align 2, !tbaa !40
  %1505 = load i16, ptr %323, align 16, !tbaa !40
  %1506 = zext i16 %1505 to i32
  %1507 = add nuw nsw i32 %1495, 1
  %1508 = add nuw nsw i32 %1507, %1506
  %1509 = lshr i32 %1508, 1
  %1510 = trunc i32 %1509 to i16
  %1511 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1479, i64 %1475
  store i16 %1510, ptr %1511, align 2, !tbaa !40
  %1512 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1491, i64 %1463
  store i16 %1510, ptr %1512, align 2, !tbaa !40
  %1513 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1503, i64 %1452
  store i16 %1510, ptr %1513, align 2, !tbaa !40
  %1514 = sext i32 %54 to i64
  %1515 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1514, i64 %1444
  store i16 %1510, ptr %1515, align 2, !tbaa !40
  %1516 = sext i32 %30 to i64
  %1517 = sext i32 %58 to i64
  %1518 = sext i32 %57 to i64
  %1519 = sext i32 %56 to i64
  %1520 = sext i32 %55 to i64
  %1521 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1516, i64 %1444
  %1522 = insertelement <8 x i16> poison, i16 %1505, i64 0
  %1523 = shufflevector <8 x i16> %1522, <8 x i16> poison, <8 x i32> zeroinitializer
  store <8 x i16> %1523, ptr %1521, align 2, !tbaa !40
  %1524 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1514, i64 %1517
  store i16 %1505, ptr %1524, align 2, !tbaa !40
  %1525 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1514, i64 %1475
  store i16 %1505, ptr %1525, align 2, !tbaa !40
  %1526 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1514, i64 %1452
  %1527 = insertelement <4 x i16> poison, i16 %1505, i64 0
  %1528 = shufflevector <4 x i16> %1527, <4 x i16> poison, <4 x i32> zeroinitializer
  store <4 x i16> %1528, ptr %1526, align 2, !tbaa !40
  %1529 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1503, i64 %1463
  store <4 x i16> %1528, ptr %1529, align 2, !tbaa !40
  %1530 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1491, i64 %1517
  store i16 %1505, ptr %1530, align 2, !tbaa !40
  %1531 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1491, i64 %1475
  store i16 %1505, ptr %1531, align 2, !tbaa !40
  %1532 = mul nuw nsw i32 %1506, 3
  %1533 = add nuw nsw i32 %1495, 2
  %1534 = add nuw nsw i32 %1533, %1532
  %1535 = lshr i32 %1534, 2
  %1536 = trunc i32 %1535 to i16
  %1537 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1479, i64 %1517
  store i16 %1536, ptr %1537, align 2, !tbaa !40
  %1538 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1491, i64 %1518
  store i16 %1536, ptr %1538, align 2, !tbaa !40
  %1539 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1503, i64 %1519
  store i16 %1536, ptr %1539, align 2, !tbaa !40
  %1540 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1514, i64 %1520
  store i16 %1536, ptr %1540, align 2, !tbaa !40
  %1541 = shl nuw nsw i32 %1495, 1
  %1542 = add nuw nsw i32 %1483, 2
  %1543 = add nuw nsw i32 %1542, %1541
  %1544 = add nuw nsw i32 %1543, %1506
  %1545 = lshr i32 %1544, 2
  %1546 = trunc i32 %1545 to i16
  %1547 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1466, i64 %1517
  store i16 %1546, ptr %1547, align 2, !tbaa !40
  %1548 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1479, i64 %1518
  store i16 %1546, ptr %1548, align 2, !tbaa !40
  %1549 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1491, i64 %1519
  store i16 %1546, ptr %1549, align 2, !tbaa !40
  %1550 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1503, i64 %1520
  store i16 %1546, ptr %1550, align 2, !tbaa !40
  %1551 = shl nuw nsw i32 %1483, 1
  %1552 = add nuw nsw i32 %1470, 2
  %1553 = add nuw nsw i32 %1552, %1551
  %1554 = add nuw nsw i32 %1553, %1495
  %1555 = lshr i32 %1554, 2
  %1556 = trunc i32 %1555 to i16
  %1557 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1454, i64 %1517
  store i16 %1556, ptr %1557, align 2, !tbaa !40
  %1558 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1466, i64 %1518
  store i16 %1556, ptr %1558, align 2, !tbaa !40
  %1559 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1479, i64 %1519
  store i16 %1556, ptr %1559, align 2, !tbaa !40
  %1560 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1491, i64 %1520
  store i16 %1556, ptr %1560, align 2, !tbaa !40
  %1561 = shl nuw nsw i32 %1470, 1
  %1562 = add nuw nsw i32 %1458, 2
  %1563 = add nuw nsw i32 %1562, %1561
  %1564 = add nuw nsw i32 %1563, %1483
  %1565 = lshr i32 %1564, 2
  %1566 = trunc i32 %1565 to i16
  %1567 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1443, i64 %1517
  store i16 %1566, ptr %1567, align 2, !tbaa !40
  %1568 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1454, i64 %1518
  store i16 %1566, ptr %1568, align 2, !tbaa !40
  %1569 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1466, i64 %1519
  store i16 %1566, ptr %1569, align 2, !tbaa !40
  %1570 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1479, i64 %1520
  store i16 %1566, ptr %1570, align 2, !tbaa !40
  %1571 = shl nuw nsw i32 %1458, 1
  %1572 = add nuw nsw i32 %1448, 2
  %1573 = add nuw nsw i32 %1572, %1571
  %1574 = add nuw nsw i32 %1573, %1470
  %1575 = lshr i32 %1574, 2
  %1576 = trunc i32 %1575 to i16
  %1577 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1443, i64 %1518
  store i16 %1576, ptr %1577, align 2, !tbaa !40
  %1578 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1454, i64 %1519
  store i16 %1576, ptr %1578, align 2, !tbaa !40
  %1579 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1466, i64 %1520
  store i16 %1576, ptr %1579, align 2, !tbaa !40
  %1580 = shl nuw nsw i32 %1448, 1
  %1581 = add nuw nsw i32 %1562, %1438
  %1582 = add nuw nsw i32 %1581, %1580
  %1583 = lshr i32 %1582, 2
  %1584 = trunc i32 %1583 to i16
  %1585 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1443, i64 %1519
  store i16 %1584, ptr %1585, align 2, !tbaa !40
  %1586 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1454, i64 %1520
  store i16 %1584, ptr %1586, align 2, !tbaa !40
  %1587 = shl nuw nsw i32 %1438, 1
  %1588 = add nuw nsw i32 %1572, %1435
  %1589 = add nuw nsw i32 %1588, %1587
  %1590 = lshr i32 %1589, 2
  %1591 = trunc i32 %1590 to i16
  %1592 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %1443, i64 %1520
  store i16 %1591, ptr %1592, align 2, !tbaa !40
  br label %1596

1593:                                             ; preds = %340
  %1594 = zext i8 %41 to i32
  %1595 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.8.588, i32 noundef %1594) #47
  br label %1596

1596:                                             ; preds = %1593, %1432, %1212, %966, %825, %593, %436, %422, %394, %384
  %1597 = phi i32 [ 1, %1593 ], [ 0, %1432 ], [ 0, %1212 ], [ 0, %966 ], [ 0, %825 ], [ 0, %593 ], [ 0, %436 ], [ 0, %394 ], [ 0, %384 ], [ 0, %422 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #48
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #48
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %4) #48
  call void @llvm.lifetime.end.p0(i64 50, ptr nonnull %3) #48
  ret i32 %1597
}

; Function Attrs: nofree nosync nounwind optsize memory(argmem: readwrite) uwtable
define internal void @LowPassForIntra8x8Pred(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #17 {
  %5 = alloca [25 x i16], align 16
  call void @llvm.lifetime.start.p0(i64 50, ptr nonnull %5) #48
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(50) %5, ptr noundef nonnull align 2 dereferenceable(50) %0, i64 50, i1 false)
  %6 = icmp ne i32 %2, 0
  br i1 %6, label %7, label %70

7:                                                ; preds = %4
  %8 = icmp eq i32 %1, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %7
  %10 = load i16, ptr %0, align 2, !tbaa !40
  %11 = zext i16 %10 to i32
  %12 = getelementptr inbounds i16, ptr %0, i64 1
  %13 = load i16, ptr %12, align 2, !tbaa !40
  %14 = zext i16 %13 to i32
  %15 = shl nuw nsw i32 %14, 1
  %16 = getelementptr inbounds i16, ptr %0, i64 2
  %17 = load i16, ptr %16, align 2, !tbaa !40
  %18 = zext i16 %17 to i32
  %19 = add nuw nsw i32 %11, 2
  %20 = add nuw nsw i32 %19, %15
  %21 = add nuw nsw i32 %20, %18
  br label %32

22:                                               ; preds = %7
  %23 = getelementptr inbounds i16, ptr %0, i64 1
  %24 = load i16, ptr %23, align 2, !tbaa !40
  %25 = zext i16 %24 to i32
  %26 = mul nuw nsw i32 %25, 3
  %27 = getelementptr inbounds i16, ptr %0, i64 2
  %28 = load i16, ptr %27, align 2, !tbaa !40
  %29 = zext i16 %28 to i32
  %30 = add nuw nsw i32 %29, 2
  %31 = add nuw nsw i32 %30, %26
  br label %32

32:                                               ; preds = %22, %9
  %33 = phi i16 [ %28, %22 ], [ %17, %9 ]
  %34 = phi i16 [ %24, %22 ], [ %13, %9 ]
  %35 = phi i32 [ %31, %22 ], [ %21, %9 ]
  %36 = lshr i32 %35, 2
  %37 = trunc i32 %36 to i16
  %38 = getelementptr inbounds [25 x i16], ptr %5, i64 0, i64 1
  store i16 %37, ptr %38, align 2
  br label %39

39:                                               ; preds = %39, %32
  %40 = phi i16 [ %33, %32 ], [ %48, %39 ]
  %41 = phi i16 [ %34, %32 ], [ %40, %39 ]
  %42 = phi i64 [ 2, %32 ], [ %46, %39 ]
  %43 = zext i16 %41 to i32
  %44 = zext i16 %40 to i32
  %45 = shl nuw nsw i32 %44, 1
  %46 = add nuw nsw i64 %42, 1
  %47 = getelementptr inbounds i16, ptr %0, i64 %46
  %48 = load i16, ptr %47, align 2, !tbaa !40
  %49 = zext i16 %48 to i32
  %50 = add nuw nsw i32 %43, 2
  %51 = add nuw nsw i32 %50, %45
  %52 = add nuw nsw i32 %51, %49
  %53 = lshr i32 %52, 2
  %54 = trunc i32 %53 to i16
  %55 = getelementptr inbounds [25 x i16], ptr %5, i64 0, i64 %42
  store i16 %54, ptr %55, align 2, !tbaa !40
  %56 = icmp eq i64 %46, 16
  br i1 %56, label %57, label %39, !llvm.loop !1206

57:                                               ; preds = %39
  %58 = getelementptr inbounds i16, ptr %0, i64 16
  %59 = load i16, ptr %58, align 2, !tbaa !40
  %60 = zext i16 %59 to i32
  %61 = mul nuw nsw i32 %60, 3
  %62 = getelementptr inbounds i16, ptr %0, i64 15
  %63 = load i16, ptr %62, align 2, !tbaa !40
  %64 = zext i16 %63 to i32
  %65 = add nuw nsw i32 %64, 2
  %66 = add nuw nsw i32 %65, %61
  %67 = lshr i32 %66, 2
  %68 = trunc i32 %67 to i16
  %69 = getelementptr inbounds [25 x i16], ptr %5, i64 0, i64 16
  store i16 %68, ptr %69, align 16, !tbaa !40
  br label %70

70:                                               ; preds = %57, %4
  %71 = icmp eq i32 %1, 0
  br i1 %71, label %103, label %72

72:                                               ; preds = %70
  %73 = icmp ne i32 %3, 0
  %74 = and i1 %6, %73
  br i1 %74, label %75, label %90

75:                                               ; preds = %72
  %76 = getelementptr inbounds i16, ptr %0, i64 17
  %77 = load i16, ptr %76, align 2, !tbaa !40
  %78 = zext i16 %77 to i32
  %79 = load i16, ptr %0, align 2, !tbaa !40
  %80 = zext i16 %79 to i32
  %81 = shl nuw nsw i32 %80, 1
  %82 = getelementptr inbounds i16, ptr %0, i64 1
  %83 = load i16, ptr %82, align 2, !tbaa !40
  %84 = zext i16 %83 to i32
  %85 = add nuw nsw i32 %78, 2
  %86 = add nuw nsw i32 %85, %81
  %87 = add nuw nsw i32 %86, %84
  %88 = lshr i32 %87, 2
  %89 = trunc i32 %88 to i16
  store i16 %89, ptr %5, align 16, !tbaa !40
  br label %121

90:                                               ; preds = %72
  br i1 %6, label %105, label %91

91:                                               ; preds = %90
  br i1 %73, label %92, label %181

92:                                               ; preds = %91
  %93 = load i16, ptr %0, align 2, !tbaa !40
  %94 = zext i16 %93 to i32
  %95 = mul nuw nsw i32 %94, 3
  %96 = getelementptr inbounds i16, ptr %0, i64 17
  %97 = load i16, ptr %96, align 2, !tbaa !40
  %98 = zext i16 %97 to i32
  %99 = add nuw nsw i32 %98, 2
  %100 = add nuw nsw i32 %99, %95
  %101 = lshr i32 %100, 2
  %102 = trunc i32 %101 to i16
  store i16 %102, ptr %5, align 16, !tbaa !40
  br label %121

103:                                              ; preds = %70
  %104 = icmp eq i32 %3, 0
  br i1 %104, label %181, label %132

105:                                              ; preds = %90
  %106 = load i16, ptr %0, align 2, !tbaa !40
  %107 = zext i16 %106 to i32
  %108 = mul nuw nsw i32 %107, 3
  %109 = getelementptr inbounds i16, ptr %0, i64 1
  %110 = load i16, ptr %109, align 2, !tbaa !40
  %111 = zext i16 %110 to i32
  %112 = add nuw nsw i32 %111, 2
  %113 = add nuw nsw i32 %112, %108
  %114 = lshr i32 %113, 2
  %115 = trunc i32 %114 to i16
  store i16 %115, ptr %5, align 16, !tbaa !40
  %116 = icmp eq i32 %3, 0
  br i1 %116, label %181, label %117

117:                                              ; preds = %105
  %118 = getelementptr inbounds i16, ptr %0, i64 17
  %119 = load i16, ptr %118, align 2, !tbaa !40
  %120 = zext i16 %119 to i32
  br label %121

121:                                              ; preds = %117, %92, %75
  %122 = phi i32 [ %120, %117 ], [ %78, %75 ], [ %98, %92 ]
  %123 = phi i32 [ %107, %117 ], [ %80, %75 ], [ %94, %92 ]
  %124 = phi i16 [ %119, %117 ], [ %77, %75 ], [ %97, %92 ]
  %125 = shl nuw nsw i32 %122, 1
  %126 = getelementptr inbounds i16, ptr %0, i64 18
  %127 = load i16, ptr %126, align 2, !tbaa !40
  %128 = zext i16 %127 to i32
  %129 = add nuw nsw i32 %123, 2
  %130 = add nuw nsw i32 %129, %125
  %131 = add nuw nsw i32 %130, %128
  br label %142

132:                                              ; preds = %103
  %133 = getelementptr inbounds i16, ptr %0, i64 17
  %134 = load i16, ptr %133, align 2, !tbaa !40
  %135 = zext i16 %134 to i32
  %136 = mul nuw nsw i32 %135, 3
  %137 = getelementptr inbounds i16, ptr %0, i64 18
  %138 = load i16, ptr %137, align 2, !tbaa !40
  %139 = zext i16 %138 to i32
  %140 = add nuw nsw i32 %139, 2
  %141 = add nuw nsw i32 %140, %136
  br label %142

142:                                              ; preds = %132, %121
  %143 = phi i32 [ %141, %132 ], [ %131, %121 ]
  %144 = phi i16 [ %138, %132 ], [ %127, %121 ]
  %145 = phi i16 [ %134, %132 ], [ %124, %121 ]
  %146 = lshr i32 %143, 2
  %147 = trunc i32 %146 to i16
  %148 = getelementptr inbounds [25 x i16], ptr %5, i64 0, i64 17
  store i16 %147, ptr %148, align 2, !tbaa !40
  br label %149

149:                                              ; preds = %149, %142
  %150 = phi i16 [ %144, %142 ], [ %158, %149 ]
  %151 = phi i16 [ %145, %142 ], [ %150, %149 ]
  %152 = phi i64 [ 18, %142 ], [ %156, %149 ]
  %153 = zext i16 %151 to i32
  %154 = zext i16 %150 to i32
  %155 = shl nuw nsw i32 %154, 1
  %156 = add nuw nsw i64 %152, 1
  %157 = getelementptr inbounds i16, ptr %0, i64 %156
  %158 = load i16, ptr %157, align 2, !tbaa !40
  %159 = zext i16 %158 to i32
  %160 = add nuw nsw i32 %153, 2
  %161 = add nuw nsw i32 %160, %155
  %162 = add nuw nsw i32 %161, %159
  %163 = lshr i32 %162, 2
  %164 = trunc i32 %163 to i16
  %165 = getelementptr inbounds [25 x i16], ptr %5, i64 0, i64 %152
  store i16 %164, ptr %165, align 2, !tbaa !40
  %166 = icmp eq i64 %156, 24
  br i1 %166, label %167, label %149, !llvm.loop !1207

167:                                              ; preds = %149
  %168 = getelementptr inbounds i16, ptr %0, i64 23
  %169 = load i16, ptr %168, align 2, !tbaa !40
  %170 = zext i16 %169 to i32
  %171 = getelementptr inbounds i16, ptr %0, i64 24
  %172 = load i16, ptr %171, align 2, !tbaa !40
  %173 = zext i16 %172 to i32
  %174 = shl nuw nsw i32 %173, 1
  %175 = add nuw nsw i32 %170, 2
  %176 = add nuw nsw i32 %175, %173
  %177 = add nuw nsw i32 %176, %174
  %178 = lshr i32 %177, 2
  %179 = trunc i32 %178 to i16
  %180 = getelementptr inbounds [25 x i16], ptr %5, i64 0, i64 24
  store i16 %179, ptr %180, align 16, !tbaa !40
  br label %181

181:                                              ; preds = %167, %105, %103, %91
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(50) %0, ptr noundef nonnull align 16 dereferenceable(50) %5, i64 50, i1 false)
  call void @llvm.lifetime.end.p0(i64 50, ptr nonnull %5) #48
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v16i32(<16 x i32>) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v8i32(<8 x i32>) #12

; Function Attrs: nofree nosync nounwind optsize memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @itrans8x8(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) #43 {
  %4 = alloca [8 x [8 x i32]], align 16
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %4) #48
  %5 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 6
  %6 = load i32, ptr %5, align 4, !tbaa !43
  %7 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 103
  %8 = load i32, ptr %7, align 4, !tbaa !117
  %9 = sub i32 0, %8
  %10 = icmp eq i32 %6, %9
  br i1 %10, label %11, label %41

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 112
  %13 = load i32, ptr %12, align 8, !tbaa !118
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %41

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 107
  %17 = sext i32 %1 to i64
  %18 = sext i32 %2 to i64
  %19 = add nsw i32 %1, 7
  %20 = sext i32 %19 to i64
  %21 = add nsw i32 %2, 7
  %22 = sext i32 %21 to i64
  br label %23

23:                                               ; preds = %38, %15
  %24 = phi i64 [ %18, %15 ], [ %39, %38 ]
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ %17, %23 ], [ %36, %25 ]
  %27 = load i32, ptr %16, align 4, !tbaa !77
  %28 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %24, i64 %26
  %29 = load i32, ptr %28, align 4, !tbaa !18
  %30 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %24, i64 %26
  %31 = load i16, ptr %30, align 2, !tbaa !40
  %32 = zext i16 %31 to i32
  %33 = add i32 %29, %32
  %34 = tail call i32 @llvm.smax.i32(i32 %33, i32 0)
  %35 = tail call i32 @llvm.smin.i32(i32 %34, i32 %27)
  store i32 %35, ptr %28, align 4, !tbaa !18
  %36 = add nsw i64 %26, 1
  %37 = icmp slt i64 %26, %20
  br i1 %37, label %25, label %38, !llvm.loop !1208

38:                                               ; preds = %25
  %39 = add nsw i64 %24, 1
  %40 = icmp slt i64 %24, %22
  br i1 %40, label %23, label %315, !llvm.loop !1209

41:                                               ; preds = %11, %3
  %42 = sext i32 %1 to i64
  %43 = sext i32 %2 to i64
  br label %44

44:                                               ; preds = %44, %41
  %45 = phi i64 [ 0, %41 ], [ %199, %44 ]
  %46 = or i64 %45, 1
  %47 = or i64 %45, 2
  %48 = or i64 %45, 3
  %49 = add nsw i64 %45, %43
  %50 = add nsw i64 %46, %43
  %51 = add nsw i64 %47, %43
  %52 = add nsw i64 %48, %43
  %53 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %49, i64 %42
  %54 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %50, i64 %42
  %55 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %51, i64 %42
  %56 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %52, i64 %42
  %57 = load i32, ptr %53, align 4, !tbaa !18
  %58 = load i32, ptr %54, align 4, !tbaa !18
  %59 = load i32, ptr %55, align 4, !tbaa !18
  %60 = load i32, ptr %56, align 4, !tbaa !18
  %61 = insertelement <4 x i32> poison, i32 %57, i64 0
  %62 = insertelement <4 x i32> %61, i32 %58, i64 1
  %63 = insertelement <4 x i32> %62, i32 %59, i64 2
  %64 = insertelement <4 x i32> %63, i32 %60, i64 3
  %65 = getelementptr inbounds i32, ptr %53, i64 4
  %66 = getelementptr inbounds i32, ptr %54, i64 4
  %67 = getelementptr inbounds i32, ptr %55, i64 4
  %68 = getelementptr inbounds i32, ptr %56, i64 4
  %69 = load i32, ptr %65, align 4, !tbaa !18
  %70 = load i32, ptr %66, align 4, !tbaa !18
  %71 = load i32, ptr %67, align 4, !tbaa !18
  %72 = load i32, ptr %68, align 4, !tbaa !18
  %73 = insertelement <4 x i32> poison, i32 %69, i64 0
  %74 = insertelement <4 x i32> %73, i32 %70, i64 1
  %75 = insertelement <4 x i32> %74, i32 %71, i64 2
  %76 = insertelement <4 x i32> %75, i32 %72, i64 3
  %77 = add nsw <4 x i32> %76, %64
  %78 = sub nsw <4 x i32> %64, %76
  %79 = getelementptr inbounds i32, ptr %53, i64 2
  %80 = getelementptr inbounds i32, ptr %54, i64 2
  %81 = getelementptr inbounds i32, ptr %55, i64 2
  %82 = getelementptr inbounds i32, ptr %56, i64 2
  %83 = load i32, ptr %79, align 4, !tbaa !18
  %84 = load i32, ptr %80, align 4, !tbaa !18
  %85 = load i32, ptr %81, align 4, !tbaa !18
  %86 = load i32, ptr %82, align 4, !tbaa !18
  %87 = insertelement <4 x i32> poison, i32 %83, i64 0
  %88 = insertelement <4 x i32> %87, i32 %84, i64 1
  %89 = insertelement <4 x i32> %88, i32 %85, i64 2
  %90 = insertelement <4 x i32> %89, i32 %86, i64 3
  %91 = ashr <4 x i32> %90, <i32 1, i32 1, i32 1, i32 1>
  %92 = getelementptr inbounds i32, ptr %53, i64 6
  %93 = getelementptr inbounds i32, ptr %54, i64 6
  %94 = getelementptr inbounds i32, ptr %55, i64 6
  %95 = getelementptr inbounds i32, ptr %56, i64 6
  %96 = load i32, ptr %92, align 4, !tbaa !18
  %97 = load i32, ptr %93, align 4, !tbaa !18
  %98 = load i32, ptr %94, align 4, !tbaa !18
  %99 = load i32, ptr %95, align 4, !tbaa !18
  %100 = insertelement <4 x i32> poison, i32 %96, i64 0
  %101 = insertelement <4 x i32> %100, i32 %97, i64 1
  %102 = insertelement <4 x i32> %101, i32 %98, i64 2
  %103 = insertelement <4 x i32> %102, i32 %99, i64 3
  %104 = sub nsw <4 x i32> %91, %103
  %105 = ashr <4 x i32> %103, <i32 1, i32 1, i32 1, i32 1>
  %106 = add nsw <4 x i32> %105, %90
  %107 = add nsw <4 x i32> %106, %77
  %108 = add nsw <4 x i32> %104, %78
  %109 = sub nsw <4 x i32> %78, %104
  %110 = sub nsw <4 x i32> %77, %106
  %111 = getelementptr inbounds i32, ptr %53, i64 3
  %112 = getelementptr inbounds i32, ptr %54, i64 3
  %113 = getelementptr inbounds i32, ptr %55, i64 3
  %114 = getelementptr inbounds i32, ptr %56, i64 3
  %115 = load i32, ptr %111, align 4, !tbaa !18
  %116 = load i32, ptr %112, align 4, !tbaa !18
  %117 = load i32, ptr %113, align 4, !tbaa !18
  %118 = load i32, ptr %114, align 4, !tbaa !18
  %119 = insertelement <4 x i32> poison, i32 %115, i64 0
  %120 = insertelement <4 x i32> %119, i32 %116, i64 1
  %121 = insertelement <4 x i32> %120, i32 %117, i64 2
  %122 = insertelement <4 x i32> %121, i32 %118, i64 3
  %123 = getelementptr inbounds i32, ptr %53, i64 5
  %124 = getelementptr inbounds i32, ptr %54, i64 5
  %125 = getelementptr inbounds i32, ptr %55, i64 5
  %126 = getelementptr inbounds i32, ptr %56, i64 5
  %127 = load i32, ptr %123, align 4, !tbaa !18
  %128 = load i32, ptr %124, align 4, !tbaa !18
  %129 = load i32, ptr %125, align 4, !tbaa !18
  %130 = load i32, ptr %126, align 4, !tbaa !18
  %131 = insertelement <4 x i32> poison, i32 %127, i64 0
  %132 = insertelement <4 x i32> %131, i32 %128, i64 1
  %133 = insertelement <4 x i32> %132, i32 %129, i64 2
  %134 = insertelement <4 x i32> %133, i32 %130, i64 3
  %135 = getelementptr inbounds i32, ptr %53, i64 7
  %136 = getelementptr inbounds i32, ptr %54, i64 7
  %137 = getelementptr inbounds i32, ptr %55, i64 7
  %138 = getelementptr inbounds i32, ptr %56, i64 7
  %139 = load i32, ptr %135, align 4, !tbaa !18
  %140 = load i32, ptr %136, align 4, !tbaa !18
  %141 = load i32, ptr %137, align 4, !tbaa !18
  %142 = load i32, ptr %138, align 4, !tbaa !18
  %143 = insertelement <4 x i32> poison, i32 %139, i64 0
  %144 = insertelement <4 x i32> %143, i32 %140, i64 1
  %145 = insertelement <4 x i32> %144, i32 %141, i64 2
  %146 = insertelement <4 x i32> %145, i32 %142, i64 3
  %147 = ashr <4 x i32> %146, <i32 1, i32 1, i32 1, i32 1>
  %148 = add <4 x i32> %122, %146
  %149 = add <4 x i32> %148, %147
  %150 = sub <4 x i32> %134, %149
  %151 = getelementptr inbounds i32, ptr %53, i64 1
  %152 = getelementptr inbounds i32, ptr %54, i64 1
  %153 = getelementptr inbounds i32, ptr %55, i64 1
  %154 = getelementptr inbounds i32, ptr %56, i64 1
  %155 = load i32, ptr %151, align 4, !tbaa !18
  %156 = load i32, ptr %152, align 4, !tbaa !18
  %157 = load i32, ptr %153, align 4, !tbaa !18
  %158 = load i32, ptr %154, align 4, !tbaa !18
  %159 = insertelement <4 x i32> poison, i32 %155, i64 0
  %160 = insertelement <4 x i32> %159, i32 %156, i64 1
  %161 = insertelement <4 x i32> %160, i32 %157, i64 2
  %162 = insertelement <4 x i32> %161, i32 %158, i64 3
  %163 = ashr <4 x i32> %122, <i32 1, i32 1, i32 1, i32 1>
  %164 = add <4 x i32> %163, %122
  %165 = sub <4 x i32> %146, %164
  %166 = add <4 x i32> %165, %162
  %167 = ashr <4 x i32> %134, <i32 1, i32 1, i32 1, i32 1>
  %168 = add <4 x i32> %146, %134
  %169 = add <4 x i32> %168, %167
  %170 = sub <4 x i32> %169, %162
  %171 = add nsw <4 x i32> %134, %122
  %172 = add nsw <4 x i32> %171, %162
  %173 = ashr <4 x i32> %162, <i32 1, i32 1, i32 1, i32 1>
  %174 = add nsw <4 x i32> %172, %173
  %175 = ashr <4 x i32> %174, <i32 2, i32 2, i32 2, i32 2>
  %176 = add nsw <4 x i32> %175, %150
  %177 = ashr <4 x i32> %150, <i32 2, i32 2, i32 2, i32 2>
  %178 = sub <4 x i32> %174, %177
  %179 = ashr <4 x i32> %170, <i32 2, i32 2, i32 2, i32 2>
  %180 = add nsw <4 x i32> %179, %166
  %181 = ashr <4 x i32> %166, <i32 2, i32 2, i32 2, i32 2>
  %182 = sub nsw <4 x i32> %181, %170
  %183 = add nsw <4 x i32> %178, %107
  %184 = getelementptr inbounds [8 x i32], ptr %4, i64 0, i64 %45
  store <4 x i32> %183, ptr %184, align 16, !tbaa !18
  %185 = add nsw <4 x i32> %182, %108
  %186 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 1, i64 %45
  store <4 x i32> %185, ptr %186, align 16, !tbaa !18
  %187 = add nsw <4 x i32> %180, %109
  %188 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 2, i64 %45
  store <4 x i32> %187, ptr %188, align 16, !tbaa !18
  %189 = add nsw <4 x i32> %176, %110
  %190 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 3, i64 %45
  store <4 x i32> %189, ptr %190, align 16, !tbaa !18
  %191 = sub nsw <4 x i32> %110, %176
  %192 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 4, i64 %45
  store <4 x i32> %191, ptr %192, align 16, !tbaa !18
  %193 = sub nsw <4 x i32> %109, %180
  %194 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 5, i64 %45
  store <4 x i32> %193, ptr %194, align 16, !tbaa !18
  %195 = sub nsw <4 x i32> %108, %182
  %196 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 6, i64 %45
  store <4 x i32> %195, ptr %196, align 16, !tbaa !18
  %197 = sub nsw <4 x i32> %107, %178
  %198 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 7, i64 %45
  store <4 x i32> %197, ptr %198, align 16, !tbaa !18
  %199 = add nuw i64 %45, 4
  %200 = icmp eq i64 %199, 8
  br i1 %200, label %201, label %44, !llvm.loop !1210

201:                                              ; preds = %44
  %202 = add nsw i32 %2, 1
  %203 = sext i32 %202 to i64
  %204 = add nsw i32 %2, 2
  %205 = sext i32 %204 to i64
  %206 = add nsw i32 %2, 3
  %207 = sext i32 %206 to i64
  %208 = add nsw i32 %2, 4
  %209 = sext i32 %208 to i64
  %210 = add nsw i32 %2, 5
  %211 = sext i32 %210 to i64
  %212 = add nsw i32 %2, 6
  %213 = sext i32 %212 to i64
  %214 = add i32 %2, 7
  %215 = sext i32 %214 to i64
  br label %222

216:                                              ; preds = %222
  %217 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 107
  %218 = tail call i32 @llvm.smax.i32(i32 %2, i32 %214)
  %219 = add i32 %218, 1
  %220 = add nsw i32 %1, 7
  %221 = sext i32 %220 to i64
  br label %293

222:                                              ; preds = %222, %201
  %223 = phi i64 [ 0, %201 ], [ %291, %222 ]
  %224 = add nsw i64 %223, %42
  %225 = getelementptr inbounds [8 x [8 x i32]], ptr %4, i64 0, i64 %223
  %226 = load i32, ptr %225, align 16, !tbaa !18
  %227 = getelementptr inbounds i32, ptr %225, i64 4
  %228 = load i32, ptr %227, align 16, !tbaa !18
  %229 = add nsw i32 %228, %226
  %230 = sub nsw i32 %226, %228
  %231 = getelementptr inbounds i32, ptr %225, i64 2
  %232 = load i32, ptr %231, align 8, !tbaa !18
  %233 = ashr i32 %232, 1
  %234 = getelementptr inbounds i32, ptr %225, i64 6
  %235 = load i32, ptr %234, align 8, !tbaa !18
  %236 = sub nsw i32 %233, %235
  %237 = ashr i32 %235, 1
  %238 = add nsw i32 %237, %232
  %239 = add nsw i32 %238, %229
  %240 = add nsw i32 %236, %230
  %241 = sub nsw i32 %230, %236
  %242 = sub nsw i32 %229, %238
  %243 = getelementptr inbounds i32, ptr %225, i64 3
  %244 = load i32, ptr %243, align 4, !tbaa !18
  %245 = getelementptr inbounds i32, ptr %225, i64 5
  %246 = load i32, ptr %245, align 4, !tbaa !18
  %247 = getelementptr inbounds i32, ptr %225, i64 7
  %248 = load i32, ptr %247, align 4, !tbaa !18
  %249 = ashr i32 %248, 1
  %250 = add i32 %244, %248
  %251 = add i32 %250, %249
  %252 = sub i32 %246, %251
  %253 = getelementptr inbounds i32, ptr %225, i64 1
  %254 = load i32, ptr %253, align 4, !tbaa !18
  %255 = ashr i32 %244, 1
  %256 = add i32 %255, %244
  %257 = sub i32 %248, %256
  %258 = add i32 %257, %254
  %259 = ashr i32 %246, 1
  %260 = add i32 %248, %246
  %261 = add i32 %260, %259
  %262 = sub i32 %261, %254
  %263 = add nsw i32 %246, %244
  %264 = add nsw i32 %263, %254
  %265 = ashr i32 %254, 1
  %266 = add nsw i32 %264, %265
  %267 = ashr i32 %266, 2
  %268 = add nsw i32 %267, %252
  %269 = ashr i32 %252, 2
  %270 = sub i32 %266, %269
  %271 = ashr i32 %262, 2
  %272 = add nsw i32 %271, %258
  %273 = ashr i32 %258, 2
  %274 = sub nsw i32 %273, %262
  %275 = add nsw i32 %270, %239
  %276 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %43, i64 %224
  store i32 %275, ptr %276, align 4, !tbaa !18
  %277 = add nsw i32 %274, %240
  %278 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %203, i64 %224
  store i32 %277, ptr %278, align 4, !tbaa !18
  %279 = add nsw i32 %272, %241
  %280 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %205, i64 %224
  store i32 %279, ptr %280, align 4, !tbaa !18
  %281 = add nsw i32 %268, %242
  %282 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %207, i64 %224
  store i32 %281, ptr %282, align 4, !tbaa !18
  %283 = sub nsw i32 %242, %268
  %284 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %209, i64 %224
  store i32 %283, ptr %284, align 4, !tbaa !18
  %285 = sub nsw i32 %241, %272
  %286 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %211, i64 %224
  store i32 %285, ptr %286, align 4, !tbaa !18
  %287 = sub nsw i32 %240, %274
  %288 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %213, i64 %224
  store i32 %287, ptr %288, align 4, !tbaa !18
  %289 = sub nsw i32 %239, %270
  %290 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %215, i64 %224
  store i32 %289, ptr %290, align 4, !tbaa !18
  %291 = add nuw nsw i64 %223, 1
  %292 = icmp eq i64 %291, 8
  br i1 %292, label %216, label %222, !llvm.loop !1211

293:                                              ; preds = %311, %216
  %294 = phi i64 [ %43, %216 ], [ %312, %311 ]
  br label %295

295:                                              ; preds = %295, %293
  %296 = phi i64 [ %42, %293 ], [ %309, %295 ]
  %297 = load i32, ptr %217, align 4, !tbaa !77
  %298 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 27, i64 %294, i64 %296
  %299 = load i32, ptr %298, align 4, !tbaa !18
  %300 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 25, i64 %294, i64 %296
  %301 = load i16, ptr %300, align 2, !tbaa !40
  %302 = zext i16 %301 to i32
  %303 = shl nuw nsw i32 %302, 6
  %304 = add i32 %299, 32
  %305 = add i32 %304, %303
  %306 = ashr i32 %305, 6
  %307 = tail call i32 @llvm.smax.i32(i32 %306, i32 0)
  %308 = tail call i32 @llvm.smin.i32(i32 %307, i32 %297)
  store i32 %308, ptr %298, align 4, !tbaa !18
  %309 = add nsw i64 %296, 1
  %310 = icmp slt i64 %296, %221
  br i1 %310, label %295, label %311, !llvm.loop !1212

311:                                              ; preds = %295
  %312 = add nsw i64 %294, 1
  %313 = trunc i64 %312 to i32
  %314 = icmp eq i32 %219, %313
  br i1 %314, label %315, label %293, !llvm.loop !1213

315:                                              ; preds = %311, %38
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %4) #48
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @ue_v(ptr nocapture noundef readnone %0, ptr nocapture noundef %1) #0 {
  %3 = alloca %struct.syntaxelement, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #48
  store i32 0, ptr %3, align 8, !tbaa !736
  %4 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  store ptr @linfo_ue, ptr %4, align 8, !tbaa !737
  %5 = call i32 @readSyntaxElement_VLC(ptr noundef nonnull %3, ptr noundef %1) #47, !range !1214
  %6 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 3
  %7 = load i32, ptr %6, align 4, !tbaa !212
  %8 = load i32, ptr @UsedBits, align 4, !tbaa !18
  %9 = add nsw i32 %8, %7
  store i32 %9, ptr @UsedBits, align 4, !tbaa !18
  %10 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %11 = load i32, ptr %10, align 4, !tbaa !173
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #48
  ret i32 %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: write) uwtable
define internal void @linfo_ue(i32 noundef %0, i32 noundef %1, ptr nocapture noundef writeonly %2, ptr nocapture readnone %3) #44 {
  %5 = ashr i32 %0, 1
  %6 = shl nuw i32 1, %5
  %7 = add i32 %1, -1
  %8 = add i32 %7, %6
  store i32 %8, ptr %2, align 4, !tbaa !18
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @readSyntaxElement_VLC(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = getelementptr inbounds %struct.Bitstream, ptr %1, i64 0, i32 2
  %4 = load i32, ptr %3, align 8, !tbaa !450
  %5 = getelementptr inbounds %struct.Bitstream, ptr %1, i64 0, i32 4
  %6 = load ptr, ptr %5, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %1, i64 0, i32 3
  %8 = load i32, ptr %7, align 4, !tbaa !561
  %9 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 4
  %10 = tail call i32 @GetVLCSymbol(ptr noundef %6, i32 noundef %4, ptr noundef nonnull %9, i32 noundef %8) #47
  %11 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 3
  store i32 %10, ptr %11, align 4, !tbaa !212
  %12 = icmp eq i32 %10, -1
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = load i32, ptr %3, align 8, !tbaa !450
  %15 = add nsw i32 %14, %10
  store i32 %15, ptr %3, align 8, !tbaa !450
  %16 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 8
  %17 = load ptr, ptr %16, align 8, !tbaa !737
  %18 = load i32, ptr %9, align 8, !tbaa !219
  %19 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  %20 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 2
  tail call void %17(i32 noundef %10, i32 noundef %18, ptr noundef nonnull %19, ptr noundef nonnull %20) #46
  br label %21

21:                                               ; preds = %13, %2
  %22 = phi i32 [ 1, %13 ], [ -1, %2 ]
  ret i32 %22
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(argmem: readwrite) uwtable
define internal i32 @GetVLCSymbol(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef writeonly %2, i32 noundef %3) #7 {
  %5 = ashr i32 %1, 3
  %6 = sext i32 %5 to i64
  %7 = and i32 %1, 7
  %8 = xor i32 %7, 7
  %9 = getelementptr inbounds i8, ptr %0, i64 %6
  %10 = load i8, ptr %9, align 1, !tbaa !14
  %11 = zext i8 %10 to i32
  %12 = shl nuw nsw i32 1, %8
  %13 = and i32 %12, %11
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %55

15:                                               ; preds = %18
  %.lcssa3 = phi i32 [ %19, %18 ]
  %.lcssa2 = phi i32 [ %22, %18 ]
  %.lcssa1 = phi i64 [ %26, %18 ]
  %.lcssa = phi i32 [ %27, %18 ]
  %16 = sext i32 %3 to i64
  %17 = add i32 %.lcssa3, %.lcssa2
  br label %34

18:                                               ; preds = %18, %4
  %19 = phi i32 [ %22, %18 ], [ 1, %4 ]
  %20 = phi i32 [ %27, %18 ], [ %8, %4 ]
  %21 = phi i64 [ %26, %18 ], [ %6, %4 ]
  %22 = add nuw i32 %19, 1
  %23 = add nsw i32 %20, -1
  %24 = icmp slt i32 %20, 1
  %25 = zext i1 %24 to i64
  %26 = add nsw i64 %21, %25
  %27 = select i1 %24, i32 7, i32 %23
  %28 = getelementptr inbounds i8, ptr %0, i64 %26
  %29 = load i8, ptr %28, align 1, !tbaa !14
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 1, %27
  %32 = and i32 %31, %30
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %18, label %15, !llvm.loop !1215

34:                                               ; preds = %43, %15
  %35 = phi i32 [ %.lcssa2, %15 ], [ %46, %43 ]
  %36 = phi i32 [ %.lcssa, %15 ], [ %45, %43 ]
  %37 = phi i64 [ %.lcssa1, %15 ], [ %41, %43 ]
  %38 = phi i32 [ 0, %15 ], [ %53, %43 ]
  %39 = icmp slt i32 %36, 1
  %40 = zext i1 %39 to i64
  %41 = add nsw i64 %37, %40
  %42 = icmp sgt i64 %41, %16
  br i1 %42, label %58, label %43

43:                                               ; preds = %34
  %44 = add nsw i32 %36, -1
  %45 = select i1 %39, i32 7, i32 %44
  %46 = add i32 %35, 1
  %47 = shl i32 %38, 1
  %48 = getelementptr inbounds i8, ptr %0, i64 %41
  %49 = load i8, ptr %48, align 1, !tbaa !14
  %50 = zext i8 %49 to i32
  %51 = lshr i32 %50, %45
  %52 = and i32 %51, 1
  %53 = or i32 %52, %47
  %54 = icmp eq i32 %46, %17
  br i1 %54, label %55, label %34, !llvm.loop !1216

55:                                               ; preds = %43, %4
  %56 = phi i32 [ 0, %4 ], [ %53, %43 ]
  %57 = phi i32 [ 1, %4 ], [ %17, %43 ]
  store i32 %56, ptr %2, align 4, !tbaa !18
  br label %58

58:                                               ; preds = %55, %34
  %59 = phi i32 [ %57, %55 ], [ -1, %34 ]
  ret i32 %59
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @se_v(ptr nocapture noundef readnone %0, ptr nocapture noundef %1) #0 {
  %3 = alloca %struct.syntaxelement, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #48
  store i32 0, ptr %3, align 8, !tbaa !736
  %4 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  store ptr @linfo_se, ptr %4, align 8, !tbaa !737
  %5 = call i32 @readSyntaxElement_VLC(ptr noundef nonnull %3, ptr noundef %1) #47, !range !1214
  %6 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 3
  %7 = load i32, ptr %6, align 4, !tbaa !212
  %8 = load i32, ptr @UsedBits, align 4, !tbaa !18
  %9 = add nsw i32 %8, %7
  store i32 %9, ptr @UsedBits, align 4, !tbaa !18
  %10 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 1
  %11 = load i32, ptr %10, align 4, !tbaa !173
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #48
  ret i32 %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: write) uwtable
define internal void @linfo_se(i32 noundef %0, i32 noundef %1, ptr nocapture noundef writeonly %2, ptr nocapture readnone %3) #44 {
  %5 = ashr i32 %0, 1
  %6 = shl nuw i32 1, %5
  %7 = add nsw i32 %6, %1
  %8 = ashr i32 %7, 1
  %9 = and i32 %7, 1
  %10 = icmp eq i32 %9, 0
  %11 = sub nsw i32 0, %8
  %12 = select i1 %10, i32 %8, i32 %11
  store i32 %12, ptr %2, align 4, !tbaa !18
  ret void
}

; Function Attrs: nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal i32 @u_v(i32 noundef %0, ptr nocapture noundef readnone %1, ptr nocapture noundef %2) #25 {
  %4 = alloca %struct.syntaxelement, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %4) #48
  %5 = getelementptr inbounds %struct.syntaxelement, ptr %4, i64 0, i32 4
  store i32 0, ptr %5, align 8, !tbaa !219
  store i32 0, ptr %4, align 8, !tbaa !736
  %6 = getelementptr inbounds %struct.syntaxelement, ptr %4, i64 0, i32 8
  store ptr @linfo_ue, ptr %6, align 8, !tbaa !737
  %7 = getelementptr inbounds %struct.syntaxelement, ptr %4, i64 0, i32 3
  store i32 %0, ptr %7, align 4, !tbaa !212
  %8 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %4, ptr noundef %2) #47, !range !1214
  %9 = load i32, ptr %7, align 4, !tbaa !212
  %10 = load i32, ptr @UsedBits, align 4, !tbaa !18
  %11 = add nsw i32 %10, %9
  store i32 %11, ptr @UsedBits, align 4, !tbaa !18
  %12 = load i32, ptr %5, align 8, !tbaa !219
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %4) #48
  ret i32 %12
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal i32 @readSyntaxElement_FLC(ptr nocapture noundef %0, ptr nocapture noundef %1) #9 {
  %3 = getelementptr inbounds %struct.Bitstream, ptr %1, i64 0, i32 2
  %4 = load i32, ptr %3, align 8, !tbaa !450
  %5 = getelementptr inbounds %struct.Bitstream, ptr %1, i64 0, i32 4
  %6 = load ptr, ptr %5, align 8, !tbaa !218
  %7 = getelementptr inbounds %struct.Bitstream, ptr %1, i64 0, i32 3
  %8 = load i32, ptr %7, align 4, !tbaa !561
  %9 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 4
  %10 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 3
  %11 = load i32, ptr %10, align 4, !tbaa !212
  %12 = tail call i32 @GetBits(ptr noundef %6, i32 noundef %4, ptr noundef nonnull %9, i32 noundef %8, i32 noundef %11) #47
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %2
  %15 = load i32, ptr %10, align 4, !tbaa !212
  %16 = load i32, ptr %3, align 8, !tbaa !450
  %17 = add nsw i32 %16, %15
  store i32 %17, ptr %3, align 8, !tbaa !450
  %18 = load i32, ptr %9, align 8, !tbaa !219
  %19 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 %18, ptr %19, align 4, !tbaa !173
  br label %20

20:                                               ; preds = %14, %2
  %21 = phi i32 [ 1, %14 ], [ -1, %2 ]
  ret i32 %21
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(argmem: readwrite) uwtable
define internal i32 @GetBits(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef writeonly %2, i32 noundef %3, i32 noundef %4) #7 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %36, label %7

7:                                                ; preds = %5
  %8 = and i32 %1, 7
  %9 = xor i32 %8, 7
  %10 = ashr i32 %1, 3
  %11 = sext i32 %10 to i64
  %12 = sext i32 %3 to i64
  br label %13

13:                                               ; preds = %32, %7
  %14 = phi i32 [ %9, %7 ], [ %34, %32 ]
  %15 = phi i64 [ %11, %7 ], [ %33, %32 ]
  %16 = phi i32 [ 0, %7 ], [ %25, %32 ]
  %17 = phi i32 [ %4, %7 ], [ %26, %32 ]
  %18 = shl i32 %16, 1
  %19 = getelementptr inbounds i8, ptr %0, i64 %15
  %20 = load i8, ptr %19, align 1, !tbaa !14
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 1, %14
  %23 = and i32 %22, %21
  %24 = lshr i32 %23, %14
  %25 = or i32 %24, %18
  %26 = add nsw i32 %17, -1
  %27 = add nsw i32 %14, -1
  %28 = icmp eq i32 %14, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %13
  %30 = add nsw i64 %15, 1
  %31 = icmp slt i64 %15, %12
  br i1 %31, label %32, label %38

32:                                               ; preds = %29, %13
  %33 = phi i64 [ %30, %29 ], [ %15, %13 ]
  %34 = phi i32 [ 7, %29 ], [ %27, %13 ]
  %35 = icmp eq i32 %26, 0
  br i1 %35, label %36, label %13, !llvm.loop !1217

36:                                               ; preds = %32, %5
  %37 = phi i32 [ 0, %5 ], [ %25, %32 ]
  store i32 %37, ptr %2, align 4, !tbaa !18
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %4, %36 ], [ -1, %29 ]
  ret i32 %39
}

; Function Attrs: nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal i32 @u_1(ptr nocapture noundef readnone %0, ptr nocapture noundef %1) #25 {
  %3 = alloca %struct.syntaxelement, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #48
  %4 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 4
  store i32 0, ptr %4, align 8, !tbaa !219
  store i32 0, ptr %3, align 8, !tbaa !736
  %5 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 8
  store ptr @linfo_ue, ptr %5, align 8, !tbaa !737
  %6 = getelementptr inbounds %struct.syntaxelement, ptr %3, i64 0, i32 3
  store i32 1, ptr %6, align 4, !tbaa !212
  %7 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %3, ptr noundef %1) #47, !range !1214
  %8 = load i32, ptr %6, align 4, !tbaa !212
  %9 = load i32, ptr @UsedBits, align 4, !tbaa !18
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @UsedBits, align 4, !tbaa !18
  %11 = load i32, ptr %4, align 8, !tbaa !219
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #48
  ret i32 %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @linfo_cbp_intra(i32 noundef %0, i32 noundef %1, ptr nocapture noundef writeonly %2, ptr nocapture noundef readnone %3) #21 {
  %5 = ashr i32 %0, 1
  %6 = shl nuw i32 1, %5
  %7 = add i32 %1, -1
  %8 = add i32 %7, %6
  %9 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %10 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %9, i64 0, i32 8
  %11 = load i32, ptr %10, align 4, !tbaa !480
  %12 = icmp ne i32 %11, 0
  %13 = zext i1 %12 to i64
  %14 = sext i32 %8 to i64
  %15 = getelementptr inbounds [2 x [48 x [2 x i8]]], ptr @NCBP, i64 0, i64 %13, i64 %14
  %16 = load i8, ptr %15, align 2, !tbaa !14
  %17 = zext i8 %16 to i32
  store i32 %17, ptr %2, align 4, !tbaa !18
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @linfo_cbp_inter(i32 noundef %0, i32 noundef %1, ptr nocapture noundef writeonly %2, ptr nocapture noundef readnone %3) #21 {
  %5 = ashr i32 %0, 1
  %6 = shl nuw i32 1, %5
  %7 = add i32 %1, -1
  %8 = add i32 %7, %6
  %9 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %10 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %9, i64 0, i32 8
  %11 = load i32, ptr %10, align 4, !tbaa !480
  %12 = icmp ne i32 %11, 0
  %13 = zext i1 %12 to i64
  %14 = sext i32 %8 to i64
  %15 = getelementptr inbounds [2 x [48 x [2 x i8]]], ptr @NCBP, i64 0, i64 %13, i64 %14, i64 1
  %16 = load i8, ptr %15, align 1, !tbaa !14
  %17 = zext i8 %16 to i32
  store i32 %17, ptr %2, align 4, !tbaa !18
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind optsize willreturn memory(argmem: readwrite) uwtable
define internal void @linfo_levrun_inter(i32 noundef %0, i32 noundef %1, ptr nocapture noundef %2, ptr nocapture noundef writeonly %3) #11 {
  %5 = icmp slt i32 %0, 10
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %6, 0
  br i1 %5, label %8, label %24

8:                                                ; preds = %4
  %9 = ashr i32 %0, 1
  %10 = tail call i32 @llvm.smax.i32(i32 %9, i32 1)
  %11 = add nsw i32 %10, -1
  %12 = ashr i32 %1, 1
  %13 = zext i32 %11 to i64
  %14 = sext i32 %12 to i64
  %15 = getelementptr inbounds [4 x [8 x [2 x i8]]], ptr @NTAB1, i64 0, i64 %13, i64 %14
  %16 = load i8, ptr %15, align 2, !tbaa !14
  %17 = zext i8 %16 to i32
  store i32 %17, ptr %2, align 4, !tbaa !18
  %18 = getelementptr inbounds [4 x [8 x [2 x i8]]], ptr @NTAB1, i64 0, i64 %13, i64 %14, i64 1
  %19 = load i8, ptr %18, align 1, !tbaa !14
  %20 = zext i8 %19 to i32
  store i32 %20, ptr %3, align 4, !tbaa !18
  br i1 %7, label %39, label %21

21:                                               ; preds = %8
  %22 = load i32, ptr %2, align 4, !tbaa !18
  %23 = sub nsw i32 0, %22
  store i32 %23, ptr %2, align 4, !tbaa !18
  br label %39

24:                                               ; preds = %4
  %25 = lshr i32 %1, 1
  %26 = and i32 %25, 15
  store i32 %26, ptr %3, align 4, !tbaa !18
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [16 x i8], ptr @LEVRUN1, i64 0, i64 %27
  %29 = load i8, ptr %28, align 1, !tbaa !14
  %30 = zext i8 %29 to i32
  %31 = ashr i32 %1, 5
  %32 = lshr i32 %0, 1
  %33 = add nsw i32 %32, -5
  %34 = shl nuw i32 1, %33
  %35 = add i32 %34, %31
  %36 = add i32 %35, %30
  store i32 %36, ptr %2, align 4, !tbaa !18
  br i1 %7, label %43, label %37

37:                                               ; preds = %24
  %38 = sub nsw i32 0, %36
  br label %41

39:                                               ; preds = %21, %8
  %40 = icmp eq i32 %0, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %39, %37
  %42 = phi i32 [ %38, %37 ], [ 0, %39 ]
  store i32 %42, ptr %2, align 4, !tbaa !18
  br label %43

43:                                               ; preds = %41, %39, %24
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind optsize willreturn memory(argmem: readwrite) uwtable
define internal void @linfo_levrun_c2x2(i32 noundef %0, i32 noundef %1, ptr nocapture noundef %2, ptr nocapture noundef writeonly %3) #11 {
  %5 = icmp slt i32 %0, 6
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %6, 0
  br i1 %5, label %8, label %24

8:                                                ; preds = %4
  %9 = ashr i32 %0, 1
  %10 = tail call i32 @llvm.smax.i32(i32 %9, i32 1)
  %11 = add nsw i32 %10, -1
  %12 = ashr i32 %1, 1
  %13 = zext i32 %11 to i64
  %14 = sext i32 %12 to i64
  %15 = getelementptr inbounds [2 x [2 x [2 x i8]]], ptr @NTAB3, i64 0, i64 %13, i64 %14
  %16 = load i8, ptr %15, align 1, !tbaa !14
  %17 = zext i8 %16 to i32
  store i32 %17, ptr %2, align 4, !tbaa !18
  %18 = getelementptr inbounds [2 x [2 x [2 x i8]]], ptr @NTAB3, i64 0, i64 %13, i64 %14, i64 1
  %19 = load i8, ptr %18, align 1, !tbaa !14
  %20 = zext i8 %19 to i32
  store i32 %20, ptr %3, align 4, !tbaa !18
  br i1 %7, label %39, label %21

21:                                               ; preds = %8
  %22 = load i32, ptr %2, align 4, !tbaa !18
  %23 = sub nsw i32 0, %22
  store i32 %23, ptr %2, align 4, !tbaa !18
  br label %39

24:                                               ; preds = %4
  %25 = lshr i32 %1, 1
  %26 = and i32 %25, 3
  store i32 %26, ptr %3, align 4, !tbaa !18
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [4 x i8], ptr @LEVRUN3, i64 0, i64 %27
  %29 = load i8, ptr %28, align 1, !tbaa !14
  %30 = zext i8 %29 to i32
  %31 = ashr i32 %1, 3
  %32 = lshr i32 %0, 1
  %33 = add nsw i32 %32, -3
  %34 = shl nuw i32 1, %33
  %35 = add i32 %34, %31
  %36 = add i32 %35, %30
  store i32 %36, ptr %2, align 4, !tbaa !18
  br i1 %7, label %43, label %37

37:                                               ; preds = %24
  %38 = sub nsw i32 0, %36
  br label %41

39:                                               ; preds = %21, %8
  %40 = icmp eq i32 %0, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %39, %37
  %42 = phi i32 [ %38, %37 ], [ 0, %39 ]
  store i32 %42, ptr %2, align 4, !tbaa !18
  br label %43

43:                                               ; preds = %41, %39, %24
  ret void
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @readSyntaxElement_UVLC(ptr noundef %0, ptr nocapture noundef readnone %1, ptr nocapture noundef readonly %2) #0 {
  %4 = load ptr, ptr %2, align 8, !tbaa !448
  %5 = tail call i32 @readSyntaxElement_VLC(ptr noundef %0, ptr noundef %4) #47, !range !1214
  ret i32 %5
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal i32 @readSyntaxElement_Intra4x4PredictionMode(ptr nocapture noundef %0, ptr nocapture noundef readnone %1, ptr nocapture noundef readonly %2) #9 {
  %4 = load ptr, ptr %2, align 8, !tbaa !448
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 8, !tbaa !450
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  %8 = load ptr, ptr %7, align 8, !tbaa !218
  %9 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  %10 = load i32, ptr %9, align 4, !tbaa !561
  %11 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 4
  %12 = tail call i32 @GetVLCSymbol_IntraMode(ptr noundef %8, i32 noundef %6, ptr noundef nonnull %11, i32 noundef %10) #47
  %13 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 3
  store i32 %12, ptr %13, align 4, !tbaa !212
  %14 = icmp eq i32 %12, -1
  br i1 %14, label %24, label %15

15:                                               ; preds = %3
  %16 = load i32, ptr %5, align 8, !tbaa !450
  %17 = add nsw i32 %16, %12
  store i32 %17, ptr %5, align 8, !tbaa !450
  %18 = icmp eq i32 %12, 1
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = load i32, ptr %11, align 8, !tbaa !219
  br label %21

21:                                               ; preds = %19, %15
  %22 = phi i32 [ %20, %19 ], [ -1, %15 ]
  %23 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 %22, ptr %23, align 4, !tbaa !173
  br label %24

24:                                               ; preds = %21, %3
  %25 = phi i32 [ 1, %21 ], [ -1, %3 ]
  ret i32 %25
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(argmem: readwrite) uwtable
define internal i32 @GetVLCSymbol_IntraMode(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef writeonly %2, i32 noundef %3) #7 {
  %5 = ashr i32 %1, 3
  %6 = sext i32 %5 to i64
  %7 = and i32 %1, 7
  %8 = xor i32 %7, 7
  %9 = getelementptr inbounds i8, ptr %0, i64 %6
  %10 = load i8, ptr %9, align 1, !tbaa !14
  %11 = zext i8 %10 to i32
  %12 = shl nuw nsw i32 1, %8
  %13 = and i32 %12, %11
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %38

15:                                               ; preds = %4
  %16 = sext i32 %3 to i64
  br label %17

17:                                               ; preds = %26, %15
  %18 = phi i32 [ 1, %15 ], [ %29, %26 ]
  %19 = phi i32 [ %8, %15 ], [ %28, %26 ]
  %20 = phi i64 [ %6, %15 ], [ %24, %26 ]
  %21 = phi i32 [ 0, %15 ], [ %36, %26 ]
  %22 = icmp slt i32 %19, 1
  %23 = zext i1 %22 to i64
  %24 = add nsw i64 %20, %23
  %25 = icmp sgt i64 %24, %16
  br i1 %25, label %41, label %26

26:                                               ; preds = %17
  %27 = add nsw i32 %19, -1
  %28 = select i1 %22, i32 7, i32 %27
  %29 = add nuw nsw i32 %18, 1
  %30 = shl i32 %21, 1
  %31 = getelementptr inbounds i8, ptr %0, i64 %24
  %32 = load i8, ptr %31, align 1, !tbaa !14
  %33 = zext i8 %32 to i32
  %34 = lshr i32 %33, %28
  %35 = and i32 %34, 1
  %36 = or i32 %35, %30
  %37 = icmp eq i32 %29, 4
  br i1 %37, label %38, label %17, !llvm.loop !1218

38:                                               ; preds = %26, %4
  %39 = phi i32 [ 0, %4 ], [ %36, %26 ]
  %40 = phi i32 [ 1, %4 ], [ 4, %26 ]
  store i32 %39, ptr %2, align 4, !tbaa !18
  br label %41

41:                                               ; preds = %38, %17
  %42 = phi i32 [ %40, %38 ], [ -1, %17 ]
  ret i32 %42
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(argmem: read) uwtable
define internal i32 @more_rbsp_data(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #41 {
  %4 = ashr i32 %1, 3
  %5 = and i32 %1, 7
  %6 = add nsw i32 %2, -1
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %50, label %8

8:                                                ; preds = %3
  %9 = xor i32 %5, 7
  %10 = sext i32 %4 to i64
  %11 = getelementptr inbounds i8, ptr %0, i64 %10
  %12 = load i8, ptr %11, align 1, !tbaa !14
  %13 = zext i8 %12 to i32
  %14 = shl nuw nsw i32 1, %9
  %15 = and i32 %14, %13
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %50, label %17

17:                                               ; preds = %8
  %18 = icmp eq i32 %5, 7
  br i1 %18, label %50, label %19

19:                                               ; preds = %17
  %20 = sub nuw nsw i32 6, %5
  %21 = sub nuw nsw i32 10, %5
  %22 = and i32 %21, 12
  %23 = sub nsw i32 6, %5
  %24 = insertelement <4 x i32> poison, i32 %23, i64 0
  %25 = shufflevector <4 x i32> %24, <4 x i32> poison, <4 x i32> zeroinitializer
  %26 = insertelement <4 x i32> poison, i32 %20, i64 0
  %27 = shufflevector <4 x i32> %26, <4 x i32> poison, <4 x i32> zeroinitializer
  %28 = add <4 x i32> %27, <i32 0, i32 -1, i32 -2, i32 -3>
  %29 = insertelement <4 x i32> poison, i32 %13, i64 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %31

31:                                               ; preds = %31, %19
  %32 = phi i32 [ 0, %19 ], [ %38, %31 ]
  %33 = phi <4 x i32> [ zeroinitializer, %19 ], [ %37, %31 ]
  %34 = phi <4 x i32> [ %28, %19 ], [ %39, %31 ]
  %35 = lshr <4 x i32> %30, %34
  %36 = and <4 x i32> %35, <i32 1, i32 1, i32 1, i32 1>
  %37 = add <4 x i32> %36, %33
  %38 = add i32 %32, 4
  %39 = add <4 x i32> %34, <i32 -4, i32 -4, i32 -4, i32 -4>
  %40 = icmp eq i32 %38, %22
  br i1 %40, label %41, label %31, !llvm.loop !1219

41:                                               ; preds = %31
  %.lcssa2 = phi i32 [ %32, %31 ]
  %.lcssa1 = phi <4 x i32> [ %33, %31 ]
  %.lcssa = phi <4 x i32> [ %37, %31 ]
  %42 = insertelement <4 x i32> poison, i32 %.lcssa2, i64 0
  %43 = shufflevector <4 x i32> %42, <4 x i32> poison, <4 x i32> zeroinitializer
  %44 = or <4 x i32> %43, <i32 0, i32 1, i32 2, i32 3>
  %45 = icmp ugt <4 x i32> %44, %25
  %46 = select <4 x i1> %45, <4 x i32> %.lcssa1, <4 x i32> %.lcssa
  %47 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %46)
  %48 = icmp ne i32 %47, 0
  %49 = zext i1 %48 to i32
  br label %50

50:                                               ; preds = %41, %17, %8, %3
  %51 = phi i32 [ 1, %3 ], [ 1, %8 ], [ 0, %17 ], [ %49, %41 ]
  ret i32 %51
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(read, inaccessiblemem: none) uwtable
define internal i32 @uvlc_startcode_follows(ptr nocapture noundef readonly %0, i32 noundef %1) #32 {
  %3 = getelementptr inbounds %struct.img_par, ptr %0, i64 0, i32 38
  %4 = load ptr, ptr %3, align 8, !tbaa !165
  %5 = getelementptr inbounds %struct.Slice, ptr %4, i64 0, i32 7
  %6 = load i32, ptr %5, align 4, !tbaa !213
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [0 x [20 x i32]], ptr @assignSE2partition, i64 0, i64 %7, i64 2
  %9 = load i32, ptr %8, align 4, !tbaa !18
  %10 = getelementptr inbounds %struct.Slice, ptr %4, i64 0, i32 9
  %11 = load ptr, ptr %10, align 8, !tbaa !214
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %struct.datapartition, ptr %11, i64 %12
  %14 = load ptr, ptr %13, align 8, !tbaa !448
  %15 = getelementptr inbounds %struct.Bitstream, ptr %14, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !218
  %17 = getelementptr inbounds %struct.Bitstream, ptr %14, i64 0, i32 2
  %18 = load i32, ptr %17, align 8, !tbaa !450
  %19 = getelementptr inbounds %struct.Bitstream, ptr %14, i64 0, i32 3
  %20 = load i32, ptr %19, align 4, !tbaa !561
  %21 = tail call i32 @more_rbsp_data(ptr noundef %16, i32 noundef %18, i32 noundef %20) #47, !range !562
  %22 = xor i32 %21, 1
  ret i32 %22
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal i32 @code_from_bitstream_2d(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, i32 noundef %4, i32 noundef %5, ptr nocapture noundef writeonly %6) #9 {
  %8 = load ptr, ptr %1, align 8, !tbaa !448
  %9 = getelementptr inbounds %struct.Bitstream, ptr %8, i64 0, i32 2
  %10 = load i32, ptr %9, align 8, !tbaa !450
  %11 = getelementptr inbounds %struct.Bitstream, ptr %8, i64 0, i32 4
  %12 = load ptr, ptr %11, align 8, !tbaa !218
  %13 = getelementptr inbounds %struct.Bitstream, ptr %8, i64 0, i32 3
  %14 = load i32, ptr %13, align 4, !tbaa !561
  %15 = icmp sgt i32 %5, 0
  br i1 %15, label %16, label %48

16:                                               ; preds = %7
  %17 = icmp sgt i32 %4, 0
  %18 = sext i32 %4 to i64
  %19 = zext i32 %4 to i64
  br label %20

20:                                               ; preds = %43, %16
  %21 = phi ptr [ %2, %16 ], [ %44, %43 ]
  %22 = phi i32 [ 0, %16 ], [ %46, %43 ]
  %23 = phi ptr [ %3, %16 ], [ %45, %43 ]
  br i1 %17, label %24, label %43

24:                                               ; preds = %40, %20
  %25 = phi i64 [ %41, %40 ], [ 0, %20 ]
  %26 = getelementptr inbounds i32, ptr %21, i64 %25
  %27 = load i32, ptr %26, align 4, !tbaa !18
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds i32, ptr %23, i64 %25
  %31 = load i32, ptr %30, align 4, !tbaa !18
  %32 = tail call i32 @ShowBits(ptr noundef %12, i32 noundef %10, i32 noundef %14, i32 noundef %27) #47
  %33 = icmp eq i32 %32, %31
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %.lcssa3 = phi i32 [ %22, %29 ]
  %.lcssa2 = phi i32 [ %31, %29 ]
  %.lcssa1 = phi i64 [ %25, %29 ]
  %.lcssa = phi i32 [ %27, %29 ]
  %35 = trunc i64 %.lcssa1 to i32
  %36 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  store i32 %35, ptr %36, align 4, !tbaa !173
  %37 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 2
  store i32 %.lcssa3, ptr %37, align 8, !tbaa !179
  %38 = add nsw i32 %.lcssa, %10
  store i32 %38, ptr %9, align 8, !tbaa !450
  %39 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 3
  store i32 %.lcssa, ptr %39, align 4, !tbaa !212
  store i32 %.lcssa2, ptr %6, align 4, !tbaa !18
  br label %48

40:                                               ; preds = %29, %24
  %41 = add nuw nsw i64 %25, 1
  %42 = icmp eq i64 %41, %19
  br i1 %42, label %43, label %24, !llvm.loop !1220

43:                                               ; preds = %40, %20
  %44 = getelementptr inbounds i32, ptr %21, i64 %18
  %45 = getelementptr inbounds i32, ptr %23, i64 %18
  %46 = add nuw nsw i32 %22, 1
  %47 = icmp eq i32 %46, %5
  br i1 %47, label %48, label %20, !llvm.loop !1221

48:                                               ; preds = %43, %34, %7
  %49 = phi i32 [ 0, %34 ], [ -1, %7 ], [ -1, %43 ]
  ret i32 %49
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(argmem: read) uwtable
define internal i32 @ShowBits(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #41 {
  %5 = icmp eq i32 %3, 0
  br i1 %5, label %35, label %6

6:                                                ; preds = %4
  %7 = and i32 %1, 7
  %8 = xor i32 %7, 7
  %9 = ashr i32 %1, 3
  %10 = sext i32 %9 to i64
  %11 = sext i32 %2 to i64
  br label %12

12:                                               ; preds = %31, %6
  %13 = phi i32 [ %8, %6 ], [ %33, %31 ]
  %14 = phi i64 [ %10, %6 ], [ %32, %31 ]
  %15 = phi i32 [ 0, %6 ], [ %24, %31 ]
  %16 = phi i32 [ %3, %6 ], [ %25, %31 ]
  %17 = shl i32 %15, 1
  %18 = getelementptr inbounds i8, ptr %0, i64 %14
  %19 = load i8, ptr %18, align 1, !tbaa !14
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 1, %13
  %22 = and i32 %21, %20
  %23 = lshr i32 %22, %13
  %24 = or i32 %23, %17
  %25 = add nsw i32 %16, -1
  %26 = add nsw i32 %13, -1
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %12
  %29 = add nsw i64 %14, 1
  %30 = icmp slt i64 %14, %11
  br i1 %30, label %31, label %35

31:                                               ; preds = %28, %12
  %32 = phi i64 [ %29, %28 ], [ %14, %12 ]
  %33 = phi i32 [ 7, %28 ], [ %26, %12 ]
  %34 = icmp eq i32 %25, 0
  br i1 %34, label %35, label %12, !llvm.loop !1222

35:                                               ; preds = %31, %28, %4
  %36 = phi i32 [ 0, %4 ], [ %24, %31 ], [ -1, %28 ]
  ret i32 %36
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @readSyntaxElement_NumCoeffTrailingOnes(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readnone %2) #0 {
  %4 = alloca i32, align 4
  %5 = load ptr, ptr %1, align 8, !tbaa !448
  %6 = getelementptr inbounds %struct.Bitstream, ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 8, !tbaa !450
  %8 = getelementptr inbounds %struct.Bitstream, ptr %5, i64 0, i32 4
  %9 = load ptr, ptr %8, align 8, !tbaa !218
  %10 = getelementptr inbounds %struct.Bitstream, ptr %5, i64 0, i32 3
  %11 = load i32, ptr %10, align 4, !tbaa !561
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #48
  %12 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  %13 = load i32, ptr %12, align 4, !tbaa !173
  %14 = icmp eq i32 %13, 3
  br i1 %14, label %15, label %27

15:                                               ; preds = %3
  %16 = tail call i32 @ShowBits(ptr noundef %9, i32 noundef %7, i32 noundef %11, i32 noundef 6) #47
  %17 = add nsw i32 %7, 6
  store i32 %17, ptr %6, align 8, !tbaa !450
  %18 = and i32 %16, 3
  %19 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 2
  store i32 %18, ptr %19, align 8, !tbaa !179
  %20 = ashr i32 %16, 2
  store i32 %20, ptr %12, align 4, !tbaa !173
  %21 = icmp eq i32 %16, 3
  br i1 %21, label %22, label %23

22:                                               ; preds = %15
  store i32 0, ptr %19, align 8, !tbaa !179
  br label %25

23:                                               ; preds = %15
  %24 = add nsw i32 %20, 1
  store i32 %24, ptr %12, align 4, !tbaa !173
  br label %25

25:                                               ; preds = %23, %22
  %26 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 3
  store i32 6, ptr %26, align 4, !tbaa !212
  br label %35

27:                                               ; preds = %3
  %28 = sext i32 %13 to i64
  %29 = getelementptr inbounds [3 x [4 x [17 x i32]]], ptr @readSyntaxElement_NumCoeffTrailingOnes.lentab, i64 0, i64 %28
  %30 = getelementptr inbounds [3 x [4 x [17 x i32]]], ptr @readSyntaxElement_NumCoeffTrailingOnes.codtab, i64 0, i64 %28
  %31 = call i32 @code_from_bitstream_2d(ptr noundef nonnull %0, ptr noundef nonnull %1, ptr noundef nonnull %29, ptr noundef nonnull %30, i32 noundef 17, i32 noundef 4, ptr noundef nonnull %4) #47, !range !1165
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  %34 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.625)
  tail call void @exit(i32 noundef -1) #51
  unreachable

35:                                               ; preds = %27, %25
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #48
  ret i32 0
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @readSyntaxElement_NumCoeffTrailingOnesChromaDC(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #48
  %4 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %5 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %4, i64 0, i32 8
  %6 = load i32, ptr %5, align 4, !tbaa !480
  %7 = add i32 %6, -1
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds [3 x [4 x [17 x i32]]], ptr @readSyntaxElement_NumCoeffTrailingOnesChromaDC.lentab, i64 0, i64 %8
  %10 = getelementptr inbounds [3 x [4 x [17 x i32]]], ptr @readSyntaxElement_NumCoeffTrailingOnesChromaDC.codtab, i64 0, i64 %8
  %11 = call i32 @code_from_bitstream_2d(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %9, ptr noundef nonnull %10, i32 noundef 17, i32 noundef 4, ptr noundef nonnull %3) #47, !range !1165
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.4)
  tail call void @exit(i32 noundef -1) #51
  unreachable

15:                                               ; preds = %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #48
  ret i32 0
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal i32 @readSyntaxElement_Level_VLC0(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1) #9 {
  %3 = load ptr, ptr %1, align 8, !tbaa !448
  %4 = getelementptr inbounds %struct.Bitstream, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !450
  %6 = getelementptr inbounds %struct.Bitstream, ptr %3, i64 0, i32 4
  %7 = load ptr, ptr %6, align 8, !tbaa !218
  %8 = getelementptr inbounds %struct.Bitstream, ptr %3, i64 0, i32 3
  %9 = load i32, ptr %8, align 4, !tbaa !561
  br label %10

10:                                               ; preds = %10, %2
  %11 = phi i32 [ 0, %2 ], [ %15, %10 ]
  %12 = add nsw i32 %11, %5
  %13 = tail call i32 @ShowBits(ptr noundef %7, i32 noundef %12, i32 noundef %9, i32 noundef 1) #47
  %14 = icmp eq i32 %13, 0
  %15 = add nuw nsw i32 %11, 1
  br i1 %14, label %10, label %16, !llvm.loop !1223

16:                                               ; preds = %10
  %.lcssa1 = phi i32 [ %11, %10 ]
  %.lcssa = phi i32 [ %15, %10 ]
  %17 = add nsw i32 %.lcssa, %5
  %18 = icmp ult i32 %.lcssa1, 14
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = lshr i32 %.lcssa1, 1
  %21 = add nuw nsw i32 %20, 1
  br label %41

22:                                               ; preds = %16
  %23 = icmp eq i32 %.lcssa, 15
  br i1 %23, label %24, label %31

24:                                               ; preds = %22
  %25 = tail call i32 @ShowBits(ptr noundef %7, i32 noundef %17, i32 noundef %9, i32 noundef 4) #47
  %26 = or i32 %25, 16
  %27 = add nsw i32 %17, 4
  %28 = lshr i32 %25, 1
  %29 = and i32 %28, 7
  %30 = or i32 %29, 8
  br label %41

31:                                               ; preds = %22
  %32 = add nsw i32 %.lcssa1, -15
  %33 = add nsw i32 %.lcssa1, -3
  %34 = tail call i32 @ShowBits(ptr noundef %7, i32 noundef %17, i32 noundef %9, i32 noundef %33) #47
  %35 = add nsw i32 %17, %33
  %36 = shl i32 2048, %32
  %37 = add i32 %36, -2032
  %38 = ashr i32 %34, 1
  %39 = add nsw i32 %37, %38
  %40 = add nuw nsw i32 %33, %.lcssa
  br label %41

41:                                               ; preds = %31, %24, %19
  %42 = phi i32 [ %.lcssa1, %19 ], [ %26, %24 ], [ %34, %31 ]
  %43 = phi i32 [ %21, %19 ], [ %30, %24 ], [ %39, %31 ]
  %44 = phi i32 [ %.lcssa, %19 ], [ 19, %24 ], [ %40, %31 ]
  %45 = phi i32 [ %17, %19 ], [ %27, %24 ], [ %35, %31 ]
  %46 = and i32 %42, 1
  %47 = icmp eq i32 %46, 0
  %48 = sub nsw i32 0, %43
  %49 = select i1 %47, i32 %43, i32 %48
  %50 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 4
  store i32 %49, ptr %50, align 8, !tbaa !219
  %51 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 3
  store i32 %44, ptr %51, align 4, !tbaa !212
  store i32 %45, ptr %4, align 8, !tbaa !450
  ret i32 0
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable
define internal i32 @readSyntaxElement_Level_VLCN(ptr nocapture noundef writeonly %0, i32 noundef %1, ptr nocapture noundef readonly %2) #9 {
  %4 = load ptr, ptr %2, align 8, !tbaa !448
  %5 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 8, !tbaa !450
  %7 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 4
  %8 = load ptr, ptr %7, align 8, !tbaa !218
  %9 = getelementptr inbounds %struct.Bitstream, ptr %4, i64 0, i32 3
  %10 = load i32, ptr %9, align 4, !tbaa !561
  %11 = add nsw i32 %1, -1
  br label %12

12:                                               ; preds = %12, %3
  %13 = phi i32 [ 0, %3 ], [ %17, %12 ]
  %14 = add nsw i32 %13, %6
  %15 = tail call i32 @ShowBits(ptr noundef %8, i32 noundef %14, i32 noundef %10, i32 noundef 1) #47
  %16 = icmp eq i32 %15, 0
  %17 = add nuw nsw i32 %13, 1
  br i1 %16, label %12, label %18, !llvm.loop !1224

18:                                               ; preds = %12
  %.lcssa1 = phi i32 [ %13, %12 ]
  %.lcssa = phi i32 [ %17, %12 ]
  %19 = icmp ult i32 %.lcssa1, 15
  br i1 %19, label %20, label %29

20:                                               ; preds = %18
  %21 = shl i32 %.lcssa1, %11
  %22 = add nsw i32 %21, 1
  %23 = icmp eq i32 %11, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %20
  %25 = add nsw i32 %.lcssa, %6
  %26 = tail call i32 @ShowBits(ptr noundef %8, i32 noundef %25, i32 noundef %10, i32 noundef %11) #47
  %27 = add nsw i32 %26, %22
  %28 = add i32 %.lcssa1, %1
  br label %40

29:                                               ; preds = %18
  %30 = shl i32 15, %11
  %31 = add nsw i32 %.lcssa1, -15
  %32 = add nsw i32 %.lcssa, %6
  %33 = add nsw i32 %.lcssa1, -4
  %34 = tail call i32 @ShowBits(ptr noundef %8, i32 noundef %32, i32 noundef %10, i32 noundef %33) #47
  %35 = add nsw i32 %.lcssa, %33
  %36 = shl i32 2048, %31
  %37 = add i32 %30, -2047
  %38 = add i32 %37, %36
  %39 = add nsw i32 %38, %34
  br label %40

40:                                               ; preds = %29, %24, %20
  %41 = phi i32 [ %35, %29 ], [ %28, %24 ], [ %.lcssa, %20 ]
  %42 = phi i32 [ %39, %29 ], [ %27, %24 ], [ %22, %20 ]
  %43 = add nsw i32 %41, %6
  %44 = tail call i32 @ShowBits(ptr noundef %8, i32 noundef %43, i32 noundef %10, i32 noundef 1) #47
  %45 = add nsw i32 %41, 1
  %46 = icmp eq i32 %44, 0
  %47 = sub nsw i32 0, %42
  %48 = select i1 %46, i32 %42, i32 %47
  %49 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 4
  store i32 %48, ptr %49, align 8, !tbaa !219
  %50 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 3
  store i32 %45, ptr %50, align 4, !tbaa !212
  %51 = add nsw i32 %45, %6
  store i32 %51, ptr %5, align 8, !tbaa !450
  ret i32 0
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @readSyntaxElement_TotalZeros(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #48
  %4 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !173
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [15 x [16 x i32]], ptr @readSyntaxElement_TotalZeros.lentab, i64 0, i64 %6
  %8 = getelementptr inbounds [15 x [16 x i32]], ptr @readSyntaxElement_TotalZeros.codtab, i64 0, i64 %6
  %9 = call i32 @code_from_bitstream_2d(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %7, ptr noundef nonnull %8, i32 noundef 16, i32 noundef 1, ptr noundef nonnull %3) #47, !range !1165
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.6)
  tail call void @exit(i32 noundef -1) #51
  unreachable

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #48
  ret i32 0
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @readSyntaxElement_TotalZerosChromaDC(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #48
  %4 = load ptr, ptr @active_sps, align 8, !tbaa !13
  %5 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %4, i64 0, i32 8
  %6 = load i32, ptr %5, align 4, !tbaa !480
  %7 = add i32 %6, -1
  %8 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !173
  %10 = sext i32 %7 to i64
  %11 = sext i32 %9 to i64
  %12 = getelementptr inbounds [3 x [15 x [16 x i32]]], ptr @readSyntaxElement_TotalZerosChromaDC.lentab, i64 0, i64 %10, i64 %11
  %13 = getelementptr inbounds [3 x [15 x [16 x i32]]], ptr @readSyntaxElement_TotalZerosChromaDC.codtab, i64 0, i64 %10, i64 %11
  %14 = call i32 @code_from_bitstream_2d(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %12, ptr noundef nonnull %13, i32 noundef 16, i32 noundef 1, ptr noundef nonnull %3) #47, !range !1165
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.6)
  tail call void @exit(i32 noundef -1) #51
  unreachable

18:                                               ; preds = %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #48
  ret i32 0
}

; Function Attrs: nounwind optsize uwtable
define internal i32 @readSyntaxElement_Run(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #48
  %4 = getelementptr inbounds %struct.syntaxelement, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 4, !tbaa !173
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [15 x [16 x i32]], ptr @readSyntaxElement_Run.lentab, i64 0, i64 %6
  %8 = getelementptr inbounds [15 x [16 x i32]], ptr @readSyntaxElement_Run.codtab, i64 0, i64 %6
  %9 = call i32 @code_from_bitstream_2d(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %7, ptr noundef nonnull %8, i32 noundef 16, i32 noundef 1, ptr noundef nonnull %3) #47, !range !1165
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.7)
  tail call void @exit(i32 noundef -1) #51
  unreachable

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #48
  ret i32 0
}

attributes #0 = { nounwind optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nofree nounwind optsize willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nounwind optsize willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind }
attributes #5 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #6 = { nofree nounwind optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nofree norecurse nosync nounwind optsize memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nofree norecurse nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nofree nosync nounwind optsize willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #13 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #14 = { nofree nosync nounwind optsize memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { nofree norecurse nosync nounwind optsize memory(readwrite, argmem: read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { nofree norecurse nosync nounwind optsize memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { nofree nosync nounwind optsize memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { mustprogress nounwind optsize willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #21 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { mustprogress nounwind optsize willreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { mustprogress nofree nounwind optsize willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { nofree nosync nounwind optsize memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { nofree nosync nounwind optsize memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { nofree optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #29 = { mustprogress nofree nosync nounwind optsize willreturn memory(readwrite, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #30 = { noreturn nounwind optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #31 = { noreturn nounwind optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #32 = { nofree norecurse nosync nounwind optsize memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #33 = { nofree norecurse nosync nounwind optsize memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #34 = { optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #35 = { nounwind optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #36 = { nofree nounwind willreturn memory(argmem: readwrite) }
attributes #37 = { mustprogress nofree nounwind optsize willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #38 = { mustprogress nofree nounwind optsize willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #39 = { mustprogress nofree nosync nounwind optsize willreturn memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #40 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #41 = { nofree norecurse nosync nounwind optsize memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #42 = { nofree nosync nounwind optsize memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #43 = { nofree nosync nounwind optsize memory(write, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #44 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(argmem: write) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #45 = { nounwind optsize allocsize(0,1) }
attributes #46 = { nounwind optsize }
attributes #47 = { optsize }
attributes #48 = { nounwind }
attributes #49 = { nounwind optsize allocsize(0) }
attributes #50 = { cold optsize }
attributes #51 = { noreturn nounwind optsize }
attributes #52 = { nounwind optsize willreturn memory(read) }
attributes #53 = { cold }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6}

!0 = !{!"clang version 17.0.6 (https://github.com/Casperento/llvm-project.git 9b0073551ece0d22bf3378af2b03e456a26031b6)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 2}
!5 = !{i32 1, !"ThinLTO", i32 0}
!6 = !{i32 1, !"EnableSplitLTOUnit", i32 1}
!7 = !{!8, !9, i64 8}
!8 = !{!"", !9, i64 0, !9, i64 4, !9, i64 8, !9, i64 12, !9, i64 16, !9, i64 20, !12, i64 24}
!9 = !{!"int", !10, i64 0}
!10 = !{!"omnipotent char", !11, i64 0}
!11 = !{!"Simple C/C++ TBAA"}
!12 = !{!"any pointer", !10, i64 0}
!13 = !{!12, !12, i64 0}
!14 = !{!10, !10, i64 0}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.mustprogress"}
!17 = !{!8, !9, i64 0}
!18 = !{!9, !9, i64 0}
!19 = distinct !{!19, !16}
!20 = !{!8, !9, i64 4}
!21 = !{!8, !12, i64 24}
!22 = !{!8, !9, i64 20}
!23 = !{!8, !9, i64 16}
!24 = !{!8, !9, i64 12}
!25 = distinct !{!25, !16}
!26 = distinct !{!26, !16}
!27 = distinct !{!27, !16}
!28 = !{!29, !12, i64 24}
!29 = !{!"", !9, i64 0, !9, i64 4, !9, i64 8, !9, i64 12, !9, i64 16, !12, i64 24, !12, i64 32}
!30 = !{!29, !12, i64 32}
!31 = !{!29, !9, i64 16}
!32 = !{!29, !9, i64 12}
!33 = distinct !{!33, !16}
!34 = !{!29, !9, i64 4}
!35 = !{!29, !9, i64 8}
!36 = !{!37, !10, i64 2}
!37 = !{!"", !38, i64 0, !10, i64 2}
!38 = !{!"short", !10, i64 0}
!39 = !{!37, !38, i64 0}
!40 = !{!38, !38, i64 0}
!41 = distinct !{!41, !16}
!42 = distinct !{!42, !16}
!43 = !{!44, !9, i64 28}
!44 = !{!"img_par", !9, i64 0, !9, i64 4, !9, i64 8, !9, i64 12, !12, i64 16, !9, i64 24, !9, i64 28, !9, i64 32, !9, i64 36, !9, i64 40, !9, i64 44, !9, i64 48, !9, i64 52, !9, i64 56, !9, i64 60, !9, i64 64, !9, i64 68, !9, i64 72, !9, i64 76, !9, i64 80, !9, i64 84, !9, i64 88, !9, i64 92, !9, i64 96, !9, i64 100, !10, i64 104, !10, i64 616, !10, i64 1384, !10, i64 2408, !10, i64 5480, !12, i64 5544, !12, i64 5552, !12, i64 5560, !12, i64 5568, !9, i64 5576, !9, i64 5580, !9, i64 5584, !9, i64 5588, !12, i64 5592, !12, i64 5600, !9, i64 5608, !9, i64 5612, !9, i64 5616, !9, i64 5620, !9, i64 5624, !9, i64 5628, !12, i64 5632, !9, i64 5640, !9, i64 5644, !9, i64 5648, !9, i64 5652, !9, i64 5656, !9, i64 5660, !9, i64 5664, !9, i64 5668, !9, i64 5672, !9, i64 5676, !9, i64 5680, !9, i64 5684, !9, i64 5688, !9, i64 5692, !10, i64 5696, !9, i64 5708, !9, i64 5712, !9, i64 5716, !9, i64 5720, !9, i64 5724, !9, i64 5728, !9, i64 5732, !9, i64 5736, !9, i64 5740, !9, i64 5744, !9, i64 5748, !9, i64 5752, !9, i64 5756, !9, i64 5760, !9, i64 5764, !12, i64 5768, !12, i64 5776, !12, i64 5784, !9, i64 5792, !9, i64 5796, !9, i64 5800, !9, i64 5804, !9, i64 5808, !9, i64 5812, !9, i64 5816, !9, i64 5820, !9, i64 5824, !9, i64 5828, !9, i64 5832, !9, i64 5836, !9, i64 5840, !9, i64 5844, !9, i64 5848, !9, i64 5852, !9, i64 5856, !9, i64 5860, !9, i64 5864, !9, i64 5868, !9, i64 5872, !9, i64 5876, !9, i64 5880, !9, i64 5884, !9, i64 5888, !9, i64 5892, !9, i64 5896, !9, i64 5900, !9, i64 5904, !9, i64 5908, !9, i64 5912, !9, i64 5916, !9, i64 5920, !9, i64 5924, !9, i64 5928, !9, i64 5932, !9, i64 5936, !9, i64 5940, !9, i64 5944, !10, i64 5948, !10, i64 5972, !9, i64 5996, !9, i64 6000, !45, i64 6008, !45, i64 6016, !46, i64 6024, !46, i64 6040, !9, i64 6056, !9, i64 6060, !9, i64 6064, !9, i64 6068, !9, i64 6072, !9, i64 6076, !9, i64 6080, !9, i64 6084, !9, i64 6088, !9, i64 6092, !9, i64 6096, !9, i64 6100, !9, i64 6104}
!45 = !{!"long", !10, i64 0}
!46 = !{!"timeb", !45, i64 0, !38, i64 8, !38, i64 10, !38, i64 12}
!47 = !{!48, !12, i64 316920}
!48 = !{!"storable_picture", !10, i64 0, !9, i64 4, !9, i64 8, !9, i64 12, !9, i64 16, !10, i64 24, !10, i64 79224, !10, i64 158424, !10, i64 237624, !9, i64 316824, !9, i64 316828, !9, i64 316832, !9, i64 316836, !9, i64 316840, !9, i64 316844, !9, i64 316848, !9, i64 316852, !9, i64 316856, !38, i64 316860, !9, i64 316864, !9, i64 316868, !9, i64 316872, !9, i64 316876, !9, i64 316880, !9, i64 316884, !9, i64 316888, !9, i64 316892, !9, i64 316896, !9, i64 316900, !9, i64 316904, !9, i64 316908, !9, i64 316912, !12, i64 316920, !12, i64 316928, !12, i64 316936, !12, i64 316944, !12, i64 316952, !12, i64 316960, !12, i64 316968, !12, i64 316976, !12, i64 316984, !12, i64 316992, !12, i64 317000, !12, i64 317008, !12, i64 317016, !9, i64 317024, !9, i64 317028, !9, i64 317032, !9, i64 317036, !9, i64 317040, !9, i64 317044, !9, i64 317048, !9, i64 317052, !9, i64 317056, !9, i64 317060, !9, i64 317064, !9, i64 317068, !9, i64 317072, !10, i64 317076, !9, i64 317084, !12, i64 317088, !9, i64 317096}
!49 = !{!44, !9, i64 4}
!50 = !{!44, !12, i64 5544}
!51 = distinct !{!51, !16}
!52 = !{!53, !9, i64 0}
!53 = !{!"pix_pos", !9, i64 0, !9, i64 4, !9, i64 8, !9, i64 12, !9, i64 16, !9, i64 20}
!54 = !{!55, !10, i64 1148}
!55 = !{!"", !10, i64 0, !9, i64 4, !9, i64 8, !10, i64 12, !10, i64 16, !10, i64 20, !10, i64 24, !10, i64 56, !10, i64 440, !10, i64 952, !10, i64 976, !10, i64 984, !9, i64 988, !9, i64 992, !10, i64 996, !10, i64 1028, !10, i64 1060, !10, i64 1092, !9, i64 1096, !9, i64 1100, !12, i64 1104, !9, i64 1112, !9, i64 1116, !10, i64 1120, !9, i64 1124, !9, i64 1128, !9, i64 1132, !9, i64 1136, !9, i64 1140, !10, i64 1144, !10, i64 1148, !10, i64 1152}
!56 = !{!44, !12, i64 16}
!57 = !{!53, !9, i64 4}
!58 = distinct !{!58, !16}
!59 = !{!53, !9, i64 20}
!60 = !{!53, !9, i64 16}
!61 = !{!44, !9, i64 5892}
!62 = distinct !{!62, !16}
!63 = distinct !{!63, !16}
!64 = distinct !{!64, !16}
!65 = distinct !{!65, !16}
!66 = distinct !{!66, !16}
!67 = distinct !{!67, !16}
!68 = distinct !{!68, !16}
!69 = distinct !{!69, !16}
!70 = distinct !{!70, !16}
!71 = distinct !{!71, !16}
!72 = distinct !{!72, !16}
!73 = distinct !{!73, !16}
!74 = distinct !{!74, !16}
!75 = distinct !{!75, !16}
!76 = distinct !{!76, !16}
!77 = !{!44, !9, i64 5900}
!78 = distinct !{!78, !16, !79, !80}
!79 = !{!"llvm.loop.isvectorized", i32 1}
!80 = !{!"llvm.loop.unroll.runtime.disable"}
!81 = distinct !{!81, !16}
!82 = !{!48, !12, i64 316928}
!83 = !{!48, !9, i64 317044}
!84 = !{!44, !12, i64 5600}
!85 = !{!44, !9, i64 5932}
!86 = !{!44, !9, i64 5936}
!87 = distinct !{!87, !16}
!88 = distinct !{!88, !16}
!89 = distinct !{!89, !16}
!90 = !{!91, !9, i64 352}
!91 = !{!"macroblock", !9, i64 0, !10, i64 4, !9, i64 12, !9, i64 16, !12, i64 24, !12, i64 32, !9, i64 40, !10, i64 44, !9, i64 300, !92, i64 304, !92, i64 312, !9, i64 320, !9, i64 324, !10, i64 328, !10, i64 332, !9, i64 336, !9, i64 340, !9, i64 344, !9, i64 348, !9, i64 352, !9, i64 356, !9, i64 360, !9, i64 364, !9, i64 368, !9, i64 372, !9, i64 376, !9, i64 380, !9, i64 384, !9, i64 388, !9, i64 392, !9, i64 396, !9, i64 400}
!92 = !{!"long long", !10, i64 0}
!93 = !{!44, !9, i64 5924}
!94 = !{!44, !9, i64 5896}
!95 = distinct !{!95, !16}
!96 = distinct !{!96, !16}
!97 = distinct !{!97, !16}
!98 = distinct !{!98, !16}
!99 = distinct !{!99, !16}
!100 = distinct !{!100, !16}
!101 = distinct !{!101, !16}
!102 = distinct !{!102, !16}
!103 = !{!44, !9, i64 5904}
!104 = distinct !{!104, !16, !79, !80}
!105 = distinct !{!105, !16}
!106 = distinct !{!106, !16}
!107 = distinct !{!107, !16}
!108 = distinct !{!108, !16}
!109 = distinct !{!109, !16}
!110 = distinct !{!110, !16}
!111 = distinct !{!111, !16}
!112 = distinct !{!112, !16}
!113 = distinct !{!113, !16}
!114 = distinct !{!114, !16}
!115 = distinct !{!115, !16}
!116 = distinct !{!116, !16}
!117 = !{!44, !9, i64 5884}
!118 = !{!44, !9, i64 5920}
!119 = distinct !{!119, !16}
!120 = distinct !{!120, !16}
!121 = distinct !{!121, !16}
!122 = !{!55, !10, i64 20}
!123 = !{!124, !10, i64 36}
!124 = !{!"", !10, i64 0, !9, i64 4, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 20, !9, i64 24, !9, i64 28, !9, i64 32, !10, i64 36, !10, i64 40, !10, i64 72, !10, i64 456, !10, i64 968, !10, i64 992, !9, i64 1000, !9, i64 1004, !9, i64 1008, !9, i64 1012, !9, i64 1016, !10, i64 1020, !9, i64 1024, !9, i64 1028, !9, i64 1032, !10, i64 1036, !9, i64 2060, !10, i64 2064, !9, i64 2068, !9, i64 2072, !10, i64 2076, !10, i64 2080, !10, i64 2084, !10, i64 2088, !9, i64 2092, !9, i64 2096, !9, i64 2100, !9, i64 2104, !10, i64 2108, !125, i64 2112}
!125 = !{!"", !10, i64 0, !9, i64 4, !9, i64 8, !9, i64 12, !10, i64 16, !10, i64 20, !10, i64 24, !9, i64 28, !10, i64 32, !10, i64 36, !9, i64 40, !9, i64 44, !9, i64 48, !10, i64 52, !9, i64 56, !9, i64 60, !10, i64 64, !9, i64 68, !9, i64 72, !10, i64 76, !10, i64 80, !126, i64 84, !10, i64 496, !126, i64 500, !10, i64 912, !10, i64 916, !10, i64 920, !10, i64 924, !9, i64 928, !9, i64 932, !9, i64 936, !9, i64 940, !9, i64 944, !9, i64 948}
!126 = !{!"", !9, i64 0, !9, i64 4, !9, i64 8, !10, i64 12, !10, i64 140, !10, i64 268, !9, i64 396, !9, i64 400, !9, i64 404, !9, i64 408}
!127 = distinct !{!127, !16}
!128 = distinct !{!128, !16}
!129 = distinct !{!129, !16}
!130 = !{!55, !10, i64 16}
!131 = distinct !{!131, !16}
!132 = distinct !{!132, !16}
!133 = distinct !{!133, !16}
!134 = distinct !{!134, !16}
!135 = distinct !{!135, !16}
!136 = !{!44, !9, i64 32}
!137 = !{!44, !9, i64 44}
!138 = distinct !{!138, !16}
!139 = distinct !{!139, !16}
!140 = distinct !{!140, !16}
!141 = distinct !{!141, !16}
!142 = distinct !{!142, !16}
!143 = distinct !{!143, !16}
!144 = !{!44, !9, i64 36}
!145 = distinct !{!145, !16}
!146 = distinct !{!146, !16}
!147 = distinct !{!147, !16}
!148 = distinct !{!148, !16}
!149 = distinct !{!149, !16}
!150 = distinct !{!150, !16}
!151 = distinct !{!151, !16}
!152 = distinct !{!152, !16}
!153 = distinct !{!153, !16}
!154 = distinct !{!154, !16}
!155 = distinct !{!155, !16}
!156 = distinct !{!156, !16}
!157 = distinct !{!157, !16}
!158 = distinct !{!158, !16}
!159 = distinct !{!159, !16}
!160 = distinct !{!160, !16}
!161 = distinct !{!161, !16}
!162 = distinct !{!162, !16}
!163 = distinct !{!163, !16}
!164 = distinct !{!164, !16}
!165 = !{!44, !12, i64 5592}
!166 = !{!167, !12, i64 48}
!167 = !{!"", !9, i64 0, !9, i64 4, !9, i64 8, !9, i64 12, !10, i64 16, !9, i64 20, !9, i64 24, !9, i64 28, !9, i64 32, !12, i64 40, !12, i64 48, !12, i64 56, !9, i64 64, !12, i64 72, !12, i64 80, !12, i64 88, !9, i64 96, !12, i64 104, !12, i64 112, !12, i64 120, !12, i64 128, !9, i64 136, !9, i64 140, !9, i64 144, !9, i64 148}
!168 = !{!91, !9, i64 380}
!169 = !{!91, !9, i64 364}
!170 = !{!91, !9, i64 356}
!171 = !{!91, !9, i64 384}
!172 = !{!91, !9, i64 368}
!173 = !{!174, !9, i64 4}
!174 = !{!"syntaxelement", !9, i64 0, !9, i64 4, !9, i64 8, !9, i64 12, !9, i64 16, !9, i64 20, !9, i64 24, !9, i64 28, !12, i64 32, !12, i64 40}
!175 = !{!44, !9, i64 12}
!176 = !{!91, !9, i64 12}
!177 = distinct !{!177, !16}
!178 = distinct !{!178, !16}
!179 = !{!174, !9, i64 8}
!180 = distinct !{!180, !16}
!181 = distinct !{!181, !16}
!182 = !{!91, !12, i64 24}
!183 = !{!91, !9, i64 360}
!184 = !{!91, !12, i64 32}
!185 = !{!44, !9, i64 5608}
!186 = !{!44, !9, i64 5612}
!187 = !{!53, !9, i64 12}
!188 = !{!53, !9, i64 8}
!189 = !{!44, !9, i64 5624}
!190 = !{!174, !9, i64 24}
!191 = distinct !{!191, !16}
!192 = distinct !{!192, !16}
!193 = distinct !{!193, !16}
!194 = !{!91, !9, i64 396}
!195 = !{!91, !9, i64 40}
!196 = !{!167, !12, i64 56}
!197 = !{!48, !12, i64 316952}
!198 = distinct !{!198, !16}
!199 = !{!91, !9, i64 300}
!200 = distinct !{!200, !16}
!201 = distinct !{!201, !16}
!202 = distinct !{!202, !16}
!203 = !{!44, !9, i64 5620}
!204 = !{!44, !9, i64 5616}
!205 = !{!91, !92, i64 312}
!206 = !{!44, !9, i64 5584}
!207 = distinct !{!207, !16}
!208 = distinct !{!208, !16}
!209 = distinct !{!209, !16}
!210 = distinct !{!210, !16}
!211 = !{!174, !12, i64 40}
!212 = !{!174, !9, i64 12}
!213 = !{!167, !9, i64 28}
!214 = !{!167, !12, i64 40}
!215 = !{!216, !9, i64 0}
!216 = !{!"", !9, i64 0, !9, i64 4, !9, i64 8, !9, i64 12, !12, i64 16, !9, i64 24}
!217 = !{!216, !9, i64 4}
!218 = !{!216, !12, i64 16}
!219 = !{!174, !9, i64 16}
!220 = !{!44, !9, i64 5868}
!221 = distinct !{!221, !16}
!222 = distinct !{!222, !16}
!223 = distinct !{!223, !16}
!224 = distinct !{!224, !16}
!225 = distinct !{!225, !16}
!226 = distinct !{!226, !16}
!227 = distinct !{!227, !16}
!228 = distinct !{!228, !16}
!229 = distinct !{!229, !16}
!230 = distinct !{!230, !16}
!231 = distinct !{!231, !16}
!232 = distinct !{!232, !16}
!233 = distinct !{!233, !16}
!234 = distinct !{!234, !16}
!235 = distinct !{!235, !16}
!236 = distinct !{!236, !16}
!237 = distinct !{!237, !16}
!238 = distinct !{!238, !16}
!239 = distinct !{!239, !16}
!240 = distinct !{!240, !16}
!241 = distinct !{!241, !16}
!242 = distinct !{!242, !16}
!243 = distinct !{!243, !16}
!244 = distinct !{!244, !16}
!245 = distinct !{!245, !16}
!246 = distinct !{!246, !16}
!247 = distinct !{!247, !16}
!248 = distinct !{!248, !16}
!249 = distinct !{!249, !16}
!250 = !{!251, !9, i64 64}
!251 = !{!"ercVariables_s", !9, i64 0, !9, i64 4, !12, i64 8, !12, i64 16, !12, i64 24, !12, i64 32, !9, i64 40, !12, i64 48, !9, i64 56, !9, i64 60, !9, i64 64}
!252 = !{!251, !12, i64 8}
!253 = !{!251, !12, i64 32}
!254 = !{!251, !12, i64 16}
!255 = !{!251, !12, i64 24}
!256 = !{!251, !12, i64 48}
!257 = !{!251, !9, i64 0}
!258 = !{!251, !9, i64 4}
!259 = !{!260, !9, i64 8}
!260 = !{!"ercSegment_s", !9, i64 0, !9, i64 4, !9, i64 8}
!261 = !{!260, !9, i64 0}
!262 = !{!260, !9, i64 4}
!263 = distinct !{!263, !16}
!264 = !{!251, !9, i64 40}
!265 = !{!251, !9, i64 60}
!266 = !{!251, !9, i64 56}
!267 = distinct !{!267, !16}
!268 = distinct !{!268, !16}
!269 = distinct !{!269, !16}
!270 = !{!271, !12, i64 0}
!271 = !{!"", !12, i64 0, !12, i64 8, !12, i64 16}
!272 = distinct !{!272, !16}
!273 = distinct !{!273, !16}
!274 = distinct !{!274, !16}
!275 = distinct !{!275, !16}
!276 = distinct !{!276, !16}
!277 = distinct !{!277, !16}
!278 = distinct !{!278, !16}
!279 = distinct !{!279, !16}
!280 = distinct !{!280, !16}
!281 = distinct !{!281, !16}
!282 = distinct !{!282, !16}
!283 = distinct !{!283, !16}
!284 = distinct !{!284, !16}
!285 = distinct !{!285, !16}
!286 = !{!287, !9, i64 4}
!287 = !{!"", !10, i64 0, !9, i64 4, !9, i64 8, !10, i64 12}
!288 = !{!287, !9, i64 8}
!289 = !{!287, !10, i64 0}
!290 = distinct !{!290, !16}
!291 = distinct !{!291, !16}
!292 = distinct !{!292, !16}
!293 = distinct !{!293, !16}
!294 = distinct !{!294, !16}
!295 = !{!271, !12, i64 8}
!296 = !{!271, !12, i64 16}
!297 = distinct !{!297, !16}
!298 = distinct !{!298, !16}
!299 = !{!44, !9, i64 72}
!300 = !{!44, !9, i64 68}
!301 = !{!44, !9, i64 76}
!302 = !{!44, !9, i64 88}
!303 = !{!44, !9, i64 92}
!304 = !{!44, !9, i64 96}
!305 = distinct !{!305, !16}
!306 = distinct !{!306, !16}
!307 = distinct !{!307, !16}
!308 = distinct !{!308, !16}
!309 = distinct !{!309, !16}
!310 = distinct !{!310, !16}
!311 = !{!48, !9, i64 316872}
!312 = !{!48, !9, i64 316876}
!313 = distinct !{!313, !16}
!314 = distinct !{!314, !16}
!315 = distinct !{!315, !16}
!316 = distinct !{!316, !16}
!317 = distinct !{!317, !16}
!318 = distinct !{!318, !16}
!319 = distinct !{!319, !16}
!320 = distinct !{!320, !16, !79, !80}
!321 = distinct !{!321, !16, !79, !80}
!322 = distinct !{!322, !16}
!323 = distinct !{!323, !16}
!324 = distinct !{!324, !16}
!325 = distinct !{!325, !16}
!326 = distinct !{!326, !16}
!327 = distinct !{!327, !16}
!328 = distinct !{!328, !16}
!329 = distinct !{!329, !16}
!330 = !{!44, !9, i64 6080}
!331 = !{!44, !9, i64 6064}
!332 = !{!44, !9, i64 6056}
!333 = !{!44, !9, i64 6072}
!334 = !{!44, !9, i64 5660}
!335 = !{!44, !9, i64 5816}
!336 = !{!44, !9, i64 5676}
!337 = !{!44, !9, i64 48}
!338 = !{!44, !9, i64 52}
!339 = !{!44, !9, i64 56}
!340 = !{!44, !9, i64 64}
!341 = !{!48, !9, i64 316900}
!342 = !{!48, !9, i64 316832}
!343 = !{!48, !9, i64 316824}
!344 = !{!48, !9, i64 316856}
!345 = !{!48, !9, i64 316852}
!346 = !{!48, !9, i64 316848}
!347 = !{!48, !9, i64 317096}
!348 = !{!48, !9, i64 317040}
!349 = !{!44, !9, i64 6060}
!350 = !{!351, !9, i64 28}
!351 = !{!"decoded_picture_buffer", !12, i64 0, !12, i64 8, !12, i64 16, !9, i64 24, !9, i64 28, !9, i64 32, !9, i64 36, !9, i64 40, !9, i64 44, !9, i64 48, !9, i64 52, !12, i64 56}
!352 = !{!351, !12, i64 0}
!353 = !{!354, !9, i64 0}
!354 = !{!"frame_store", !9, i64 0, !9, i64 4, !9, i64 8, !9, i64 12, !9, i64 16, !9, i64 20, !9, i64 24, !9, i64 28, !9, i64 32, !9, i64 36, !9, i64 40, !9, i64 44, !12, i64 48, !12, i64 56, !12, i64 64}
!355 = !{!354, !12, i64 48}
!356 = !{!48, !9, i64 316844}
!357 = distinct !{!357, !16}
!358 = !{!44, !9, i64 6084}
!359 = !{!48, !9, i64 317024}
!360 = !{!48, !9, i64 317028}
!361 = distinct !{!361, !16}
!362 = !{!48, !9, i64 316912}
!363 = !{!48, !9, i64 317084}
!364 = !{!44, !9, i64 6068}
!365 = distinct !{!365, !16}
!366 = distinct !{!366, !16}
!367 = distinct !{!367, !16}
!368 = distinct !{!368, !16}
!369 = !{!48, !9, i64 316908}
!370 = !{!167, !10, i64 16}
!371 = !{!48, !12, i64 316976}
!372 = distinct !{!372, !16}
!373 = distinct !{!373, !16}
!374 = distinct !{!374, !16}
!375 = distinct !{!375, !16}
!376 = distinct !{!376, !16}
!377 = distinct !{!377, !16}
!378 = distinct !{!378, !16}
!379 = distinct !{!379, !16}
!380 = distinct !{!380, !16}
!381 = distinct !{!381, !16}
!382 = !{!124, !9, i64 1008}
!383 = !{!351, !9, i64 32}
!384 = !{!354, !9, i64 44}
!385 = !{!354, !9, i64 20}
!386 = !{!44, !9, i64 6076}
!387 = !{!354, !9, i64 28}
!388 = distinct !{!388, !16}
!389 = distinct !{!389, !16}
!390 = !{!48, !9, i64 4}
!391 = distinct !{!391, !16}
!392 = distinct !{!392, !16}
!393 = distinct !{!393, !16}
!394 = distinct !{!394, !16}
!395 = distinct !{!395, !16}
!396 = !{!124, !9, i64 2060}
!397 = distinct !{!397, !16}
!398 = distinct !{!398, !16}
!399 = !{!48, !9, i64 316836}
!400 = !{!351, !12, i64 8}
!401 = distinct !{!401, !16}
!402 = !{!55, !9, i64 1112}
!403 = !{!354, !9, i64 40}
!404 = distinct !{!404, !16}
!405 = !{!351, !9, i64 24}
!406 = !{!407, !12, i64 0}
!407 = !{!"concealment_node", !12, i64 0, !9, i64 8, !12, i64 16}
!408 = !{!407, !9, i64 8}
!409 = distinct !{!409, !16}
!410 = !{!351, !9, i64 40}
!411 = !{!354, !9, i64 36}
!412 = !{!354, !9, i64 4}
!413 = !{!407, !12, i64 16}
!414 = !{!124, !9, i64 2072}
!415 = !{!124, !9, i64 2068}
!416 = !{!55, !9, i64 992}
!417 = !{!55, !9, i64 1100}
!418 = !{!55, !9, i64 988}
!419 = distinct !{!419, !16}
!420 = distinct !{!420, !16}
!421 = distinct !{!421, !16}
!422 = !{!44, !9, i64 5820}
!423 = distinct !{!423, !16}
!424 = distinct !{!424, !16, !79, !80}
!425 = distinct !{!425, !16}
!426 = distinct !{!426, !16}
!427 = distinct !{!427, !16}
!428 = !{!55, !9, i64 1096}
!429 = !{!44, !9, i64 5648}
!430 = distinct !{!430, !16, !79, !80}
!431 = !{!55, !10, i64 1092}
!432 = !{!44, !9, i64 5824}
!433 = distinct !{!433, !16}
!434 = distinct !{!434, !16, !79, !80}
!435 = distinct !{!435, !16}
!436 = distinct !{!436, !16}
!437 = !{!55, !12, i64 1104}
!438 = distinct !{!438, !16}
!439 = !{!44, !9, i64 5836}
!440 = !{!124, !10, i64 2076}
!441 = !{!44, !9, i64 5680}
!442 = distinct !{!442, !16}
!443 = !{!124, !10, i64 2080}
!444 = distinct !{!444, !16}
!445 = distinct !{!445, !16}
!446 = distinct !{!446, !16}
!447 = distinct !{!447, !16}
!448 = !{!449, !12, i64 0}
!449 = !{!"datapartition", !12, i64 0, !29, i64 8, !12, i64 48}
!450 = !{!216, !9, i64 8}
!451 = !{!167, !9, i64 20}
!452 = !{!167, !9, i64 12}
!453 = !{!167, !9, i64 148}
!454 = !{!44, !9, i64 5804}
!455 = !{!44, !9, i64 5684}
!456 = !{!44, !9, i64 5812}
!457 = !{!124, !9, i64 1012}
!458 = !{!124, !9, i64 1016}
!459 = !{!44, !9, i64 5688}
!460 = !{!55, !10, i64 984}
!461 = !{!44, !9, i64 5692}
!462 = !{!124, !10, i64 1020}
!463 = !{!55, !10, i64 1152}
!464 = !{!44, !9, i64 5652}
!465 = !{!44, !9, i64 40}
!466 = !{!44, !9, i64 5640}
!467 = !{!44, !9, i64 5644}
!468 = !{!167, !9, i64 64}
!469 = !{!167, !12, i64 72}
!470 = distinct !{!470, !16}
!471 = !{!167, !9, i64 96}
!472 = !{!167, !12, i64 104}
!473 = distinct !{!473, !16}
!474 = !{!167, !12, i64 80}
!475 = !{!55, !10, i64 1120}
!476 = !{!55, !9, i64 1124}
!477 = !{!44, !9, i64 5800}
!478 = !{!44, !9, i64 5760}
!479 = !{!44, !9, i64 5792}
!480 = !{!124, !9, i64 32}
!481 = !{!44, !9, i64 5764}
!482 = !{!44, !9, i64 5796}
!483 = !{!44, !12, i64 5768}
!484 = !{!44, !12, i64 5776}
!485 = distinct !{!485, !16}
!486 = distinct !{!486, !16}
!487 = distinct !{!487, !16}
!488 = distinct !{!488, !16}
!489 = !{!44, !9, i64 5808}
!490 = !{!55, !10, i64 12}
!491 = !{!55, !9, i64 1128}
!492 = !{!167, !9, i64 4}
!493 = !{!167, !9, i64 8}
!494 = !{!55, !9, i64 1132}
!495 = !{!55, !10, i64 1144}
!496 = !{!167, !9, i64 136}
!497 = !{!167, !9, i64 140}
!498 = !{!167, !9, i64 144}
!499 = !{!44, !9, i64 5828}
!500 = !{!44, !9, i64 5832}
!501 = !{!44, !9, i64 5840}
!502 = !{!44, !12, i64 5632}
!503 = !{!504, !12, i64 24}
!504 = !{!"DecRefPicMarking_s", !9, i64 0, !9, i64 4, !9, i64 8, !9, i64 12, !9, i64 16, !12, i64 24}
!505 = distinct !{!505, !16}
!506 = !{!44, !9, i64 5848}
!507 = !{!44, !9, i64 5852}
!508 = !{!44, !9, i64 5856}
!509 = !{!504, !9, i64 0}
!510 = !{!504, !9, i64 4}
!511 = !{!504, !9, i64 8}
!512 = !{!504, !9, i64 12}
!513 = !{!504, !9, i64 16}
!514 = distinct !{!514, !16}
!515 = distinct !{!515, !16}
!516 = !{!44, !9, i64 5708}
!517 = !{!44, !9, i64 5860}
!518 = !{!44, !9, i64 5712}
!519 = !{!44, !9, i64 5864}
!520 = !{!44, !9, i64 5664}
!521 = !{!44, !9, i64 5716}
!522 = !{!44, !9, i64 5668}
!523 = !{!44, !9, i64 5752}
!524 = !{!44, !9, i64 5672}
!525 = !{!44, !9, i64 5736}
!526 = !{!44, !9, i64 5740}
!527 = !{!44, !9, i64 5756}
!528 = !{!124, !9, i64 1032}
!529 = !{!44, !9, i64 5744}
!530 = !{!44, !9, i64 5724}
!531 = !{!44, !9, i64 5720}
!532 = distinct !{!532, !16}
!533 = !{!44, !9, i64 5728}
!534 = !{!44, !9, i64 5732}
!535 = distinct !{!535, !16}
!536 = !{!124, !9, i64 1024}
!537 = !{!124, !9, i64 1028}
!538 = !{!48, !12, i64 316936}
!539 = distinct !{!539, !16, !79, !80}
!540 = distinct !{!540, !16}
!541 = distinct !{!541, !16}
!542 = distinct !{!542, !16}
!543 = distinct !{!543, !16}
!544 = distinct !{!544, !16}
!545 = distinct !{!545, !16}
!546 = distinct !{!546, !16}
!547 = distinct !{!547, !16}
!548 = distinct !{!548, !16}
!549 = !{!167, !9, i64 32}
!550 = !{!44, !9, i64 8}
!551 = !{!44, !9, i64 5580}
!552 = !{i32 1, i32 4}
!553 = distinct !{!553, !16}
!554 = !{!555, !9, i64 3000}
!555 = !{!"inp_par", !10, i64 0, !10, i64 1000, !10, i64 2000, !9, i64 3000, !9, i64 3004, !9, i64 3008, !9, i64 3012, !9, i64 3016, !9, i64 3020, !9, i64 3024, !9, i64 3028}
!556 = !{!44, !9, i64 6088}
!557 = !{!44, !9, i64 6092}
!558 = !{!167, !9, i64 24}
!559 = !{!167, !9, i64 0}
!560 = !{!216, !9, i64 24}
!561 = !{!216, !9, i64 12}
!562 = !{i32 0, i32 2}
!563 = distinct !{!563, !16}
!564 = !{!48, !9, i64 316904}
!565 = !{!91, !9, i64 336}
!566 = !{!48, !9, i64 316864}
!567 = distinct !{!567, !16}
!568 = !{!48, !9, i64 316868}
!569 = !{!44, !9, i64 0}
!570 = !{!48, !10, i64 0}
!571 = !{!48, !9, i64 16}
!572 = !{!48, !9, i64 317072}
!573 = !{!555, !9, i64 3016}
!574 = !{!575, !576, i64 4}
!575 = !{!"snr_par", !9, i64 0, !576, i64 4, !576, i64 8, !576, i64 12, !576, i64 16, !576, i64 20, !576, i64 24, !576, i64 28, !576, i64 32, !576, i64 36, !576, i64 40, !576, i64 44, !576, i64 48, !576, i64 52, !576, i64 56, !576, i64 60}
!576 = !{!"float", !10, i64 0}
!577 = !{!575, !576, i64 8}
!578 = !{!575, !576, i64 12}
!579 = !{!575, !9, i64 0}
!580 = distinct !{!580, !16}
!581 = distinct !{!581, !16}
!582 = !{!44, !12, i64 5784}
!583 = distinct !{!583, !16}
!584 = distinct !{!584, !16}
!585 = distinct !{!585, !16}
!586 = distinct !{!586, !16}
!587 = distinct !{!587, !16}
!588 = distinct !{!588, !16}
!589 = distinct !{!589, !16}
!590 = !{!44, !9, i64 5576}
!591 = distinct !{!591, !16}
!592 = !{!92, !92, i64 0}
!593 = !{!48, !9, i64 8}
!594 = !{!48, !9, i64 12}
!595 = distinct !{!595, !16}
!596 = distinct !{!596, !16}
!597 = distinct !{!597, !16}
!598 = distinct !{!598, !16}
!599 = distinct !{!599, !16}
!600 = distinct !{!600, !16}
!601 = !{!602, !9, i64 40}
!602 = !{!"old_slice_par", !9, i64 0, !9, i64 4, !9, i64 8, !9, i64 12, !9, i64 16, !9, i64 20, !10, i64 24, !9, i64 32, !9, i64 36, !9, i64 40}
!603 = !{!602, !9, i64 8}
!604 = !{!602, !9, i64 0}
!605 = !{!602, !9, i64 4}
!606 = !{!602, !9, i64 12}
!607 = !{!602, !9, i64 32}
!608 = !{!602, !9, i64 36}
!609 = !{!602, !9, i64 16}
!610 = !{!44, !9, i64 6096}
!611 = !{!44, !9, i64 6100}
!612 = !{!124, !10, i64 2064}
!613 = !{!555, !9, i64 3020}
!614 = !{!44, !9, i64 6104}
!615 = !{!55, !9, i64 1136}
!616 = !{!55, !9, i64 1140}
!617 = !{!44, !12, i64 5560}
!618 = distinct !{!618, !16}
!619 = distinct !{!619, !16}
!620 = distinct !{!620, !16}
!621 = distinct !{!621, !16}
!622 = distinct !{!622, !16}
!623 = !{!48, !12, i64 317088}
!624 = !{!48, !9, i64 316828}
!625 = !{!48, !9, i64 317048}
!626 = !{!124, !10, i64 2088}
!627 = !{!48, !9, i64 317052}
!628 = !{!167, !12, i64 88}
!629 = !{!167, !12, i64 112}
!630 = !{!167, !12, i64 120}
!631 = distinct !{!631, !16}
!632 = distinct !{!632, !16}
!633 = distinct !{!633, !16}
!634 = distinct !{!634, !16}
!635 = distinct !{!635, !16}
!636 = distinct !{!636, !16}
!637 = distinct !{!637, !16}
!638 = distinct !{!638, !16}
!639 = distinct !{!639, !16}
!640 = distinct !{!640, !16}
!641 = !{!44, !9, i64 5872}
!642 = !{!124, !9, i64 2160}
!643 = !{!555, !9, i64 3008}
!644 = !{!48, !9, i64 317056}
!645 = !{!48, !9, i64 317060}
!646 = !{!48, !9, i64 317064}
!647 = !{!48, !9, i64 317068}
!648 = !{!555, !9, i64 3012}
!649 = !{!44, !9, i64 6000}
!650 = !{!44, !9, i64 5996}
!651 = distinct !{!651, !16}
!652 = !{!44, !12, i64 5552}
!653 = distinct !{!653, !16}
!654 = distinct !{!654, !16}
!655 = distinct !{!655, !16}
!656 = distinct !{!656, !16}
!657 = !{!576, !576, i64 0}
!658 = !{!575, !576, i64 24}
!659 = !{!575, !576, i64 36}
!660 = distinct !{!660, !16}
!661 = !{!48, !9, i64 316880}
!662 = !{!48, !9, i64 316884}
!663 = distinct !{!663, !16}
!664 = distinct !{!664, !16}
!665 = distinct !{!665, !16}
!666 = distinct !{!666, !16}
!667 = distinct !{!667, !16}
!668 = distinct !{!668, !16}
!669 = distinct !{!669, !16}
!670 = distinct !{!670, !16}
!671 = distinct !{!671, !16}
!672 = distinct !{!672, !16}
!673 = distinct !{!673, !16}
!674 = distinct !{!674, !16}
!675 = distinct !{!675, !16}
!676 = distinct !{!676, !16}
!677 = distinct !{!677, !16}
!678 = distinct !{!678, !16}
!679 = distinct !{!679, !16}
!680 = distinct !{!680, !16}
!681 = distinct !{!681, !16}
!682 = distinct !{!682, !16}
!683 = distinct !{!683, !16}
!684 = distinct !{!684, !16}
!685 = distinct !{!685, !16}
!686 = !{!555, !9, i64 3004}
!687 = distinct !{!687, !16}
!688 = !{!555, !9, i64 3024}
!689 = !{!555, !9, i64 3028}
!690 = !{!44, !9, i64 5844}
!691 = !{!351, !9, i64 48}
!692 = !{!45, !45, i64 0}
!693 = distinct !{!693, !16, !79, !80}
!694 = distinct !{!694, !16}
!695 = !{!575, !576, i64 28}
!696 = !{!575, !576, i64 32}
!697 = !{!44, !9, i64 5916}
!698 = !{!575, !576, i64 16}
!699 = !{!575, !576, i64 20}
!700 = !{!44, !12, i64 5568}
!701 = distinct !{!701, !16}
!702 = distinct !{!702, !16}
!703 = !{!44, !9, i64 5876}
!704 = !{!44, !9, i64 5880}
!705 = !{!44, !9, i64 5888}
!706 = !{!44, !9, i64 5928}
!707 = distinct !{!707, !16}
!708 = distinct !{!708, !16}
!709 = distinct !{!709, !16}
!710 = !{!44, !9, i64 5628}
!711 = !{!91, !9, i64 340}
!712 = distinct !{!712, !16}
!713 = !{!91, !9, i64 344}
!714 = !{!91, !9, i64 348}
!715 = distinct !{!715, !16}
!716 = distinct !{!716, !16}
!717 = !{!48, !12, i64 316960}
!718 = !{!91, !92, i64 304}
!719 = distinct !{!719, !16}
!720 = !{!91, !9, i64 0}
!721 = distinct !{!721, !16}
!722 = !{!44, !9, i64 80}
!723 = !{!44, !9, i64 84}
!724 = !{!48, !12, i64 316944}
!725 = !{!48, !38, i64 316860}
!726 = !{!91, !9, i64 16}
!727 = !{!44, !9, i64 100}
!728 = !{!91, !9, i64 324}
!729 = distinct !{!729, !16, !79, !80}
!730 = distinct !{!730, !16}
!731 = distinct !{!731, !16}
!732 = distinct !{!732, !16}
!733 = distinct !{!733, !16}
!734 = distinct !{!734, !16}
!735 = distinct !{!735, !16}
!736 = !{!174, !9, i64 0}
!737 = !{!174, !12, i64 32}
!738 = !{!449, !12, i64 48}
!739 = !{!124, !10, i64 2084}
!740 = !{!91, !9, i64 400}
!741 = distinct !{!741, !16}
!742 = !{!44, !9, i64 5908}
!743 = distinct !{!743, !16}
!744 = distinct !{!744, !16}
!745 = distinct !{!745, !16}
!746 = distinct !{!746, !16}
!747 = distinct !{!747, !16}
!748 = distinct !{!748, !16}
!749 = distinct !{!749, !16}
!750 = distinct !{!750, !16}
!751 = distinct !{!751, !16}
!752 = distinct !{!752, !16}
!753 = distinct !{!753, !16}
!754 = distinct !{!754, !16}
!755 = distinct !{!755, !16}
!756 = distinct !{!756, !16}
!757 = distinct !{!757, !16}
!758 = distinct !{!758, !16}
!759 = distinct !{!759, !16}
!760 = distinct !{!760, !16}
!761 = distinct !{!761, !16}
!762 = distinct !{!762, !16}
!763 = distinct !{!763, !16}
!764 = distinct !{!764, !16}
!765 = distinct !{!765, !16}
!766 = distinct !{!766, !16}
!767 = distinct !{!767, !16}
!768 = distinct !{!768, !16}
!769 = distinct !{!769, !16}
!770 = distinct !{!770, !16}
!771 = distinct !{!771, !16}
!772 = distinct !{!772, !16}
!773 = distinct !{!773, !16}
!774 = distinct !{!774, !16}
!775 = distinct !{!775, !16}
!776 = distinct !{!776, !16}
!777 = distinct !{!777, !16}
!778 = distinct !{!778, !16}
!779 = distinct !{!779, !16}
!780 = distinct !{!780, !16}
!781 = distinct !{!781, !16}
!782 = distinct !{!782, !16}
!783 = distinct !{!783, !16}
!784 = distinct !{!784, !16}
!785 = distinct !{!785, !16}
!786 = distinct !{!786, !16}
!787 = distinct !{!787, !16}
!788 = distinct !{!788, !16}
!789 = !{i64 0, i64 4, !18, i64 4, i64 4, !18, i64 8, i64 4, !18, i64 12, i64 4, !18, i64 16, i64 4, !18, i64 20, i64 4, !18}
!790 = distinct !{!790, !16}
!791 = distinct !{!791, !16}
!792 = distinct !{!792, !16}
!793 = distinct !{!793, !16}
!794 = distinct !{!794, !16}
!795 = distinct !{!795, !16}
!796 = distinct !{!796, !16}
!797 = distinct !{!797, !16}
!798 = distinct !{!798, !16}
!799 = distinct !{!799, !16}
!800 = distinct !{!800, !16}
!801 = distinct !{!801, !16}
!802 = distinct !{!802, !16}
!803 = distinct !{!803, !16}
!804 = distinct !{!804, !16}
!805 = distinct !{!805, !16}
!806 = distinct !{!806, !16}
!807 = distinct !{!807, !16}
!808 = distinct !{!808, !16}
!809 = distinct !{!809, !16}
!810 = distinct !{!810, !16}
!811 = distinct !{!811, !16}
!812 = distinct !{!812, !16}
!813 = distinct !{!813, !16}
!814 = distinct !{!814, !16}
!815 = distinct !{!815, !16}
!816 = distinct !{!816, !16}
!817 = distinct !{!817, !16}
!818 = distinct !{!818, !16}
!819 = distinct !{!819, !16}
!820 = distinct !{!820, !16}
!821 = distinct !{!821, !16}
!822 = distinct !{!822, !16}
!823 = distinct !{!823, !16}
!824 = distinct !{!824, !16}
!825 = distinct !{!825, !16}
!826 = distinct !{!826, !16}
!827 = distinct !{!827, !16}
!828 = distinct !{!828, !16}
!829 = distinct !{!829, !16}
!830 = distinct !{!830, !16}
!831 = distinct !{!831, !16}
!832 = distinct !{!832, !16}
!833 = distinct !{!833, !16}
!834 = distinct !{!834, !16}
!835 = distinct !{!835, !16}
!836 = distinct !{!836, !16}
!837 = distinct !{!837, !16}
!838 = distinct !{!838, !16}
!839 = distinct !{!839, !16}
!840 = distinct !{!840, !16}
!841 = distinct !{!841, !16}
!842 = distinct !{!842, !16}
!843 = distinct !{!843, !16}
!844 = distinct !{!844, !16}
!845 = distinct !{!845, !16}
!846 = distinct !{!846, !16}
!847 = distinct !{!847, !16}
!848 = distinct !{!848, !16}
!849 = distinct !{!849, !16}
!850 = distinct !{!850, !16}
!851 = distinct !{!851, !16, !79, !80}
!852 = distinct !{!852, !16}
!853 = distinct !{!853, !16}
!854 = distinct !{!854, !16}
!855 = distinct !{!855, !16}
!856 = distinct !{!856, !16}
!857 = distinct !{!857, !16}
!858 = distinct !{!858, !16}
!859 = distinct !{!859, !16}
!860 = distinct !{!860, !16}
!861 = distinct !{!861, !16}
!862 = distinct !{!862, !16}
!863 = distinct !{!863, !16}
!864 = distinct !{!864, !16}
!865 = distinct !{!865, !16}
!866 = distinct !{!866, !16}
!867 = !{!48, !9, i64 316896}
!868 = distinct !{!868, !16}
!869 = distinct !{!869, !16}
!870 = distinct !{!870, !16}
!871 = distinct !{!871, !16}
!872 = distinct !{!872, !16}
!873 = distinct !{!873, !16}
!874 = distinct !{!874, !16, !79, !80}
!875 = distinct !{!875, !16}
!876 = distinct !{!876, !16}
!877 = distinct !{!877, !16}
!878 = distinct !{!878, !16}
!879 = distinct !{!879, !16}
!880 = distinct !{!880, !16}
!881 = distinct !{!881, !16}
!882 = distinct !{!882, !16}
!883 = distinct !{!883, !16}
!884 = distinct !{!884, !16}
!885 = distinct !{!885, !16}
!886 = distinct !{!886, !16}
!887 = distinct !{!887, !16}
!888 = distinct !{!888, !16, !79, !80}
!889 = distinct !{!889, !16}
!890 = distinct !{!890, !16}
!891 = !{!44, !9, i64 60}
!892 = distinct !{!892, !16}
!893 = distinct !{!893, !16}
!894 = distinct !{!894, !16}
!895 = distinct !{!895, !16}
!896 = distinct !{!896, !16}
!897 = distinct !{!897, !16}
!898 = distinct !{!898, !16}
!899 = distinct !{!899, !16}
!900 = distinct !{!900, !16}
!901 = distinct !{!901, !16}
!902 = distinct !{!902, !16}
!903 = !{!91, !9, i64 372}
!904 = !{!91, !9, i64 376}
!905 = !{!91, !9, i64 388}
!906 = !{!91, !9, i64 392}
!907 = !{!124, !9, i64 24}
!908 = !{!124, !9, i64 4}
!909 = !{!124, !10, i64 20}
!910 = !{!124, !10, i64 2108}
!911 = !{!124, !10, i64 3032}
!912 = !{!124, !9, i64 3060}
!913 = !{!351, !9, i64 52}
!914 = !{!351, !12, i64 56}
!915 = !{!351, !9, i64 36}
!916 = !{!351, !12, i64 16}
!917 = distinct !{!917, !16}
!918 = distinct !{!918, !16}
!919 = !{!48, !12, i64 317000}
!920 = !{!48, !12, i64 317008}
!921 = !{!48, !12, i64 317016}
!922 = distinct !{!922, !16}
!923 = distinct !{!923, !16}
!924 = distinct !{!924, !16}
!925 = distinct !{!925, !16}
!926 = !{!48, !9, i64 316888}
!927 = !{!48, !9, i64 316892}
!928 = !{!354, !12, i64 56}
!929 = !{!354, !12, i64 64}
!930 = !{!48, !12, i64 316968}
!931 = !{!48, !12, i64 316984}
!932 = !{!48, !12, i64 316992}
!933 = distinct !{!933, !16}
!934 = !{!48, !9, i64 316840}
!935 = distinct !{!935, !16}
!936 = distinct !{!936, !16}
!937 = !{!354, !9, i64 8}
!938 = distinct !{!938, !16}
!939 = distinct !{!939, !16}
!940 = distinct !{!940, !16}
!941 = distinct !{!941, !16}
!942 = distinct !{!942, !16}
!943 = distinct !{!943, !16}
!944 = distinct !{!944, !16}
!945 = distinct !{!945, !16}
!946 = distinct !{!946, !16}
!947 = distinct !{!947, !16}
!948 = distinct !{!948, !16}
!949 = distinct !{!949, !16}
!950 = distinct !{!950, !16}
!951 = distinct !{!951, !16}
!952 = distinct !{!952, !16}
!953 = distinct !{!953, !16}
!954 = distinct !{!954, !16}
!955 = !{ptr @is_long_ref, ptr @is_short_ref}
!956 = distinct !{!956, !16}
!957 = distinct !{!957, !16}
!958 = distinct !{!958, !16}
!959 = distinct !{!959, !16}
!960 = distinct !{!960, !16}
!961 = distinct !{!961, !16}
!962 = !{!354, !9, i64 32}
!963 = distinct !{!963, !16}
!964 = distinct !{!964, !16}
!965 = distinct !{!965, !16}
!966 = distinct !{!966, !16}
!967 = distinct !{!967, !16}
!968 = distinct !{!968, !16}
!969 = distinct !{!969, !16}
!970 = distinct !{!970, !16}
!971 = distinct !{!971, !16}
!972 = distinct !{!972, !16}
!973 = distinct !{!973, !16}
!974 = distinct !{!974, !16}
!975 = distinct !{!975, !16}
!976 = distinct !{!976, !16}
!977 = distinct !{!977, !16}
!978 = !{!351, !9, i64 44}
!979 = distinct !{!979, !16}
!980 = !{!48, !9, i64 317032}
!981 = distinct !{!981, !16}
!982 = distinct !{!982, !16}
!983 = distinct !{!983, !16}
!984 = !{!48, !9, i64 317036}
!985 = distinct !{!985, !16}
!986 = distinct !{!986, !16}
!987 = distinct !{!987, !16}
!988 = distinct !{!988, !16}
!989 = distinct !{!989, !16}
!990 = distinct !{!990, !16}
!991 = distinct !{!991, !16}
!992 = !{!354, !9, i64 12}
!993 = distinct !{!993, !16}
!994 = distinct !{!994, !16}
!995 = distinct !{!995, !16}
!996 = distinct !{!996, !16}
!997 = distinct !{!997, !16}
!998 = distinct !{!998, !16}
!999 = distinct !{!999, !16}
!1000 = distinct !{!1000, !16}
!1001 = distinct !{!1001, !16}
!1002 = distinct !{!1002, !16}
!1003 = distinct !{!1003, !16}
!1004 = distinct !{!1004, !16}
!1005 = distinct !{!1005, !16}
!1006 = distinct !{!1006, !16}
!1007 = distinct !{!1007, !16}
!1008 = distinct !{!1008, !16}
!1009 = distinct !{!1009, !16}
!1010 = distinct !{!1010, !16}
!1011 = distinct !{!1011, !16}
!1012 = distinct !{!1012, !16}
!1013 = distinct !{!1013, !16}
!1014 = distinct !{!1014, !16}
!1015 = distinct !{!1015, !16}
!1016 = distinct !{!1016, !16}
!1017 = distinct !{!1017, !16}
!1018 = distinct !{!1018, !16}
!1019 = distinct !{!1019, !16}
!1020 = distinct !{!1020, !16}
!1021 = distinct !{!1021, !16}
!1022 = distinct !{!1022, !16}
!1023 = distinct !{!1023, !16}
!1024 = distinct !{!1024, !16}
!1025 = distinct !{!1025, !16}
!1026 = distinct !{!1026, !16}
!1027 = !{!1028, !9, i64 4}
!1028 = !{!"colocated_params", !9, i64 0, !9, i64 4, !9, i64 8, !10, i64 16, !12, i64 1600, !12, i64 1608, !12, i64 1616, !12, i64 1624, !10, i64 1632, !12, i64 3216, !12, i64 3224, !12, i64 3232, !12, i64 3240, !10, i64 3248, !12, i64 4832, !12, i64 4840, !12, i64 4848, !12, i64 4856, !10, i64 4864, !12, i64 4872}
!1029 = !{!1028, !9, i64 8}
!1030 = !{!1028, !9, i64 0}
!1031 = !{!1028, !12, i64 1600}
!1032 = !{!1028, !12, i64 1608}
!1033 = !{!1028, !12, i64 1616}
!1034 = !{!1028, !12, i64 1624}
!1035 = !{!1028, !12, i64 4872}
!1036 = !{!1028, !12, i64 3216}
!1037 = !{!1028, !12, i64 3224}
!1038 = !{!1028, !12, i64 3232}
!1039 = !{!1028, !12, i64 3240}
!1040 = !{!1028, !12, i64 4832}
!1041 = !{!1028, !12, i64 4840}
!1042 = !{!1028, !12, i64 4848}
!1043 = !{!1028, !12, i64 4856}
!1044 = !{!1028, !10, i64 4864}
!1045 = distinct !{!1045, !16}
!1046 = distinct !{!1046, !16}
!1047 = distinct !{!1047, !16}
!1048 = distinct !{!1048, !16}
!1049 = distinct !{!1049, !16}
!1050 = distinct !{!1050, !16}
!1051 = distinct !{!1051, !16}
!1052 = distinct !{!1052, !16}
!1053 = distinct !{!1053, !16}
!1054 = distinct !{!1054, !16}
!1055 = distinct !{!1055, !16}
!1056 = distinct !{!1056, !16}
!1057 = distinct !{!1057, !16}
!1058 = distinct !{!1058, !16}
!1059 = distinct !{!1059, !16}
!1060 = distinct !{!1060, !16}
!1061 = distinct !{!1061, !16}
!1062 = distinct !{!1062, !16}
!1063 = distinct !{!1063, !16}
!1064 = distinct !{!1064, !16}
!1065 = distinct !{!1065, !16}
!1066 = distinct !{!1066, !16}
!1067 = distinct !{!1067, !16}
!1068 = distinct !{!1068, !16}
!1069 = distinct !{!1069, !16}
!1070 = distinct !{!1070, !16}
!1071 = distinct !{!1071, !16}
!1072 = distinct !{!1072, !16}
!1073 = distinct !{!1073, !16}
!1074 = distinct !{!1074, !16}
!1075 = distinct !{!1075, !16}
!1076 = distinct !{!1076, !16}
!1077 = distinct !{!1077, !16}
!1078 = distinct !{!1078, !16}
!1079 = distinct !{!1079, !16}
!1080 = distinct !{!1080, !16}
!1081 = distinct !{!1081, !16}
!1082 = distinct !{!1082, !16}
!1083 = distinct !{!1083, !16}
!1084 = distinct !{!1084, !16, !79, !80}
!1085 = distinct !{!1085, !16}
!1086 = distinct !{!1086, !16, !79, !80}
!1087 = distinct !{!1087, !16}
!1088 = distinct !{!1088, !16, !79, !80}
!1089 = distinct !{!1089, !16}
!1090 = distinct !{!1090, !16, !79, !80}
!1091 = distinct !{!1091, !16}
!1092 = !{!354, !9, i64 24}
!1093 = distinct !{!1093, !16}
!1094 = !{!124, !10, i64 8}
!1095 = !{!124, !10, i64 12}
!1096 = !{!124, !10, i64 16}
!1097 = !{!124, !9, i64 28}
!1098 = !{!124, !9, i64 1000}
!1099 = !{!124, !9, i64 1004}
!1100 = distinct !{!1100, !16}
!1101 = distinct !{!1101, !16}
!1102 = !{!124, !9, i64 2092}
!1103 = !{!124, !9, i64 2096}
!1104 = !{!124, !9, i64 2100}
!1105 = !{!124, !9, i64 2104}
!1106 = !{!124, !10, i64 0}
!1107 = !{!124, !10, i64 2112}
!1108 = !{!124, !9, i64 2116}
!1109 = !{!124, !9, i64 2120}
!1110 = !{!124, !9, i64 2124}
!1111 = !{!124, !10, i64 2128}
!1112 = !{!124, !10, i64 2132}
!1113 = !{!124, !10, i64 2136}
!1114 = !{!124, !9, i64 2140}
!1115 = !{!124, !10, i64 2144}
!1116 = !{!124, !10, i64 2148}
!1117 = !{!124, !9, i64 2152}
!1118 = !{!124, !9, i64 2156}
!1119 = !{!124, !10, i64 2164}
!1120 = !{!124, !9, i64 2168}
!1121 = !{!124, !9, i64 2172}
!1122 = !{!124, !10, i64 2176}
!1123 = !{!124, !9, i64 2180}
!1124 = !{!124, !9, i64 2184}
!1125 = !{!124, !10, i64 2188}
!1126 = !{!124, !10, i64 2192}
!1127 = !{!124, !10, i64 2608}
!1128 = !{!124, !10, i64 3024}
!1129 = !{!124, !10, i64 3028}
!1130 = !{!124, !10, i64 3036}
!1131 = !{!124, !9, i64 3040}
!1132 = !{!124, !9, i64 3044}
!1133 = !{!124, !9, i64 3052}
!1134 = !{!124, !9, i64 3048}
!1135 = !{!124, !9, i64 3056}
!1136 = !{!126, !9, i64 0}
!1137 = !{!126, !9, i64 4}
!1138 = !{!126, !9, i64 8}
!1139 = distinct !{!1139, !16}
!1140 = !{!126, !9, i64 396}
!1141 = !{!126, !9, i64 400}
!1142 = !{!126, !9, i64 404}
!1143 = !{!126, !9, i64 408}
!1144 = !{!55, !9, i64 4}
!1145 = !{!55, !9, i64 8}
!1146 = distinct !{!1146, !16}
!1147 = distinct !{!1147, !16}
!1148 = distinct !{!1148, !16}
!1149 = !{!55, !9, i64 1116}
!1150 = distinct !{!1150, !16}
!1151 = !{!55, !10, i64 0}
!1152 = distinct !{!1152, !16}
!1153 = !{!44, !9, i64 5912}
!1154 = distinct !{!1154, !16}
!1155 = distinct !{!1155, !16}
!1156 = distinct !{!1156, !16}
!1157 = distinct !{!1157, !16}
!1158 = distinct !{!1158, !16}
!1159 = distinct !{!1159, !16}
!1160 = !{!1161, !12, i64 56}
!1161 = !{!"", !9, i64 0, !9, i64 4, !9, i64 8, !9, i64 12, !9, i64 16, !9, i64 20, !9, i64 24, !9, i64 28, !9, i64 32, !9, i64 36, !12, i64 40, !9, i64 48, !12, i64 56, !9, i64 64}
!1162 = !{!1161, !12, i64 40}
!1163 = !{!1161, !9, i64 48}
!1164 = !{!1161, !9, i64 64}
!1165 = !{i32 -1, i32 1}
!1166 = !{!1161, !9, i64 0}
!1167 = !{!1161, !9, i64 4}
!1168 = !{!1161, !9, i64 8}
!1169 = !{!1161, !9, i64 12}
!1170 = !{!1161, !9, i64 16}
!1171 = !{!1161, !9, i64 20}
!1172 = !{!1161, !9, i64 24}
!1173 = !{!1161, !9, i64 32}
!1174 = !{!1161, !9, i64 36}
!1175 = distinct !{!1175, !16}
!1176 = distinct !{!1176, !16}
!1177 = distinct !{!1177, !16}
!1178 = distinct !{!1178, !16}
!1179 = !{!124, !9, i64 2196}
!1180 = !{!124, !9, i64 2592}
!1181 = distinct !{!1181, !16}
!1182 = !{!124, !9, i64 2612}
!1183 = !{!124, !9, i64 3008}
!1184 = distinct !{!1184, !16}
!1185 = distinct !{!1185, !16}
!1186 = distinct !{!1186, !16}
!1187 = distinct !{!1187, !16}
!1188 = distinct !{!1188, !16}
!1189 = distinct !{!1189, !16}
!1190 = distinct !{!1190, !16}
!1191 = distinct !{!1191, !16}
!1192 = distinct !{!1192, !16}
!1193 = distinct !{!1193, !16}
!1194 = distinct !{!1194, !16}
!1195 = distinct !{!1195, !16}
!1196 = distinct !{!1196, !16}
!1197 = distinct !{!1197, !16}
!1198 = distinct !{!1198, !16}
!1199 = distinct !{!1199, !16}
!1200 = distinct !{!1200, !16}
!1201 = distinct !{!1201, !16}
!1202 = distinct !{!1202, !16}
!1203 = distinct !{!1203, !16}
!1204 = distinct !{!1204, !16}
!1205 = distinct !{!1205, !16}
!1206 = distinct !{!1206, !16}
!1207 = distinct !{!1207, !16}
!1208 = distinct !{!1208, !16}
!1209 = distinct !{!1209, !16}
!1210 = distinct !{!1210, !16, !79, !80}
!1211 = distinct !{!1211, !16}
!1212 = distinct !{!1212, !16}
!1213 = distinct !{!1213, !16}
!1214 = !{i32 -1, i32 2}
!1215 = distinct !{!1215, !16}
!1216 = distinct !{!1216, !16}
!1217 = distinct !{!1217, !16}
!1218 = distinct !{!1218, !16}
!1219 = distinct !{!1219, !16, !79, !80}
!1220 = distinct !{!1220, !16}
!1221 = distinct !{!1221, !16}
!1222 = distinct !{!1222, !16}
!1223 = distinct !{!1223, !16}
!1224 = distinct !{!1224, !16}
