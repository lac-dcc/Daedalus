; ModuleID = '/src/llvm-test-suite/build/MultiSource/Benchmarks/Trimaran/enc-3des/enc-3des.e.bc'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.des_context = type { [32 x i64], [32 x i64] }
%struct.des3_context = type { [96 x i64], [96 x i64] }

@SB1 = internal global [64 x i64] [i64 16843776, i64 0, i64 65536, i64 16843780, i64 16842756, i64 66564, i64 4, i64 65536, i64 1024, i64 16843776, i64 16843780, i64 1024, i64 16778244, i64 16842756, i64 16777216, i64 4, i64 1028, i64 16778240, i64 16778240, i64 66560, i64 66560, i64 16842752, i64 16842752, i64 16778244, i64 65540, i64 16777220, i64 16777220, i64 65540, i64 0, i64 1028, i64 66564, i64 16777216, i64 65536, i64 16843780, i64 4, i64 16842752, i64 16843776, i64 16777216, i64 16777216, i64 1024, i64 16842756, i64 65536, i64 66560, i64 16777220, i64 1024, i64 4, i64 16778244, i64 66564, i64 16843780, i64 65540, i64 16842752, i64 16778244, i64 16777220, i64 1028, i64 66564, i64 16843776, i64 1028, i64 16778240, i64 16778240, i64 0, i64 65540, i64 66560, i64 0, i64 16842756], align 16
@LHs = internal unnamed_addr constant [16 x i64] [i64 0, i64 1, i64 256, i64 257, i64 65536, i64 65537, i64 65792, i64 65793, i64 16777216, i64 16777217, i64 16777472, i64 16777473, i64 16842752, i64 16842753, i64 16843008, i64 16843009], align 16
@RHs = internal unnamed_addr constant [16 x i64] [i64 0, i64 16777216, i64 65536, i64 16842752, i64 256, i64 16777472, i64 65792, i64 16843008, i64 1, i64 16777217, i64 65537, i64 16842753, i64 257, i64 16777473, i64 65793, i64 16843009], align 16
@SB8 = internal unnamed_addr constant [64 x i64] [i64 268439616, i64 4096, i64 262144, i64 268701760, i64 268435456, i64 268439616, i64 64, i64 268435456, i64 262208, i64 268697600, i64 268701760, i64 266240, i64 268701696, i64 266304, i64 4096, i64 64, i64 268697600, i64 268435520, i64 268439552, i64 4160, i64 266240, i64 262208, i64 268697664, i64 268701696, i64 4160, i64 0, i64 0, i64 268697664, i64 268435520, i64 268439552, i64 266304, i64 262144, i64 266304, i64 262144, i64 268701696, i64 4096, i64 64, i64 268697664, i64 4096, i64 266304, i64 268439552, i64 64, i64 268435520, i64 268697600, i64 268697664, i64 268435456, i64 262144, i64 268439616, i64 0, i64 268701760, i64 262208, i64 268435520, i64 268697600, i64 268439552, i64 268439616, i64 0, i64 268701760, i64 266240, i64 266240, i64 4160, i64 4160, i64 262208, i64 268435456, i64 268701696], align 16
@SB6 = internal unnamed_addr constant [64 x i64] [i64 536870928, i64 541065216, i64 16384, i64 541081616, i64 541065216, i64 16, i64 541081616, i64 4194304, i64 536887296, i64 4210704, i64 4194304, i64 536870928, i64 4194320, i64 536887296, i64 536870912, i64 16400, i64 0, i64 4194320, i64 536887312, i64 16384, i64 4210688, i64 536887312, i64 16, i64 541065232, i64 541065232, i64 0, i64 4210704, i64 541081600, i64 16400, i64 4210688, i64 541081600, i64 536870912, i64 536887296, i64 16, i64 541065232, i64 4210688, i64 541081616, i64 4194304, i64 16400, i64 536870928, i64 4194304, i64 536887296, i64 536870912, i64 16400, i64 536870928, i64 541081616, i64 4210688, i64 541065216, i64 4210704, i64 541081600, i64 0, i64 541065232, i64 16, i64 16384, i64 541065216, i64 4210704, i64 16384, i64 4194320, i64 536887312, i64 0, i64 541081600, i64 536870912, i64 4194320, i64 536887312], align 16
@SB4 = internal unnamed_addr constant [64 x i64] [i64 8396801, i64 8321, i64 8321, i64 128, i64 8396928, i64 8388737, i64 8388609, i64 8193, i64 0, i64 8396800, i64 8396800, i64 8396929, i64 129, i64 0, i64 8388736, i64 8388609, i64 1, i64 8192, i64 8388608, i64 8396801, i64 128, i64 8388608, i64 8193, i64 8320, i64 8388737, i64 1, i64 8320, i64 8388736, i64 8192, i64 8396928, i64 8396929, i64 129, i64 8388736, i64 8388609, i64 8396800, i64 8396929, i64 129, i64 0, i64 0, i64 8396800, i64 8320, i64 8388736, i64 8388737, i64 1, i64 8396801, i64 8321, i64 8321, i64 128, i64 8396929, i64 129, i64 1, i64 8192, i64 8388609, i64 8193, i64 8396928, i64 8388737, i64 8193, i64 8320, i64 8388608, i64 8396801, i64 128, i64 8388608, i64 8192, i64 8396928], align 16
@SB2 = internal unnamed_addr constant [64 x i64] [i64 2148565024, i64 2147516416, i64 32768, i64 1081376, i64 1048576, i64 32, i64 2148532256, i64 2147516448, i64 2147483680, i64 2148565024, i64 2148564992, i64 2147483648, i64 2147516416, i64 1048576, i64 32, i64 2148532256, i64 1081344, i64 1048608, i64 2147516448, i64 0, i64 2147483648, i64 32768, i64 1081376, i64 2148532224, i64 1048608, i64 2147483680, i64 0, i64 1081344, i64 32800, i64 2148564992, i64 2148532224, i64 32800, i64 0, i64 1081376, i64 2148532256, i64 1048576, i64 2147516448, i64 2148532224, i64 2148564992, i64 32768, i64 2148532224, i64 2147516416, i64 32, i64 2148565024, i64 1081376, i64 32, i64 32768, i64 2147483648, i64 32800, i64 2148564992, i64 1048576, i64 2147483680, i64 1048608, i64 2147516448, i64 2147483680, i64 1048608, i64 1081344, i64 0, i64 2147516416, i64 32800, i64 2147483648, i64 2148532256, i64 2148565024, i64 1081344], align 16
@SB7 = internal unnamed_addr constant [64 x i64] [i64 2097152, i64 69206018, i64 67110914, i64 0, i64 2048, i64 67110914, i64 2099202, i64 69208064, i64 69208066, i64 2097152, i64 0, i64 67108866, i64 2, i64 67108864, i64 69206018, i64 2050, i64 67110912, i64 2099202, i64 2097154, i64 67110912, i64 67108866, i64 69206016, i64 69208064, i64 2097154, i64 69206016, i64 2048, i64 2050, i64 69208066, i64 2099200, i64 2, i64 67108864, i64 2099200, i64 67108864, i64 2099200, i64 2097152, i64 67110914, i64 67110914, i64 69206018, i64 69206018, i64 2, i64 2097154, i64 67108864, i64 67110912, i64 2097152, i64 69208064, i64 2050, i64 2099202, i64 69208064, i64 2050, i64 67108866, i64 69208066, i64 69206016, i64 2099200, i64 0, i64 2, i64 69208066, i64 0, i64 2099202, i64 69206016, i64 2048, i64 67108866, i64 67110912, i64 2048, i64 2097154], align 16
@SB5 = internal unnamed_addr constant [64 x i64] [i64 256, i64 34078976, i64 34078720, i64 1107296512, i64 524288, i64 256, i64 1073741824, i64 34078720, i64 1074266368, i64 524288, i64 33554688, i64 1074266368, i64 1107296512, i64 1107820544, i64 524544, i64 1073741824, i64 33554432, i64 1074266112, i64 1074266112, i64 0, i64 1073742080, i64 1107820800, i64 1107820800, i64 33554688, i64 1107820544, i64 1073742080, i64 0, i64 1107296256, i64 34078976, i64 33554432, i64 1107296256, i64 524544, i64 524288, i64 1107296512, i64 256, i64 33554432, i64 1073741824, i64 34078720, i64 1107296512, i64 1074266368, i64 33554688, i64 1073741824, i64 1107820544, i64 34078976, i64 1074266368, i64 256, i64 33554432, i64 1107820544, i64 1107820800, i64 524544, i64 1107296256, i64 1107820800, i64 34078720, i64 0, i64 1074266112, i64 1107296256, i64 524544, i64 33554688, i64 1073742080, i64 524288, i64 0, i64 1074266112, i64 34078976, i64 1073742080], align 16
@SB3 = internal unnamed_addr constant [64 x i64] [i64 520, i64 134349312, i64 0, i64 134348808, i64 134218240, i64 0, i64 131592, i64 134218240, i64 131080, i64 134217736, i64 134217736, i64 131072, i64 134349320, i64 131080, i64 134348800, i64 520, i64 134217728, i64 8, i64 134349312, i64 512, i64 131584, i64 134348800, i64 134348808, i64 131592, i64 134218248, i64 131584, i64 131072, i64 134218248, i64 8, i64 134349320, i64 512, i64 134217728, i64 134349312, i64 134217728, i64 131080, i64 520, i64 131072, i64 134349312, i64 134218240, i64 0, i64 512, i64 131080, i64 134349320, i64 134218240, i64 134217736, i64 512, i64 0, i64 134348808, i64 134218248, i64 131072, i64 134217728, i64 134349320, i64 8, i64 131592, i64 131584, i64 134217736, i64 134348800, i64 134218248, i64 520, i64 134348800, i64 131592, i64 8, i64 134348808, i64 131584], align 16
@.str = private unnamed_addr constant [44 x i8] c"\0A Triple-DES Monte Carlo Test (ECB mode) - \00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c" Test %d, key size = %3d bits: \00", align 1
@stdout = external local_unnamed_addr global ptr, align 8
@DES3_keys = internal global [3 x [8 x i8]] [[8 x i8] c"\01#Eg\89\AB\CD\EF", [8 x i8] c"#Eg\89\AB\CD\EF\01", [8 x i8] c"Eg\89\AB\CD\EF\01#"], align 16
@DES3_enc_test = internal unnamed_addr constant [3 x [8 x i8]] [[8 x i8] c"j*\19\F4\1E\CA\85K", [8 x i8] c"\03\E6\9F[\FAX\EBB", [8 x i8] c"\DD\17\E8\B8\B47\D22"], align 16
@DES3_dec_test = internal unnamed_addr constant [3 x [8 x i8]] [[8 x i8] c"\CD\D6O/\94'\C1]", [8 x i8] c"i\96\C8\FAG\A2\AB\EB", [8 x i8] c"\83%9vD\09\1A\0A"], align 16
@str = private unnamed_addr constant [8 x i8] c"passed.\00", align 1
@str.7 = private unnamed_addr constant [8 x i8] c"failed!\00", align 1
@str.8 = private unnamed_addr constant [12 x i8] c"decryption\0A\00", align 1
@str.9 = private unnamed_addr constant [12 x i8] c"encryption\0A\00", align 1

; Function Attrs: nofree norecurse nosync nounwind optsize memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal i32 @des_main_ks(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1) #0 {
  %3 = load i8, ptr %1, align 1, !tbaa !7
  %4 = zext i8 %3 to i64
  %5 = shl nuw nsw i64 %4, 24
  %6 = getelementptr inbounds i8, ptr %1, i64 1
  %7 = load i8, ptr %6, align 1, !tbaa !7
  %8 = zext i8 %7 to i64
  %9 = shl nuw nsw i64 %8, 16
  %10 = getelementptr inbounds i8, ptr %1, i64 2
  %11 = load i8, ptr %10, align 1, !tbaa !7
  %12 = zext i8 %11 to i64
  %13 = shl nuw nsw i64 %12, 8
  %14 = getelementptr inbounds i8, ptr %1, i64 3
  %15 = load i8, ptr %14, align 1, !tbaa !7
  %16 = zext i8 %15 to i64
  %17 = or i64 %9, %5
  %18 = or i64 %17, %16
  %19 = or i64 %18, %13
  %20 = getelementptr inbounds i8, ptr %1, i64 4
  %21 = load i8, ptr %20, align 1, !tbaa !7
  %22 = zext i8 %21 to i64
  %23 = shl nuw nsw i64 %22, 24
  %24 = getelementptr inbounds i8, ptr %1, i64 5
  %25 = load i8, ptr %24, align 1, !tbaa !7
  %26 = zext i8 %25 to i64
  %27 = shl nuw nsw i64 %26, 16
  %28 = or i64 %27, %23
  %29 = getelementptr inbounds i8, ptr %1, i64 6
  %30 = load i8, ptr %29, align 1, !tbaa !7
  %31 = zext i8 %30 to i64
  %32 = shl nuw nsw i64 %31, 8
  %33 = or i64 %28, %32
  %34 = getelementptr inbounds i8, ptr %1, i64 7
  %35 = load i8, ptr %34, align 1, !tbaa !7
  %36 = zext i8 %35 to i64
  %37 = or i64 %33, %36
  %38 = lshr i64 %37, 4
  %39 = xor i64 %38, %19
  %40 = and i64 %39, 252645135
  %41 = xor i64 %40, %19
  %42 = shl nuw nsw i64 %40, 4
  %43 = xor i64 %42, %37
  %44 = and i64 %19, 269488144
  %45 = and i64 %43, 9223372036585287663
  %46 = or i64 %45, %44
  %47 = and i64 %41, 15
  %48 = getelementptr inbounds [16 x i64], ptr @LHs, i64 0, i64 %47
  %49 = load i64, ptr %48, align 8, !tbaa !10
  %50 = shl i64 %49, 3
  %51 = lshr i64 %41, 8
  %52 = and i64 %51, 15
  %53 = getelementptr inbounds [16 x i64], ptr @LHs, i64 0, i64 %52
  %54 = load i64, ptr %53, align 8, !tbaa !10
  %55 = shl i64 %54, 2
  %56 = or i64 %55, %50
  %57 = lshr i64 %41, 16
  %58 = and i64 %57, 15
  %59 = getelementptr inbounds [16 x i64], ptr @LHs, i64 0, i64 %58
  %60 = load i64, ptr %59, align 8, !tbaa !10
  %61 = shl i64 %60, 1
  %62 = or i64 %56, %61
  %63 = lshr i64 %41, 24
  %64 = and i64 %63, 15
  %65 = getelementptr inbounds [16 x i64], ptr @LHs, i64 0, i64 %64
  %66 = load i64, ptr %65, align 8, !tbaa !10
  %67 = or i64 %62, %66
  %68 = lshr i64 %41, 5
  %69 = and i64 %68, 15
  %70 = getelementptr inbounds [16 x i64], ptr @LHs, i64 0, i64 %69
  %71 = load i64, ptr %70, align 8, !tbaa !10
  %72 = shl i64 %71, 7
  %73 = or i64 %67, %72
  %74 = lshr i64 %41, 13
  %75 = and i64 %74, 15
  %76 = getelementptr inbounds [16 x i64], ptr @LHs, i64 0, i64 %75
  %77 = load i64, ptr %76, align 8, !tbaa !10
  %78 = shl i64 %77, 6
  %79 = or i64 %73, %78
  %80 = lshr i64 %41, 21
  %81 = and i64 %80, 15
  %82 = getelementptr inbounds [16 x i64], ptr @LHs, i64 0, i64 %81
  %83 = load i64, ptr %82, align 8, !tbaa !10
  %84 = shl i64 %83, 5
  %85 = or i64 %79, %84
  %86 = lshr i64 %4, 5
  %87 = getelementptr inbounds [16 x i64], ptr @LHs, i64 0, i64 %86
  %88 = load i64, ptr %87, align 8, !tbaa !10
  %89 = shl i64 %88, 4
  %90 = or i64 %85, %89
  %91 = lshr i64 %46, 1
  %92 = and i64 %91, 15
  %93 = getelementptr inbounds [16 x i64], ptr @RHs, i64 0, i64 %92
  %94 = load i64, ptr %93, align 8, !tbaa !10
  %95 = shl i64 %94, 3
  %96 = lshr i64 %46, 9
  %97 = and i64 %96, 15
  %98 = getelementptr inbounds [16 x i64], ptr @RHs, i64 0, i64 %97
  %99 = load i64, ptr %98, align 8, !tbaa !10
  %100 = shl i64 %99, 2
  %101 = or i64 %100, %95
  %102 = lshr i64 %46, 17
  %103 = and i64 %102, 15
  %104 = getelementptr inbounds [16 x i64], ptr @RHs, i64 0, i64 %103
  %105 = load i64, ptr %104, align 8, !tbaa !10
  %106 = shl i64 %105, 1
  %107 = or i64 %101, %106
  %108 = lshr i64 %46, 25
  %109 = and i64 %108, 15
  %110 = getelementptr inbounds [16 x i64], ptr @RHs, i64 0, i64 %109
  %111 = load i64, ptr %110, align 8, !tbaa !10
  %112 = or i64 %107, %111
  %113 = lshr i64 %46, 4
  %114 = and i64 %113, 15
  %115 = getelementptr inbounds [16 x i64], ptr @RHs, i64 0, i64 %114
  %116 = load i64, ptr %115, align 8, !tbaa !10
  %117 = shl i64 %116, 7
  %118 = or i64 %112, %117
  %119 = lshr i64 %46, 12
  %120 = and i64 %119, 15
  %121 = getelementptr inbounds [16 x i64], ptr @RHs, i64 0, i64 %120
  %122 = load i64, ptr %121, align 8, !tbaa !10
  %123 = shl i64 %122, 6
  %124 = or i64 %118, %123
  %125 = lshr i64 %46, 20
  %126 = and i64 %125, 15
  %127 = getelementptr inbounds [16 x i64], ptr @RHs, i64 0, i64 %126
  %128 = load i64, ptr %127, align 8, !tbaa !10
  %129 = shl i64 %128, 5
  %130 = or i64 %124, %129
  %131 = lshr i64 %46, 28
  %132 = getelementptr inbounds [16 x i64], ptr @RHs, i64 0, i64 %131
  %133 = load i64, ptr %132, align 8, !tbaa !10
  %134 = shl i64 %133, 4
  %135 = or i64 %130, %134
  %136 = and i64 %90, 268435455
  %137 = and i64 %135, 268435455
  br label %138

138:                                              ; preds = %144, %2
  %139 = phi ptr [ %0, %2 ], [ %280, %144 ]
  %140 = phi i64 [ %137, %2 ], [ %152, %144 ]
  %141 = phi i64 [ %136, %2 ], [ %154, %144 ]
  %142 = phi i32 [ 0, %2 ], [ %281, %144 ]
  switch i32 %142, label %143 [
    i32 15, label %144
    i32 8, label %144
    i32 1, label %144
    i32 0, label %144
  ]

143:                                              ; preds = %138
  br label %144

144:                                              ; preds = %143, %138, %138, %138, %138
  %145 = phi i64 [ 2, %143 ], [ 1, %138 ], [ 1, %138 ], [ 1, %138 ], [ 1, %138 ]
  %146 = phi i64 [ 26, %143 ], [ 27, %138 ], [ 27, %138 ], [ 27, %138 ], [ 27, %138 ]
  %147 = shl nuw nsw i64 %141, %145
  %148 = lshr i64 %141, %146
  %149 = shl nuw nsw i64 %140, %145
  %150 = lshr i64 %140, %146
  %151 = and i64 %149, 268435454
  %152 = or i64 %151, %150
  %153 = and i64 %147, 268435454
  %154 = or i64 %153, %148
  %155 = shl nuw nsw i64 %154, 4
  %156 = and i64 %155, 603979776
  %157 = shl nuw nsw i64 %148, 28
  %158 = and i64 %157, 268435456
  %159 = shl nuw nsw i64 %154, 14
  %160 = and i64 %159, 134217728
  %161 = shl nuw nsw i64 %154, 18
  %162 = and i64 %161, 34078720
  %163 = shl nuw nsw i64 %154, 6
  %164 = and i64 %163, 16777216
  %165 = shl nuw nsw i64 %154, 9
  %166 = and i64 %165, 2097152
  %167 = lshr exact i64 %147, 1
  %168 = and i64 %167, 1048576
  %169 = shl nuw nsw i64 %154, 10
  %170 = and i64 %169, 262144
  %171 = shl nuw nsw i64 %154, 2
  %172 = and i64 %171, 131072
  %173 = lshr i64 %147, 10
  %174 = and i64 %173, 65536
  %175 = lshr i64 %149, 13
  %176 = and i64 %175, 8192
  %177 = lshr i64 %149, 4
  %178 = and i64 %177, 4096
  %179 = shl nuw nsw i64 %152, 6
  %180 = and i64 %179, 2048
  %181 = lshr exact i64 %149, 1
  %182 = and i64 %181, 1024
  %183 = lshr i64 %152, 14
  %184 = and i64 %183, 512
  %185 = and i64 %149, 256
  %186 = lshr i64 %149, 5
  %187 = and i64 %186, 32
  %188 = lshr i64 %149, 10
  %189 = and i64 %188, 16
  %190 = lshr i64 %152, 3
  %191 = and i64 %190, 8
  %192 = lshr i64 %149, 18
  %193 = and i64 %192, 4
  %194 = lshr i64 %149, 26
  %195 = and i64 %194, 2
  %196 = lshr i64 %149, 24
  %197 = and i64 %196, 1
  %198 = or i64 %174, %168
  %199 = or i64 %198, %185
  %200 = or i64 %199, %158
  %201 = or i64 %200, %156
  %202 = or i64 %201, %160
  %203 = or i64 %202, %162
  %204 = or i64 %203, %164
  %205 = or i64 %204, %166
  %206 = or i64 %205, %170
  %207 = or i64 %206, %172
  %208 = or i64 %207, %176
  %209 = or i64 %208, %178
  %210 = or i64 %209, %182
  %211 = or i64 %210, %187
  %212 = or i64 %211, %189
  %213 = or i64 %212, %193
  %214 = or i64 %213, %195
  %215 = or i64 %214, %197
  %216 = or i64 %215, %180
  %217 = or i64 %216, %184
  %218 = or i64 %217, %191
  %219 = getelementptr inbounds i64, ptr %139, i64 1
  store i64 %218, ptr %139, align 8, !tbaa !10
  %220 = shl nuw nsw i64 %154, 15
  %221 = and i64 %220, 536870912
  %222 = shl nuw nsw i64 %154, 17
  %223 = and i64 %222, 268435456
  %224 = and i64 %169, 134217728
  %225 = shl nuw nsw i64 %154, 22
  %226 = and i64 %225, 67108864
  %227 = lshr i64 %147, 2
  %228 = and i64 %227, 33554432
  %229 = shl nuw nsw i64 %154, 1
  %230 = and i64 %229, 16777216
  %231 = shl nuw nsw i64 %154, 16
  %232 = and i64 %231, 2097152
  %233 = shl nuw nsw i64 %154, 11
  %234 = and i64 %233, 1048576
  %235 = shl nuw nsw i64 %154, 3
  %236 = and i64 %235, 524288
  %237 = lshr i64 %147, 6
  %238 = and i64 %237, 262144
  %239 = and i64 %220, 131072
  %240 = lshr i64 %147, 4
  %241 = and i64 %240, 65536
  %242 = lshr i64 %149, 2
  %243 = and i64 %242, 8192
  %244 = shl nuw nsw i64 %152, 8
  %245 = and i64 %244, 4096
  %246 = and i64 %183, 2056
  %247 = lshr i64 %149, 9
  %248 = and i64 %247, 1024
  %249 = and i64 %149, 512
  %250 = shl nuw nsw i64 %152, 7
  %251 = and i64 %250, 256
  %252 = lshr i64 %149, 7
  %253 = and i64 %252, 32
  %254 = and i64 %190, 17
  %255 = shl nuw nsw i64 %150, 2
  %256 = and i64 %255, 4
  %257 = lshr i64 %149, 21
  %258 = and i64 %257, 2
  %259 = or i64 %238, %228
  %260 = or i64 %259, %241
  %261 = or i64 %260, %249
  %262 = or i64 %261, %223
  %263 = or i64 %262, %221
  %264 = or i64 %263, %224
  %265 = or i64 %264, %226
  %266 = or i64 %265, %230
  %267 = or i64 %266, %232
  %268 = or i64 %267, %234
  %269 = or i64 %268, %236
  %270 = or i64 %269, %239
  %271 = or i64 %270, %243
  %272 = or i64 %271, %248
  %273 = or i64 %272, %253
  %274 = or i64 %273, %258
  %275 = or i64 %274, %245
  %276 = or i64 %275, %246
  %277 = or i64 %276, %251
  %278 = or i64 %277, %254
  %279 = or i64 %278, %256
  %280 = getelementptr inbounds i64, ptr %139, i64 2
  store i64 %279, ptr %219, align 8, !tbaa !10
  %281 = add nuw nsw i32 %142, 1
  %282 = icmp eq i32 %281, 16
  br i1 %282, label %283, label %138, !llvm.loop !12

283:                                              ; preds = %144
  ret i32 0
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal i32 @des_set_key(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = tail call i32 @des_main_ks(ptr noundef %0, ptr noundef %1) #7
  br label %4

4:                                                ; preds = %4, %2
  %5 = phi i64 [ 0, %2 ], [ %15, %4 ]
  %6 = sub nuw nsw i64 30, %5
  %7 = getelementptr inbounds [32 x i64], ptr %0, i64 0, i64 %6
  %8 = load i64, ptr %7, align 8, !tbaa !10
  %9 = getelementptr inbounds %struct.des_context, ptr %0, i64 0, i32 1, i64 %5
  store i64 %8, ptr %9, align 8, !tbaa !10
  %10 = sub nuw nsw i64 31, %5
  %11 = getelementptr inbounds [32 x i64], ptr %0, i64 0, i64 %10
  %12 = load i64, ptr %11, align 8, !tbaa !10
  %13 = or i64 %5, 1
  %14 = getelementptr inbounds %struct.des_context, ptr %0, i64 0, i32 1, i64 %13
  store i64 %12, ptr %14, align 8, !tbaa !10
  %15 = add nuw nsw i64 %5, 2
  %16 = icmp ult i64 %5, 30
  br i1 %16, label %4, label %17, !llvm.loop !14

17:                                               ; preds = %4
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @des_crypt(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #1 {
  %4 = load i8, ptr %1, align 1, !tbaa !7
  %5 = zext i8 %4 to i64
  %6 = shl nuw nsw i64 %5, 24
  %7 = getelementptr inbounds i8, ptr %1, i64 1
  %8 = load i8, ptr %7, align 1, !tbaa !7
  %9 = zext i8 %8 to i64
  %10 = shl nuw nsw i64 %9, 16
  %11 = or i64 %10, %6
  %12 = getelementptr inbounds i8, ptr %1, i64 2
  %13 = load i8, ptr %12, align 1, !tbaa !7
  %14 = zext i8 %13 to i64
  %15 = shl nuw nsw i64 %14, 8
  %16 = or i64 %11, %15
  %17 = getelementptr inbounds i8, ptr %1, i64 3
  %18 = load i8, ptr %17, align 1, !tbaa !7
  %19 = zext i8 %18 to i64
  %20 = or i64 %16, %19
  %21 = getelementptr inbounds i8, ptr %1, i64 4
  %22 = load i8, ptr %21, align 1, !tbaa !7
  %23 = zext i8 %22 to i64
  %24 = shl nuw nsw i64 %23, 24
  %25 = getelementptr inbounds i8, ptr %1, i64 5
  %26 = load i8, ptr %25, align 1, !tbaa !7
  %27 = zext i8 %26 to i64
  %28 = shl nuw nsw i64 %27, 16
  %29 = or i64 %28, %24
  %30 = getelementptr inbounds i8, ptr %1, i64 6
  %31 = load i8, ptr %30, align 1, !tbaa !7
  %32 = zext i8 %31 to i64
  %33 = shl nuw nsw i64 %32, 8
  %34 = or i64 %29, %33
  %35 = getelementptr inbounds i8, ptr %1, i64 7
  %36 = load i8, ptr %35, align 1, !tbaa !7
  %37 = zext i8 %36 to i64
  %38 = or i64 %34, %37
  %39 = lshr i64 %20, 4
  %40 = xor i64 %38, %39
  %41 = and i64 %40, 252645135
  %42 = xor i64 %41, %38
  %43 = shl nuw nsw i64 %41, 4
  %44 = xor i64 %43, %20
  %45 = lshr i64 %44, 16
  %46 = xor i64 %45, %42
  %47 = and i64 %46, 65535
  %48 = xor i64 %47, %42
  %49 = shl nuw nsw i64 %47, 16
  %50 = xor i64 %49, %44
  %51 = lshr i64 %48, 2
  %52 = xor i64 %51, %50
  %53 = and i64 %52, 858993459
  %54 = xor i64 %53, %50
  %55 = shl nuw nsw i64 %53, 2
  %56 = xor i64 %55, %48
  %57 = lshr i64 %56, 8
  %58 = xor i64 %57, %54
  %59 = and i64 %58, 16711935
  %60 = xor i64 %59, %54
  %61 = shl nuw nsw i64 %59, 8
  %62 = xor i64 %61, %56
  %63 = shl nuw nsw i64 %62, 1
  %64 = lshr i64 %62, 31
  %65 = or i64 %63, %64
  %66 = and i64 %65, 4294967295
  %67 = xor i64 %65, %60
  %68 = and i64 %67, 2863311530
  %69 = xor i64 %68, %66
  %70 = xor i64 %68, %60
  %71 = shl nuw nsw i64 %70, 1
  %72 = lshr i64 %70, 31
  %73 = or i64 %71, %72
  %74 = and i64 %73, 4294967295
  %75 = getelementptr inbounds i64, ptr %0, i64 1
  %76 = load i64, ptr %0, align 8, !tbaa !10
  %77 = xor i64 %69, %76
  %78 = and i64 %77, 63
  %79 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !10
  %81 = lshr i64 %77, 8
  %82 = and i64 %81, 63
  %83 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !10
  %85 = xor i64 %84, %80
  %86 = lshr i64 %77, 16
  %87 = and i64 %86, 63
  %88 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %87
  %89 = load i64, ptr %88, align 8, !tbaa !10
  %90 = xor i64 %85, %89
  %91 = lshr i64 %77, 24
  %92 = and i64 %91, 63
  %93 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %92
  %94 = load i64, ptr %93, align 8, !tbaa !10
  %95 = xor i64 %90, %94
  %96 = getelementptr inbounds i64, ptr %0, i64 2
  %97 = load i64, ptr %75, align 8, !tbaa !10
  %98 = shl nuw nsw i64 %69, 28
  %99 = lshr i64 %69, 4
  %100 = or i64 %98, %99
  %101 = xor i64 %100, %97
  %102 = and i64 %101, 63
  %103 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %102
  %104 = load i64, ptr %103, align 8, !tbaa !10
  %105 = lshr i64 %101, 8
  %106 = and i64 %105, 63
  %107 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %106
  %108 = load i64, ptr %107, align 8, !tbaa !10
  %109 = lshr i64 %101, 16
  %110 = and i64 %109, 63
  %111 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %110
  %112 = load i64, ptr %111, align 8, !tbaa !10
  %113 = lshr i64 %101, 24
  %114 = and i64 %113, 63
  %115 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %114
  %116 = load i64, ptr %115, align 8, !tbaa !10
  %117 = xor i64 %95, %104
  %118 = xor i64 %117, %108
  %119 = xor i64 %118, %112
  %120 = xor i64 %119, %116
  %121 = xor i64 %120, %74
  %122 = getelementptr inbounds i64, ptr %0, i64 3
  %123 = load i64, ptr %96, align 8, !tbaa !10
  %124 = xor i64 %121, %123
  %125 = and i64 %124, 63
  %126 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %125
  %127 = load i64, ptr %126, align 8, !tbaa !10
  %128 = lshr i64 %124, 8
  %129 = and i64 %128, 63
  %130 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %129
  %131 = load i64, ptr %130, align 8, !tbaa !10
  %132 = lshr i64 %124, 16
  %133 = and i64 %132, 63
  %134 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %133
  %135 = load i64, ptr %134, align 8, !tbaa !10
  %136 = lshr i64 %124, 24
  %137 = and i64 %136, 63
  %138 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %137
  %139 = load i64, ptr %138, align 8, !tbaa !10
  %140 = getelementptr inbounds i64, ptr %0, i64 4
  %141 = load i64, ptr %122, align 8, !tbaa !10
  %142 = shl i64 %121, 28
  %143 = lshr i64 %121, 4
  %144 = or i64 %142, %143
  %145 = xor i64 %144, %141
  %146 = and i64 %145, 63
  %147 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %146
  %148 = load i64, ptr %147, align 8, !tbaa !10
  %149 = lshr i64 %145, 8
  %150 = and i64 %149, 63
  %151 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %150
  %152 = load i64, ptr %151, align 8, !tbaa !10
  %153 = lshr i64 %145, 16
  %154 = and i64 %153, 63
  %155 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %154
  %156 = load i64, ptr %155, align 8, !tbaa !10
  %157 = lshr i64 %145, 24
  %158 = and i64 %157, 63
  %159 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %158
  %160 = load i64, ptr %159, align 8, !tbaa !10
  %161 = xor i64 %131, %127
  %162 = xor i64 %161, %135
  %163 = xor i64 %162, %139
  %164 = xor i64 %163, %148
  %165 = xor i64 %164, %152
  %166 = xor i64 %165, %156
  %167 = xor i64 %166, %160
  %168 = xor i64 %167, %69
  %169 = getelementptr inbounds i64, ptr %0, i64 5
  %170 = load i64, ptr %140, align 8, !tbaa !10
  %171 = xor i64 %168, %170
  %172 = and i64 %171, 63
  %173 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %172
  %174 = load i64, ptr %173, align 8, !tbaa !10
  %175 = lshr i64 %171, 8
  %176 = and i64 %175, 63
  %177 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %176
  %178 = load i64, ptr %177, align 8, !tbaa !10
  %179 = lshr i64 %171, 16
  %180 = and i64 %179, 63
  %181 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %180
  %182 = load i64, ptr %181, align 8, !tbaa !10
  %183 = lshr i64 %171, 24
  %184 = and i64 %183, 63
  %185 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %184
  %186 = load i64, ptr %185, align 8, !tbaa !10
  %187 = getelementptr inbounds i64, ptr %0, i64 6
  %188 = load i64, ptr %169, align 8, !tbaa !10
  %189 = shl i64 %168, 28
  %190 = lshr i64 %168, 4
  %191 = or i64 %189, %190
  %192 = xor i64 %191, %188
  %193 = and i64 %192, 63
  %194 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %193
  %195 = load i64, ptr %194, align 8, !tbaa !10
  %196 = lshr i64 %192, 8
  %197 = and i64 %196, 63
  %198 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %197
  %199 = load i64, ptr %198, align 8, !tbaa !10
  %200 = lshr i64 %192, 16
  %201 = and i64 %200, 63
  %202 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %201
  %203 = load i64, ptr %202, align 8, !tbaa !10
  %204 = lshr i64 %192, 24
  %205 = and i64 %204, 63
  %206 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %205
  %207 = load i64, ptr %206, align 8, !tbaa !10
  %208 = xor i64 %178, %174
  %209 = xor i64 %208, %182
  %210 = xor i64 %209, %186
  %211 = xor i64 %210, %195
  %212 = xor i64 %211, %199
  %213 = xor i64 %212, %203
  %214 = xor i64 %213, %207
  %215 = xor i64 %214, %121
  %216 = getelementptr inbounds i64, ptr %0, i64 7
  %217 = load i64, ptr %187, align 8, !tbaa !10
  %218 = xor i64 %215, %217
  %219 = and i64 %218, 63
  %220 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %219
  %221 = load i64, ptr %220, align 8, !tbaa !10
  %222 = lshr i64 %218, 8
  %223 = and i64 %222, 63
  %224 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %223
  %225 = load i64, ptr %224, align 8, !tbaa !10
  %226 = lshr i64 %218, 16
  %227 = and i64 %226, 63
  %228 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %227
  %229 = load i64, ptr %228, align 8, !tbaa !10
  %230 = lshr i64 %218, 24
  %231 = and i64 %230, 63
  %232 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %231
  %233 = load i64, ptr %232, align 8, !tbaa !10
  %234 = getelementptr inbounds i64, ptr %0, i64 8
  %235 = load i64, ptr %216, align 8, !tbaa !10
  %236 = shl i64 %215, 28
  %237 = lshr i64 %215, 4
  %238 = or i64 %236, %237
  %239 = xor i64 %235, %238
  %240 = and i64 %239, 63
  %241 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %240
  %242 = load i64, ptr %241, align 8, !tbaa !10
  %243 = lshr i64 %239, 8
  %244 = and i64 %243, 63
  %245 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %244
  %246 = load i64, ptr %245, align 8, !tbaa !10
  %247 = lshr i64 %239, 16
  %248 = and i64 %247, 63
  %249 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %248
  %250 = load i64, ptr %249, align 8, !tbaa !10
  %251 = lshr i64 %239, 24
  %252 = and i64 %251, 63
  %253 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %252
  %254 = load i64, ptr %253, align 8, !tbaa !10
  %255 = xor i64 %221, %225
  %256 = xor i64 %255, %229
  %257 = xor i64 %256, %233
  %258 = xor i64 %257, %242
  %259 = xor i64 %258, %246
  %260 = xor i64 %259, %250
  %261 = xor i64 %260, %254
  %262 = xor i64 %261, %168
  %263 = getelementptr inbounds i64, ptr %0, i64 9
  %264 = load i64, ptr %234, align 8, !tbaa !10
  %265 = xor i64 %262, %264
  %266 = and i64 %265, 63
  %267 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %266
  %268 = load i64, ptr %267, align 8, !tbaa !10
  %269 = lshr i64 %265, 8
  %270 = and i64 %269, 63
  %271 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %270
  %272 = load i64, ptr %271, align 8, !tbaa !10
  %273 = lshr i64 %265, 16
  %274 = and i64 %273, 63
  %275 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %274
  %276 = load i64, ptr %275, align 8, !tbaa !10
  %277 = lshr i64 %265, 24
  %278 = and i64 %277, 63
  %279 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %278
  %280 = load i64, ptr %279, align 8, !tbaa !10
  %281 = getelementptr inbounds i64, ptr %0, i64 10
  %282 = load i64, ptr %263, align 8, !tbaa !10
  %283 = shl i64 %262, 28
  %284 = lshr i64 %262, 4
  %285 = or i64 %283, %284
  %286 = xor i64 %282, %285
  %287 = and i64 %286, 63
  %288 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %287
  %289 = load i64, ptr %288, align 8, !tbaa !10
  %290 = lshr i64 %286, 8
  %291 = and i64 %290, 63
  %292 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %291
  %293 = load i64, ptr %292, align 8, !tbaa !10
  %294 = lshr i64 %286, 16
  %295 = and i64 %294, 63
  %296 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %295
  %297 = load i64, ptr %296, align 8, !tbaa !10
  %298 = lshr i64 %286, 24
  %299 = and i64 %298, 63
  %300 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %299
  %301 = load i64, ptr %300, align 8, !tbaa !10
  %302 = xor i64 %268, %272
  %303 = xor i64 %302, %276
  %304 = xor i64 %303, %280
  %305 = xor i64 %304, %289
  %306 = xor i64 %305, %293
  %307 = xor i64 %306, %297
  %308 = xor i64 %307, %301
  %309 = xor i64 %308, %215
  %310 = getelementptr inbounds i64, ptr %0, i64 11
  %311 = load i64, ptr %281, align 8, !tbaa !10
  %312 = xor i64 %309, %311
  %313 = and i64 %312, 63
  %314 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %313
  %315 = load i64, ptr %314, align 8, !tbaa !10
  %316 = lshr i64 %312, 8
  %317 = and i64 %316, 63
  %318 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %317
  %319 = load i64, ptr %318, align 8, !tbaa !10
  %320 = lshr i64 %312, 16
  %321 = and i64 %320, 63
  %322 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %321
  %323 = load i64, ptr %322, align 8, !tbaa !10
  %324 = lshr i64 %312, 24
  %325 = and i64 %324, 63
  %326 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %325
  %327 = load i64, ptr %326, align 8, !tbaa !10
  %328 = getelementptr inbounds i64, ptr %0, i64 12
  %329 = load i64, ptr %310, align 8, !tbaa !10
  %330 = shl i64 %309, 28
  %331 = lshr i64 %309, 4
  %332 = or i64 %330, %331
  %333 = xor i64 %329, %332
  %334 = and i64 %333, 63
  %335 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %334
  %336 = load i64, ptr %335, align 8, !tbaa !10
  %337 = lshr i64 %333, 8
  %338 = and i64 %337, 63
  %339 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %338
  %340 = load i64, ptr %339, align 8, !tbaa !10
  %341 = lshr i64 %333, 16
  %342 = and i64 %341, 63
  %343 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %342
  %344 = load i64, ptr %343, align 8, !tbaa !10
  %345 = lshr i64 %333, 24
  %346 = and i64 %345, 63
  %347 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %346
  %348 = load i64, ptr %347, align 8, !tbaa !10
  %349 = xor i64 %315, %319
  %350 = xor i64 %349, %323
  %351 = xor i64 %350, %327
  %352 = xor i64 %351, %336
  %353 = xor i64 %352, %340
  %354 = xor i64 %353, %344
  %355 = xor i64 %354, %348
  %356 = xor i64 %355, %262
  %357 = getelementptr inbounds i64, ptr %0, i64 13
  %358 = load i64, ptr %328, align 8, !tbaa !10
  %359 = xor i64 %356, %358
  %360 = and i64 %359, 63
  %361 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %360
  %362 = load i64, ptr %361, align 8, !tbaa !10
  %363 = lshr i64 %359, 8
  %364 = and i64 %363, 63
  %365 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %364
  %366 = load i64, ptr %365, align 8, !tbaa !10
  %367 = lshr i64 %359, 16
  %368 = and i64 %367, 63
  %369 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %368
  %370 = load i64, ptr %369, align 8, !tbaa !10
  %371 = lshr i64 %359, 24
  %372 = and i64 %371, 63
  %373 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %372
  %374 = load i64, ptr %373, align 8, !tbaa !10
  %375 = getelementptr inbounds i64, ptr %0, i64 14
  %376 = load i64, ptr %357, align 8, !tbaa !10
  %377 = shl i64 %356, 28
  %378 = lshr i64 %356, 4
  %379 = or i64 %377, %378
  %380 = xor i64 %376, %379
  %381 = and i64 %380, 63
  %382 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %381
  %383 = load i64, ptr %382, align 8, !tbaa !10
  %384 = lshr i64 %380, 8
  %385 = and i64 %384, 63
  %386 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %385
  %387 = load i64, ptr %386, align 8, !tbaa !10
  %388 = lshr i64 %380, 16
  %389 = and i64 %388, 63
  %390 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %389
  %391 = load i64, ptr %390, align 8, !tbaa !10
  %392 = lshr i64 %380, 24
  %393 = and i64 %392, 63
  %394 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %393
  %395 = load i64, ptr %394, align 8, !tbaa !10
  %396 = xor i64 %362, %366
  %397 = xor i64 %396, %370
  %398 = xor i64 %397, %374
  %399 = xor i64 %398, %383
  %400 = xor i64 %399, %387
  %401 = xor i64 %400, %391
  %402 = xor i64 %401, %395
  %403 = xor i64 %402, %309
  %404 = getelementptr inbounds i64, ptr %0, i64 15
  %405 = load i64, ptr %375, align 8, !tbaa !10
  %406 = xor i64 %403, %405
  %407 = and i64 %406, 63
  %408 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %407
  %409 = load i64, ptr %408, align 8, !tbaa !10
  %410 = lshr i64 %406, 8
  %411 = and i64 %410, 63
  %412 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %411
  %413 = load i64, ptr %412, align 8, !tbaa !10
  %414 = lshr i64 %406, 16
  %415 = and i64 %414, 63
  %416 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %415
  %417 = load i64, ptr %416, align 8, !tbaa !10
  %418 = lshr i64 %406, 24
  %419 = and i64 %418, 63
  %420 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %419
  %421 = load i64, ptr %420, align 8, !tbaa !10
  %422 = getelementptr inbounds i64, ptr %0, i64 16
  %423 = load i64, ptr %404, align 8, !tbaa !10
  %424 = shl i64 %403, 28
  %425 = lshr i64 %403, 4
  %426 = or i64 %424, %425
  %427 = xor i64 %423, %426
  %428 = and i64 %427, 63
  %429 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %428
  %430 = load i64, ptr %429, align 8, !tbaa !10
  %431 = lshr i64 %427, 8
  %432 = and i64 %431, 63
  %433 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %432
  %434 = load i64, ptr %433, align 8, !tbaa !10
  %435 = lshr i64 %427, 16
  %436 = and i64 %435, 63
  %437 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %436
  %438 = load i64, ptr %437, align 8, !tbaa !10
  %439 = lshr i64 %427, 24
  %440 = and i64 %439, 63
  %441 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %440
  %442 = load i64, ptr %441, align 8, !tbaa !10
  %443 = xor i64 %409, %413
  %444 = xor i64 %443, %417
  %445 = xor i64 %444, %421
  %446 = xor i64 %445, %430
  %447 = xor i64 %446, %434
  %448 = xor i64 %447, %438
  %449 = xor i64 %448, %442
  %450 = xor i64 %449, %356
  %451 = getelementptr inbounds i64, ptr %0, i64 17
  %452 = load i64, ptr %422, align 8, !tbaa !10
  %453 = xor i64 %450, %452
  %454 = and i64 %453, 63
  %455 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %454
  %456 = load i64, ptr %455, align 8, !tbaa !10
  %457 = lshr i64 %453, 8
  %458 = and i64 %457, 63
  %459 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %458
  %460 = load i64, ptr %459, align 8, !tbaa !10
  %461 = lshr i64 %453, 16
  %462 = and i64 %461, 63
  %463 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %462
  %464 = load i64, ptr %463, align 8, !tbaa !10
  %465 = lshr i64 %453, 24
  %466 = and i64 %465, 63
  %467 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %466
  %468 = load i64, ptr %467, align 8, !tbaa !10
  %469 = getelementptr inbounds i64, ptr %0, i64 18
  %470 = load i64, ptr %451, align 8, !tbaa !10
  %471 = shl i64 %450, 28
  %472 = lshr i64 %450, 4
  %473 = or i64 %471, %472
  %474 = xor i64 %470, %473
  %475 = and i64 %474, 63
  %476 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %475
  %477 = load i64, ptr %476, align 8, !tbaa !10
  %478 = lshr i64 %474, 8
  %479 = and i64 %478, 63
  %480 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %479
  %481 = load i64, ptr %480, align 8, !tbaa !10
  %482 = lshr i64 %474, 16
  %483 = and i64 %482, 63
  %484 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %483
  %485 = load i64, ptr %484, align 8, !tbaa !10
  %486 = lshr i64 %474, 24
  %487 = and i64 %486, 63
  %488 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %487
  %489 = load i64, ptr %488, align 8, !tbaa !10
  %490 = xor i64 %456, %460
  %491 = xor i64 %490, %464
  %492 = xor i64 %491, %468
  %493 = xor i64 %492, %477
  %494 = xor i64 %493, %481
  %495 = xor i64 %494, %485
  %496 = xor i64 %495, %489
  %497 = xor i64 %496, %403
  %498 = getelementptr inbounds i64, ptr %0, i64 19
  %499 = load i64, ptr %469, align 8, !tbaa !10
  %500 = xor i64 %497, %499
  %501 = and i64 %500, 63
  %502 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %501
  %503 = load i64, ptr %502, align 8, !tbaa !10
  %504 = lshr i64 %500, 8
  %505 = and i64 %504, 63
  %506 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %505
  %507 = load i64, ptr %506, align 8, !tbaa !10
  %508 = lshr i64 %500, 16
  %509 = and i64 %508, 63
  %510 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %509
  %511 = load i64, ptr %510, align 8, !tbaa !10
  %512 = lshr i64 %500, 24
  %513 = and i64 %512, 63
  %514 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %513
  %515 = load i64, ptr %514, align 8, !tbaa !10
  %516 = getelementptr inbounds i64, ptr %0, i64 20
  %517 = load i64, ptr %498, align 8, !tbaa !10
  %518 = shl i64 %497, 28
  %519 = lshr i64 %497, 4
  %520 = or i64 %518, %519
  %521 = xor i64 %517, %520
  %522 = and i64 %521, 63
  %523 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %522
  %524 = load i64, ptr %523, align 8, !tbaa !10
  %525 = lshr i64 %521, 8
  %526 = and i64 %525, 63
  %527 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %526
  %528 = load i64, ptr %527, align 8, !tbaa !10
  %529 = lshr i64 %521, 16
  %530 = and i64 %529, 63
  %531 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %530
  %532 = load i64, ptr %531, align 8, !tbaa !10
  %533 = lshr i64 %521, 24
  %534 = and i64 %533, 63
  %535 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %534
  %536 = load i64, ptr %535, align 8, !tbaa !10
  %537 = xor i64 %503, %507
  %538 = xor i64 %537, %511
  %539 = xor i64 %538, %515
  %540 = xor i64 %539, %524
  %541 = xor i64 %540, %528
  %542 = xor i64 %541, %532
  %543 = xor i64 %542, %536
  %544 = xor i64 %543, %450
  %545 = getelementptr inbounds i64, ptr %0, i64 21
  %546 = load i64, ptr %516, align 8, !tbaa !10
  %547 = xor i64 %544, %546
  %548 = and i64 %547, 63
  %549 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %548
  %550 = load i64, ptr %549, align 8, !tbaa !10
  %551 = lshr i64 %547, 8
  %552 = and i64 %551, 63
  %553 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %552
  %554 = load i64, ptr %553, align 8, !tbaa !10
  %555 = lshr i64 %547, 16
  %556 = and i64 %555, 63
  %557 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %556
  %558 = load i64, ptr %557, align 8, !tbaa !10
  %559 = lshr i64 %547, 24
  %560 = and i64 %559, 63
  %561 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %560
  %562 = load i64, ptr %561, align 8, !tbaa !10
  %563 = getelementptr inbounds i64, ptr %0, i64 22
  %564 = load i64, ptr %545, align 8, !tbaa !10
  %565 = shl i64 %544, 28
  %566 = lshr i64 %544, 4
  %567 = or i64 %565, %566
  %568 = xor i64 %564, %567
  %569 = and i64 %568, 63
  %570 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %569
  %571 = load i64, ptr %570, align 8, !tbaa !10
  %572 = lshr i64 %568, 8
  %573 = and i64 %572, 63
  %574 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %573
  %575 = load i64, ptr %574, align 8, !tbaa !10
  %576 = lshr i64 %568, 16
  %577 = and i64 %576, 63
  %578 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %577
  %579 = load i64, ptr %578, align 8, !tbaa !10
  %580 = lshr i64 %568, 24
  %581 = and i64 %580, 63
  %582 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %581
  %583 = load i64, ptr %582, align 8, !tbaa !10
  %584 = xor i64 %550, %554
  %585 = xor i64 %584, %558
  %586 = xor i64 %585, %562
  %587 = xor i64 %586, %571
  %588 = xor i64 %587, %575
  %589 = xor i64 %588, %579
  %590 = xor i64 %589, %583
  %591 = xor i64 %590, %497
  %592 = getelementptr inbounds i64, ptr %0, i64 23
  %593 = load i64, ptr %563, align 8, !tbaa !10
  %594 = xor i64 %591, %593
  %595 = and i64 %594, 63
  %596 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %595
  %597 = load i64, ptr %596, align 8, !tbaa !10
  %598 = lshr i64 %594, 8
  %599 = and i64 %598, 63
  %600 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %599
  %601 = load i64, ptr %600, align 8, !tbaa !10
  %602 = lshr i64 %594, 16
  %603 = and i64 %602, 63
  %604 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %603
  %605 = load i64, ptr %604, align 8, !tbaa !10
  %606 = lshr i64 %594, 24
  %607 = and i64 %606, 63
  %608 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %607
  %609 = load i64, ptr %608, align 8, !tbaa !10
  %610 = getelementptr inbounds i64, ptr %0, i64 24
  %611 = load i64, ptr %592, align 8, !tbaa !10
  %612 = shl i64 %591, 28
  %613 = lshr i64 %591, 4
  %614 = or i64 %612, %613
  %615 = xor i64 %611, %614
  %616 = and i64 %615, 63
  %617 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %616
  %618 = load i64, ptr %617, align 8, !tbaa !10
  %619 = lshr i64 %615, 8
  %620 = and i64 %619, 63
  %621 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %620
  %622 = load i64, ptr %621, align 8, !tbaa !10
  %623 = lshr i64 %615, 16
  %624 = and i64 %623, 63
  %625 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %624
  %626 = load i64, ptr %625, align 8, !tbaa !10
  %627 = lshr i64 %615, 24
  %628 = and i64 %627, 63
  %629 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %628
  %630 = load i64, ptr %629, align 8, !tbaa !10
  %631 = xor i64 %597, %601
  %632 = xor i64 %631, %605
  %633 = xor i64 %632, %609
  %634 = xor i64 %633, %618
  %635 = xor i64 %634, %622
  %636 = xor i64 %635, %626
  %637 = xor i64 %636, %630
  %638 = xor i64 %637, %544
  %639 = getelementptr inbounds i64, ptr %0, i64 25
  %640 = load i64, ptr %610, align 8, !tbaa !10
  %641 = xor i64 %638, %640
  %642 = and i64 %641, 63
  %643 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %642
  %644 = load i64, ptr %643, align 8, !tbaa !10
  %645 = lshr i64 %641, 8
  %646 = and i64 %645, 63
  %647 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %646
  %648 = load i64, ptr %647, align 8, !tbaa !10
  %649 = lshr i64 %641, 16
  %650 = and i64 %649, 63
  %651 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %650
  %652 = load i64, ptr %651, align 8, !tbaa !10
  %653 = lshr i64 %641, 24
  %654 = and i64 %653, 63
  %655 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %654
  %656 = load i64, ptr %655, align 8, !tbaa !10
  %657 = getelementptr inbounds i64, ptr %0, i64 26
  %658 = load i64, ptr %639, align 8, !tbaa !10
  %659 = shl i64 %638, 28
  %660 = lshr i64 %638, 4
  %661 = or i64 %659, %660
  %662 = xor i64 %658, %661
  %663 = and i64 %662, 63
  %664 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %663
  %665 = load i64, ptr %664, align 8, !tbaa !10
  %666 = lshr i64 %662, 8
  %667 = and i64 %666, 63
  %668 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %667
  %669 = load i64, ptr %668, align 8, !tbaa !10
  %670 = lshr i64 %662, 16
  %671 = and i64 %670, 63
  %672 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %671
  %673 = load i64, ptr %672, align 8, !tbaa !10
  %674 = lshr i64 %662, 24
  %675 = and i64 %674, 63
  %676 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %675
  %677 = load i64, ptr %676, align 8, !tbaa !10
  %678 = xor i64 %644, %648
  %679 = xor i64 %678, %652
  %680 = xor i64 %679, %656
  %681 = xor i64 %680, %665
  %682 = xor i64 %681, %669
  %683 = xor i64 %682, %673
  %684 = xor i64 %683, %677
  %685 = xor i64 %684, %591
  %686 = getelementptr inbounds i64, ptr %0, i64 27
  %687 = load i64, ptr %657, align 8, !tbaa !10
  %688 = xor i64 %685, %687
  %689 = and i64 %688, 63
  %690 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %689
  %691 = load i64, ptr %690, align 8, !tbaa !10
  %692 = lshr i64 %688, 8
  %693 = and i64 %692, 63
  %694 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %693
  %695 = load i64, ptr %694, align 8, !tbaa !10
  %696 = lshr i64 %688, 16
  %697 = and i64 %696, 63
  %698 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %697
  %699 = load i64, ptr %698, align 8, !tbaa !10
  %700 = lshr i64 %688, 24
  %701 = and i64 %700, 63
  %702 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %701
  %703 = load i64, ptr %702, align 8, !tbaa !10
  %704 = getelementptr inbounds i64, ptr %0, i64 28
  %705 = load i64, ptr %686, align 8, !tbaa !10
  %706 = shl i64 %685, 28
  %707 = lshr i64 %685, 4
  %708 = or i64 %706, %707
  %709 = xor i64 %705, %708
  %710 = and i64 %709, 63
  %711 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %710
  %712 = load i64, ptr %711, align 8, !tbaa !10
  %713 = lshr i64 %709, 8
  %714 = and i64 %713, 63
  %715 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %714
  %716 = load i64, ptr %715, align 8, !tbaa !10
  %717 = lshr i64 %709, 16
  %718 = and i64 %717, 63
  %719 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %718
  %720 = load i64, ptr %719, align 8, !tbaa !10
  %721 = lshr i64 %709, 24
  %722 = and i64 %721, 63
  %723 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %722
  %724 = load i64, ptr %723, align 8, !tbaa !10
  %725 = xor i64 %691, %695
  %726 = xor i64 %725, %699
  %727 = xor i64 %726, %703
  %728 = xor i64 %727, %712
  %729 = xor i64 %728, %716
  %730 = xor i64 %729, %720
  %731 = xor i64 %730, %724
  %732 = xor i64 %731, %638
  %733 = getelementptr inbounds i64, ptr %0, i64 29
  %734 = load i64, ptr %704, align 8, !tbaa !10
  %735 = xor i64 %732, %734
  %736 = and i64 %735, 63
  %737 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %736
  %738 = load i64, ptr %737, align 8, !tbaa !10
  %739 = lshr i64 %735, 8
  %740 = and i64 %739, 63
  %741 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %740
  %742 = load i64, ptr %741, align 8, !tbaa !10
  %743 = lshr i64 %735, 16
  %744 = and i64 %743, 63
  %745 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %744
  %746 = load i64, ptr %745, align 8, !tbaa !10
  %747 = lshr i64 %735, 24
  %748 = and i64 %747, 63
  %749 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %748
  %750 = load i64, ptr %749, align 8, !tbaa !10
  %751 = getelementptr inbounds i64, ptr %0, i64 30
  %752 = load i64, ptr %733, align 8, !tbaa !10
  %753 = shl i64 %732, 28
  %754 = lshr i64 %732, 4
  %755 = or i64 %753, %754
  %756 = xor i64 %752, %755
  %757 = and i64 %756, 63
  %758 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %757
  %759 = load i64, ptr %758, align 8, !tbaa !10
  %760 = lshr i64 %756, 8
  %761 = and i64 %760, 63
  %762 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %761
  %763 = load i64, ptr %762, align 8, !tbaa !10
  %764 = lshr i64 %756, 16
  %765 = and i64 %764, 63
  %766 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %765
  %767 = load i64, ptr %766, align 8, !tbaa !10
  %768 = lshr i64 %756, 24
  %769 = and i64 %768, 63
  %770 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %769
  %771 = load i64, ptr %770, align 8, !tbaa !10
  %772 = xor i64 %738, %742
  %773 = xor i64 %772, %746
  %774 = xor i64 %773, %750
  %775 = xor i64 %774, %759
  %776 = xor i64 %775, %763
  %777 = xor i64 %776, %767
  %778 = xor i64 %777, %771
  %779 = xor i64 %778, %685
  %780 = getelementptr inbounds i64, ptr %0, i64 31
  %781 = load i64, ptr %751, align 8, !tbaa !10
  %782 = xor i64 %779, %781
  %783 = and i64 %782, 63
  %784 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %783
  %785 = load i64, ptr %784, align 8, !tbaa !10
  %786 = lshr i64 %782, 8
  %787 = and i64 %786, 63
  %788 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %787
  %789 = load i64, ptr %788, align 8, !tbaa !10
  %790 = lshr i64 %782, 16
  %791 = and i64 %790, 63
  %792 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %791
  %793 = load i64, ptr %792, align 8, !tbaa !10
  %794 = lshr i64 %782, 24
  %795 = and i64 %794, 63
  %796 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %795
  %797 = load i64, ptr %796, align 8, !tbaa !10
  %798 = load i64, ptr %780, align 8, !tbaa !10
  %799 = shl i64 %779, 28
  %800 = lshr i64 %779, 4
  %801 = or i64 %799, %800
  %802 = xor i64 %798, %801
  %803 = and i64 %802, 63
  %804 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %803
  %805 = load i64, ptr %804, align 8, !tbaa !10
  %806 = lshr i64 %802, 8
  %807 = and i64 %806, 63
  %808 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %807
  %809 = load i64, ptr %808, align 8, !tbaa !10
  %810 = lshr i64 %802, 16
  %811 = and i64 %810, 63
  %812 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %811
  %813 = load i64, ptr %812, align 8, !tbaa !10
  %814 = lshr i64 %802, 24
  %815 = and i64 %814, 63
  %816 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %815
  %817 = load i64, ptr %816, align 8, !tbaa !10
  %818 = xor i64 %785, %789
  %819 = xor i64 %818, %793
  %820 = xor i64 %819, %797
  %821 = xor i64 %820, %805
  %822 = xor i64 %821, %809
  %823 = xor i64 %822, %813
  %824 = xor i64 %823, %817
  %825 = xor i64 %824, %732
  %826 = shl i64 %825, 31
  %827 = lshr i64 %825, 1
  %828 = or i64 %826, %827
  %829 = and i64 %828, 4294967295
  %830 = xor i64 %828, %779
  %831 = and i64 %830, 2863311530
  %832 = xor i64 %831, %829
  %833 = xor i64 %831, %779
  %834 = shl i64 %779, 31
  %835 = lshr i64 %833, 1
  %836 = or i64 %835, %834
  %837 = and i64 %836, 4294967295
  %838 = lshr i64 %836, 8
  %839 = xor i64 %838, %832
  %840 = and i64 %839, 16711935
  %841 = xor i64 %840, %832
  %842 = shl nuw nsw i64 %840, 8
  %843 = xor i64 %842, %837
  %844 = lshr i64 %843, 2
  %845 = xor i64 %844, %841
  %846 = and i64 %845, 858993459
  %847 = xor i64 %846, %841
  %848 = shl nuw nsw i64 %846, 2
  %849 = xor i64 %848, %843
  %850 = lshr i64 %847, 16
  %851 = and i64 %849, 65535
  %852 = xor i64 %851, %850
  %853 = xor i64 %852, %849
  %854 = shl nuw nsw i64 %852, 16
  %855 = xor i64 %854, %847
  %856 = lshr i64 %855, 4
  %857 = xor i64 %856, %853
  %858 = and i64 %857, 252645135
  %859 = xor i64 %858, %853
  %860 = shl nuw nsw i64 %858, 4
  %861 = xor i64 %860, %855
  %862 = lshr i64 %861, 24
  %863 = trunc i64 %862 to i8
  store i8 %863, ptr %2, align 1, !tbaa !7
  %864 = lshr i64 %861, 16
  %865 = trunc i64 %864 to i8
  %866 = getelementptr inbounds i8, ptr %2, i64 1
  store i8 %865, ptr %866, align 1, !tbaa !7
  %867 = lshr i64 %861, 8
  %868 = trunc i64 %867 to i8
  %869 = getelementptr inbounds i8, ptr %2, i64 2
  store i8 %868, ptr %869, align 1, !tbaa !7
  %870 = trunc i64 %861 to i8
  %871 = getelementptr inbounds i8, ptr %2, i64 3
  store i8 %870, ptr %871, align 1, !tbaa !7
  %872 = lshr i64 %859, 24
  %873 = trunc i64 %872 to i8
  %874 = getelementptr inbounds i8, ptr %2, i64 4
  store i8 %873, ptr %874, align 1, !tbaa !7
  %875 = lshr i64 %859, 16
  %876 = trunc i64 %875 to i8
  %877 = getelementptr inbounds i8, ptr %2, i64 5
  store i8 %876, ptr %877, align 1, !tbaa !7
  %878 = lshr i64 %859, 8
  %879 = trunc i64 %878 to i8
  %880 = getelementptr inbounds i8, ptr %2, i64 6
  store i8 %879, ptr %880, align 1, !tbaa !7
  %881 = trunc i64 %859 to i8
  %882 = getelementptr inbounds i8, ptr %2, i64 7
  store i8 %881, ptr %882, align 1, !tbaa !7
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal i32 @des3_set_2keys(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = tail call i32 @des_main_ks(ptr noundef %0, ptr noundef %1) #7
  %5 = getelementptr inbounds %struct.des3_context, ptr %0, i64 0, i32 1, i64 32
  %6 = tail call i32 @des_main_ks(ptr noundef nonnull %5, ptr noundef %2) #7
  br label %7

7:                                                ; preds = %7, %3
  %8 = phi i64 [ 0, %3 ], [ %35, %7 ]
  %9 = sub nuw nsw i64 30, %8
  %10 = getelementptr inbounds [96 x i64], ptr %0, i64 0, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !10
  %12 = getelementptr inbounds %struct.des3_context, ptr %0, i64 0, i32 1, i64 %8
  store i64 %11, ptr %12, align 8, !tbaa !10
  %13 = sub nuw nsw i64 31, %8
  %14 = getelementptr inbounds [96 x i64], ptr %0, i64 0, i64 %13
  %15 = load i64, ptr %14, align 8, !tbaa !10
  %16 = or i64 %8, 1
  %17 = getelementptr inbounds %struct.des3_context, ptr %0, i64 0, i32 1, i64 %16
  store i64 %15, ptr %17, align 8, !tbaa !10
  %18 = sub nuw nsw i64 62, %8
  %19 = getelementptr inbounds %struct.des3_context, ptr %0, i64 0, i32 1, i64 %18
  %20 = load i64, ptr %19, align 8, !tbaa !10
  %21 = add nuw nsw i64 %8, 32
  %22 = getelementptr inbounds [96 x i64], ptr %0, i64 0, i64 %21
  store i64 %20, ptr %22, align 8, !tbaa !10
  %23 = sub nuw nsw i64 63, %8
  %24 = getelementptr inbounds %struct.des3_context, ptr %0, i64 0, i32 1, i64 %23
  %25 = load i64, ptr %24, align 8, !tbaa !10
  %26 = add nuw nsw i64 %8, 33
  %27 = getelementptr inbounds [96 x i64], ptr %0, i64 0, i64 %26
  store i64 %25, ptr %27, align 8, !tbaa !10
  %28 = getelementptr inbounds [96 x i64], ptr %0, i64 0, i64 %8
  %29 = add nuw nsw i64 %8, 64
  %30 = getelementptr inbounds [96 x i64], ptr %0, i64 0, i64 %29
  %31 = add nuw nsw i64 %8, 65
  %32 = load <2 x i64>, ptr %28, align 8, !tbaa !10
  store <2 x i64> %32, ptr %30, align 8, !tbaa !10
  %33 = getelementptr inbounds %struct.des3_context, ptr %0, i64 0, i32 1, i64 %29
  store i64 %11, ptr %33, align 8, !tbaa !10
  %34 = getelementptr inbounds %struct.des3_context, ptr %0, i64 0, i32 1, i64 %31
  store i64 %15, ptr %34, align 8, !tbaa !10
  %35 = add nuw nsw i64 %8, 2
  %36 = icmp ult i64 %8, 30
  br i1 %36, label %7, label %37, !llvm.loop !15

37:                                               ; preds = %7
  ret i32 0
}

; Function Attrs: nofree norecurse nosync nounwind optsize memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal i32 @des3_set_3keys(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3) #0 {
  %5 = tail call i32 @des_main_ks(ptr noundef %0, ptr noundef %1) #7
  %6 = getelementptr inbounds %struct.des3_context, ptr %0, i64 0, i32 1, i64 32
  %7 = tail call i32 @des_main_ks(ptr noundef nonnull %6, ptr noundef %2) #7
  %8 = getelementptr inbounds i64, ptr %0, i64 64
  %9 = tail call i32 @des_main_ks(ptr noundef nonnull %8, ptr noundef %3) #7
  br label %10

10:                                               ; preds = %10, %4
  %11 = phi i64 [ 0, %4 ], [ %41, %10 ]
  %12 = sub nuw nsw i64 94, %11
  %13 = getelementptr inbounds [96 x i64], ptr %0, i64 0, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !10
  %15 = getelementptr inbounds %struct.des3_context, ptr %0, i64 0, i32 1, i64 %11
  store i64 %14, ptr %15, align 8, !tbaa !10
  %16 = sub nuw nsw i64 95, %11
  %17 = getelementptr inbounds [96 x i64], ptr %0, i64 0, i64 %16
  %18 = load i64, ptr %17, align 8, !tbaa !10
  %19 = or i64 %11, 1
  %20 = getelementptr inbounds %struct.des3_context, ptr %0, i64 0, i32 1, i64 %19
  store i64 %18, ptr %20, align 8, !tbaa !10
  %21 = sub nuw nsw i64 62, %11
  %22 = getelementptr inbounds %struct.des3_context, ptr %0, i64 0, i32 1, i64 %21
  %23 = load i64, ptr %22, align 8, !tbaa !10
  %24 = add nuw nsw i64 %11, 32
  %25 = getelementptr inbounds [96 x i64], ptr %0, i64 0, i64 %24
  store i64 %23, ptr %25, align 8, !tbaa !10
  %26 = sub nuw nsw i64 63, %11
  %27 = getelementptr inbounds %struct.des3_context, ptr %0, i64 0, i32 1, i64 %26
  %28 = load i64, ptr %27, align 8, !tbaa !10
  %29 = add nuw nsw i64 %11, 33
  %30 = getelementptr inbounds [96 x i64], ptr %0, i64 0, i64 %29
  store i64 %28, ptr %30, align 8, !tbaa !10
  %31 = sub nuw nsw i64 30, %11
  %32 = getelementptr inbounds [96 x i64], ptr %0, i64 0, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !10
  %34 = add nuw nsw i64 %11, 64
  %35 = getelementptr inbounds %struct.des3_context, ptr %0, i64 0, i32 1, i64 %34
  store i64 %33, ptr %35, align 8, !tbaa !10
  %36 = sub nuw nsw i64 31, %11
  %37 = getelementptr inbounds [96 x i64], ptr %0, i64 0, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !10
  %39 = add nuw nsw i64 %11, 65
  %40 = getelementptr inbounds %struct.des3_context, ptr %0, i64 0, i32 1, i64 %39
  store i64 %38, ptr %40, align 8, !tbaa !10
  %41 = add nuw nsw i64 %11, 2
  %42 = icmp ult i64 %11, 30
  br i1 %42, label %10, label %43, !llvm.loop !16

43:                                               ; preds = %10
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @des3_crypt(ptr noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #1 {
  %4 = load i8, ptr %1, align 1, !tbaa !7
  %5 = zext i8 %4 to i64
  %6 = shl nuw nsw i64 %5, 24
  %7 = getelementptr inbounds i8, ptr %1, i64 1
  %8 = load i8, ptr %7, align 1, !tbaa !7
  %9 = zext i8 %8 to i64
  %10 = shl nuw nsw i64 %9, 16
  %11 = or i64 %10, %6
  %12 = getelementptr inbounds i8, ptr %1, i64 2
  %13 = load i8, ptr %12, align 1, !tbaa !7
  %14 = zext i8 %13 to i64
  %15 = shl nuw nsw i64 %14, 8
  %16 = or i64 %11, %15
  %17 = getelementptr inbounds i8, ptr %1, i64 3
  %18 = load i8, ptr %17, align 1, !tbaa !7
  %19 = zext i8 %18 to i64
  %20 = or i64 %16, %19
  %21 = getelementptr inbounds i8, ptr %1, i64 4
  %22 = load i8, ptr %21, align 1, !tbaa !7
  %23 = zext i8 %22 to i64
  %24 = shl nuw nsw i64 %23, 24
  %25 = getelementptr inbounds i8, ptr %1, i64 5
  %26 = load i8, ptr %25, align 1, !tbaa !7
  %27 = zext i8 %26 to i64
  %28 = shl nuw nsw i64 %27, 16
  %29 = or i64 %28, %24
  %30 = getelementptr inbounds i8, ptr %1, i64 6
  %31 = load i8, ptr %30, align 1, !tbaa !7
  %32 = zext i8 %31 to i64
  %33 = shl nuw nsw i64 %32, 8
  %34 = or i64 %29, %33
  %35 = getelementptr inbounds i8, ptr %1, i64 7
  %36 = load i8, ptr %35, align 1, !tbaa !7
  %37 = zext i8 %36 to i64
  %38 = or i64 %34, %37
  %39 = lshr i64 %20, 4
  %40 = xor i64 %38, %39
  %41 = and i64 %40, 252645135
  %42 = xor i64 %41, %38
  %43 = shl nuw nsw i64 %41, 4
  %44 = xor i64 %43, %20
  %45 = lshr i64 %44, 16
  %46 = xor i64 %45, %42
  %47 = and i64 %46, 65535
  %48 = xor i64 %47, %42
  %49 = shl nuw nsw i64 %47, 16
  %50 = xor i64 %49, %44
  %51 = lshr i64 %48, 2
  %52 = xor i64 %51, %50
  %53 = and i64 %52, 858993459
  %54 = xor i64 %53, %50
  %55 = shl nuw nsw i64 %53, 2
  %56 = xor i64 %55, %48
  %57 = lshr i64 %56, 8
  %58 = xor i64 %57, %54
  %59 = and i64 %58, 16711935
  %60 = xor i64 %59, %54
  %61 = shl nuw nsw i64 %59, 8
  %62 = xor i64 %61, %56
  %63 = shl nuw nsw i64 %62, 1
  %64 = lshr i64 %62, 31
  %65 = or i64 %63, %64
  %66 = and i64 %65, 4294967295
  %67 = xor i64 %65, %60
  %68 = and i64 %67, 2863311530
  %69 = xor i64 %68, %66
  %70 = xor i64 %68, %60
  %71 = shl nuw nsw i64 %70, 1
  %72 = lshr i64 %70, 31
  %73 = or i64 %71, %72
  %74 = and i64 %73, 4294967295
  %75 = getelementptr inbounds i64, ptr %0, i64 1
  %76 = load i64, ptr %0, align 8, !tbaa !10
  %77 = xor i64 %69, %76
  %78 = and i64 %77, 63
  %79 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %78
  %80 = load i64, ptr %79, align 8, !tbaa !10
  %81 = lshr i64 %77, 8
  %82 = and i64 %81, 63
  %83 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !10
  %85 = xor i64 %84, %80
  %86 = lshr i64 %77, 16
  %87 = and i64 %86, 63
  %88 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %87
  %89 = load i64, ptr %88, align 8, !tbaa !10
  %90 = xor i64 %85, %89
  %91 = lshr i64 %77, 24
  %92 = and i64 %91, 63
  %93 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %92
  %94 = load i64, ptr %93, align 8, !tbaa !10
  %95 = xor i64 %90, %94
  %96 = getelementptr inbounds i64, ptr %0, i64 2
  %97 = load i64, ptr %75, align 8, !tbaa !10
  %98 = shl nuw nsw i64 %69, 28
  %99 = lshr i64 %69, 4
  %100 = or i64 %98, %99
  %101 = xor i64 %100, %97
  %102 = and i64 %101, 63
  %103 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %102
  %104 = load i64, ptr %103, align 8, !tbaa !10
  %105 = lshr i64 %101, 8
  %106 = and i64 %105, 63
  %107 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %106
  %108 = load i64, ptr %107, align 8, !tbaa !10
  %109 = lshr i64 %101, 16
  %110 = and i64 %109, 63
  %111 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %110
  %112 = load i64, ptr %111, align 8, !tbaa !10
  %113 = lshr i64 %101, 24
  %114 = and i64 %113, 63
  %115 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %114
  %116 = load i64, ptr %115, align 8, !tbaa !10
  %117 = xor i64 %95, %104
  %118 = xor i64 %117, %108
  %119 = xor i64 %118, %112
  %120 = xor i64 %119, %116
  %121 = xor i64 %120, %74
  %122 = getelementptr inbounds i64, ptr %0, i64 3
  %123 = load i64, ptr %96, align 8, !tbaa !10
  %124 = xor i64 %121, %123
  %125 = and i64 %124, 63
  %126 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %125
  %127 = load i64, ptr %126, align 8, !tbaa !10
  %128 = lshr i64 %124, 8
  %129 = and i64 %128, 63
  %130 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %129
  %131 = load i64, ptr %130, align 8, !tbaa !10
  %132 = lshr i64 %124, 16
  %133 = and i64 %132, 63
  %134 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %133
  %135 = load i64, ptr %134, align 8, !tbaa !10
  %136 = lshr i64 %124, 24
  %137 = and i64 %136, 63
  %138 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %137
  %139 = load i64, ptr %138, align 8, !tbaa !10
  %140 = getelementptr inbounds i64, ptr %0, i64 4
  %141 = load i64, ptr %122, align 8, !tbaa !10
  %142 = shl i64 %121, 28
  %143 = lshr i64 %121, 4
  %144 = or i64 %142, %143
  %145 = xor i64 %144, %141
  %146 = and i64 %145, 63
  %147 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %146
  %148 = load i64, ptr %147, align 8, !tbaa !10
  %149 = lshr i64 %145, 8
  %150 = and i64 %149, 63
  %151 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %150
  %152 = load i64, ptr %151, align 8, !tbaa !10
  %153 = lshr i64 %145, 16
  %154 = and i64 %153, 63
  %155 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %154
  %156 = load i64, ptr %155, align 8, !tbaa !10
  %157 = lshr i64 %145, 24
  %158 = and i64 %157, 63
  %159 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %158
  %160 = load i64, ptr %159, align 8, !tbaa !10
  %161 = xor i64 %131, %127
  %162 = xor i64 %161, %135
  %163 = xor i64 %162, %139
  %164 = xor i64 %163, %148
  %165 = xor i64 %164, %152
  %166 = xor i64 %165, %156
  %167 = xor i64 %166, %160
  %168 = xor i64 %167, %69
  %169 = getelementptr inbounds i64, ptr %0, i64 5
  %170 = load i64, ptr %140, align 8, !tbaa !10
  %171 = xor i64 %168, %170
  %172 = and i64 %171, 63
  %173 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %172
  %174 = load i64, ptr %173, align 8, !tbaa !10
  %175 = lshr i64 %171, 8
  %176 = and i64 %175, 63
  %177 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %176
  %178 = load i64, ptr %177, align 8, !tbaa !10
  %179 = lshr i64 %171, 16
  %180 = and i64 %179, 63
  %181 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %180
  %182 = load i64, ptr %181, align 8, !tbaa !10
  %183 = lshr i64 %171, 24
  %184 = and i64 %183, 63
  %185 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %184
  %186 = load i64, ptr %185, align 8, !tbaa !10
  %187 = getelementptr inbounds i64, ptr %0, i64 6
  %188 = load i64, ptr %169, align 8, !tbaa !10
  %189 = shl i64 %168, 28
  %190 = lshr i64 %168, 4
  %191 = or i64 %189, %190
  %192 = xor i64 %191, %188
  %193 = and i64 %192, 63
  %194 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %193
  %195 = load i64, ptr %194, align 8, !tbaa !10
  %196 = lshr i64 %192, 8
  %197 = and i64 %196, 63
  %198 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %197
  %199 = load i64, ptr %198, align 8, !tbaa !10
  %200 = lshr i64 %192, 16
  %201 = and i64 %200, 63
  %202 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %201
  %203 = load i64, ptr %202, align 8, !tbaa !10
  %204 = lshr i64 %192, 24
  %205 = and i64 %204, 63
  %206 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %205
  %207 = load i64, ptr %206, align 8, !tbaa !10
  %208 = xor i64 %178, %174
  %209 = xor i64 %208, %182
  %210 = xor i64 %209, %186
  %211 = xor i64 %210, %195
  %212 = xor i64 %211, %199
  %213 = xor i64 %212, %203
  %214 = xor i64 %213, %207
  %215 = xor i64 %214, %121
  %216 = getelementptr inbounds i64, ptr %0, i64 7
  %217 = load i64, ptr %187, align 8, !tbaa !10
  %218 = xor i64 %215, %217
  %219 = and i64 %218, 63
  %220 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %219
  %221 = load i64, ptr %220, align 8, !tbaa !10
  %222 = lshr i64 %218, 8
  %223 = and i64 %222, 63
  %224 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %223
  %225 = load i64, ptr %224, align 8, !tbaa !10
  %226 = lshr i64 %218, 16
  %227 = and i64 %226, 63
  %228 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %227
  %229 = load i64, ptr %228, align 8, !tbaa !10
  %230 = lshr i64 %218, 24
  %231 = and i64 %230, 63
  %232 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %231
  %233 = load i64, ptr %232, align 8, !tbaa !10
  %234 = getelementptr inbounds i64, ptr %0, i64 8
  %235 = load i64, ptr %216, align 8, !tbaa !10
  %236 = shl i64 %215, 28
  %237 = lshr i64 %215, 4
  %238 = or i64 %236, %237
  %239 = xor i64 %235, %238
  %240 = and i64 %239, 63
  %241 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %240
  %242 = load i64, ptr %241, align 8, !tbaa !10
  %243 = lshr i64 %239, 8
  %244 = and i64 %243, 63
  %245 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %244
  %246 = load i64, ptr %245, align 8, !tbaa !10
  %247 = lshr i64 %239, 16
  %248 = and i64 %247, 63
  %249 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %248
  %250 = load i64, ptr %249, align 8, !tbaa !10
  %251 = lshr i64 %239, 24
  %252 = and i64 %251, 63
  %253 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %252
  %254 = load i64, ptr %253, align 8, !tbaa !10
  %255 = xor i64 %221, %225
  %256 = xor i64 %255, %229
  %257 = xor i64 %256, %233
  %258 = xor i64 %257, %242
  %259 = xor i64 %258, %246
  %260 = xor i64 %259, %250
  %261 = xor i64 %260, %254
  %262 = xor i64 %261, %168
  %263 = getelementptr inbounds i64, ptr %0, i64 9
  %264 = load i64, ptr %234, align 8, !tbaa !10
  %265 = xor i64 %262, %264
  %266 = and i64 %265, 63
  %267 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %266
  %268 = load i64, ptr %267, align 8, !tbaa !10
  %269 = lshr i64 %265, 8
  %270 = and i64 %269, 63
  %271 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %270
  %272 = load i64, ptr %271, align 8, !tbaa !10
  %273 = lshr i64 %265, 16
  %274 = and i64 %273, 63
  %275 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %274
  %276 = load i64, ptr %275, align 8, !tbaa !10
  %277 = lshr i64 %265, 24
  %278 = and i64 %277, 63
  %279 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %278
  %280 = load i64, ptr %279, align 8, !tbaa !10
  %281 = getelementptr inbounds i64, ptr %0, i64 10
  %282 = load i64, ptr %263, align 8, !tbaa !10
  %283 = shl i64 %262, 28
  %284 = lshr i64 %262, 4
  %285 = or i64 %283, %284
  %286 = xor i64 %282, %285
  %287 = and i64 %286, 63
  %288 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %287
  %289 = load i64, ptr %288, align 8, !tbaa !10
  %290 = lshr i64 %286, 8
  %291 = and i64 %290, 63
  %292 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %291
  %293 = load i64, ptr %292, align 8, !tbaa !10
  %294 = lshr i64 %286, 16
  %295 = and i64 %294, 63
  %296 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %295
  %297 = load i64, ptr %296, align 8, !tbaa !10
  %298 = lshr i64 %286, 24
  %299 = and i64 %298, 63
  %300 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %299
  %301 = load i64, ptr %300, align 8, !tbaa !10
  %302 = xor i64 %268, %272
  %303 = xor i64 %302, %276
  %304 = xor i64 %303, %280
  %305 = xor i64 %304, %289
  %306 = xor i64 %305, %293
  %307 = xor i64 %306, %297
  %308 = xor i64 %307, %301
  %309 = xor i64 %308, %215
  %310 = getelementptr inbounds i64, ptr %0, i64 11
  %311 = load i64, ptr %281, align 8, !tbaa !10
  %312 = xor i64 %309, %311
  %313 = and i64 %312, 63
  %314 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %313
  %315 = load i64, ptr %314, align 8, !tbaa !10
  %316 = lshr i64 %312, 8
  %317 = and i64 %316, 63
  %318 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %317
  %319 = load i64, ptr %318, align 8, !tbaa !10
  %320 = lshr i64 %312, 16
  %321 = and i64 %320, 63
  %322 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %321
  %323 = load i64, ptr %322, align 8, !tbaa !10
  %324 = lshr i64 %312, 24
  %325 = and i64 %324, 63
  %326 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %325
  %327 = load i64, ptr %326, align 8, !tbaa !10
  %328 = getelementptr inbounds i64, ptr %0, i64 12
  %329 = load i64, ptr %310, align 8, !tbaa !10
  %330 = shl i64 %309, 28
  %331 = lshr i64 %309, 4
  %332 = or i64 %330, %331
  %333 = xor i64 %329, %332
  %334 = and i64 %333, 63
  %335 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %334
  %336 = load i64, ptr %335, align 8, !tbaa !10
  %337 = lshr i64 %333, 8
  %338 = and i64 %337, 63
  %339 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %338
  %340 = load i64, ptr %339, align 8, !tbaa !10
  %341 = lshr i64 %333, 16
  %342 = and i64 %341, 63
  %343 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %342
  %344 = load i64, ptr %343, align 8, !tbaa !10
  %345 = lshr i64 %333, 24
  %346 = and i64 %345, 63
  %347 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %346
  %348 = load i64, ptr %347, align 8, !tbaa !10
  %349 = xor i64 %315, %319
  %350 = xor i64 %349, %323
  %351 = xor i64 %350, %327
  %352 = xor i64 %351, %336
  %353 = xor i64 %352, %340
  %354 = xor i64 %353, %344
  %355 = xor i64 %354, %348
  %356 = xor i64 %355, %262
  %357 = getelementptr inbounds i64, ptr %0, i64 13
  %358 = load i64, ptr %328, align 8, !tbaa !10
  %359 = xor i64 %356, %358
  %360 = and i64 %359, 63
  %361 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %360
  %362 = load i64, ptr %361, align 8, !tbaa !10
  %363 = lshr i64 %359, 8
  %364 = and i64 %363, 63
  %365 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %364
  %366 = load i64, ptr %365, align 8, !tbaa !10
  %367 = lshr i64 %359, 16
  %368 = and i64 %367, 63
  %369 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %368
  %370 = load i64, ptr %369, align 8, !tbaa !10
  %371 = lshr i64 %359, 24
  %372 = and i64 %371, 63
  %373 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %372
  %374 = load i64, ptr %373, align 8, !tbaa !10
  %375 = getelementptr inbounds i64, ptr %0, i64 14
  %376 = load i64, ptr %357, align 8, !tbaa !10
  %377 = shl i64 %356, 28
  %378 = lshr i64 %356, 4
  %379 = or i64 %377, %378
  %380 = xor i64 %376, %379
  %381 = and i64 %380, 63
  %382 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %381
  %383 = load i64, ptr %382, align 8, !tbaa !10
  %384 = lshr i64 %380, 8
  %385 = and i64 %384, 63
  %386 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %385
  %387 = load i64, ptr %386, align 8, !tbaa !10
  %388 = lshr i64 %380, 16
  %389 = and i64 %388, 63
  %390 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %389
  %391 = load i64, ptr %390, align 8, !tbaa !10
  %392 = lshr i64 %380, 24
  %393 = and i64 %392, 63
  %394 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %393
  %395 = load i64, ptr %394, align 8, !tbaa !10
  %396 = xor i64 %362, %366
  %397 = xor i64 %396, %370
  %398 = xor i64 %397, %374
  %399 = xor i64 %398, %383
  %400 = xor i64 %399, %387
  %401 = xor i64 %400, %391
  %402 = xor i64 %401, %395
  %403 = xor i64 %402, %309
  %404 = getelementptr inbounds i64, ptr %0, i64 15
  %405 = load i64, ptr %375, align 8, !tbaa !10
  %406 = xor i64 %403, %405
  %407 = and i64 %406, 63
  %408 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %407
  %409 = load i64, ptr %408, align 8, !tbaa !10
  %410 = lshr i64 %406, 8
  %411 = and i64 %410, 63
  %412 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %411
  %413 = load i64, ptr %412, align 8, !tbaa !10
  %414 = lshr i64 %406, 16
  %415 = and i64 %414, 63
  %416 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %415
  %417 = load i64, ptr %416, align 8, !tbaa !10
  %418 = lshr i64 %406, 24
  %419 = and i64 %418, 63
  %420 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %419
  %421 = load i64, ptr %420, align 8, !tbaa !10
  %422 = getelementptr inbounds i64, ptr %0, i64 16
  %423 = load i64, ptr %404, align 8, !tbaa !10
  %424 = shl i64 %403, 28
  %425 = lshr i64 %403, 4
  %426 = or i64 %424, %425
  %427 = xor i64 %423, %426
  %428 = and i64 %427, 63
  %429 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %428
  %430 = load i64, ptr %429, align 8, !tbaa !10
  %431 = lshr i64 %427, 8
  %432 = and i64 %431, 63
  %433 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %432
  %434 = load i64, ptr %433, align 8, !tbaa !10
  %435 = lshr i64 %427, 16
  %436 = and i64 %435, 63
  %437 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %436
  %438 = load i64, ptr %437, align 8, !tbaa !10
  %439 = lshr i64 %427, 24
  %440 = and i64 %439, 63
  %441 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %440
  %442 = load i64, ptr %441, align 8, !tbaa !10
  %443 = xor i64 %409, %413
  %444 = xor i64 %443, %417
  %445 = xor i64 %444, %421
  %446 = xor i64 %445, %430
  %447 = xor i64 %446, %434
  %448 = xor i64 %447, %438
  %449 = xor i64 %448, %442
  %450 = xor i64 %449, %356
  %451 = getelementptr inbounds i64, ptr %0, i64 17
  %452 = load i64, ptr %422, align 8, !tbaa !10
  %453 = xor i64 %450, %452
  %454 = and i64 %453, 63
  %455 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %454
  %456 = load i64, ptr %455, align 8, !tbaa !10
  %457 = lshr i64 %453, 8
  %458 = and i64 %457, 63
  %459 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %458
  %460 = load i64, ptr %459, align 8, !tbaa !10
  %461 = lshr i64 %453, 16
  %462 = and i64 %461, 63
  %463 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %462
  %464 = load i64, ptr %463, align 8, !tbaa !10
  %465 = lshr i64 %453, 24
  %466 = and i64 %465, 63
  %467 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %466
  %468 = load i64, ptr %467, align 8, !tbaa !10
  %469 = getelementptr inbounds i64, ptr %0, i64 18
  %470 = load i64, ptr %451, align 8, !tbaa !10
  %471 = shl i64 %450, 28
  %472 = lshr i64 %450, 4
  %473 = or i64 %471, %472
  %474 = xor i64 %470, %473
  %475 = and i64 %474, 63
  %476 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %475
  %477 = load i64, ptr %476, align 8, !tbaa !10
  %478 = lshr i64 %474, 8
  %479 = and i64 %478, 63
  %480 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %479
  %481 = load i64, ptr %480, align 8, !tbaa !10
  %482 = lshr i64 %474, 16
  %483 = and i64 %482, 63
  %484 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %483
  %485 = load i64, ptr %484, align 8, !tbaa !10
  %486 = lshr i64 %474, 24
  %487 = and i64 %486, 63
  %488 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %487
  %489 = load i64, ptr %488, align 8, !tbaa !10
  %490 = xor i64 %456, %460
  %491 = xor i64 %490, %464
  %492 = xor i64 %491, %468
  %493 = xor i64 %492, %477
  %494 = xor i64 %493, %481
  %495 = xor i64 %494, %485
  %496 = xor i64 %495, %489
  %497 = xor i64 %496, %403
  %498 = getelementptr inbounds i64, ptr %0, i64 19
  %499 = load i64, ptr %469, align 8, !tbaa !10
  %500 = xor i64 %497, %499
  %501 = and i64 %500, 63
  %502 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %501
  %503 = load i64, ptr %502, align 8, !tbaa !10
  %504 = lshr i64 %500, 8
  %505 = and i64 %504, 63
  %506 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %505
  %507 = load i64, ptr %506, align 8, !tbaa !10
  %508 = lshr i64 %500, 16
  %509 = and i64 %508, 63
  %510 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %509
  %511 = load i64, ptr %510, align 8, !tbaa !10
  %512 = lshr i64 %500, 24
  %513 = and i64 %512, 63
  %514 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %513
  %515 = load i64, ptr %514, align 8, !tbaa !10
  %516 = getelementptr inbounds i64, ptr %0, i64 20
  %517 = load i64, ptr %498, align 8, !tbaa !10
  %518 = shl i64 %497, 28
  %519 = lshr i64 %497, 4
  %520 = or i64 %518, %519
  %521 = xor i64 %517, %520
  %522 = and i64 %521, 63
  %523 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %522
  %524 = load i64, ptr %523, align 8, !tbaa !10
  %525 = lshr i64 %521, 8
  %526 = and i64 %525, 63
  %527 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %526
  %528 = load i64, ptr %527, align 8, !tbaa !10
  %529 = lshr i64 %521, 16
  %530 = and i64 %529, 63
  %531 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %530
  %532 = load i64, ptr %531, align 8, !tbaa !10
  %533 = lshr i64 %521, 24
  %534 = and i64 %533, 63
  %535 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %534
  %536 = load i64, ptr %535, align 8, !tbaa !10
  %537 = xor i64 %503, %507
  %538 = xor i64 %537, %511
  %539 = xor i64 %538, %515
  %540 = xor i64 %539, %524
  %541 = xor i64 %540, %528
  %542 = xor i64 %541, %532
  %543 = xor i64 %542, %536
  %544 = xor i64 %543, %450
  %545 = getelementptr inbounds i64, ptr %0, i64 21
  %546 = load i64, ptr %516, align 8, !tbaa !10
  %547 = xor i64 %544, %546
  %548 = and i64 %547, 63
  %549 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %548
  %550 = load i64, ptr %549, align 8, !tbaa !10
  %551 = lshr i64 %547, 8
  %552 = and i64 %551, 63
  %553 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %552
  %554 = load i64, ptr %553, align 8, !tbaa !10
  %555 = lshr i64 %547, 16
  %556 = and i64 %555, 63
  %557 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %556
  %558 = load i64, ptr %557, align 8, !tbaa !10
  %559 = lshr i64 %547, 24
  %560 = and i64 %559, 63
  %561 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %560
  %562 = load i64, ptr %561, align 8, !tbaa !10
  %563 = getelementptr inbounds i64, ptr %0, i64 22
  %564 = load i64, ptr %545, align 8, !tbaa !10
  %565 = shl i64 %544, 28
  %566 = lshr i64 %544, 4
  %567 = or i64 %565, %566
  %568 = xor i64 %564, %567
  %569 = and i64 %568, 63
  %570 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %569
  %571 = load i64, ptr %570, align 8, !tbaa !10
  %572 = lshr i64 %568, 8
  %573 = and i64 %572, 63
  %574 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %573
  %575 = load i64, ptr %574, align 8, !tbaa !10
  %576 = lshr i64 %568, 16
  %577 = and i64 %576, 63
  %578 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %577
  %579 = load i64, ptr %578, align 8, !tbaa !10
  %580 = lshr i64 %568, 24
  %581 = and i64 %580, 63
  %582 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %581
  %583 = load i64, ptr %582, align 8, !tbaa !10
  %584 = xor i64 %550, %554
  %585 = xor i64 %584, %558
  %586 = xor i64 %585, %562
  %587 = xor i64 %586, %571
  %588 = xor i64 %587, %575
  %589 = xor i64 %588, %579
  %590 = xor i64 %589, %583
  %591 = xor i64 %590, %497
  %592 = getelementptr inbounds i64, ptr %0, i64 23
  %593 = load i64, ptr %563, align 8, !tbaa !10
  %594 = xor i64 %591, %593
  %595 = and i64 %594, 63
  %596 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %595
  %597 = load i64, ptr %596, align 8, !tbaa !10
  %598 = lshr i64 %594, 8
  %599 = and i64 %598, 63
  %600 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %599
  %601 = load i64, ptr %600, align 8, !tbaa !10
  %602 = lshr i64 %594, 16
  %603 = and i64 %602, 63
  %604 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %603
  %605 = load i64, ptr %604, align 8, !tbaa !10
  %606 = lshr i64 %594, 24
  %607 = and i64 %606, 63
  %608 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %607
  %609 = load i64, ptr %608, align 8, !tbaa !10
  %610 = getelementptr inbounds i64, ptr %0, i64 24
  %611 = load i64, ptr %592, align 8, !tbaa !10
  %612 = shl i64 %591, 28
  %613 = lshr i64 %591, 4
  %614 = or i64 %612, %613
  %615 = xor i64 %611, %614
  %616 = and i64 %615, 63
  %617 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %616
  %618 = load i64, ptr %617, align 8, !tbaa !10
  %619 = lshr i64 %615, 8
  %620 = and i64 %619, 63
  %621 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %620
  %622 = load i64, ptr %621, align 8, !tbaa !10
  %623 = lshr i64 %615, 16
  %624 = and i64 %623, 63
  %625 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %624
  %626 = load i64, ptr %625, align 8, !tbaa !10
  %627 = lshr i64 %615, 24
  %628 = and i64 %627, 63
  %629 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %628
  %630 = load i64, ptr %629, align 8, !tbaa !10
  %631 = xor i64 %597, %601
  %632 = xor i64 %631, %605
  %633 = xor i64 %632, %609
  %634 = xor i64 %633, %618
  %635 = xor i64 %634, %622
  %636 = xor i64 %635, %626
  %637 = xor i64 %636, %630
  %638 = xor i64 %637, %544
  %639 = getelementptr inbounds i64, ptr %0, i64 25
  %640 = load i64, ptr %610, align 8, !tbaa !10
  %641 = xor i64 %638, %640
  %642 = and i64 %641, 63
  %643 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %642
  %644 = load i64, ptr %643, align 8, !tbaa !10
  %645 = lshr i64 %641, 8
  %646 = and i64 %645, 63
  %647 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %646
  %648 = load i64, ptr %647, align 8, !tbaa !10
  %649 = lshr i64 %641, 16
  %650 = and i64 %649, 63
  %651 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %650
  %652 = load i64, ptr %651, align 8, !tbaa !10
  %653 = lshr i64 %641, 24
  %654 = and i64 %653, 63
  %655 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %654
  %656 = load i64, ptr %655, align 8, !tbaa !10
  %657 = getelementptr inbounds i64, ptr %0, i64 26
  %658 = load i64, ptr %639, align 8, !tbaa !10
  %659 = shl i64 %638, 28
  %660 = lshr i64 %638, 4
  %661 = or i64 %659, %660
  %662 = xor i64 %658, %661
  %663 = and i64 %662, 63
  %664 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %663
  %665 = load i64, ptr %664, align 8, !tbaa !10
  %666 = lshr i64 %662, 8
  %667 = and i64 %666, 63
  %668 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %667
  %669 = load i64, ptr %668, align 8, !tbaa !10
  %670 = lshr i64 %662, 16
  %671 = and i64 %670, 63
  %672 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %671
  %673 = load i64, ptr %672, align 8, !tbaa !10
  %674 = lshr i64 %662, 24
  %675 = and i64 %674, 63
  %676 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %675
  %677 = load i64, ptr %676, align 8, !tbaa !10
  %678 = xor i64 %644, %648
  %679 = xor i64 %678, %652
  %680 = xor i64 %679, %656
  %681 = xor i64 %680, %665
  %682 = xor i64 %681, %669
  %683 = xor i64 %682, %673
  %684 = xor i64 %683, %677
  %685 = xor i64 %684, %591
  %686 = getelementptr inbounds i64, ptr %0, i64 27
  %687 = load i64, ptr %657, align 8, !tbaa !10
  %688 = xor i64 %685, %687
  %689 = and i64 %688, 63
  %690 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %689
  %691 = load i64, ptr %690, align 8, !tbaa !10
  %692 = lshr i64 %688, 8
  %693 = and i64 %692, 63
  %694 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %693
  %695 = load i64, ptr %694, align 8, !tbaa !10
  %696 = lshr i64 %688, 16
  %697 = and i64 %696, 63
  %698 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %697
  %699 = load i64, ptr %698, align 8, !tbaa !10
  %700 = lshr i64 %688, 24
  %701 = and i64 %700, 63
  %702 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %701
  %703 = load i64, ptr %702, align 8, !tbaa !10
  %704 = getelementptr inbounds i64, ptr %0, i64 28
  %705 = load i64, ptr %686, align 8, !tbaa !10
  %706 = shl i64 %685, 28
  %707 = lshr i64 %685, 4
  %708 = or i64 %706, %707
  %709 = xor i64 %705, %708
  %710 = and i64 %709, 63
  %711 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %710
  %712 = load i64, ptr %711, align 8, !tbaa !10
  %713 = lshr i64 %709, 8
  %714 = and i64 %713, 63
  %715 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %714
  %716 = load i64, ptr %715, align 8, !tbaa !10
  %717 = lshr i64 %709, 16
  %718 = and i64 %717, 63
  %719 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %718
  %720 = load i64, ptr %719, align 8, !tbaa !10
  %721 = lshr i64 %709, 24
  %722 = and i64 %721, 63
  %723 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %722
  %724 = load i64, ptr %723, align 8, !tbaa !10
  %725 = xor i64 %691, %695
  %726 = xor i64 %725, %699
  %727 = xor i64 %726, %703
  %728 = xor i64 %727, %712
  %729 = xor i64 %728, %716
  %730 = xor i64 %729, %720
  %731 = xor i64 %730, %724
  %732 = xor i64 %731, %638
  %733 = getelementptr inbounds i64, ptr %0, i64 29
  %734 = load i64, ptr %704, align 8, !tbaa !10
  %735 = xor i64 %732, %734
  %736 = and i64 %735, 63
  %737 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %736
  %738 = load i64, ptr %737, align 8, !tbaa !10
  %739 = lshr i64 %735, 8
  %740 = and i64 %739, 63
  %741 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %740
  %742 = load i64, ptr %741, align 8, !tbaa !10
  %743 = lshr i64 %735, 16
  %744 = and i64 %743, 63
  %745 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %744
  %746 = load i64, ptr %745, align 8, !tbaa !10
  %747 = lshr i64 %735, 24
  %748 = and i64 %747, 63
  %749 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %748
  %750 = load i64, ptr %749, align 8, !tbaa !10
  %751 = getelementptr inbounds i64, ptr %0, i64 30
  %752 = load i64, ptr %733, align 8, !tbaa !10
  %753 = shl i64 %732, 28
  %754 = lshr i64 %732, 4
  %755 = or i64 %753, %754
  %756 = xor i64 %752, %755
  %757 = and i64 %756, 63
  %758 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %757
  %759 = load i64, ptr %758, align 8, !tbaa !10
  %760 = lshr i64 %756, 8
  %761 = and i64 %760, 63
  %762 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %761
  %763 = load i64, ptr %762, align 8, !tbaa !10
  %764 = lshr i64 %756, 16
  %765 = and i64 %764, 63
  %766 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %765
  %767 = load i64, ptr %766, align 8, !tbaa !10
  %768 = lshr i64 %756, 24
  %769 = and i64 %768, 63
  %770 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %769
  %771 = load i64, ptr %770, align 8, !tbaa !10
  %772 = xor i64 %738, %742
  %773 = xor i64 %772, %746
  %774 = xor i64 %773, %750
  %775 = xor i64 %774, %759
  %776 = xor i64 %775, %763
  %777 = xor i64 %776, %767
  %778 = xor i64 %777, %771
  %779 = xor i64 %778, %685
  %780 = getelementptr inbounds i64, ptr %0, i64 31
  %781 = load i64, ptr %751, align 8, !tbaa !10
  %782 = xor i64 %779, %781
  %783 = and i64 %782, 63
  %784 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %783
  %785 = load i64, ptr %784, align 8, !tbaa !10
  %786 = lshr i64 %782, 8
  %787 = and i64 %786, 63
  %788 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %787
  %789 = load i64, ptr %788, align 8, !tbaa !10
  %790 = lshr i64 %782, 16
  %791 = and i64 %790, 63
  %792 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %791
  %793 = load i64, ptr %792, align 8, !tbaa !10
  %794 = lshr i64 %782, 24
  %795 = and i64 %794, 63
  %796 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %795
  %797 = load i64, ptr %796, align 8, !tbaa !10
  %798 = getelementptr inbounds i64, ptr %0, i64 32
  %799 = load i64, ptr %780, align 8, !tbaa !10
  %800 = shl i64 %779, 28
  %801 = lshr i64 %779, 4
  %802 = or i64 %800, %801
  %803 = xor i64 %799, %802
  %804 = and i64 %803, 63
  %805 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %804
  %806 = load i64, ptr %805, align 8, !tbaa !10
  %807 = lshr i64 %803, 8
  %808 = and i64 %807, 63
  %809 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %808
  %810 = load i64, ptr %809, align 8, !tbaa !10
  %811 = lshr i64 %803, 16
  %812 = and i64 %811, 63
  %813 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %812
  %814 = load i64, ptr %813, align 8, !tbaa !10
  %815 = lshr i64 %803, 24
  %816 = and i64 %815, 63
  %817 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %816
  %818 = load i64, ptr %817, align 8, !tbaa !10
  %819 = getelementptr inbounds i64, ptr %0, i64 33
  %820 = load i64, ptr %798, align 8, !tbaa !10
  %821 = xor i64 %820, %779
  %822 = and i64 %821, 63
  %823 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %822
  %824 = load i64, ptr %823, align 8, !tbaa !10
  %825 = lshr i64 %821, 8
  %826 = and i64 %825, 63
  %827 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %826
  %828 = load i64, ptr %827, align 8, !tbaa !10
  %829 = lshr i64 %821, 16
  %830 = and i64 %829, 63
  %831 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %830
  %832 = load i64, ptr %831, align 8, !tbaa !10
  %833 = lshr i64 %821, 24
  %834 = and i64 %833, 63
  %835 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %834
  %836 = load i64, ptr %835, align 8, !tbaa !10
  %837 = getelementptr inbounds i64, ptr %0, i64 34
  %838 = load i64, ptr %819, align 8, !tbaa !10
  %839 = xor i64 %838, %802
  %840 = and i64 %839, 63
  %841 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %840
  %842 = load i64, ptr %841, align 8, !tbaa !10
  %843 = lshr i64 %839, 8
  %844 = and i64 %843, 63
  %845 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %844
  %846 = load i64, ptr %845, align 8, !tbaa !10
  %847 = lshr i64 %839, 16
  %848 = and i64 %847, 63
  %849 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %848
  %850 = load i64, ptr %849, align 8, !tbaa !10
  %851 = lshr i64 %839, 24
  %852 = and i64 %851, 63
  %853 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %852
  %854 = load i64, ptr %853, align 8, !tbaa !10
  %855 = xor i64 %785, %789
  %856 = xor i64 %855, %793
  %857 = xor i64 %856, %797
  %858 = xor i64 %857, %806
  %859 = xor i64 %858, %810
  %860 = xor i64 %859, %814
  %861 = xor i64 %860, %818
  %862 = xor i64 %861, %824
  %863 = xor i64 %862, %828
  %864 = xor i64 %863, %832
  %865 = xor i64 %864, %836
  %866 = xor i64 %865, %842
  %867 = xor i64 %866, %846
  %868 = xor i64 %867, %850
  %869 = xor i64 %868, %854
  %870 = xor i64 %869, %732
  %871 = getelementptr inbounds i64, ptr %0, i64 35
  %872 = load i64, ptr %837, align 8, !tbaa !10
  %873 = xor i64 %870, %872
  %874 = and i64 %873, 63
  %875 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %874
  %876 = load i64, ptr %875, align 8, !tbaa !10
  %877 = lshr i64 %873, 8
  %878 = and i64 %877, 63
  %879 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %878
  %880 = load i64, ptr %879, align 8, !tbaa !10
  %881 = lshr i64 %873, 16
  %882 = and i64 %881, 63
  %883 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %882
  %884 = load i64, ptr %883, align 8, !tbaa !10
  %885 = lshr i64 %873, 24
  %886 = and i64 %885, 63
  %887 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %886
  %888 = load i64, ptr %887, align 8, !tbaa !10
  %889 = getelementptr inbounds i64, ptr %0, i64 36
  %890 = load i64, ptr %871, align 8, !tbaa !10
  %891 = shl i64 %870, 28
  %892 = lshr i64 %870, 4
  %893 = or i64 %891, %892
  %894 = xor i64 %890, %893
  %895 = and i64 %894, 63
  %896 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %895
  %897 = load i64, ptr %896, align 8, !tbaa !10
  %898 = lshr i64 %894, 8
  %899 = and i64 %898, 63
  %900 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %899
  %901 = load i64, ptr %900, align 8, !tbaa !10
  %902 = lshr i64 %894, 16
  %903 = and i64 %902, 63
  %904 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %903
  %905 = load i64, ptr %904, align 8, !tbaa !10
  %906 = lshr i64 %894, 24
  %907 = and i64 %906, 63
  %908 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %907
  %909 = load i64, ptr %908, align 8, !tbaa !10
  %910 = xor i64 %876, %880
  %911 = xor i64 %910, %884
  %912 = xor i64 %911, %888
  %913 = xor i64 %912, %897
  %914 = xor i64 %913, %901
  %915 = xor i64 %914, %905
  %916 = xor i64 %915, %909
  %917 = xor i64 %916, %779
  %918 = getelementptr inbounds i64, ptr %0, i64 37
  %919 = load i64, ptr %889, align 8, !tbaa !10
  %920 = xor i64 %917, %919
  %921 = and i64 %920, 63
  %922 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %921
  %923 = load i64, ptr %922, align 8, !tbaa !10
  %924 = lshr i64 %920, 8
  %925 = and i64 %924, 63
  %926 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %925
  %927 = load i64, ptr %926, align 8, !tbaa !10
  %928 = lshr i64 %920, 16
  %929 = and i64 %928, 63
  %930 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %929
  %931 = load i64, ptr %930, align 8, !tbaa !10
  %932 = lshr i64 %920, 24
  %933 = and i64 %932, 63
  %934 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %933
  %935 = load i64, ptr %934, align 8, !tbaa !10
  %936 = getelementptr inbounds i64, ptr %0, i64 38
  %937 = load i64, ptr %918, align 8, !tbaa !10
  %938 = shl i64 %917, 28
  %939 = lshr i64 %917, 4
  %940 = or i64 %938, %939
  %941 = xor i64 %937, %940
  %942 = and i64 %941, 63
  %943 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %942
  %944 = load i64, ptr %943, align 8, !tbaa !10
  %945 = lshr i64 %941, 8
  %946 = and i64 %945, 63
  %947 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %946
  %948 = load i64, ptr %947, align 8, !tbaa !10
  %949 = lshr i64 %941, 16
  %950 = and i64 %949, 63
  %951 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %950
  %952 = load i64, ptr %951, align 8, !tbaa !10
  %953 = lshr i64 %941, 24
  %954 = and i64 %953, 63
  %955 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %954
  %956 = load i64, ptr %955, align 8, !tbaa !10
  %957 = xor i64 %923, %927
  %958 = xor i64 %957, %931
  %959 = xor i64 %958, %935
  %960 = xor i64 %959, %944
  %961 = xor i64 %960, %948
  %962 = xor i64 %961, %952
  %963 = xor i64 %962, %956
  %964 = xor i64 %963, %870
  %965 = getelementptr inbounds i64, ptr %0, i64 39
  %966 = load i64, ptr %936, align 8, !tbaa !10
  %967 = xor i64 %964, %966
  %968 = and i64 %967, 63
  %969 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %968
  %970 = load i64, ptr %969, align 8, !tbaa !10
  %971 = lshr i64 %967, 8
  %972 = and i64 %971, 63
  %973 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %972
  %974 = load i64, ptr %973, align 8, !tbaa !10
  %975 = lshr i64 %967, 16
  %976 = and i64 %975, 63
  %977 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %976
  %978 = load i64, ptr %977, align 8, !tbaa !10
  %979 = lshr i64 %967, 24
  %980 = and i64 %979, 63
  %981 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %980
  %982 = load i64, ptr %981, align 8, !tbaa !10
  %983 = getelementptr inbounds i64, ptr %0, i64 40
  %984 = load i64, ptr %965, align 8, !tbaa !10
  %985 = shl i64 %964, 28
  %986 = lshr i64 %964, 4
  %987 = or i64 %985, %986
  %988 = xor i64 %984, %987
  %989 = and i64 %988, 63
  %990 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %989
  %991 = load i64, ptr %990, align 8, !tbaa !10
  %992 = lshr i64 %988, 8
  %993 = and i64 %992, 63
  %994 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %993
  %995 = load i64, ptr %994, align 8, !tbaa !10
  %996 = lshr i64 %988, 16
  %997 = and i64 %996, 63
  %998 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %997
  %999 = load i64, ptr %998, align 8, !tbaa !10
  %1000 = lshr i64 %988, 24
  %1001 = and i64 %1000, 63
  %1002 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1001
  %1003 = load i64, ptr %1002, align 8, !tbaa !10
  %1004 = xor i64 %970, %974
  %1005 = xor i64 %1004, %978
  %1006 = xor i64 %1005, %982
  %1007 = xor i64 %1006, %991
  %1008 = xor i64 %1007, %995
  %1009 = xor i64 %1008, %999
  %1010 = xor i64 %1009, %1003
  %1011 = xor i64 %1010, %917
  %1012 = getelementptr inbounds i64, ptr %0, i64 41
  %1013 = load i64, ptr %983, align 8, !tbaa !10
  %1014 = xor i64 %1011, %1013
  %1015 = and i64 %1014, 63
  %1016 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1015
  %1017 = load i64, ptr %1016, align 8, !tbaa !10
  %1018 = lshr i64 %1014, 8
  %1019 = and i64 %1018, 63
  %1020 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1019
  %1021 = load i64, ptr %1020, align 8, !tbaa !10
  %1022 = lshr i64 %1014, 16
  %1023 = and i64 %1022, 63
  %1024 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1023
  %1025 = load i64, ptr %1024, align 8, !tbaa !10
  %1026 = lshr i64 %1014, 24
  %1027 = and i64 %1026, 63
  %1028 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1027
  %1029 = load i64, ptr %1028, align 8, !tbaa !10
  %1030 = getelementptr inbounds i64, ptr %0, i64 42
  %1031 = load i64, ptr %1012, align 8, !tbaa !10
  %1032 = shl i64 %1011, 28
  %1033 = lshr i64 %1011, 4
  %1034 = or i64 %1032, %1033
  %1035 = xor i64 %1031, %1034
  %1036 = and i64 %1035, 63
  %1037 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1036
  %1038 = load i64, ptr %1037, align 8, !tbaa !10
  %1039 = lshr i64 %1035, 8
  %1040 = and i64 %1039, 63
  %1041 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1040
  %1042 = load i64, ptr %1041, align 8, !tbaa !10
  %1043 = lshr i64 %1035, 16
  %1044 = and i64 %1043, 63
  %1045 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1044
  %1046 = load i64, ptr %1045, align 8, !tbaa !10
  %1047 = lshr i64 %1035, 24
  %1048 = and i64 %1047, 63
  %1049 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1048
  %1050 = load i64, ptr %1049, align 8, !tbaa !10
  %1051 = xor i64 %1017, %1021
  %1052 = xor i64 %1051, %1025
  %1053 = xor i64 %1052, %1029
  %1054 = xor i64 %1053, %1038
  %1055 = xor i64 %1054, %1042
  %1056 = xor i64 %1055, %1046
  %1057 = xor i64 %1056, %1050
  %1058 = xor i64 %1057, %964
  %1059 = getelementptr inbounds i64, ptr %0, i64 43
  %1060 = load i64, ptr %1030, align 8, !tbaa !10
  %1061 = xor i64 %1058, %1060
  %1062 = and i64 %1061, 63
  %1063 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1062
  %1064 = load i64, ptr %1063, align 8, !tbaa !10
  %1065 = lshr i64 %1061, 8
  %1066 = and i64 %1065, 63
  %1067 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1066
  %1068 = load i64, ptr %1067, align 8, !tbaa !10
  %1069 = lshr i64 %1061, 16
  %1070 = and i64 %1069, 63
  %1071 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1070
  %1072 = load i64, ptr %1071, align 8, !tbaa !10
  %1073 = lshr i64 %1061, 24
  %1074 = and i64 %1073, 63
  %1075 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1074
  %1076 = load i64, ptr %1075, align 8, !tbaa !10
  %1077 = getelementptr inbounds i64, ptr %0, i64 44
  %1078 = load i64, ptr %1059, align 8, !tbaa !10
  %1079 = shl i64 %1058, 28
  %1080 = lshr i64 %1058, 4
  %1081 = or i64 %1079, %1080
  %1082 = xor i64 %1078, %1081
  %1083 = and i64 %1082, 63
  %1084 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1083
  %1085 = load i64, ptr %1084, align 8, !tbaa !10
  %1086 = lshr i64 %1082, 8
  %1087 = and i64 %1086, 63
  %1088 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1087
  %1089 = load i64, ptr %1088, align 8, !tbaa !10
  %1090 = lshr i64 %1082, 16
  %1091 = and i64 %1090, 63
  %1092 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1091
  %1093 = load i64, ptr %1092, align 8, !tbaa !10
  %1094 = lshr i64 %1082, 24
  %1095 = and i64 %1094, 63
  %1096 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1095
  %1097 = load i64, ptr %1096, align 8, !tbaa !10
  %1098 = xor i64 %1064, %1068
  %1099 = xor i64 %1098, %1072
  %1100 = xor i64 %1099, %1076
  %1101 = xor i64 %1100, %1085
  %1102 = xor i64 %1101, %1089
  %1103 = xor i64 %1102, %1093
  %1104 = xor i64 %1103, %1097
  %1105 = xor i64 %1104, %1011
  %1106 = getelementptr inbounds i64, ptr %0, i64 45
  %1107 = load i64, ptr %1077, align 8, !tbaa !10
  %1108 = xor i64 %1105, %1107
  %1109 = and i64 %1108, 63
  %1110 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1109
  %1111 = load i64, ptr %1110, align 8, !tbaa !10
  %1112 = lshr i64 %1108, 8
  %1113 = and i64 %1112, 63
  %1114 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1113
  %1115 = load i64, ptr %1114, align 8, !tbaa !10
  %1116 = lshr i64 %1108, 16
  %1117 = and i64 %1116, 63
  %1118 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1117
  %1119 = load i64, ptr %1118, align 8, !tbaa !10
  %1120 = lshr i64 %1108, 24
  %1121 = and i64 %1120, 63
  %1122 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1121
  %1123 = load i64, ptr %1122, align 8, !tbaa !10
  %1124 = getelementptr inbounds i64, ptr %0, i64 46
  %1125 = load i64, ptr %1106, align 8, !tbaa !10
  %1126 = shl i64 %1105, 28
  %1127 = lshr i64 %1105, 4
  %1128 = or i64 %1126, %1127
  %1129 = xor i64 %1125, %1128
  %1130 = and i64 %1129, 63
  %1131 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1130
  %1132 = load i64, ptr %1131, align 8, !tbaa !10
  %1133 = lshr i64 %1129, 8
  %1134 = and i64 %1133, 63
  %1135 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1134
  %1136 = load i64, ptr %1135, align 8, !tbaa !10
  %1137 = lshr i64 %1129, 16
  %1138 = and i64 %1137, 63
  %1139 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1138
  %1140 = load i64, ptr %1139, align 8, !tbaa !10
  %1141 = lshr i64 %1129, 24
  %1142 = and i64 %1141, 63
  %1143 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1142
  %1144 = load i64, ptr %1143, align 8, !tbaa !10
  %1145 = xor i64 %1111, %1115
  %1146 = xor i64 %1145, %1119
  %1147 = xor i64 %1146, %1123
  %1148 = xor i64 %1147, %1132
  %1149 = xor i64 %1148, %1136
  %1150 = xor i64 %1149, %1140
  %1151 = xor i64 %1150, %1144
  %1152 = xor i64 %1151, %1058
  %1153 = getelementptr inbounds i64, ptr %0, i64 47
  %1154 = load i64, ptr %1124, align 8, !tbaa !10
  %1155 = xor i64 %1152, %1154
  %1156 = and i64 %1155, 63
  %1157 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1156
  %1158 = load i64, ptr %1157, align 8, !tbaa !10
  %1159 = lshr i64 %1155, 8
  %1160 = and i64 %1159, 63
  %1161 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1160
  %1162 = load i64, ptr %1161, align 8, !tbaa !10
  %1163 = lshr i64 %1155, 16
  %1164 = and i64 %1163, 63
  %1165 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1164
  %1166 = load i64, ptr %1165, align 8, !tbaa !10
  %1167 = lshr i64 %1155, 24
  %1168 = and i64 %1167, 63
  %1169 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1168
  %1170 = load i64, ptr %1169, align 8, !tbaa !10
  %1171 = getelementptr inbounds i64, ptr %0, i64 48
  %1172 = load i64, ptr %1153, align 8, !tbaa !10
  %1173 = shl i64 %1152, 28
  %1174 = lshr i64 %1152, 4
  %1175 = or i64 %1173, %1174
  %1176 = xor i64 %1172, %1175
  %1177 = and i64 %1176, 63
  %1178 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1177
  %1179 = load i64, ptr %1178, align 8, !tbaa !10
  %1180 = lshr i64 %1176, 8
  %1181 = and i64 %1180, 63
  %1182 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1181
  %1183 = load i64, ptr %1182, align 8, !tbaa !10
  %1184 = lshr i64 %1176, 16
  %1185 = and i64 %1184, 63
  %1186 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1185
  %1187 = load i64, ptr %1186, align 8, !tbaa !10
  %1188 = lshr i64 %1176, 24
  %1189 = and i64 %1188, 63
  %1190 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1189
  %1191 = load i64, ptr %1190, align 8, !tbaa !10
  %1192 = xor i64 %1158, %1162
  %1193 = xor i64 %1192, %1166
  %1194 = xor i64 %1193, %1170
  %1195 = xor i64 %1194, %1179
  %1196 = xor i64 %1195, %1183
  %1197 = xor i64 %1196, %1187
  %1198 = xor i64 %1197, %1191
  %1199 = xor i64 %1198, %1105
  %1200 = getelementptr inbounds i64, ptr %0, i64 49
  %1201 = load i64, ptr %1171, align 8, !tbaa !10
  %1202 = xor i64 %1199, %1201
  %1203 = and i64 %1202, 63
  %1204 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1203
  %1205 = load i64, ptr %1204, align 8, !tbaa !10
  %1206 = lshr i64 %1202, 8
  %1207 = and i64 %1206, 63
  %1208 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1207
  %1209 = load i64, ptr %1208, align 8, !tbaa !10
  %1210 = lshr i64 %1202, 16
  %1211 = and i64 %1210, 63
  %1212 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1211
  %1213 = load i64, ptr %1212, align 8, !tbaa !10
  %1214 = lshr i64 %1202, 24
  %1215 = and i64 %1214, 63
  %1216 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1215
  %1217 = load i64, ptr %1216, align 8, !tbaa !10
  %1218 = getelementptr inbounds i64, ptr %0, i64 50
  %1219 = load i64, ptr %1200, align 8, !tbaa !10
  %1220 = shl i64 %1199, 28
  %1221 = lshr i64 %1199, 4
  %1222 = or i64 %1220, %1221
  %1223 = xor i64 %1219, %1222
  %1224 = and i64 %1223, 63
  %1225 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1224
  %1226 = load i64, ptr %1225, align 8, !tbaa !10
  %1227 = lshr i64 %1223, 8
  %1228 = and i64 %1227, 63
  %1229 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1228
  %1230 = load i64, ptr %1229, align 8, !tbaa !10
  %1231 = lshr i64 %1223, 16
  %1232 = and i64 %1231, 63
  %1233 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1232
  %1234 = load i64, ptr %1233, align 8, !tbaa !10
  %1235 = lshr i64 %1223, 24
  %1236 = and i64 %1235, 63
  %1237 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1236
  %1238 = load i64, ptr %1237, align 8, !tbaa !10
  %1239 = xor i64 %1205, %1209
  %1240 = xor i64 %1239, %1213
  %1241 = xor i64 %1240, %1217
  %1242 = xor i64 %1241, %1226
  %1243 = xor i64 %1242, %1230
  %1244 = xor i64 %1243, %1234
  %1245 = xor i64 %1244, %1238
  %1246 = xor i64 %1245, %1152
  %1247 = getelementptr inbounds i64, ptr %0, i64 51
  %1248 = load i64, ptr %1218, align 8, !tbaa !10
  %1249 = xor i64 %1246, %1248
  %1250 = and i64 %1249, 63
  %1251 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1250
  %1252 = load i64, ptr %1251, align 8, !tbaa !10
  %1253 = lshr i64 %1249, 8
  %1254 = and i64 %1253, 63
  %1255 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1254
  %1256 = load i64, ptr %1255, align 8, !tbaa !10
  %1257 = lshr i64 %1249, 16
  %1258 = and i64 %1257, 63
  %1259 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1258
  %1260 = load i64, ptr %1259, align 8, !tbaa !10
  %1261 = lshr i64 %1249, 24
  %1262 = and i64 %1261, 63
  %1263 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1262
  %1264 = load i64, ptr %1263, align 8, !tbaa !10
  %1265 = getelementptr inbounds i64, ptr %0, i64 52
  %1266 = load i64, ptr %1247, align 8, !tbaa !10
  %1267 = shl i64 %1246, 28
  %1268 = lshr i64 %1246, 4
  %1269 = or i64 %1267, %1268
  %1270 = xor i64 %1266, %1269
  %1271 = and i64 %1270, 63
  %1272 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1271
  %1273 = load i64, ptr %1272, align 8, !tbaa !10
  %1274 = lshr i64 %1270, 8
  %1275 = and i64 %1274, 63
  %1276 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1275
  %1277 = load i64, ptr %1276, align 8, !tbaa !10
  %1278 = lshr i64 %1270, 16
  %1279 = and i64 %1278, 63
  %1280 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1279
  %1281 = load i64, ptr %1280, align 8, !tbaa !10
  %1282 = lshr i64 %1270, 24
  %1283 = and i64 %1282, 63
  %1284 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1283
  %1285 = load i64, ptr %1284, align 8, !tbaa !10
  %1286 = xor i64 %1252, %1256
  %1287 = xor i64 %1286, %1260
  %1288 = xor i64 %1287, %1264
  %1289 = xor i64 %1288, %1273
  %1290 = xor i64 %1289, %1277
  %1291 = xor i64 %1290, %1281
  %1292 = xor i64 %1291, %1285
  %1293 = xor i64 %1292, %1199
  %1294 = getelementptr inbounds i64, ptr %0, i64 53
  %1295 = load i64, ptr %1265, align 8, !tbaa !10
  %1296 = xor i64 %1293, %1295
  %1297 = and i64 %1296, 63
  %1298 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1297
  %1299 = load i64, ptr %1298, align 8, !tbaa !10
  %1300 = lshr i64 %1296, 8
  %1301 = and i64 %1300, 63
  %1302 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1301
  %1303 = load i64, ptr %1302, align 8, !tbaa !10
  %1304 = lshr i64 %1296, 16
  %1305 = and i64 %1304, 63
  %1306 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1305
  %1307 = load i64, ptr %1306, align 8, !tbaa !10
  %1308 = lshr i64 %1296, 24
  %1309 = and i64 %1308, 63
  %1310 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1309
  %1311 = load i64, ptr %1310, align 8, !tbaa !10
  %1312 = getelementptr inbounds i64, ptr %0, i64 54
  %1313 = load i64, ptr %1294, align 8, !tbaa !10
  %1314 = shl i64 %1293, 28
  %1315 = lshr i64 %1293, 4
  %1316 = or i64 %1314, %1315
  %1317 = xor i64 %1313, %1316
  %1318 = and i64 %1317, 63
  %1319 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1318
  %1320 = load i64, ptr %1319, align 8, !tbaa !10
  %1321 = lshr i64 %1317, 8
  %1322 = and i64 %1321, 63
  %1323 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1322
  %1324 = load i64, ptr %1323, align 8, !tbaa !10
  %1325 = lshr i64 %1317, 16
  %1326 = and i64 %1325, 63
  %1327 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1326
  %1328 = load i64, ptr %1327, align 8, !tbaa !10
  %1329 = lshr i64 %1317, 24
  %1330 = and i64 %1329, 63
  %1331 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1330
  %1332 = load i64, ptr %1331, align 8, !tbaa !10
  %1333 = xor i64 %1299, %1303
  %1334 = xor i64 %1333, %1307
  %1335 = xor i64 %1334, %1311
  %1336 = xor i64 %1335, %1320
  %1337 = xor i64 %1336, %1324
  %1338 = xor i64 %1337, %1328
  %1339 = xor i64 %1338, %1332
  %1340 = xor i64 %1339, %1246
  %1341 = getelementptr inbounds i64, ptr %0, i64 55
  %1342 = load i64, ptr %1312, align 8, !tbaa !10
  %1343 = xor i64 %1340, %1342
  %1344 = and i64 %1343, 63
  %1345 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1344
  %1346 = load i64, ptr %1345, align 8, !tbaa !10
  %1347 = lshr i64 %1343, 8
  %1348 = and i64 %1347, 63
  %1349 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1348
  %1350 = load i64, ptr %1349, align 8, !tbaa !10
  %1351 = lshr i64 %1343, 16
  %1352 = and i64 %1351, 63
  %1353 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1352
  %1354 = load i64, ptr %1353, align 8, !tbaa !10
  %1355 = lshr i64 %1343, 24
  %1356 = and i64 %1355, 63
  %1357 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1356
  %1358 = load i64, ptr %1357, align 8, !tbaa !10
  %1359 = getelementptr inbounds i64, ptr %0, i64 56
  %1360 = load i64, ptr %1341, align 8, !tbaa !10
  %1361 = shl i64 %1340, 28
  %1362 = lshr i64 %1340, 4
  %1363 = or i64 %1361, %1362
  %1364 = xor i64 %1360, %1363
  %1365 = and i64 %1364, 63
  %1366 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1365
  %1367 = load i64, ptr %1366, align 8, !tbaa !10
  %1368 = lshr i64 %1364, 8
  %1369 = and i64 %1368, 63
  %1370 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1369
  %1371 = load i64, ptr %1370, align 8, !tbaa !10
  %1372 = lshr i64 %1364, 16
  %1373 = and i64 %1372, 63
  %1374 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1373
  %1375 = load i64, ptr %1374, align 8, !tbaa !10
  %1376 = lshr i64 %1364, 24
  %1377 = and i64 %1376, 63
  %1378 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1377
  %1379 = load i64, ptr %1378, align 8, !tbaa !10
  %1380 = xor i64 %1346, %1350
  %1381 = xor i64 %1380, %1354
  %1382 = xor i64 %1381, %1358
  %1383 = xor i64 %1382, %1367
  %1384 = xor i64 %1383, %1371
  %1385 = xor i64 %1384, %1375
  %1386 = xor i64 %1385, %1379
  %1387 = xor i64 %1386, %1293
  %1388 = getelementptr inbounds i64, ptr %0, i64 57
  %1389 = load i64, ptr %1359, align 8, !tbaa !10
  %1390 = xor i64 %1387, %1389
  %1391 = and i64 %1390, 63
  %1392 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1391
  %1393 = load i64, ptr %1392, align 8, !tbaa !10
  %1394 = lshr i64 %1390, 8
  %1395 = and i64 %1394, 63
  %1396 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1395
  %1397 = load i64, ptr %1396, align 8, !tbaa !10
  %1398 = lshr i64 %1390, 16
  %1399 = and i64 %1398, 63
  %1400 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1399
  %1401 = load i64, ptr %1400, align 8, !tbaa !10
  %1402 = lshr i64 %1390, 24
  %1403 = and i64 %1402, 63
  %1404 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1403
  %1405 = load i64, ptr %1404, align 8, !tbaa !10
  %1406 = getelementptr inbounds i64, ptr %0, i64 58
  %1407 = load i64, ptr %1388, align 8, !tbaa !10
  %1408 = shl i64 %1387, 28
  %1409 = lshr i64 %1387, 4
  %1410 = or i64 %1408, %1409
  %1411 = xor i64 %1407, %1410
  %1412 = and i64 %1411, 63
  %1413 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1412
  %1414 = load i64, ptr %1413, align 8, !tbaa !10
  %1415 = lshr i64 %1411, 8
  %1416 = and i64 %1415, 63
  %1417 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1416
  %1418 = load i64, ptr %1417, align 8, !tbaa !10
  %1419 = lshr i64 %1411, 16
  %1420 = and i64 %1419, 63
  %1421 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1420
  %1422 = load i64, ptr %1421, align 8, !tbaa !10
  %1423 = lshr i64 %1411, 24
  %1424 = and i64 %1423, 63
  %1425 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1424
  %1426 = load i64, ptr %1425, align 8, !tbaa !10
  %1427 = xor i64 %1393, %1397
  %1428 = xor i64 %1427, %1401
  %1429 = xor i64 %1428, %1405
  %1430 = xor i64 %1429, %1414
  %1431 = xor i64 %1430, %1418
  %1432 = xor i64 %1431, %1422
  %1433 = xor i64 %1432, %1426
  %1434 = xor i64 %1433, %1340
  %1435 = getelementptr inbounds i64, ptr %0, i64 59
  %1436 = load i64, ptr %1406, align 8, !tbaa !10
  %1437 = xor i64 %1434, %1436
  %1438 = and i64 %1437, 63
  %1439 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1438
  %1440 = load i64, ptr %1439, align 8, !tbaa !10
  %1441 = lshr i64 %1437, 8
  %1442 = and i64 %1441, 63
  %1443 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1442
  %1444 = load i64, ptr %1443, align 8, !tbaa !10
  %1445 = lshr i64 %1437, 16
  %1446 = and i64 %1445, 63
  %1447 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1446
  %1448 = load i64, ptr %1447, align 8, !tbaa !10
  %1449 = lshr i64 %1437, 24
  %1450 = and i64 %1449, 63
  %1451 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1450
  %1452 = load i64, ptr %1451, align 8, !tbaa !10
  %1453 = getelementptr inbounds i64, ptr %0, i64 60
  %1454 = load i64, ptr %1435, align 8, !tbaa !10
  %1455 = shl i64 %1434, 28
  %1456 = lshr i64 %1434, 4
  %1457 = or i64 %1455, %1456
  %1458 = xor i64 %1454, %1457
  %1459 = and i64 %1458, 63
  %1460 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1459
  %1461 = load i64, ptr %1460, align 8, !tbaa !10
  %1462 = lshr i64 %1458, 8
  %1463 = and i64 %1462, 63
  %1464 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1463
  %1465 = load i64, ptr %1464, align 8, !tbaa !10
  %1466 = lshr i64 %1458, 16
  %1467 = and i64 %1466, 63
  %1468 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1467
  %1469 = load i64, ptr %1468, align 8, !tbaa !10
  %1470 = lshr i64 %1458, 24
  %1471 = and i64 %1470, 63
  %1472 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1471
  %1473 = load i64, ptr %1472, align 8, !tbaa !10
  %1474 = xor i64 %1440, %1444
  %1475 = xor i64 %1474, %1448
  %1476 = xor i64 %1475, %1452
  %1477 = xor i64 %1476, %1461
  %1478 = xor i64 %1477, %1465
  %1479 = xor i64 %1478, %1469
  %1480 = xor i64 %1479, %1473
  %1481 = xor i64 %1480, %1387
  %1482 = getelementptr inbounds i64, ptr %0, i64 61
  %1483 = load i64, ptr %1453, align 8, !tbaa !10
  %1484 = xor i64 %1481, %1483
  %1485 = and i64 %1484, 63
  %1486 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1485
  %1487 = load i64, ptr %1486, align 8, !tbaa !10
  %1488 = lshr i64 %1484, 8
  %1489 = and i64 %1488, 63
  %1490 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1489
  %1491 = load i64, ptr %1490, align 8, !tbaa !10
  %1492 = lshr i64 %1484, 16
  %1493 = and i64 %1492, 63
  %1494 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1493
  %1495 = load i64, ptr %1494, align 8, !tbaa !10
  %1496 = lshr i64 %1484, 24
  %1497 = and i64 %1496, 63
  %1498 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1497
  %1499 = load i64, ptr %1498, align 8, !tbaa !10
  %1500 = getelementptr inbounds i64, ptr %0, i64 62
  %1501 = load i64, ptr %1482, align 8, !tbaa !10
  %1502 = shl i64 %1481, 28
  %1503 = lshr i64 %1481, 4
  %1504 = or i64 %1502, %1503
  %1505 = xor i64 %1501, %1504
  %1506 = and i64 %1505, 63
  %1507 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1506
  %1508 = load i64, ptr %1507, align 8, !tbaa !10
  %1509 = lshr i64 %1505, 8
  %1510 = and i64 %1509, 63
  %1511 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1510
  %1512 = load i64, ptr %1511, align 8, !tbaa !10
  %1513 = lshr i64 %1505, 16
  %1514 = and i64 %1513, 63
  %1515 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1514
  %1516 = load i64, ptr %1515, align 8, !tbaa !10
  %1517 = lshr i64 %1505, 24
  %1518 = and i64 %1517, 63
  %1519 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1518
  %1520 = load i64, ptr %1519, align 8, !tbaa !10
  %1521 = xor i64 %1487, %1491
  %1522 = xor i64 %1521, %1495
  %1523 = xor i64 %1522, %1499
  %1524 = xor i64 %1523, %1508
  %1525 = xor i64 %1524, %1512
  %1526 = xor i64 %1525, %1516
  %1527 = xor i64 %1526, %1520
  %1528 = xor i64 %1527, %1434
  %1529 = getelementptr inbounds i64, ptr %0, i64 63
  %1530 = load i64, ptr %1500, align 8, !tbaa !10
  %1531 = xor i64 %1528, %1530
  %1532 = and i64 %1531, 63
  %1533 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1532
  %1534 = load i64, ptr %1533, align 8, !tbaa !10
  %1535 = lshr i64 %1531, 8
  %1536 = and i64 %1535, 63
  %1537 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1536
  %1538 = load i64, ptr %1537, align 8, !tbaa !10
  %1539 = lshr i64 %1531, 16
  %1540 = and i64 %1539, 63
  %1541 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1540
  %1542 = load i64, ptr %1541, align 8, !tbaa !10
  %1543 = lshr i64 %1531, 24
  %1544 = and i64 %1543, 63
  %1545 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1544
  %1546 = load i64, ptr %1545, align 8, !tbaa !10
  %1547 = getelementptr inbounds i64, ptr %0, i64 64
  %1548 = load i64, ptr %1529, align 8, !tbaa !10
  %1549 = shl i64 %1528, 28
  %1550 = lshr i64 %1528, 4
  %1551 = or i64 %1549, %1550
  %1552 = xor i64 %1548, %1551
  %1553 = and i64 %1552, 63
  %1554 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1553
  %1555 = load i64, ptr %1554, align 8, !tbaa !10
  %1556 = lshr i64 %1552, 8
  %1557 = and i64 %1556, 63
  %1558 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1557
  %1559 = load i64, ptr %1558, align 8, !tbaa !10
  %1560 = lshr i64 %1552, 16
  %1561 = and i64 %1560, 63
  %1562 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1561
  %1563 = load i64, ptr %1562, align 8, !tbaa !10
  %1564 = lshr i64 %1552, 24
  %1565 = and i64 %1564, 63
  %1566 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1565
  %1567 = load i64, ptr %1566, align 8, !tbaa !10
  %1568 = getelementptr inbounds i64, ptr %0, i64 65
  %1569 = load i64, ptr %1547, align 8, !tbaa !10
  %1570 = xor i64 %1569, %1528
  %1571 = and i64 %1570, 63
  %1572 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1571
  %1573 = load i64, ptr %1572, align 8, !tbaa !10
  %1574 = lshr i64 %1570, 8
  %1575 = and i64 %1574, 63
  %1576 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1575
  %1577 = load i64, ptr %1576, align 8, !tbaa !10
  %1578 = lshr i64 %1570, 16
  %1579 = and i64 %1578, 63
  %1580 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1579
  %1581 = load i64, ptr %1580, align 8, !tbaa !10
  %1582 = lshr i64 %1570, 24
  %1583 = and i64 %1582, 63
  %1584 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1583
  %1585 = load i64, ptr %1584, align 8, !tbaa !10
  %1586 = getelementptr inbounds i64, ptr %0, i64 66
  %1587 = load i64, ptr %1568, align 8, !tbaa !10
  %1588 = xor i64 %1587, %1551
  %1589 = and i64 %1588, 63
  %1590 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1589
  %1591 = load i64, ptr %1590, align 8, !tbaa !10
  %1592 = lshr i64 %1588, 8
  %1593 = and i64 %1592, 63
  %1594 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1593
  %1595 = load i64, ptr %1594, align 8, !tbaa !10
  %1596 = lshr i64 %1588, 16
  %1597 = and i64 %1596, 63
  %1598 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1597
  %1599 = load i64, ptr %1598, align 8, !tbaa !10
  %1600 = lshr i64 %1588, 24
  %1601 = and i64 %1600, 63
  %1602 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1601
  %1603 = load i64, ptr %1602, align 8, !tbaa !10
  %1604 = xor i64 %1534, %1538
  %1605 = xor i64 %1604, %1542
  %1606 = xor i64 %1605, %1546
  %1607 = xor i64 %1606, %1555
  %1608 = xor i64 %1607, %1559
  %1609 = xor i64 %1608, %1563
  %1610 = xor i64 %1609, %1567
  %1611 = xor i64 %1610, %1573
  %1612 = xor i64 %1611, %1577
  %1613 = xor i64 %1612, %1581
  %1614 = xor i64 %1613, %1585
  %1615 = xor i64 %1614, %1591
  %1616 = xor i64 %1615, %1595
  %1617 = xor i64 %1616, %1599
  %1618 = xor i64 %1617, %1603
  %1619 = xor i64 %1618, %1481
  %1620 = getelementptr inbounds i64, ptr %0, i64 67
  %1621 = load i64, ptr %1586, align 8, !tbaa !10
  %1622 = xor i64 %1619, %1621
  %1623 = and i64 %1622, 63
  %1624 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1623
  %1625 = load i64, ptr %1624, align 8, !tbaa !10
  %1626 = lshr i64 %1622, 8
  %1627 = and i64 %1626, 63
  %1628 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1627
  %1629 = load i64, ptr %1628, align 8, !tbaa !10
  %1630 = lshr i64 %1622, 16
  %1631 = and i64 %1630, 63
  %1632 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1631
  %1633 = load i64, ptr %1632, align 8, !tbaa !10
  %1634 = lshr i64 %1622, 24
  %1635 = and i64 %1634, 63
  %1636 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1635
  %1637 = load i64, ptr %1636, align 8, !tbaa !10
  %1638 = getelementptr inbounds i64, ptr %0, i64 68
  %1639 = load i64, ptr %1620, align 8, !tbaa !10
  %1640 = shl i64 %1619, 28
  %1641 = lshr i64 %1619, 4
  %1642 = or i64 %1640, %1641
  %1643 = xor i64 %1639, %1642
  %1644 = and i64 %1643, 63
  %1645 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1644
  %1646 = load i64, ptr %1645, align 8, !tbaa !10
  %1647 = lshr i64 %1643, 8
  %1648 = and i64 %1647, 63
  %1649 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1648
  %1650 = load i64, ptr %1649, align 8, !tbaa !10
  %1651 = lshr i64 %1643, 16
  %1652 = and i64 %1651, 63
  %1653 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1652
  %1654 = load i64, ptr %1653, align 8, !tbaa !10
  %1655 = lshr i64 %1643, 24
  %1656 = and i64 %1655, 63
  %1657 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1656
  %1658 = load i64, ptr %1657, align 8, !tbaa !10
  %1659 = xor i64 %1625, %1629
  %1660 = xor i64 %1659, %1633
  %1661 = xor i64 %1660, %1637
  %1662 = xor i64 %1661, %1646
  %1663 = xor i64 %1662, %1650
  %1664 = xor i64 %1663, %1654
  %1665 = xor i64 %1664, %1658
  %1666 = xor i64 %1665, %1528
  %1667 = getelementptr inbounds i64, ptr %0, i64 69
  %1668 = load i64, ptr %1638, align 8, !tbaa !10
  %1669 = xor i64 %1666, %1668
  %1670 = and i64 %1669, 63
  %1671 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1670
  %1672 = load i64, ptr %1671, align 8, !tbaa !10
  %1673 = lshr i64 %1669, 8
  %1674 = and i64 %1673, 63
  %1675 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1674
  %1676 = load i64, ptr %1675, align 8, !tbaa !10
  %1677 = lshr i64 %1669, 16
  %1678 = and i64 %1677, 63
  %1679 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1678
  %1680 = load i64, ptr %1679, align 8, !tbaa !10
  %1681 = lshr i64 %1669, 24
  %1682 = and i64 %1681, 63
  %1683 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1682
  %1684 = load i64, ptr %1683, align 8, !tbaa !10
  %1685 = getelementptr inbounds i64, ptr %0, i64 70
  %1686 = load i64, ptr %1667, align 8, !tbaa !10
  %1687 = shl i64 %1666, 28
  %1688 = lshr i64 %1666, 4
  %1689 = or i64 %1687, %1688
  %1690 = xor i64 %1686, %1689
  %1691 = and i64 %1690, 63
  %1692 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1691
  %1693 = load i64, ptr %1692, align 8, !tbaa !10
  %1694 = lshr i64 %1690, 8
  %1695 = and i64 %1694, 63
  %1696 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1695
  %1697 = load i64, ptr %1696, align 8, !tbaa !10
  %1698 = lshr i64 %1690, 16
  %1699 = and i64 %1698, 63
  %1700 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1699
  %1701 = load i64, ptr %1700, align 8, !tbaa !10
  %1702 = lshr i64 %1690, 24
  %1703 = and i64 %1702, 63
  %1704 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1703
  %1705 = load i64, ptr %1704, align 8, !tbaa !10
  %1706 = xor i64 %1672, %1676
  %1707 = xor i64 %1706, %1680
  %1708 = xor i64 %1707, %1684
  %1709 = xor i64 %1708, %1693
  %1710 = xor i64 %1709, %1697
  %1711 = xor i64 %1710, %1701
  %1712 = xor i64 %1711, %1705
  %1713 = xor i64 %1712, %1619
  %1714 = getelementptr inbounds i64, ptr %0, i64 71
  %1715 = load i64, ptr %1685, align 8, !tbaa !10
  %1716 = xor i64 %1713, %1715
  %1717 = and i64 %1716, 63
  %1718 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1717
  %1719 = load i64, ptr %1718, align 8, !tbaa !10
  %1720 = lshr i64 %1716, 8
  %1721 = and i64 %1720, 63
  %1722 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1721
  %1723 = load i64, ptr %1722, align 8, !tbaa !10
  %1724 = lshr i64 %1716, 16
  %1725 = and i64 %1724, 63
  %1726 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1725
  %1727 = load i64, ptr %1726, align 8, !tbaa !10
  %1728 = lshr i64 %1716, 24
  %1729 = and i64 %1728, 63
  %1730 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1729
  %1731 = load i64, ptr %1730, align 8, !tbaa !10
  %1732 = getelementptr inbounds i64, ptr %0, i64 72
  %1733 = load i64, ptr %1714, align 8, !tbaa !10
  %1734 = shl i64 %1713, 28
  %1735 = lshr i64 %1713, 4
  %1736 = or i64 %1734, %1735
  %1737 = xor i64 %1733, %1736
  %1738 = and i64 %1737, 63
  %1739 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1738
  %1740 = load i64, ptr %1739, align 8, !tbaa !10
  %1741 = lshr i64 %1737, 8
  %1742 = and i64 %1741, 63
  %1743 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1742
  %1744 = load i64, ptr %1743, align 8, !tbaa !10
  %1745 = lshr i64 %1737, 16
  %1746 = and i64 %1745, 63
  %1747 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1746
  %1748 = load i64, ptr %1747, align 8, !tbaa !10
  %1749 = lshr i64 %1737, 24
  %1750 = and i64 %1749, 63
  %1751 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1750
  %1752 = load i64, ptr %1751, align 8, !tbaa !10
  %1753 = xor i64 %1719, %1723
  %1754 = xor i64 %1753, %1727
  %1755 = xor i64 %1754, %1731
  %1756 = xor i64 %1755, %1740
  %1757 = xor i64 %1756, %1744
  %1758 = xor i64 %1757, %1748
  %1759 = xor i64 %1758, %1752
  %1760 = xor i64 %1759, %1666
  %1761 = getelementptr inbounds i64, ptr %0, i64 73
  %1762 = load i64, ptr %1732, align 8, !tbaa !10
  %1763 = xor i64 %1760, %1762
  %1764 = and i64 %1763, 63
  %1765 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1764
  %1766 = load i64, ptr %1765, align 8, !tbaa !10
  %1767 = lshr i64 %1763, 8
  %1768 = and i64 %1767, 63
  %1769 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1768
  %1770 = load i64, ptr %1769, align 8, !tbaa !10
  %1771 = lshr i64 %1763, 16
  %1772 = and i64 %1771, 63
  %1773 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1772
  %1774 = load i64, ptr %1773, align 8, !tbaa !10
  %1775 = lshr i64 %1763, 24
  %1776 = and i64 %1775, 63
  %1777 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1776
  %1778 = load i64, ptr %1777, align 8, !tbaa !10
  %1779 = getelementptr inbounds i64, ptr %0, i64 74
  %1780 = load i64, ptr %1761, align 8, !tbaa !10
  %1781 = shl i64 %1760, 28
  %1782 = lshr i64 %1760, 4
  %1783 = or i64 %1781, %1782
  %1784 = xor i64 %1780, %1783
  %1785 = and i64 %1784, 63
  %1786 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1785
  %1787 = load i64, ptr %1786, align 8, !tbaa !10
  %1788 = lshr i64 %1784, 8
  %1789 = and i64 %1788, 63
  %1790 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1789
  %1791 = load i64, ptr %1790, align 8, !tbaa !10
  %1792 = lshr i64 %1784, 16
  %1793 = and i64 %1792, 63
  %1794 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1793
  %1795 = load i64, ptr %1794, align 8, !tbaa !10
  %1796 = lshr i64 %1784, 24
  %1797 = and i64 %1796, 63
  %1798 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1797
  %1799 = load i64, ptr %1798, align 8, !tbaa !10
  %1800 = xor i64 %1766, %1770
  %1801 = xor i64 %1800, %1774
  %1802 = xor i64 %1801, %1778
  %1803 = xor i64 %1802, %1787
  %1804 = xor i64 %1803, %1791
  %1805 = xor i64 %1804, %1795
  %1806 = xor i64 %1805, %1799
  %1807 = xor i64 %1806, %1713
  %1808 = getelementptr inbounds i64, ptr %0, i64 75
  %1809 = load i64, ptr %1779, align 8, !tbaa !10
  %1810 = xor i64 %1807, %1809
  %1811 = and i64 %1810, 63
  %1812 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1811
  %1813 = load i64, ptr %1812, align 8, !tbaa !10
  %1814 = lshr i64 %1810, 8
  %1815 = and i64 %1814, 63
  %1816 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1815
  %1817 = load i64, ptr %1816, align 8, !tbaa !10
  %1818 = lshr i64 %1810, 16
  %1819 = and i64 %1818, 63
  %1820 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1819
  %1821 = load i64, ptr %1820, align 8, !tbaa !10
  %1822 = lshr i64 %1810, 24
  %1823 = and i64 %1822, 63
  %1824 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1823
  %1825 = load i64, ptr %1824, align 8, !tbaa !10
  %1826 = getelementptr inbounds i64, ptr %0, i64 76
  %1827 = load i64, ptr %1808, align 8, !tbaa !10
  %1828 = shl i64 %1807, 28
  %1829 = lshr i64 %1807, 4
  %1830 = or i64 %1828, %1829
  %1831 = xor i64 %1827, %1830
  %1832 = and i64 %1831, 63
  %1833 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1832
  %1834 = load i64, ptr %1833, align 8, !tbaa !10
  %1835 = lshr i64 %1831, 8
  %1836 = and i64 %1835, 63
  %1837 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1836
  %1838 = load i64, ptr %1837, align 8, !tbaa !10
  %1839 = lshr i64 %1831, 16
  %1840 = and i64 %1839, 63
  %1841 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1840
  %1842 = load i64, ptr %1841, align 8, !tbaa !10
  %1843 = lshr i64 %1831, 24
  %1844 = and i64 %1843, 63
  %1845 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1844
  %1846 = load i64, ptr %1845, align 8, !tbaa !10
  %1847 = xor i64 %1813, %1817
  %1848 = xor i64 %1847, %1821
  %1849 = xor i64 %1848, %1825
  %1850 = xor i64 %1849, %1834
  %1851 = xor i64 %1850, %1838
  %1852 = xor i64 %1851, %1842
  %1853 = xor i64 %1852, %1846
  %1854 = xor i64 %1853, %1760
  %1855 = getelementptr inbounds i64, ptr %0, i64 77
  %1856 = load i64, ptr %1826, align 8, !tbaa !10
  %1857 = xor i64 %1854, %1856
  %1858 = and i64 %1857, 63
  %1859 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1858
  %1860 = load i64, ptr %1859, align 8, !tbaa !10
  %1861 = lshr i64 %1857, 8
  %1862 = and i64 %1861, 63
  %1863 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1862
  %1864 = load i64, ptr %1863, align 8, !tbaa !10
  %1865 = lshr i64 %1857, 16
  %1866 = and i64 %1865, 63
  %1867 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1866
  %1868 = load i64, ptr %1867, align 8, !tbaa !10
  %1869 = lshr i64 %1857, 24
  %1870 = and i64 %1869, 63
  %1871 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1870
  %1872 = load i64, ptr %1871, align 8, !tbaa !10
  %1873 = getelementptr inbounds i64, ptr %0, i64 78
  %1874 = load i64, ptr %1855, align 8, !tbaa !10
  %1875 = shl i64 %1854, 28
  %1876 = lshr i64 %1854, 4
  %1877 = or i64 %1875, %1876
  %1878 = xor i64 %1874, %1877
  %1879 = and i64 %1878, 63
  %1880 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1879
  %1881 = load i64, ptr %1880, align 8, !tbaa !10
  %1882 = lshr i64 %1878, 8
  %1883 = and i64 %1882, 63
  %1884 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1883
  %1885 = load i64, ptr %1884, align 8, !tbaa !10
  %1886 = lshr i64 %1878, 16
  %1887 = and i64 %1886, 63
  %1888 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1887
  %1889 = load i64, ptr %1888, align 8, !tbaa !10
  %1890 = lshr i64 %1878, 24
  %1891 = and i64 %1890, 63
  %1892 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1891
  %1893 = load i64, ptr %1892, align 8, !tbaa !10
  %1894 = xor i64 %1860, %1864
  %1895 = xor i64 %1894, %1868
  %1896 = xor i64 %1895, %1872
  %1897 = xor i64 %1896, %1881
  %1898 = xor i64 %1897, %1885
  %1899 = xor i64 %1898, %1889
  %1900 = xor i64 %1899, %1893
  %1901 = xor i64 %1900, %1807
  %1902 = getelementptr inbounds i64, ptr %0, i64 79
  %1903 = load i64, ptr %1873, align 8, !tbaa !10
  %1904 = xor i64 %1901, %1903
  %1905 = and i64 %1904, 63
  %1906 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1905
  %1907 = load i64, ptr %1906, align 8, !tbaa !10
  %1908 = lshr i64 %1904, 8
  %1909 = and i64 %1908, 63
  %1910 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1909
  %1911 = load i64, ptr %1910, align 8, !tbaa !10
  %1912 = lshr i64 %1904, 16
  %1913 = and i64 %1912, 63
  %1914 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1913
  %1915 = load i64, ptr %1914, align 8, !tbaa !10
  %1916 = lshr i64 %1904, 24
  %1917 = and i64 %1916, 63
  %1918 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1917
  %1919 = load i64, ptr %1918, align 8, !tbaa !10
  %1920 = getelementptr inbounds i64, ptr %0, i64 80
  %1921 = load i64, ptr %1902, align 8, !tbaa !10
  %1922 = shl i64 %1901, 28
  %1923 = lshr i64 %1901, 4
  %1924 = or i64 %1922, %1923
  %1925 = xor i64 %1921, %1924
  %1926 = and i64 %1925, 63
  %1927 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1926
  %1928 = load i64, ptr %1927, align 8, !tbaa !10
  %1929 = lshr i64 %1925, 8
  %1930 = and i64 %1929, 63
  %1931 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1930
  %1932 = load i64, ptr %1931, align 8, !tbaa !10
  %1933 = lshr i64 %1925, 16
  %1934 = and i64 %1933, 63
  %1935 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1934
  %1936 = load i64, ptr %1935, align 8, !tbaa !10
  %1937 = lshr i64 %1925, 24
  %1938 = and i64 %1937, 63
  %1939 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1938
  %1940 = load i64, ptr %1939, align 8, !tbaa !10
  %1941 = xor i64 %1907, %1911
  %1942 = xor i64 %1941, %1915
  %1943 = xor i64 %1942, %1919
  %1944 = xor i64 %1943, %1928
  %1945 = xor i64 %1944, %1932
  %1946 = xor i64 %1945, %1936
  %1947 = xor i64 %1946, %1940
  %1948 = xor i64 %1947, %1854
  %1949 = getelementptr inbounds i64, ptr %0, i64 81
  %1950 = load i64, ptr %1920, align 8, !tbaa !10
  %1951 = xor i64 %1948, %1950
  %1952 = and i64 %1951, 63
  %1953 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1952
  %1954 = load i64, ptr %1953, align 8, !tbaa !10
  %1955 = lshr i64 %1951, 8
  %1956 = and i64 %1955, 63
  %1957 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %1956
  %1958 = load i64, ptr %1957, align 8, !tbaa !10
  %1959 = lshr i64 %1951, 16
  %1960 = and i64 %1959, 63
  %1961 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %1960
  %1962 = load i64, ptr %1961, align 8, !tbaa !10
  %1963 = lshr i64 %1951, 24
  %1964 = and i64 %1963, 63
  %1965 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %1964
  %1966 = load i64, ptr %1965, align 8, !tbaa !10
  %1967 = getelementptr inbounds i64, ptr %0, i64 82
  %1968 = load i64, ptr %1949, align 8, !tbaa !10
  %1969 = shl i64 %1948, 28
  %1970 = lshr i64 %1948, 4
  %1971 = or i64 %1969, %1970
  %1972 = xor i64 %1968, %1971
  %1973 = and i64 %1972, 63
  %1974 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %1973
  %1975 = load i64, ptr %1974, align 8, !tbaa !10
  %1976 = lshr i64 %1972, 8
  %1977 = and i64 %1976, 63
  %1978 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %1977
  %1979 = load i64, ptr %1978, align 8, !tbaa !10
  %1980 = lshr i64 %1972, 16
  %1981 = and i64 %1980, 63
  %1982 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %1981
  %1983 = load i64, ptr %1982, align 8, !tbaa !10
  %1984 = lshr i64 %1972, 24
  %1985 = and i64 %1984, 63
  %1986 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %1985
  %1987 = load i64, ptr %1986, align 8, !tbaa !10
  %1988 = xor i64 %1954, %1958
  %1989 = xor i64 %1988, %1962
  %1990 = xor i64 %1989, %1966
  %1991 = xor i64 %1990, %1975
  %1992 = xor i64 %1991, %1979
  %1993 = xor i64 %1992, %1983
  %1994 = xor i64 %1993, %1987
  %1995 = xor i64 %1994, %1901
  %1996 = getelementptr inbounds i64, ptr %0, i64 83
  %1997 = load i64, ptr %1967, align 8, !tbaa !10
  %1998 = xor i64 %1995, %1997
  %1999 = and i64 %1998, 63
  %2000 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %1999
  %2001 = load i64, ptr %2000, align 8, !tbaa !10
  %2002 = lshr i64 %1998, 8
  %2003 = and i64 %2002, 63
  %2004 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %2003
  %2005 = load i64, ptr %2004, align 8, !tbaa !10
  %2006 = lshr i64 %1998, 16
  %2007 = and i64 %2006, 63
  %2008 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %2007
  %2009 = load i64, ptr %2008, align 8, !tbaa !10
  %2010 = lshr i64 %1998, 24
  %2011 = and i64 %2010, 63
  %2012 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %2011
  %2013 = load i64, ptr %2012, align 8, !tbaa !10
  %2014 = getelementptr inbounds i64, ptr %0, i64 84
  %2015 = load i64, ptr %1996, align 8, !tbaa !10
  %2016 = shl i64 %1995, 28
  %2017 = lshr i64 %1995, 4
  %2018 = or i64 %2016, %2017
  %2019 = xor i64 %2015, %2018
  %2020 = and i64 %2019, 63
  %2021 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %2020
  %2022 = load i64, ptr %2021, align 8, !tbaa !10
  %2023 = lshr i64 %2019, 8
  %2024 = and i64 %2023, 63
  %2025 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %2024
  %2026 = load i64, ptr %2025, align 8, !tbaa !10
  %2027 = lshr i64 %2019, 16
  %2028 = and i64 %2027, 63
  %2029 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %2028
  %2030 = load i64, ptr %2029, align 8, !tbaa !10
  %2031 = lshr i64 %2019, 24
  %2032 = and i64 %2031, 63
  %2033 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %2032
  %2034 = load i64, ptr %2033, align 8, !tbaa !10
  %2035 = xor i64 %2001, %2005
  %2036 = xor i64 %2035, %2009
  %2037 = xor i64 %2036, %2013
  %2038 = xor i64 %2037, %2022
  %2039 = xor i64 %2038, %2026
  %2040 = xor i64 %2039, %2030
  %2041 = xor i64 %2040, %2034
  %2042 = xor i64 %2041, %1948
  %2043 = getelementptr inbounds i64, ptr %0, i64 85
  %2044 = load i64, ptr %2014, align 8, !tbaa !10
  %2045 = xor i64 %2042, %2044
  %2046 = and i64 %2045, 63
  %2047 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %2046
  %2048 = load i64, ptr %2047, align 8, !tbaa !10
  %2049 = lshr i64 %2045, 8
  %2050 = and i64 %2049, 63
  %2051 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %2050
  %2052 = load i64, ptr %2051, align 8, !tbaa !10
  %2053 = lshr i64 %2045, 16
  %2054 = and i64 %2053, 63
  %2055 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %2054
  %2056 = load i64, ptr %2055, align 8, !tbaa !10
  %2057 = lshr i64 %2045, 24
  %2058 = and i64 %2057, 63
  %2059 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %2058
  %2060 = load i64, ptr %2059, align 8, !tbaa !10
  %2061 = getelementptr inbounds i64, ptr %0, i64 86
  %2062 = load i64, ptr %2043, align 8, !tbaa !10
  %2063 = shl i64 %2042, 28
  %2064 = lshr i64 %2042, 4
  %2065 = or i64 %2063, %2064
  %2066 = xor i64 %2062, %2065
  %2067 = and i64 %2066, 63
  %2068 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %2067
  %2069 = load i64, ptr %2068, align 8, !tbaa !10
  %2070 = lshr i64 %2066, 8
  %2071 = and i64 %2070, 63
  %2072 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %2071
  %2073 = load i64, ptr %2072, align 8, !tbaa !10
  %2074 = lshr i64 %2066, 16
  %2075 = and i64 %2074, 63
  %2076 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %2075
  %2077 = load i64, ptr %2076, align 8, !tbaa !10
  %2078 = lshr i64 %2066, 24
  %2079 = and i64 %2078, 63
  %2080 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %2079
  %2081 = load i64, ptr %2080, align 8, !tbaa !10
  %2082 = xor i64 %2048, %2052
  %2083 = xor i64 %2082, %2056
  %2084 = xor i64 %2083, %2060
  %2085 = xor i64 %2084, %2069
  %2086 = xor i64 %2085, %2073
  %2087 = xor i64 %2086, %2077
  %2088 = xor i64 %2087, %2081
  %2089 = xor i64 %2088, %1995
  %2090 = getelementptr inbounds i64, ptr %0, i64 87
  %2091 = load i64, ptr %2061, align 8, !tbaa !10
  %2092 = xor i64 %2089, %2091
  %2093 = and i64 %2092, 63
  %2094 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %2093
  %2095 = load i64, ptr %2094, align 8, !tbaa !10
  %2096 = lshr i64 %2092, 8
  %2097 = and i64 %2096, 63
  %2098 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %2097
  %2099 = load i64, ptr %2098, align 8, !tbaa !10
  %2100 = lshr i64 %2092, 16
  %2101 = and i64 %2100, 63
  %2102 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %2101
  %2103 = load i64, ptr %2102, align 8, !tbaa !10
  %2104 = lshr i64 %2092, 24
  %2105 = and i64 %2104, 63
  %2106 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %2105
  %2107 = load i64, ptr %2106, align 8, !tbaa !10
  %2108 = getelementptr inbounds i64, ptr %0, i64 88
  %2109 = load i64, ptr %2090, align 8, !tbaa !10
  %2110 = shl i64 %2089, 28
  %2111 = lshr i64 %2089, 4
  %2112 = or i64 %2110, %2111
  %2113 = xor i64 %2109, %2112
  %2114 = and i64 %2113, 63
  %2115 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %2114
  %2116 = load i64, ptr %2115, align 8, !tbaa !10
  %2117 = lshr i64 %2113, 8
  %2118 = and i64 %2117, 63
  %2119 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %2118
  %2120 = load i64, ptr %2119, align 8, !tbaa !10
  %2121 = lshr i64 %2113, 16
  %2122 = and i64 %2121, 63
  %2123 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %2122
  %2124 = load i64, ptr %2123, align 8, !tbaa !10
  %2125 = lshr i64 %2113, 24
  %2126 = and i64 %2125, 63
  %2127 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %2126
  %2128 = load i64, ptr %2127, align 8, !tbaa !10
  %2129 = xor i64 %2095, %2099
  %2130 = xor i64 %2129, %2103
  %2131 = xor i64 %2130, %2107
  %2132 = xor i64 %2131, %2116
  %2133 = xor i64 %2132, %2120
  %2134 = xor i64 %2133, %2124
  %2135 = xor i64 %2134, %2128
  %2136 = xor i64 %2135, %2042
  %2137 = getelementptr inbounds i64, ptr %0, i64 89
  %2138 = load i64, ptr %2108, align 8, !tbaa !10
  %2139 = xor i64 %2136, %2138
  %2140 = and i64 %2139, 63
  %2141 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %2140
  %2142 = load i64, ptr %2141, align 8, !tbaa !10
  %2143 = lshr i64 %2139, 8
  %2144 = and i64 %2143, 63
  %2145 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %2144
  %2146 = load i64, ptr %2145, align 8, !tbaa !10
  %2147 = lshr i64 %2139, 16
  %2148 = and i64 %2147, 63
  %2149 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %2148
  %2150 = load i64, ptr %2149, align 8, !tbaa !10
  %2151 = lshr i64 %2139, 24
  %2152 = and i64 %2151, 63
  %2153 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %2152
  %2154 = load i64, ptr %2153, align 8, !tbaa !10
  %2155 = getelementptr inbounds i64, ptr %0, i64 90
  %2156 = load i64, ptr %2137, align 8, !tbaa !10
  %2157 = shl i64 %2136, 28
  %2158 = lshr i64 %2136, 4
  %2159 = or i64 %2157, %2158
  %2160 = xor i64 %2156, %2159
  %2161 = and i64 %2160, 63
  %2162 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %2161
  %2163 = load i64, ptr %2162, align 8, !tbaa !10
  %2164 = lshr i64 %2160, 8
  %2165 = and i64 %2164, 63
  %2166 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %2165
  %2167 = load i64, ptr %2166, align 8, !tbaa !10
  %2168 = lshr i64 %2160, 16
  %2169 = and i64 %2168, 63
  %2170 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %2169
  %2171 = load i64, ptr %2170, align 8, !tbaa !10
  %2172 = lshr i64 %2160, 24
  %2173 = and i64 %2172, 63
  %2174 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %2173
  %2175 = load i64, ptr %2174, align 8, !tbaa !10
  %2176 = xor i64 %2142, %2146
  %2177 = xor i64 %2176, %2150
  %2178 = xor i64 %2177, %2154
  %2179 = xor i64 %2178, %2163
  %2180 = xor i64 %2179, %2167
  %2181 = xor i64 %2180, %2171
  %2182 = xor i64 %2181, %2175
  %2183 = xor i64 %2182, %2089
  %2184 = getelementptr inbounds i64, ptr %0, i64 91
  %2185 = load i64, ptr %2155, align 8, !tbaa !10
  %2186 = xor i64 %2183, %2185
  %2187 = and i64 %2186, 63
  %2188 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %2187
  %2189 = load i64, ptr %2188, align 8, !tbaa !10
  %2190 = lshr i64 %2186, 8
  %2191 = and i64 %2190, 63
  %2192 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %2191
  %2193 = load i64, ptr %2192, align 8, !tbaa !10
  %2194 = lshr i64 %2186, 16
  %2195 = and i64 %2194, 63
  %2196 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %2195
  %2197 = load i64, ptr %2196, align 8, !tbaa !10
  %2198 = lshr i64 %2186, 24
  %2199 = and i64 %2198, 63
  %2200 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %2199
  %2201 = load i64, ptr %2200, align 8, !tbaa !10
  %2202 = getelementptr inbounds i64, ptr %0, i64 92
  %2203 = load i64, ptr %2184, align 8, !tbaa !10
  %2204 = shl i64 %2183, 28
  %2205 = lshr i64 %2183, 4
  %2206 = or i64 %2204, %2205
  %2207 = xor i64 %2203, %2206
  %2208 = and i64 %2207, 63
  %2209 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %2208
  %2210 = load i64, ptr %2209, align 8, !tbaa !10
  %2211 = lshr i64 %2207, 8
  %2212 = and i64 %2211, 63
  %2213 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %2212
  %2214 = load i64, ptr %2213, align 8, !tbaa !10
  %2215 = lshr i64 %2207, 16
  %2216 = and i64 %2215, 63
  %2217 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %2216
  %2218 = load i64, ptr %2217, align 8, !tbaa !10
  %2219 = lshr i64 %2207, 24
  %2220 = and i64 %2219, 63
  %2221 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %2220
  %2222 = load i64, ptr %2221, align 8, !tbaa !10
  %2223 = xor i64 %2189, %2193
  %2224 = xor i64 %2223, %2197
  %2225 = xor i64 %2224, %2201
  %2226 = xor i64 %2225, %2210
  %2227 = xor i64 %2226, %2214
  %2228 = xor i64 %2227, %2218
  %2229 = xor i64 %2228, %2222
  %2230 = xor i64 %2229, %2136
  %2231 = getelementptr inbounds i64, ptr %0, i64 93
  %2232 = load i64, ptr %2202, align 8, !tbaa !10
  %2233 = xor i64 %2230, %2232
  %2234 = and i64 %2233, 63
  %2235 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %2234
  %2236 = load i64, ptr %2235, align 8, !tbaa !10
  %2237 = lshr i64 %2233, 8
  %2238 = and i64 %2237, 63
  %2239 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %2238
  %2240 = load i64, ptr %2239, align 8, !tbaa !10
  %2241 = lshr i64 %2233, 16
  %2242 = and i64 %2241, 63
  %2243 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %2242
  %2244 = load i64, ptr %2243, align 8, !tbaa !10
  %2245 = lshr i64 %2233, 24
  %2246 = and i64 %2245, 63
  %2247 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %2246
  %2248 = load i64, ptr %2247, align 8, !tbaa !10
  %2249 = getelementptr inbounds i64, ptr %0, i64 94
  %2250 = load i64, ptr %2231, align 8, !tbaa !10
  %2251 = shl i64 %2230, 28
  %2252 = lshr i64 %2230, 4
  %2253 = or i64 %2251, %2252
  %2254 = xor i64 %2250, %2253
  %2255 = and i64 %2254, 63
  %2256 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %2255
  %2257 = load i64, ptr %2256, align 8, !tbaa !10
  %2258 = lshr i64 %2254, 8
  %2259 = and i64 %2258, 63
  %2260 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %2259
  %2261 = load i64, ptr %2260, align 8, !tbaa !10
  %2262 = lshr i64 %2254, 16
  %2263 = and i64 %2262, 63
  %2264 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %2263
  %2265 = load i64, ptr %2264, align 8, !tbaa !10
  %2266 = lshr i64 %2254, 24
  %2267 = and i64 %2266, 63
  %2268 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %2267
  %2269 = load i64, ptr %2268, align 8, !tbaa !10
  %2270 = xor i64 %2236, %2240
  %2271 = xor i64 %2270, %2244
  %2272 = xor i64 %2271, %2248
  %2273 = xor i64 %2272, %2257
  %2274 = xor i64 %2273, %2261
  %2275 = xor i64 %2274, %2265
  %2276 = xor i64 %2275, %2269
  %2277 = xor i64 %2276, %2183
  %2278 = getelementptr inbounds i64, ptr %0, i64 95
  %2279 = load i64, ptr %2249, align 8, !tbaa !10
  %2280 = xor i64 %2277, %2279
  %2281 = and i64 %2280, 63
  %2282 = getelementptr inbounds [64 x i64], ptr @SB8, i64 0, i64 %2281
  %2283 = load i64, ptr %2282, align 8, !tbaa !10
  %2284 = lshr i64 %2280, 8
  %2285 = and i64 %2284, 63
  %2286 = getelementptr inbounds [64 x i64], ptr @SB6, i64 0, i64 %2285
  %2287 = load i64, ptr %2286, align 8, !tbaa !10
  %2288 = lshr i64 %2280, 16
  %2289 = and i64 %2288, 63
  %2290 = getelementptr inbounds [64 x i64], ptr @SB4, i64 0, i64 %2289
  %2291 = load i64, ptr %2290, align 8, !tbaa !10
  %2292 = lshr i64 %2280, 24
  %2293 = and i64 %2292, 63
  %2294 = getelementptr inbounds [64 x i64], ptr @SB2, i64 0, i64 %2293
  %2295 = load i64, ptr %2294, align 8, !tbaa !10
  %2296 = load i64, ptr %2278, align 8, !tbaa !10
  %2297 = shl i64 %2277, 28
  %2298 = lshr i64 %2277, 4
  %2299 = or i64 %2297, %2298
  %2300 = xor i64 %2296, %2299
  %2301 = and i64 %2300, 63
  %2302 = getelementptr inbounds [64 x i64], ptr @SB7, i64 0, i64 %2301
  %2303 = load i64, ptr %2302, align 8, !tbaa !10
  %2304 = lshr i64 %2300, 8
  %2305 = and i64 %2304, 63
  %2306 = getelementptr inbounds [64 x i64], ptr @SB5, i64 0, i64 %2305
  %2307 = load i64, ptr %2306, align 8, !tbaa !10
  %2308 = lshr i64 %2300, 16
  %2309 = and i64 %2308, 63
  %2310 = getelementptr inbounds [64 x i64], ptr @SB3, i64 0, i64 %2309
  %2311 = load i64, ptr %2310, align 8, !tbaa !10
  %2312 = lshr i64 %2300, 24
  %2313 = and i64 %2312, 63
  %2314 = getelementptr inbounds [64 x i64], ptr @SB1, i64 0, i64 %2313
  %2315 = load i64, ptr %2314, align 8, !tbaa !10
  %2316 = xor i64 %2283, %2287
  %2317 = xor i64 %2316, %2291
  %2318 = xor i64 %2317, %2295
  %2319 = xor i64 %2318, %2303
  %2320 = xor i64 %2319, %2307
  %2321 = xor i64 %2320, %2311
  %2322 = xor i64 %2321, %2315
  %2323 = xor i64 %2322, %2230
  %2324 = shl i64 %2323, 31
  %2325 = lshr i64 %2323, 1
  %2326 = or i64 %2324, %2325
  %2327 = and i64 %2326, 4294967295
  %2328 = xor i64 %2326, %2277
  %2329 = and i64 %2328, 2863311530
  %2330 = xor i64 %2329, %2327
  %2331 = xor i64 %2329, %2277
  %2332 = shl i64 %2277, 31
  %2333 = lshr i64 %2331, 1
  %2334 = or i64 %2333, %2332
  %2335 = and i64 %2334, 4294967295
  %2336 = lshr i64 %2334, 8
  %2337 = xor i64 %2336, %2330
  %2338 = and i64 %2337, 16711935
  %2339 = xor i64 %2338, %2330
  %2340 = shl nuw nsw i64 %2338, 8
  %2341 = xor i64 %2340, %2335
  %2342 = lshr i64 %2341, 2
  %2343 = xor i64 %2342, %2339
  %2344 = and i64 %2343, 858993459
  %2345 = xor i64 %2344, %2339
  %2346 = shl nuw nsw i64 %2344, 2
  %2347 = xor i64 %2346, %2341
  %2348 = lshr i64 %2345, 16
  %2349 = and i64 %2347, 65535
  %2350 = xor i64 %2349, %2348
  %2351 = xor i64 %2350, %2347
  %2352 = shl nuw nsw i64 %2350, 16
  %2353 = xor i64 %2352, %2345
  %2354 = lshr i64 %2353, 4
  %2355 = xor i64 %2354, %2351
  %2356 = and i64 %2355, 252645135
  %2357 = xor i64 %2356, %2351
  %2358 = shl nuw nsw i64 %2356, 4
  %2359 = xor i64 %2358, %2353
  %2360 = lshr i64 %2359, 24
  %2361 = trunc i64 %2360 to i8
  store i8 %2361, ptr %2, align 1, !tbaa !7
  %2362 = lshr i64 %2359, 16
  %2363 = trunc i64 %2362 to i8
  %2364 = getelementptr inbounds i8, ptr %2, i64 1
  store i8 %2363, ptr %2364, align 1, !tbaa !7
  %2365 = lshr i64 %2359, 8
  %2366 = trunc i64 %2365 to i8
  %2367 = getelementptr inbounds i8, ptr %2, i64 2
  store i8 %2366, ptr %2367, align 1, !tbaa !7
  %2368 = trunc i64 %2359 to i8
  %2369 = getelementptr inbounds i8, ptr %2, i64 3
  store i8 %2368, ptr %2369, align 1, !tbaa !7
  %2370 = lshr i64 %2357, 24
  %2371 = trunc i64 %2370 to i8
  %2372 = getelementptr inbounds i8, ptr %2, i64 4
  store i8 %2371, ptr %2372, align 1, !tbaa !7
  %2373 = lshr i64 %2357, 16
  %2374 = trunc i64 %2373 to i8
  %2375 = getelementptr inbounds i8, ptr %2, i64 5
  store i8 %2374, ptr %2375, align 1, !tbaa !7
  %2376 = lshr i64 %2357, 8
  %2377 = trunc i64 %2376 to i8
  %2378 = getelementptr inbounds i8, ptr %2, i64 6
  store i8 %2377, ptr %2378, align 1, !tbaa !7
  %2379 = trunc i64 %2357 to i8
  %2380 = getelementptr inbounds i8, ptr %2, i64 7
  store i8 %2379, ptr %2380, align 1, !tbaa !7
  ret void
}

; Function Attrs: nofree nounwind optsize uwtable
define dso_local i32 @main(i32 noundef %0, ptr nocapture noundef readonly %1) #2 {
  %3 = alloca %struct.des_context, align 8
  %4 = alloca %struct.des3_context, align 8
  %5 = alloca [8 x i8], align 8
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %3) #8
  call void @llvm.lifetime.start.p0(i64 1536, ptr nonnull %4) #8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #8
  %6 = icmp eq i32 %0, 2
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds ptr, ptr %1, i64 1
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = tail call i32 @atoi(ptr nocapture noundef %9) #9
  br label %11

11:                                               ; preds = %7, %2
  %12 = phi i32 [ %10, %7 ], [ 100, %2 ]
  %13 = icmp sgt i32 %12, 0
  %14 = getelementptr inbounds %struct.des3_context, ptr %4, i64 0, i32 1
  %15 = getelementptr inbounds %struct.des_context, ptr %3, i64 0, i32 1
  br label %16

16:                                               ; preds = %71, %11
  %17 = phi i1 [ true, %11 ], [ false, %71 ]
  %18 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str) #7
  %19 = select i1 %17, ptr @str.9, ptr @str.8
  %20 = call i32 @puts(ptr nonnull dereferenceable(1) %19)
  br label %21

21:                                               ; preds = %68, %16
  %22 = phi i64 [ 0, %16 ], [ %24, %68 ]
  %23 = trunc i64 %22 to i32
  %24 = add nuw nsw i64 %22, 1
  %25 = shl nuw nsw i32 %23, 6
  %26 = add nuw nsw i32 %25, 64
  %27 = trunc i64 %24 to i32
  %28 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.3, i32 noundef %27, i32 noundef %26) #7
  %29 = load ptr, ptr @stdout, align 8, !tbaa !17
  %30 = call i32 @fflush(ptr noundef %29) #7
  br i1 %13, label %31, label %68

31:                                               ; preds = %21
  %32 = icmp eq i64 %22, 0
  %33 = getelementptr inbounds [3 x [8 x i8]], ptr @DES3_enc_test, i64 0, i64 %22
  %34 = getelementptr inbounds [3 x [8 x i8]], ptr @DES3_dec_test, i64 0, i64 %22
  br label %35

35:                                               ; preds = %65, %31
  %36 = phi i32 [ 0, %31 ], [ %66, %65 ]
  store i64 8367815003007840078, ptr %5, align 8
  switch i32 %23, label %43 [
    i32 0, label %37
    i32 1, label %39
    i32 2, label %41
  ]

37:                                               ; preds = %35
  %38 = call i32 @des_set_key(ptr noundef nonnull %3, ptr noundef nonnull @DES3_keys) #7
  br label %43

39:                                               ; preds = %35
  %40 = call i32 @des3_set_2keys(ptr noundef nonnull %4, ptr noundef nonnull @DES3_keys, ptr noundef nonnull getelementptr inbounds ([3 x [8 x i8]], ptr @DES3_keys, i64 0, i64 1)) #7
  br label %43

41:                                               ; preds = %35
  %42 = call i32 @des3_set_3keys(ptr noundef nonnull %4, ptr noundef nonnull @DES3_keys, ptr noundef nonnull getelementptr inbounds ([3 x [8 x i8]], ptr @DES3_keys, i64 0, i64 1), ptr noundef nonnull getelementptr inbounds ([3 x [8 x i8]], ptr @DES3_keys, i64 0, i64 2)) #7
  br label %43

43:                                               ; preds = %41, %39, %37, %35
  br label %44

44:                                               ; preds = %52, %43
  %45 = phi i32 [ %53, %52 ], [ 0, %43 ]
  br i1 %32, label %46, label %49

46:                                               ; preds = %44
  br i1 %17, label %47, label %48

47:                                               ; preds = %46
  call void @des_crypt(ptr noundef nonnull %3, ptr noundef nonnull %5, ptr noundef nonnull %5) #7
  br label %52

48:                                               ; preds = %46
  call void @des_crypt(ptr noundef nonnull %15, ptr noundef nonnull %5, ptr noundef nonnull %5) #7
  br label %52

49:                                               ; preds = %44
  br i1 %17, label %50, label %51

50:                                               ; preds = %49
  call void @des3_crypt(ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef nonnull %5) #7
  br label %52

51:                                               ; preds = %49
  call void @des3_crypt(ptr noundef nonnull %14, ptr noundef nonnull %5, ptr noundef nonnull %5) #7
  br label %52

52:                                               ; preds = %51, %50, %48, %47
  %53 = add nuw nsw i32 %45, 1
  %54 = icmp eq i32 %53, 10000
  br i1 %54, label %55, label %44, !llvm.loop !19

55:                                               ; preds = %52
  %56 = load i64, ptr %5, align 8
  br i1 %17, label %57, label %60

57:                                               ; preds = %55
  %58 = load i64, ptr %33, align 8
  %59 = icmp eq i64 %56, %58
  br i1 %59, label %65, label %63

60:                                               ; preds = %55
  %61 = load i64, ptr %34, align 8
  %62 = icmp eq i64 %56, %61
  br i1 %62, label %65, label %63

63:                                               ; preds = %60, %57
  %64 = call i32 @puts(ptr nonnull dereferenceable(1) @str.7)
  br label %74

65:                                               ; preds = %60, %57
  %66 = add nuw nsw i32 %36, 1
  %67 = icmp eq i32 %66, %12
  br i1 %67, label %68, label %35, !llvm.loop !20

68:                                               ; preds = %65, %21
  %69 = call i32 @puts(ptr nonnull dereferenceable(1) @str)
  %70 = icmp eq i64 %24, 3
  br i1 %70, label %71, label %21, !llvm.loop !21

71:                                               ; preds = %68
  br i1 %17, label %16, label %72, !llvm.loop !22

72:                                               ; preds = %71
  %73 = call i32 @putchar(i32 10)
  br label %74

74:                                               ; preds = %72, %63
  %75 = phi i32 [ 1, %63 ], [ 0, %72 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #8
  call void @llvm.lifetime.end.p0(i64 1536, ptr nonnull %4) #8
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %3) #8
  ret i32 %75
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: mustprogress nofree nounwind optsize willreturn memory(read)
declare i32 @atoi(ptr nocapture noundef) local_unnamed_addr #4

; Function Attrs: nofree nounwind optsize
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fflush(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #6

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { nofree norecurse nosync nounwind optsize memory(write, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nofree norecurse nosync nounwind optsize willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind optsize uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { mustprogress nofree nounwind optsize willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nofree nounwind optsize "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nofree nounwind }
attributes #7 = { optsize }
attributes #8 = { nounwind }
attributes #9 = { nounwind optsize willreturn memory(read) }

!llvm.ident = !{!0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6}

!0 = !{!"clang version 17.0.6 (https://github.com/Casperento/llvm-project.git 9b0073551ece0d22bf3378af2b03e456a26031b6)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 2}
!5 = !{i32 1, !"ThinLTO", i32 0}
!6 = !{i32 1, !"EnableSplitLTOUnit", i32 1}
!7 = !{!8, !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!11, !11, i64 0}
!11 = !{!"long", !8, i64 0}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.mustprogress"}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !13}
!17 = !{!18, !18, i64 0}
!18 = !{!"any pointer", !8, i64 0}
!19 = distinct !{!19, !13}
!20 = distinct !{!20, !13}
!21 = distinct !{!21, !13}
!22 = distinct !{!22, !13}
