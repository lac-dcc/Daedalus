; CHECK: ; Function Attrs: noinline nounwind optsize willreturn
; CHECK-NEXT: define internal i32 @_daedalus_slice_tricky_ladder_[[ID:[0-9]+]](i32 %0, i32 %1, i32 %2) #3 {
; CHECK-NEXT: sliceclone_BB_0:
; CHECK-NEXT:   %3 = add nsw i32 %1, %2
; CHECK-NEXT:   %4 = icmp slt i32 %2, 41
; CHECK-NEXT:   br i1 %4, label %sliceclone_BB_1, label %sliceclone_BB_6
; CHECK-EMPTY:
; CHECK-NEXT: sliceclone_BB_1:                                  ; preds = %sliceclone_BB_0
; CHECK-NEXT:   %5 = icmp slt i32 %1, 33
; CHECK-NEXT:   br i1 %5, label %sliceclone_BB_2, label %sliceclone_BB_6
; CHECK-EMPTY:
; CHECK-NEXT: sliceclone_BB_3:                                  ; preds = %sliceclone_BB_2
; CHECK-NEXT:   %6 = mul nsw i32 %3, %0
; CHECK-NEXT:   %7 = icmp slt i32 %0, 17
; CHECK-NEXT:   br i1 %7, label %sliceclone_BB_4, label %sliceclone_BB_5
; CHECK-EMPTY:
; CHECK-NEXT: sliceclone_BB_2:                                  ; preds = %sliceclone_BB_1
; CHECK-NEXT:   %8 = icmp slt i32 %0, 25
; CHECK-NEXT:   br i1 %8, label %sliceclone_BB_3, label %sliceclone_BB_6
; CHECK-EMPTY:
; CHECK-NEXT: sliceclone_BB_6:                                  ; preds = %sliceclone_BB_2, %sliceclone_BB_0, %sliceclone_BB_1
; CHECK-NEXT:   %9 = mul nsw i32 %3, %2
; CHECK-NEXT:   br label %sliceclone_BB_5
; CHECK-EMPTY:
; CHECK-NEXT: sliceclone_BB_4:                                  ; preds = %sliceclone_BB_3
; CHECK-NEXT:   br label %sliceclone_BB_9
; CHECK-EMPTY:
; CHECK-NEXT: sliceclone_BB_5:                                  ; preds = %sliceclone_BB_6, %sliceclone_BB_3
; CHECK-NEXT:   %10 = phi i32 [ %6, %sliceclone_BB_3 ], [ %9, %sliceclone_BB_6 ]
; CHECK-NEXT:   br label %sliceclone_BB_9
; CHECK-EMPTY:
; CHECK-NEXT: sliceclone_BB_9:                                  ; preds = %sliceclone_BB_5, %sliceclone_BB_4
; CHECK-NEXT:   %11 = phi i32 [ %6, %sliceclone_BB_4 ], [ %10, %sliceclone_BB_5 ]
; CHECK-NEXT:   %12 = shl i32 %11, 16
; CHECK-NEXT:   ret i32 %12
; CHECK-NEXT: }
; CHECK-EMPTY:
; CHECK-NEXT: ; Function Attrs: noinline nounwind optsize willreturn
; CHECK-NEXT: define internal i32 @_daedalus_slice_main_[[ID:[0-9]+]](ptr %0) #3 {
; CHECK-NEXT: sliceclone_BB_2:
; CHECK-NEXT:   %1 = getelementptr inbounds ptr, ptr %0, i64 1
; CHECK-NEXT:   %2 = load ptr, ptr %1, align 8, !tbaa !7
; CHECK-NEXT:   %3 = tail call i32 @atoi(ptr nocapture noundef %2) #6
; CHECK-NEXT:   %4 = getelementptr inbounds ptr, ptr %0, i64 2
; CHECK-NEXT:   %5 = load ptr, ptr %4, align 8, !tbaa !7
; CHECK-NEXT:   %6 = tail call i32 @atoi(ptr nocapture noundef %5) #6
; CHECK-NEXT:   %7 = mul nsw i32 %6, %3
; CHECK-NEXT:   ret i32 %7
; CHECK-NEXT: }